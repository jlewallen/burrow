<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1061.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="1249"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0000%" y="661" width="0.0801%" height="15" fill="rgb(246,136,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0000%" y="645" width="0.0801%" height="15" fill="rgb(249,99,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.2402%" y="565" width="0.1601%" height="15" fill="rgb(224,31,42)" fg:x="3" fg:w="2"/><text x="0.4902%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.4003%" y="565" width="0.1601%" height="15" fill="rgb(208,96,21)" fg:x="5" fg:w="2"/><text x="0.6503%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5604%" y="549" width="0.0801%" height="15" fill="rgb(237,229,7)" fg:x="7" fg:w="1"/><text x="0.8104%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6405%" y="533" width="0.0801%" height="15" fill="rgb(210,12,6)" fg:x="8" fg:w="1"/><text x="0.8905%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6405%" y="517" width="0.0801%" height="15" fill="rgb(240,9,34)" fg:x="8" fg:w="1"/><text x="0.8905%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="0.2402%" y="581" width="0.5604%" height="15" fill="rgb(211,68,37)" fg:x="3" fg:w="7"/><text x="0.4902%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="0.5604%" y="565" width="0.2402%" height="15" fill="rgb(249,138,50)" fg:x="7" fg:w="3"/><text x="0.8104%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.6405%" y="549" width="0.1601%" height="15" fill="rgb(243,185,40)" fg:x="8" fg:w="2"/><text x="0.8905%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.7206%" y="533" width="0.0801%" height="15" fill="rgb(242,92,35)" fg:x="9" fg:w="1"/><text x="0.9706%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7206%" y="517" width="0.0801%" height="15" fill="rgb(244,98,5)" fg:x="9" fg:w="1"/><text x="0.9706%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7206%" y="501" width="0.0801%" height="15" fill="rgb(228,186,29)" fg:x="9" fg:w="1"/><text x="0.9706%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="0.2402%" y="597" width="0.6405%" height="15" fill="rgb(253,7,44)" fg:x="3" fg:w="8"/><text x="0.4902%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8006%" y="581" width="0.0801%" height="15" fill="rgb(216,11,45)" fg:x="10" fg:w="1"/><text x="1.0506%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="0.0000%" y="677" width="1.0408%" height="15" fill="rgb(205,67,3)" fg:x="0" fg:w="13"/><text x="0.2500%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (12 samples, 0.96%)</title><rect x="0.0801%" y="661" width="0.9608%" height="15" fill="rgb(250,18,3)" fg:x="1" fg:w="12"/><text x="0.3301%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="0.1601%" y="645" width="0.8807%" height="15" fill="rgb(241,222,43)" fg:x="2" fg:w="11"/><text x="0.4101%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (10 samples, 0.80%)</title><rect x="0.2402%" y="629" width="0.8006%" height="15" fill="rgb(233,115,3)" fg:x="3" fg:w="10"/><text x="0.4902%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="0.2402%" y="613" width="0.8006%" height="15" fill="rgb(215,165,25)" fg:x="3" fg:w="10"/><text x="0.4902%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="0.8807%" y="597" width="0.1601%" height="15" fill="rgb(234,179,6)" fg:x="11" fg:w="2"/><text x="1.1307%" y="607.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="1.1209%" y="645" width="0.0801%" height="15" fill="rgb(215,82,23)" fg:x="14" fg:w="1"/><text x="1.3709%" y="655.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="1.2010%" y="629" width="0.0801%" height="15" fill="rgb(211,47,18)" fg:x="15" fg:w="1"/><text x="1.4510%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="1.2810%" y="597" width="0.0801%" height="15" fill="rgb(248,17,9)" fg:x="16" fg:w="1"/><text x="1.5310%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="1.2810%" y="581" width="0.0801%" height="15" fill="rgb(210,212,12)" fg:x="16" fg:w="1"/><text x="1.5310%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="1.2810%" y="565" width="0.0801%" height="15" fill="rgb(230,135,45)" fg:x="16" fg:w="1"/><text x="1.5310%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="1.2810%" y="549" width="0.0801%" height="15" fill="rgb(214,121,41)" fg:x="16" fg:w="1"/><text x="1.5310%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="1.2810%" y="533" width="0.0801%" height="15" fill="rgb(239,165,45)" fg:x="16" fg:w="1"/><text x="1.5310%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="1.2810%" y="517" width="0.0801%" height="15" fill="rgb(214,85,51)" fg:x="16" fg:w="1"/><text x="1.5310%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="1.2810%" y="501" width="0.0801%" height="15" fill="rgb(223,90,27)" fg:x="16" fg:w="1"/><text x="1.5310%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="1.2810%" y="485" width="0.0801%" height="15" fill="rgb(244,84,11)" fg:x="16" fg:w="1"/><text x="1.5310%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="1.2810%" y="469" width="0.0801%" height="15" fill="rgb(253,41,47)" fg:x="16" fg:w="1"/><text x="1.5310%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="1.2810%" y="453" width="0.0801%" height="15" fill="rgb(232,39,5)" fg:x="16" fg:w="1"/><text x="1.5310%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="1.2810%" y="437" width="0.0801%" height="15" fill="rgb(211,93,4)" fg:x="16" fg:w="1"/><text x="1.5310%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="1.2810%" y="421" width="0.0801%" height="15" fill="rgb(219,50,49)" fg:x="16" fg:w="1"/><text x="1.5310%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="1.2810%" y="405" width="0.0801%" height="15" fill="rgb(232,80,19)" fg:x="16" fg:w="1"/><text x="1.5310%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="1.2810%" y="389" width="0.0801%" height="15" fill="rgb(215,227,39)" fg:x="16" fg:w="1"/><text x="1.5310%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="1.2810%" y="373" width="0.0801%" height="15" fill="rgb(211,99,12)" fg:x="16" fg:w="1"/><text x="1.5310%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="1.2810%" y="357" width="0.0801%" height="15" fill="rgb(214,158,5)" fg:x="16" fg:w="1"/><text x="1.5310%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="1.2810%" y="341" width="0.0801%" height="15" fill="rgb(242,19,53)" fg:x="16" fg:w="1"/><text x="1.5310%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="1.2810%" y="325" width="0.0801%" height="15" fill="rgb(208,18,20)" fg:x="16" fg:w="1"/><text x="1.5310%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="1.2810%" y="309" width="0.0801%" height="15" fill="rgb(250,44,11)" fg:x="16" fg:w="1"/><text x="1.5310%" y="319.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.48%)</title><rect x="1.2810%" y="629" width="0.4804%" height="15" fill="rgb(238,159,13)" fg:x="16" fg:w="6"/><text x="1.5310%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="1.2810%" y="613" width="0.4804%" height="15" fill="rgb(231,74,18)" fg:x="16" fg:w="6"/><text x="1.5310%" y="623.50"></text></g><g><title>libloading::os::unix::Library::open (5 samples, 0.40%)</title><rect x="1.3611%" y="597" width="0.4003%" height="15" fill="rgb(229,219,45)" fg:x="17" fg:w="5"/><text x="1.6111%" y="607.50"></text></g><g><title>dlopen (5 samples, 0.40%)</title><rect x="1.3611%" y="581" width="0.4003%" height="15" fill="rgb(210,221,1)" fg:x="17" fg:w="5"/><text x="1.6111%" y="591.50"></text></g><g><title>_dl_catch_error (5 samples, 0.40%)</title><rect x="1.3611%" y="565" width="0.4003%" height="15" fill="rgb(209,60,51)" fg:x="17" fg:w="5"/><text x="1.6111%" y="575.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="1.3611%" y="549" width="0.4003%" height="15" fill="rgb(252,97,34)" fg:x="17" fg:w="5"/><text x="1.6111%" y="559.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="1.3611%" y="533" width="0.4003%" height="15" fill="rgb(243,211,37)" fg:x="17" fg:w="5"/><text x="1.6111%" y="543.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="1.3611%" y="517" width="0.4003%" height="15" fill="rgb(210,229,37)" fg:x="17" fg:w="5"/><text x="1.6111%" y="527.50"></text></g><g><title>engine::session::Session::initialize (8 samples, 0.64%)</title><rect x="1.2010%" y="645" width="0.6405%" height="15" fill="rgb(220,208,43)" fg:x="15" fg:w="8"/><text x="1.4510%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="1.7614%" y="629" width="0.0801%" height="15" fill="rgb(218,118,50)" fg:x="22" fg:w="1"/><text x="2.0114%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="1.7614%" y="613" width="0.0801%" height="15" fill="rgb(254,169,52)" fg:x="22" fg:w="1"/><text x="2.0114%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="1.7614%" y="597" width="0.0801%" height="15" fill="rgb(221,214,37)" fg:x="22" fg:w="1"/><text x="2.0114%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (11 samples, 0.88%)</title><rect x="1.0408%" y="677" width="0.8807%" height="15" fill="rgb(254,186,32)" fg:x="13" fg:w="11"/><text x="1.2908%" y="687.50"></text></g><g><title>engine::session::Session::new (11 samples, 0.88%)</title><rect x="1.0408%" y="661" width="0.8807%" height="15" fill="rgb(215,144,43)" fg:x="13" fg:w="11"/><text x="1.2908%" y="671.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="1.8415%" y="645" width="0.0801%" height="15" fill="rgb(252,21,46)" fg:x="23" fg:w="1"/><text x="2.0915%" y="655.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="1.8415%" y="629" width="0.0801%" height="15" fill="rgb(207,166,46)" fg:x="23" fg:w="1"/><text x="2.0915%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="1.8415%" y="613" width="0.0801%" height="15" fill="rgb(253,37,49)" fg:x="23" fg:w="1"/><text x="2.0915%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="1.8415%" y="597" width="0.0801%" height="15" fill="rgb(222,97,20)" fg:x="23" fg:w="1"/><text x="2.0915%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="1.8415%" y="581" width="0.0801%" height="15" fill="rgb(244,181,26)" fg:x="23" fg:w="1"/><text x="2.0915%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="1.8415%" y="565" width="0.0801%" height="15" fill="rgb(241,22,29)" fg:x="23" fg:w="1"/><text x="2.0915%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="1.9215%" y="645" width="0.0801%" height="15" fill="rgb(206,200,43)" fg:x="24" fg:w="1"/><text x="2.1715%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="2.0016%" y="549" width="0.3203%" height="15" fill="rgb(226,224,43)" fg:x="25" fg:w="4"/><text x="2.2516%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="2.0016%" y="533" width="0.3203%" height="15" fill="rgb(253,129,28)" fg:x="25" fg:w="4"/><text x="2.2516%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="2.0817%" y="517" width="0.2402%" height="15" fill="rgb(252,99,33)" fg:x="26" fg:w="3"/><text x="2.3317%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="2.1617%" y="501" width="0.1601%" height="15" fill="rgb(208,123,45)" fg:x="27" fg:w="2"/><text x="2.4117%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="2.0016%" y="565" width="0.4003%" height="15" fill="rgb(251,106,12)" fg:x="25" fg:w="5"/><text x="2.2516%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="2.3219%" y="549" width="0.0801%" height="15" fill="rgb(240,209,35)" fg:x="29" fg:w="1"/><text x="2.5719%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="2.4019%" y="549" width="0.1601%" height="15" fill="rgb(214,52,50)" fg:x="30" fg:w="2"/><text x="2.6519%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="2.4820%" y="533" width="0.0801%" height="15" fill="rgb(234,119,4)" fg:x="31" fg:w="1"/><text x="2.7320%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="2.4820%" y="517" width="0.0801%" height="15" fill="rgb(228,181,36)" fg:x="31" fg:w="1"/><text x="2.7320%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.4820%" y="501" width="0.0801%" height="15" fill="rgb(213,171,42)" fg:x="31" fg:w="1"/><text x="2.7320%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.4820%" y="485" width="0.0801%" height="15" fill="rgb(239,14,41)" fg:x="31" fg:w="1"/><text x="2.7320%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.4820%" y="469" width="0.0801%" height="15" fill="rgb(239,111,46)" fg:x="31" fg:w="1"/><text x="2.7320%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.4820%" y="453" width="0.0801%" height="15" fill="rgb(214,72,7)" fg:x="31" fg:w="1"/><text x="2.7320%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="2.5620%" y="533" width="0.0801%" height="15" fill="rgb(221,114,1)" fg:x="32" fg:w="1"/><text x="2.8120%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="2.5620%" y="517" width="0.0801%" height="15" fill="rgb(213,143,14)" fg:x="32" fg:w="1"/><text x="2.8120%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="2.5620%" y="501" width="0.0801%" height="15" fill="rgb(220,221,53)" fg:x="32" fg:w="1"/><text x="2.8120%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="2.6421%" y="533" width="0.0801%" height="15" fill="rgb(236,189,27)" fg:x="33" fg:w="1"/><text x="2.8921%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="2.6421%" y="517" width="0.0801%" height="15" fill="rgb(252,139,49)" fg:x="33" fg:w="1"/><text x="2.8921%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="2.7222%" y="485" width="0.1601%" height="15" fill="rgb(231,158,33)" fg:x="34" fg:w="2"/><text x="2.9722%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="2.5620%" y="549" width="0.4804%" height="15" fill="rgb(207,201,15)" fg:x="32" fg:w="6"/><text x="2.8120%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="2.7222%" y="533" width="0.3203%" height="15" fill="rgb(218,43,48)" fg:x="34" fg:w="4"/><text x="2.9722%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="2.7222%" y="517" width="0.3203%" height="15" fill="rgb(244,63,52)" fg:x="34" fg:w="4"/><text x="2.9722%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="2.7222%" y="501" width="0.3203%" height="15" fill="rgb(236,60,17)" fg:x="34" fg:w="4"/><text x="2.9722%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="2.8823%" y="485" width="0.1601%" height="15" fill="rgb(205,206,29)" fg:x="36" fg:w="2"/><text x="3.1323%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="2.9624%" y="469" width="0.0801%" height="15" fill="rgb(205,209,35)" fg:x="37" fg:w="1"/><text x="3.2124%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.9624%" y="453" width="0.0801%" height="15" fill="rgb(227,112,14)" fg:x="37" fg:w="1"/><text x="3.2124%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="2.0016%" y="581" width="1.2810%" height="15" fill="rgb(248,151,9)" fg:x="25" fg:w="16"/><text x="2.2516%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="2.4019%" y="565" width="0.8807%" height="15" fill="rgb(247,45,40)" fg:x="30" fg:w="11"/><text x="2.6519%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="3.0424%" y="549" width="0.2402%" height="15" fill="rgb(232,185,16)" fg:x="38" fg:w="3"/><text x="3.2924%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="3.0424%" y="533" width="0.2402%" height="15" fill="rgb(215,45,44)" fg:x="38" fg:w="3"/><text x="3.2924%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="3.0424%" y="517" width="0.2402%" height="15" fill="rgb(206,69,32)" fg:x="38" fg:w="3"/><text x="3.2924%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="3.0424%" y="501" width="0.2402%" height="15" fill="rgb(233,98,50)" fg:x="38" fg:w="3"/><text x="3.2924%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.2026%" y="485" width="0.0801%" height="15" fill="rgb(232,217,52)" fg:x="40" fg:w="1"/><text x="3.4526%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.2026%" y="469" width="0.0801%" height="15" fill="rgb(250,42,51)" fg:x="40" fg:w="1"/><text x="3.4526%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2826%" y="533" width="0.0801%" height="15" fill="rgb(241,200,26)" fg:x="41" fg:w="1"/><text x="3.5326%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3627%" y="517" width="0.0801%" height="15" fill="rgb(207,10,32)" fg:x="42" fg:w="1"/><text x="3.6127%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.4428%" y="517" width="0.0801%" height="15" fill="rgb(214,63,15)" fg:x="43" fg:w="1"/><text x="3.6928%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5228%" y="501" width="0.0801%" height="15" fill="rgb(234,176,14)" fg:x="44" fg:w="1"/><text x="3.7728%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.6029%" y="501" width="0.0801%" height="15" fill="rgb(226,104,52)" fg:x="45" fg:w="1"/><text x="3.8529%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6029%" y="485" width="0.0801%" height="15" fill="rgb(211,222,1)" fg:x="45" fg:w="1"/><text x="3.8529%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7630%" y="469" width="0.0801%" height="15" fill="rgb(237,7,3)" fg:x="47" fg:w="1"/><text x="4.0130%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.8431%" y="469" width="0.0801%" height="15" fill="rgb(218,143,7)" fg:x="48" fg:w="1"/><text x="4.0931%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8431%" y="453" width="0.0801%" height="15" fill="rgb(208,25,22)" fg:x="48" fg:w="1"/><text x="4.0931%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="3.2826%" y="581" width="0.8006%" height="15" fill="rgb(228,127,16)" fg:x="41" fg:w="10"/><text x="3.5326%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="3.2826%" y="565" width="0.8006%" height="15" fill="rgb(237,86,27)" fg:x="41" fg:w="10"/><text x="3.5326%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="3.2826%" y="549" width="0.8006%" height="15" fill="rgb(207,125,19)" fg:x="41" fg:w="10"/><text x="3.5326%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="3.3627%" y="533" width="0.7206%" height="15" fill="rgb(243,195,0)" fg:x="42" fg:w="9"/><text x="3.6127%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="3.5228%" y="517" width="0.5604%" height="15" fill="rgb(230,95,18)" fg:x="44" fg:w="7"/><text x="3.7728%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="3.6829%" y="501" width="0.4003%" height="15" fill="rgb(232,157,21)" fg:x="46" fg:w="5"/><text x="3.9329%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="3.6829%" y="485" width="0.4003%" height="15" fill="rgb(212,120,50)" fg:x="46" fg:w="5"/><text x="3.9329%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="3.9231%" y="469" width="0.1601%" height="15" fill="rgb(222,204,44)" fg:x="49" fg:w="2"/><text x="4.1731%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.9231%" y="453" width="0.1601%" height="15" fill="rgb(236,6,33)" fg:x="49" fg:w="2"/><text x="4.1731%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0032%" y="437" width="0.0801%" height="15" fill="rgb(247,11,38)" fg:x="50" fg:w="1"/><text x="4.2532%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="4.0833%" y="565" width="0.0801%" height="15" fill="rgb(215,111,0)" fg:x="51" fg:w="1"/><text x="4.3333%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0833%" y="549" width="0.0801%" height="15" fill="rgb(211,65,46)" fg:x="51" fg:w="1"/><text x="4.3333%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.2434%" y="533" width="0.0801%" height="15" fill="rgb(216,5,12)" fg:x="53" fg:w="1"/><text x="4.4934%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="4.3235%" y="533" width="0.0801%" height="15" fill="rgb(226,7,2)" fg:x="54" fg:w="1"/><text x="4.5735%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="4.3235%" y="517" width="0.0801%" height="15" fill="rgb(242,116,12)" fg:x="54" fg:w="1"/><text x="4.5735%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.3235%" y="501" width="0.0801%" height="15" fill="rgb(249,209,7)" fg:x="54" fg:w="1"/><text x="4.5735%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.4836%" y="485" width="0.0801%" height="15" fill="rgb(232,73,17)" fg:x="56" fg:w="1"/><text x="4.7336%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.4836%" y="469" width="0.0801%" height="15" fill="rgb(214,13,32)" fg:x="56" fg:w="1"/><text x="4.7336%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.5637%" y="485" width="0.0801%" height="15" fill="rgb(221,125,10)" fg:x="57" fg:w="1"/><text x="4.8137%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="4.5637%" y="469" width="0.0801%" height="15" fill="rgb(246,7,44)" fg:x="57" fg:w="1"/><text x="4.8137%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.6437%" y="453" width="0.0801%" height="15" fill="rgb(239,18,35)" fg:x="58" fg:w="1"/><text x="4.8937%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.6437%" y="437" width="0.0801%" height="15" fill="rgb(250,222,16)" fg:x="58" fg:w="1"/><text x="4.8937%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.6437%" y="421" width="0.0801%" height="15" fill="rgb(219,100,8)" fg:x="58" fg:w="1"/><text x="4.8937%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.7238%" y="405" width="0.0801%" height="15" fill="rgb(240,62,13)" fg:x="59" fg:w="1"/><text x="4.9738%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.8839%" y="389" width="0.0801%" height="15" fill="rgb(253,194,2)" fg:x="61" fg:w="1"/><text x="5.1339%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.8839%" y="373" width="0.0801%" height="15" fill="rgb(235,58,31)" fg:x="61" fg:w="1"/><text x="5.1339%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.8839%" y="357" width="0.0801%" height="15" fill="rgb(231,37,11)" fg:x="61" fg:w="1"/><text x="5.1339%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="4.4836%" y="517" width="0.6405%" height="15" fill="rgb(235,133,0)" fg:x="56" fg:w="8"/><text x="4.7336%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="4.4836%" y="501" width="0.6405%" height="15" fill="rgb(212,185,40)" fg:x="56" fg:w="8"/><text x="4.7336%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="4.6437%" y="485" width="0.4804%" height="15" fill="rgb(216,68,42)" fg:x="58" fg:w="6"/><text x="4.8937%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="4.6437%" y="469" width="0.4804%" height="15" fill="rgb(239,81,4)" fg:x="58" fg:w="6"/><text x="4.8937%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="4.7238%" y="453" width="0.4003%" height="15" fill="rgb(206,86,6)" fg:x="59" fg:w="5"/><text x="4.9738%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="4.7238%" y="437" width="0.4003%" height="15" fill="rgb(249,95,27)" fg:x="59" fg:w="5"/><text x="4.9738%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="4.7238%" y="421" width="0.4003%" height="15" fill="rgb(205,155,45)" fg:x="59" fg:w="5"/><text x="4.9738%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="4.8038%" y="405" width="0.3203%" height="15" fill="rgb(213,55,42)" fg:x="60" fg:w="4"/><text x="5.0538%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="4.9640%" y="389" width="0.1601%" height="15" fill="rgb(249,197,4)" fg:x="62" fg:w="2"/><text x="5.2140%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="5.0440%" y="373" width="0.0801%" height="15" fill="rgb(212,128,32)" fg:x="63" fg:w="1"/><text x="5.2940%" y="383.50"></text></g><g><title>engine::session::Session::flush (43 samples, 3.44%)</title><rect x="1.9215%" y="661" width="3.4428%" height="15" fill="rgb(252,47,30)" fg:x="24" fg:w="43"/><text x="2.1715%" y="671.50">eng..</text></g><g><title>engine::session::state::State::close (42 samples, 3.36%)</title><rect x="2.0016%" y="645" width="3.3627%" height="15" fill="rgb(209,79,18)" fg:x="25" fg:w="42"/><text x="2.2516%" y="655.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (42 samples, 3.36%)</title><rect x="2.0016%" y="629" width="3.3627%" height="15" fill="rgb(225,81,38)" fg:x="25" fg:w="42"/><text x="2.2516%" y="639.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (42 samples, 3.36%)</title><rect x="2.0016%" y="613" width="3.3627%" height="15" fill="rgb(205,95,16)" fg:x="25" fg:w="42"/><text x="2.2516%" y="623.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (42 samples, 3.36%)</title><rect x="2.0016%" y="597" width="3.3627%" height="15" fill="rgb(214,30,4)" fg:x="25" fg:w="42"/><text x="2.2516%" y="607.50">eng..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.28%)</title><rect x="4.0833%" y="581" width="1.2810%" height="15" fill="rgb(232,137,22)" fg:x="51" fg:w="16"/><text x="4.3333%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (15 samples, 1.20%)</title><rect x="4.1633%" y="565" width="1.2010%" height="15" fill="rgb(232,156,19)" fg:x="52" fg:w="15"/><text x="4.4133%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.20%)</title><rect x="4.1633%" y="549" width="1.2010%" height="15" fill="rgb(248,157,26)" fg:x="52" fg:w="15"/><text x="4.4133%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="4.4035%" y="533" width="0.9608%" height="15" fill="rgb(242,24,3)" fg:x="55" fg:w="12"/><text x="4.6535%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="5.1241%" y="517" width="0.2402%" height="15" fill="rgb(218,195,48)" fg:x="64" fg:w="3"/><text x="5.3741%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.2842%" y="501" width="0.0801%" height="15" fill="rgb(214,193,36)" fg:x="66" fg:w="1"/><text x="5.5342%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.2842%" y="485" width="0.0801%" height="15" fill="rgb(242,110,40)" fg:x="66" fg:w="1"/><text x="5.5342%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="5.5244%" y="613" width="0.0801%" height="15" fill="rgb(233,150,26)" fg:x="69" fg:w="1"/><text x="5.7744%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="5.5244%" y="597" width="0.0801%" height="15" fill="rgb(239,200,30)" fg:x="69" fg:w="1"/><text x="5.7744%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="5.5244%" y="581" width="0.0801%" height="15" fill="rgb(226,28,11)" fg:x="69" fg:w="1"/><text x="5.7744%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="5.5244%" y="565" width="0.0801%" height="15" fill="rgb(220,26,48)" fg:x="69" fg:w="1"/><text x="5.7744%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="5.5244%" y="549" width="0.0801%" height="15" fill="rgb(232,10,11)" fg:x="69" fg:w="1"/><text x="5.7744%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="5.5244%" y="533" width="0.0801%" height="15" fill="rgb(252,143,50)" fg:x="69" fg:w="1"/><text x="5.7744%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="5.5244%" y="517" width="0.0801%" height="15" fill="rgb(206,58,22)" fg:x="69" fg:w="1"/><text x="5.7744%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="5.5244%" y="501" width="0.0801%" height="15" fill="rgb(250,9,45)" fg:x="69" fg:w="1"/><text x="5.7744%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="5.5244%" y="485" width="0.0801%" height="15" fill="rgb(225,148,14)" fg:x="69" fg:w="1"/><text x="5.7744%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="5.5244%" y="469" width="0.0801%" height="15" fill="rgb(205,178,40)" fg:x="69" fg:w="1"/><text x="5.7744%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="5.5244%" y="453" width="0.0801%" height="15" fill="rgb(215,201,4)" fg:x="69" fg:w="1"/><text x="5.7744%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="5.5244%" y="437" width="0.0801%" height="15" fill="rgb(219,223,24)" fg:x="69" fg:w="1"/><text x="5.7744%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.5244%" y="421" width="0.0801%" height="15" fill="rgb(217,19,31)" fg:x="69" fg:w="1"/><text x="5.7744%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="5.3643%" y="645" width="0.8006%" height="15" fill="rgb(235,33,3)" fg:x="67" fg:w="10"/><text x="5.6143%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="5.5244%" y="629" width="0.6405%" height="15" fill="rgb(221,39,18)" fg:x="69" fg:w="8"/><text x="5.7744%" y="639.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="5.6045%" y="613" width="0.5604%" height="15" fill="rgb(242,162,33)" fg:x="70" fg:w="7"/><text x="5.8545%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="5.6045%" y="597" width="0.5604%" height="15" fill="rgb(233,215,28)" fg:x="70" fg:w="7"/><text x="5.8545%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="5.6045%" y="581" width="0.5604%" height="15" fill="rgb(212,117,9)" fg:x="70" fg:w="7"/><text x="5.8545%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="5.6045%" y="565" width="0.5604%" height="15" fill="rgb(237,70,47)" fg:x="70" fg:w="7"/><text x="5.8545%" y="575.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="5.6045%" y="549" width="0.5604%" height="15" fill="rgb(206,177,13)" fg:x="70" fg:w="7"/><text x="5.8545%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="6.1649%" y="629" width="0.0801%" height="15" fill="rgb(209,174,33)" fg:x="77" fg:w="1"/><text x="6.4149%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="6.2450%" y="597" width="0.0801%" height="15" fill="rgb(226,6,11)" fg:x="78" fg:w="1"/><text x="6.4950%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="6.2450%" y="581" width="0.0801%" height="15" fill="rgb(240,214,6)" fg:x="78" fg:w="1"/><text x="6.4950%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="6.2450%" y="565" width="0.0801%" height="15" fill="rgb(254,214,40)" fg:x="78" fg:w="1"/><text x="6.4950%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="6.2450%" y="549" width="0.0801%" height="15" fill="rgb(230,187,15)" fg:x="78" fg:w="1"/><text x="6.4950%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.2450%" y="533" width="0.0801%" height="15" fill="rgb(250,11,27)" fg:x="78" fg:w="1"/><text x="6.4950%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="6.2450%" y="517" width="0.0801%" height="15" fill="rgb(243,107,19)" fg:x="78" fg:w="1"/><text x="6.4950%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.2450%" y="501" width="0.0801%" height="15" fill="rgb(253,66,26)" fg:x="78" fg:w="1"/><text x="6.4950%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="6.2450%" y="485" width="0.0801%" height="15" fill="rgb(228,43,8)" fg:x="78" fg:w="1"/><text x="6.4950%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.2450%" y="469" width="0.0801%" height="15" fill="rgb(232,197,36)" fg:x="78" fg:w="1"/><text x="6.4950%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="6.2450%" y="453" width="0.0801%" height="15" fill="rgb(221,182,31)" fg:x="78" fg:w="1"/><text x="6.4950%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.2450%" y="437" width="0.0801%" height="15" fill="rgb(244,25,36)" fg:x="78" fg:w="1"/><text x="6.4950%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.3251%" y="549" width="0.0801%" height="15" fill="rgb(247,101,19)" fg:x="79" fg:w="1"/><text x="6.5751%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="6.3251%" y="533" width="0.0801%" height="15" fill="rgb(223,117,19)" fg:x="79" fg:w="1"/><text x="6.5751%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.3251%" y="517" width="0.0801%" height="15" fill="rgb(249,63,38)" fg:x="79" fg:w="1"/><text x="6.5751%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.3251%" y="501" width="0.0801%" height="15" fill="rgb(220,143,23)" fg:x="79" fg:w="1"/><text x="6.5751%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.3251%" y="485" width="0.0801%" height="15" fill="rgb(252,183,22)" fg:x="79" fg:w="1"/><text x="6.5751%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.3251%" y="469" width="0.0801%" height="15" fill="rgb(243,176,15)" fg:x="79" fg:w="1"/><text x="6.5751%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.3251%" y="453" width="0.0801%" height="15" fill="rgb(244,204,46)" fg:x="79" fg:w="1"/><text x="6.5751%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.3251%" y="437" width="0.0801%" height="15" fill="rgb(227,28,54)" fg:x="79" fg:w="1"/><text x="6.5751%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="6.2450%" y="629" width="0.2402%" height="15" fill="rgb(231,10,15)" fg:x="78" fg:w="3"/><text x="6.4950%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="6.2450%" y="613" width="0.2402%" height="15" fill="rgb(210,200,17)" fg:x="78" fg:w="3"/><text x="6.4950%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="6.3251%" y="597" width="0.1601%" height="15" fill="rgb(251,106,46)" fg:x="79" fg:w="2"/><text x="6.5751%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="6.3251%" y="581" width="0.1601%" height="15" fill="rgb(218,211,15)" fg:x="79" fg:w="2"/><text x="6.5751%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="6.3251%" y="565" width="0.1601%" height="15" fill="rgb(239,62,10)" fg:x="79" fg:w="2"/><text x="6.5751%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="6.4051%" y="549" width="0.0801%" height="15" fill="rgb(225,53,53)" fg:x="80" fg:w="1"/><text x="6.6551%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.4051%" y="533" width="0.0801%" height="15" fill="rgb(207,16,24)" fg:x="80" fg:w="1"/><text x="6.6551%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="6.4051%" y="517" width="0.0801%" height="15" fill="rgb(217,52,28)" fg:x="80" fg:w="1"/><text x="6.6551%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.4051%" y="501" width="0.0801%" height="15" fill="rgb(246,1,5)" fg:x="80" fg:w="1"/><text x="6.6551%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="6.4051%" y="485" width="0.0801%" height="15" fill="rgb(221,29,26)" fg:x="80" fg:w="1"/><text x="6.6551%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.4051%" y="469" width="0.0801%" height="15" fill="rgb(250,133,32)" fg:x="80" fg:w="1"/><text x="6.6551%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="6.4051%" y="453" width="0.0801%" height="15" fill="rgb(236,63,16)" fg:x="80" fg:w="1"/><text x="6.6551%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.4051%" y="437" width="0.0801%" height="15" fill="rgb(231,159,14)" fg:x="80" fg:w="1"/><text x="6.6551%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="6.4051%" y="421" width="0.0801%" height="15" fill="rgb(207,102,36)" fg:x="80" fg:w="1"/><text x="6.6551%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.4051%" y="405" width="0.0801%" height="15" fill="rgb(230,224,31)" fg:x="80" fg:w="1"/><text x="6.6551%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.4051%" y="389" width="0.0801%" height="15" fill="rgb(215,182,16)" fg:x="80" fg:w="1"/><text x="6.6551%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4051%" y="373" width="0.0801%" height="15" fill="rgb(226,113,2)" fg:x="80" fg:w="1"/><text x="6.6551%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="6.4852%" y="629" width="0.0801%" height="15" fill="rgb(241,18,35)" fg:x="81" fg:w="1"/><text x="6.7352%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="6.4852%" y="613" width="0.0801%" height="15" fill="rgb(240,165,44)" fg:x="81" fg:w="1"/><text x="6.7352%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="6.4852%" y="597" width="0.0801%" height="15" fill="rgb(229,130,47)" fg:x="81" fg:w="1"/><text x="6.7352%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="6.4852%" y="581" width="0.0801%" height="15" fill="rgb(223,93,7)" fg:x="81" fg:w="1"/><text x="6.7352%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="6.4852%" y="565" width="0.0801%" height="15" fill="rgb(205,180,36)" fg:x="81" fg:w="1"/><text x="6.7352%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.4852%" y="549" width="0.0801%" height="15" fill="rgb(221,103,28)" fg:x="81" fg:w="1"/><text x="6.7352%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="6.5653%" y="581" width="0.0801%" height="15" fill="rgb(212,4,3)" fg:x="82" fg:w="1"/><text x="6.8153%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.5653%" y="565" width="0.0801%" height="15" fill="rgb(209,221,53)" fg:x="82" fg:w="1"/><text x="6.8153%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (17 samples, 1.36%)</title><rect x="5.3643%" y="661" width="1.3611%" height="15" fill="rgb(233,229,52)" fg:x="67" fg:w="17"/><text x="5.6143%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="6.1649%" y="645" width="0.5604%" height="15" fill="rgb(254,127,37)" fg:x="77" fg:w="7"/><text x="6.4149%" y="655.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="6.5653%" y="629" width="0.1601%" height="15" fill="rgb(207,161,26)" fg:x="82" fg:w="2"/><text x="6.8153%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="6.5653%" y="613" width="0.1601%" height="15" fill="rgb(223,75,5)" fg:x="82" fg:w="2"/><text x="6.8153%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="6.5653%" y="597" width="0.1601%" height="15" fill="rgb(235,115,52)" fg:x="82" fg:w="2"/><text x="6.8153%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="6.6453%" y="581" width="0.0801%" height="15" fill="rgb(240,91,46)" fg:x="83" fg:w="1"/><text x="6.8953%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="6.6453%" y="565" width="0.0801%" height="15" fill="rgb(251,144,21)" fg:x="83" fg:w="1"/><text x="6.8953%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="6.6453%" y="549" width="0.0801%" height="15" fill="rgb(247,220,47)" fg:x="83" fg:w="1"/><text x="6.8953%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="6.6453%" y="533" width="0.0801%" height="15" fill="rgb(253,122,1)" fg:x="83" fg:w="1"/><text x="6.8953%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="6.6453%" y="517" width="0.0801%" height="15" fill="rgb(221,0,24)" fg:x="83" fg:w="1"/><text x="6.8953%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.6453%" y="501" width="0.0801%" height="15" fill="rgb(220,204,54)" fg:x="83" fg:w="1"/><text x="6.8953%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7254%" y="517" width="0.0801%" height="15" fill="rgb(205,96,25)" fg:x="84" fg:w="1"/><text x="6.9754%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="6.7254%" y="629" width="0.1601%" height="15" fill="rgb(247,77,20)" fg:x="84" fg:w="2"/><text x="6.9754%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="6.7254%" y="613" width="0.1601%" height="15" fill="rgb(245,151,8)" fg:x="84" fg:w="2"/><text x="6.9754%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="6.7254%" y="597" width="0.1601%" height="15" fill="rgb(242,158,39)" fg:x="84" fg:w="2"/><text x="6.9754%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="6.7254%" y="581" width="0.1601%" height="15" fill="rgb(222,214,50)" fg:x="84" fg:w="2"/><text x="6.9754%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="6.7254%" y="565" width="0.1601%" height="15" fill="rgb(229,60,39)" fg:x="84" fg:w="2"/><text x="6.9754%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="6.7254%" y="549" width="0.1601%" height="15" fill="rgb(240,148,18)" fg:x="84" fg:w="2"/><text x="6.9754%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="6.7254%" y="533" width="0.1601%" height="15" fill="rgb(215,96,11)" fg:x="84" fg:w="2"/><text x="6.9754%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="6.8054%" y="517" width="0.0801%" height="15" fill="rgb(238,162,53)" fg:x="85" fg:w="1"/><text x="7.0554%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="6.8054%" y="501" width="0.0801%" height="15" fill="rgb(214,83,18)" fg:x="85" fg:w="1"/><text x="7.0554%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="6.8054%" y="485" width="0.0801%" height="15" fill="rgb(248,117,24)" fg:x="85" fg:w="1"/><text x="7.0554%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="6.8054%" y="469" width="0.0801%" height="15" fill="rgb(238,190,6)" fg:x="85" fg:w="1"/><text x="7.0554%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="6.8054%" y="453" width="0.0801%" height="15" fill="rgb(213,51,6)" fg:x="85" fg:w="1"/><text x="7.0554%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="6.8054%" y="437" width="0.0801%" height="15" fill="rgb(212,136,1)" fg:x="85" fg:w="1"/><text x="7.0554%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="6.8054%" y="421" width="0.0801%" height="15" fill="rgb(221,192,14)" fg:x="85" fg:w="1"/><text x="7.0554%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.8054%" y="405" width="0.0801%" height="15" fill="rgb(244,38,54)" fg:x="85" fg:w="1"/><text x="7.0554%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.8054%" y="389" width="0.0801%" height="15" fill="rgb(240,45,28)" fg:x="85" fg:w="1"/><text x="7.0554%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="6.8054%" y="373" width="0.0801%" height="15" fill="rgb(240,123,12)" fg:x="85" fg:w="1"/><text x="7.0554%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="6.8054%" y="357" width="0.0801%" height="15" fill="rgb(216,14,30)" fg:x="85" fg:w="1"/><text x="7.0554%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="6.8054%" y="341" width="0.0801%" height="15" fill="rgb(212,50,24)" fg:x="85" fg:w="1"/><text x="7.0554%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="6.8054%" y="325" width="0.0801%" height="15" fill="rgb(253,229,47)" fg:x="85" fg:w="1"/><text x="7.0554%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="6.8054%" y="309" width="0.0801%" height="15" fill="rgb(214,26,17)" fg:x="85" fg:w="1"/><text x="7.0554%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="6.8054%" y="293" width="0.0801%" height="15" fill="rgb(252,60,11)" fg:x="85" fg:w="1"/><text x="7.0554%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.8054%" y="277" width="0.0801%" height="15" fill="rgb(209,59,37)" fg:x="85" fg:w="1"/><text x="7.0554%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="6.8054%" y="261" width="0.0801%" height="15" fill="rgb(228,126,53)" fg:x="85" fg:w="1"/><text x="7.0554%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.8054%" y="245" width="0.0801%" height="15" fill="rgb(233,99,2)" fg:x="85" fg:w="1"/><text x="7.0554%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="6.8054%" y="229" width="0.0801%" height="15" fill="rgb(217,106,34)" fg:x="85" fg:w="1"/><text x="7.0554%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="6.8054%" y="213" width="0.0801%" height="15" fill="rgb(222,46,19)" fg:x="85" fg:w="1"/><text x="7.0554%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="6.8054%" y="197" width="0.0801%" height="15" fill="rgb(251,87,31)" fg:x="85" fg:w="1"/><text x="7.0554%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.8054%" y="181" width="0.0801%" height="15" fill="rgb(213,70,51)" fg:x="85" fg:w="1"/><text x="7.0554%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="6.8855%" y="581" width="0.0801%" height="15" fill="rgb(229,144,18)" fg:x="86" fg:w="1"/><text x="7.1355%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="6.8855%" y="565" width="0.0801%" height="15" fill="rgb(254,60,26)" fg:x="86" fg:w="1"/><text x="7.1355%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="6.8855%" y="549" width="0.0801%" height="15" fill="rgb(243,127,51)" fg:x="86" fg:w="1"/><text x="7.1355%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="6.8855%" y="533" width="0.0801%" height="15" fill="rgb(221,51,25)" fg:x="86" fg:w="1"/><text x="7.1355%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="6.8855%" y="629" width="0.2402%" height="15" fill="rgb(205,42,7)" fg:x="86" fg:w="3"/><text x="7.1355%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="6.8855%" y="613" width="0.2402%" height="15" fill="rgb(236,177,48)" fg:x="86" fg:w="3"/><text x="7.1355%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="6.8855%" y="597" width="0.2402%" height="15" fill="rgb(226,79,31)" fg:x="86" fg:w="3"/><text x="7.1355%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="6.9656%" y="581" width="0.1601%" height="15" fill="rgb(216,170,12)" fg:x="87" fg:w="2"/><text x="7.2156%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="6.9656%" y="565" width="0.1601%" height="15" fill="rgb(208,62,51)" fg:x="87" fg:w="2"/><text x="7.2156%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="6.9656%" y="549" width="0.1601%" height="15" fill="rgb(254,129,9)" fg:x="87" fg:w="2"/><text x="7.2156%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="6.9656%" y="533" width="0.1601%" height="15" fill="rgb(243,209,31)" fg:x="87" fg:w="2"/><text x="7.2156%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="6.9656%" y="517" width="0.1601%" height="15" fill="rgb(213,159,23)" fg:x="87" fg:w="2"/><text x="7.2156%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="6.9656%" y="501" width="0.1601%" height="15" fill="rgb(249,77,39)" fg:x="87" fg:w="2"/><text x="7.2156%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="6.9656%" y="485" width="0.1601%" height="15" fill="rgb(230,13,33)" fg:x="87" fg:w="2"/><text x="7.2156%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="6.9656%" y="469" width="0.1601%" height="15" fill="rgb(215,215,7)" fg:x="87" fg:w="2"/><text x="7.2156%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.0456%" y="453" width="0.0801%" height="15" fill="rgb(222,92,25)" fg:x="88" fg:w="1"/><text x="7.2956%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0456%" y="437" width="0.0801%" height="15" fill="rgb(215,173,22)" fg:x="88" fg:w="1"/><text x="7.2956%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="7.1257%" y="613" width="0.0801%" height="15" fill="rgb(247,205,52)" fg:x="89" fg:w="1"/><text x="7.3757%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="7.1257%" y="597" width="0.0801%" height="15" fill="rgb(240,210,37)" fg:x="89" fg:w="1"/><text x="7.3757%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="7.1257%" y="629" width="0.1601%" height="15" fill="rgb(224,13,10)" fg:x="89" fg:w="2"/><text x="7.3757%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="7.2058%" y="613" width="0.0801%" height="15" fill="rgb(209,48,33)" fg:x="90" fg:w="1"/><text x="7.4558%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="7.2058%" y="597" width="0.0801%" height="15" fill="rgb(228,219,23)" fg:x="90" fg:w="1"/><text x="7.4558%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="7.2058%" y="581" width="0.0801%" height="15" fill="rgb(239,46,49)" fg:x="90" fg:w="1"/><text x="7.4558%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.2058%" y="565" width="0.0801%" height="15" fill="rgb(206,172,51)" fg:x="90" fg:w="1"/><text x="7.4558%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2058%" y="549" width="0.0801%" height="15" fill="rgb(213,212,35)" fg:x="90" fg:w="1"/><text x="7.4558%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="7.2858%" y="565" width="0.0801%" height="15" fill="rgb(252,40,27)" fg:x="91" fg:w="1"/><text x="7.5358%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2858%" y="549" width="0.0801%" height="15" fill="rgb(212,33,41)" fg:x="91" fg:w="1"/><text x="7.5358%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="6.7254%" y="661" width="0.7206%" height="15" fill="rgb(232,160,27)" fg:x="84" fg:w="9"/><text x="6.9754%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="6.7254%" y="645" width="0.7206%" height="15" fill="rgb(244,160,20)" fg:x="84" fg:w="9"/><text x="6.9754%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="7.2858%" y="629" width="0.1601%" height="15" fill="rgb(205,66,20)" fg:x="91" fg:w="2"/><text x="7.5358%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="7.2858%" y="613" width="0.1601%" height="15" fill="rgb(236,158,6)" fg:x="91" fg:w="2"/><text x="7.5358%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="7.2858%" y="597" width="0.1601%" height="15" fill="rgb(232,25,36)" fg:x="91" fg:w="2"/><text x="7.5358%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="7.2858%" y="581" width="0.1601%" height="15" fill="rgb(220,153,35)" fg:x="91" fg:w="2"/><text x="7.5358%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="7.3659%" y="565" width="0.0801%" height="15" fill="rgb(216,5,8)" fg:x="92" fg:w="1"/><text x="7.6159%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3659%" y="549" width="0.0801%" height="15" fill="rgb(240,97,3)" fg:x="92" fg:w="1"/><text x="7.6159%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.3659%" y="533" width="0.0801%" height="15" fill="rgb(220,99,26)" fg:x="92" fg:w="1"/><text x="7.6159%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3659%" y="517" width="0.0801%" height="15" fill="rgb(237,96,2)" fg:x="92" fg:w="1"/><text x="7.6159%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.3659%" y="501" width="0.0801%" height="15" fill="rgb(217,197,47)" fg:x="92" fg:w="1"/><text x="7.6159%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.3659%" y="485" width="0.0801%" height="15" fill="rgb(252,133,54)" fg:x="92" fg:w="1"/><text x="7.6159%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.3659%" y="469" width="0.0801%" height="15" fill="rgb(233,37,30)" fg:x="92" fg:w="1"/><text x="7.6159%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.3659%" y="453" width="0.0801%" height="15" fill="rgb(239,182,12)" fg:x="92" fg:w="1"/><text x="7.6159%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="7.4460%" y="661" width="0.2402%" height="15" fill="rgb(245,83,39)" fg:x="93" fg:w="3"/><text x="7.6960%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="7.4460%" y="645" width="0.2402%" height="15" fill="rgb(222,109,36)" fg:x="93" fg:w="3"/><text x="7.6960%" y="655.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="7.4460%" y="629" width="0.2402%" height="15" fill="rgb(237,95,44)" fg:x="93" fg:w="3"/><text x="7.6960%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="7.4460%" y="613" width="0.2402%" height="15" fill="rgb(216,36,54)" fg:x="93" fg:w="3"/><text x="7.6960%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="7.4460%" y="597" width="0.2402%" height="15" fill="rgb(236,164,3)" fg:x="93" fg:w="3"/><text x="7.6960%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="7.4460%" y="581" width="0.2402%" height="15" fill="rgb(223,15,21)" fg:x="93" fg:w="3"/><text x="7.6960%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="7.5260%" y="565" width="0.1601%" height="15" fill="rgb(239,191,12)" fg:x="94" fg:w="2"/><text x="7.7760%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="7.5260%" y="549" width="0.1601%" height="15" fill="rgb(231,191,37)" fg:x="94" fg:w="2"/><text x="7.7760%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="7.5260%" y="533" width="0.1601%" height="15" fill="rgb(209,155,36)" fg:x="94" fg:w="2"/><text x="7.7760%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="7.5260%" y="517" width="0.1601%" height="15" fill="rgb(216,222,49)" fg:x="94" fg:w="2"/><text x="7.7760%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="7.5260%" y="501" width="0.1601%" height="15" fill="rgb(218,181,2)" fg:x="94" fg:w="2"/><text x="7.7760%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.5260%" y="485" width="0.1601%" height="15" fill="rgb(239,125,9)" fg:x="94" fg:w="2"/><text x="7.7760%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.6061%" y="469" width="0.0801%" height="15" fill="rgb(233,103,7)" fg:x="95" fg:w="1"/><text x="7.8561%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="7.6061%" y="453" width="0.0801%" height="15" fill="rgb(209,223,5)" fg:x="95" fg:w="1"/><text x="7.8561%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="7.6061%" y="437" width="0.0801%" height="15" fill="rgb(234,71,27)" fg:x="95" fg:w="1"/><text x="7.8561%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="7.6861%" y="645" width="0.0801%" height="15" fill="rgb(251,202,16)" fg:x="96" fg:w="1"/><text x="7.9361%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="7.6861%" y="629" width="0.0801%" height="15" fill="rgb(231,180,0)" fg:x="96" fg:w="1"/><text x="7.9361%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="7.6861%" y="613" width="0.0801%" height="15" fill="rgb(223,58,28)" fg:x="96" fg:w="1"/><text x="7.9361%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="7.6861%" y="597" width="0.0801%" height="15" fill="rgb(250,34,24)" fg:x="96" fg:w="1"/><text x="7.9361%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="7.7662%" y="645" width="0.0801%" height="15" fill="rgb(235,24,16)" fg:x="97" fg:w="1"/><text x="8.0162%" y="655.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="7.7662%" y="629" width="0.0801%" height="15" fill="rgb(219,28,33)" fg:x="97" fg:w="1"/><text x="8.0162%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="7.7662%" y="613" width="0.0801%" height="15" fill="rgb(228,150,43)" fg:x="97" fg:w="1"/><text x="8.0162%" y="623.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="7.7662%" y="597" width="0.0801%" height="15" fill="rgb(221,228,36)" fg:x="97" fg:w="1"/><text x="8.0162%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.7662%" y="581" width="0.0801%" height="15" fill="rgb(232,116,17)" fg:x="97" fg:w="1"/><text x="8.0162%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="7.7662%" y="565" width="0.0801%" height="15" fill="rgb(220,110,51)" fg:x="97" fg:w="1"/><text x="8.0162%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="7.7662%" y="549" width="0.0801%" height="15" fill="rgb(207,26,25)" fg:x="97" fg:w="1"/><text x="8.0162%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="7.8463%" y="645" width="0.0801%" height="15" fill="rgb(223,58,19)" fg:x="98" fg:w="1"/><text x="8.0963%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.8463%" y="629" width="0.0801%" height="15" fill="rgb(234,125,39)" fg:x="98" fg:w="1"/><text x="8.0963%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="7.9263%" y="597" width="0.0801%" height="15" fill="rgb(241,48,36)" fg:x="99" fg:w="1"/><text x="8.1763%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="7.9263%" y="581" width="0.0801%" height="15" fill="rgb(217,148,51)" fg:x="99" fg:w="1"/><text x="8.1763%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="7.9263%" y="565" width="0.0801%" height="15" fill="rgb(247,17,25)" fg:x="99" fg:w="1"/><text x="8.1763%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="7.9263%" y="549" width="0.0801%" height="15" fill="rgb(219,89,38)" fg:x="99" fg:w="1"/><text x="8.1763%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.9263%" y="533" width="0.0801%" height="15" fill="rgb(220,145,2)" fg:x="99" fg:w="1"/><text x="8.1763%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="8.0064%" y="517" width="0.0801%" height="15" fill="rgb(244,66,47)" fg:x="100" fg:w="1"/><text x="8.2564%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.0064%" y="501" width="0.0801%" height="15" fill="rgb(226,182,5)" fg:x="100" fg:w="1"/><text x="8.2564%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.0064%" y="485" width="0.0801%" height="15" fill="rgb(211,98,20)" fg:x="100" fg:w="1"/><text x="8.2564%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.0064%" y="469" width="0.0801%" height="15" fill="rgb(217,103,52)" fg:x="100" fg:w="1"/><text x="8.2564%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.0064%" y="453" width="0.0801%" height="15" fill="rgb(208,125,52)" fg:x="100" fg:w="1"/><text x="8.2564%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.0064%" y="437" width="0.0801%" height="15" fill="rgb(244,70,13)" fg:x="100" fg:w="1"/><text x="8.2564%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="8.0064%" y="421" width="0.0801%" height="15" fill="rgb(253,124,3)" fg:x="100" fg:w="1"/><text x="8.2564%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.0064%" y="405" width="0.0801%" height="15" fill="rgb(222,145,32)" fg:x="100" fg:w="1"/><text x="8.2564%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.0064%" y="389" width="0.0801%" height="15" fill="rgb(232,183,47)" fg:x="100" fg:w="1"/><text x="8.2564%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.0064%" y="373" width="0.0801%" height="15" fill="rgb(246,226,4)" fg:x="100" fg:w="1"/><text x="8.2564%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.0064%" y="357" width="0.0801%" height="15" fill="rgb(228,185,46)" fg:x="100" fg:w="1"/><text x="8.2564%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.0064%" y="341" width="0.0801%" height="15" fill="rgb(213,196,4)" fg:x="100" fg:w="1"/><text x="8.2564%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="8.0064%" y="325" width="0.0801%" height="15" fill="rgb(212,2,45)" fg:x="100" fg:w="1"/><text x="8.2564%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="8.0865%" y="501" width="0.0801%" height="15" fill="rgb(217,145,50)" fg:x="101" fg:w="1"/><text x="8.3365%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0865%" y="485" width="0.0801%" height="15" fill="rgb(242,10,46)" fg:x="101" fg:w="1"/><text x="8.3365%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.1665%" y="485" width="0.0801%" height="15" fill="rgb(252,91,48)" fg:x="102" fg:w="1"/><text x="8.4165%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2466%" y="421" width="0.0801%" height="15" fill="rgb(216,72,13)" fg:x="103" fg:w="1"/><text x="8.4966%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2466%" y="405" width="0.0801%" height="15" fill="rgb(219,6,37)" fg:x="103" fg:w="1"/><text x="8.4966%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2466%" y="389" width="0.0801%" height="15" fill="rgb(236,185,40)" fg:x="103" fg:w="1"/><text x="8.4966%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="8.0064%" y="581" width="0.4003%" height="15" fill="rgb(208,81,48)" fg:x="100" fg:w="5"/><text x="8.2564%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="8.0064%" y="565" width="0.4003%" height="15" fill="rgb(211,42,33)" fg:x="100" fg:w="5"/><text x="8.2564%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="8.0064%" y="549" width="0.4003%" height="15" fill="rgb(211,90,39)" fg:x="100" fg:w="5"/><text x="8.2564%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="8.0064%" y="533" width="0.4003%" height="15" fill="rgb(218,136,12)" fg:x="100" fg:w="5"/><text x="8.2564%" y="543.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="8.0865%" y="517" width="0.3203%" height="15" fill="rgb(234,12,32)" fg:x="101" fg:w="4"/><text x="8.3365%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="8.1665%" y="501" width="0.2402%" height="15" fill="rgb(221,164,18)" fg:x="102" fg:w="3"/><text x="8.4165%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="8.2466%" y="485" width="0.1601%" height="15" fill="rgb(239,135,14)" fg:x="103" fg:w="2"/><text x="8.4966%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="8.2466%" y="469" width="0.1601%" height="15" fill="rgb(226,198,47)" fg:x="103" fg:w="2"/><text x="8.4966%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="8.2466%" y="453" width="0.1601%" height="15" fill="rgb(244,121,47)" fg:x="103" fg:w="2"/><text x="8.4966%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="8.2466%" y="437" width="0.1601%" height="15" fill="rgb(226,21,48)" fg:x="103" fg:w="2"/><text x="8.4966%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="8.3267%" y="421" width="0.0801%" height="15" fill="rgb(215,178,47)" fg:x="104" fg:w="1"/><text x="8.5767%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="8.3267%" y="405" width="0.0801%" height="15" fill="rgb(206,212,19)" fg:x="104" fg:w="1"/><text x="8.5767%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.3267%" y="389" width="0.0801%" height="15" fill="rgb(230,104,34)" fg:x="104" fg:w="1"/><text x="8.5767%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="8.3267%" y="373" width="0.0801%" height="15" fill="rgb(210,96,51)" fg:x="104" fg:w="1"/><text x="8.5767%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.3267%" y="357" width="0.0801%" height="15" fill="rgb(229,111,47)" fg:x="104" fg:w="1"/><text x="8.5767%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.3267%" y="341" width="0.0801%" height="15" fill="rgb(218,174,45)" fg:x="104" fg:w="1"/><text x="8.5767%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.3267%" y="325" width="0.0801%" height="15" fill="rgb(215,21,32)" fg:x="104" fg:w="1"/><text x="8.5767%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.3267%" y="309" width="0.0801%" height="15" fill="rgb(235,72,21)" fg:x="104" fg:w="1"/><text x="8.5767%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="8.4067%" y="581" width="0.0801%" height="15" fill="rgb(250,113,30)" fg:x="105" fg:w="1"/><text x="8.6567%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.4067%" y="565" width="0.0801%" height="15" fill="rgb(244,136,34)" fg:x="105" fg:w="1"/><text x="8.6567%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="8.4868%" y="517" width="0.0801%" height="15" fill="rgb(213,226,47)" fg:x="106" fg:w="1"/><text x="8.7368%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="8.4868%" y="565" width="0.1601%" height="15" fill="rgb(224,136,40)" fg:x="106" fg:w="2"/><text x="8.7368%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="8.4868%" y="549" width="0.1601%" height="15" fill="rgb(253,124,12)" fg:x="106" fg:w="2"/><text x="8.7368%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="8.4868%" y="533" width="0.1601%" height="15" fill="rgb(210,67,8)" fg:x="106" fg:w="2"/><text x="8.7368%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="8.5669%" y="517" width="0.0801%" height="15" fill="rgb(210,204,0)" fg:x="107" fg:w="1"/><text x="8.8169%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.5669%" y="501" width="0.0801%" height="15" fill="rgb(217,179,22)" fg:x="107" fg:w="1"/><text x="8.8169%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.5669%" y="485" width="0.0801%" height="15" fill="rgb(237,192,33)" fg:x="107" fg:w="1"/><text x="8.8169%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.5669%" y="469" width="0.0801%" height="15" fill="rgb(211,104,28)" fg:x="107" fg:w="1"/><text x="8.8169%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.5669%" y="453" width="0.0801%" height="15" fill="rgb(214,75,30)" fg:x="107" fg:w="1"/><text x="8.8169%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.5669%" y="437" width="0.0801%" height="15" fill="rgb(220,227,12)" fg:x="107" fg:w="1"/><text x="8.8169%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="8.5669%" y="421" width="0.0801%" height="15" fill="rgb(233,134,28)" fg:x="107" fg:w="1"/><text x="8.8169%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.5669%" y="405" width="0.0801%" height="15" fill="rgb(215,146,24)" fg:x="107" fg:w="1"/><text x="8.8169%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.5669%" y="389" width="0.0801%" height="15" fill="rgb(248,227,20)" fg:x="107" fg:w="1"/><text x="8.8169%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.5669%" y="373" width="0.0801%" height="15" fill="rgb(250,44,42)" fg:x="107" fg:w="1"/><text x="8.8169%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.6469%" y="549" width="0.0801%" height="15" fill="rgb(219,5,35)" fg:x="108" fg:w="1"/><text x="8.8969%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.88%)</title><rect x="7.9263%" y="645" width="0.8807%" height="15" fill="rgb(241,132,32)" fg:x="99" fg:w="11"/><text x="8.1763%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="7.9263%" y="629" width="0.8807%" height="15" fill="rgb(234,212,51)" fg:x="99" fg:w="11"/><text x="8.1763%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.88%)</title><rect x="7.9263%" y="613" width="0.8807%" height="15" fill="rgb(242,173,29)" fg:x="99" fg:w="11"/><text x="8.1763%" y="623.50"></text></g><g><title>plugins_core::build::Build::leads_to (10 samples, 0.80%)</title><rect x="8.0064%" y="597" width="0.8006%" height="15" fill="rgb(212,159,2)" fg:x="100" fg:w="10"/><text x="8.2564%" y="607.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="8.4868%" y="581" width="0.3203%" height="15" fill="rgb(238,165,31)" fg:x="106" fg:w="4"/><text x="8.7368%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="8.6469%" y="565" width="0.1601%" height="15" fill="rgb(241,57,36)" fg:x="108" fg:w="2"/><text x="8.8969%" y="575.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7270%" y="549" width="0.0801%" height="15" fill="rgb(249,7,4)" fg:x="109" fg:w="1"/><text x="8.9770%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.7270%" y="533" width="0.0801%" height="15" fill="rgb(250,137,44)" fg:x="109" fg:w="1"/><text x="8.9770%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7270%" y="517" width="0.0801%" height="15" fill="rgb(244,185,1)" fg:x="109" fg:w="1"/><text x="8.9770%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.7270%" y="501" width="0.0801%" height="15" fill="rgb(216,5,53)" fg:x="109" fg:w="1"/><text x="8.9770%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="8.8070%" y="645" width="0.0801%" height="15" fill="rgb(234,89,21)" fg:x="110" fg:w="1"/><text x="9.0570%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="8.8070%" y="629" width="0.0801%" height="15" fill="rgb(250,81,43)" fg:x="110" fg:w="1"/><text x="9.0570%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="8.8070%" y="613" width="0.0801%" height="15" fill="rgb(243,132,11)" fg:x="110" fg:w="1"/><text x="9.0570%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.8070%" y="597" width="0.0801%" height="15" fill="rgb(253,159,28)" fg:x="110" fg:w="1"/><text x="9.0570%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8871%" y="533" width="0.0801%" height="15" fill="rgb(237,167,34)" fg:x="111" fg:w="1"/><text x="9.1371%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8871%" y="517" width="0.0801%" height="15" fill="rgb(237,16,50)" fg:x="111" fg:w="1"/><text x="9.1371%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.8871%" y="501" width="0.0801%" height="15" fill="rgb(247,125,2)" fg:x="111" fg:w="1"/><text x="9.1371%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.8871%" y="485" width="0.0801%" height="15" fill="rgb(254,35,3)" fg:x="111" fg:w="1"/><text x="9.1371%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.8871%" y="469" width="0.0801%" height="15" fill="rgb(237,209,21)" fg:x="111" fg:w="1"/><text x="9.1371%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.8871%" y="453" width="0.0801%" height="15" fill="rgb(224,122,20)" fg:x="111" fg:w="1"/><text x="9.1371%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8871%" y="437" width="0.0801%" height="15" fill="rgb(224,11,46)" fg:x="111" fg:w="1"/><text x="9.1371%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="8.8871%" y="613" width="0.1601%" height="15" fill="rgb(248,21,33)" fg:x="111" fg:w="2"/><text x="9.1371%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="8.8871%" y="597" width="0.1601%" height="15" fill="rgb(222,144,7)" fg:x="111" fg:w="2"/><text x="9.1371%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="8.8871%" y="581" width="0.1601%" height="15" fill="rgb(205,141,37)" fg:x="111" fg:w="2"/><text x="9.1371%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="8.8871%" y="565" width="0.1601%" height="15" fill="rgb(237,130,8)" fg:x="111" fg:w="2"/><text x="9.1371%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="8.8871%" y="549" width="0.1601%" height="15" fill="rgb(209,179,39)" fg:x="111" fg:w="2"/><text x="9.1371%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="8.9672%" y="533" width="0.0801%" height="15" fill="rgb(207,52,17)" fg:x="112" fg:w="1"/><text x="9.2172%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.9672%" y="517" width="0.0801%" height="15" fill="rgb(253,158,17)" fg:x="112" fg:w="1"/><text x="9.2172%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="8.8871%" y="629" width="0.2402%" height="15" fill="rgb(208,19,53)" fg:x="111" fg:w="3"/><text x="9.1371%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.0472%" y="613" width="0.0801%" height="15" fill="rgb(233,152,13)" fg:x="113" fg:w="1"/><text x="9.2972%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="9.0472%" y="597" width="0.0801%" height="15" fill="rgb(231,84,1)" fg:x="113" fg:w="1"/><text x="9.2972%" y="607.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="9.1273%" y="613" width="0.0801%" height="15" fill="rgb(229,142,48)" fg:x="114" fg:w="1"/><text x="9.3773%" y="623.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="9.1273%" y="597" width="0.0801%" height="15" fill="rgb(248,70,29)" fg:x="114" fg:w="1"/><text x="9.3773%" y="607.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="9.1273%" y="581" width="0.0801%" height="15" fill="rgb(250,85,7)" fg:x="114" fg:w="1"/><text x="9.3773%" y="591.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="9.1273%" y="565" width="0.0801%" height="15" fill="rgb(235,140,43)" fg:x="114" fg:w="1"/><text x="9.3773%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="9.1273%" y="549" width="0.0801%" height="15" fill="rgb(216,0,5)" fg:x="114" fg:w="1"/><text x="9.3773%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="9.1273%" y="533" width="0.0801%" height="15" fill="rgb(223,167,29)" fg:x="114" fg:w="1"/><text x="9.3773%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="9.1273%" y="517" width="0.0801%" height="15" fill="rgb(229,150,33)" fg:x="114" fg:w="1"/><text x="9.3773%" y="527.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="9.1273%" y="501" width="0.0801%" height="15" fill="rgb(227,26,52)" fg:x="114" fg:w="1"/><text x="9.3773%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.2074%" y="581" width="0.0801%" height="15" fill="rgb(250,60,52)" fg:x="115" fg:w="1"/><text x="9.4574%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="9.2874%" y="565" width="0.1601%" height="15" fill="rgb(228,81,46)" fg:x="116" fg:w="2"/><text x="9.5374%" y="575.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="9.2874%" y="549" width="0.1601%" height="15" fill="rgb(225,218,31)" fg:x="116" fg:w="2"/><text x="9.5374%" y="559.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="9.3675%" y="533" width="0.0801%" height="15" fill="rgb(230,35,16)" fg:x="117" fg:w="1"/><text x="9.6175%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="9.2874%" y="581" width="0.2402%" height="15" fill="rgb(247,100,0)" fg:x="116" fg:w="3"/><text x="9.5374%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.4476%" y="565" width="0.0801%" height="15" fill="rgb(223,135,11)" fg:x="118" fg:w="1"/><text x="9.6976%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.5276%" y="517" width="0.1601%" height="15" fill="rgb(207,136,0)" fg:x="119" fg:w="2"/><text x="9.7776%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.6077%" y="501" width="0.0801%" height="15" fill="rgb(246,131,25)" fg:x="120" fg:w="1"/><text x="9.8577%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.6077%" y="485" width="0.0801%" height="15" fill="rgb(209,47,12)" fg:x="120" fg:w="1"/><text x="9.8577%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.6077%" y="469" width="0.0801%" height="15" fill="rgb(221,25,16)" fg:x="120" fg:w="1"/><text x="9.8577%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.6077%" y="453" width="0.0801%" height="15" fill="rgb(223,164,33)" fg:x="120" fg:w="1"/><text x="9.8577%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.6077%" y="437" width="0.0801%" height="15" fill="rgb(220,26,23)" fg:x="120" fg:w="1"/><text x="9.8577%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.6077%" y="421" width="0.0801%" height="15" fill="rgb(231,224,1)" fg:x="120" fg:w="1"/><text x="9.8577%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="9.5276%" y="533" width="0.2402%" height="15" fill="rgb(229,221,24)" fg:x="119" fg:w="3"/><text x="9.7776%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.6878%" y="517" width="0.0801%" height="15" fill="rgb(213,34,10)" fg:x="121" fg:w="1"/><text x="9.9378%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.7678%" y="517" width="0.0801%" height="15" fill="rgb(215,33,11)" fg:x="122" fg:w="1"/><text x="10.0178%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.8479%" y="517" width="0.0801%" height="15" fill="rgb(216,20,41)" fg:x="123" fg:w="1"/><text x="10.0979%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.8479%" y="501" width="0.0801%" height="15" fill="rgb(228,43,31)" fg:x="123" fg:w="1"/><text x="10.0979%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.8479%" y="485" width="0.0801%" height="15" fill="rgb(227,83,26)" fg:x="123" fg:w="1"/><text x="10.0979%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.8479%" y="469" width="0.0801%" height="15" fill="rgb(217,168,19)" fg:x="123" fg:w="1"/><text x="10.0979%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.9279%" y="501" width="0.0801%" height="15" fill="rgb(231,34,33)" fg:x="124" fg:w="1"/><text x="10.1779%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="9.9279%" y="485" width="0.0801%" height="15" fill="rgb(230,120,51)" fg:x="124" fg:w="1"/><text x="10.1779%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="9.9279%" y="469" width="0.0801%" height="15" fill="rgb(215,138,27)" fg:x="124" fg:w="1"/><text x="10.1779%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.9279%" y="453" width="0.0801%" height="15" fill="rgb(246,80,47)" fg:x="124" fg:w="1"/><text x="10.1779%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.9279%" y="437" width="0.0801%" height="15" fill="rgb(215,57,53)" fg:x="124" fg:w="1"/><text x="10.1779%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.0080%" y="469" width="0.0801%" height="15" fill="rgb(229,137,5)" fg:x="125" fg:w="1"/><text x="10.2580%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.0881%" y="453" width="0.0801%" height="15" fill="rgb(210,86,2)" fg:x="126" fg:w="1"/><text x="10.3381%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.1681%" y="453" width="0.0801%" height="15" fill="rgb(231,226,51)" fg:x="127" fg:w="1"/><text x="10.4181%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.1681%" y="437" width="0.0801%" height="15" fill="rgb(216,62,29)" fg:x="127" fg:w="1"/><text x="10.4181%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.1681%" y="421" width="0.0801%" height="15" fill="rgb(248,202,3)" fg:x="127" fg:w="1"/><text x="10.4181%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1681%" y="405" width="0.0801%" height="15" fill="rgb(225,181,7)" fg:x="127" fg:w="1"/><text x="10.4181%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="10.2482%" y="453" width="0.2402%" height="15" fill="rgb(247,170,54)" fg:x="128" fg:w="3"/><text x="10.4982%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.4083%" y="437" width="0.0801%" height="15" fill="rgb(236,204,33)" fg:x="130" fg:w="1"/><text x="10.6583%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.4083%" y="421" width="0.0801%" height="15" fill="rgb(216,45,30)" fg:x="130" fg:w="1"/><text x="10.6583%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.4083%" y="405" width="0.0801%" height="15" fill="rgb(213,203,16)" fg:x="130" fg:w="1"/><text x="10.6583%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="10.0881%" y="469" width="0.4804%" height="15" fill="rgb(215,46,16)" fg:x="126" fg:w="6"/><text x="10.3381%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.4884%" y="453" width="0.0801%" height="15" fill="rgb(217,162,46)" fg:x="131" fg:w="1"/><text x="10.7384%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="10.0080%" y="501" width="0.6405%" height="15" fill="rgb(224,189,20)" fg:x="125" fg:w="8"/><text x="10.2580%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="10.0080%" y="485" width="0.6405%" height="15" fill="rgb(232,35,51)" fg:x="125" fg:w="8"/><text x="10.2580%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.5685%" y="469" width="0.0801%" height="15" fill="rgb(243,221,46)" fg:x="132" fg:w="1"/><text x="10.8185%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.5685%" y="453" width="0.0801%" height="15" fill="rgb(248,16,16)" fg:x="132" fg:w="1"/><text x="10.8185%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.5685%" y="437" width="0.0801%" height="15" fill="rgb(220,168,13)" fg:x="132" fg:w="1"/><text x="10.8185%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="9.9279%" y="517" width="0.8006%" height="15" fill="rgb(243,102,39)" fg:x="124" fg:w="10"/><text x="10.1779%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.6485%" y="501" width="0.0801%" height="15" fill="rgb(245,82,32)" fg:x="133" fg:w="1"/><text x="10.8985%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.44%)</title><rect x="9.5276%" y="549" width="1.4412%" height="15" fill="rgb(230,164,19)" fg:x="119" fg:w="18"/><text x="9.7776%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="9.7678%" y="533" width="1.2010%" height="15" fill="rgb(221,9,41)" fg:x="122" fg:w="15"/><text x="10.0178%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.7286%" y="517" width="0.2402%" height="15" fill="rgb(216,93,0)" fg:x="134" fg:w="3"/><text x="10.9786%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.8887%" y="501" width="0.0801%" height="15" fill="rgb(235,113,9)" fg:x="136" fg:w="1"/><text x="11.1387%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.2090%" y="485" width="0.0801%" height="15" fill="rgb(209,224,10)" fg:x="140" fg:w="1"/><text x="11.4590%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2090%" y="469" width="0.0801%" height="15" fill="rgb(226,54,34)" fg:x="140" fg:w="1"/><text x="11.4590%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="11.2890%" y="469" width="0.0801%" height="15" fill="rgb(222,60,8)" fg:x="141" fg:w="1"/><text x="11.5390%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.2890%" y="453" width="0.0801%" height="15" fill="rgb(248,228,41)" fg:x="141" fg:w="1"/><text x="11.5390%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2890%" y="437" width="0.0801%" height="15" fill="rgb(226,31,32)" fg:x="141" fg:w="1"/><text x="11.5390%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="10.9688%" y="549" width="0.6405%" height="15" fill="rgb(242,132,49)" fg:x="137" fg:w="8"/><text x="11.2188%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="10.9688%" y="533" width="0.6405%" height="15" fill="rgb(224,194,19)" fg:x="137" fg:w="8"/><text x="11.2188%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="10.9688%" y="517" width="0.6405%" height="15" fill="rgb(232,200,51)" fg:x="137" fg:w="8"/><text x="11.2188%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="11.0488%" y="501" width="0.5604%" height="15" fill="rgb(235,60,46)" fg:x="138" fg:w="7"/><text x="11.2988%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="11.2890%" y="485" width="0.3203%" height="15" fill="rgb(240,109,52)" fg:x="141" fg:w="4"/><text x="11.5390%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="11.3691%" y="469" width="0.2402%" height="15" fill="rgb(215,78,37)" fg:x="142" fg:w="3"/><text x="11.6191%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.4492%" y="453" width="0.1601%" height="15" fill="rgb(225,141,7)" fg:x="143" fg:w="2"/><text x="11.6992%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.4492%" y="437" width="0.1601%" height="15" fill="rgb(216,102,54)" fg:x="143" fg:w="2"/><text x="11.6992%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.4492%" y="421" width="0.1601%" height="15" fill="rgb(238,143,13)" fg:x="143" fg:w="2"/><text x="11.6992%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.6093%" y="501" width="0.1601%" height="15" fill="rgb(219,45,51)" fg:x="145" fg:w="2"/><text x="11.8593%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6894%" y="485" width="0.0801%" height="15" fill="rgb(242,105,46)" fg:x="146" fg:w="1"/><text x="11.9394%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.6894%" y="469" width="0.0801%" height="15" fill="rgb(206,154,49)" fg:x="146" fg:w="1"/><text x="11.9394%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8495%" y="453" width="0.0801%" height="15" fill="rgb(239,215,4)" fg:x="148" fg:w="1"/><text x="12.0995%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8495%" y="437" width="0.0801%" height="15" fill="rgb(238,82,17)" fg:x="148" fg:w="1"/><text x="12.0995%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8495%" y="421" width="0.0801%" height="15" fill="rgb(242,49,30)" fg:x="148" fg:w="1"/><text x="12.0995%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.9295%" y="453" width="0.0801%" height="15" fill="rgb(248,5,16)" fg:x="149" fg:w="1"/><text x="12.1795%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.9295%" y="437" width="0.0801%" height="15" fill="rgb(237,138,32)" fg:x="149" fg:w="1"/><text x="12.1795%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.9295%" y="421" width="0.0801%" height="15" fill="rgb(235,79,45)" fg:x="149" fg:w="1"/><text x="12.1795%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9295%" y="405" width="0.0801%" height="15" fill="rgb(213,105,25)" fg:x="149" fg:w="1"/><text x="12.1795%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9295%" y="389" width="0.0801%" height="15" fill="rgb(251,131,7)" fg:x="149" fg:w="1"/><text x="12.1795%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9295%" y="373" width="0.0801%" height="15" fill="rgb(211,155,7)" fg:x="149" fg:w="1"/><text x="12.1795%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="12.0897%" y="437" width="0.0801%" height="15" fill="rgb(243,70,15)" fg:x="151" fg:w="1"/><text x="12.3397%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.2498%" y="421" width="0.1601%" height="15" fill="rgb(215,171,2)" fg:x="153" fg:w="2"/><text x="12.4998%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3299%" y="405" width="0.0801%" height="15" fill="rgb(244,121,35)" fg:x="154" fg:w="1"/><text x="12.5799%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3299%" y="389" width="0.0801%" height="15" fill="rgb(249,147,17)" fg:x="154" fg:w="1"/><text x="12.5799%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="12.4900%" y="373" width="0.0801%" height="15" fill="rgb(241,193,52)" fg:x="156" fg:w="1"/><text x="12.7400%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.5701%" y="357" width="0.1601%" height="15" fill="rgb(217,159,39)" fg:x="157" fg:w="2"/><text x="12.8201%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6501%" y="341" width="0.0801%" height="15" fill="rgb(248,110,0)" fg:x="158" fg:w="1"/><text x="12.9001%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6501%" y="325" width="0.0801%" height="15" fill="rgb(233,227,0)" fg:x="158" fg:w="1"/><text x="12.9001%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="12.1697%" y="437" width="0.6405%" height="15" fill="rgb(252,55,2)" fg:x="152" fg:w="8"/><text x="12.4197%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="12.4099%" y="421" width="0.4003%" height="15" fill="rgb(224,194,24)" fg:x="155" fg:w="5"/><text x="12.6599%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="12.4900%" y="405" width="0.3203%" height="15" fill="rgb(247,5,33)" fg:x="156" fg:w="4"/><text x="12.7400%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="12.4900%" y="389" width="0.3203%" height="15" fill="rgb(242,66,47)" fg:x="156" fg:w="4"/><text x="12.7400%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="12.5701%" y="373" width="0.2402%" height="15" fill="rgb(213,107,12)" fg:x="157" fg:w="3"/><text x="12.8201%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7302%" y="357" width="0.0801%" height="15" fill="rgb(206,131,1)" fg:x="159" fg:w="1"/><text x="12.9802%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.7302%" y="341" width="0.0801%" height="15" fill="rgb(214,9,36)" fg:x="159" fg:w="1"/><text x="12.9802%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7302%" y="325" width="0.0801%" height="15" fill="rgb(251,215,18)" fg:x="159" fg:w="1"/><text x="12.9802%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7302%" y="309" width="0.0801%" height="15" fill="rgb(251,64,9)" fg:x="159" fg:w="1"/><text x="12.9802%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7302%" y="293" width="0.0801%" height="15" fill="rgb(235,68,21)" fg:x="159" fg:w="1"/><text x="12.9802%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.04%)</title><rect x="11.8495%" y="469" width="1.0408%" height="15" fill="rgb(240,69,38)" fg:x="148" fg:w="13"/><text x="12.0995%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="12.0096%" y="453" width="0.8807%" height="15" fill="rgb(231,18,27)" fg:x="150" fg:w="11"/><text x="12.2596%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8102%" y="437" width="0.0801%" height="15" fill="rgb(215,154,25)" fg:x="160" fg:w="1"/><text x="13.0602%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (15 samples, 1.20%)</title><rect x="11.8495%" y="485" width="1.2010%" height="15" fill="rgb(224,33,46)" fg:x="148" fg:w="15"/><text x="12.0995%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="12.8903%" y="469" width="0.1601%" height="15" fill="rgb(248,191,53)" fg:x="161" fg:w="2"/><text x="13.1403%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.8903%" y="453" width="0.1601%" height="15" fill="rgb(231,3,37)" fg:x="161" fg:w="2"/><text x="13.1403%" y="463.50"></text></g><g><title>engine::session::Session::flush (53 samples, 4.24%)</title><rect x="8.8871%" y="645" width="4.2434%" height="15" fill="rgb(209,152,2)" fg:x="111" fg:w="53"/><text x="9.1371%" y="655.50">engin..</text></g><g><title>engine::session::Session::save_changes (50 samples, 4.00%)</title><rect x="9.1273%" y="629" width="4.0032%" height="15" fill="rgb(212,208,43)" fg:x="114" fg:w="50"/><text x="9.3773%" y="639.50">engi..</text></g><g><title>engine::session::state::State::close (49 samples, 3.92%)</title><rect x="9.2074%" y="613" width="3.9231%" height="15" fill="rgb(208,60,49)" fg:x="115" fg:w="49"/><text x="9.4574%" y="623.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (49 samples, 3.92%)</title><rect x="9.2074%" y="597" width="3.9231%" height="15" fill="rgb(245,135,6)" fg:x="115" fg:w="49"/><text x="9.4574%" y="607.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (45 samples, 3.60%)</title><rect x="9.5276%" y="581" width="3.6029%" height="15" fill="rgb(243,86,23)" fg:x="119" fg:w="45"/><text x="9.7776%" y="591.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (45 samples, 3.60%)</title><rect x="9.5276%" y="565" width="3.6029%" height="15" fill="rgb(223,7,20)" fg:x="119" fg:w="45"/><text x="9.7776%" y="575.50">engi..</text></g><g><title>kernel::model::any_entity_changes (19 samples, 1.52%)</title><rect x="11.6093%" y="549" width="1.5212%" height="15" fill="rgb(212,182,17)" fg:x="145" fg:w="19"/><text x="11.8593%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.52%)</title><rect x="11.6093%" y="533" width="1.5212%" height="15" fill="rgb(237,94,50)" fg:x="145" fg:w="19"/><text x="11.8593%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.52%)</title><rect x="11.6093%" y="517" width="1.5212%" height="15" fill="rgb(232,185,44)" fg:x="145" fg:w="19"/><text x="11.8593%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.36%)</title><rect x="11.7694%" y="501" width="1.3611%" height="15" fill="rgb(205,50,36)" fg:x="147" fg:w="17"/><text x="12.0194%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0504%" y="485" width="0.0801%" height="15" fill="rgb(252,32,32)" fg:x="163" fg:w="1"/><text x="13.3004%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0504%" y="469" width="0.0801%" height="15" fill="rgb(241,123,33)" fg:x="163" fg:w="1"/><text x="13.3004%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0504%" y="453" width="0.0801%" height="15" fill="rgb(212,140,16)" fg:x="163" fg:w="1"/><text x="13.3004%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="13.1305%" y="613" width="0.0801%" height="15" fill="rgb(247,132,5)" fg:x="164" fg:w="1"/><text x="13.3805%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.1305%" y="597" width="0.0801%" height="15" fill="rgb(209,137,38)" fg:x="164" fg:w="1"/><text x="13.3805%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.1305%" y="581" width="0.0801%" height="15" fill="rgb(248,32,42)" fg:x="164" fg:w="1"/><text x="13.3805%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.1305%" y="565" width="0.0801%" height="15" fill="rgb(216,188,40)" fg:x="164" fg:w="1"/><text x="13.3805%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.1305%" y="549" width="0.0801%" height="15" fill="rgb(209,127,53)" fg:x="164" fg:w="1"/><text x="13.3805%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.1305%" y="533" width="0.0801%" height="15" fill="rgb(254,162,9)" fg:x="164" fg:w="1"/><text x="13.3805%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.1305%" y="517" width="0.0801%" height="15" fill="rgb(219,183,10)" fg:x="164" fg:w="1"/><text x="13.3805%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.1305%" y="501" width="0.0801%" height="15" fill="rgb(217,192,21)" fg:x="164" fg:w="1"/><text x="13.3805%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.1305%" y="485" width="0.0801%" height="15" fill="rgb(251,89,27)" fg:x="164" fg:w="1"/><text x="13.3805%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.1305%" y="469" width="0.0801%" height="15" fill="rgb(253,55,28)" fg:x="164" fg:w="1"/><text x="13.3805%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="13.1305%" y="453" width="0.0801%" height="15" fill="rgb(216,159,8)" fg:x="164" fg:w="1"/><text x="13.3805%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.2106%" y="613" width="0.0801%" height="15" fill="rgb(231,228,44)" fg:x="165" fg:w="1"/><text x="13.4606%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.2106%" y="597" width="0.0801%" height="15" fill="rgb(247,34,48)" fg:x="165" fg:w="1"/><text x="13.4606%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.2106%" y="581" width="0.0801%" height="15" fill="rgb(247,222,18)" fg:x="165" fg:w="1"/><text x="13.4606%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2106%" y="565" width="0.0801%" height="15" fill="rgb(227,49,4)" fg:x="165" fg:w="1"/><text x="13.4606%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2106%" y="549" width="0.0801%" height="15" fill="rgb(219,189,53)" fg:x="165" fg:w="1"/><text x="13.4606%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.2106%" y="533" width="0.0801%" height="15" fill="rgb(241,160,53)" fg:x="165" fg:w="1"/><text x="13.4606%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.2106%" y="517" width="0.0801%" height="15" fill="rgb(227,115,4)" fg:x="165" fg:w="1"/><text x="13.4606%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.2106%" y="501" width="0.0801%" height="15" fill="rgb(215,28,28)" fg:x="165" fg:w="1"/><text x="13.4606%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.2106%" y="485" width="0.0801%" height="15" fill="rgb(237,143,40)" fg:x="165" fg:w="1"/><text x="13.4606%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.2106%" y="469" width="0.0801%" height="15" fill="rgb(205,107,24)" fg:x="165" fg:w="1"/><text x="13.4606%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.2106%" y="453" width="0.0801%" height="15" fill="rgb(209,112,35)" fg:x="165" fg:w="1"/><text x="13.4606%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.2106%" y="437" width="0.0801%" height="15" fill="rgb(206,135,5)" fg:x="165" fg:w="1"/><text x="13.4606%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.2106%" y="421" width="0.0801%" height="15" fill="rgb(227,217,38)" fg:x="165" fg:w="1"/><text x="13.4606%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.2106%" y="405" width="0.0801%" height="15" fill="rgb(205,0,41)" fg:x="165" fg:w="1"/><text x="13.4606%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.2106%" y="389" width="0.0801%" height="15" fill="rgb(220,20,40)" fg:x="165" fg:w="1"/><text x="13.4606%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.2106%" y="373" width="0.0801%" height="15" fill="rgb(216,145,3)" fg:x="165" fg:w="1"/><text x="13.4606%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2106%" y="357" width="0.0801%" height="15" fill="rgb(207,130,51)" fg:x="165" fg:w="1"/><text x="13.4606%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="13.2906%" y="613" width="0.0801%" height="15" fill="rgb(252,93,13)" fg:x="166" fg:w="1"/><text x="13.5406%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.2906%" y="597" width="0.0801%" height="15" fill="rgb(210,105,15)" fg:x="166" fg:w="1"/><text x="13.5406%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="13.2906%" y="581" width="0.0801%" height="15" fill="rgb(212,126,31)" fg:x="166" fg:w="1"/><text x="13.5406%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.2906%" y="565" width="0.0801%" height="15" fill="rgb(241,167,46)" fg:x="166" fg:w="1"/><text x="13.5406%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.3707%" y="565" width="0.0801%" height="15" fill="rgb(217,143,19)" fg:x="167" fg:w="1"/><text x="13.6207%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.3707%" y="549" width="0.0801%" height="15" fill="rgb(235,117,33)" fg:x="167" fg:w="1"/><text x="13.6207%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="533" width="0.0801%" height="15" fill="rgb(247,95,6)" fg:x="167" fg:w="1"/><text x="13.6207%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="517" width="0.0801%" height="15" fill="rgb(243,206,43)" fg:x="167" fg:w="1"/><text x="13.6207%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="501" width="0.0801%" height="15" fill="rgb(229,65,54)" fg:x="167" fg:w="1"/><text x="13.6207%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="485" width="0.0801%" height="15" fill="rgb(247,137,34)" fg:x="167" fg:w="1"/><text x="13.6207%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="469" width="0.0801%" height="15" fill="rgb(245,174,44)" fg:x="167" fg:w="1"/><text x="13.6207%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.5308%" y="501" width="0.0801%" height="15" fill="rgb(223,64,15)" fg:x="169" fg:w="1"/><text x="13.7808%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5308%" y="485" width="0.0801%" height="15" fill="rgb(243,153,36)" fg:x="169" fg:w="1"/><text x="13.7808%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5308%" y="469" width="0.0801%" height="15" fill="rgb(252,23,4)" fg:x="169" fg:w="1"/><text x="13.7808%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.5308%" y="453" width="0.0801%" height="15" fill="rgb(209,132,13)" fg:x="169" fg:w="1"/><text x="13.7808%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.5308%" y="437" width="0.0801%" height="15" fill="rgb(209,196,21)" fg:x="169" fg:w="1"/><text x="13.7808%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.5308%" y="421" width="0.0801%" height="15" fill="rgb(252,197,1)" fg:x="169" fg:w="1"/><text x="13.7808%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.5308%" y="405" width="0.0801%" height="15" fill="rgb(229,42,46)" fg:x="169" fg:w="1"/><text x="13.7808%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.5308%" y="389" width="0.0801%" height="15" fill="rgb(219,85,8)" fg:x="169" fg:w="1"/><text x="13.7808%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.5308%" y="373" width="0.0801%" height="15" fill="rgb(223,185,14)" fg:x="169" fg:w="1"/><text x="13.7808%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.5308%" y="357" width="0.0801%" height="15" fill="rgb(217,196,18)" fg:x="169" fg:w="1"/><text x="13.7808%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.5308%" y="341" width="0.0801%" height="15" fill="rgb(220,122,37)" fg:x="169" fg:w="1"/><text x="13.7808%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.5308%" y="325" width="0.0801%" height="15" fill="rgb(236,135,33)" fg:x="169" fg:w="1"/><text x="13.7808%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5308%" y="309" width="0.0801%" height="15" fill="rgb(222,86,54)" fg:x="169" fg:w="1"/><text x="13.7808%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.4508%" y="533" width="0.2402%" height="15" fill="rgb(227,42,22)" fg:x="168" fg:w="3"/><text x="13.7008%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.4508%" y="517" width="0.2402%" height="15" fill="rgb(243,101,27)" fg:x="168" fg:w="3"/><text x="13.7008%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6109%" y="501" width="0.0801%" height="15" fill="rgb(229,100,8)" fg:x="170" fg:w="1"/><text x="13.8609%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6109%" y="485" width="0.0801%" height="15" fill="rgb(252,68,10)" fg:x="170" fg:w="1"/><text x="13.8609%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.6109%" y="469" width="0.0801%" height="15" fill="rgb(219,19,31)" fg:x="170" fg:w="1"/><text x="13.8609%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.6109%" y="453" width="0.0801%" height="15" fill="rgb(246,150,44)" fg:x="170" fg:w="1"/><text x="13.8609%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.6109%" y="437" width="0.0801%" height="15" fill="rgb(211,14,39)" fg:x="170" fg:w="1"/><text x="13.8609%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.6109%" y="421" width="0.0801%" height="15" fill="rgb(221,98,29)" fg:x="170" fg:w="1"/><text x="13.8609%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.6109%" y="405" width="0.0801%" height="15" fill="rgb(221,70,26)" fg:x="170" fg:w="1"/><text x="13.8609%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="13.1305%" y="629" width="0.6405%" height="15" fill="rgb(236,146,30)" fg:x="164" fg:w="8"/><text x="13.3805%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="13.3707%" y="613" width="0.4003%" height="15" fill="rgb(226,94,34)" fg:x="167" fg:w="5"/><text x="13.6207%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="13.3707%" y="597" width="0.4003%" height="15" fill="rgb(248,132,21)" fg:x="167" fg:w="5"/><text x="13.6207%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="13.3707%" y="581" width="0.4003%" height="15" fill="rgb(245,43,50)" fg:x="167" fg:w="5"/><text x="13.6207%" y="591.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="13.4508%" y="565" width="0.3203%" height="15" fill="rgb(245,132,31)" fg:x="168" fg:w="4"/><text x="13.7008%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="13.4508%" y="549" width="0.3203%" height="15" fill="rgb(230,171,4)" fg:x="168" fg:w="4"/><text x="13.7008%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6910%" y="533" width="0.0801%" height="15" fill="rgb(235,6,45)" fg:x="171" fg:w="1"/><text x="13.9410%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6910%" y="517" width="0.0801%" height="15" fill="rgb(220,80,28)" fg:x="171" fg:w="1"/><text x="13.9410%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6910%" y="501" width="0.0801%" height="15" fill="rgb(242,171,9)" fg:x="171" fg:w="1"/><text x="13.9410%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6910%" y="485" width="0.0801%" height="15" fill="rgb(214,135,29)" fg:x="171" fg:w="1"/><text x="13.9410%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="13.6910%" y="469" width="0.0801%" height="15" fill="rgb(221,229,16)" fg:x="171" fg:w="1"/><text x="13.9410%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6910%" y="453" width="0.0801%" height="15" fill="rgb(253,59,46)" fg:x="171" fg:w="1"/><text x="13.9410%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6910%" y="437" width="0.0801%" height="15" fill="rgb(250,147,20)" fg:x="171" fg:w="1"/><text x="13.9410%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6910%" y="421" width="0.0801%" height="15" fill="rgb(236,64,48)" fg:x="171" fg:w="1"/><text x="13.9410%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="13.7710%" y="565" width="0.0801%" height="15" fill="rgb(240,37,42)" fg:x="172" fg:w="1"/><text x="14.0210%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.7710%" y="549" width="0.0801%" height="15" fill="rgb(220,41,50)" fg:x="172" fg:w="1"/><text x="14.0210%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.7710%" y="581" width="0.1601%" height="15" fill="rgb(216,51,14)" fg:x="172" fg:w="2"/><text x="14.0210%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.8511%" y="565" width="0.0801%" height="15" fill="rgb(215,83,10)" fg:x="173" fg:w="1"/><text x="14.1011%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.8511%" y="549" width="0.0801%" height="15" fill="rgb(206,144,17)" fg:x="173" fg:w="1"/><text x="14.1011%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.8511%" y="533" width="0.0801%" height="15" fill="rgb(219,196,37)" fg:x="173" fg:w="1"/><text x="14.1011%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8511%" y="517" width="0.0801%" height="15" fill="rgb(226,135,26)" fg:x="173" fg:w="1"/><text x="14.1011%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.8511%" y="501" width="0.0801%" height="15" fill="rgb(237,195,40)" fg:x="173" fg:w="1"/><text x="14.1011%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8511%" y="485" width="0.0801%" height="15" fill="rgb(228,182,42)" fg:x="173" fg:w="1"/><text x="14.1011%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.8511%" y="469" width="0.0801%" height="15" fill="rgb(224,135,50)" fg:x="173" fg:w="1"/><text x="14.1011%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8511%" y="453" width="0.0801%" height="15" fill="rgb(236,215,34)" fg:x="173" fg:w="1"/><text x="14.1011%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.8511%" y="437" width="0.0801%" height="15" fill="rgb(244,213,27)" fg:x="173" fg:w="1"/><text x="14.1011%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8511%" y="421" width="0.0801%" height="15" fill="rgb(233,37,53)" fg:x="173" fg:w="1"/><text x="14.1011%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9311%" y="533" width="0.0801%" height="15" fill="rgb(222,132,14)" fg:x="174" fg:w="1"/><text x="14.1811%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9311%" y="517" width="0.0801%" height="15" fill="rgb(219,202,29)" fg:x="174" fg:w="1"/><text x="14.1811%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9311%" y="501" width="0.0801%" height="15" fill="rgb(226,157,39)" fg:x="174" fg:w="1"/><text x="14.1811%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9311%" y="485" width="0.0801%" height="15" fill="rgb(235,213,2)" fg:x="174" fg:w="1"/><text x="14.1811%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9311%" y="469" width="0.0801%" height="15" fill="rgb(250,121,2)" fg:x="174" fg:w="1"/><text x="14.1811%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9311%" y="453" width="0.0801%" height="15" fill="rgb(206,192,33)" fg:x="174" fg:w="1"/><text x="14.1811%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9311%" y="437" width="0.0801%" height="15" fill="rgb(240,161,6)" fg:x="174" fg:w="1"/><text x="14.1811%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9311%" y="421" width="0.0801%" height="15" fill="rgb(246,53,30)" fg:x="174" fg:w="1"/><text x="14.1811%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9311%" y="405" width="0.0801%" height="15" fill="rgb(219,123,43)" fg:x="174" fg:w="1"/><text x="14.1811%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.9311%" y="389" width="0.0801%" height="15" fill="rgb(236,53,49)" fg:x="174" fg:w="1"/><text x="14.1811%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.9311%" y="373" width="0.0801%" height="15" fill="rgb(241,156,1)" fg:x="174" fg:w="1"/><text x="14.1811%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.9311%" y="357" width="0.0801%" height="15" fill="rgb(209,73,26)" fg:x="174" fg:w="1"/><text x="14.1811%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.9311%" y="341" width="0.0801%" height="15" fill="rgb(206,114,3)" fg:x="174" fg:w="1"/><text x="14.1811%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9311%" y="325" width="0.0801%" height="15" fill="rgb(230,214,9)" fg:x="174" fg:w="1"/><text x="14.1811%" y="335.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="13.7710%" y="613" width="0.3203%" height="15" fill="rgb(240,184,46)" fg:x="172" fg:w="4"/><text x="14.0210%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="13.7710%" y="597" width="0.3203%" height="15" fill="rgb(242,169,54)" fg:x="172" fg:w="4"/><text x="14.0210%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="13.9311%" y="581" width="0.1601%" height="15" fill="rgb(207,168,50)" fg:x="174" fg:w="2"/><text x="14.1811%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.9311%" y="565" width="0.1601%" height="15" fill="rgb(240,114,2)" fg:x="174" fg:w="2"/><text x="14.1811%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.9311%" y="549" width="0.1601%" height="15" fill="rgb(211,17,40)" fg:x="174" fg:w="2"/><text x="14.1811%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0112%" y="533" width="0.0801%" height="15" fill="rgb(235,97,36)" fg:x="175" fg:w="1"/><text x="14.2612%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0112%" y="517" width="0.0801%" height="15" fill="rgb(208,164,11)" fg:x="175" fg:w="1"/><text x="14.2612%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0112%" y="501" width="0.0801%" height="15" fill="rgb(242,11,17)" fg:x="175" fg:w="1"/><text x="14.2612%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0112%" y="485" width="0.0801%" height="15" fill="rgb(215,86,33)" fg:x="175" fg:w="1"/><text x="14.2612%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.0112%" y="469" width="0.0801%" height="15" fill="rgb(245,185,28)" fg:x="175" fg:w="1"/><text x="14.2612%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0112%" y="453" width="0.0801%" height="15" fill="rgb(231,89,42)" fg:x="175" fg:w="1"/><text x="14.2612%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0112%" y="437" width="0.0801%" height="15" fill="rgb(210,18,47)" fg:x="175" fg:w="1"/><text x="14.2612%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0112%" y="421" width="0.0801%" height="15" fill="rgb(214,84,8)" fg:x="175" fg:w="1"/><text x="14.2612%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="14.0913%" y="613" width="0.2402%" height="15" fill="rgb(214,222,23)" fg:x="176" fg:w="3"/><text x="14.3413%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="14.1713%" y="597" width="0.1601%" height="15" fill="rgb(213,104,21)" fg:x="177" fg:w="2"/><text x="14.4213%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.1713%" y="581" width="0.1601%" height="15" fill="rgb(238,138,6)" fg:x="177" fg:w="2"/><text x="14.4213%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.2514%" y="565" width="0.0801%" height="15" fill="rgb(205,167,50)" fg:x="178" fg:w="1"/><text x="14.5014%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.2514%" y="549" width="0.0801%" height="15" fill="rgb(230,105,27)" fg:x="178" fg:w="1"/><text x="14.5014%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.2514%" y="533" width="0.0801%" height="15" fill="rgb(222,97,48)" fg:x="178" fg:w="1"/><text x="14.5014%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.2514%" y="517" width="0.0801%" height="15" fill="rgb(222,197,14)" fg:x="178" fg:w="1"/><text x="14.5014%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.3315%" y="597" width="0.0801%" height="15" fill="rgb(210,105,47)" fg:x="179" fg:w="1"/><text x="14.5815%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4115%" y="517" width="0.0801%" height="15" fill="rgb(238,158,19)" fg:x="180" fg:w="1"/><text x="14.6615%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4115%" y="501" width="0.0801%" height="15" fill="rgb(226,176,23)" fg:x="180" fg:w="1"/><text x="14.6615%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4115%" y="485" width="0.0801%" height="15" fill="rgb(208,79,31)" fg:x="180" fg:w="1"/><text x="14.6615%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4115%" y="469" width="0.0801%" height="15" fill="rgb(221,154,21)" fg:x="180" fg:w="1"/><text x="14.6615%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.4916%" y="485" width="0.0801%" height="15" fill="rgb(213,61,41)" fg:x="181" fg:w="1"/><text x="14.7416%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.4916%" y="469" width="0.0801%" height="15" fill="rgb(215,28,33)" fg:x="181" fg:w="1"/><text x="14.7416%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="14.4115%" y="565" width="0.3203%" height="15" fill="rgb(231,139,26)" fg:x="180" fg:w="4"/><text x="14.6615%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="14.4115%" y="549" width="0.3203%" height="15" fill="rgb(232,159,16)" fg:x="180" fg:w="4"/><text x="14.6615%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.4115%" y="533" width="0.3203%" height="15" fill="rgb(233,80,10)" fg:x="180" fg:w="4"/><text x="14.6615%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.4916%" y="517" width="0.2402%" height="15" fill="rgb(208,147,29)" fg:x="181" fg:w="3"/><text x="14.7416%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.4916%" y="501" width="0.2402%" height="15" fill="rgb(213,10,12)" fg:x="181" fg:w="3"/><text x="14.7416%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.5717%" y="485" width="0.1601%" height="15" fill="rgb(231,218,13)" fg:x="182" fg:w="2"/><text x="14.8217%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.5717%" y="469" width="0.1601%" height="15" fill="rgb(244,199,44)" fg:x="182" fg:w="2"/><text x="14.8217%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.5717%" y="453" width="0.1601%" height="15" fill="rgb(240,144,53)" fg:x="182" fg:w="2"/><text x="14.8217%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.5717%" y="437" width="0.1601%" height="15" fill="rgb(223,57,28)" fg:x="182" fg:w="2"/><text x="14.8217%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.5717%" y="421" width="0.1601%" height="15" fill="rgb(213,134,38)" fg:x="182" fg:w="2"/><text x="14.8217%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.5717%" y="405" width="0.1601%" height="15" fill="rgb(251,182,42)" fg:x="182" fg:w="2"/><text x="14.8217%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.6517%" y="389" width="0.0801%" height="15" fill="rgb(229,93,13)" fg:x="183" fg:w="1"/><text x="14.9017%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="14.7318%" y="549" width="0.0801%" height="15" fill="rgb(234,171,3)" fg:x="184" fg:w="1"/><text x="14.9818%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8118%" y="485" width="0.0801%" height="15" fill="rgb(241,105,32)" fg:x="185" fg:w="1"/><text x="15.0618%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8118%" y="469" width="0.0801%" height="15" fill="rgb(221,66,3)" fg:x="185" fg:w="1"/><text x="15.0618%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8118%" y="453" width="0.0801%" height="15" fill="rgb(248,155,29)" fg:x="185" fg:w="1"/><text x="15.0618%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.8118%" y="517" width="0.1601%" height="15" fill="rgb(231,31,5)" fg:x="185" fg:w="2"/><text x="15.0618%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.8118%" y="501" width="0.1601%" height="15" fill="rgb(213,188,31)" fg:x="185" fg:w="2"/><text x="15.0618%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8919%" y="485" width="0.0801%" height="15" fill="rgb(212,104,33)" fg:x="186" fg:w="1"/><text x="15.1419%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (24 samples, 1.92%)</title><rect x="13.1305%" y="645" width="1.9215%" height="15" fill="rgb(254,77,51)" fg:x="164" fg:w="24"/><text x="13.3805%" y="655.50">p..</text></g><g><title>plugins_core::tools::set_container (16 samples, 1.28%)</title><rect x="13.7710%" y="629" width="1.2810%" height="15" fill="rgb(234,39,26)" fg:x="172" fg:w="16"/><text x="14.0210%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="14.3315%" y="613" width="0.7206%" height="15" fill="rgb(208,88,36)" fg:x="179" fg:w="9"/><text x="14.5815%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="14.4115%" y="597" width="0.6405%" height="15" fill="rgb(243,222,10)" fg:x="180" fg:w="8"/><text x="14.6615%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="14.4115%" y="581" width="0.6405%" height="15" fill="rgb(218,133,52)" fg:x="180" fg:w="8"/><text x="14.6615%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="14.7318%" y="565" width="0.3203%" height="15" fill="rgb(222,25,26)" fg:x="184" fg:w="4"/><text x="14.9818%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="14.8118%" y="549" width="0.2402%" height="15" fill="rgb(243,174,24)" fg:x="185" fg:w="3"/><text x="15.0618%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.8118%" y="533" width="0.2402%" height="15" fill="rgb(233,188,52)" fg:x="185" fg:w="3"/><text x="15.0618%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="14.9720%" y="517" width="0.0801%" height="15" fill="rgb(208,89,14)" fg:x="187" fg:w="1"/><text x="15.2220%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="15.0520%" y="645" width="0.0801%" height="15" fill="rgb(205,204,21)" fg:x="188" fg:w="1"/><text x="15.3020%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="15.0520%" y="629" width="0.0801%" height="15" fill="rgb(246,39,28)" fg:x="188" fg:w="1"/><text x="15.3020%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.0520%" y="613" width="0.0801%" height="15" fill="rgb(235,71,19)" fg:x="188" fg:w="1"/><text x="15.3020%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.0520%" y="597" width="0.0801%" height="15" fill="rgb(211,62,39)" fg:x="188" fg:w="1"/><text x="15.3020%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.0520%" y="581" width="0.0801%" height="15" fill="rgb(246,118,20)" fg:x="188" fg:w="1"/><text x="15.3020%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0520%" y="565" width="0.0801%" height="15" fill="rgb(230,82,12)" fg:x="188" fg:w="1"/><text x="15.3020%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0520%" y="549" width="0.0801%" height="15" fill="rgb(205,212,34)" fg:x="188" fg:w="1"/><text x="15.3020%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0520%" y="533" width="0.0801%" height="15" fill="rgb(239,90,1)" fg:x="188" fg:w="1"/><text x="15.3020%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0520%" y="517" width="0.0801%" height="15" fill="rgb(225,198,50)" fg:x="188" fg:w="1"/><text x="15.3020%" y="527.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="15.1321%" y="645" width="0.0801%" height="15" fill="rgb(227,208,48)" fg:x="189" fg:w="1"/><text x="15.3821%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.2122%" y="613" width="0.0801%" height="15" fill="rgb(238,134,41)" fg:x="190" fg:w="1"/><text x="15.4622%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.2122%" y="597" width="0.0801%" height="15" fill="rgb(241,58,39)" fg:x="190" fg:w="1"/><text x="15.4622%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.2122%" y="581" width="0.0801%" height="15" fill="rgb(214,126,4)" fg:x="190" fg:w="1"/><text x="15.4622%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2122%" y="565" width="0.0801%" height="15" fill="rgb(235,149,4)" fg:x="190" fg:w="1"/><text x="15.4622%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2122%" y="549" width="0.0801%" height="15" fill="rgb(236,59,29)" fg:x="190" fg:w="1"/><text x="15.4622%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2122%" y="533" width="0.0801%" height="15" fill="rgb(246,11,33)" fg:x="190" fg:w="1"/><text x="15.4622%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2122%" y="517" width="0.0801%" height="15" fill="rgb(232,180,35)" fg:x="190" fg:w="1"/><text x="15.4622%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.2122%" y="501" width="0.0801%" height="15" fill="rgb(220,35,37)" fg:x="190" fg:w="1"/><text x="15.4622%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2122%" y="485" width="0.0801%" height="15" fill="rgb(238,107,48)" fg:x="190" fg:w="1"/><text x="15.4622%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2122%" y="469" width="0.0801%" height="15" fill="rgb(205,65,21)" fg:x="190" fg:w="1"/><text x="15.4622%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2122%" y="453" width="0.0801%" height="15" fill="rgb(246,138,48)" fg:x="190" fg:w="1"/><text x="15.4622%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="15.2922%" y="613" width="0.0801%" height="15" fill="rgb(209,220,47)" fg:x="191" fg:w="1"/><text x="15.5422%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.2922%" y="597" width="0.0801%" height="15" fill="rgb(222,162,49)" fg:x="191" fg:w="1"/><text x="15.5422%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.2922%" y="581" width="0.0801%" height="15" fill="rgb(243,123,11)" fg:x="191" fg:w="1"/><text x="15.5422%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2922%" y="565" width="0.0801%" height="15" fill="rgb(221,229,41)" fg:x="191" fg:w="1"/><text x="15.5422%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.2922%" y="549" width="0.0801%" height="15" fill="rgb(216,68,4)" fg:x="191" fg:w="1"/><text x="15.5422%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2922%" y="533" width="0.0801%" height="15" fill="rgb(207,88,35)" fg:x="191" fg:w="1"/><text x="15.5422%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2922%" y="517" width="0.0801%" height="15" fill="rgb(252,2,5)" fg:x="191" fg:w="1"/><text x="15.5422%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.2922%" y="501" width="0.0801%" height="15" fill="rgb(209,173,7)" fg:x="191" fg:w="1"/><text x="15.5422%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.2922%" y="485" width="0.0801%" height="15" fill="rgb(210,198,52)" fg:x="191" fg:w="1"/><text x="15.5422%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.2922%" y="469" width="0.0801%" height="15" fill="rgb(228,152,32)" fg:x="191" fg:w="1"/><text x="15.5422%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2922%" y="453" width="0.0801%" height="15" fill="rgb(249,98,29)" fg:x="191" fg:w="1"/><text x="15.5422%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2922%" y="437" width="0.0801%" height="15" fill="rgb(205,148,48)" fg:x="191" fg:w="1"/><text x="15.5422%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.2922%" y="421" width="0.0801%" height="15" fill="rgb(236,69,34)" fg:x="191" fg:w="1"/><text x="15.5422%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.2922%" y="405" width="0.0801%" height="15" fill="rgb(220,151,41)" fg:x="191" fg:w="1"/><text x="15.5422%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.2922%" y="389" width="0.0801%" height="15" fill="rgb(254,106,24)" fg:x="191" fg:w="1"/><text x="15.5422%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.2922%" y="373" width="0.0801%" height="15" fill="rgb(210,37,48)" fg:x="191" fg:w="1"/><text x="15.5422%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2922%" y="357" width="0.0801%" height="15" fill="rgb(254,131,5)" fg:x="191" fg:w="1"/><text x="15.5422%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3723%" y="485" width="0.0801%" height="15" fill="rgb(216,55,41)" fg:x="192" fg:w="1"/><text x="15.6223%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3723%" y="469" width="0.0801%" height="15" fill="rgb(250,35,31)" fg:x="192" fg:w="1"/><text x="15.6223%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.3723%" y="453" width="0.0801%" height="15" fill="rgb(207,124,33)" fg:x="192" fg:w="1"/><text x="15.6223%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.3723%" y="437" width="0.0801%" height="15" fill="rgb(249,175,17)" fg:x="192" fg:w="1"/><text x="15.6223%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.3723%" y="421" width="0.0801%" height="15" fill="rgb(224,175,39)" fg:x="192" fg:w="1"/><text x="15.6223%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3723%" y="405" width="0.0801%" height="15" fill="rgb(208,67,49)" fg:x="192" fg:w="1"/><text x="15.6223%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3723%" y="389" width="0.0801%" height="15" fill="rgb(222,188,41)" fg:x="192" fg:w="1"/><text x="15.6223%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.3723%" y="373" width="0.0801%" height="15" fill="rgb(243,213,30)" fg:x="192" fg:w="1"/><text x="15.6223%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.3723%" y="357" width="0.0801%" height="15" fill="rgb(253,100,45)" fg:x="192" fg:w="1"/><text x="15.6223%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.3723%" y="341" width="0.0801%" height="15" fill="rgb(226,24,44)" fg:x="192" fg:w="1"/><text x="15.6223%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.3723%" y="325" width="0.0801%" height="15" fill="rgb(215,41,24)" fg:x="192" fg:w="1"/><text x="15.6223%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3723%" y="309" width="0.0801%" height="15" fill="rgb(254,53,33)" fg:x="192" fg:w="1"/><text x="15.6223%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="15.2122%" y="629" width="0.3203%" height="15" fill="rgb(242,103,10)" fg:x="190" fg:w="4"/><text x="15.4622%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="15.3723%" y="613" width="0.1601%" height="15" fill="rgb(246,29,21)" fg:x="192" fg:w="2"/><text x="15.6223%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="15.3723%" y="597" width="0.1601%" height="15" fill="rgb(251,154,1)" fg:x="192" fg:w="2"/><text x="15.6223%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="15.3723%" y="581" width="0.1601%" height="15" fill="rgb(254,212,26)" fg:x="192" fg:w="2"/><text x="15.6223%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="15.3723%" y="565" width="0.1601%" height="15" fill="rgb(251,187,46)" fg:x="192" fg:w="2"/><text x="15.6223%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.3723%" y="549" width="0.1601%" height="15" fill="rgb(224,208,14)" fg:x="192" fg:w="2"/><text x="15.6223%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3723%" y="533" width="0.1601%" height="15" fill="rgb(222,176,26)" fg:x="192" fg:w="2"/><text x="15.6223%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3723%" y="517" width="0.1601%" height="15" fill="rgb(241,219,52)" fg:x="192" fg:w="2"/><text x="15.6223%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3723%" y="501" width="0.1601%" height="15" fill="rgb(252,198,21)" fg:x="192" fg:w="2"/><text x="15.6223%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.4524%" y="485" width="0.0801%" height="15" fill="rgb(244,196,23)" fg:x="193" fg:w="1"/><text x="15.7024%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.5324%" y="389" width="0.0801%" height="15" fill="rgb(239,121,44)" fg:x="194" fg:w="1"/><text x="15.7824%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.5324%" y="373" width="0.0801%" height="15" fill="rgb(249,203,23)" fg:x="194" fg:w="1"/><text x="15.7824%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.5324%" y="357" width="0.0801%" height="15" fill="rgb(238,219,10)" fg:x="194" fg:w="1"/><text x="15.7824%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.5324%" y="341" width="0.0801%" height="15" fill="rgb(241,35,46)" fg:x="194" fg:w="1"/><text x="15.7824%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.5324%" y="325" width="0.0801%" height="15" fill="rgb(218,28,6)" fg:x="194" fg:w="1"/><text x="15.7824%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.5324%" y="309" width="0.0801%" height="15" fill="rgb(233,151,50)" fg:x="194" fg:w="1"/><text x="15.7824%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5324%" y="293" width="0.0801%" height="15" fill="rgb(208,57,8)" fg:x="194" fg:w="1"/><text x="15.7824%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.5324%" y="533" width="0.1601%" height="15" fill="rgb(253,99,10)" fg:x="194" fg:w="2"/><text x="15.7824%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.5324%" y="517" width="0.1601%" height="15" fill="rgb(237,196,49)" fg:x="194" fg:w="2"/><text x="15.7824%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.5324%" y="501" width="0.1601%" height="15" fill="rgb(209,51,3)" fg:x="194" fg:w="2"/><text x="15.7824%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.5324%" y="485" width="0.1601%" height="15" fill="rgb(238,129,10)" fg:x="194" fg:w="2"/><text x="15.7824%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="15.5324%" y="469" width="0.1601%" height="15" fill="rgb(246,201,16)" fg:x="194" fg:w="2"/><text x="15.7824%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="15.5324%" y="453" width="0.1601%" height="15" fill="rgb(250,160,20)" fg:x="194" fg:w="2"/><text x="15.7824%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="15.5324%" y="437" width="0.1601%" height="15" fill="rgb(251,107,25)" fg:x="194" fg:w="2"/><text x="15.7824%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="15.5324%" y="421" width="0.1601%" height="15" fill="rgb(212,103,39)" fg:x="194" fg:w="2"/><text x="15.7824%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="15.5324%" y="405" width="0.1601%" height="15" fill="rgb(207,9,29)" fg:x="194" fg:w="2"/><text x="15.7824%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.6125%" y="389" width="0.0801%" height="15" fill="rgb(227,84,3)" fg:x="195" fg:w="1"/><text x="15.8625%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.6125%" y="373" width="0.0801%" height="15" fill="rgb(242,194,7)" fg:x="195" fg:w="1"/><text x="15.8625%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.5324%" y="581" width="0.2402%" height="15" fill="rgb(230,40,4)" fg:x="194" fg:w="3"/><text x="15.7824%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="15.5324%" y="565" width="0.2402%" height="15" fill="rgb(243,229,33)" fg:x="194" fg:w="3"/><text x="15.7824%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.5324%" y="549" width="0.2402%" height="15" fill="rgb(240,65,24)" fg:x="194" fg:w="3"/><text x="15.7824%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6926%" y="533" width="0.0801%" height="15" fill="rgb(212,28,20)" fg:x="196" fg:w="1"/><text x="15.9426%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6926%" y="517" width="0.0801%" height="15" fill="rgb(209,72,3)" fg:x="196" fg:w="1"/><text x="15.9426%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6926%" y="501" width="0.0801%" height="15" fill="rgb(238,170,36)" fg:x="196" fg:w="1"/><text x="15.9426%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6926%" y="485" width="0.0801%" height="15" fill="rgb(236,19,38)" fg:x="196" fg:w="1"/><text x="15.9426%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.6926%" y="469" width="0.0801%" height="15" fill="rgb(230,67,43)" fg:x="196" fg:w="1"/><text x="15.9426%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6926%" y="453" width="0.0801%" height="15" fill="rgb(227,14,36)" fg:x="196" fg:w="1"/><text x="15.9426%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6926%" y="437" width="0.0801%" height="15" fill="rgb(247,171,49)" fg:x="196" fg:w="1"/><text x="15.9426%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6926%" y="421" width="0.0801%" height="15" fill="rgb(235,164,51)" fg:x="196" fg:w="1"/><text x="15.9426%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.6926%" y="405" width="0.0801%" height="15" fill="rgb(246,107,20)" fg:x="196" fg:w="1"/><text x="15.9426%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6926%" y="389" width="0.0801%" height="15" fill="rgb(226,88,18)" fg:x="196" fg:w="1"/><text x="15.9426%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="15.5324%" y="613" width="0.3203%" height="15" fill="rgb(235,136,9)" fg:x="194" fg:w="4"/><text x="15.7824%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="15.5324%" y="597" width="0.3203%" height="15" fill="rgb(209,3,34)" fg:x="194" fg:w="4"/><text x="15.7824%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="15.7726%" y="581" width="0.0801%" height="15" fill="rgb(213,38,19)" fg:x="197" fg:w="1"/><text x="16.0226%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.7726%" y="565" width="0.0801%" height="15" fill="rgb(254,24,24)" fg:x="197" fg:w="1"/><text x="16.0226%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.7726%" y="549" width="0.0801%" height="15" fill="rgb(219,122,42)" fg:x="197" fg:w="1"/><text x="16.0226%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7726%" y="533" width="0.0801%" height="15" fill="rgb(205,128,31)" fg:x="197" fg:w="1"/><text x="16.0226%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7726%" y="517" width="0.0801%" height="15" fill="rgb(212,142,0)" fg:x="197" fg:w="1"/><text x="16.0226%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.7726%" y="501" width="0.0801%" height="15" fill="rgb(211,25,35)" fg:x="197" fg:w="1"/><text x="16.0226%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7726%" y="485" width="0.0801%" height="15" fill="rgb(220,150,53)" fg:x="197" fg:w="1"/><text x="16.0226%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8527%" y="565" width="0.0801%" height="15" fill="rgb(220,30,24)" fg:x="198" fg:w="1"/><text x="16.1027%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="15.8527%" y="549" width="0.0801%" height="15" fill="rgb(218,86,23)" fg:x="198" fg:w="1"/><text x="16.1027%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.8527%" y="613" width="0.1601%" height="15" fill="rgb(206,62,27)" fg:x="198" fg:w="2"/><text x="16.1027%" y="623.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="15.8527%" y="597" width="0.1601%" height="15" fill="rgb(249,174,0)" fg:x="198" fg:w="2"/><text x="16.1027%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.8527%" y="581" width="0.1601%" height="15" fill="rgb(246,67,27)" fg:x="198" fg:w="2"/><text x="16.1027%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.9327%" y="565" width="0.0801%" height="15" fill="rgb(250,195,30)" fg:x="199" fg:w="1"/><text x="16.1827%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.9327%" y="549" width="0.0801%" height="15" fill="rgb(251,171,50)" fg:x="199" fg:w="1"/><text x="16.1827%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.9327%" y="533" width="0.0801%" height="15" fill="rgb(236,196,10)" fg:x="199" fg:w="1"/><text x="16.1827%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9327%" y="517" width="0.0801%" height="15" fill="rgb(249,228,52)" fg:x="199" fg:w="1"/><text x="16.1827%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0128%" y="469" width="0.0801%" height="15" fill="rgb(219,60,51)" fg:x="200" fg:w="1"/><text x="16.2628%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0128%" y="453" width="0.0801%" height="15" fill="rgb(240,198,24)" fg:x="200" fg:w="1"/><text x="16.2628%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0929%" y="469" width="0.0801%" height="15" fill="rgb(240,192,40)" fg:x="201" fg:w="1"/><text x="16.3429%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0929%" y="453" width="0.0801%" height="15" fill="rgb(219,118,5)" fg:x="201" fg:w="1"/><text x="16.3429%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.0929%" y="437" width="0.0801%" height="15" fill="rgb(205,202,34)" fg:x="201" fg:w="1"/><text x="16.3429%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.0929%" y="421" width="0.0801%" height="15" fill="rgb(234,153,26)" fg:x="201" fg:w="1"/><text x="16.3429%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.0929%" y="405" width="0.0801%" height="15" fill="rgb(229,26,29)" fg:x="201" fg:w="1"/><text x="16.3429%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0929%" y="389" width="0.0801%" height="15" fill="rgb(237,115,21)" fg:x="201" fg:w="1"/><text x="16.3429%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0929%" y="373" width="0.0801%" height="15" fill="rgb(252,144,15)" fg:x="201" fg:w="1"/><text x="16.3429%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.0929%" y="357" width="0.0801%" height="15" fill="rgb(232,26,13)" fg:x="201" fg:w="1"/><text x="16.3429%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.0929%" y="341" width="0.0801%" height="15" fill="rgb(206,44,19)" fg:x="201" fg:w="1"/><text x="16.3429%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.0929%" y="325" width="0.0801%" height="15" fill="rgb(249,159,2)" fg:x="201" fg:w="1"/><text x="16.3429%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.0929%" y="309" width="0.0801%" height="15" fill="rgb(231,5,32)" fg:x="201" fg:w="1"/><text x="16.3429%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0929%" y="293" width="0.0801%" height="15" fill="rgb(249,210,18)" fg:x="201" fg:w="1"/><text x="16.3429%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.0128%" y="517" width="0.2402%" height="15" fill="rgb(215,223,36)" fg:x="200" fg:w="3"/><text x="16.2628%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.0128%" y="501" width="0.2402%" height="15" fill="rgb(245,185,20)" fg:x="200" fg:w="3"/><text x="16.2628%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.0128%" y="485" width="0.2402%" height="15" fill="rgb(206,224,11)" fg:x="200" fg:w="3"/><text x="16.2628%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1729%" y="469" width="0.0801%" height="15" fill="rgb(248,73,42)" fg:x="202" fg:w="1"/><text x="16.4229%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2530%" y="517" width="0.0801%" height="15" fill="rgb(219,149,31)" fg:x="203" fg:w="1"/><text x="16.5030%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.2530%" y="501" width="0.0801%" height="15" fill="rgb(243,104,17)" fg:x="203" fg:w="1"/><text x="16.5030%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2530%" y="485" width="0.0801%" height="15" fill="rgb(244,117,33)" fg:x="203" fg:w="1"/><text x="16.5030%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2530%" y="469" width="0.0801%" height="15" fill="rgb(251,25,47)" fg:x="203" fg:w="1"/><text x="16.5030%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2530%" y="453" width="0.0801%" height="15" fill="rgb(249,70,13)" fg:x="203" fg:w="1"/><text x="16.5030%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2530%" y="437" width="0.0801%" height="15" fill="rgb(217,133,18)" fg:x="203" fg:w="1"/><text x="16.5030%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.2530%" y="421" width="0.0801%" height="15" fill="rgb(248,97,28)" fg:x="203" fg:w="1"/><text x="16.5030%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="16.0128%" y="565" width="0.4003%" height="15" fill="rgb(237,193,4)" fg:x="200" fg:w="5"/><text x="16.2628%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="16.0128%" y="549" width="0.4003%" height="15" fill="rgb(247,198,45)" fg:x="200" fg:w="5"/><text x="16.2628%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="16.0128%" y="533" width="0.4003%" height="15" fill="rgb(245,2,20)" fg:x="200" fg:w="5"/><text x="16.2628%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.3331%" y="517" width="0.0801%" height="15" fill="rgb(210,71,36)" fg:x="204" fg:w="1"/><text x="16.5831%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3331%" y="501" width="0.0801%" height="15" fill="rgb(238,114,30)" fg:x="204" fg:w="1"/><text x="16.5831%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.3331%" y="485" width="0.0801%" height="15" fill="rgb(241,200,2)" fg:x="204" fg:w="1"/><text x="16.5831%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3331%" y="469" width="0.0801%" height="15" fill="rgb(232,106,18)" fg:x="204" fg:w="1"/><text x="16.5831%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.3331%" y="453" width="0.0801%" height="15" fill="rgb(211,141,18)" fg:x="204" fg:w="1"/><text x="16.5831%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3331%" y="437" width="0.0801%" height="15" fill="rgb(224,9,9)" fg:x="204" fg:w="1"/><text x="16.5831%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.3331%" y="421" width="0.0801%" height="15" fill="rgb(249,137,46)" fg:x="204" fg:w="1"/><text x="16.5831%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3331%" y="405" width="0.0801%" height="15" fill="rgb(236,44,45)" fg:x="204" fg:w="1"/><text x="16.5831%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (110 samples, 8.81%)</title><rect x="7.6861%" y="661" width="8.8070%" height="15" fill="rgb(205,68,40)" fg:x="96" fg:w="110"/><text x="7.9361%" y="671.50">plugins_core..</text></g><g><title>plugins_core::build::Build::occupying (16 samples, 1.28%)</title><rect x="15.2122%" y="645" width="1.2810%" height="15" fill="rgb(214,198,49)" fg:x="190" fg:w="16"/><text x="15.4622%" y="655.50"></text></g><g><title>plugins_core::tools::set_occupying (12 samples, 0.96%)</title><rect x="15.5324%" y="629" width="0.9608%" height="15" fill="rgb(226,140,45)" fg:x="194" fg:w="12"/><text x="15.7824%" y="639.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (6 samples, 0.48%)</title><rect x="16.0128%" y="613" width="0.4804%" height="15" fill="rgb(209,109,20)" fg:x="200" fg:w="6"/><text x="16.2628%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="16.0128%" y="597" width="0.4804%" height="15" fill="rgb(217,33,46)" fg:x="200" fg:w="6"/><text x="16.2628%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="16.0128%" y="581" width="0.4804%" height="15" fill="rgb(232,150,33)" fg:x="200" fg:w="6"/><text x="16.2628%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="16.4131%" y="565" width="0.0801%" height="15" fill="rgb(233,76,25)" fg:x="205" fg:w="1"/><text x="16.6631%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.4131%" y="549" width="0.0801%" height="15" fill="rgb(254,219,23)" fg:x="205" fg:w="1"/><text x="16.6631%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.4131%" y="533" width="0.0801%" height="15" fill="rgb(233,108,4)" fg:x="205" fg:w="1"/><text x="16.6631%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4131%" y="517" width="0.0801%" height="15" fill="rgb(229,98,6)" fg:x="205" fg:w="1"/><text x="16.6631%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4131%" y="501" width="0.0801%" height="15" fill="rgb(217,40,27)" fg:x="205" fg:w="1"/><text x="16.6631%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.4131%" y="485" width="0.0801%" height="15" fill="rgb(221,35,43)" fg:x="205" fg:w="1"/><text x="16.6631%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.4131%" y="469" width="0.0801%" height="15" fill="rgb(212,107,11)" fg:x="205" fg:w="1"/><text x="16.6631%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.4131%" y="453" width="0.0801%" height="15" fill="rgb(245,42,44)" fg:x="205" fg:w="1"/><text x="16.6631%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.4131%" y="437" width="0.0801%" height="15" fill="rgb(209,31,12)" fg:x="205" fg:w="1"/><text x="16.6631%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.4131%" y="421" width="0.0801%" height="15" fill="rgb(210,228,54)" fg:x="205" fg:w="1"/><text x="16.6631%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.4131%" y="405" width="0.0801%" height="15" fill="rgb(241,19,33)" fg:x="205" fg:w="1"/><text x="16.6631%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.4131%" y="389" width="0.0801%" height="15" fill="rgb(229,51,27)" fg:x="205" fg:w="1"/><text x="16.6631%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.4131%" y="373" width="0.0801%" height="15" fill="rgb(214,167,49)" fg:x="205" fg:w="1"/><text x="16.6631%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.4131%" y="357" width="0.0801%" height="15" fill="rgb(248,140,47)" fg:x="205" fg:w="1"/><text x="16.6631%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.4131%" y="341" width="0.0801%" height="15" fill="rgb(228,6,51)" fg:x="205" fg:w="1"/><text x="16.6631%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.4131%" y="325" width="0.0801%" height="15" fill="rgb(242,44,53)" fg:x="205" fg:w="1"/><text x="16.6631%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4131%" y="309" width="0.0801%" height="15" fill="rgb(249,90,50)" fg:x="205" fg:w="1"/><text x="16.6631%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.4932%" y="613" width="0.0801%" height="15" fill="rgb(222,84,19)" fg:x="206" fg:w="1"/><text x="16.7432%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.4932%" y="597" width="0.0801%" height="15" fill="rgb(214,140,12)" fg:x="206" fg:w="1"/><text x="16.7432%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.4932%" y="581" width="0.0801%" height="15" fill="rgb(210,20,43)" fg:x="206" fg:w="1"/><text x="16.7432%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.5733%" y="533" width="0.0801%" height="15" fill="rgb(243,1,40)" fg:x="207" fg:w="1"/><text x="16.8233%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.5733%" y="517" width="0.0801%" height="15" fill="rgb(224,102,26)" fg:x="207" fg:w="1"/><text x="16.8233%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.5733%" y="501" width="0.0801%" height="15" fill="rgb(221,179,1)" fg:x="207" fg:w="1"/><text x="16.8233%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.5733%" y="485" width="0.0801%" height="15" fill="rgb(216,209,47)" fg:x="207" fg:w="1"/><text x="16.8233%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5733%" y="469" width="0.0801%" height="15" fill="rgb(251,135,9)" fg:x="207" fg:w="1"/><text x="16.8233%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5733%" y="453" width="0.0801%" height="15" fill="rgb(242,9,36)" fg:x="207" fg:w="1"/><text x="16.8233%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.5733%" y="437" width="0.0801%" height="15" fill="rgb(249,60,37)" fg:x="207" fg:w="1"/><text x="16.8233%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.5733%" y="421" width="0.0801%" height="15" fill="rgb(230,66,45)" fg:x="207" fg:w="1"/><text x="16.8233%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.5733%" y="405" width="0.0801%" height="15" fill="rgb(216,1,47)" fg:x="207" fg:w="1"/><text x="16.8233%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.5733%" y="389" width="0.0801%" height="15" fill="rgb(235,8,23)" fg:x="207" fg:w="1"/><text x="16.8233%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.5733%" y="373" width="0.0801%" height="15" fill="rgb(225,136,11)" fg:x="207" fg:w="1"/><text x="16.8233%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.5733%" y="357" width="0.0801%" height="15" fill="rgb(228,63,44)" fg:x="207" fg:w="1"/><text x="16.8233%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.5733%" y="341" width="0.0801%" height="15" fill="rgb(240,43,52)" fg:x="207" fg:w="1"/><text x="16.8233%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.5733%" y="325" width="0.0801%" height="15" fill="rgb(217,167,36)" fg:x="207" fg:w="1"/><text x="16.8233%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.5733%" y="309" width="0.0801%" height="15" fill="rgb(250,19,6)" fg:x="207" fg:w="1"/><text x="16.8233%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="16.5733%" y="293" width="0.0801%" height="15" fill="rgb(236,60,51)" fg:x="207" fg:w="1"/><text x="16.8233%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.5733%" y="277" width="0.0801%" height="15" fill="rgb(222,217,20)" fg:x="207" fg:w="1"/><text x="16.8233%" y="287.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.5733%" y="565" width="0.1601%" height="15" fill="rgb(242,65,52)" fg:x="207" fg:w="2"/><text x="16.8233%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.5733%" y="549" width="0.1601%" height="15" fill="rgb(217,5,41)" fg:x="207" fg:w="2"/><text x="16.8233%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.6533%" y="533" width="0.0801%" height="15" fill="rgb(223,208,53)" fg:x="208" fg:w="1"/><text x="16.9033%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6533%" y="517" width="0.0801%" height="15" fill="rgb(221,104,30)" fg:x="208" fg:w="1"/><text x="16.9033%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.6533%" y="501" width="0.0801%" height="15" fill="rgb(230,210,42)" fg:x="208" fg:w="1"/><text x="16.9033%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6533%" y="485" width="0.0801%" height="15" fill="rgb(206,205,27)" fg:x="208" fg:w="1"/><text x="16.9033%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.6533%" y="469" width="0.0801%" height="15" fill="rgb(233,114,38)" fg:x="208" fg:w="1"/><text x="16.9033%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6533%" y="453" width="0.0801%" height="15" fill="rgb(216,174,36)" fg:x="208" fg:w="1"/><text x="16.9033%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.6533%" y="437" width="0.0801%" height="15" fill="rgb(211,30,9)" fg:x="208" fg:w="1"/><text x="16.9033%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6533%" y="421" width="0.0801%" height="15" fill="rgb(216,8,21)" fg:x="208" fg:w="1"/><text x="16.9033%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.6533%" y="405" width="0.0801%" height="15" fill="rgb(237,209,39)" fg:x="208" fg:w="1"/><text x="16.9033%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6533%" y="389" width="0.0801%" height="15" fill="rgb(235,111,47)" fg:x="208" fg:w="1"/><text x="16.9033%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.6533%" y="373" width="0.0801%" height="15" fill="rgb(216,139,9)" fg:x="208" fg:w="1"/><text x="16.9033%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.8135%" y="533" width="0.0801%" height="15" fill="rgb(248,185,4)" fg:x="210" fg:w="1"/><text x="17.0635%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.8135%" y="517" width="0.0801%" height="15" fill="rgb(239,185,25)" fg:x="210" fg:w="1"/><text x="17.0635%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.8135%" y="501" width="0.0801%" height="15" fill="rgb(233,207,8)" fg:x="210" fg:w="1"/><text x="17.0635%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="16.5733%" y="597" width="0.4003%" height="15" fill="rgb(249,220,24)" fg:x="207" fg:w="5"/><text x="16.8233%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="16.5733%" y="581" width="0.4003%" height="15" fill="rgb(221,50,14)" fg:x="207" fg:w="5"/><text x="16.8233%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="16.7334%" y="565" width="0.2402%" height="15" fill="rgb(227,79,42)" fg:x="209" fg:w="3"/><text x="16.9834%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="16.7334%" y="549" width="0.2402%" height="15" fill="rgb(228,218,49)" fg:x="209" fg:w="3"/><text x="16.9834%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.8935%" y="533" width="0.0801%" height="15" fill="rgb(249,18,15)" fg:x="211" fg:w="1"/><text x="17.1435%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.8935%" y="517" width="0.0801%" height="15" fill="rgb(212,84,27)" fg:x="211" fg:w="1"/><text x="17.1435%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="16.8935%" y="501" width="0.0801%" height="15" fill="rgb(207,83,24)" fg:x="211" fg:w="1"/><text x="17.1435%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.8935%" y="485" width="0.0801%" height="15" fill="rgb(219,61,7)" fg:x="211" fg:w="1"/><text x="17.1435%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.8935%" y="469" width="0.0801%" height="15" fill="rgb(211,43,29)" fg:x="211" fg:w="1"/><text x="17.1435%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.8935%" y="453" width="0.0801%" height="15" fill="rgb(243,15,23)" fg:x="211" fg:w="1"/><text x="17.1435%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.8935%" y="437" width="0.0801%" height="15" fill="rgb(217,52,28)" fg:x="211" fg:w="1"/><text x="17.1435%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.8935%" y="421" width="0.0801%" height="15" fill="rgb(210,35,6)" fg:x="211" fg:w="1"/><text x="17.1435%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="16.4932%" y="629" width="0.5604%" height="15" fill="rgb(237,187,28)" fg:x="206" fg:w="7"/><text x="16.7432%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="16.5733%" y="613" width="0.4804%" height="15" fill="rgb(231,136,24)" fg:x="207" fg:w="6"/><text x="16.8233%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="16.9736%" y="597" width="0.0801%" height="15" fill="rgb(205,176,52)" fg:x="212" fg:w="1"/><text x="17.2236%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9736%" y="581" width="0.0801%" height="15" fill="rgb(218,65,12)" fg:x="212" fg:w="1"/><text x="17.2236%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.64%)</title><rect x="16.4932%" y="661" width="0.6405%" height="15" fill="rgb(234,101,21)" fg:x="206" fg:w="8"/><text x="16.7432%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="16.4932%" y="645" width="0.6405%" height="15" fill="rgb(206,13,20)" fg:x="206" fg:w="8"/><text x="16.7432%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="17.0536%" y="629" width="0.0801%" height="15" fill="rgb(236,89,44)" fg:x="213" fg:w="1"/><text x="17.3036%" y="639.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="17.0536%" y="613" width="0.0801%" height="15" fill="rgb(225,52,17)" fg:x="213" fg:w="1"/><text x="17.3036%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="17.0536%" y="597" width="0.0801%" height="15" fill="rgb(214,27,25)" fg:x="213" fg:w="1"/><text x="17.3036%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.2138%" y="629" width="0.0801%" height="15" fill="rgb(240,141,35)" fg:x="215" fg:w="1"/><text x="17.4638%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="17.2138%" y="613" width="0.0801%" height="15" fill="rgb(216,126,3)" fg:x="215" fg:w="1"/><text x="17.4638%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.2138%" y="597" width="0.0801%" height="15" fill="rgb(249,196,23)" fg:x="215" fg:w="1"/><text x="17.4638%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2138%" y="581" width="0.0801%" height="15" fill="rgb(215,185,43)" fg:x="215" fg:w="1"/><text x="17.4638%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2138%" y="565" width="0.0801%" height="15" fill="rgb(208,194,36)" fg:x="215" fg:w="1"/><text x="17.4638%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2138%" y="549" width="0.0801%" height="15" fill="rgb(245,182,12)" fg:x="215" fg:w="1"/><text x="17.4638%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2138%" y="533" width="0.0801%" height="15" fill="rgb(244,222,52)" fg:x="215" fg:w="1"/><text x="17.4638%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2938%" y="629" width="0.0801%" height="15" fill="rgb(236,222,51)" fg:x="216" fg:w="1"/><text x="17.5438%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="17.2138%" y="645" width="0.2402%" height="15" fill="rgb(254,71,22)" fg:x="215" fg:w="3"/><text x="17.4638%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="17.3739%" y="629" width="0.0801%" height="15" fill="rgb(250,104,15)" fg:x="217" fg:w="1"/><text x="17.6239%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="17.3739%" y="613" width="0.0801%" height="15" fill="rgb(229,223,46)" fg:x="217" fg:w="1"/><text x="17.6239%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="17.4540%" y="645" width="0.1601%" height="15" fill="rgb(209,129,18)" fg:x="218" fg:w="2"/><text x="17.7040%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="17.5340%" y="629" width="0.0801%" height="15" fill="rgb(224,160,1)" fg:x="219" fg:w="1"/><text x="17.7840%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="17.5340%" y="613" width="0.0801%" height="15" fill="rgb(237,112,21)" fg:x="219" fg:w="1"/><text x="17.7840%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5340%" y="597" width="0.0801%" height="15" fill="rgb(215,198,53)" fg:x="219" fg:w="1"/><text x="17.7840%" y="607.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (198 samples, 15.85%)</title><rect x="1.9215%" y="677" width="15.8527%" height="15" fill="rgb(218,227,35)" fg:x="24" fg:w="198"/><text x="2.1715%" y="687.50">&lt;tests::HoldingKeyInVess..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.64%)</title><rect x="17.1337%" y="661" width="0.6405%" height="15" fill="rgb(232,121,22)" fg:x="214" fg:w="8"/><text x="17.3837%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="17.6141%" y="645" width="0.1601%" height="15" fill="rgb(235,52,54)" fg:x="220" fg:w="2"/><text x="17.8641%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="17.6141%" y="629" width="0.1601%" height="15" fill="rgb(219,21,44)" fg:x="220" fg:w="2"/><text x="17.8641%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="17.6141%" y="613" width="0.1601%" height="15" fill="rgb(221,51,43)" fg:x="220" fg:w="2"/><text x="17.8641%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.6141%" y="597" width="0.1601%" height="15" fill="rgb(225,77,42)" fg:x="220" fg:w="2"/><text x="17.8641%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6942%" y="581" width="0.0801%" height="15" fill="rgb(214,117,53)" fg:x="221" fg:w="1"/><text x="17.9442%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.6942%" y="565" width="0.0801%" height="15" fill="rgb(218,227,27)" fg:x="221" fg:w="1"/><text x="17.9442%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6942%" y="549" width="0.0801%" height="15" fill="rgb(223,214,36)" fg:x="221" fg:w="1"/><text x="17.9442%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.6942%" y="533" width="0.0801%" height="15" fill="rgb(235,21,7)" fg:x="221" fg:w="1"/><text x="17.9442%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.6942%" y="517" width="0.0801%" height="15" fill="rgb(244,216,4)" fg:x="221" fg:w="1"/><text x="17.9442%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6942%" y="501" width="0.0801%" height="15" fill="rgb(249,197,24)" fg:x="221" fg:w="1"/><text x="17.9442%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.6942%" y="485" width="0.0801%" height="15" fill="rgb(222,169,49)" fg:x="221" fg:w="1"/><text x="17.9442%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.6942%" y="469" width="0.0801%" height="15" fill="rgb(207,137,33)" fg:x="221" fg:w="1"/><text x="17.9442%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="17.7742%" y="677" width="0.0801%" height="15" fill="rgb(219,180,40)" fg:x="222" fg:w="1"/><text x="18.0242%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="17.7742%" y="661" width="0.0801%" height="15" fill="rgb(250,163,42)" fg:x="222" fg:w="1"/><text x="18.0242%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="17.7742%" y="645" width="0.0801%" height="15" fill="rgb(239,163,0)" fg:x="222" fg:w="1"/><text x="18.0242%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.7742%" y="629" width="0.0801%" height="15" fill="rgb(252,38,28)" fg:x="222" fg:w="1"/><text x="18.0242%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="17.8543%" y="661" width="0.1601%" height="15" fill="rgb(254,203,26)" fg:x="223" fg:w="2"/><text x="18.1043%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.9343%" y="645" width="0.0801%" height="15" fill="rgb(209,129,32)" fg:x="224" fg:w="1"/><text x="18.1843%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9343%" y="629" width="0.0801%" height="15" fill="rgb(207,177,52)" fg:x="224" fg:w="1"/><text x="18.1843%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.0144%" y="661" width="0.0801%" height="15" fill="rgb(230,209,36)" fg:x="225" fg:w="1"/><text x="18.2644%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.0144%" y="645" width="0.0801%" height="15" fill="rgb(238,131,0)" fg:x="225" fg:w="1"/><text x="18.2644%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.0144%" y="629" width="0.0801%" height="15" fill="rgb(218,61,31)" fg:x="225" fg:w="1"/><text x="18.2644%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.0144%" y="613" width="0.0801%" height="15" fill="rgb(232,6,53)" fg:x="225" fg:w="1"/><text x="18.2644%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.0144%" y="597" width="0.0801%" height="15" fill="rgb(254,100,32)" fg:x="225" fg:w="1"/><text x="18.2644%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="18.0144%" y="581" width="0.0801%" height="15" fill="rgb(229,194,49)" fg:x="225" fg:w="1"/><text x="18.2644%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="18.0144%" y="565" width="0.0801%" height="15" fill="rgb(206,208,39)" fg:x="225" fg:w="1"/><text x="18.2644%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.0144%" y="549" width="0.0801%" height="15" fill="rgb(246,226,14)" fg:x="225" fg:w="1"/><text x="18.2644%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.0144%" y="533" width="0.0801%" height="15" fill="rgb(226,48,32)" fg:x="225" fg:w="1"/><text x="18.2644%" y="543.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="18.0144%" y="517" width="0.0801%" height="15" fill="rgb(252,43,54)" fg:x="225" fg:w="1"/><text x="18.2644%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.0144%" y="501" width="0.0801%" height="15" fill="rgb(207,124,0)" fg:x="225" fg:w="1"/><text x="18.2644%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.0144%" y="485" width="0.0801%" height="15" fill="rgb(248,188,30)" fg:x="225" fg:w="1"/><text x="18.2644%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="18.0945%" y="629" width="0.0801%" height="15" fill="rgb(232,14,43)" fg:x="226" fg:w="1"/><text x="18.3445%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="18.0945%" y="613" width="0.0801%" height="15" fill="rgb(218,52,29)" fg:x="226" fg:w="1"/><text x="18.3445%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.0945%" y="597" width="0.0801%" height="15" fill="rgb(218,176,50)" fg:x="226" fg:w="1"/><text x="18.3445%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.0945%" y="581" width="0.0801%" height="15" fill="rgb(213,112,0)" fg:x="226" fg:w="1"/><text x="18.3445%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.0945%" y="565" width="0.0801%" height="15" fill="rgb(244,216,8)" fg:x="226" fg:w="1"/><text x="18.3445%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.0945%" y="549" width="0.0801%" height="15" fill="rgb(224,148,53)" fg:x="226" fg:w="1"/><text x="18.3445%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.0945%" y="533" width="0.0801%" height="15" fill="rgb(241,133,40)" fg:x="226" fg:w="1"/><text x="18.3445%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.0945%" y="517" width="0.0801%" height="15" fill="rgb(232,17,44)" fg:x="226" fg:w="1"/><text x="18.3445%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.0945%" y="501" width="0.0801%" height="15" fill="rgb(213,32,25)" fg:x="226" fg:w="1"/><text x="18.3445%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.0945%" y="485" width="0.0801%" height="15" fill="rgb(249,115,27)" fg:x="226" fg:w="1"/><text x="18.3445%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="18.2546%" y="581" width="0.0801%" height="15" fill="rgb(241,50,1)" fg:x="228" fg:w="1"/><text x="18.5046%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.2546%" y="565" width="0.0801%" height="15" fill="rgb(244,175,40)" fg:x="228" fg:w="1"/><text x="18.5046%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2546%" y="549" width="0.0801%" height="15" fill="rgb(230,94,34)" fg:x="228" fg:w="1"/><text x="18.5046%" y="559.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (4 samples, 0.32%)</title><rect x="18.0945%" y="645" width="0.3203%" height="15" fill="rgb(223,185,29)" fg:x="226" fg:w="4"/><text x="18.3445%" y="655.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.24%)</title><rect x="18.1745%" y="629" width="0.2402%" height="15" fill="rgb(225,193,15)" fg:x="227" fg:w="3"/><text x="18.4245%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="18.1745%" y="613" width="0.2402%" height="15" fill="rgb(252,121,38)" fg:x="227" fg:w="3"/><text x="18.4245%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.2546%" y="597" width="0.1601%" height="15" fill="rgb(232,44,12)" fg:x="228" fg:w="2"/><text x="18.5046%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3347%" y="581" width="0.0801%" height="15" fill="rgb(226,45,54)" fg:x="229" fg:w="1"/><text x="18.5847%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3347%" y="565" width="0.0801%" height="15" fill="rgb(209,67,17)" fg:x="229" fg:w="1"/><text x="18.5847%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3347%" y="549" width="0.0801%" height="15" fill="rgb(219,108,52)" fg:x="229" fg:w="1"/><text x="18.5847%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3347%" y="533" width="0.0801%" height="15" fill="rgb(216,118,19)" fg:x="229" fg:w="1"/><text x="18.5847%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3347%" y="517" width="0.0801%" height="15" fill="rgb(228,120,40)" fg:x="229" fg:w="1"/><text x="18.5847%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="18.4147%" y="645" width="0.0801%" height="15" fill="rgb(221,218,34)" fg:x="230" fg:w="1"/><text x="18.6647%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (1 samples, 0.08%)</title><rect x="18.4147%" y="629" width="0.0801%" height="15" fill="rgb(235,89,14)" fg:x="230" fg:w="1"/><text x="18.6647%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.4147%" y="613" width="0.0801%" height="15" fill="rgb(248,89,7)" fg:x="230" fg:w="1"/><text x="18.6647%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4147%" y="597" width="0.0801%" height="15" fill="rgb(212,114,34)" fg:x="230" fg:w="1"/><text x="18.6647%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.4948%" y="629" width="0.0801%" height="15" fill="rgb(246,88,32)" fg:x="231" fg:w="1"/><text x="18.7448%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="18.4948%" y="613" width="0.0801%" height="15" fill="rgb(237,135,0)" fg:x="231" fg:w="1"/><text x="18.7448%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="18.4948%" y="597" width="0.0801%" height="15" fill="rgb(220,201,54)" fg:x="231" fg:w="1"/><text x="18.7448%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="18.6549%" y="597" width="0.2402%" height="15" fill="rgb(210,142,36)" fg:x="233" fg:w="3"/><text x="18.9049%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.7350%" y="581" width="0.1601%" height="15" fill="rgb(247,189,26)" fg:x="234" fg:w="2"/><text x="18.9850%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="18.7350%" y="565" width="0.1601%" height="15" fill="rgb(223,89,24)" fg:x="234" fg:w="2"/><text x="18.9850%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="18.7350%" y="549" width="0.1601%" height="15" fill="rgb(205,90,19)" fg:x="234" fg:w="2"/><text x="18.9850%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="18.7350%" y="533" width="0.1601%" height="15" fill="rgb(234,57,40)" fg:x="234" fg:w="2"/><text x="18.9850%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.7350%" y="517" width="0.1601%" height="15" fill="rgb(213,109,10)" fg:x="234" fg:w="2"/><text x="18.9850%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.7350%" y="501" width="0.1601%" height="15" fill="rgb(214,189,23)" fg:x="234" fg:w="2"/><text x="18.9850%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="18.7350%" y="485" width="0.1601%" height="15" fill="rgb(234,200,10)" fg:x="234" fg:w="2"/><text x="18.9850%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="18.7350%" y="469" width="0.1601%" height="15" fill="rgb(221,148,16)" fg:x="234" fg:w="2"/><text x="18.9850%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="18.7350%" y="453" width="0.1601%" height="15" fill="rgb(230,115,10)" fg:x="234" fg:w="2"/><text x="18.9850%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="18.7350%" y="437" width="0.1601%" height="15" fill="rgb(220,106,42)" fg:x="234" fg:w="2"/><text x="18.9850%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.7350%" y="421" width="0.1601%" height="15" fill="rgb(225,105,39)" fg:x="234" fg:w="2"/><text x="18.9850%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.8951%" y="581" width="0.0801%" height="15" fill="rgb(211,161,38)" fg:x="236" fg:w="1"/><text x="19.1451%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.9752%" y="565" width="0.1601%" height="15" fill="rgb(213,23,19)" fg:x="237" fg:w="2"/><text x="19.2252%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.0552%" y="549" width="0.0801%" height="15" fill="rgb(240,2,33)" fg:x="238" fg:w="1"/><text x="19.3052%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.0552%" y="533" width="0.0801%" height="15" fill="rgb(221,29,45)" fg:x="238" fg:w="1"/><text x="19.3052%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.0552%" y="517" width="0.0801%" height="15" fill="rgb(242,10,19)" fg:x="238" fg:w="1"/><text x="19.3052%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.1353%" y="533" width="0.0801%" height="15" fill="rgb(250,84,37)" fg:x="239" fg:w="1"/><text x="19.3853%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="18.9752%" y="581" width="0.3203%" height="15" fill="rgb(214,136,7)" fg:x="237" fg:w="4"/><text x="19.2252%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.1353%" y="565" width="0.1601%" height="15" fill="rgb(231,189,12)" fg:x="239" fg:w="2"/><text x="19.3853%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.1353%" y="549" width="0.1601%" height="15" fill="rgb(244,40,16)" fg:x="239" fg:w="2"/><text x="19.3853%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="19.2154%" y="533" width="0.0801%" height="15" fill="rgb(217,29,15)" fg:x="240" fg:w="1"/><text x="19.4654%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.2954%" y="565" width="0.0801%" height="15" fill="rgb(235,172,33)" fg:x="241" fg:w="1"/><text x="19.5454%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.3755%" y="565" width="0.0801%" height="15" fill="rgb(206,148,28)" fg:x="242" fg:w="1"/><text x="19.6255%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.5356%" y="549" width="0.0801%" height="15" fill="rgb(251,167,37)" fg:x="244" fg:w="1"/><text x="19.7856%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.5356%" y="533" width="0.0801%" height="15" fill="rgb(229,94,52)" fg:x="244" fg:w="1"/><text x="19.7856%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.5356%" y="517" width="0.0801%" height="15" fill="rgb(216,132,9)" fg:x="244" fg:w="1"/><text x="19.7856%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.5356%" y="501" width="0.0801%" height="15" fill="rgb(208,110,29)" fg:x="244" fg:w="1"/><text x="19.7856%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.5356%" y="485" width="0.0801%" height="15" fill="rgb(241,23,8)" fg:x="244" fg:w="1"/><text x="19.7856%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="19.6157%" y="549" width="0.2402%" height="15" fill="rgb(208,26,35)" fg:x="245" fg:w="3"/><text x="19.8657%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.6958%" y="533" width="0.1601%" height="15" fill="rgb(242,165,34)" fg:x="246" fg:w="2"/><text x="19.9458%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.7758%" y="517" width="0.0801%" height="15" fill="rgb(222,222,33)" fg:x="247" fg:w="1"/><text x="20.0258%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7758%" y="501" width="0.0801%" height="15" fill="rgb(227,16,52)" fg:x="247" fg:w="1"/><text x="20.0258%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.8559%" y="533" width="0.0801%" height="15" fill="rgb(213,93,12)" fg:x="248" fg:w="1"/><text x="20.1059%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8559%" y="517" width="0.0801%" height="15" fill="rgb(238,41,5)" fg:x="248" fg:w="1"/><text x="20.1059%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.8559%" y="501" width="0.0801%" height="15" fill="rgb(211,60,15)" fg:x="248" fg:w="1"/><text x="20.1059%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.8559%" y="485" width="0.0801%" height="15" fill="rgb(209,11,34)" fg:x="248" fg:w="1"/><text x="20.1059%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.9359%" y="501" width="0.0801%" height="15" fill="rgb(254,155,53)" fg:x="249" fg:w="1"/><text x="20.1859%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.0160%" y="485" width="0.0801%" height="15" fill="rgb(236,174,8)" fg:x="250" fg:w="1"/><text x="20.2660%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.0160%" y="469" width="0.0801%" height="15" fill="rgb(229,31,27)" fg:x="250" fg:w="1"/><text x="20.2660%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.0160%" y="453" width="0.0801%" height="15" fill="rgb(242,226,26)" fg:x="250" fg:w="1"/><text x="20.2660%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.0160%" y="437" width="0.0801%" height="15" fill="rgb(234,32,40)" fg:x="250" fg:w="1"/><text x="20.2660%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="19.4556%" y="565" width="0.7206%" height="15" fill="rgb(249,226,47)" fg:x="243" fg:w="9"/><text x="19.7056%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="19.8559%" y="549" width="0.3203%" height="15" fill="rgb(212,6,26)" fg:x="248" fg:w="4"/><text x="20.1059%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="19.9359%" y="533" width="0.2402%" height="15" fill="rgb(249,202,29)" fg:x="249" fg:w="3"/><text x="20.1859%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="19.9359%" y="517" width="0.2402%" height="15" fill="rgb(226,106,4)" fg:x="249" fg:w="3"/><text x="20.1859%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="20.0160%" y="501" width="0.1601%" height="15" fill="rgb(251,2,27)" fg:x="250" fg:w="2"/><text x="20.2660%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="20.0961%" y="485" width="0.0801%" height="15" fill="rgb(236,208,0)" fg:x="251" fg:w="1"/><text x="20.3461%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="19.2954%" y="581" width="1.1209%" height="15" fill="rgb(211,66,17)" fg:x="241" fg:w="14"/><text x="19.5454%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.1761%" y="565" width="0.2402%" height="15" fill="rgb(216,129,9)" fg:x="252" fg:w="3"/><text x="20.4261%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.2562%" y="549" width="0.1601%" height="15" fill="rgb(215,130,23)" fg:x="253" fg:w="2"/><text x="20.5062%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.3363%" y="533" width="0.0801%" height="15" fill="rgb(253,157,11)" fg:x="254" fg:w="1"/><text x="20.5863%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.3363%" y="517" width="0.0801%" height="15" fill="rgb(224,25,14)" fg:x="254" fg:w="1"/><text x="20.5863%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.3363%" y="501" width="0.0801%" height="15" fill="rgb(238,16,7)" fg:x="254" fg:w="1"/><text x="20.5863%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.60%)</title><rect x="18.8951%" y="597" width="1.6013%" height="15" fill="rgb(228,74,11)" fg:x="236" fg:w="20"/><text x="19.1451%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.4163%" y="581" width="0.0801%" height="15" fill="rgb(239,221,27)" fg:x="255" fg:w="1"/><text x="20.6663%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.4163%" y="565" width="0.0801%" height="15" fill="rgb(229,166,18)" fg:x="255" fg:w="1"/><text x="20.6663%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="20.4964%" y="565" width="0.1601%" height="15" fill="rgb(254,94,46)" fg:x="256" fg:w="2"/><text x="20.7464%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="20.8167%" y="549" width="0.2402%" height="15" fill="rgb(241,79,19)" fg:x="260" fg:w="3"/><text x="21.0667%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="21.0568%" y="549" width="0.1601%" height="15" fill="rgb(228,99,51)" fg:x="263" fg:w="2"/><text x="21.3068%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.2170%" y="517" width="0.0801%" height="15" fill="rgb(211,15,6)" fg:x="265" fg:w="1"/><text x="21.4670%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.2170%" y="501" width="0.0801%" height="15" fill="rgb(245,107,54)" fg:x="265" fg:w="1"/><text x="21.4670%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="21.2970%" y="517" width="0.0801%" height="15" fill="rgb(243,3,2)" fg:x="266" fg:w="1"/><text x="21.5470%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.2970%" y="501" width="0.0801%" height="15" fill="rgb(206,122,10)" fg:x="266" fg:w="1"/><text x="21.5470%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.3771%" y="485" width="0.0801%" height="15" fill="rgb(224,88,4)" fg:x="267" fg:w="1"/><text x="21.6271%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="20.4964%" y="597" width="1.0408%" height="15" fill="rgb(230,1,41)" fg:x="256" fg:w="13"/><text x="20.7464%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="20.4964%" y="581" width="1.0408%" height="15" fill="rgb(230,1,31)" fg:x="256" fg:w="13"/><text x="20.7464%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="20.6565%" y="565" width="0.8807%" height="15" fill="rgb(232,67,19)" fg:x="258" fg:w="11"/><text x="20.9065%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="21.2170%" y="549" width="0.3203%" height="15" fill="rgb(222,206,20)" fg:x="265" fg:w="4"/><text x="21.4670%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="21.2170%" y="533" width="0.3203%" height="15" fill="rgb(217,225,19)" fg:x="265" fg:w="4"/><text x="21.4670%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.3771%" y="517" width="0.1601%" height="15" fill="rgb(234,13,33)" fg:x="267" fg:w="2"/><text x="21.6271%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.3771%" y="501" width="0.1601%" height="15" fill="rgb(254,5,1)" fg:x="267" fg:w="2"/><text x="21.6271%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4572%" y="485" width="0.0801%" height="15" fill="rgb(211,121,41)" fg:x="268" fg:w="1"/><text x="21.7072%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.4572%" y="469" width="0.0801%" height="15" fill="rgb(213,199,35)" fg:x="268" fg:w="1"/><text x="21.7072%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4572%" y="453" width="0.0801%" height="15" fill="rgb(240,118,22)" fg:x="268" fg:w="1"/><text x="21.7072%" y="463.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="21.5372%" y="533" width="0.4003%" height="15" fill="rgb(238,184,25)" fg:x="269" fg:w="5"/><text x="21.7872%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.0176%" y="501" width="0.1601%" height="15" fill="rgb(210,165,6)" fg:x="275" fg:w="2"/><text x="22.2676%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0977%" y="485" width="0.0801%" height="15" fill="rgb(235,149,5)" fg:x="276" fg:w="1"/><text x="22.3477%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.2578%" y="485" width="0.0801%" height="15" fill="rgb(221,63,5)" fg:x="278" fg:w="1"/><text x="22.5078%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2578%" y="469" width="0.0801%" height="15" fill="rgb(250,44,41)" fg:x="278" fg:w="1"/><text x="22.5078%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="22.3379%" y="485" width="0.0801%" height="15" fill="rgb(235,112,47)" fg:x="279" fg:w="1"/><text x="22.5879%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.3379%" y="469" width="0.0801%" height="15" fill="rgb(252,176,34)" fg:x="279" fg:w="1"/><text x="22.5879%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.3379%" y="453" width="0.0801%" height="15" fill="rgb(234,50,19)" fg:x="279" fg:w="1"/><text x="22.5879%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4179%" y="453" width="0.0801%" height="15" fill="rgb(241,195,31)" fg:x="280" fg:w="1"/><text x="22.6679%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.4980%" y="453" width="0.0801%" height="15" fill="rgb(212,93,11)" fg:x="281" fg:w="1"/><text x="22.7480%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="21.5372%" y="565" width="1.1209%" height="15" fill="rgb(254,98,51)" fg:x="269" fg:w="14"/><text x="21.7872%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="21.5372%" y="549" width="1.1209%" height="15" fill="rgb(246,18,45)" fg:x="269" fg:w="14"/><text x="21.7872%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="21.9376%" y="533" width="0.7206%" height="15" fill="rgb(215,148,23)" fg:x="274" fg:w="9"/><text x="22.1876%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="21.9376%" y="517" width="0.7206%" height="15" fill="rgb(227,22,7)" fg:x="274" fg:w="9"/><text x="22.1876%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="22.1777%" y="501" width="0.4804%" height="15" fill="rgb(207,210,37)" fg:x="277" fg:w="6"/><text x="22.4277%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="22.4179%" y="485" width="0.2402%" height="15" fill="rgb(247,147,42)" fg:x="280" fg:w="3"/><text x="22.6679%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="22.4179%" y="469" width="0.2402%" height="15" fill="rgb(226,213,14)" fg:x="280" fg:w="3"/><text x="22.6679%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5781%" y="453" width="0.0801%" height="15" fill="rgb(223,18,10)" fg:x="282" fg:w="1"/><text x="22.8281%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5781%" y="437" width="0.0801%" height="15" fill="rgb(253,34,22)" fg:x="282" fg:w="1"/><text x="22.8281%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="22.5781%" y="421" width="0.0801%" height="15" fill="rgb(222,90,31)" fg:x="282" fg:w="1"/><text x="22.8281%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.6581%" y="565" width="0.0801%" height="15" fill="rgb(220,182,30)" fg:x="283" fg:w="1"/><text x="22.9081%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="22.7382%" y="517" width="0.1601%" height="15" fill="rgb(229,170,12)" fg:x="284" fg:w="2"/><text x="22.9882%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="22.8183%" y="501" width="0.0801%" height="15" fill="rgb(210,101,21)" fg:x="285" fg:w="1"/><text x="23.0683%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="22.8183%" y="485" width="0.0801%" height="15" fill="rgb(237,177,31)" fg:x="285" fg:w="1"/><text x="23.0683%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.8183%" y="469" width="0.0801%" height="15" fill="rgb(215,91,34)" fg:x="285" fg:w="1"/><text x="23.0683%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="22.7382%" y="549" width="0.2402%" height="15" fill="rgb(229,206,16)" fg:x="284" fg:w="3"/><text x="22.9882%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="22.7382%" y="533" width="0.2402%" height="15" fill="rgb(235,207,10)" fg:x="284" fg:w="3"/><text x="22.9882%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.8983%" y="517" width="0.0801%" height="15" fill="rgb(247,18,10)" fg:x="286" fg:w="1"/><text x="23.1483%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (2 samples, 0.16%)</title><rect x="22.9784%" y="549" width="0.1601%" height="15" fill="rgb(232,4,6)" fg:x="287" fg:w="2"/><text x="23.2284%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="23.1385%" y="549" width="0.0801%" height="15" fill="rgb(247,93,45)" fg:x="289" fg:w="1"/><text x="23.3885%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1385%" y="533" width="0.0801%" height="15" fill="rgb(240,181,18)" fg:x="289" fg:w="1"/><text x="23.3885%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1385%" y="517" width="0.0801%" height="15" fill="rgb(208,224,0)" fg:x="289" fg:w="1"/><text x="23.3885%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.1385%" y="501" width="0.0801%" height="15" fill="rgb(224,207,54)" fg:x="289" fg:w="1"/><text x="23.3885%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.1385%" y="485" width="0.0801%" height="15" fill="rgb(217,152,29)" fg:x="289" fg:w="1"/><text x="23.3885%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.1385%" y="469" width="0.0801%" height="15" fill="rgb(243,78,27)" fg:x="289" fg:w="1"/><text x="23.3885%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.1385%" y="453" width="0.0801%" height="15" fill="rgb(228,111,9)" fg:x="289" fg:w="1"/><text x="23.3885%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.1385%" y="437" width="0.0801%" height="15" fill="rgb(230,213,21)" fg:x="289" fg:w="1"/><text x="23.3885%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.1385%" y="421" width="0.0801%" height="15" fill="rgb(248,50,36)" fg:x="289" fg:w="1"/><text x="23.3885%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.1385%" y="405" width="0.0801%" height="15" fill="rgb(226,19,31)" fg:x="289" fg:w="1"/><text x="23.3885%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.1385%" y="389" width="0.0801%" height="15" fill="rgb(205,132,21)" fg:x="289" fg:w="1"/><text x="23.3885%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.1385%" y="373" width="0.0801%" height="15" fill="rgb(207,42,19)" fg:x="289" fg:w="1"/><text x="23.3885%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1385%" y="357" width="0.0801%" height="15" fill="rgb(229,69,35)" fg:x="289" fg:w="1"/><text x="23.3885%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2186%" y="533" width="0.0801%" height="15" fill="rgb(226,96,11)" fg:x="290" fg:w="1"/><text x="23.4686%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.2986%" y="501" width="0.0801%" height="15" fill="rgb(236,133,54)" fg:x="291" fg:w="1"/><text x="23.5486%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.2986%" y="485" width="0.0801%" height="15" fill="rgb(247,166,21)" fg:x="291" fg:w="1"/><text x="23.5486%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.2986%" y="469" width="0.0801%" height="15" fill="rgb(220,132,12)" fg:x="291" fg:w="1"/><text x="23.5486%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.2986%" y="453" width="0.0801%" height="15" fill="rgb(233,27,30)" fg:x="291" fg:w="1"/><text x="23.5486%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (24 samples, 1.92%)</title><rect x="21.5372%" y="581" width="1.9215%" height="15" fill="rgb(246,161,27)" fg:x="269" fg:w="24"/><text x="21.7872%" y="591.50">&lt;..</text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="22.7382%" y="565" width="0.7206%" height="15" fill="rgb(240,56,3)" fg:x="284" fg:w="9"/><text x="22.9882%" y="575.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="23.2186%" y="549" width="0.2402%" height="15" fill="rgb(242,190,9)" fg:x="290" fg:w="3"/><text x="23.4686%" y="559.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="23.2986%" y="533" width="0.1601%" height="15" fill="rgb(234,3,52)" fg:x="291" fg:w="2"/><text x="23.5486%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="23.2986%" y="517" width="0.1601%" height="15" fill="rgb(220,221,19)" fg:x="291" fg:w="2"/><text x="23.5486%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="23.3787%" y="501" width="0.0801%" height="15" fill="rgb(247,178,30)" fg:x="292" fg:w="1"/><text x="23.6287%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4588%" y="549" width="0.0801%" height="15" fill="rgb(234,212,27)" fg:x="293" fg:w="1"/><text x="23.7088%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5388%" y="549" width="0.0801%" height="15" fill="rgb(226,199,38)" fg:x="294" fg:w="1"/><text x="23.7888%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="23.6189%" y="533" width="0.0801%" height="15" fill="rgb(248,114,22)" fg:x="295" fg:w="1"/><text x="23.8689%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="23.6189%" y="549" width="0.1601%" height="15" fill="rgb(221,180,4)" fg:x="295" fg:w="2"/><text x="23.8689%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.6990%" y="533" width="0.0801%" height="15" fill="rgb(220,229,24)" fg:x="296" fg:w="1"/><text x="23.9490%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6990%" y="517" width="0.0801%" height="15" fill="rgb(226,184,27)" fg:x="296" fg:w="1"/><text x="23.9490%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.8591%" y="501" width="0.1601%" height="15" fill="rgb(232,99,15)" fg:x="298" fg:w="2"/><text x="24.1091%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9392%" y="485" width="0.0801%" height="15" fill="rgb(250,167,16)" fg:x="299" fg:w="1"/><text x="24.1892%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9392%" y="469" width="0.0801%" height="15" fill="rgb(243,113,6)" fg:x="299" fg:w="1"/><text x="24.1892%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="24.0993%" y="469" width="0.4003%" height="15" fill="rgb(244,147,52)" fg:x="301" fg:w="5"/><text x="24.3493%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.2594%" y="453" width="0.2402%" height="15" fill="rgb(235,59,50)" fg:x="303" fg:w="3"/><text x="24.5094%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="24.2594%" y="437" width="0.2402%" height="15" fill="rgb(250,188,6)" fg:x="303" fg:w="3"/><text x="24.5094%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7398%" y="405" width="0.0801%" height="15" fill="rgb(236,173,11)" fg:x="309" fg:w="1"/><text x="24.9898%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7398%" y="389" width="0.0801%" height="15" fill="rgb(233,64,3)" fg:x="309" fg:w="1"/><text x="24.9898%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7398%" y="373" width="0.0801%" height="15" fill="rgb(207,92,7)" fg:x="309" fg:w="1"/><text x="24.9898%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="23.8591%" y="517" width="1.2810%" height="15" fill="rgb(221,30,19)" fg:x="298" fg:w="16"/><text x="24.1091%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="24.0192%" y="501" width="1.1209%" height="15" fill="rgb(245,22,49)" fg:x="300" fg:w="14"/><text x="24.2692%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="24.0192%" y="485" width="1.1209%" height="15" fill="rgb(218,39,20)" fg:x="300" fg:w="14"/><text x="24.2692%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="24.4996%" y="469" width="0.6405%" height="15" fill="rgb(222,144,21)" fg:x="306" fg:w="8"/><text x="24.7496%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="24.6597%" y="453" width="0.4804%" height="15" fill="rgb(222,78,51)" fg:x="308" fg:w="6"/><text x="24.9097%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="24.6597%" y="437" width="0.4804%" height="15" fill="rgb(248,213,53)" fg:x="308" fg:w="6"/><text x="24.9097%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="24.7398%" y="421" width="0.4003%" height="15" fill="rgb(245,28,34)" fg:x="309" fg:w="5"/><text x="24.9898%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="24.8199%" y="405" width="0.3203%" height="15" fill="rgb(229,186,26)" fg:x="310" fg:w="4"/><text x="25.0699%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="24.8999%" y="389" width="0.2402%" height="15" fill="rgb(224,0,41)" fg:x="311" fg:w="3"/><text x="25.1499%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.8999%" y="373" width="0.2402%" height="15" fill="rgb(223,136,51)" fg:x="311" fg:w="3"/><text x="25.1499%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.8999%" y="357" width="0.2402%" height="15" fill="rgb(234,50,9)" fg:x="311" fg:w="3"/><text x="25.1499%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="24.8999%" y="341" width="0.2402%" height="15" fill="rgb(242,164,20)" fg:x="311" fg:w="3"/><text x="25.1499%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.36%)</title><rect x="23.8591%" y="533" width="1.3611%" height="15" fill="rgb(230,169,22)" fg:x="298" fg:w="17"/><text x="24.1091%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="25.1401%" y="517" width="0.0801%" height="15" fill="rgb(228,82,26)" fg:x="314" fg:w="1"/><text x="25.3901%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (23 samples, 1.84%)</title><rect x="23.4588%" y="581" width="1.8415%" height="15" fill="rgb(244,220,31)" fg:x="293" fg:w="23"/><text x="23.7088%" y="591.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 1.84%)</title><rect x="23.4588%" y="565" width="1.8415%" height="15" fill="rgb(214,35,25)" fg:x="293" fg:w="23"/><text x="23.7088%" y="575.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.52%)</title><rect x="23.7790%" y="549" width="1.5212%" height="15" fill="rgb(245,162,54)" fg:x="297" fg:w="19"/><text x="24.0290%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2202%" y="533" width="0.0801%" height="15" fill="rgb(210,43,24)" fg:x="315" fg:w="1"/><text x="25.4702%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="25.6205%" y="325" width="0.0801%" height="15" fill="rgb(226,145,51)" fg:x="320" fg:w="1"/><text x="25.8705%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.7006%" y="325" width="0.0801%" height="15" fill="rgb(237,52,53)" fg:x="321" fg:w="1"/><text x="25.9506%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="25.7006%" y="309" width="0.0801%" height="15" fill="rgb(216,226,7)" fg:x="321" fg:w="1"/><text x="25.9506%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="25.4604%" y="357" width="0.5604%" height="15" fill="rgb(206,223,18)" fg:x="318" fg:w="7"/><text x="25.7104%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="25.5404%" y="341" width="0.4804%" height="15" fill="rgb(221,1,10)" fg:x="319" fg:w="6"/><text x="25.7904%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="25.7806%" y="325" width="0.2402%" height="15" fill="rgb(221,151,42)" fg:x="322" fg:w="3"/><text x="26.0306%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="25.7806%" y="309" width="0.2402%" height="15" fill="rgb(205,183,46)" fg:x="322" fg:w="3"/><text x="26.0306%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="25.7806%" y="293" width="0.2402%" height="15" fill="rgb(239,229,1)" fg:x="322" fg:w="3"/><text x="26.0306%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="26.0208%" y="357" width="0.0801%" height="15" fill="rgb(236,192,23)" fg:x="325" fg:w="1"/><text x="26.2708%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="26.0208%" y="341" width="0.0801%" height="15" fill="rgb(215,146,3)" fg:x="325" fg:w="1"/><text x="26.2708%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="25.4604%" y="421" width="0.7206%" height="15" fill="rgb(235,52,27)" fg:x="318" fg:w="9"/><text x="25.7104%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="25.4604%" y="405" width="0.7206%" height="15" fill="rgb(236,45,20)" fg:x="318" fg:w="9"/><text x="25.7104%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="25.4604%" y="389" width="0.7206%" height="15" fill="rgb(235,86,41)" fg:x="318" fg:w="9"/><text x="25.7104%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="25.4604%" y="373" width="0.7206%" height="15" fill="rgb(235,27,27)" fg:x="318" fg:w="9"/><text x="25.7104%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.1009%" y="357" width="0.0801%" height="15" fill="rgb(232,4,34)" fg:x="326" fg:w="1"/><text x="26.3509%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.1009%" y="341" width="0.0801%" height="15" fill="rgb(215,22,10)" fg:x="326" fg:w="1"/><text x="26.3509%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="26.1009%" y="325" width="0.0801%" height="15" fill="rgb(230,228,27)" fg:x="326" fg:w="1"/><text x="26.3509%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="25.3002%" y="485" width="1.0408%" height="15" fill="rgb(216,26,51)" fg:x="316" fg:w="13"/><text x="25.5502%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="25.3002%" y="469" width="1.0408%" height="15" fill="rgb(225,180,50)" fg:x="316" fg:w="13"/><text x="25.5502%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="25.3002%" y="453" width="1.0408%" height="15" fill="rgb(236,211,2)" fg:x="316" fg:w="13"/><text x="25.5502%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="25.3002%" y="437" width="1.0408%" height="15" fill="rgb(250,51,20)" fg:x="316" fg:w="13"/><text x="25.5502%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="26.1809%" y="421" width="0.1601%" height="15" fill="rgb(232,70,37)" fg:x="327" fg:w="2"/><text x="26.4309%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.2610%" y="405" width="0.0801%" height="15" fill="rgb(226,183,39)" fg:x="328" fg:w="1"/><text x="26.5110%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.20%)</title><rect x="25.3002%" y="517" width="1.2010%" height="15" fill="rgb(232,228,21)" fg:x="316" fg:w="15"/><text x="25.5502%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.20%)</title><rect x="25.3002%" y="501" width="1.2010%" height="15" fill="rgb(251,118,32)" fg:x="316" fg:w="15"/><text x="25.5502%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.3411%" y="485" width="0.1601%" height="15" fill="rgb(235,172,38)" fg:x="329" fg:w="2"/><text x="26.5911%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.3411%" y="469" width="0.1601%" height="15" fill="rgb(235,63,18)" fg:x="329" fg:w="2"/><text x="26.5911%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.3411%" y="453" width="0.1601%" height="15" fill="rgb(225,4,7)" fg:x="329" fg:w="2"/><text x="26.5911%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="26.5012%" y="517" width="0.0801%" height="15" fill="rgb(231,61,1)" fg:x="331" fg:w="1"/><text x="26.7512%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5012%" y="501" width="0.0801%" height="15" fill="rgb(241,155,22)" fg:x="331" fg:w="1"/><text x="26.7512%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6613%" y="485" width="0.0801%" height="15" fill="rgb(209,100,26)" fg:x="333" fg:w="1"/><text x="26.9113%" y="495.50"></text></g><g><title>engine::session::Session::close (112 samples, 8.97%)</title><rect x="17.8543%" y="677" width="8.9672%" height="15" fill="rgb(248,181,15)" fg:x="223" fg:w="112"/><text x="18.1043%" y="687.50">engine::sessi..</text></g><g><title>engine::session::state::State::close (109 samples, 8.73%)</title><rect x="18.0945%" y="661" width="8.7270%" height="15" fill="rgb(214,94,31)" fg:x="226" fg:w="109"/><text x="18.3445%" y="671.50">engine::sess..</text></g><g><title>engine::session::state::State::flush_entities (104 samples, 8.33%)</title><rect x="18.4948%" y="645" width="8.3267%" height="15" fill="rgb(207,16,42)" fg:x="231" fg:w="104"/><text x="18.7448%" y="655.50">engine::sess..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (103 samples, 8.25%)</title><rect x="18.5749%" y="629" width="8.2466%" height="15" fill="rgb(208,127,13)" fg:x="232" fg:w="103"/><text x="18.8249%" y="639.50">engine::ses..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (103 samples, 8.25%)</title><rect x="18.5749%" y="613" width="8.2466%" height="15" fill="rgb(220,211,18)" fg:x="232" fg:w="103"/><text x="18.8249%" y="623.50">engine::ses..</text></g><g><title>kernel::model::any_entity_changes (66 samples, 5.28%)</title><rect x="21.5372%" y="597" width="5.2842%" height="15" fill="rgb(221,55,38)" fg:x="269" fg:w="66"/><text x="21.7872%" y="607.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (19 samples, 1.52%)</title><rect x="25.3002%" y="581" width="1.5212%" height="15" fill="rgb(252,219,45)" fg:x="316" fg:w="19"/><text x="25.5502%" y="591.50"></text></g><g><title>serde_json::de::from_trait (19 samples, 1.52%)</title><rect x="25.3002%" y="565" width="1.5212%" height="15" fill="rgb(248,53,35)" fg:x="316" fg:w="19"/><text x="25.5502%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.52%)</title><rect x="25.3002%" y="549" width="1.5212%" height="15" fill="rgb(210,87,2)" fg:x="316" fg:w="19"/><text x="25.5502%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.52%)</title><rect x="25.3002%" y="533" width="1.5212%" height="15" fill="rgb(239,133,9)" fg:x="316" fg:w="19"/><text x="25.5502%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="26.5813%" y="517" width="0.2402%" height="15" fill="rgb(214,114,5)" fg:x="332" fg:w="3"/><text x="26.8313%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="26.5813%" y="501" width="0.2402%" height="15" fill="rgb(206,124,24)" fg:x="332" fg:w="3"/><text x="26.8313%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="26.7414%" y="485" width="0.0801%" height="15" fill="rgb(212,57,33)" fg:x="334" fg:w="1"/><text x="26.9914%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.9015%" y="501" width="0.0801%" height="15" fill="rgb(246,21,20)" fg:x="336" fg:w="1"/><text x="27.1515%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="26.9015%" y="485" width="0.0801%" height="15" fill="rgb(253,210,39)" fg:x="336" fg:w="1"/><text x="27.1515%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9816%" y="453" width="0.0801%" height="15" fill="rgb(209,187,24)" fg:x="337" fg:w="1"/><text x="27.2316%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9816%" y="437" width="0.0801%" height="15" fill="rgb(246,136,17)" fg:x="337" fg:w="1"/><text x="27.2316%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9816%" y="421" width="0.0801%" height="15" fill="rgb(211,0,30)" fg:x="337" fg:w="1"/><text x="27.2316%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9816%" y="405" width="0.0801%" height="15" fill="rgb(216,199,7)" fg:x="337" fg:w="1"/><text x="27.2316%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9816%" y="389" width="0.0801%" height="15" fill="rgb(207,210,19)" fg:x="337" fg:w="1"/><text x="27.2316%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="26.9015%" y="533" width="0.2402%" height="15" fill="rgb(237,187,39)" fg:x="336" fg:w="3"/><text x="27.1515%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="26.9015%" y="517" width="0.2402%" height="15" fill="rgb(243,194,42)" fg:x="336" fg:w="3"/><text x="27.1515%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="26.9816%" y="501" width="0.1601%" height="15" fill="rgb(225,194,19)" fg:x="337" fg:w="2"/><text x="27.2316%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.9816%" y="485" width="0.1601%" height="15" fill="rgb(224,192,14)" fg:x="337" fg:w="2"/><text x="27.2316%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.9816%" y="469" width="0.1601%" height="15" fill="rgb(252,21,18)" fg:x="337" fg:w="2"/><text x="27.2316%" y="479.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="27.0616%" y="453" width="0.0801%" height="15" fill="rgb(229,69,19)" fg:x="338" fg:w="1"/><text x="27.3116%" y="463.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="27.1417%" y="517" width="0.1601%" height="15" fill="rgb(251,31,53)" fg:x="339" fg:w="2"/><text x="27.3917%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="27.1417%" y="501" width="0.1601%" height="15" fill="rgb(218,39,50)" fg:x="339" fg:w="2"/><text x="27.3917%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="27.1417%" y="485" width="0.1601%" height="15" fill="rgb(231,50,17)" fg:x="339" fg:w="2"/><text x="27.3917%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="27.1417%" y="469" width="0.1601%" height="15" fill="rgb(223,217,31)" fg:x="339" fg:w="2"/><text x="27.3917%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="27.1417%" y="453" width="0.1601%" height="15" fill="rgb(225,91,12)" fg:x="339" fg:w="2"/><text x="27.3917%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="27.3018%" y="437" width="0.0801%" height="15" fill="rgb(242,58,43)" fg:x="341" fg:w="1"/><text x="27.5518%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="27.3018%" y="421" width="0.0801%" height="15" fill="rgb(242,32,21)" fg:x="341" fg:w="1"/><text x="27.5518%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="27.3018%" y="405" width="0.0801%" height="15" fill="rgb(211,127,1)" fg:x="341" fg:w="1"/><text x="27.5518%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="27.3018%" y="389" width="0.0801%" height="15" fill="rgb(231,93,13)" fg:x="341" fg:w="1"/><text x="27.5518%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="27.3018%" y="373" width="0.0801%" height="15" fill="rgb(218,83,4)" fg:x="341" fg:w="1"/><text x="27.5518%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="27.3018%" y="357" width="0.0801%" height="15" fill="rgb(230,218,10)" fg:x="341" fg:w="1"/><text x="27.5518%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="27.3018%" y="341" width="0.0801%" height="15" fill="rgb(235,127,18)" fg:x="341" fg:w="1"/><text x="27.5518%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="27.3819%" y="437" width="0.0801%" height="15" fill="rgb(213,137,46)" fg:x="342" fg:w="1"/><text x="27.6319%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="27.3819%" y="421" width="0.0801%" height="15" fill="rgb(235,179,24)" fg:x="342" fg:w="1"/><text x="27.6319%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="27.3819%" y="405" width="0.0801%" height="15" fill="rgb(247,58,49)" fg:x="342" fg:w="1"/><text x="27.6319%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="27.3819%" y="389" width="0.0801%" height="15" fill="rgb(242,222,5)" fg:x="342" fg:w="1"/><text x="27.6319%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.3819%" y="373" width="0.0801%" height="15" fill="rgb(230,16,48)" fg:x="342" fg:w="1"/><text x="27.6319%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="27.4620%" y="405" width="0.1601%" height="15" fill="rgb(241,192,16)" fg:x="343" fg:w="2"/><text x="27.7120%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.80%)</title><rect x="26.9015%" y="549" width="0.8006%" height="15" fill="rgb(209,25,37)" fg:x="336" fg:w="10"/><text x="27.1515%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="27.1417%" y="533" width="0.5604%" height="15" fill="rgb(229,215,13)" fg:x="339" fg:w="7"/><text x="27.3917%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="27.3018%" y="517" width="0.4003%" height="15" fill="rgb(213,199,8)" fg:x="341" fg:w="5"/><text x="27.5518%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="27.3018%" y="501" width="0.4003%" height="15" fill="rgb(226,151,19)" fg:x="341" fg:w="5"/><text x="27.5518%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="27.3018%" y="485" width="0.4003%" height="15" fill="rgb(254,183,12)" fg:x="341" fg:w="5"/><text x="27.5518%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="27.3018%" y="469" width="0.4003%" height="15" fill="rgb(245,8,3)" fg:x="341" fg:w="5"/><text x="27.5518%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="27.3018%" y="453" width="0.4003%" height="15" fill="rgb(229,159,35)" fg:x="341" fg:w="5"/><text x="27.5518%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.4620%" y="437" width="0.2402%" height="15" fill="rgb(209,145,1)" fg:x="343" fg:w="3"/><text x="27.7120%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="27.4620%" y="421" width="0.2402%" height="15" fill="rgb(228,183,16)" fg:x="343" fg:w="3"/><text x="27.7120%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="27.6221%" y="405" width="0.0801%" height="15" fill="rgb(222,68,0)" fg:x="345" fg:w="1"/><text x="27.8721%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="27.6221%" y="389" width="0.0801%" height="15" fill="rgb(209,130,50)" fg:x="345" fg:w="1"/><text x="27.8721%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="27.6221%" y="373" width="0.0801%" height="15" fill="rgb(228,176,44)" fg:x="345" fg:w="1"/><text x="27.8721%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.6221%" y="357" width="0.0801%" height="15" fill="rgb(221,164,2)" fg:x="345" fg:w="1"/><text x="27.8721%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="27.6221%" y="341" width="0.0801%" height="15" fill="rgb(249,199,49)" fg:x="345" fg:w="1"/><text x="27.8721%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="27.6221%" y="325" width="0.0801%" height="15" fill="rgb(228,205,53)" fg:x="345" fg:w="1"/><text x="27.8721%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.88%)</title><rect x="26.9015%" y="581" width="0.8807%" height="15" fill="rgb(235,77,20)" fg:x="336" fg:w="11"/><text x="27.1515%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.88%)</title><rect x="26.9015%" y="565" width="0.8807%" height="15" fill="rgb(227,147,34)" fg:x="336" fg:w="11"/><text x="27.1515%" y="575.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="27.7022%" y="549" width="0.0801%" height="15" fill="rgb(226,203,52)" fg:x="346" fg:w="1"/><text x="27.9522%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.7022%" y="533" width="0.0801%" height="15" fill="rgb(226,186,23)" fg:x="346" fg:w="1"/><text x="27.9522%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.7822%" y="581" width="0.0801%" height="15" fill="rgb(236,13,30)" fg:x="347" fg:w="1"/><text x="28.0322%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.8623%" y="581" width="0.0801%" height="15" fill="rgb(228,121,22)" fg:x="348" fg:w="1"/><text x="28.1123%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.0224%" y="517" width="0.0801%" height="15" fill="rgb(248,222,26)" fg:x="350" fg:w="1"/><text x="28.2724%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (17 samples, 1.36%)</title><rect x="26.8215%" y="629" width="1.3611%" height="15" fill="rgb(251,72,25)" fg:x="335" fg:w="17"/><text x="27.0715%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.36%)</title><rect x="26.8215%" y="613" width="1.3611%" height="15" fill="rgb(223,114,24)" fg:x="335" fg:w="17"/><text x="27.0715%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (17 samples, 1.36%)</title><rect x="26.8215%" y="597" width="1.3611%" height="15" fill="rgb(232,190,43)" fg:x="335" fg:w="17"/><text x="27.0715%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.9424%" y="581" width="0.2402%" height="15" fill="rgb(208,90,0)" fg:x="349" fg:w="3"/><text x="28.1924%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.9424%" y="565" width="0.2402%" height="15" fill="rgb(234,149,31)" fg:x="349" fg:w="3"/><text x="28.1924%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.0224%" y="549" width="0.1601%" height="15" fill="rgb(235,188,36)" fg:x="350" fg:w="2"/><text x="28.2724%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.0224%" y="533" width="0.1601%" height="15" fill="rgb(219,59,51)" fg:x="350" fg:w="2"/><text x="28.2724%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.1025%" y="517" width="0.0801%" height="15" fill="rgb(236,101,40)" fg:x="351" fg:w="1"/><text x="28.3525%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="28.1825%" y="437" width="0.1601%" height="15" fill="rgb(235,33,7)" fg:x="352" fg:w="2"/><text x="28.4325%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="28.1825%" y="421" width="0.1601%" height="15" fill="rgb(213,169,26)" fg:x="352" fg:w="2"/><text x="28.4325%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.2626%" y="405" width="0.0801%" height="15" fill="rgb(218,99,34)" fg:x="353" fg:w="1"/><text x="28.5126%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.2626%" y="389" width="0.0801%" height="15" fill="rgb(210,57,24)" fg:x="353" fg:w="1"/><text x="28.5126%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.2626%" y="373" width="0.0801%" height="15" fill="rgb(231,181,54)" fg:x="353" fg:w="1"/><text x="28.5126%" y="383.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (20 samples, 1.60%)</title><rect x="26.8215%" y="645" width="1.6013%" height="15" fill="rgb(251,188,48)" fg:x="335" fg:w="20"/><text x="27.0715%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="28.1825%" y="629" width="0.2402%" height="15" fill="rgb(243,12,45)" fg:x="352" fg:w="3"/><text x="28.4325%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="28.1825%" y="613" width="0.2402%" height="15" fill="rgb(250,197,9)" fg:x="352" fg:w="3"/><text x="28.4325%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="28.1825%" y="597" width="0.2402%" height="15" fill="rgb(235,149,35)" fg:x="352" fg:w="3"/><text x="28.4325%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="28.1825%" y="581" width="0.2402%" height="15" fill="rgb(219,27,19)" fg:x="352" fg:w="3"/><text x="28.4325%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="28.1825%" y="565" width="0.2402%" height="15" fill="rgb(244,78,31)" fg:x="352" fg:w="3"/><text x="28.4325%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="28.1825%" y="549" width="0.2402%" height="15" fill="rgb(241,13,4)" fg:x="352" fg:w="3"/><text x="28.4325%" y="559.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="28.1825%" y="533" width="0.2402%" height="15" fill="rgb(212,194,26)" fg:x="352" fg:w="3"/><text x="28.4325%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="28.1825%" y="517" width="0.2402%" height="15" fill="rgb(236,80,11)" fg:x="352" fg:w="3"/><text x="28.4325%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="28.1825%" y="501" width="0.2402%" height="15" fill="rgb(206,1,24)" fg:x="352" fg:w="3"/><text x="28.4325%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="28.1825%" y="485" width="0.2402%" height="15" fill="rgb(238,215,50)" fg:x="352" fg:w="3"/><text x="28.4325%" y="495.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="28.1825%" y="469" width="0.2402%" height="15" fill="rgb(254,126,32)" fg:x="352" fg:w="3"/><text x="28.4325%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="28.1825%" y="453" width="0.2402%" height="15" fill="rgb(206,111,53)" fg:x="352" fg:w="3"/><text x="28.4325%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.3427%" y="437" width="0.0801%" height="15" fill="rgb(218,72,44)" fg:x="354" fg:w="1"/><text x="28.5927%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.3427%" y="421" width="0.0801%" height="15" fill="rgb(238,25,3)" fg:x="354" fg:w="1"/><text x="28.5927%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="28.3427%" y="405" width="0.0801%" height="15" fill="rgb(250,191,7)" fg:x="354" fg:w="1"/><text x="28.5927%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="28.3427%" y="389" width="0.0801%" height="15" fill="rgb(238,56,30)" fg:x="354" fg:w="1"/><text x="28.5927%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="28.3427%" y="373" width="0.0801%" height="15" fill="rgb(210,27,45)" fg:x="354" fg:w="1"/><text x="28.5927%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="28.3427%" y="357" width="0.0801%" height="15" fill="rgb(207,10,50)" fg:x="354" fg:w="1"/><text x="28.5927%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="28.3427%" y="341" width="0.0801%" height="15" fill="rgb(249,30,23)" fg:x="354" fg:w="1"/><text x="28.5927%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="28.3427%" y="325" width="0.0801%" height="15" fill="rgb(250,80,12)" fg:x="354" fg:w="1"/><text x="28.5927%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.3427%" y="309" width="0.0801%" height="15" fill="rgb(210,221,37)" fg:x="354" fg:w="1"/><text x="28.5927%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="28.3427%" y="293" width="0.0801%" height="15" fill="rgb(205,96,24)" fg:x="354" fg:w="1"/><text x="28.5927%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.3427%" y="277" width="0.0801%" height="15" fill="rgb(247,104,22)" fg:x="354" fg:w="1"/><text x="28.5927%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="28.3427%" y="261" width="0.0801%" height="15" fill="rgb(222,61,53)" fg:x="354" fg:w="1"/><text x="28.5927%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="28.3427%" y="245" width="0.0801%" height="15" fill="rgb(241,11,53)" fg:x="354" fg:w="1"/><text x="28.5927%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="28.3427%" y="229" width="0.0801%" height="15" fill="rgb(230,111,47)" fg:x="354" fg:w="1"/><text x="28.5927%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.3427%" y="213" width="0.0801%" height="15" fill="rgb(218,187,29)" fg:x="354" fg:w="1"/><text x="28.5927%" y="223.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="28.5829%" y="421" width="0.2402%" height="15" fill="rgb(210,121,46)" fg:x="357" fg:w="3"/><text x="28.8329%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (5 samples, 0.40%)</title><rect x="28.5829%" y="437" width="0.4003%" height="15" fill="rgb(250,43,19)" fg:x="357" fg:w="5"/><text x="28.8329%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="28.8231%" y="421" width="0.1601%" height="15" fill="rgb(238,61,12)" fg:x="360" fg:w="2"/><text x="29.0731%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.8231%" y="405" width="0.1601%" height="15" fill="rgb(251,198,9)" fg:x="360" fg:w="2"/><text x="29.0731%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="28.9832%" y="421" width="0.4003%" height="15" fill="rgb(214,192,38)" fg:x="362" fg:w="5"/><text x="29.2332%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="28.9832%" y="405" width="0.4003%" height="15" fill="rgb(214,73,19)" fg:x="362" fg:w="5"/><text x="29.2332%" y="415.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="28.9832%" y="389" width="0.4003%" height="15" fill="rgb(249,222,49)" fg:x="362" fg:w="5"/><text x="29.2332%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="29.3835%" y="405" width="0.2402%" height="15" fill="rgb(231,181,54)" fg:x="367" fg:w="3"/><text x="29.6335%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="29.3835%" y="389" width="0.2402%" height="15" fill="rgb(240,1,13)" fg:x="367" fg:w="3"/><text x="29.6335%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="29.3835%" y="373" width="0.2402%" height="15" fill="rgb(225,21,16)" fg:x="367" fg:w="3"/><text x="29.6335%" y="383.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="29.5436%" y="357" width="0.0801%" height="15" fill="rgb(246,176,50)" fg:x="369" fg:w="1"/><text x="29.7936%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.5436%" y="341" width="0.0801%" height="15" fill="rgb(208,96,50)" fg:x="369" fg:w="1"/><text x="29.7936%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="29.6237%" y="405" width="0.0801%" height="15" fill="rgb(240,219,19)" fg:x="370" fg:w="1"/><text x="29.8737%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.6237%" y="389" width="0.0801%" height="15" fill="rgb(234,73,5)" fg:x="370" fg:w="1"/><text x="29.8737%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7038%" y="373" width="0.0801%" height="15" fill="rgb(225,52,53)" fg:x="371" fg:w="1"/><text x="29.9538%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.7038%" y="357" width="0.0801%" height="15" fill="rgb(250,12,14)" fg:x="371" fg:w="1"/><text x="29.9538%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7038%" y="341" width="0.0801%" height="15" fill="rgb(242,185,54)" fg:x="371" fg:w="1"/><text x="29.9538%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.7038%" y="325" width="0.0801%" height="15" fill="rgb(211,206,31)" fg:x="371" fg:w="1"/><text x="29.9538%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7038%" y="309" width="0.0801%" height="15" fill="rgb(252,10,33)" fg:x="371" fg:w="1"/><text x="29.9538%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7038%" y="293" width="0.0801%" height="15" fill="rgb(216,26,7)" fg:x="371" fg:w="1"/><text x="29.9538%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.7038%" y="277" width="0.0801%" height="15" fill="rgb(228,112,40)" fg:x="371" fg:w="1"/><text x="29.9538%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.7038%" y="261" width="0.0801%" height="15" fill="rgb(212,21,16)" fg:x="371" fg:w="1"/><text x="29.9538%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.7038%" y="245" width="0.0801%" height="15" fill="rgb(249,3,29)" fg:x="371" fg:w="1"/><text x="29.9538%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7038%" y="229" width="0.0801%" height="15" fill="rgb(221,42,51)" fg:x="371" fg:w="1"/><text x="29.9538%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7038%" y="213" width="0.0801%" height="15" fill="rgb(225,90,21)" fg:x="371" fg:w="1"/><text x="29.9538%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.7038%" y="197" width="0.0801%" height="15" fill="rgb(242,131,5)" fg:x="371" fg:w="1"/><text x="29.9538%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.7038%" y="181" width="0.0801%" height="15" fill="rgb(220,187,28)" fg:x="371" fg:w="1"/><text x="29.9538%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.7038%" y="165" width="0.0801%" height="15" fill="rgb(210,75,48)" fg:x="371" fg:w="1"/><text x="29.9538%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.7038%" y="149" width="0.0801%" height="15" fill="rgb(211,91,40)" fg:x="371" fg:w="1"/><text x="29.9538%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7038%" y="133" width="0.0801%" height="15" fill="rgb(205,43,18)" fg:x="371" fg:w="1"/><text x="29.9538%" y="143.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (12 samples, 0.96%)</title><rect x="28.9832%" y="437" width="0.9608%" height="15" fill="rgb(207,123,11)" fg:x="362" fg:w="12"/><text x="29.2332%" y="447.50"></text></g><g><title>plugins_core::tools::contained_by (7 samples, 0.56%)</title><rect x="29.3835%" y="421" width="0.5604%" height="15" fill="rgb(235,89,39)" fg:x="367" fg:w="7"/><text x="29.6335%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="29.7038%" y="405" width="0.2402%" height="15" fill="rgb(245,217,27)" fg:x="371" fg:w="3"/><text x="29.9538%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="29.7038%" y="389" width="0.2402%" height="15" fill="rgb(216,55,17)" fg:x="371" fg:w="3"/><text x="29.9538%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.7838%" y="373" width="0.1601%" height="15" fill="rgb(252,116,44)" fg:x="372" fg:w="2"/><text x="30.0338%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.7838%" y="357" width="0.1601%" height="15" fill="rgb(229,153,4)" fg:x="372" fg:w="2"/><text x="30.0338%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.8639%" y="341" width="0.0801%" height="15" fill="rgb(222,24,35)" fg:x="373" fg:w="1"/><text x="30.1139%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.8639%" y="325" width="0.0801%" height="15" fill="rgb(214,26,20)" fg:x="373" fg:w="1"/><text x="30.1139%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1041%" y="309" width="0.0801%" height="15" fill="rgb(215,14,45)" fg:x="376" fg:w="1"/><text x="30.3541%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1041%" y="293" width="0.0801%" height="15" fill="rgb(217,212,50)" fg:x="376" fg:w="1"/><text x="30.3541%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.1041%" y="277" width="0.0801%" height="15" fill="rgb(230,172,52)" fg:x="376" fg:w="1"/><text x="30.3541%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.1041%" y="261" width="0.0801%" height="15" fill="rgb(210,48,36)" fg:x="376" fg:w="1"/><text x="30.3541%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.1041%" y="245" width="0.0801%" height="15" fill="rgb(216,213,32)" fg:x="376" fg:w="1"/><text x="30.3541%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.1041%" y="229" width="0.0801%" height="15" fill="rgb(237,202,41)" fg:x="376" fg:w="1"/><text x="30.3541%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1041%" y="213" width="0.0801%" height="15" fill="rgb(209,14,29)" fg:x="376" fg:w="1"/><text x="30.3541%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.1041%" y="421" width="0.1601%" height="15" fill="rgb(219,29,3)" fg:x="376" fg:w="2"/><text x="30.3541%" y="431.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.1041%" y="405" width="0.1601%" height="15" fill="rgb(229,13,49)" fg:x="376" fg:w="2"/><text x="30.3541%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.1041%" y="389" width="0.1601%" height="15" fill="rgb(210,206,2)" fg:x="376" fg:w="2"/><text x="30.3541%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.1041%" y="373" width="0.1601%" height="15" fill="rgb(216,154,46)" fg:x="376" fg:w="2"/><text x="30.3541%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="30.1041%" y="357" width="0.1601%" height="15" fill="rgb(211,170,52)" fg:x="376" fg:w="2"/><text x="30.3541%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="30.1041%" y="341" width="0.1601%" height="15" fill="rgb(233,109,47)" fg:x="376" fg:w="2"/><text x="30.3541%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="30.1041%" y="325" width="0.1601%" height="15" fill="rgb(208,212,30)" fg:x="376" fg:w="2"/><text x="30.3541%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="30.1841%" y="309" width="0.0801%" height="15" fill="rgb(215,190,19)" fg:x="377" fg:w="1"/><text x="30.4341%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.1841%" y="293" width="0.0801%" height="15" fill="rgb(207,164,53)" fg:x="377" fg:w="1"/><text x="30.4341%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.3443%" y="293" width="0.0801%" height="15" fill="rgb(213,87,49)" fg:x="379" fg:w="1"/><text x="30.5943%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.3443%" y="277" width="0.0801%" height="15" fill="rgb(241,216,24)" fg:x="379" fg:w="1"/><text x="30.5943%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3443%" y="261" width="0.0801%" height="15" fill="rgb(241,123,45)" fg:x="379" fg:w="1"/><text x="30.5943%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3443%" y="245" width="0.0801%" height="15" fill="rgb(220,36,15)" fg:x="379" fg:w="1"/><text x="30.5943%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.3443%" y="229" width="0.0801%" height="15" fill="rgb(215,202,9)" fg:x="379" fg:w="1"/><text x="30.5943%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.3443%" y="213" width="0.0801%" height="15" fill="rgb(252,71,26)" fg:x="379" fg:w="1"/><text x="30.5943%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.3443%" y="197" width="0.0801%" height="15" fill="rgb(243,195,19)" fg:x="379" fg:w="1"/><text x="30.5943%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.3443%" y="181" width="0.0801%" height="15" fill="rgb(207,167,27)" fg:x="379" fg:w="1"/><text x="30.5943%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.3443%" y="165" width="0.0801%" height="15" fill="rgb(250,146,54)" fg:x="379" fg:w="1"/><text x="30.5943%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.3443%" y="149" width="0.0801%" height="15" fill="rgb(245,79,9)" fg:x="379" fg:w="1"/><text x="30.5943%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.3443%" y="133" width="0.0801%" height="15" fill="rgb(234,197,22)" fg:x="379" fg:w="1"/><text x="30.5943%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.3443%" y="117" width="0.0801%" height="15" fill="rgb(221,52,48)" fg:x="379" fg:w="1"/><text x="30.5943%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.3443%" y="101" width="0.0801%" height="15" fill="rgb(235,80,0)" fg:x="379" fg:w="1"/><text x="30.5943%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3443%" y="85" width="0.0801%" height="15" fill="rgb(221,117,53)" fg:x="379" fg:w="1"/><text x="30.5943%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.3443%" y="325" width="0.1601%" height="15" fill="rgb(239,48,47)" fg:x="379" fg:w="2"/><text x="30.5943%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.3443%" y="309" width="0.1601%" height="15" fill="rgb(227,191,52)" fg:x="379" fg:w="2"/><text x="30.5943%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.4243%" y="293" width="0.0801%" height="15" fill="rgb(241,118,1)" fg:x="380" fg:w="1"/><text x="30.6743%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (25 samples, 2.00%)</title><rect x="28.5829%" y="469" width="2.0016%" height="15" fill="rgb(240,85,3)" fg:x="357" fg:w="25"/><text x="28.8329%" y="479.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (25 samples, 2.00%)</title><rect x="28.5829%" y="453" width="2.0016%" height="15" fill="rgb(237,68,37)" fg:x="357" fg:w="25"/><text x="28.8329%" y="463.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (8 samples, 0.64%)</title><rect x="29.9440%" y="437" width="0.6405%" height="15" fill="rgb(212,9,20)" fg:x="374" fg:w="8"/><text x="30.1940%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="30.2642%" y="421" width="0.3203%" height="15" fill="rgb(218,84,17)" fg:x="378" fg:w="4"/><text x="30.5142%" y="431.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="30.2642%" y="405" width="0.3203%" height="15" fill="rgb(235,147,20)" fg:x="378" fg:w="4"/><text x="30.5142%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::name (4 samples, 0.32%)</title><rect x="30.2642%" y="389" width="0.3203%" height="15" fill="rgb(208,224,1)" fg:x="378" fg:w="4"/><text x="30.5142%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="30.2642%" y="373" width="0.3203%" height="15" fill="rgb(232,97,50)" fg:x="378" fg:w="4"/><text x="30.5142%" y="383.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="30.2642%" y="357" width="0.3203%" height="15" fill="rgb(238,15,45)" fg:x="378" fg:w="4"/><text x="30.5142%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="30.2642%" y="341" width="0.3203%" height="15" fill="rgb(231,46,18)" fg:x="378" fg:w="4"/><text x="30.5142%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5044%" y="325" width="0.0801%" height="15" fill="rgb(254,169,10)" fg:x="381" fg:w="1"/><text x="30.7544%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5044%" y="309" width="0.0801%" height="15" fill="rgb(243,169,30)" fg:x="381" fg:w="1"/><text x="30.7544%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="30.5044%" y="293" width="0.0801%" height="15" fill="rgb(236,90,49)" fg:x="381" fg:w="1"/><text x="30.7544%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.5044%" y="277" width="0.0801%" height="15" fill="rgb(218,80,15)" fg:x="381" fg:w="1"/><text x="30.7544%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5845%" y="453" width="0.0801%" height="15" fill="rgb(222,115,37)" fg:x="382" fg:w="1"/><text x="30.8345%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6645%" y="405" width="0.0801%" height="15" fill="rgb(227,0,6)" fg:x="383" fg:w="1"/><text x="30.9145%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6645%" y="389" width="0.0801%" height="15" fill="rgb(217,189,13)" fg:x="383" fg:w="1"/><text x="30.9145%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6645%" y="373" width="0.0801%" height="15" fill="rgb(220,74,19)" fg:x="383" fg:w="1"/><text x="30.9145%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6645%" y="357" width="0.0801%" height="15" fill="rgb(224,81,18)" fg:x="383" fg:w="1"/><text x="30.9145%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6645%" y="341" width="0.0801%" height="15" fill="rgb(245,178,48)" fg:x="383" fg:w="1"/><text x="30.9145%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6645%" y="325" width="0.0801%" height="15" fill="rgb(207,78,24)" fg:x="383" fg:w="1"/><text x="30.9145%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.6645%" y="453" width="0.1601%" height="15" fill="rgb(223,222,30)" fg:x="383" fg:w="2"/><text x="30.9145%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.6645%" y="437" width="0.1601%" height="15" fill="rgb(234,101,12)" fg:x="383" fg:w="2"/><text x="30.9145%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.6645%" y="421" width="0.1601%" height="15" fill="rgb(209,80,46)" fg:x="383" fg:w="2"/><text x="30.9145%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.7446%" y="405" width="0.0801%" height="15" fill="rgb(228,79,14)" fg:x="384" fg:w="1"/><text x="30.9946%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7446%" y="389" width="0.0801%" height="15" fill="rgb(220,219,34)" fg:x="384" fg:w="1"/><text x="30.9946%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.7446%" y="373" width="0.0801%" height="15" fill="rgb(207,80,21)" fg:x="384" fg:w="1"/><text x="30.9946%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7446%" y="357" width="0.0801%" height="15" fill="rgb(210,154,44)" fg:x="384" fg:w="1"/><text x="30.9946%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.7446%" y="341" width="0.0801%" height="15" fill="rgb(246,44,39)" fg:x="384" fg:w="1"/><text x="30.9946%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7446%" y="325" width="0.0801%" height="15" fill="rgb(252,175,13)" fg:x="384" fg:w="1"/><text x="30.9946%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.7446%" y="309" width="0.0801%" height="15" fill="rgb(211,50,39)" fg:x="384" fg:w="1"/><text x="30.9946%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7446%" y="293" width="0.0801%" height="15" fill="rgb(231,204,27)" fg:x="384" fg:w="1"/><text x="30.9946%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9047%" y="341" width="0.0801%" height="15" fill="rgb(253,26,34)" fg:x="386" fg:w="1"/><text x="31.1547%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9047%" y="325" width="0.0801%" height="15" fill="rgb(207,139,38)" fg:x="386" fg:w="1"/><text x="31.1547%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9848%" y="341" width="0.0801%" height="15" fill="rgb(248,54,27)" fg:x="387" fg:w="1"/><text x="31.2348%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9848%" y="325" width="0.0801%" height="15" fill="rgb(234,25,33)" fg:x="387" fg:w="1"/><text x="31.2348%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.9848%" y="309" width="0.0801%" height="15" fill="rgb(249,107,47)" fg:x="387" fg:w="1"/><text x="31.2348%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.9848%" y="293" width="0.0801%" height="15" fill="rgb(230,190,31)" fg:x="387" fg:w="1"/><text x="31.2348%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.9848%" y="277" width="0.0801%" height="15" fill="rgb(238,173,45)" fg:x="387" fg:w="1"/><text x="31.2348%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="30.9848%" y="261" width="0.0801%" height="15" fill="rgb(222,16,50)" fg:x="387" fg:w="1"/><text x="31.2348%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.9848%" y="245" width="0.0801%" height="15" fill="rgb(251,204,47)" fg:x="387" fg:w="1"/><text x="31.2348%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="30.8247%" y="357" width="0.3203%" height="15" fill="rgb(225,12,3)" fg:x="385" fg:w="4"/><text x="31.0747%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.0649%" y="341" width="0.0801%" height="15" fill="rgb(214,208,22)" fg:x="388" fg:w="1"/><text x="31.3149%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1449%" y="357" width="0.0801%" height="15" fill="rgb(240,57,32)" fg:x="389" fg:w="1"/><text x="31.3949%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1449%" y="341" width="0.0801%" height="15" fill="rgb(243,113,48)" fg:x="389" fg:w="1"/><text x="31.3949%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.1449%" y="325" width="0.0801%" height="15" fill="rgb(225,135,30)" fg:x="389" fg:w="1"/><text x="31.3949%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.1449%" y="309" width="0.0801%" height="15" fill="rgb(222,3,53)" fg:x="389" fg:w="1"/><text x="31.3949%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.1449%" y="293" width="0.0801%" height="15" fill="rgb(243,142,2)" fg:x="389" fg:w="1"/><text x="31.3949%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1449%" y="277" width="0.0801%" height="15" fill="rgb(233,67,14)" fg:x="389" fg:w="1"/><text x="31.3949%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1449%" y="261" width="0.0801%" height="15" fill="rgb(245,125,36)" fg:x="389" fg:w="1"/><text x="31.3949%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.1449%" y="245" width="0.0801%" height="15" fill="rgb(225,199,6)" fg:x="389" fg:w="1"/><text x="31.3949%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.1449%" y="229" width="0.0801%" height="15" fill="rgb(244,71,6)" fg:x="389" fg:w="1"/><text x="31.3949%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.1449%" y="213" width="0.0801%" height="15" fill="rgb(225,62,9)" fg:x="389" fg:w="1"/><text x="31.3949%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.1449%" y="197" width="0.0801%" height="15" fill="rgb(246,139,53)" fg:x="389" fg:w="1"/><text x="31.3949%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1449%" y="181" width="0.0801%" height="15" fill="rgb(243,161,46)" fg:x="389" fg:w="1"/><text x="31.3949%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="30.8247%" y="405" width="0.5604%" height="15" fill="rgb(236,153,7)" fg:x="385" fg:w="7"/><text x="31.0747%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="30.8247%" y="389" width="0.5604%" height="15" fill="rgb(248,42,35)" fg:x="385" fg:w="7"/><text x="31.0747%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="30.8247%" y="373" width="0.5604%" height="15" fill="rgb(250,17,31)" fg:x="385" fg:w="7"/><text x="31.0747%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.2250%" y="357" width="0.1601%" height="15" fill="rgb(248,138,14)" fg:x="390" fg:w="2"/><text x="31.4750%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.3851%" y="341" width="0.0801%" height="15" fill="rgb(228,161,3)" fg:x="392" fg:w="1"/><text x="31.6351%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3851%" y="325" width="0.0801%" height="15" fill="rgb(248,116,17)" fg:x="392" fg:w="1"/><text x="31.6351%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.4652%" y="245" width="0.0801%" height="15" fill="rgb(207,78,24)" fg:x="393" fg:w="1"/><text x="31.7152%" y="255.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (13 samples, 1.04%)</title><rect x="30.5845%" y="469" width="1.0408%" height="15" fill="rgb(234,99,48)" fg:x="382" fg:w="13"/><text x="30.8345%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.80%)</title><rect x="30.8247%" y="453" width="0.8006%" height="15" fill="rgb(242,22,26)" fg:x="385" fg:w="10"/><text x="31.0747%" y="463.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="30.8247%" y="437" width="0.8006%" height="15" fill="rgb(227,78,32)" fg:x="385" fg:w="10"/><text x="31.0747%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="30.8247%" y="421" width="0.8006%" height="15" fill="rgb(226,189,43)" fg:x="385" fg:w="10"/><text x="31.0747%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="31.3851%" y="405" width="0.2402%" height="15" fill="rgb(227,218,35)" fg:x="392" fg:w="3"/><text x="31.6351%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.3851%" y="389" width="0.2402%" height="15" fill="rgb(206,111,40)" fg:x="392" fg:w="3"/><text x="31.6351%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="31.3851%" y="373" width="0.2402%" height="15" fill="rgb(208,217,22)" fg:x="392" fg:w="3"/><text x="31.6351%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.3851%" y="357" width="0.2402%" height="15" fill="rgb(248,20,20)" fg:x="392" fg:w="3"/><text x="31.6351%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.4652%" y="341" width="0.1601%" height="15" fill="rgb(239,155,16)" fg:x="393" fg:w="2"/><text x="31.7152%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.4652%" y="325" width="0.1601%" height="15" fill="rgb(238,171,46)" fg:x="393" fg:w="2"/><text x="31.7152%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.4652%" y="309" width="0.1601%" height="15" fill="rgb(248,11,36)" fg:x="393" fg:w="2"/><text x="31.7152%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.4652%" y="293" width="0.1601%" height="15" fill="rgb(220,148,37)" fg:x="393" fg:w="2"/><text x="31.7152%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.4652%" y="277" width="0.1601%" height="15" fill="rgb(218,144,42)" fg:x="393" fg:w="2"/><text x="31.7152%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.4652%" y="261" width="0.1601%" height="15" fill="rgb(245,20,20)" fg:x="393" fg:w="2"/><text x="31.7152%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="31.5452%" y="245" width="0.0801%" height="15" fill="rgb(240,111,48)" fg:x="394" fg:w="1"/><text x="31.7952%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="31.5452%" y="229" width="0.0801%" height="15" fill="rgb(237,225,32)" fg:x="394" fg:w="1"/><text x="31.7952%" y="239.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="31.6253%" y="469" width="0.0801%" height="15" fill="rgb(228,161,46)" fg:x="395" fg:w="1"/><text x="31.8753%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.6253%" y="453" width="0.0801%" height="15" fill="rgb(235,196,21)" fg:x="395" fg:w="1"/><text x="31.8753%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.6253%" y="437" width="0.0801%" height="15" fill="rgb(250,133,21)" fg:x="395" fg:w="1"/><text x="31.8753%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.6253%" y="421" width="0.0801%" height="15" fill="rgb(236,94,32)" fg:x="395" fg:w="1"/><text x="31.8753%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.6253%" y="405" width="0.0801%" height="15" fill="rgb(219,176,25)" fg:x="395" fg:w="1"/><text x="31.8753%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.6253%" y="389" width="0.0801%" height="15" fill="rgb(211,17,43)" fg:x="395" fg:w="1"/><text x="31.8753%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.6253%" y="373" width="0.0801%" height="15" fill="rgb(220,75,23)" fg:x="395" fg:w="1"/><text x="31.8753%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.6253%" y="357" width="0.0801%" height="15" fill="rgb(215,122,32)" fg:x="395" fg:w="1"/><text x="31.8753%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.6253%" y="341" width="0.0801%" height="15" fill="rgb(218,57,38)" fg:x="395" fg:w="1"/><text x="31.8753%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.6253%" y="325" width="0.0801%" height="15" fill="rgb(233,208,46)" fg:x="395" fg:w="1"/><text x="31.8753%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.6253%" y="309" width="0.0801%" height="15" fill="rgb(221,35,50)" fg:x="395" fg:w="1"/><text x="31.8753%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.6253%" y="293" width="0.0801%" height="15" fill="rgb(229,213,29)" fg:x="395" fg:w="1"/><text x="31.8753%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.6253%" y="277" width="0.0801%" height="15" fill="rgb(229,110,40)" fg:x="395" fg:w="1"/><text x="31.8753%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6253%" y="261" width="0.0801%" height="15" fill="rgb(247,206,19)" fg:x="395" fg:w="1"/><text x="31.8753%" y="271.50"></text></g><g><title>plugins_core::library::actions::reply_done (2 samples, 0.16%)</title><rect x="31.7054%" y="469" width="0.1601%" height="15" fill="rgb(216,229,45)" fg:x="396" fg:w="2"/><text x="31.9554%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (2 samples, 0.16%)</title><rect x="31.7054%" y="453" width="0.1601%" height="15" fill="rgb(205,184,31)" fg:x="396" fg:w="2"/><text x="31.9554%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="31.7054%" y="437" width="0.1601%" height="15" fill="rgb(213,91,10)" fg:x="396" fg:w="2"/><text x="31.9554%" y="447.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (2 samples, 0.16%)</title><rect x="31.7054%" y="421" width="0.1601%" height="15" fill="rgb(250,49,8)" fg:x="396" fg:w="2"/><text x="31.9554%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="31.7054%" y="405" width="0.1601%" height="15" fill="rgb(207,26,8)" fg:x="396" fg:w="2"/><text x="31.9554%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="31.7054%" y="389" width="0.1601%" height="15" fill="rgb(224,2,13)" fg:x="396" fg:w="2"/><text x="31.9554%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="31.7854%" y="373" width="0.0801%" height="15" fill="rgb(219,108,27)" fg:x="397" fg:w="1"/><text x="32.0354%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="31.7854%" y="357" width="0.0801%" height="15" fill="rgb(240,89,32)" fg:x="397" fg:w="1"/><text x="32.0354%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="31.7854%" y="341" width="0.0801%" height="15" fill="rgb(248,205,3)" fg:x="397" fg:w="1"/><text x="32.0354%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.8655%" y="453" width="0.0801%" height="15" fill="rgb(236,197,47)" fg:x="398" fg:w="1"/><text x="32.1155%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="31.9456%" y="453" width="0.0801%" height="15" fill="rgb(244,185,52)" fg:x="399" fg:w="1"/><text x="32.1956%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="31.9456%" y="437" width="0.0801%" height="15" fill="rgb(210,206,23)" fg:x="399" fg:w="1"/><text x="32.1956%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="32.0256%" y="405" width="0.0801%" height="15" fill="rgb(251,177,30)" fg:x="400" fg:w="1"/><text x="32.2756%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.0256%" y="389" width="0.0801%" height="15" fill="rgb(243,27,45)" fg:x="400" fg:w="1"/><text x="32.2756%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="32.0256%" y="421" width="0.1601%" height="15" fill="rgb(248,141,51)" fg:x="400" fg:w="2"/><text x="32.2756%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="32.1057%" y="405" width="0.0801%" height="15" fill="rgb(235,102,15)" fg:x="401" fg:w="1"/><text x="32.3557%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.1057%" y="389" width="0.0801%" height="15" fill="rgb(214,164,53)" fg:x="401" fg:w="1"/><text x="32.3557%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.1057%" y="373" width="0.0801%" height="15" fill="rgb(228,18,51)" fg:x="401" fg:w="1"/><text x="32.3557%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.1057%" y="357" width="0.0801%" height="15" fill="rgb(205,211,11)" fg:x="401" fg:w="1"/><text x="32.3557%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.1057%" y="341" width="0.0801%" height="15" fill="rgb(208,63,6)" fg:x="401" fg:w="1"/><text x="32.3557%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1057%" y="325" width="0.0801%" height="15" fill="rgb(245,76,14)" fg:x="401" fg:w="1"/><text x="32.3557%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.1857%" y="373" width="0.0801%" height="15" fill="rgb(234,176,34)" fg:x="402" fg:w="1"/><text x="32.4357%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.1857%" y="357" width="0.0801%" height="15" fill="rgb(243,156,42)" fg:x="402" fg:w="1"/><text x="32.4357%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.2658%" y="245" width="0.0801%" height="15" fill="rgb(237,182,10)" fg:x="403" fg:w="1"/><text x="32.5158%" y="255.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="32.0256%" y="453" width="0.4003%" height="15" fill="rgb(244,117,0)" fg:x="400" fg:w="5"/><text x="32.2756%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="32.0256%" y="437" width="0.4003%" height="15" fill="rgb(239,91,50)" fg:x="400" fg:w="5"/><text x="32.2756%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="32.1857%" y="421" width="0.2402%" height="15" fill="rgb(206,38,9)" fg:x="402" fg:w="3"/><text x="32.4357%" y="431.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="32.1857%" y="405" width="0.2402%" height="15" fill="rgb(205,25,10)" fg:x="402" fg:w="3"/><text x="32.4357%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.1857%" y="389" width="0.2402%" height="15" fill="rgb(206,224,7)" fg:x="402" fg:w="3"/><text x="32.4357%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.2658%" y="373" width="0.1601%" height="15" fill="rgb(227,157,10)" fg:x="403" fg:w="2"/><text x="32.5158%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2658%" y="357" width="0.1601%" height="15" fill="rgb(214,157,37)" fg:x="403" fg:w="2"/><text x="32.5158%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.2658%" y="341" width="0.1601%" height="15" fill="rgb(209,180,35)" fg:x="403" fg:w="2"/><text x="32.5158%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2658%" y="325" width="0.1601%" height="15" fill="rgb(216,174,49)" fg:x="403" fg:w="2"/><text x="32.5158%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.2658%" y="309" width="0.1601%" height="15" fill="rgb(205,96,20)" fg:x="403" fg:w="2"/><text x="32.5158%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2658%" y="293" width="0.1601%" height="15" fill="rgb(214,220,39)" fg:x="403" fg:w="2"/><text x="32.5158%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.2658%" y="277" width="0.1601%" height="15" fill="rgb(245,126,30)" fg:x="403" fg:w="2"/><text x="32.5158%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2658%" y="261" width="0.1601%" height="15" fill="rgb(215,88,33)" fg:x="403" fg:w="2"/><text x="32.5158%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.3459%" y="245" width="0.0801%" height="15" fill="rgb(210,1,49)" fg:x="404" fg:w="1"/><text x="32.5959%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.3459%" y="229" width="0.0801%" height="15" fill="rgb(207,133,3)" fg:x="404" fg:w="1"/><text x="32.5959%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="32.5060%" y="389" width="0.0801%" height="15" fill="rgb(231,47,43)" fg:x="406" fg:w="1"/><text x="32.7560%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="32.5060%" y="373" width="0.0801%" height="15" fill="rgb(245,64,1)" fg:x="406" fg:w="1"/><text x="32.7560%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="32.5060%" y="357" width="0.0801%" height="15" fill="rgb(253,145,20)" fg:x="406" fg:w="1"/><text x="32.7560%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.5060%" y="341" width="0.0801%" height="15" fill="rgb(211,39,18)" fg:x="406" fg:w="1"/><text x="32.7560%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.5060%" y="325" width="0.0801%" height="15" fill="rgb(223,225,18)" fg:x="406" fg:w="1"/><text x="32.7560%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.5060%" y="309" width="0.0801%" height="15" fill="rgb(210,202,44)" fg:x="406" fg:w="1"/><text x="32.7560%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="32.4259%" y="453" width="0.2402%" height="15" fill="rgb(231,138,36)" fg:x="405" fg:w="3"/><text x="32.6759%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.4259%" y="437" width="0.2402%" height="15" fill="rgb(237,115,25)" fg:x="405" fg:w="3"/><text x="32.6759%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.5060%" y="421" width="0.1601%" height="15" fill="rgb(215,53,48)" fg:x="406" fg:w="2"/><text x="32.7560%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.5060%" y="405" width="0.1601%" height="15" fill="rgb(243,193,24)" fg:x="406" fg:w="2"/><text x="32.7560%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.5861%" y="389" width="0.0801%" height="15" fill="rgb(210,106,28)" fg:x="407" fg:w="1"/><text x="32.8361%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.5861%" y="373" width="0.0801%" height="15" fill="rgb(249,192,0)" fg:x="407" fg:w="1"/><text x="32.8361%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8263%" y="405" width="0.0801%" height="15" fill="rgb(224,96,21)" fg:x="410" fg:w="1"/><text x="33.0763%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8263%" y="389" width="0.0801%" height="15" fill="rgb(243,160,19)" fg:x="410" fg:w="1"/><text x="33.0763%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.8263%" y="373" width="0.0801%" height="15" fill="rgb(219,205,50)" fg:x="410" fg:w="1"/><text x="33.0763%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.8263%" y="357" width="0.0801%" height="15" fill="rgb(218,175,44)" fg:x="410" fg:w="1"/><text x="33.0763%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.8263%" y="341" width="0.0801%" height="15" fill="rgb(251,84,47)" fg:x="410" fg:w="1"/><text x="33.0763%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.8263%" y="325" width="0.0801%" height="15" fill="rgb(241,14,16)" fg:x="410" fg:w="1"/><text x="33.0763%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.8263%" y="309" width="0.0801%" height="15" fill="rgb(207,142,28)" fg:x="410" fg:w="1"/><text x="33.0763%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.8263%" y="293" width="0.0801%" height="15" fill="rgb(208,116,22)" fg:x="410" fg:w="1"/><text x="33.0763%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.8263%" y="277" width="0.0801%" height="15" fill="rgb(210,0,43)" fg:x="410" fg:w="1"/><text x="33.0763%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.8263%" y="261" width="0.0801%" height="15" fill="rgb(246,33,21)" fg:x="410" fg:w="1"/><text x="33.0763%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.8263%" y="245" width="0.0801%" height="15" fill="rgb(208,158,54)" fg:x="410" fg:w="1"/><text x="33.0763%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.8263%" y="229" width="0.0801%" height="15" fill="rgb(218,99,29)" fg:x="410" fg:w="1"/><text x="33.0763%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.8263%" y="421" width="0.2402%" height="15" fill="rgb(226,29,7)" fg:x="410" fg:w="3"/><text x="33.0763%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.9063%" y="405" width="0.1601%" height="15" fill="rgb(206,178,46)" fg:x="411" fg:w="2"/><text x="33.1563%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.9063%" y="389" width="0.1601%" height="15" fill="rgb(205,169,32)" fg:x="411" fg:w="2"/><text x="33.1563%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.9063%" y="373" width="0.1601%" height="15" fill="rgb(217,4,13)" fg:x="411" fg:w="2"/><text x="33.1563%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.9864%" y="357" width="0.0801%" height="15" fill="rgb(210,140,37)" fg:x="412" fg:w="1"/><text x="33.2364%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.9864%" y="341" width="0.0801%" height="15" fill="rgb(229,80,10)" fg:x="412" fg:w="1"/><text x="33.2364%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.9864%" y="325" width="0.0801%" height="15" fill="rgb(212,175,34)" fg:x="412" fg:w="1"/><text x="33.2364%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.9864%" y="309" width="0.0801%" height="15" fill="rgb(216,207,24)" fg:x="412" fg:w="1"/><text x="33.2364%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.9864%" y="293" width="0.0801%" height="15" fill="rgb(234,163,3)" fg:x="412" fg:w="1"/><text x="33.2364%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.9864%" y="277" width="0.0801%" height="15" fill="rgb(248,101,16)" fg:x="412" fg:w="1"/><text x="33.2364%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.9864%" y="261" width="0.0801%" height="15" fill="rgb(209,152,54)" fg:x="412" fg:w="1"/><text x="33.2364%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.9864%" y="245" width="0.0801%" height="15" fill="rgb(229,124,51)" fg:x="412" fg:w="1"/><text x="33.2364%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.9864%" y="229" width="0.0801%" height="15" fill="rgb(219,83,18)" fg:x="412" fg:w="1"/><text x="33.2364%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.9864%" y="213" width="0.0801%" height="15" fill="rgb(206,29,38)" fg:x="412" fg:w="1"/><text x="33.2364%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9864%" y="197" width="0.0801%" height="15" fill="rgb(245,123,23)" fg:x="412" fg:w="1"/><text x="33.2364%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.0665%" y="421" width="0.0801%" height="15" fill="rgb(238,50,33)" fg:x="413" fg:w="1"/><text x="33.3165%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="33.0665%" y="405" width="0.0801%" height="15" fill="rgb(234,165,23)" fg:x="413" fg:w="1"/><text x="33.3165%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1465%" y="389" width="0.0801%" height="15" fill="rgb(211,82,31)" fg:x="414" fg:w="1"/><text x="33.3965%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="33.1465%" y="421" width="0.2402%" height="15" fill="rgb(224,166,46)" fg:x="414" fg:w="3"/><text x="33.3965%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="33.1465%" y="405" width="0.2402%" height="15" fill="rgb(211,13,8)" fg:x="414" fg:w="3"/><text x="33.3965%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.2266%" y="389" width="0.1601%" height="15" fill="rgb(212,7,42)" fg:x="415" fg:w="2"/><text x="33.4766%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="33.3066%" y="373" width="0.0801%" height="15" fill="rgb(249,102,19)" fg:x="416" fg:w="1"/><text x="33.5566%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.3066%" y="357" width="0.0801%" height="15" fill="rgb(225,41,13)" fg:x="416" fg:w="1"/><text x="33.5566%" y="367.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (10 samples, 0.80%)</title><rect x="32.6661%" y="453" width="0.8006%" height="15" fill="rgb(220,65,27)" fg:x="408" fg:w="10"/><text x="32.9161%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (10 samples, 0.80%)</title><rect x="32.6661%" y="437" width="0.8006%" height="15" fill="rgb(206,4,41)" fg:x="408" fg:w="10"/><text x="32.9161%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="33.3867%" y="421" width="0.0801%" height="15" fill="rgb(219,60,39)" fg:x="417" fg:w="1"/><text x="33.6367%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.3867%" y="405" width="0.0801%" height="15" fill="rgb(226,4,38)" fg:x="417" fg:w="1"/><text x="33.6367%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.3867%" y="389" width="0.0801%" height="15" fill="rgb(250,52,3)" fg:x="417" fg:w="1"/><text x="33.6367%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="33.3867%" y="373" width="0.0801%" height="15" fill="rgb(234,93,0)" fg:x="417" fg:w="1"/><text x="33.6367%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.3867%" y="357" width="0.0801%" height="15" fill="rgb(251,47,47)" fg:x="417" fg:w="1"/><text x="33.6367%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.3867%" y="341" width="0.0801%" height="15" fill="rgb(205,166,47)" fg:x="417" fg:w="1"/><text x="33.6367%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4668%" y="357" width="0.0801%" height="15" fill="rgb(231,148,8)" fg:x="418" fg:w="1"/><text x="33.7168%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4668%" y="341" width="0.0801%" height="15" fill="rgb(244,185,19)" fg:x="418" fg:w="1"/><text x="33.7168%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4668%" y="325" width="0.0801%" height="15" fill="rgb(224,201,45)" fg:x="418" fg:w="1"/><text x="33.7168%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4668%" y="309" width="0.0801%" height="15" fill="rgb(240,77,39)" fg:x="418" fg:w="1"/><text x="33.7168%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4668%" y="293" width="0.0801%" height="15" fill="rgb(248,211,29)" fg:x="418" fg:w="1"/><text x="33.7168%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="33.4668%" y="405" width="0.1601%" height="15" fill="rgb(232,214,46)" fg:x="418" fg:w="2"/><text x="33.7168%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="33.4668%" y="389" width="0.1601%" height="15" fill="rgb(213,99,54)" fg:x="418" fg:w="2"/><text x="33.7168%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="33.4668%" y="373" width="0.1601%" height="15" fill="rgb(240,19,46)" fg:x="418" fg:w="2"/><text x="33.7168%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.5468%" y="357" width="0.0801%" height="15" fill="rgb(243,89,10)" fg:x="419" fg:w="1"/><text x="33.7968%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.5468%" y="341" width="0.0801%" height="15" fill="rgb(249,28,32)" fg:x="419" fg:w="1"/><text x="33.7968%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.5468%" y="325" width="0.0801%" height="15" fill="rgb(253,30,9)" fg:x="419" fg:w="1"/><text x="33.7968%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.5468%" y="309" width="0.0801%" height="15" fill="rgb(217,2,26)" fg:x="419" fg:w="1"/><text x="33.7968%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.5468%" y="293" width="0.0801%" height="15" fill="rgb(220,28,10)" fg:x="419" fg:w="1"/><text x="33.7968%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.5468%" y="277" width="0.0801%" height="15" fill="rgb(228,167,49)" fg:x="419" fg:w="1"/><text x="33.7968%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.5468%" y="261" width="0.0801%" height="15" fill="rgb(238,212,3)" fg:x="419" fg:w="1"/><text x="33.7968%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.5468%" y="245" width="0.0801%" height="15" fill="rgb(229,134,44)" fg:x="419" fg:w="1"/><text x="33.7968%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.5468%" y="229" width="0.0801%" height="15" fill="rgb(208,71,4)" fg:x="419" fg:w="1"/><text x="33.7968%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6269%" y="357" width="0.0801%" height="15" fill="rgb(221,205,45)" fg:x="420" fg:w="1"/><text x="33.8769%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6269%" y="341" width="0.0801%" height="15" fill="rgb(215,132,38)" fg:x="420" fg:w="1"/><text x="33.8769%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6269%" y="325" width="0.0801%" height="15" fill="rgb(227,158,6)" fg:x="420" fg:w="1"/><text x="33.8769%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6269%" y="309" width="0.0801%" height="15" fill="rgb(250,10,38)" fg:x="420" fg:w="1"/><text x="33.8769%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7070%" y="325" width="0.0801%" height="15" fill="rgb(225,171,40)" fg:x="421" fg:w="1"/><text x="33.9570%" y="335.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="33.4668%" y="437" width="0.4003%" height="15" fill="rgb(238,17,43)" fg:x="418" fg:w="5"/><text x="33.7168%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="33.4668%" y="421" width="0.4003%" height="15" fill="rgb(208,145,4)" fg:x="418" fg:w="5"/><text x="33.7168%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="33.6269%" y="405" width="0.2402%" height="15" fill="rgb(232,82,7)" fg:x="420" fg:w="3"/><text x="33.8769%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="33.6269%" y="389" width="0.2402%" height="15" fill="rgb(205,166,38)" fg:x="420" fg:w="3"/><text x="33.8769%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="33.6269%" y="373" width="0.2402%" height="15" fill="rgb(240,228,4)" fg:x="420" fg:w="3"/><text x="33.8769%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.7070%" y="357" width="0.1601%" height="15" fill="rgb(233,121,40)" fg:x="421" fg:w="2"/><text x="33.9570%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.7070%" y="341" width="0.1601%" height="15" fill="rgb(243,84,30)" fg:x="421" fg:w="2"/><text x="33.9570%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7870%" y="325" width="0.0801%" height="15" fill="rgb(235,81,48)" fg:x="422" fg:w="1"/><text x="34.0370%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7870%" y="309" width="0.0801%" height="15" fill="rgb(218,137,0)" fg:x="422" fg:w="1"/><text x="34.0370%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.7870%" y="293" width="0.0801%" height="15" fill="rgb(223,151,48)" fg:x="422" fg:w="1"/><text x="34.0370%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7870%" y="277" width="0.0801%" height="15" fill="rgb(247,30,19)" fg:x="422" fg:w="1"/><text x="34.0370%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7870%" y="261" width="0.0801%" height="15" fill="rgb(205,129,29)" fg:x="422" fg:w="1"/><text x="34.0370%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7870%" y="245" width="0.0801%" height="15" fill="rgb(222,29,2)" fg:x="422" fg:w="1"/><text x="34.0370%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7870%" y="229" width="0.0801%" height="15" fill="rgb(232,145,33)" fg:x="422" fg:w="1"/><text x="34.0370%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7870%" y="213" width="0.0801%" height="15" fill="rgb(217,30,31)" fg:x="422" fg:w="1"/><text x="34.0370%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7870%" y="197" width="0.0801%" height="15" fill="rgb(243,22,52)" fg:x="422" fg:w="1"/><text x="34.0370%" y="207.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="33.4668%" y="453" width="0.5604%" height="15" fill="rgb(254,228,14)" fg:x="418" fg:w="7"/><text x="33.7168%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="33.8671%" y="437" width="0.1601%" height="15" fill="rgb(231,45,50)" fg:x="423" fg:w="2"/><text x="34.1171%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="33.8671%" y="421" width="0.1601%" height="15" fill="rgb(248,125,3)" fg:x="423" fg:w="2"/><text x="34.1171%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="33.9472%" y="405" width="0.0801%" height="15" fill="rgb(213,76,9)" fg:x="424" fg:w="1"/><text x="34.1972%" y="415.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="33.9472%" y="389" width="0.0801%" height="15" fill="rgb(238,108,21)" fg:x="424" fg:w="1"/><text x="34.1972%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="33.9472%" y="373" width="0.0801%" height="15" fill="rgb(229,214,19)" fg:x="424" fg:w="1"/><text x="34.1972%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="33.9472%" y="357" width="0.0801%" height="15" fill="rgb(252,201,5)" fg:x="424" fg:w="1"/><text x="34.1972%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.9472%" y="341" width="0.0801%" height="15" fill="rgb(233,165,49)" fg:x="424" fg:w="1"/><text x="34.1972%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.9472%" y="325" width="0.0801%" height="15" fill="rgb(208,165,19)" fg:x="424" fg:w="1"/><text x="34.1972%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="33.9472%" y="309" width="0.0801%" height="15" fill="rgb(216,220,31)" fg:x="424" fg:w="1"/><text x="34.1972%" y="319.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="33.9472%" y="293" width="0.0801%" height="15" fill="rgb(214,8,31)" fg:x="424" fg:w="1"/><text x="34.1972%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="33.9472%" y="277" width="0.0801%" height="15" fill="rgb(220,32,32)" fg:x="424" fg:w="1"/><text x="34.1972%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="33.9472%" y="261" width="0.0801%" height="15" fill="rgb(237,172,34)" fg:x="424" fg:w="1"/><text x="34.1972%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (70 samples, 5.60%)</title><rect x="28.5028%" y="485" width="5.6045%" height="15" fill="rgb(240,209,5)" fg:x="356" fg:w="70"/><text x="28.7528%" y="495.50">&lt;plugin..</text></g><g><title>plugins_core::tools::move_between (28 samples, 2.24%)</title><rect x="31.8655%" y="469" width="2.2418%" height="15" fill="rgb(221,219,1)" fg:x="398" fg:w="28"/><text x="32.1155%" y="479.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="34.0272%" y="453" width="0.0801%" height="15" fill="rgb(237,90,36)" fg:x="425" fg:w="1"/><text x="34.2772%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="34.0272%" y="437" width="0.0801%" height="15" fill="rgb(245,14,51)" fg:x="425" fg:w="1"/><text x="34.2772%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.0272%" y="421" width="0.0801%" height="15" fill="rgb(211,71,49)" fg:x="425" fg:w="1"/><text x="34.2772%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.1873%" y="421" width="0.0801%" height="15" fill="rgb(230,223,9)" fg:x="427" fg:w="1"/><text x="34.4373%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="34.2674%" y="421" width="0.3203%" height="15" fill="rgb(212,33,31)" fg:x="428" fg:w="4"/><text x="34.5174%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="34.2674%" y="405" width="0.3203%" height="15" fill="rgb(218,141,5)" fg:x="428" fg:w="4"/><text x="34.5174%" y="415.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="34.2674%" y="389" width="0.3203%" height="15" fill="rgb(239,194,8)" fg:x="428" fg:w="4"/><text x="34.5174%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.6677%" y="373" width="0.1601%" height="15" fill="rgb(225,119,29)" fg:x="433" fg:w="2"/><text x="34.9177%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7478%" y="357" width="0.0801%" height="15" fill="rgb(233,32,3)" fg:x="434" fg:w="1"/><text x="34.9978%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.7478%" y="341" width="0.0801%" height="15" fill="rgb(248,126,40)" fg:x="434" fg:w="1"/><text x="34.9978%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.7478%" y="325" width="0.0801%" height="15" fill="rgb(213,102,53)" fg:x="434" fg:w="1"/><text x="34.9978%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.7478%" y="309" width="0.0801%" height="15" fill="rgb(212,69,15)" fg:x="434" fg:w="1"/><text x="34.9978%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.7478%" y="293" width="0.0801%" height="15" fill="rgb(253,39,34)" fg:x="434" fg:w="1"/><text x="34.9978%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.7478%" y="277" width="0.0801%" height="15" fill="rgb(205,189,54)" fg:x="434" fg:w="1"/><text x="34.9978%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.7478%" y="261" width="0.0801%" height="15" fill="rgb(234,229,45)" fg:x="434" fg:w="1"/><text x="34.9978%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.7478%" y="245" width="0.0801%" height="15" fill="rgb(243,79,48)" fg:x="434" fg:w="1"/><text x="34.9978%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.7478%" y="229" width="0.0801%" height="15" fill="rgb(206,71,50)" fg:x="434" fg:w="1"/><text x="34.9978%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.7478%" y="213" width="0.0801%" height="15" fill="rgb(209,32,17)" fg:x="434" fg:w="1"/><text x="34.9978%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.7478%" y="197" width="0.0801%" height="15" fill="rgb(219,229,6)" fg:x="434" fg:w="1"/><text x="34.9978%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.7478%" y="181" width="0.0801%" height="15" fill="rgb(226,25,27)" fg:x="434" fg:w="1"/><text x="34.9978%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7478%" y="165" width="0.0801%" height="15" fill="rgb(218,185,23)" fg:x="434" fg:w="1"/><text x="34.9978%" y="175.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="34.8279%" y="373" width="0.0801%" height="15" fill="rgb(242,123,5)" fg:x="435" fg:w="1"/><text x="35.0779%" y="383.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (13 samples, 1.04%)</title><rect x="34.1073%" y="437" width="1.0408%" height="15" fill="rgb(215,53,19)" fg:x="426" fg:w="13"/><text x="34.3573%" y="447.50"></text></g><g><title>plugins_core::tools::contained_by (7 samples, 0.56%)</title><rect x="34.5877%" y="421" width="0.5604%" height="15" fill="rgb(233,20,30)" fg:x="432" fg:w="7"/><text x="34.8377%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="34.5877%" y="405" width="0.5604%" height="15" fill="rgb(209,67,20)" fg:x="432" fg:w="7"/><text x="34.8377%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="34.5877%" y="389" width="0.5604%" height="15" fill="rgb(227,181,50)" fg:x="432" fg:w="7"/><text x="34.8377%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="34.9079%" y="373" width="0.2402%" height="15" fill="rgb(252,75,38)" fg:x="436" fg:w="3"/><text x="35.1579%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.9079%" y="357" width="0.2402%" height="15" fill="rgb(235,9,33)" fg:x="436" fg:w="3"/><text x="35.1579%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="34.9079%" y="341" width="0.2402%" height="15" fill="rgb(208,87,30)" fg:x="436" fg:w="3"/><text x="35.1579%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="34.9079%" y="325" width="0.2402%" height="15" fill="rgb(215,199,39)" fg:x="436" fg:w="3"/><text x="35.1579%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="34.9079%" y="309" width="0.2402%" height="15" fill="rgb(246,208,12)" fg:x="436" fg:w="3"/><text x="35.1579%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="34.9079%" y="293" width="0.2402%" height="15" fill="rgb(206,195,10)" fg:x="436" fg:w="3"/><text x="35.1579%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.9880%" y="277" width="0.1601%" height="15" fill="rgb(244,1,30)" fg:x="437" fg:w="2"/><text x="35.2380%" y="287.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="35.1481%" y="373" width="0.1601%" height="15" fill="rgb(230,83,5)" fg:x="439" fg:w="2"/><text x="35.3981%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="35.3082%" y="373" width="0.0801%" height="15" fill="rgb(239,62,17)" fg:x="441" fg:w="1"/><text x="35.5582%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.3082%" y="357" width="0.0801%" height="15" fill="rgb(252,193,41)" fg:x="441" fg:w="1"/><text x="35.5582%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.3082%" y="341" width="0.0801%" height="15" fill="rgb(216,142,19)" fg:x="441" fg:w="1"/><text x="35.5582%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3883%" y="293" width="0.0801%" height="15" fill="rgb(240,81,38)" fg:x="442" fg:w="1"/><text x="35.6383%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3883%" y="277" width="0.0801%" height="15" fill="rgb(240,109,40)" fg:x="442" fg:w="1"/><text x="35.6383%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3883%" y="261" width="0.0801%" height="15" fill="rgb(230,123,10)" fg:x="442" fg:w="1"/><text x="35.6383%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.3883%" y="245" width="0.0801%" height="15" fill="rgb(253,42,32)" fg:x="442" fg:w="1"/><text x="35.6383%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.3883%" y="229" width="0.0801%" height="15" fill="rgb(218,154,8)" fg:x="442" fg:w="1"/><text x="35.6383%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.3883%" y="213" width="0.0801%" height="15" fill="rgb(216,197,10)" fg:x="442" fg:w="1"/><text x="35.6383%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3883%" y="197" width="0.0801%" height="15" fill="rgb(223,107,12)" fg:x="442" fg:w="1"/><text x="35.6383%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3883%" y="181" width="0.0801%" height="15" fill="rgb(241,174,42)" fg:x="442" fg:w="1"/><text x="35.6383%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.3883%" y="165" width="0.0801%" height="15" fill="rgb(231,78,20)" fg:x="442" fg:w="1"/><text x="35.6383%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.3883%" y="149" width="0.0801%" height="15" fill="rgb(230,208,49)" fg:x="442" fg:w="1"/><text x="35.6383%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.3883%" y="133" width="0.0801%" height="15" fill="rgb(238,11,34)" fg:x="442" fg:w="1"/><text x="35.6383%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.3883%" y="117" width="0.0801%" height="15" fill="rgb(210,130,26)" fg:x="442" fg:w="1"/><text x="35.6383%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.3883%" y="101" width="0.0801%" height="15" fill="rgb(242,131,11)" fg:x="442" fg:w="1"/><text x="35.6383%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.3883%" y="341" width="0.1601%" height="15" fill="rgb(237,38,28)" fg:x="442" fg:w="2"/><text x="35.6383%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.3883%" y="325" width="0.1601%" height="15" fill="rgb(244,180,43)" fg:x="442" fg:w="2"/><text x="35.6383%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.3883%" y="309" width="0.1601%" height="15" fill="rgb(214,171,19)" fg:x="442" fg:w="2"/><text x="35.6383%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.4684%" y="293" width="0.0801%" height="15" fill="rgb(252,101,45)" fg:x="443" fg:w="1"/><text x="35.7184%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::name (6 samples, 0.48%)</title><rect x="35.1481%" y="405" width="0.4804%" height="15" fill="rgb(211,96,33)" fg:x="439" fg:w="6"/><text x="35.3981%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="35.1481%" y="389" width="0.4804%" height="15" fill="rgb(207,80,25)" fg:x="439" fg:w="6"/><text x="35.3981%" y="399.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="35.3883%" y="373" width="0.2402%" height="15" fill="rgb(225,15,35)" fg:x="442" fg:w="3"/><text x="35.6383%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.3883%" y="357" width="0.2402%" height="15" fill="rgb(214,93,43)" fg:x="442" fg:w="3"/><text x="35.6383%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.5484%" y="341" width="0.0801%" height="15" fill="rgb(248,42,37)" fg:x="444" fg:w="1"/><text x="35.7984%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5484%" y="325" width="0.0801%" height="15" fill="rgb(217,135,32)" fg:x="444" fg:w="1"/><text x="35.7984%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.5484%" y="309" width="0.0801%" height="15" fill="rgb(216,74,28)" fg:x="444" fg:w="1"/><text x="35.7984%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5484%" y="293" width="0.0801%" height="15" fill="rgb(247,108,16)" fg:x="444" fg:w="1"/><text x="35.7984%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.5484%" y="277" width="0.0801%" height="15" fill="rgb(205,219,30)" fg:x="444" fg:w="1"/><text x="35.7984%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5484%" y="261" width="0.0801%" height="15" fill="rgb(241,122,9)" fg:x="444" fg:w="1"/><text x="35.7984%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.5484%" y="245" width="0.0801%" height="15" fill="rgb(216,148,50)" fg:x="444" fg:w="1"/><text x="35.7984%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5484%" y="229" width="0.0801%" height="15" fill="rgb(226,154,2)" fg:x="444" fg:w="1"/><text x="35.7984%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.5484%" y="213" width="0.0801%" height="15" fill="rgb(220,128,1)" fg:x="444" fg:w="1"/><text x="35.7984%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5484%" y="197" width="0.0801%" height="15" fill="rgb(245,185,29)" fg:x="444" fg:w="1"/><text x="35.7984%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5484%" y="181" width="0.0801%" height="15" fill="rgb(243,161,2)" fg:x="444" fg:w="1"/><text x="35.7984%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6285%" y="245" width="0.0801%" height="15" fill="rgb(249,215,17)" fg:x="445" fg:w="1"/><text x="35.8785%" y="255.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (8 samples, 0.64%)</title><rect x="35.1481%" y="437" width="0.6405%" height="15" fill="rgb(237,67,11)" fg:x="439" fg:w="8"/><text x="35.3981%" y="447.50"></text></g><g><title>plugins_core::finding::matches_description (8 samples, 0.64%)</title><rect x="35.1481%" y="421" width="0.6405%" height="15" fill="rgb(239,17,24)" fg:x="439" fg:w="8"/><text x="35.3981%" y="431.50"></text></g><g><title>plugins_core::finding::matches_string (2 samples, 0.16%)</title><rect x="35.6285%" y="405" width="0.1601%" height="15" fill="rgb(215,97,29)" fg:x="445" fg:w="2"/><text x="35.8785%" y="415.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.16%)</title><rect x="35.6285%" y="389" width="0.1601%" height="15" fill="rgb(253,228,42)" fg:x="445" fg:w="2"/><text x="35.8785%" y="399.50"></text></g><g><title>alloc::str::convert_while_ascii (2 samples, 0.16%)</title><rect x="35.6285%" y="373" width="0.1601%" height="15" fill="rgb(240,85,2)" fg:x="445" fg:w="2"/><text x="35.8785%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="35.6285%" y="357" width="0.1601%" height="15" fill="rgb(214,155,4)" fg:x="445" fg:w="2"/><text x="35.8785%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.6285%" y="341" width="0.1601%" height="15" fill="rgb(247,120,22)" fg:x="445" fg:w="2"/><text x="35.8785%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.6285%" y="325" width="0.1601%" height="15" fill="rgb(211,208,6)" fg:x="445" fg:w="2"/><text x="35.8785%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="35.6285%" y="309" width="0.1601%" height="15" fill="rgb(235,99,41)" fg:x="445" fg:w="2"/><text x="35.8785%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="35.6285%" y="293" width="0.1601%" height="15" fill="rgb(223,28,8)" fg:x="445" fg:w="2"/><text x="35.8785%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="35.6285%" y="277" width="0.1601%" height="15" fill="rgb(212,71,20)" fg:x="445" fg:w="2"/><text x="35.8785%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="35.6285%" y="261" width="0.1601%" height="15" fill="rgb(206,85,3)" fg:x="445" fg:w="2"/><text x="35.8785%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="35.7086%" y="245" width="0.0801%" height="15" fill="rgb(244,180,11)" fg:x="446" fg:w="1"/><text x="35.9586%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="35.7086%" y="229" width="0.0801%" height="15" fill="rgb(223,16,21)" fg:x="446" fg:w="1"/><text x="35.9586%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (22 samples, 1.76%)</title><rect x="34.1073%" y="469" width="1.7614%" height="15" fill="rgb(238,85,42)" fg:x="426" fg:w="22"/><text x="34.3573%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (22 samples, 1.76%)</title><rect x="34.1073%" y="453" width="1.7614%" height="15" fill="rgb(205,85,8)" fg:x="426" fg:w="22"/><text x="34.3573%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="35.7886%" y="437" width="0.0801%" height="15" fill="rgb(217,190,15)" fg:x="447" fg:w="1"/><text x="36.0386%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7886%" y="421" width="0.0801%" height="15" fill="rgb(243,192,23)" fg:x="447" fg:w="1"/><text x="36.0386%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8687%" y="405" width="0.0801%" height="15" fill="rgb(223,220,37)" fg:x="448" fg:w="1"/><text x="36.1187%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8687%" y="389" width="0.0801%" height="15" fill="rgb(208,41,17)" fg:x="448" fg:w="1"/><text x="36.1187%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.9488%" y="373" width="0.0801%" height="15" fill="rgb(224,188,7)" fg:x="449" fg:w="1"/><text x="36.1988%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9488%" y="357" width="0.0801%" height="15" fill="rgb(236,16,50)" fg:x="449" fg:w="1"/><text x="36.1988%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.9488%" y="341" width="0.0801%" height="15" fill="rgb(238,6,24)" fg:x="449" fg:w="1"/><text x="36.1988%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.9488%" y="325" width="0.0801%" height="15" fill="rgb(253,67,45)" fg:x="449" fg:w="1"/><text x="36.1988%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9488%" y="309" width="0.0801%" height="15" fill="rgb(210,89,32)" fg:x="449" fg:w="1"/><text x="36.1988%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="35.8687%" y="453" width="0.2402%" height="15" fill="rgb(208,89,9)" fg:x="448" fg:w="3"/><text x="36.1187%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="35.8687%" y="437" width="0.2402%" height="15" fill="rgb(222,180,44)" fg:x="448" fg:w="3"/><text x="36.1187%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.8687%" y="421" width="0.2402%" height="15" fill="rgb(250,181,46)" fg:x="448" fg:w="3"/><text x="36.1187%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.9488%" y="405" width="0.1601%" height="15" fill="rgb(210,190,26)" fg:x="449" fg:w="2"/><text x="36.1988%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9488%" y="389" width="0.1601%" height="15" fill="rgb(253,49,13)" fg:x="449" fg:w="2"/><text x="36.1988%" y="399.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="36.0288%" y="373" width="0.0801%" height="15" fill="rgb(240,184,42)" fg:x="450" fg:w="1"/><text x="36.2788%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.1089%" y="437" width="0.0801%" height="15" fill="rgb(246,59,37)" fg:x="451" fg:w="1"/><text x="36.3589%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1890%" y="405" width="0.0801%" height="15" fill="rgb(207,134,54)" fg:x="452" fg:w="1"/><text x="36.4390%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1890%" y="389" width="0.0801%" height="15" fill="rgb(250,122,24)" fg:x="452" fg:w="1"/><text x="36.4390%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1890%" y="373" width="0.0801%" height="15" fill="rgb(239,206,3)" fg:x="452" fg:w="1"/><text x="36.4390%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1890%" y="357" width="0.0801%" height="15" fill="rgb(253,220,32)" fg:x="452" fg:w="1"/><text x="36.4390%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1890%" y="341" width="0.0801%" height="15" fill="rgb(209,217,48)" fg:x="452" fg:w="1"/><text x="36.4390%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.1890%" y="325" width="0.0801%" height="15" fill="rgb(242,91,39)" fg:x="452" fg:w="1"/><text x="36.4390%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.1890%" y="309" width="0.0801%" height="15" fill="rgb(228,4,13)" fg:x="452" fg:w="1"/><text x="36.4390%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.1890%" y="293" width="0.0801%" height="15" fill="rgb(223,133,4)" fg:x="452" fg:w="1"/><text x="36.4390%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1890%" y="277" width="0.0801%" height="15" fill="rgb(215,105,30)" fg:x="452" fg:w="1"/><text x="36.4390%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1890%" y="261" width="0.0801%" height="15" fill="rgb(230,9,4)" fg:x="452" fg:w="1"/><text x="36.4390%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.1890%" y="245" width="0.0801%" height="15" fill="rgb(248,15,2)" fg:x="452" fg:w="1"/><text x="36.4390%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.1890%" y="229" width="0.0801%" height="15" fill="rgb(208,210,22)" fg:x="452" fg:w="1"/><text x="36.4390%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.1890%" y="213" width="0.0801%" height="15" fill="rgb(208,112,41)" fg:x="452" fg:w="1"/><text x="36.4390%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.1890%" y="197" width="0.0801%" height="15" fill="rgb(232,83,14)" fg:x="452" fg:w="1"/><text x="36.4390%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1890%" y="181" width="0.0801%" height="15" fill="rgb(229,65,11)" fg:x="452" fg:w="1"/><text x="36.4390%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3491%" y="309" width="0.0801%" height="15" fill="rgb(228,126,24)" fg:x="454" fg:w="1"/><text x="36.5991%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.3491%" y="293" width="0.0801%" height="15" fill="rgb(218,66,33)" fg:x="454" fg:w="1"/><text x="36.5991%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (9 samples, 0.72%)</title><rect x="35.8687%" y="469" width="0.7206%" height="15" fill="rgb(251,49,52)" fg:x="448" fg:w="9"/><text x="36.1187%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="36.1089%" y="453" width="0.4804%" height="15" fill="rgb(219,46,37)" fg:x="451" fg:w="6"/><text x="36.3589%" y="463.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="36.1890%" y="437" width="0.4003%" height="15" fill="rgb(213,53,49)" fg:x="452" fg:w="5"/><text x="36.4390%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="36.1890%" y="421" width="0.4003%" height="15" fill="rgb(214,134,1)" fg:x="452" fg:w="5"/><text x="36.4390%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="36.2690%" y="405" width="0.3203%" height="15" fill="rgb(208,139,43)" fg:x="453" fg:w="4"/><text x="36.5190%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.2690%" y="389" width="0.3203%" height="15" fill="rgb(231,105,35)" fg:x="453" fg:w="4"/><text x="36.5190%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="36.2690%" y="373" width="0.3203%" height="15" fill="rgb(247,189,9)" fg:x="453" fg:w="4"/><text x="36.5190%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.2690%" y="357" width="0.3203%" height="15" fill="rgb(252,48,51)" fg:x="453" fg:w="4"/><text x="36.5190%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="36.3491%" y="341" width="0.2402%" height="15" fill="rgb(209,121,1)" fg:x="454" fg:w="3"/><text x="36.5991%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="36.3491%" y="325" width="0.2402%" height="15" fill="rgb(231,40,26)" fg:x="454" fg:w="3"/><text x="36.5991%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.4291%" y="309" width="0.1601%" height="15" fill="rgb(251,8,13)" fg:x="455" fg:w="2"/><text x="36.6791%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.4291%" y="293" width="0.1601%" height="15" fill="rgb(231,110,2)" fg:x="455" fg:w="2"/><text x="36.6791%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.5092%" y="277" width="0.0801%" height="15" fill="rgb(216,153,22)" fg:x="456" fg:w="1"/><text x="36.7592%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.5092%" y="261" width="0.0801%" height="15" fill="rgb(249,116,49)" fg:x="456" fg:w="1"/><text x="36.7592%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="36.6693%" y="453" width="0.0801%" height="15" fill="rgb(230,89,2)" fg:x="458" fg:w="1"/><text x="36.9193%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="36.6693%" y="437" width="0.0801%" height="15" fill="rgb(231,125,23)" fg:x="458" fg:w="1"/><text x="36.9193%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6693%" y="421" width="0.0801%" height="15" fill="rgb(212,217,18)" fg:x="458" fg:w="1"/><text x="36.9193%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7494%" y="373" width="0.0801%" height="15" fill="rgb(210,21,33)" fg:x="459" fg:w="1"/><text x="36.9994%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7494%" y="357" width="0.0801%" height="15" fill="rgb(241,97,9)" fg:x="459" fg:w="1"/><text x="36.9994%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7494%" y="341" width="0.0801%" height="15" fill="rgb(221,35,31)" fg:x="459" fg:w="1"/><text x="36.9994%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.7494%" y="325" width="0.0801%" height="15" fill="rgb(251,23,23)" fg:x="459" fg:w="1"/><text x="36.9994%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7494%" y="309" width="0.0801%" height="15" fill="rgb(227,165,2)" fg:x="459" fg:w="1"/><text x="36.9994%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7494%" y="293" width="0.0801%" height="15" fill="rgb(242,24,2)" fg:x="459" fg:w="1"/><text x="36.9994%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.7494%" y="277" width="0.0801%" height="15" fill="rgb(242,138,51)" fg:x="459" fg:w="1"/><text x="36.9994%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.7494%" y="261" width="0.0801%" height="15" fill="rgb(220,219,5)" fg:x="459" fg:w="1"/><text x="36.9994%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.7494%" y="245" width="0.0801%" height="15" fill="rgb(247,53,29)" fg:x="459" fg:w="1"/><text x="36.9994%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7494%" y="229" width="0.0801%" height="15" fill="rgb(233,43,39)" fg:x="459" fg:w="1"/><text x="36.9994%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7494%" y="213" width="0.0801%" height="15" fill="rgb(230,128,54)" fg:x="459" fg:w="1"/><text x="36.9994%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.7494%" y="197" width="0.0801%" height="15" fill="rgb(218,20,12)" fg:x="459" fg:w="1"/><text x="36.9994%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.7494%" y="181" width="0.0801%" height="15" fill="rgb(206,51,14)" fg:x="459" fg:w="1"/><text x="36.9994%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.7494%" y="165" width="0.0801%" height="15" fill="rgb(223,16,35)" fg:x="459" fg:w="1"/><text x="36.9994%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.7494%" y="149" width="0.0801%" height="15" fill="rgb(226,165,37)" fg:x="459" fg:w="1"/><text x="36.9994%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7494%" y="133" width="0.0801%" height="15" fill="rgb(240,26,21)" fg:x="459" fg:w="1"/><text x="36.9994%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="36.7494%" y="421" width="0.2402%" height="15" fill="rgb(240,72,46)" fg:x="459" fg:w="3"/><text x="36.9994%" y="431.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="36.7494%" y="405" width="0.2402%" height="15" fill="rgb(211,33,41)" fg:x="459" fg:w="3"/><text x="36.9994%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="36.7494%" y="389" width="0.2402%" height="15" fill="rgb(224,157,46)" fg:x="459" fg:w="3"/><text x="36.9994%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.8295%" y="373" width="0.1601%" height="15" fill="rgb(223,59,19)" fg:x="460" fg:w="2"/><text x="37.0795%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.8295%" y="357" width="0.1601%" height="15" fill="rgb(239,187,1)" fg:x="460" fg:w="2"/><text x="37.0795%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9095%" y="341" width="0.0801%" height="15" fill="rgb(226,95,9)" fg:x="461" fg:w="1"/><text x="37.1595%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9095%" y="325" width="0.0801%" height="15" fill="rgb(234,61,54)" fg:x="461" fg:w="1"/><text x="37.1595%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.9095%" y="309" width="0.0801%" height="15" fill="rgb(205,209,47)" fg:x="461" fg:w="1"/><text x="37.1595%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9095%" y="293" width="0.0801%" height="15" fill="rgb(228,7,43)" fg:x="461" fg:w="1"/><text x="37.1595%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.9095%" y="277" width="0.0801%" height="15" fill="rgb(240,217,52)" fg:x="461" fg:w="1"/><text x="37.1595%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.9095%" y="261" width="0.0801%" height="15" fill="rgb(211,178,21)" fg:x="461" fg:w="1"/><text x="37.1595%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9896%" y="373" width="0.0801%" height="15" fill="rgb(205,25,34)" fg:x="462" fg:w="1"/><text x="37.2396%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9896%" y="357" width="0.0801%" height="15" fill="rgb(209,57,11)" fg:x="462" fg:w="1"/><text x="37.2396%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9896%" y="341" width="0.0801%" height="15" fill="rgb(221,99,2)" fg:x="462" fg:w="1"/><text x="37.2396%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9896%" y="325" width="0.0801%" height="15" fill="rgb(232,79,22)" fg:x="462" fg:w="1"/><text x="37.2396%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.9896%" y="309" width="0.0801%" height="15" fill="rgb(221,145,32)" fg:x="462" fg:w="1"/><text x="37.2396%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.9896%" y="293" width="0.0801%" height="15" fill="rgb(236,133,36)" fg:x="462" fg:w="1"/><text x="37.2396%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.9896%" y="277" width="0.0801%" height="15" fill="rgb(208,224,44)" fg:x="462" fg:w="1"/><text x="37.2396%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.9896%" y="261" width="0.0801%" height="15" fill="rgb(235,143,15)" fg:x="462" fg:w="1"/><text x="37.2396%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.9896%" y="245" width="0.0801%" height="15" fill="rgb(249,83,27)" fg:x="462" fg:w="1"/><text x="37.2396%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.9896%" y="229" width="0.0801%" height="15" fill="rgb(238,226,19)" fg:x="462" fg:w="1"/><text x="37.2396%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.9896%" y="213" width="0.0801%" height="15" fill="rgb(226,206,27)" fg:x="462" fg:w="1"/><text x="37.2396%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.9896%" y="197" width="0.0801%" height="15" fill="rgb(251,182,9)" fg:x="462" fg:w="1"/><text x="37.2396%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.9896%" y="181" width="0.0801%" height="15" fill="rgb(212,140,41)" fg:x="462" fg:w="1"/><text x="37.2396%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.9896%" y="165" width="0.0801%" height="15" fill="rgb(220,106,18)" fg:x="462" fg:w="1"/><text x="37.2396%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.9896%" y="149" width="0.0801%" height="15" fill="rgb(252,46,41)" fg:x="462" fg:w="1"/><text x="37.2396%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.9896%" y="133" width="0.0801%" height="15" fill="rgb(209,222,15)" fg:x="462" fg:w="1"/><text x="37.2396%" y="143.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="36.7494%" y="453" width="0.4003%" height="15" fill="rgb(233,83,50)" fg:x="459" fg:w="5"/><text x="36.9994%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="36.7494%" y="437" width="0.4003%" height="15" fill="rgb(205,212,0)" fg:x="459" fg:w="5"/><text x="36.9994%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="36.9896%" y="421" width="0.1601%" height="15" fill="rgb(235,117,51)" fg:x="462" fg:w="2"/><text x="37.2396%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="36.9896%" y="405" width="0.1601%" height="15" fill="rgb(233,133,48)" fg:x="462" fg:w="2"/><text x="37.2396%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="36.9896%" y="389" width="0.1601%" height="15" fill="rgb(219,3,2)" fg:x="462" fg:w="2"/><text x="37.2396%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.0697%" y="373" width="0.0801%" height="15" fill="rgb(225,80,52)" fg:x="463" fg:w="1"/><text x="37.3197%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.0697%" y="357" width="0.0801%" height="15" fill="rgb(235,195,42)" fg:x="463" fg:w="1"/><text x="37.3197%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.0697%" y="341" width="0.0801%" height="15" fill="rgb(240,207,46)" fg:x="463" fg:w="1"/><text x="37.3197%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.0697%" y="325" width="0.0801%" height="15" fill="rgb(236,112,50)" fg:x="463" fg:w="1"/><text x="37.3197%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.0697%" y="309" width="0.0801%" height="15" fill="rgb(249,151,27)" fg:x="463" fg:w="1"/><text x="37.3197%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.0697%" y="293" width="0.0801%" height="15" fill="rgb(253,223,52)" fg:x="463" fg:w="1"/><text x="37.3197%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.1497%" y="437" width="0.0801%" height="15" fill="rgb(215,55,33)" fg:x="464" fg:w="1"/><text x="37.3997%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.1497%" y="421" width="0.0801%" height="15" fill="rgb(207,24,17)" fg:x="464" fg:w="1"/><text x="37.3997%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.1497%" y="405" width="0.0801%" height="15" fill="rgb(218,169,32)" fg:x="464" fg:w="1"/><text x="37.3997%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.1497%" y="389" width="0.0801%" height="15" fill="rgb(209,210,6)" fg:x="464" fg:w="1"/><text x="37.3997%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.1497%" y="373" width="0.0801%" height="15" fill="rgb(225,208,8)" fg:x="464" fg:w="1"/><text x="37.3997%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.1497%" y="357" width="0.0801%" height="15" fill="rgb(238,14,32)" fg:x="464" fg:w="1"/><text x="37.3997%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.1497%" y="341" width="0.0801%" height="15" fill="rgb(211,137,3)" fg:x="464" fg:w="1"/><text x="37.3997%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.1497%" y="325" width="0.0801%" height="15" fill="rgb(207,171,19)" fg:x="464" fg:w="1"/><text x="37.3997%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.1497%" y="309" width="0.0801%" height="15" fill="rgb(250,80,8)" fg:x="464" fg:w="1"/><text x="37.3997%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.1497%" y="293" width="0.0801%" height="15" fill="rgb(209,103,53)" fg:x="464" fg:w="1"/><text x="37.3997%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.1497%" y="277" width="0.0801%" height="15" fill="rgb(233,198,10)" fg:x="464" fg:w="1"/><text x="37.3997%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.1497%" y="261" width="0.0801%" height="15" fill="rgb(236,125,25)" fg:x="464" fg:w="1"/><text x="37.3997%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1497%" y="245" width="0.0801%" height="15" fill="rgb(254,182,48)" fg:x="464" fg:w="1"/><text x="37.3997%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.4700%" y="389" width="0.0801%" height="15" fill="rgb(216,108,44)" fg:x="468" fg:w="1"/><text x="37.7200%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="37.3899%" y="421" width="0.2402%" height="15" fill="rgb(222,72,39)" fg:x="467" fg:w="3"/><text x="37.6399%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.3899%" y="405" width="0.2402%" height="15" fill="rgb(252,70,39)" fg:x="467" fg:w="3"/><text x="37.6399%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5500%" y="389" width="0.0801%" height="15" fill="rgb(243,99,34)" fg:x="469" fg:w="1"/><text x="37.8000%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="37.6301%" y="405" width="0.2402%" height="15" fill="rgb(252,109,12)" fg:x="470" fg:w="3"/><text x="37.8801%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="37.6301%" y="389" width="0.2402%" height="15" fill="rgb(211,186,10)" fg:x="470" fg:w="3"/><text x="37.8801%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="37.7102%" y="373" width="0.1601%" height="15" fill="rgb(246,90,8)" fg:x="471" fg:w="2"/><text x="37.9602%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="37.7102%" y="357" width="0.1601%" height="15" fill="rgb(226,91,24)" fg:x="471" fg:w="2"/><text x="37.9602%" y="367.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.7902%" y="341" width="0.0801%" height="15" fill="rgb(216,28,44)" fg:x="472" fg:w="1"/><text x="38.0402%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="37.6301%" y="421" width="0.3203%" height="15" fill="rgb(229,36,0)" fg:x="470" fg:w="4"/><text x="37.8801%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="37.8703%" y="405" width="0.0801%" height="15" fill="rgb(245,97,18)" fg:x="473" fg:w="1"/><text x="38.1203%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.8703%" y="389" width="0.0801%" height="15" fill="rgb(241,97,54)" fg:x="473" fg:w="1"/><text x="38.1203%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="37.9504%" y="421" width="0.0801%" height="15" fill="rgb(234,125,17)" fg:x="474" fg:w="1"/><text x="38.2004%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.9504%" y="405" width="0.0801%" height="15" fill="rgb(228,172,39)" fg:x="474" fg:w="1"/><text x="38.2004%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.9504%" y="389" width="0.0801%" height="15" fill="rgb(227,169,1)" fg:x="474" fg:w="1"/><text x="38.2004%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.9504%" y="373" width="0.0801%" height="15" fill="rgb(206,13,35)" fg:x="474" fg:w="1"/><text x="38.2004%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1105%" y="389" width="0.0801%" height="15" fill="rgb(211,117,30)" fg:x="476" fg:w="1"/><text x="38.3605%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="38.1906%" y="389" width="0.1601%" height="15" fill="rgb(230,198,4)" fg:x="477" fg:w="2"/><text x="38.4406%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="38.1906%" y="373" width="0.1601%" height="15" fill="rgb(213,87,54)" fg:x="477" fg:w="2"/><text x="38.4406%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="38.1906%" y="357" width="0.1601%" height="15" fill="rgb(248,43,22)" fg:x="477" fg:w="2"/><text x="38.4406%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.1906%" y="341" width="0.1601%" height="15" fill="rgb(213,175,48)" fg:x="477" fg:w="2"/><text x="38.4406%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.1906%" y="325" width="0.1601%" height="15" fill="rgb(252,55,9)" fg:x="477" fg:w="2"/><text x="38.4406%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (16 samples, 1.28%)</title><rect x="37.1497%" y="453" width="1.2810%" height="15" fill="rgb(231,72,33)" fg:x="464" fg:w="16"/><text x="37.3997%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.20%)</title><rect x="37.2298%" y="437" width="1.2010%" height="15" fill="rgb(213,2,54)" fg:x="465" fg:w="15"/><text x="37.4798%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="38.0304%" y="421" width="0.4003%" height="15" fill="rgb(208,88,25)" fg:x="475" fg:w="5"/><text x="38.2804%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="38.0304%" y="405" width="0.4003%" height="15" fill="rgb(215,117,13)" fg:x="475" fg:w="5"/><text x="38.2804%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.3507%" y="389" width="0.0801%" height="15" fill="rgb(243,147,21)" fg:x="479" fg:w="1"/><text x="38.6007%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.3507%" y="373" width="0.0801%" height="15" fill="rgb(208,215,36)" fg:x="479" fg:w="1"/><text x="38.6007%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="38.3507%" y="357" width="0.0801%" height="15" fill="rgb(238,187,24)" fg:x="479" fg:w="1"/><text x="38.6007%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.5909%" y="325" width="0.0801%" height="15" fill="rgb(214,173,11)" fg:x="482" fg:w="1"/><text x="38.8409%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.5909%" y="309" width="0.0801%" height="15" fill="rgb(222,71,20)" fg:x="482" fg:w="1"/><text x="38.8409%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.5909%" y="293" width="0.0801%" height="15" fill="rgb(242,125,4)" fg:x="482" fg:w="1"/><text x="38.8409%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.5909%" y="277" width="0.0801%" height="15" fill="rgb(217,101,52)" fg:x="482" fg:w="1"/><text x="38.8409%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.5909%" y="261" width="0.0801%" height="15" fill="rgb(223,2,50)" fg:x="482" fg:w="1"/><text x="38.8409%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.5909%" y="245" width="0.0801%" height="15" fill="rgb(225,197,9)" fg:x="482" fg:w="1"/><text x="38.8409%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.5909%" y="229" width="0.0801%" height="15" fill="rgb(234,76,27)" fg:x="482" fg:w="1"/><text x="38.8409%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.5909%" y="421" width="0.1601%" height="15" fill="rgb(213,161,26)" fg:x="482" fg:w="2"/><text x="38.8409%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.5909%" y="405" width="0.1601%" height="15" fill="rgb(210,228,2)" fg:x="482" fg:w="2"/><text x="38.8409%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.5909%" y="389" width="0.1601%" height="15" fill="rgb(235,4,16)" fg:x="482" fg:w="2"/><text x="38.8409%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="38.5909%" y="373" width="0.1601%" height="15" fill="rgb(235,83,42)" fg:x="482" fg:w="2"/><text x="38.8409%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="38.5909%" y="357" width="0.1601%" height="15" fill="rgb(207,116,39)" fg:x="482" fg:w="2"/><text x="38.8409%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="38.5909%" y="341" width="0.1601%" height="15" fill="rgb(253,206,9)" fg:x="482" fg:w="2"/><text x="38.8409%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="38.6709%" y="325" width="0.0801%" height="15" fill="rgb(234,32,47)" fg:x="483" fg:w="1"/><text x="38.9209%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.6709%" y="309" width="0.0801%" height="15" fill="rgb(247,40,39)" fg:x="483" fg:w="1"/><text x="38.9209%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="38.7510%" y="421" width="0.1601%" height="15" fill="rgb(236,199,13)" fg:x="484" fg:w="2"/><text x="39.0010%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="38.7510%" y="405" width="0.1601%" height="15" fill="rgb(240,127,44)" fg:x="484" fg:w="2"/><text x="39.0010%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="38.7510%" y="389" width="0.1601%" height="15" fill="rgb(248,220,47)" fg:x="484" fg:w="2"/><text x="39.0010%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="38.8311%" y="373" width="0.0801%" height="15" fill="rgb(240,78,9)" fg:x="485" fg:w="1"/><text x="39.0811%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.8311%" y="357" width="0.0801%" height="15" fill="rgb(245,119,5)" fg:x="485" fg:w="1"/><text x="39.0811%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8311%" y="341" width="0.0801%" height="15" fill="rgb(238,175,31)" fg:x="485" fg:w="1"/><text x="39.0811%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.9111%" y="421" width="0.0801%" height="15" fill="rgb(232,140,42)" fg:x="486" fg:w="1"/><text x="39.1611%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.9111%" y="405" width="0.0801%" height="15" fill="rgb(218,179,7)" fg:x="486" fg:w="1"/><text x="39.1611%" y="415.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="38.9912%" y="421" width="0.0801%" height="15" fill="rgb(232,79,27)" fg:x="487" fg:w="1"/><text x="39.2412%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.9912%" y="405" width="0.0801%" height="15" fill="rgb(247,11,19)" fg:x="487" fg:w="1"/><text x="39.2412%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="38.9912%" y="389" width="0.0801%" height="15" fill="rgb(216,171,54)" fg:x="487" fg:w="1"/><text x="39.2412%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="38.9912%" y="373" width="0.0801%" height="15" fill="rgb(233,158,36)" fg:x="487" fg:w="1"/><text x="39.2412%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.9912%" y="357" width="0.0801%" height="15" fill="rgb(215,48,47)" fg:x="487" fg:w="1"/><text x="39.2412%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.9912%" y="341" width="0.0801%" height="15" fill="rgb(230,223,15)" fg:x="487" fg:w="1"/><text x="39.2412%" y="351.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (9 samples, 0.72%)</title><rect x="38.4307%" y="453" width="0.7206%" height="15" fill="rgb(234,49,19)" fg:x="480" fg:w="9"/><text x="38.6807%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (9 samples, 0.72%)</title><rect x="38.4307%" y="437" width="0.7206%" height="15" fill="rgb(232,89,25)" fg:x="480" fg:w="9"/><text x="38.6807%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="39.0713%" y="421" width="0.0801%" height="15" fill="rgb(237,206,28)" fg:x="488" fg:w="1"/><text x="39.3213%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.0713%" y="405" width="0.0801%" height="15" fill="rgb(249,68,37)" fg:x="488" fg:w="1"/><text x="39.3213%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="39.1513%" y="453" width="0.1601%" height="15" fill="rgb(226,99,43)" fg:x="489" fg:w="2"/><text x="39.4013%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="39.2314%" y="437" width="0.0801%" height="15" fill="rgb(216,46,28)" fg:x="490" fg:w="1"/><text x="39.4814%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="39.2314%" y="421" width="0.0801%" height="15" fill="rgb(216,33,9)" fg:x="490" fg:w="1"/><text x="39.4814%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.2314%" y="405" width="0.0801%" height="15" fill="rgb(216,129,4)" fg:x="490" fg:w="1"/><text x="39.4814%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="39.2314%" y="389" width="0.0801%" height="15" fill="rgb(216,106,3)" fg:x="490" fg:w="1"/><text x="39.4814%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.2314%" y="373" width="0.0801%" height="15" fill="rgb(217,79,45)" fg:x="490" fg:w="1"/><text x="39.4814%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.2314%" y="357" width="0.0801%" height="15" fill="rgb(239,98,13)" fg:x="490" fg:w="1"/><text x="39.4814%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2314%" y="341" width="0.0801%" height="15" fill="rgb(221,115,4)" fg:x="490" fg:w="1"/><text x="39.4814%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.2314%" y="325" width="0.0801%" height="15" fill="rgb(215,85,0)" fg:x="490" fg:w="1"/><text x="39.4814%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2314%" y="309" width="0.0801%" height="15" fill="rgb(230,62,15)" fg:x="490" fg:w="1"/><text x="39.4814%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.2314%" y="293" width="0.0801%" height="15" fill="rgb(247,162,2)" fg:x="490" fg:w="1"/><text x="39.4814%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2314%" y="277" width="0.0801%" height="15" fill="rgb(212,112,32)" fg:x="490" fg:w="1"/><text x="39.4814%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.2314%" y="261" width="0.0801%" height="15" fill="rgb(216,137,9)" fg:x="490" fg:w="1"/><text x="39.4814%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2314%" y="245" width="0.0801%" height="15" fill="rgb(250,149,33)" fg:x="490" fg:w="1"/><text x="39.4814%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.2314%" y="229" width="0.0801%" height="15" fill="rgb(246,124,31)" fg:x="490" fg:w="1"/><text x="39.4814%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2314%" y="213" width="0.0801%" height="15" fill="rgb(216,210,22)" fg:x="490" fg:w="1"/><text x="39.4814%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.2314%" y="197" width="0.0801%" height="15" fill="rgb(228,128,36)" fg:x="490" fg:w="1"/><text x="39.4814%" y="207.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (66 samples, 5.28%)</title><rect x="34.1073%" y="485" width="5.2842%" height="15" fill="rgb(231,41,0)" fg:x="426" fg:w="66"/><text x="34.3573%" y="495.50">&lt;plugi..</text></g><g><title>plugins_core::tools::move_between (35 samples, 2.80%)</title><rect x="36.5893%" y="469" width="2.8022%" height="15" fill="rgb(232,61,26)" fg:x="457" fg:w="35"/><text x="36.8393%" y="479.50">pl..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="39.3114%" y="453" width="0.0801%" height="15" fill="rgb(217,60,9)" fg:x="491" fg:w="1"/><text x="39.5614%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="39.3114%" y="437" width="0.0801%" height="15" fill="rgb(233,41,35)" fg:x="491" fg:w="1"/><text x="39.5614%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.3114%" y="421" width="0.0801%" height="15" fill="rgb(253,139,43)" fg:x="491" fg:w="1"/><text x="39.5614%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.3915%" y="485" width="0.0801%" height="15" fill="rgb(245,100,51)" fg:x="492" fg:w="1"/><text x="39.6415%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (140 samples, 11.21%)</title><rect x="28.4227%" y="645" width="11.2090%" height="15" fill="rgb(250,208,18)" fg:x="355" fg:w="140"/><text x="28.6727%" y="655.50">&lt;engine::session..</text></g><g><title>kernel::plugins::mw::apply_middleware (140 samples, 11.21%)</title><rect x="28.4227%" y="629" width="11.2090%" height="15" fill="rgb(245,33,2)" fg:x="355" fg:w="140"/><text x="28.6727%" y="639.50">kernel::plugins:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (140 samples, 11.21%)</title><rect x="28.4227%" y="613" width="11.2090%" height="15" fill="rgb(244,171,31)" fg:x="355" fg:w="140"/><text x="28.6727%" y="623.50">kernel::plugins:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (140 samples, 11.21%)</title><rect x="28.4227%" y="597" width="11.2090%" height="15" fill="rgb(229,1,43)" fg:x="355" fg:w="140"/><text x="28.6727%" y="607.50">&lt;plugins_dynlib:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (140 samples, 11.21%)</title><rect x="28.4227%" y="581" width="11.2090%" height="15" fill="rgb(223,153,28)" fg:x="355" fg:w="140"/><text x="28.6727%" y="591.50">kernel::plugins:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (140 samples, 11.21%)</title><rect x="28.4227%" y="565" width="11.2090%" height="15" fill="rgb(241,4,46)" fg:x="355" fg:w="140"/><text x="28.6727%" y="575.50">core::ops::funct..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (140 samples, 11.21%)</title><rect x="28.4227%" y="549" width="11.2090%" height="15" fill="rgb(230,81,11)" fg:x="355" fg:w="140"/><text x="28.6727%" y="559.50">kernel::plugins:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (139 samples, 11.13%)</title><rect x="28.5028%" y="533" width="11.1289%" height="15" fill="rgb(253,204,39)" fg:x="356" fg:w="139"/><text x="28.7528%" y="543.50">core::ops::funct..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (139 samples, 11.13%)</title><rect x="28.5028%" y="517" width="11.1289%" height="15" fill="rgb(250,96,8)" fg:x="356" fg:w="139"/><text x="28.7528%" y="527.50">&lt;alloc::boxed::B..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (139 samples, 11.13%)</title><rect x="28.5028%" y="501" width="11.1289%" height="15" fill="rgb(219,89,54)" fg:x="356" fg:w="139"/><text x="28.7528%" y="511.50">&lt;engine::session..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="39.4716%" y="485" width="0.1601%" height="15" fill="rgb(235,136,39)" fg:x="493" fg:w="2"/><text x="39.7216%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.4716%" y="469" width="0.1601%" height="15" fill="rgb(230,155,37)" fg:x="493" fg:w="2"/><text x="39.7216%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="39.6317%" y="613" width="0.2402%" height="15" fill="rgb(235,199,50)" fg:x="495" fg:w="3"/><text x="39.8817%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="39.8719%" y="613" width="0.1601%" height="15" fill="rgb(227,81,32)" fg:x="498" fg:w="2"/><text x="40.1219%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9520%" y="597" width="0.0801%" height="15" fill="rgb(225,6,28)" fg:x="499" fg:w="1"/><text x="40.2020%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="40.5124%" y="517" width="0.4003%" height="15" fill="rgb(207,211,17)" fg:x="506" fg:w="5"/><text x="40.7624%" y="527.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="40.5925%" y="501" width="0.3203%" height="15" fill="rgb(228,31,49)" fg:x="507" fg:w="4"/><text x="40.8425%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="40.3523%" y="549" width="0.7206%" height="15" fill="rgb(230,185,3)" fg:x="504" fg:w="9"/><text x="40.6023%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="40.5124%" y="533" width="0.5604%" height="15" fill="rgb(206,167,15)" fg:x="506" fg:w="7"/><text x="40.7624%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.9127%" y="517" width="0.1601%" height="15" fill="rgb(234,2,36)" fg:x="511" fg:w="2"/><text x="41.1627%" y="527.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="41.0729%" y="549" width="0.4003%" height="15" fill="rgb(239,160,29)" fg:x="513" fg:w="5"/><text x="41.3229%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.4732%" y="533" width="0.0801%" height="15" fill="rgb(236,117,2)" fg:x="518" fg:w="1"/><text x="41.7232%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="41.4732%" y="517" width="0.0801%" height="15" fill="rgb(215,117,37)" fg:x="518" fg:w="1"/><text x="41.7232%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.28%)</title><rect x="40.3523%" y="565" width="1.2810%" height="15" fill="rgb(244,48,36)" fg:x="504" fg:w="16"/><text x="40.6023%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="41.4732%" y="549" width="0.1601%" height="15" fill="rgb(223,101,37)" fg:x="518" fg:w="2"/><text x="41.7232%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5532%" y="533" width="0.0801%" height="15" fill="rgb(205,200,1)" fg:x="519" fg:w="1"/><text x="41.8032%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.92%)</title><rect x="40.1922%" y="581" width="1.9215%" height="15" fill="rgb(209,193,20)" fg:x="502" fg:w="24"/><text x="40.4422%" y="591.50">&lt;..</text></g><g><title>__libc_free (6 samples, 0.48%)</title><rect x="41.6333%" y="565" width="0.4804%" height="15" fill="rgb(214,63,13)" fg:x="520" fg:w="6"/><text x="41.8833%" y="575.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="42.1137%" y="581" width="0.4003%" height="15" fill="rgb(253,113,46)" fg:x="526" fg:w="5"/><text x="42.3637%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (32 samples, 2.56%)</title><rect x="40.0320%" y="613" width="2.5620%" height="15" fill="rgb(237,103,34)" fg:x="500" fg:w="32"/><text x="40.2820%" y="623.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.48%)</title><rect x="40.1121%" y="597" width="2.4820%" height="15" fill="rgb(223,38,25)" fg:x="501" fg:w="31"/><text x="40.3621%" y="607.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="42.5140%" y="581" width="0.0801%" height="15" fill="rgb(251,32,32)" fg:x="531" fg:w="1"/><text x="42.7640%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="42.5941%" y="565" width="0.0801%" height="15" fill="rgb(228,65,22)" fg:x="532" fg:w="1"/><text x="42.8441%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6741%" y="565" width="0.0801%" height="15" fill="rgb(205,11,46)" fg:x="533" fg:w="1"/><text x="42.9241%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.7542%" y="565" width="0.1601%" height="15" fill="rgb(220,35,2)" fg:x="534" fg:w="2"/><text x="43.0042%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="42.5941%" y="581" width="0.4804%" height="15" fill="rgb(217,151,17)" fg:x="532" fg:w="6"/><text x="42.8441%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.16%)</title><rect x="42.9143%" y="565" width="0.1601%" height="15" fill="rgb(243,227,35)" fg:x="536" fg:w="2"/><text x="43.1643%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.9944%" y="549" width="0.0801%" height="15" fill="rgb(214,0,34)" fg:x="537" fg:w="1"/><text x="43.2444%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="43.0745%" y="533" width="0.0801%" height="15" fill="rgb(209,42,37)" fg:x="538" fg:w="1"/><text x="43.3245%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.1545%" y="533" width="0.0801%" height="15" fill="rgb(251,176,30)" fg:x="539" fg:w="1"/><text x="43.4045%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="43.0745%" y="581" width="0.2402%" height="15" fill="rgb(223,64,40)" fg:x="538" fg:w="3"/><text x="43.3245%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="43.0745%" y="565" width="0.2402%" height="15" fill="rgb(227,180,23)" fg:x="538" fg:w="3"/><text x="43.3245%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="43.0745%" y="549" width="0.2402%" height="15" fill="rgb(220,137,31)" fg:x="538" fg:w="3"/><text x="43.3245%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="43.2346%" y="533" width="0.0801%" height="15" fill="rgb(245,124,25)" fg:x="540" fg:w="1"/><text x="43.4846%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="43.6349%" y="469" width="0.0801%" height="15" fill="rgb(217,157,5)" fg:x="545" fg:w="1"/><text x="43.8849%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.7150%" y="469" width="0.1601%" height="15" fill="rgb(225,59,2)" fg:x="546" fg:w="2"/><text x="43.9650%" y="479.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="43.8751%" y="437" width="0.0801%" height="15" fill="rgb(220,182,9)" fg:x="548" fg:w="1"/><text x="44.1251%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="43.5548%" y="517" width="0.6405%" height="15" fill="rgb(249,54,24)" fg:x="544" fg:w="8"/><text x="43.8048%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (8 samples, 0.64%)</title><rect x="43.5548%" y="501" width="0.6405%" height="15" fill="rgb(216,89,17)" fg:x="544" fg:w="8"/><text x="43.8048%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (8 samples, 0.64%)</title><rect x="43.5548%" y="485" width="0.6405%" height="15" fill="rgb(245,20,45)" fg:x="544" fg:w="8"/><text x="43.8048%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="43.8751%" y="469" width="0.3203%" height="15" fill="rgb(230,83,14)" fg:x="548" fg:w="4"/><text x="44.1251%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="43.8751%" y="453" width="0.3203%" height="15" fill="rgb(246,109,11)" fg:x="548" fg:w="4"/><text x="44.1251%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="43.9552%" y="437" width="0.2402%" height="15" fill="rgb(235,85,23)" fg:x="549" fg:w="3"/><text x="44.2052%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="43.9552%" y="421" width="0.2402%" height="15" fill="rgb(215,101,36)" fg:x="549" fg:w="3"/><text x="44.2052%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="43.9552%" y="405" width="0.2402%" height="15" fill="rgb(228,140,31)" fg:x="549" fg:w="3"/><text x="44.2052%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="43.9552%" y="389" width="0.2402%" height="15" fill="rgb(234,162,37)" fg:x="549" fg:w="3"/><text x="44.2052%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="43.9552%" y="373" width="0.2402%" height="15" fill="rgb(221,0,24)" fg:x="549" fg:w="3"/><text x="44.2052%" y="383.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="43.9552%" y="357" width="0.2402%" height="15" fill="rgb(230,161,41)" fg:x="549" fg:w="3"/><text x="44.2052%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.0352%" y="341" width="0.1601%" height="15" fill="rgb(224,46,24)" fg:x="550" fg:w="2"/><text x="44.2852%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="44.0352%" y="325" width="0.1601%" height="15" fill="rgb(205,59,32)" fg:x="550" fg:w="2"/><text x="44.2852%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="44.0352%" y="309" width="0.1601%" height="15" fill="rgb(239,31,20)" fg:x="550" fg:w="2"/><text x="44.2852%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.0352%" y="293" width="0.1601%" height="15" fill="rgb(233,149,44)" fg:x="550" fg:w="2"/><text x="44.2852%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.0352%" y="277" width="0.1601%" height="15" fill="rgb(243,47,26)" fg:x="550" fg:w="2"/><text x="44.2852%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.0352%" y="261" width="0.1601%" height="15" fill="rgb(233,107,5)" fg:x="550" fg:w="2"/><text x="44.2852%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.0352%" y="245" width="0.1601%" height="15" fill="rgb(248,140,33)" fg:x="550" fg:w="2"/><text x="44.2852%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="44.0352%" y="229" width="0.1601%" height="15" fill="rgb(228,178,19)" fg:x="550" fg:w="2"/><text x="44.2852%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="44.0352%" y="213" width="0.1601%" height="15" fill="rgb(224,39,49)" fg:x="550" fg:w="2"/><text x="44.2852%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="44.0352%" y="197" width="0.1601%" height="15" fill="rgb(246,56,47)" fg:x="550" fg:w="2"/><text x="44.2852%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="44.0352%" y="181" width="0.1601%" height="15" fill="rgb(220,73,27)" fg:x="550" fg:w="2"/><text x="44.2852%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="44.0352%" y="165" width="0.1601%" height="15" fill="rgb(239,112,21)" fg:x="550" fg:w="2"/><text x="44.2852%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="44.0352%" y="149" width="0.1601%" height="15" fill="rgb(253,14,51)" fg:x="550" fg:w="2"/><text x="44.2852%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="44.0352%" y="133" width="0.1601%" height="15" fill="rgb(215,58,12)" fg:x="550" fg:w="2"/><text x="44.2852%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="44.0352%" y="117" width="0.1601%" height="15" fill="rgb(207,181,19)" fg:x="550" fg:w="2"/><text x="44.2852%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="44.0352%" y="101" width="0.1601%" height="15" fill="rgb(211,214,34)" fg:x="550" fg:w="2"/><text x="44.2852%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="44.0352%" y="85" width="0.1601%" height="15" fill="rgb(243,124,39)" fg:x="550" fg:w="2"/><text x="44.2852%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="44.0352%" y="69" width="0.1601%" height="15" fill="rgb(248,135,21)" fg:x="550" fg:w="2"/><text x="44.2852%" y="79.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="44.0352%" y="53" width="0.1601%" height="15" fill="rgb(245,218,3)" fg:x="550" fg:w="2"/><text x="44.2852%" y="63.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="44.0352%" y="37" width="0.1601%" height="15" fill="rgb(225,144,22)" fg:x="550" fg:w="2"/><text x="44.2852%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="44.1954%" y="501" width="0.0801%" height="15" fill="rgb(250,90,15)" fg:x="552" fg:w="1"/><text x="44.4454%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="44.1954%" y="485" width="0.0801%" height="15" fill="rgb(224,64,29)" fg:x="552" fg:w="1"/><text x="44.4454%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1954%" y="469" width="0.0801%" height="15" fill="rgb(217,50,47)" fg:x="552" fg:w="1"/><text x="44.4454%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.2754%" y="485" width="0.0801%" height="15" fill="rgb(231,159,47)" fg:x="553" fg:w="1"/><text x="44.5254%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="44.3555%" y="373" width="0.0801%" height="15" fill="rgb(213,89,29)" fg:x="554" fg:w="1"/><text x="44.6055%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="44.3555%" y="357" width="0.0801%" height="15" fill="rgb(243,90,23)" fg:x="554" fg:w="1"/><text x="44.6055%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.3555%" y="341" width="0.0801%" height="15" fill="rgb(213,21,6)" fg:x="554" fg:w="1"/><text x="44.6055%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3555%" y="325" width="0.0801%" height="15" fill="rgb(237,139,17)" fg:x="554" fg:w="1"/><text x="44.6055%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3555%" y="309" width="0.0801%" height="15" fill="rgb(250,147,17)" fg:x="554" fg:w="1"/><text x="44.6055%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3555%" y="293" width="0.0801%" height="15" fill="rgb(212,208,42)" fg:x="554" fg:w="1"/><text x="44.6055%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3555%" y="277" width="0.0801%" height="15" fill="rgb(215,229,40)" fg:x="554" fg:w="1"/><text x="44.6055%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.3555%" y="261" width="0.0801%" height="15" fill="rgb(206,204,1)" fg:x="554" fg:w="1"/><text x="44.6055%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3555%" y="245" width="0.0801%" height="15" fill="rgb(230,62,32)" fg:x="554" fg:w="1"/><text x="44.6055%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3555%" y="229" width="0.0801%" height="15" fill="rgb(223,22,42)" fg:x="554" fg:w="1"/><text x="44.6055%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.3555%" y="213" width="0.0801%" height="15" fill="rgb(244,6,23)" fg:x="554" fg:w="1"/><text x="44.6055%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.3555%" y="197" width="0.0801%" height="15" fill="rgb(240,221,42)" fg:x="554" fg:w="1"/><text x="44.6055%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.3555%" y="181" width="0.0801%" height="15" fill="rgb(222,74,7)" fg:x="554" fg:w="1"/><text x="44.6055%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.3555%" y="165" width="0.0801%" height="15" fill="rgb(227,191,38)" fg:x="554" fg:w="1"/><text x="44.6055%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.3555%" y="149" width="0.0801%" height="15" fill="rgb(227,89,34)" fg:x="554" fg:w="1"/><text x="44.6055%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.3555%" y="133" width="0.0801%" height="15" fill="rgb(215,153,25)" fg:x="554" fg:w="1"/><text x="44.6055%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.3555%" y="117" width="0.0801%" height="15" fill="rgb(215,153,46)" fg:x="554" fg:w="1"/><text x="44.6055%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.3555%" y="101" width="0.0801%" height="15" fill="rgb(242,38,52)" fg:x="554" fg:w="1"/><text x="44.6055%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.3555%" y="85" width="0.0801%" height="15" fill="rgb(218,112,4)" fg:x="554" fg:w="1"/><text x="44.6055%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.3555%" y="69" width="0.0801%" height="15" fill="rgb(231,210,31)" fg:x="554" fg:w="1"/><text x="44.6055%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4355%" y="325" width="0.0801%" height="15" fill="rgb(245,223,36)" fg:x="555" fg:w="1"/><text x="44.6855%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4355%" y="309" width="0.0801%" height="15" fill="rgb(246,41,2)" fg:x="555" fg:w="1"/><text x="44.6855%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4355%" y="293" width="0.0801%" height="15" fill="rgb(227,51,31)" fg:x="555" fg:w="1"/><text x="44.6855%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4355%" y="277" width="0.0801%" height="15" fill="rgb(222,95,26)" fg:x="555" fg:w="1"/><text x="44.6855%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4355%" y="261" width="0.0801%" height="15" fill="rgb(224,190,1)" fg:x="555" fg:w="1"/><text x="44.6855%" y="271.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="44.3555%" y="405" width="0.2402%" height="15" fill="rgb(209,90,42)" fg:x="554" fg:w="3"/><text x="44.6055%" y="415.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="44.3555%" y="389" width="0.2402%" height="15" fill="rgb(232,225,50)" fg:x="554" fg:w="3"/><text x="44.6055%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="44.4355%" y="373" width="0.1601%" height="15" fill="rgb(239,89,47)" fg:x="555" fg:w="2"/><text x="44.6855%" y="383.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="44.4355%" y="357" width="0.1601%" height="15" fill="rgb(230,212,50)" fg:x="555" fg:w="2"/><text x="44.6855%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="44.4355%" y="341" width="0.1601%" height="15" fill="rgb(252,1,27)" fg:x="555" fg:w="2"/><text x="44.6855%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.5156%" y="325" width="0.0801%" height="15" fill="rgb(237,179,41)" fg:x="556" fg:w="1"/><text x="44.7656%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5156%" y="309" width="0.0801%" height="15" fill="rgb(214,151,37)" fg:x="556" fg:w="1"/><text x="44.7656%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.5156%" y="293" width="0.0801%" height="15" fill="rgb(211,74,11)" fg:x="556" fg:w="1"/><text x="44.7656%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5156%" y="277" width="0.0801%" height="15" fill="rgb(242,21,21)" fg:x="556" fg:w="1"/><text x="44.7656%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.5156%" y="261" width="0.0801%" height="15" fill="rgb(226,106,43)" fg:x="556" fg:w="1"/><text x="44.7656%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5156%" y="245" width="0.0801%" height="15" fill="rgb(229,162,39)" fg:x="556" fg:w="1"/><text x="44.7656%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.5156%" y="229" width="0.0801%" height="15" fill="rgb(228,159,25)" fg:x="556" fg:w="1"/><text x="44.7656%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.5156%" y="213" width="0.0801%" height="15" fill="rgb(237,32,23)" fg:x="556" fg:w="1"/><text x="44.7656%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.5156%" y="197" width="0.0801%" height="15" fill="rgb(212,35,32)" fg:x="556" fg:w="1"/><text x="44.7656%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.5957%" y="213" width="0.0801%" height="15" fill="rgb(215,199,1)" fg:x="557" fg:w="1"/><text x="44.8457%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="44.5957%" y="197" width="0.0801%" height="15" fill="rgb(215,67,13)" fg:x="557" fg:w="1"/><text x="44.8457%" y="207.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="44.5957%" y="389" width="0.1601%" height="15" fill="rgb(216,20,47)" fg:x="557" fg:w="2"/><text x="44.8457%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.5957%" y="373" width="0.1601%" height="15" fill="rgb(249,183,48)" fg:x="557" fg:w="2"/><text x="44.8457%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.5957%" y="357" width="0.1601%" height="15" fill="rgb(208,86,37)" fg:x="557" fg:w="2"/><text x="44.8457%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.5957%" y="341" width="0.1601%" height="15" fill="rgb(251,192,7)" fg:x="557" fg:w="2"/><text x="44.8457%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.5957%" y="325" width="0.1601%" height="15" fill="rgb(234,196,3)" fg:x="557" fg:w="2"/><text x="44.8457%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.5957%" y="309" width="0.1601%" height="15" fill="rgb(229,150,39)" fg:x="557" fg:w="2"/><text x="44.8457%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.5957%" y="293" width="0.1601%" height="15" fill="rgb(226,19,29)" fg:x="557" fg:w="2"/><text x="44.8457%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.5957%" y="277" width="0.1601%" height="15" fill="rgb(226,222,2)" fg:x="557" fg:w="2"/><text x="44.8457%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.5957%" y="261" width="0.1601%" height="15" fill="rgb(235,85,29)" fg:x="557" fg:w="2"/><text x="44.8457%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.5957%" y="245" width="0.1601%" height="15" fill="rgb(237,194,43)" fg:x="557" fg:w="2"/><text x="44.8457%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.5957%" y="229" width="0.1601%" height="15" fill="rgb(211,4,42)" fg:x="557" fg:w="2"/><text x="44.8457%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.6757%" y="213" width="0.0801%" height="15" fill="rgb(221,80,37)" fg:x="558" fg:w="1"/><text x="44.9257%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.6757%" y="197" width="0.0801%" height="15" fill="rgb(222,47,31)" fg:x="558" fg:w="1"/><text x="44.9257%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.6757%" y="181" width="0.0801%" height="15" fill="rgb(249,82,52)" fg:x="558" fg:w="1"/><text x="44.9257%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.7558%" y="357" width="0.0801%" height="15" fill="rgb(218,203,2)" fg:x="559" fg:w="1"/><text x="45.0058%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="44.3555%" y="421" width="0.5604%" height="15" fill="rgb(210,175,14)" fg:x="554" fg:w="7"/><text x="44.6055%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="44.5957%" y="405" width="0.3203%" height="15" fill="rgb(216,210,12)" fg:x="557" fg:w="4"/><text x="44.8457%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.7558%" y="389" width="0.1601%" height="15" fill="rgb(229,120,18)" fg:x="559" fg:w="2"/><text x="45.0058%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.7558%" y="373" width="0.1601%" height="15" fill="rgb(231,174,12)" fg:x="559" fg:w="2"/><text x="45.0058%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.8359%" y="357" width="0.0801%" height="15" fill="rgb(214,101,53)" fg:x="560" fg:w="1"/><text x="45.0859%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8359%" y="341" width="0.0801%" height="15" fill="rgb(246,89,43)" fg:x="560" fg:w="1"/><text x="45.0859%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.8359%" y="325" width="0.0801%" height="15" fill="rgb(222,9,51)" fg:x="560" fg:w="1"/><text x="45.0859%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8359%" y="309" width="0.0801%" height="15" fill="rgb(252,221,9)" fg:x="560" fg:w="1"/><text x="45.0859%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.8359%" y="293" width="0.0801%" height="15" fill="rgb(248,28,15)" fg:x="560" fg:w="1"/><text x="45.0859%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="44.8359%" y="277" width="0.0801%" height="15" fill="rgb(213,54,52)" fg:x="560" fg:w="1"/><text x="45.0859%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8359%" y="261" width="0.0801%" height="15" fill="rgb(240,3,45)" fg:x="560" fg:w="1"/><text x="45.0859%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.8359%" y="245" width="0.0801%" height="15" fill="rgb(239,138,24)" fg:x="560" fg:w="1"/><text x="45.0859%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="44.8359%" y="229" width="0.0801%" height="15" fill="rgb(233,45,54)" fg:x="560" fg:w="1"/><text x="45.0859%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8359%" y="213" width="0.0801%" height="15" fill="rgb(220,131,2)" fg:x="560" fg:w="1"/><text x="45.0859%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.8359%" y="197" width="0.0801%" height="15" fill="rgb(240,154,36)" fg:x="560" fg:w="1"/><text x="45.0859%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="44.8359%" y="181" width="0.0801%" height="15" fill="rgb(251,221,1)" fg:x="560" fg:w="1"/><text x="45.0859%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8359%" y="165" width="0.0801%" height="15" fill="rgb(225,217,1)" fg:x="560" fg:w="1"/><text x="45.0859%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="44.3555%" y="453" width="0.6405%" height="15" fill="rgb(241,105,49)" fg:x="554" fg:w="8"/><text x="44.6055%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.64%)</title><rect x="44.3555%" y="437" width="0.6405%" height="15" fill="rgb(215,44,32)" fg:x="554" fg:w="8"/><text x="44.6055%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.9159%" y="421" width="0.0801%" height="15" fill="rgb(213,222,14)" fg:x="561" fg:w="1"/><text x="45.1659%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0761%" y="405" width="0.0801%" height="15" fill="rgb(207,99,52)" fg:x="563" fg:w="1"/><text x="45.3261%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0761%" y="389" width="0.0801%" height="15" fill="rgb(214,208,52)" fg:x="563" fg:w="1"/><text x="45.3261%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.0761%" y="373" width="0.0801%" height="15" fill="rgb(244,169,0)" fg:x="563" fg:w="1"/><text x="45.3261%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.0761%" y="357" width="0.0801%" height="15" fill="rgb(216,193,37)" fg:x="563" fg:w="1"/><text x="45.3261%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.0761%" y="341" width="0.0801%" height="15" fill="rgb(212,158,10)" fg:x="563" fg:w="1"/><text x="45.3261%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0761%" y="325" width="0.0801%" height="15" fill="rgb(213,110,20)" fg:x="563" fg:w="1"/><text x="45.3261%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0761%" y="309" width="0.0801%" height="15" fill="rgb(226,5,42)" fg:x="563" fg:w="1"/><text x="45.3261%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.0761%" y="293" width="0.0801%" height="15" fill="rgb(211,93,8)" fg:x="563" fg:w="1"/><text x="45.3261%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.0761%" y="277" width="0.0801%" height="15" fill="rgb(240,208,12)" fg:x="563" fg:w="1"/><text x="45.3261%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.0761%" y="261" width="0.0801%" height="15" fill="rgb(233,127,50)" fg:x="563" fg:w="1"/><text x="45.3261%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.0761%" y="245" width="0.0801%" height="15" fill="rgb(227,199,53)" fg:x="563" fg:w="1"/><text x="45.3261%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0761%" y="229" width="0.0801%" height="15" fill="rgb(235,199,10)" fg:x="563" fg:w="1"/><text x="45.3261%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="44.9960%" y="453" width="0.2402%" height="15" fill="rgb(228,148,35)" fg:x="562" fg:w="3"/><text x="45.2460%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.9960%" y="437" width="0.2402%" height="15" fill="rgb(217,87,19)" fg:x="562" fg:w="3"/><text x="45.2460%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.0761%" y="421" width="0.1601%" height="15" fill="rgb(239,9,32)" fg:x="563" fg:w="2"/><text x="45.3261%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.1561%" y="405" width="0.0801%" height="15" fill="rgb(229,101,29)" fg:x="564" fg:w="1"/><text x="45.4061%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (15 samples, 1.20%)</title><rect x="44.1954%" y="517" width="1.2010%" height="15" fill="rgb(208,143,26)" fg:x="552" fg:w="15"/><text x="44.4454%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (14 samples, 1.12%)</title><rect x="44.2754%" y="501" width="1.1209%" height="15" fill="rgb(214,10,2)" fg:x="553" fg:w="14"/><text x="44.5254%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (13 samples, 1.04%)</title><rect x="44.3555%" y="485" width="1.0408%" height="15" fill="rgb(254,203,30)" fg:x="554" fg:w="13"/><text x="44.6055%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.04%)</title><rect x="44.3555%" y="469" width="1.0408%" height="15" fill="rgb(242,45,3)" fg:x="554" fg:w="13"/><text x="44.6055%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="45.2362%" y="453" width="0.1601%" height="15" fill="rgb(209,146,51)" fg:x="565" fg:w="2"/><text x="45.4862%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.2362%" y="437" width="0.1601%" height="15" fill="rgb(222,80,5)" fg:x="565" fg:w="2"/><text x="45.4862%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.3163%" y="421" width="0.0801%" height="15" fill="rgb(252,80,35)" fg:x="566" fg:w="1"/><text x="45.5663%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.3163%" y="405" width="0.0801%" height="15" fill="rgb(246,125,28)" fg:x="566" fg:w="1"/><text x="45.5663%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.3163%" y="389" width="0.0801%" height="15" fill="rgb(224,143,51)" fg:x="566" fg:w="1"/><text x="45.5663%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="45.3963%" y="485" width="0.4804%" height="15" fill="rgb(205,24,17)" fg:x="567" fg:w="6"/><text x="45.6463%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="45.4764%" y="469" width="0.4003%" height="15" fill="rgb(253,128,30)" fg:x="568" fg:w="5"/><text x="45.7264%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="45.4764%" y="453" width="0.4003%" height="15" fill="rgb(214,153,25)" fg:x="568" fg:w="5"/><text x="45.7264%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="45.5564%" y="437" width="0.3203%" height="15" fill="rgb(214,4,28)" fg:x="569" fg:w="4"/><text x="45.8064%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="45.6365%" y="421" width="0.2402%" height="15" fill="rgb(235,179,52)" fg:x="570" fg:w="3"/><text x="45.8865%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.7166%" y="405" width="0.1601%" height="15" fill="rgb(233,27,42)" fg:x="571" fg:w="2"/><text x="45.9666%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="45.7166%" y="389" width="0.1601%" height="15" fill="rgb(238,35,25)" fg:x="571" fg:w="2"/><text x="45.9666%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="45.7166%" y="373" width="0.1601%" height="15" fill="rgb(227,44,31)" fg:x="571" fg:w="2"/><text x="45.9666%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="45.7166%" y="357" width="0.1601%" height="15" fill="rgb(232,201,13)" fg:x="571" fg:w="2"/><text x="45.9666%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="45.7166%" y="341" width="0.1601%" height="15" fill="rgb(224,172,52)" fg:x="571" fg:w="2"/><text x="45.9666%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="45.7166%" y="325" width="0.1601%" height="15" fill="rgb(214,27,26)" fg:x="571" fg:w="2"/><text x="45.9666%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8767%" y="389" width="0.0801%" height="15" fill="rgb(210,185,52)" fg:x="573" fg:w="1"/><text x="46.1267%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8767%" y="373" width="0.0801%" height="15" fill="rgb(249,59,32)" fg:x="573" fg:w="1"/><text x="46.1267%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8767%" y="357" width="0.0801%" height="15" fill="rgb(242,209,18)" fg:x="573" fg:w="1"/><text x="46.1267%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.8767%" y="341" width="0.0801%" height="15" fill="rgb(229,0,18)" fg:x="573" fg:w="1"/><text x="46.1267%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.8767%" y="325" width="0.0801%" height="15" fill="rgb(217,138,29)" fg:x="573" fg:w="1"/><text x="46.1267%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.8767%" y="309" width="0.0801%" height="15" fill="rgb(215,72,42)" fg:x="573" fg:w="1"/><text x="46.1267%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.8767%" y="293" width="0.0801%" height="15" fill="rgb(254,115,11)" fg:x="573" fg:w="1"/><text x="46.1267%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.8767%" y="277" width="0.0801%" height="15" fill="rgb(205,133,39)" fg:x="573" fg:w="1"/><text x="46.1267%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.8767%" y="261" width="0.0801%" height="15" fill="rgb(211,36,27)" fg:x="573" fg:w="1"/><text x="46.1267%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.8767%" y="245" width="0.0801%" height="15" fill="rgb(221,48,10)" fg:x="573" fg:w="1"/><text x="46.1267%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.8767%" y="229" width="0.0801%" height="15" fill="rgb(230,172,50)" fg:x="573" fg:w="1"/><text x="46.1267%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.8767%" y="213" width="0.0801%" height="15" fill="rgb(249,72,18)" fg:x="573" fg:w="1"/><text x="46.1267%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="45.8767%" y="485" width="0.1601%" height="15" fill="rgb(237,58,48)" fg:x="573" fg:w="2"/><text x="46.1267%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="45.8767%" y="469" width="0.1601%" height="15" fill="rgb(242,123,3)" fg:x="573" fg:w="2"/><text x="46.1267%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="45.8767%" y="453" width="0.1601%" height="15" fill="rgb(232,111,32)" fg:x="573" fg:w="2"/><text x="46.1267%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="45.8767%" y="437" width="0.1601%" height="15" fill="rgb(229,108,3)" fg:x="573" fg:w="2"/><text x="46.1267%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="45.8767%" y="421" width="0.1601%" height="15" fill="rgb(222,158,10)" fg:x="573" fg:w="2"/><text x="46.1267%" y="431.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="45.8767%" y="405" width="0.1601%" height="15" fill="rgb(205,34,49)" fg:x="573" fg:w="2"/><text x="46.1267%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.9568%" y="389" width="0.0801%" height="15" fill="rgb(232,21,14)" fg:x="574" fg:w="1"/><text x="46.2068%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.0368%" y="453" width="0.0801%" height="15" fill="rgb(229,127,44)" fg:x="575" fg:w="1"/><text x="46.2868%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.1169%" y="453" width="0.0801%" height="15" fill="rgb(232,171,4)" fg:x="576" fg:w="1"/><text x="46.3669%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.1169%" y="437" width="0.0801%" height="15" fill="rgb(250,92,16)" fg:x="576" fg:w="1"/><text x="46.3669%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.1169%" y="421" width="0.0801%" height="15" fill="rgb(230,103,38)" fg:x="576" fg:w="1"/><text x="46.3669%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (36 samples, 2.88%)</title><rect x="43.4748%" y="533" width="2.8823%" height="15" fill="rgb(253,167,9)" fg:x="543" fg:w="36"/><text x="43.7248%" y="543.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.96%)</title><rect x="45.3963%" y="517" width="0.9608%" height="15" fill="rgb(222,118,11)" fg:x="567" fg:w="12"/><text x="45.6463%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="45.3963%" y="501" width="0.9608%" height="15" fill="rgb(240,202,0)" fg:x="567" fg:w="12"/><text x="45.6463%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="46.0368%" y="485" width="0.3203%" height="15" fill="rgb(236,124,4)" fg:x="575" fg:w="4"/><text x="46.2868%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="46.0368%" y="469" width="0.3203%" height="15" fill="rgb(244,128,18)" fg:x="575" fg:w="4"/><text x="46.2868%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="46.1970%" y="453" width="0.1601%" height="15" fill="rgb(231,206,5)" fg:x="577" fg:w="2"/><text x="46.4470%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="46.1970%" y="437" width="0.1601%" height="15" fill="rgb(237,111,8)" fg:x="577" fg:w="2"/><text x="46.4470%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="46.1970%" y="421" width="0.1601%" height="15" fill="rgb(225,127,3)" fg:x="577" fg:w="2"/><text x="46.4470%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.2770%" y="405" width="0.0801%" height="15" fill="rgb(222,85,48)" fg:x="578" fg:w="1"/><text x="46.5270%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.2770%" y="389" width="0.0801%" height="15" fill="rgb(221,108,37)" fg:x="578" fg:w="1"/><text x="46.5270%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.2770%" y="373" width="0.0801%" height="15" fill="rgb(226,169,36)" fg:x="578" fg:w="1"/><text x="46.5270%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.4371%" y="517" width="0.0801%" height="15" fill="rgb(237,76,12)" fg:x="580" fg:w="1"/><text x="46.6871%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.4371%" y="501" width="0.0801%" height="15" fill="rgb(210,227,32)" fg:x="580" fg:w="1"/><text x="46.6871%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.8375%" y="453" width="0.1601%" height="15" fill="rgb(214,117,20)" fg:x="585" fg:w="2"/><text x="47.0875%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.8375%" y="437" width="0.1601%" height="15" fill="rgb(234,119,41)" fg:x="585" fg:w="2"/><text x="47.0875%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="46.8375%" y="421" width="0.1601%" height="15" fill="rgb(230,130,47)" fg:x="585" fg:w="2"/><text x="47.0875%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="46.8375%" y="405" width="0.1601%" height="15" fill="rgb(215,21,41)" fg:x="585" fg:w="2"/><text x="47.0875%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="46.8375%" y="389" width="0.1601%" height="15" fill="rgb(226,26,53)" fg:x="585" fg:w="2"/><text x="47.0875%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="46.8375%" y="373" width="0.1601%" height="15" fill="rgb(221,92,23)" fg:x="585" fg:w="2"/><text x="47.0875%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="46.8375%" y="357" width="0.1601%" height="15" fill="rgb(213,156,21)" fg:x="585" fg:w="2"/><text x="47.0875%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="46.8375%" y="341" width="0.1601%" height="15" fill="rgb(254,166,29)" fg:x="585" fg:w="2"/><text x="47.0875%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="46.8375%" y="325" width="0.1601%" height="15" fill="rgb(213,71,1)" fg:x="585" fg:w="2"/><text x="47.0875%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="46.8375%" y="309" width="0.1601%" height="15" fill="rgb(245,8,13)" fg:x="585" fg:w="2"/><text x="47.0875%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="46.8375%" y="293" width="0.1601%" height="15" fill="rgb(213,32,32)" fg:x="585" fg:w="2"/><text x="47.0875%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.8375%" y="277" width="0.1601%" height="15" fill="rgb(251,86,50)" fg:x="585" fg:w="2"/><text x="47.0875%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="46.7574%" y="485" width="0.4804%" height="15" fill="rgb(252,92,41)" fg:x="584" fg:w="6"/><text x="47.0074%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="46.7574%" y="469" width="0.4804%" height="15" fill="rgb(234,70,35)" fg:x="584" fg:w="6"/><text x="47.0074%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="46.9976%" y="453" width="0.2402%" height="15" fill="rgb(210,157,19)" fg:x="587" fg:w="3"/><text x="47.2476%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.0777%" y="437" width="0.1601%" height="15" fill="rgb(206,20,45)" fg:x="588" fg:w="2"/><text x="47.3277%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.1577%" y="421" width="0.0801%" height="15" fill="rgb(207,34,7)" fg:x="589" fg:w="1"/><text x="47.4077%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.1577%" y="405" width="0.0801%" height="15" fill="rgb(253,151,14)" fg:x="589" fg:w="1"/><text x="47.4077%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.1577%" y="389" width="0.0801%" height="15" fill="rgb(252,1,18)" fg:x="589" fg:w="1"/><text x="47.4077%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.1577%" y="373" width="0.0801%" height="15" fill="rgb(214,77,52)" fg:x="589" fg:w="1"/><text x="47.4077%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.1577%" y="357" width="0.0801%" height="15" fill="rgb(254,106,35)" fg:x="589" fg:w="1"/><text x="47.4077%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.1577%" y="341" width="0.0801%" height="15" fill="rgb(212,67,40)" fg:x="589" fg:w="1"/><text x="47.4077%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.1577%" y="325" width="0.0801%" height="15" fill="rgb(228,76,23)" fg:x="589" fg:w="1"/><text x="47.4077%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.1577%" y="309" width="0.0801%" height="15" fill="rgb(250,198,5)" fg:x="589" fg:w="1"/><text x="47.4077%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.1577%" y="293" width="0.0801%" height="15" fill="rgb(209,20,25)" fg:x="589" fg:w="1"/><text x="47.4077%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.1577%" y="277" width="0.0801%" height="15" fill="rgb(236,32,4)" fg:x="589" fg:w="1"/><text x="47.4077%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.1577%" y="261" width="0.0801%" height="15" fill="rgb(215,31,6)" fg:x="589" fg:w="1"/><text x="47.4077%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1577%" y="245" width="0.0801%" height="15" fill="rgb(207,186,49)" fg:x="589" fg:w="1"/><text x="47.4077%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.5580%" y="341" width="0.0801%" height="15" fill="rgb(211,212,49)" fg:x="594" fg:w="1"/><text x="47.8080%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="47.5580%" y="357" width="0.1601%" height="15" fill="rgb(229,51,41)" fg:x="594" fg:w="2"/><text x="47.8080%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="47.6381%" y="341" width="0.0801%" height="15" fill="rgb(205,225,36)" fg:x="595" fg:w="1"/><text x="47.8881%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.6381%" y="325" width="0.0801%" height="15" fill="rgb(209,213,45)" fg:x="595" fg:w="1"/><text x="47.8881%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6381%" y="309" width="0.0801%" height="15" fill="rgb(219,35,49)" fg:x="595" fg:w="1"/><text x="47.8881%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.7182%" y="309" width="0.0801%" height="15" fill="rgb(215,205,22)" fg:x="596" fg:w="1"/><text x="47.9682%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.7182%" y="293" width="0.0801%" height="15" fill="rgb(248,204,34)" fg:x="596" fg:w="1"/><text x="47.9682%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.7182%" y="277" width="0.0801%" height="15" fill="rgb(219,223,31)" fg:x="596" fg:w="1"/><text x="47.9682%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.7982%" y="245" width="0.0801%" height="15" fill="rgb(236,14,8)" fg:x="597" fg:w="1"/><text x="48.0482%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.7982%" y="229" width="0.0801%" height="15" fill="rgb(243,129,23)" fg:x="597" fg:w="1"/><text x="48.0482%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (8 samples, 0.64%)</title><rect x="47.4780%" y="389" width="0.6405%" height="15" fill="rgb(205,204,5)" fg:x="593" fg:w="8"/><text x="47.7280%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="47.5580%" y="373" width="0.5604%" height="15" fill="rgb(244,115,32)" fg:x="594" fg:w="7"/><text x="47.8080%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="47.7182%" y="357" width="0.4003%" height="15" fill="rgb(229,123,14)" fg:x="596" fg:w="5"/><text x="47.9682%" y="367.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="47.7182%" y="341" width="0.4003%" height="15" fill="rgb(250,85,1)" fg:x="596" fg:w="5"/><text x="47.9682%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="47.7182%" y="325" width="0.4003%" height="15" fill="rgb(209,141,54)" fg:x="596" fg:w="5"/><text x="47.9682%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="47.7982%" y="309" width="0.3203%" height="15" fill="rgb(244,107,39)" fg:x="597" fg:w="4"/><text x="48.0482%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="47.7982%" y="293" width="0.3203%" height="15" fill="rgb(230,68,26)" fg:x="597" fg:w="4"/><text x="48.0482%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="47.7982%" y="277" width="0.3203%" height="15" fill="rgb(220,178,33)" fg:x="597" fg:w="4"/><text x="48.0482%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="47.7982%" y="261" width="0.3203%" height="15" fill="rgb(220,77,53)" fg:x="597" fg:w="4"/><text x="48.0482%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="47.8783%" y="245" width="0.2402%" height="15" fill="rgb(224,108,19)" fg:x="598" fg:w="3"/><text x="48.1283%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.8783%" y="229" width="0.2402%" height="15" fill="rgb(223,203,27)" fg:x="598" fg:w="3"/><text x="48.1283%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="47.8783%" y="213" width="0.2402%" height="15" fill="rgb(211,32,46)" fg:x="598" fg:w="3"/><text x="48.1283%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.8783%" y="197" width="0.2402%" height="15" fill="rgb(240,101,27)" fg:x="598" fg:w="3"/><text x="48.1283%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.9584%" y="181" width="0.1601%" height="15" fill="rgb(217,210,11)" fg:x="599" fg:w="2"/><text x="48.2084%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.0384%" y="165" width="0.0801%" height="15" fill="rgb(236,130,21)" fg:x="600" fg:w="1"/><text x="48.2884%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.0384%" y="149" width="0.0801%" height="15" fill="rgb(250,136,8)" fg:x="600" fg:w="1"/><text x="48.2884%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.1185%" y="261" width="0.1601%" height="15" fill="rgb(243,223,36)" fg:x="601" fg:w="2"/><text x="48.3685%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="48.1185%" y="245" width="0.1601%" height="15" fill="rgb(246,184,8)" fg:x="601" fg:w="2"/><text x="48.3685%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.3587%" y="229" width="0.0801%" height="15" fill="rgb(222,158,36)" fg:x="604" fg:w="1"/><text x="48.6087%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3587%" y="213" width="0.0801%" height="15" fill="rgb(210,220,19)" fg:x="604" fg:w="1"/><text x="48.6087%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.4388%" y="213" width="0.1601%" height="15" fill="rgb(246,44,38)" fg:x="605" fg:w="2"/><text x="48.6888%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.4388%" y="197" width="0.1601%" height="15" fill="rgb(246,186,14)" fg:x="605" fg:w="2"/><text x="48.6888%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.4388%" y="181" width="0.1601%" height="15" fill="rgb(233,193,20)" fg:x="605" fg:w="2"/><text x="48.6888%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.5188%" y="165" width="0.0801%" height="15" fill="rgb(215,60,5)" fg:x="606" fg:w="1"/><text x="48.7688%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.5188%" y="149" width="0.0801%" height="15" fill="rgb(207,128,10)" fg:x="606" fg:w="1"/><text x="48.7688%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.5188%" y="133" width="0.0801%" height="15" fill="rgb(238,84,54)" fg:x="606" fg:w="1"/><text x="48.7688%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.5188%" y="117" width="0.0801%" height="15" fill="rgb(213,130,11)" fg:x="606" fg:w="1"/><text x="48.7688%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5188%" y="101" width="0.0801%" height="15" fill="rgb(235,62,9)" fg:x="606" fg:w="1"/><text x="48.7688%" y="111.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="48.1185%" y="373" width="0.5604%" height="15" fill="rgb(222,64,24)" fg:x="601" fg:w="7"/><text x="48.3685%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="48.1185%" y="357" width="0.5604%" height="15" fill="rgb(238,193,42)" fg:x="601" fg:w="7"/><text x="48.3685%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="48.1185%" y="341" width="0.5604%" height="15" fill="rgb(243,204,46)" fg:x="601" fg:w="7"/><text x="48.3685%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="48.1185%" y="325" width="0.5604%" height="15" fill="rgb(243,196,11)" fg:x="601" fg:w="7"/><text x="48.3685%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="48.1185%" y="309" width="0.5604%" height="15" fill="rgb(232,77,22)" fg:x="601" fg:w="7"/><text x="48.3685%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="48.1185%" y="293" width="0.5604%" height="15" fill="rgb(215,80,25)" fg:x="601" fg:w="7"/><text x="48.3685%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="48.1185%" y="277" width="0.5604%" height="15" fill="rgb(210,173,7)" fg:x="601" fg:w="7"/><text x="48.3685%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="48.2786%" y="261" width="0.4003%" height="15" fill="rgb(207,101,10)" fg:x="603" fg:w="5"/><text x="48.5286%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="48.2786%" y="245" width="0.4003%" height="15" fill="rgb(246,57,48)" fg:x="603" fg:w="5"/><text x="48.5286%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="48.4388%" y="229" width="0.2402%" height="15" fill="rgb(236,184,40)" fg:x="605" fg:w="3"/><text x="48.6888%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5989%" y="213" width="0.0801%" height="15" fill="rgb(210,205,13)" fg:x="607" fg:w="1"/><text x="48.8489%" y="223.50"></text></g><g><title>serde_json::read::StrRead::new (1 samples, 0.08%)</title><rect x="48.6789%" y="373" width="0.0801%" height="15" fill="rgb(231,129,42)" fg:x="608" fg:w="1"/><text x="48.9289%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9191%" y="341" width="0.0801%" height="15" fill="rgb(220,229,54)" fg:x="611" fg:w="1"/><text x="49.1691%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.9992%" y="229" width="0.0801%" height="15" fill="rgb(230,192,26)" fg:x="612" fg:w="1"/><text x="49.2492%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.9992%" y="213" width="0.0801%" height="15" fill="rgb(253,18,30)" fg:x="612" fg:w="1"/><text x="49.2492%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="48.9992%" y="197" width="0.0801%" height="15" fill="rgb(216,62,53)" fg:x="612" fg:w="1"/><text x="49.2492%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.9992%" y="181" width="0.0801%" height="15" fill="rgb(230,79,29)" fg:x="612" fg:w="1"/><text x="49.2492%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.9992%" y="165" width="0.0801%" height="15" fill="rgb(242,26,26)" fg:x="612" fg:w="1"/><text x="49.2492%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.9992%" y="149" width="0.0801%" height="15" fill="rgb(227,125,21)" fg:x="612" fg:w="1"/><text x="49.2492%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.9992%" y="133" width="0.0801%" height="15" fill="rgb(229,93,26)" fg:x="612" fg:w="1"/><text x="49.2492%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="48.9992%" y="117" width="0.0801%" height="15" fill="rgb(227,228,8)" fg:x="612" fg:w="1"/><text x="49.2492%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="49.0793%" y="229" width="0.0801%" height="15" fill="rgb(233,56,0)" fg:x="613" fg:w="1"/><text x="49.3293%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="48.9992%" y="261" width="0.2402%" height="15" fill="rgb(225,185,17)" fg:x="612" fg:w="3"/><text x="49.2492%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="48.9992%" y="245" width="0.2402%" height="15" fill="rgb(238,202,30)" fg:x="612" fg:w="3"/><text x="49.2492%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.1593%" y="229" width="0.0801%" height="15" fill="rgb(236,60,13)" fg:x="614" fg:w="1"/><text x="49.4093%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.2394%" y="181" width="0.1601%" height="15" fill="rgb(244,92,0)" fg:x="615" fg:w="2"/><text x="49.4894%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.2394%" y="165" width="0.1601%" height="15" fill="rgb(225,57,15)" fg:x="615" fg:w="2"/><text x="49.4894%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="48.9992%" y="293" width="0.4804%" height="15" fill="rgb(228,5,28)" fg:x="612" fg:w="6"/><text x="49.2492%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="48.9992%" y="277" width="0.4804%" height="15" fill="rgb(252,34,51)" fg:x="612" fg:w="6"/><text x="49.2492%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="49.2394%" y="261" width="0.2402%" height="15" fill="rgb(235,58,7)" fg:x="615" fg:w="3"/><text x="49.4894%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="49.2394%" y="245" width="0.2402%" height="15" fill="rgb(250,132,20)" fg:x="615" fg:w="3"/><text x="49.4894%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="49.2394%" y="229" width="0.2402%" height="15" fill="rgb(217,164,0)" fg:x="615" fg:w="3"/><text x="49.4894%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="49.2394%" y="213" width="0.2402%" height="15" fill="rgb(208,220,35)" fg:x="615" fg:w="3"/><text x="49.4894%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="49.2394%" y="197" width="0.2402%" height="15" fill="rgb(227,42,51)" fg:x="615" fg:w="3"/><text x="49.4894%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="49.3995%" y="181" width="0.0801%" height="15" fill="rgb(225,146,38)" fg:x="617" fg:w="1"/><text x="49.6495%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4796%" y="261" width="0.0801%" height="15" fill="rgb(252,108,37)" fg:x="618" fg:w="1"/><text x="49.7296%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="49.4796%" y="293" width="0.1601%" height="15" fill="rgb(244,101,24)" fg:x="618" fg:w="2"/><text x="49.7296%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="49.4796%" y="277" width="0.1601%" height="15" fill="rgb(213,161,50)" fg:x="618" fg:w="2"/><text x="49.7296%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.5596%" y="261" width="0.0801%" height="15" fill="rgb(248,159,19)" fg:x="619" fg:w="1"/><text x="49.8096%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.5596%" y="245" width="0.0801%" height="15" fill="rgb(233,179,15)" fg:x="619" fg:w="1"/><text x="49.8096%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.5596%" y="229" width="0.0801%" height="15" fill="rgb(248,178,3)" fg:x="619" fg:w="1"/><text x="49.8096%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.7198%" y="261" width="0.0801%" height="15" fill="rgb(245,190,41)" fg:x="621" fg:w="1"/><text x="49.9698%" y="271.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="49.7198%" y="245" width="0.0801%" height="15" fill="rgb(218,151,19)" fg:x="621" fg:w="1"/><text x="49.9698%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="48.9992%" y="341" width="0.8807%" height="15" fill="rgb(245,25,44)" fg:x="612" fg:w="11"/><text x="49.2492%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="48.9992%" y="325" width="0.8807%" height="15" fill="rgb(235,172,47)" fg:x="612" fg:w="11"/><text x="49.2492%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.88%)</title><rect x="48.9992%" y="309" width="0.8807%" height="15" fill="rgb(246,33,12)" fg:x="612" fg:w="11"/><text x="49.2492%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.6397%" y="293" width="0.2402%" height="15" fill="rgb(214,124,7)" fg:x="620" fg:w="3"/><text x="49.8897%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="49.6397%" y="277" width="0.2402%" height="15" fill="rgb(246,186,18)" fg:x="620" fg:w="3"/><text x="49.8897%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="49.7998%" y="261" width="0.0801%" height="15" fill="rgb(231,94,1)" fg:x="622" fg:w="1"/><text x="50.0498%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7998%" y="245" width="0.0801%" height="15" fill="rgb(208,33,48)" fg:x="622" fg:w="1"/><text x="50.0498%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.7998%" y="229" width="0.0801%" height="15" fill="rgb(208,195,44)" fg:x="622" fg:w="1"/><text x="50.0498%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="49.7998%" y="213" width="0.0801%" height="15" fill="rgb(226,13,52)" fg:x="622" fg:w="1"/><text x="50.0498%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7998%" y="197" width="0.0801%" height="15" fill="rgb(217,219,45)" fg:x="622" fg:w="1"/><text x="50.0498%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.7998%" y="181" width="0.0801%" height="15" fill="rgb(223,45,25)" fg:x="622" fg:w="1"/><text x="50.0498%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="49.7998%" y="165" width="0.0801%" height="15" fill="rgb(241,163,0)" fg:x="622" fg:w="1"/><text x="50.0498%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7998%" y="149" width="0.0801%" height="15" fill="rgb(216,68,47)" fg:x="622" fg:w="1"/><text x="50.0498%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.7998%" y="133" width="0.0801%" height="15" fill="rgb(236,119,45)" fg:x="622" fg:w="1"/><text x="50.0498%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="49.7998%" y="117" width="0.0801%" height="15" fill="rgb(209,188,24)" fg:x="622" fg:w="1"/><text x="50.0498%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7998%" y="101" width="0.0801%" height="15" fill="rgb(221,118,7)" fg:x="622" fg:w="1"/><text x="50.0498%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.7998%" y="85" width="0.0801%" height="15" fill="rgb(213,148,43)" fg:x="622" fg:w="1"/><text x="50.0498%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (23 samples, 1.84%)</title><rect x="48.1185%" y="389" width="1.8415%" height="15" fill="rgb(231,21,43)" fg:x="601" fg:w="23"/><text x="48.3685%" y="399.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.20%)</title><rect x="48.7590%" y="373" width="1.2010%" height="15" fill="rgb(232,213,43)" fg:x="609" fg:w="15"/><text x="49.0090%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="48.7590%" y="357" width="1.2010%" height="15" fill="rgb(239,145,50)" fg:x="609" fg:w="15"/><text x="49.0090%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.8799%" y="341" width="0.0801%" height="15" fill="rgb(222,131,18)" fg:x="623" fg:w="1"/><text x="50.1299%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.8799%" y="325" width="0.0801%" height="15" fill="rgb(243,181,13)" fg:x="623" fg:w="1"/><text x="50.1299%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.8799%" y="309" width="0.0801%" height="15" fill="rgb(212,74,41)" fg:x="623" fg:w="1"/><text x="50.1299%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.0400%" y="277" width="0.0801%" height="15" fill="rgb(237,143,34)" fg:x="625" fg:w="1"/><text x="50.2900%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0400%" y="261" width="0.0801%" height="15" fill="rgb(228,139,0)" fg:x="625" fg:w="1"/><text x="50.2900%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="50.0400%" y="293" width="0.2402%" height="15" fill="rgb(227,214,11)" fg:x="625" fg:w="3"/><text x="50.2900%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.1201%" y="277" width="0.1601%" height="15" fill="rgb(228,118,39)" fg:x="626" fg:w="2"/><text x="50.3701%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.1201%" y="261" width="0.1601%" height="15" fill="rgb(207,117,22)" fg:x="626" fg:w="2"/><text x="50.3701%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="50.1201%" y="245" width="0.1601%" height="15" fill="rgb(225,91,8)" fg:x="626" fg:w="2"/><text x="50.3701%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="50.1201%" y="229" width="0.1601%" height="15" fill="rgb(230,219,48)" fg:x="626" fg:w="2"/><text x="50.3701%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="50.1201%" y="213" width="0.1601%" height="15" fill="rgb(244,0,23)" fg:x="626" fg:w="2"/><text x="50.3701%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.1201%" y="197" width="0.1601%" height="15" fill="rgb(206,212,23)" fg:x="626" fg:w="2"/><text x="50.3701%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.1201%" y="181" width="0.1601%" height="15" fill="rgb(254,62,10)" fg:x="626" fg:w="2"/><text x="50.3701%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="50.1201%" y="165" width="0.1601%" height="15" fill="rgb(236,58,8)" fg:x="626" fg:w="2"/><text x="50.3701%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="50.1201%" y="149" width="0.1601%" height="15" fill="rgb(232,212,17)" fg:x="626" fg:w="2"/><text x="50.3701%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="50.1201%" y="133" width="0.1601%" height="15" fill="rgb(206,132,9)" fg:x="626" fg:w="2"/><text x="50.3701%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="50.1201%" y="117" width="0.1601%" height="15" fill="rgb(234,97,28)" fg:x="626" fg:w="2"/><text x="50.3701%" y="127.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.1201%" y="101" width="0.1601%" height="15" fill="rgb(254,144,9)" fg:x="626" fg:w="2"/><text x="50.3701%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.0400%" y="309" width="0.3203%" height="15" fill="rgb(244,204,43)" fg:x="625" fg:w="4"/><text x="50.2900%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2802%" y="293" width="0.0801%" height="15" fill="rgb(248,177,16)" fg:x="628" fg:w="1"/><text x="50.5302%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="49.9600%" y="341" width="0.4804%" height="15" fill="rgb(219,110,15)" fg:x="624" fg:w="6"/><text x="50.2100%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="50.0400%" y="325" width="0.4003%" height="15" fill="rgb(212,203,25)" fg:x="625" fg:w="5"/><text x="50.2900%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3603%" y="309" width="0.0801%" height="15" fill="rgb(205,50,1)" fg:x="629" fg:w="1"/><text x="50.6103%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.4404%" y="277" width="0.0801%" height="15" fill="rgb(222,152,41)" fg:x="630" fg:w="1"/><text x="50.6904%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (42 samples, 3.36%)</title><rect x="47.2378%" y="485" width="3.3627%" height="15" fill="rgb(236,83,3)" fg:x="590" fg:w="42"/><text x="47.4878%" y="495.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (42 samples, 3.36%)</title><rect x="47.2378%" y="469" width="3.3627%" height="15" fill="rgb(214,30,54)" fg:x="590" fg:w="42"/><text x="47.4878%" y="479.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 3.36%)</title><rect x="47.2378%" y="453" width="3.3627%" height="15" fill="rgb(250,117,31)" fg:x="590" fg:w="42"/><text x="47.4878%" y="463.50">&lt;al..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (42 samples, 3.36%)</title><rect x="47.2378%" y="437" width="3.3627%" height="15" fill="rgb(228,77,14)" fg:x="590" fg:w="42"/><text x="47.4878%" y="447.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (40 samples, 3.20%)</title><rect x="47.3979%" y="421" width="3.2026%" height="15" fill="rgb(241,3,28)" fg:x="592" fg:w="40"/><text x="47.6479%" y="431.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (40 samples, 3.20%)</title><rect x="47.3979%" y="405" width="3.2026%" height="15" fill="rgb(221,175,52)" fg:x="592" fg:w="40"/><text x="47.6479%" y="415.50">eng..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="49.9600%" y="389" width="0.6405%" height="15" fill="rgb(237,91,6)" fg:x="624" fg:w="8"/><text x="50.2100%" y="399.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="49.9600%" y="373" width="0.6405%" height="15" fill="rgb(246,46,42)" fg:x="624" fg:w="8"/><text x="50.2100%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="49.9600%" y="357" width="0.6405%" height="15" fill="rgb(235,199,0)" fg:x="624" fg:w="8"/><text x="50.2100%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.4404%" y="341" width="0.1601%" height="15" fill="rgb(224,44,40)" fg:x="630" fg:w="2"/><text x="50.6904%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.4404%" y="325" width="0.1601%" height="15" fill="rgb(209,24,35)" fg:x="630" fg:w="2"/><text x="50.6904%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.4404%" y="309" width="0.1601%" height="15" fill="rgb(244,46,22)" fg:x="630" fg:w="2"/><text x="50.6904%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.4404%" y="293" width="0.1601%" height="15" fill="rgb(235,99,8)" fg:x="630" fg:w="2"/><text x="50.6904%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="50.5204%" y="277" width="0.0801%" height="15" fill="rgb(218,127,36)" fg:x="631" fg:w="1"/><text x="50.7704%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.5204%" y="261" width="0.0801%" height="15" fill="rgb(238,47,46)" fg:x="631" fg:w="1"/><text x="50.7704%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.5204%" y="245" width="0.0801%" height="15" fill="rgb(233,65,17)" fg:x="631" fg:w="1"/><text x="50.7704%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.5204%" y="229" width="0.0801%" height="15" fill="rgb(239,22,33)" fg:x="631" fg:w="1"/><text x="50.7704%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.5204%" y="213" width="0.0801%" height="15" fill="rgb(243,66,43)" fg:x="631" fg:w="1"/><text x="50.7704%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.5204%" y="197" width="0.0801%" height="15" fill="rgb(235,210,28)" fg:x="631" fg:w="1"/><text x="50.7704%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="50.5204%" y="181" width="0.0801%" height="15" fill="rgb(205,191,50)" fg:x="631" fg:w="1"/><text x="50.7704%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.5204%" y="165" width="0.0801%" height="15" fill="rgb(251,217,19)" fg:x="631" fg:w="1"/><text x="50.7704%" y="175.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="50.5204%" y="149" width="0.0801%" height="15" fill="rgb(205,174,37)" fg:x="631" fg:w="1"/><text x="50.7704%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.6005%" y="485" width="0.0801%" height="15" fill="rgb(212,158,42)" fg:x="632" fg:w="1"/><text x="50.8505%" y="495.50"></text></g><g><title>plugins_core::tools::get_contained_keys (55 samples, 4.40%)</title><rect x="46.3571%" y="533" width="4.4035%" height="15" fill="rgb(212,208,51)" fg:x="579" fg:w="55"/><text x="46.6071%" y="543.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (53 samples, 4.24%)</title><rect x="46.5172%" y="517" width="4.2434%" height="15" fill="rgb(225,198,20)" fg:x="581" fg:w="53"/><text x="46.7672%" y="527.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (52 samples, 4.16%)</title><rect x="46.5973%" y="501" width="4.1633%" height="15" fill="rgb(247,41,44)" fg:x="582" fg:w="52"/><text x="46.8473%" y="511.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.6805%" y="485" width="0.0801%" height="15" fill="rgb(228,33,41)" fg:x="633" fg:w="1"/><text x="50.9305%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.6805%" y="469" width="0.0801%" height="15" fill="rgb(215,47,52)" fg:x="633" fg:w="1"/><text x="50.9305%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="50.6805%" y="453" width="0.0801%" height="15" fill="rgb(248,106,37)" fg:x="633" fg:w="1"/><text x="50.9305%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.6805%" y="437" width="0.0801%" height="15" fill="rgb(238,91,29)" fg:x="633" fg:w="1"/><text x="50.9305%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="50.6805%" y="421" width="0.0801%" height="15" fill="rgb(226,111,40)" fg:x="633" fg:w="1"/><text x="50.9305%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.6805%" y="405" width="0.0801%" height="15" fill="rgb(229,159,36)" fg:x="633" fg:w="1"/><text x="50.9305%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.6805%" y="389" width="0.0801%" height="15" fill="rgb(221,109,4)" fg:x="633" fg:w="1"/><text x="50.9305%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6805%" y="373" width="0.0801%" height="15" fill="rgb(236,56,25)" fg:x="633" fg:w="1"/><text x="50.9305%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="50.7606%" y="517" width="0.0801%" height="15" fill="rgb(244,113,23)" fg:x="634" fg:w="1"/><text x="51.0106%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.7606%" y="501" width="0.0801%" height="15" fill="rgb(249,132,2)" fg:x="634" fg:w="1"/><text x="51.0106%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.7606%" y="485" width="0.0801%" height="15" fill="rgb(205,185,21)" fg:x="634" fg:w="1"/><text x="51.0106%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.0008%" y="485" width="0.0801%" height="15" fill="rgb(245,130,2)" fg:x="637" fg:w="1"/><text x="51.2508%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.0809%" y="485" width="0.1601%" height="15" fill="rgb(246,71,26)" fg:x="638" fg:w="2"/><text x="51.3309%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.0809%" y="469" width="0.1601%" height="15" fill="rgb(234,194,6)" fg:x="638" fg:w="2"/><text x="51.3309%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1609%" y="453" width="0.0801%" height="15" fill="rgb(206,24,32)" fg:x="639" fg:w="1"/><text x="51.4109%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.1609%" y="437" width="0.0801%" height="15" fill="rgb(233,7,54)" fg:x="639" fg:w="1"/><text x="51.4109%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100 samples, 8.01%)</title><rect x="43.3147%" y="565" width="8.0064%" height="15" fill="rgb(252,46,1)" fg:x="541" fg:w="100"/><text x="43.5647%" y="575.50">&lt;alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (98 samples, 7.85%)</title><rect x="43.4748%" y="549" width="7.8463%" height="15" fill="rgb(216,113,53)" fg:x="543" fg:w="98"/><text x="43.7248%" y="559.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::get_occupant_keys (7 samples, 0.56%)</title><rect x="50.7606%" y="533" width="0.5604%" height="15" fill="rgb(215,40,24)" fg:x="634" fg:w="7"/><text x="51.0106%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="50.8407%" y="517" width="0.4804%" height="15" fill="rgb(233,222,8)" fg:x="635" fg:w="6"/><text x="51.0907%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="50.9207%" y="501" width="0.4003%" height="15" fill="rgb(248,73,28)" fg:x="636" fg:w="5"/><text x="51.1707%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.2410%" y="485" width="0.0801%" height="15" fill="rgb(247,126,28)" fg:x="640" fg:w="1"/><text x="51.4910%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2410%" y="469" width="0.0801%" height="15" fill="rgb(242,173,54)" fg:x="640" fg:w="1"/><text x="51.4910%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.2410%" y="453" width="0.0801%" height="15" fill="rgb(244,186,22)" fg:x="640" fg:w="1"/><text x="51.4910%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2410%" y="437" width="0.0801%" height="15" fill="rgb(231,187,4)" fg:x="640" fg:w="1"/><text x="51.4910%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.2410%" y="421" width="0.0801%" height="15" fill="rgb(252,66,47)" fg:x="640" fg:w="1"/><text x="51.4910%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.5612%" y="533" width="0.0801%" height="15" fill="rgb(240,228,28)" fg:x="644" fg:w="1"/><text x="51.8112%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.7214%" y="517" width="0.2402%" height="15" fill="rgb(237,63,43)" fg:x="646" fg:w="3"/><text x="51.9714%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.7214%" y="501" width="0.2402%" height="15" fill="rgb(214,1,44)" fg:x="646" fg:w="3"/><text x="51.9714%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="51.7214%" y="485" width="0.2402%" height="15" fill="rgb(212,2,46)" fg:x="646" fg:w="3"/><text x="51.9714%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="51.7214%" y="469" width="0.2402%" height="15" fill="rgb(213,142,5)" fg:x="646" fg:w="3"/><text x="51.9714%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="51.7214%" y="453" width="0.2402%" height="15" fill="rgb(229,135,1)" fg:x="646" fg:w="3"/><text x="51.9714%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="51.7214%" y="437" width="0.2402%" height="15" fill="rgb(252,98,38)" fg:x="646" fg:w="3"/><text x="51.9714%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="51.7214%" y="421" width="0.2402%" height="15" fill="rgb(206,89,40)" fg:x="646" fg:w="3"/><text x="51.9714%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="51.7214%" y="405" width="0.2402%" height="15" fill="rgb(219,73,36)" fg:x="646" fg:w="3"/><text x="51.9714%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="51.7214%" y="389" width="0.2402%" height="15" fill="rgb(207,168,32)" fg:x="646" fg:w="3"/><text x="51.9714%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="51.7214%" y="373" width="0.2402%" height="15" fill="rgb(215,113,21)" fg:x="646" fg:w="3"/><text x="51.9714%" y="383.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="51.7214%" y="357" width="0.2402%" height="15" fill="rgb(217,144,43)" fg:x="646" fg:w="3"/><text x="51.9714%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="51.7214%" y="341" width="0.2402%" height="15" fill="rgb(249,48,50)" fg:x="646" fg:w="3"/><text x="51.9714%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="51.9616%" y="501" width="0.2402%" height="15" fill="rgb(242,1,26)" fg:x="649" fg:w="3"/><text x="52.2116%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="51.9616%" y="485" width="0.2402%" height="15" fill="rgb(231,167,42)" fg:x="649" fg:w="3"/><text x="52.2116%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1217%" y="469" width="0.0801%" height="15" fill="rgb(242,177,45)" fg:x="651" fg:w="1"/><text x="52.3717%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="52.2018%" y="501" width="0.0801%" height="15" fill="rgb(232,121,42)" fg:x="652" fg:w="1"/><text x="52.4518%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2818%" y="405" width="0.0801%" height="15" fill="rgb(205,8,42)" fg:x="653" fg:w="1"/><text x="52.5318%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.5220%" y="373" width="0.0801%" height="15" fill="rgb(238,199,24)" fg:x="656" fg:w="1"/><text x="52.7720%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.5220%" y="357" width="0.0801%" height="15" fill="rgb(228,112,2)" fg:x="656" fg:w="1"/><text x="52.7720%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="52.5220%" y="341" width="0.0801%" height="15" fill="rgb(215,115,33)" fg:x="656" fg:w="1"/><text x="52.7720%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="52.5220%" y="325" width="0.0801%" height="15" fill="rgb(230,209,34)" fg:x="656" fg:w="1"/><text x="52.7720%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="52.5220%" y="309" width="0.0801%" height="15" fill="rgb(246,76,12)" fg:x="656" fg:w="1"/><text x="52.7720%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="52.5220%" y="293" width="0.0801%" height="15" fill="rgb(240,110,9)" fg:x="656" fg:w="1"/><text x="52.7720%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.5220%" y="277" width="0.0801%" height="15" fill="rgb(224,94,46)" fg:x="656" fg:w="1"/><text x="52.7720%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.6821%" y="293" width="0.1601%" height="15" fill="rgb(247,150,22)" fg:x="658" fg:w="2"/><text x="52.9321%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.6821%" y="277" width="0.1601%" height="15" fill="rgb(249,85,13)" fg:x="658" fg:w="2"/><text x="52.9321%" y="287.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="52.6821%" y="261" width="0.1601%" height="15" fill="rgb(208,77,41)" fg:x="658" fg:w="2"/><text x="52.9321%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="52.6821%" y="245" width="0.1601%" height="15" fill="rgb(240,42,44)" fg:x="658" fg:w="2"/><text x="52.9321%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="52.6821%" y="229" width="0.1601%" height="15" fill="rgb(222,10,51)" fg:x="658" fg:w="2"/><text x="52.9321%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="52.6821%" y="213" width="0.1601%" height="15" fill="rgb(208,146,53)" fg:x="658" fg:w="2"/><text x="52.9321%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="52.6821%" y="197" width="0.1601%" height="15" fill="rgb(236,162,23)" fg:x="658" fg:w="2"/><text x="52.9321%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="52.6821%" y="181" width="0.1601%" height="15" fill="rgb(218,66,21)" fg:x="658" fg:w="2"/><text x="52.9321%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="52.6821%" y="165" width="0.1601%" height="15" fill="rgb(233,6,47)" fg:x="658" fg:w="2"/><text x="52.9321%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="52.6821%" y="149" width="0.1601%" height="15" fill="rgb(236,59,51)" fg:x="658" fg:w="2"/><text x="52.9321%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="52.6821%" y="133" width="0.1601%" height="15" fill="rgb(242,12,46)" fg:x="658" fg:w="2"/><text x="52.9321%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="52.6821%" y="117" width="0.1601%" height="15" fill="rgb(243,142,19)" fg:x="658" fg:w="2"/><text x="52.9321%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="52.6821%" y="101" width="0.1601%" height="15" fill="rgb(217,28,17)" fg:x="658" fg:w="2"/><text x="52.9321%" y="111.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="52.6821%" y="85" width="0.1601%" height="15" fill="rgb(228,2,27)" fg:x="658" fg:w="2"/><text x="52.9321%" y="95.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="52.6821%" y="69" width="0.1601%" height="15" fill="rgb(214,221,4)" fg:x="658" fg:w="2"/><text x="52.9321%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (4 samples, 0.32%)</title><rect x="52.6021%" y="357" width="0.3203%" height="15" fill="rgb(224,69,26)" fg:x="657" fg:w="4"/><text x="52.8521%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="52.6021%" y="341" width="0.3203%" height="15" fill="rgb(219,70,4)" fg:x="657" fg:w="4"/><text x="52.8521%" y="351.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="52.6021%" y="325" width="0.3203%" height="15" fill="rgb(218,157,39)" fg:x="657" fg:w="4"/><text x="52.8521%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="52.6821%" y="309" width="0.2402%" height="15" fill="rgb(238,36,28)" fg:x="658" fg:w="3"/><text x="52.9321%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="52.8423%" y="293" width="0.0801%" height="15" fill="rgb(232,29,0)" fg:x="660" fg:w="1"/><text x="53.0923%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="52.8423%" y="277" width="0.0801%" height="15" fill="rgb(243,138,46)" fg:x="660" fg:w="1"/><text x="53.0923%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.8423%" y="261" width="0.0801%" height="15" fill="rgb(232,186,41)" fg:x="660" fg:w="1"/><text x="53.0923%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.8423%" y="245" width="0.0801%" height="15" fill="rgb(252,166,17)" fg:x="660" fg:w="1"/><text x="53.0923%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="52.8423%" y="229" width="0.0801%" height="15" fill="rgb(228,179,12)" fg:x="660" fg:w="1"/><text x="53.0923%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="52.8423%" y="213" width="0.0801%" height="15" fill="rgb(254,205,53)" fg:x="660" fg:w="1"/><text x="53.0923%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="52.8423%" y="197" width="0.0801%" height="15" fill="rgb(224,163,47)" fg:x="660" fg:w="1"/><text x="53.0923%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="52.8423%" y="181" width="0.0801%" height="15" fill="rgb(208,43,47)" fg:x="660" fg:w="1"/><text x="53.0923%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.8423%" y="165" width="0.0801%" height="15" fill="rgb(224,198,38)" fg:x="660" fg:w="1"/><text x="53.0923%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.8423%" y="149" width="0.0801%" height="15" fill="rgb(234,12,40)" fg:x="660" fg:w="1"/><text x="53.0923%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.8423%" y="133" width="0.0801%" height="15" fill="rgb(237,212,39)" fg:x="660" fg:w="1"/><text x="53.0923%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="52.8423%" y="117" width="0.0801%" height="15" fill="rgb(253,2,33)" fg:x="660" fg:w="1"/><text x="53.0923%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.8423%" y="101" width="0.0801%" height="15" fill="rgb(251,29,16)" fg:x="660" fg:w="1"/><text x="53.0923%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="52.8423%" y="85" width="0.0801%" height="15" fill="rgb(214,38,29)" fg:x="660" fg:w="1"/><text x="53.0923%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="52.8423%" y="69" width="0.0801%" height="15" fill="rgb(226,226,29)" fg:x="660" fg:w="1"/><text x="53.0923%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="52.8423%" y="53" width="0.0801%" height="15" fill="rgb(236,79,42)" fg:x="660" fg:w="1"/><text x="53.0923%" y="63.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="52.8423%" y="37" width="0.0801%" height="15" fill="rgb(222,12,36)" fg:x="660" fg:w="1"/><text x="53.0923%" y="47.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (13 samples, 1.04%)</title><rect x="51.9616%" y="517" width="1.0408%" height="15" fill="rgb(232,123,44)" fg:x="649" fg:w="13"/><text x="52.2116%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="52.2818%" y="501" width="0.7206%" height="15" fill="rgb(234,93,50)" fg:x="653" fg:w="9"/><text x="52.5318%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (9 samples, 0.72%)</title><rect x="52.2818%" y="485" width="0.7206%" height="15" fill="rgb(210,86,49)" fg:x="653" fg:w="9"/><text x="52.5318%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.72%)</title><rect x="52.2818%" y="469" width="0.7206%" height="15" fill="rgb(224,91,54)" fg:x="653" fg:w="9"/><text x="52.5318%" y="479.50"></text></g><g><title>core::fmt::write (9 samples, 0.72%)</title><rect x="52.2818%" y="453" width="0.7206%" height="15" fill="rgb(239,169,9)" fg:x="653" fg:w="9"/><text x="52.5318%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (9 samples, 0.72%)</title><rect x="52.2818%" y="437" width="0.7206%" height="15" fill="rgb(238,29,17)" fg:x="653" fg:w="9"/><text x="52.5318%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (9 samples, 0.72%)</title><rect x="52.2818%" y="421" width="0.7206%" height="15" fill="rgb(227,160,22)" fg:x="653" fg:w="9"/><text x="52.5318%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (8 samples, 0.64%)</title><rect x="52.3619%" y="405" width="0.6405%" height="15" fill="rgb(231,129,52)" fg:x="654" fg:w="8"/><text x="52.6119%" y="415.50"></text></g><g><title>core::fmt::write (7 samples, 0.56%)</title><rect x="52.4420%" y="389" width="0.5604%" height="15" fill="rgb(241,184,9)" fg:x="655" fg:w="7"/><text x="52.6920%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="52.6021%" y="373" width="0.4003%" height="15" fill="rgb(217,43,48)" fg:x="657" fg:w="5"/><text x="52.8521%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.9223%" y="357" width="0.0801%" height="15" fill="rgb(213,49,1)" fg:x="661" fg:w="1"/><text x="53.1723%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.9223%" y="341" width="0.0801%" height="15" fill="rgb(223,79,39)" fg:x="661" fg:w="1"/><text x="53.1723%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="52.9223%" y="325" width="0.0801%" height="15" fill="rgb(228,227,46)" fg:x="661" fg:w="1"/><text x="53.1723%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="52.9223%" y="309" width="0.0801%" height="15" fill="rgb(245,89,41)" fg:x="661" fg:w="1"/><text x="53.1723%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="52.9223%" y="293" width="0.0801%" height="15" fill="rgb(253,83,21)" fg:x="661" fg:w="1"/><text x="53.1723%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="52.9223%" y="277" width="0.0801%" height="15" fill="rgb(229,116,51)" fg:x="661" fg:w="1"/><text x="53.1723%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.9223%" y="261" width="0.0801%" height="15" fill="rgb(246,67,26)" fg:x="661" fg:w="1"/><text x="53.1723%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.9223%" y="245" width="0.0801%" height="15" fill="rgb(250,117,20)" fg:x="661" fg:w="1"/><text x="53.1723%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.9223%" y="229" width="0.0801%" height="15" fill="rgb(207,88,17)" fg:x="661" fg:w="1"/><text x="53.1723%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="52.9223%" y="213" width="0.0801%" height="15" fill="rgb(212,98,36)" fg:x="661" fg:w="1"/><text x="53.1723%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.9223%" y="197" width="0.0801%" height="15" fill="rgb(221,72,6)" fg:x="661" fg:w="1"/><text x="53.1723%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="52.9223%" y="181" width="0.0801%" height="15" fill="rgb(235,129,19)" fg:x="661" fg:w="1"/><text x="53.1723%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="52.9223%" y="165" width="0.0801%" height="15" fill="rgb(237,200,6)" fg:x="661" fg:w="1"/><text x="53.1723%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="52.9223%" y="149" width="0.0801%" height="15" fill="rgb(239,69,54)" fg:x="661" fg:w="1"/><text x="53.1723%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="52.9223%" y="133" width="0.0801%" height="15" fill="rgb(214,68,45)" fg:x="661" fg:w="1"/><text x="53.1723%" y="143.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.24%)</title><rect x="55.2442%" y="165" width="0.2402%" height="15" fill="rgb(254,160,8)" fg:x="690" fg:w="3"/><text x="55.4942%" y="175.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="55.3243%" y="149" width="0.1601%" height="15" fill="rgb(215,226,31)" fg:x="691" fg:w="2"/><text x="55.5743%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="55.2442%" y="181" width="0.5604%" height="15" fill="rgb(253,6,35)" fg:x="690" fg:w="7"/><text x="55.4942%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="55.4844%" y="165" width="0.3203%" height="15" fill="rgb(219,96,42)" fg:x="693" fg:w="4"/><text x="55.7344%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="55.4844%" y="149" width="0.3203%" height="15" fill="rgb(207,170,13)" fg:x="693" fg:w="4"/><text x="55.7344%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="55.6445%" y="133" width="0.1601%" height="15" fill="rgb(239,101,5)" fg:x="695" fg:w="2"/><text x="55.8945%" y="143.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (10 samples, 0.80%)</title><rect x="55.1641%" y="213" width="0.8006%" height="15" fill="rgb(228,183,34)" fg:x="689" fg:w="10"/><text x="55.4141%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="55.2442%" y="197" width="0.7206%" height="15" fill="rgb(205,28,31)" fg:x="690" fg:w="9"/><text x="55.4942%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="55.8046%" y="181" width="0.1601%" height="15" fill="rgb(214,118,50)" fg:x="697" fg:w="2"/><text x="56.0546%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.8046%" y="165" width="0.1601%" height="15" fill="rgb(213,108,51)" fg:x="697" fg:w="2"/><text x="56.0546%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="55.9648%" y="213" width="0.3203%" height="15" fill="rgb(238,56,37)" fg:x="699" fg:w="4"/><text x="56.2148%" y="223.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="56.0448%" y="197" width="0.2402%" height="15" fill="rgb(214,136,28)" fg:x="700" fg:w="3"/><text x="56.2948%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 1.60%)</title><rect x="54.9239%" y="229" width="1.6013%" height="15" fill="rgb(221,201,54)" fg:x="686" fg:w="20"/><text x="55.1739%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.2850%" y="213" width="0.2402%" height="15" fill="rgb(228,216,39)" fg:x="703" fg:w="3"/><text x="56.5350%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="56.2850%" y="197" width="0.2402%" height="15" fill="rgb(207,229,49)" fg:x="703" fg:w="3"/><text x="56.5350%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.4452%" y="181" width="0.0801%" height="15" fill="rgb(224,23,43)" fg:x="705" fg:w="1"/><text x="56.6952%" y="191.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (23 samples, 1.84%)</title><rect x="54.7638%" y="309" width="1.8415%" height="15" fill="rgb(247,97,18)" fg:x="684" fg:w="23"/><text x="55.0138%" y="319.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (22 samples, 1.76%)</title><rect x="54.8439%" y="293" width="1.7614%" height="15" fill="rgb(232,53,32)" fg:x="685" fg:w="22"/><text x="55.0939%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 1.76%)</title><rect x="54.8439%" y="277" width="1.7614%" height="15" fill="rgb(247,38,23)" fg:x="685" fg:w="22"/><text x="55.0939%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (21 samples, 1.68%)</title><rect x="54.9239%" y="261" width="1.6813%" height="15" fill="rgb(228,101,52)" fg:x="686" fg:w="21"/><text x="55.1739%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (21 samples, 1.68%)</title><rect x="54.9239%" y="245" width="1.6813%" height="15" fill="rgb(231,45,36)" fg:x="686" fg:w="21"/><text x="55.1739%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="56.5252%" y="229" width="0.0801%" height="15" fill="rgb(221,183,50)" fg:x="706" fg:w="1"/><text x="56.7752%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5252%" y="213" width="0.0801%" height="15" fill="rgb(251,132,12)" fg:x="706" fg:w="1"/><text x="56.7752%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="56.6053%" y="309" width="0.2402%" height="15" fill="rgb(252,50,16)" fg:x="707" fg:w="3"/><text x="56.8553%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="56.6853%" y="293" width="0.1601%" height="15" fill="rgb(224,60,15)" fg:x="708" fg:w="2"/><text x="56.9353%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 2.40%)</title><rect x="54.6037%" y="325" width="2.4019%" height="15" fill="rgb(254,2,34)" fg:x="682" fg:w="30"/><text x="54.8537%" y="335.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.8455%" y="309" width="0.1601%" height="15" fill="rgb(232,154,8)" fg:x="710" fg:w="2"/><text x="57.0955%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.9255%" y="293" width="0.0801%" height="15" fill="rgb(235,190,52)" fg:x="711" fg:w="1"/><text x="57.1755%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (34 samples, 2.72%)</title><rect x="54.6037%" y="341" width="2.7222%" height="15" fill="rgb(213,218,38)" fg:x="682" fg:w="34"/><text x="54.8537%" y="351.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="57.0056%" y="325" width="0.3203%" height="15" fill="rgb(237,50,37)" fg:x="712" fg:w="4"/><text x="57.2556%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2458%" y="309" width="0.0801%" height="15" fill="rgb(235,51,35)" fg:x="715" fg:w="1"/><text x="57.4958%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="57.3259%" y="277" width="0.2402%" height="15" fill="rgb(244,40,52)" fg:x="716" fg:w="3"/><text x="57.5759%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4860%" y="261" width="0.0801%" height="15" fill="rgb(217,225,45)" fg:x="718" fg:w="1"/><text x="57.7360%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4860%" y="245" width="0.0801%" height="15" fill="rgb(247,191,36)" fg:x="718" fg:w="1"/><text x="57.7360%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (39 samples, 3.12%)</title><rect x="54.5236%" y="357" width="3.1225%" height="15" fill="rgb(251,144,31)" fg:x="681" fg:w="39"/><text x="54.7736%" y="367.50">&lt;rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="57.3259%" y="341" width="0.3203%" height="15" fill="rgb(227,155,41)" fg:x="716" fg:w="4"/><text x="57.5759%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="57.3259%" y="325" width="0.3203%" height="15" fill="rgb(236,121,36)" fg:x="716" fg:w="4"/><text x="57.5759%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="57.3259%" y="309" width="0.3203%" height="15" fill="rgb(221,128,28)" fg:x="716" fg:w="4"/><text x="57.5759%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="57.3259%" y="293" width="0.3203%" height="15" fill="rgb(249,67,50)" fg:x="716" fg:w="4"/><text x="57.5759%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="57.5661%" y="277" width="0.0801%" height="15" fill="rgb(241,126,38)" fg:x="719" fg:w="1"/><text x="57.8161%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5661%" y="261" width="0.0801%" height="15" fill="rgb(239,33,14)" fg:x="719" fg:w="1"/><text x="57.8161%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="57.6461%" y="357" width="0.1601%" height="15" fill="rgb(207,221,54)" fg:x="720" fg:w="2"/><text x="57.8961%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.6461%" y="341" width="0.1601%" height="15" fill="rgb(242,138,43)" fg:x="720" fg:w="2"/><text x="57.8961%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 3.60%)</title><rect x="54.3635%" y="373" width="3.6029%" height="15" fill="rgb(231,118,19)" fg:x="679" fg:w="45"/><text x="54.6135%" y="383.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.8062%" y="357" width="0.1601%" height="15" fill="rgb(214,128,54)" fg:x="722" fg:w="2"/><text x="58.0562%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8863%" y="341" width="0.0801%" height="15" fill="rgb(236,136,6)" fg:x="723" fg:w="1"/><text x="58.1363%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (49 samples, 3.92%)</title><rect x="54.2034%" y="405" width="3.9231%" height="15" fill="rgb(247,30,38)" fg:x="677" fg:w="49"/><text x="54.4534%" y="415.50">&lt;rpc..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (47 samples, 3.76%)</title><rect x="54.3635%" y="389" width="3.7630%" height="15" fill="rgb(249,189,40)" fg:x="679" fg:w="47"/><text x="54.6135%" y="399.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="57.9664%" y="373" width="0.1601%" height="15" fill="rgb(247,179,7)" fg:x="724" fg:w="2"/><text x="58.2164%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.9664%" y="357" width="0.1601%" height="15" fill="rgb(239,46,52)" fg:x="724" fg:w="2"/><text x="58.2164%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.1265%" y="405" width="0.0801%" height="15" fill="rgb(225,28,52)" fg:x="726" fg:w="1"/><text x="58.3765%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="58.2066%" y="389" width="0.2402%" height="15" fill="rgb(217,208,44)" fg:x="727" fg:w="3"/><text x="58.4566%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (59 samples, 4.72%)</title><rect x="53.8831%" y="421" width="4.7238%" height="15" fill="rgb(224,11,34)" fg:x="673" fg:w="59"/><text x="54.1331%" y="431.50">&lt;core:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="58.2066%" y="405" width="0.4003%" height="15" fill="rgb(205,134,17)" fg:x="727" fg:w="5"/><text x="58.4566%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.4468%" y="389" width="0.1601%" height="15" fill="rgb(237,125,9)" fg:x="730" fg:w="2"/><text x="58.6968%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (64 samples, 5.12%)</title><rect x="53.7230%" y="453" width="5.1241%" height="15" fill="rgb(208,139,47)" fg:x="671" fg:w="64"/><text x="53.9730%" y="463.50">&lt;rpc_p..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (63 samples, 5.04%)</title><rect x="53.8030%" y="437" width="5.0440%" height="15" fill="rgb(242,5,5)" fg:x="672" fg:w="63"/><text x="54.0530%" y="447.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="58.6069%" y="421" width="0.2402%" height="15" fill="rgb(218,78,2)" fg:x="732" fg:w="3"/><text x="58.8569%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="58.6069%" y="405" width="0.2402%" height="15" fill="rgb(217,75,16)" fg:x="732" fg:w="3"/><text x="58.8569%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="58.9271%" y="437" width="0.3203%" height="15" fill="rgb(212,56,17)" fg:x="736" fg:w="4"/><text x="59.1771%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (76 samples, 6.08%)</title><rect x="53.3227%" y="469" width="6.0849%" height="15" fill="rgb(228,61,29)" fg:x="666" fg:w="76"/><text x="53.5727%" y="479.50">&lt;core::i..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="58.8471%" y="453" width="0.5604%" height="15" fill="rgb(247,202,38)" fg:x="735" fg:w="7"/><text x="59.0971%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.2474%" y="437" width="0.1601%" height="15" fill="rgb(211,216,43)" fg:x="740" fg:w="2"/><text x="59.4974%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (80 samples, 6.41%)</title><rect x="53.1625%" y="501" width="6.4051%" height="15" fill="rgb(220,7,49)" fg:x="664" fg:w="80"/><text x="53.4125%" y="511.50">&lt;rpc_pro..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (78 samples, 6.24%)</title><rect x="53.3227%" y="485" width="6.2450%" height="15" fill="rgb(219,158,7)" fg:x="666" fg:w="78"/><text x="53.5727%" y="495.50">&lt;std::co..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="59.4075%" y="469" width="0.1601%" height="15" fill="rgb(206,127,9)" fg:x="742" fg:w="2"/><text x="59.6575%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4876%" y="453" width="0.0801%" height="15" fill="rgb(206,103,43)" fg:x="743" fg:w="1"/><text x="59.7376%" y="463.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="59.8879%" y="453" width="0.3203%" height="15" fill="rgb(240,108,41)" fg:x="748" fg:w="4"/><text x="60.1379%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="60.2082%" y="453" width="0.3203%" height="15" fill="rgb(252,212,6)" fg:x="752" fg:w="4"/><text x="60.4582%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4484%" y="437" width="0.0801%" height="15" fill="rgb(248,105,31)" fg:x="755" fg:w="1"/><text x="60.6984%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="60.5284%" y="453" width="0.0801%" height="15" fill="rgb(241,123,4)" fg:x="756" fg:w="1"/><text x="60.7784%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="60.5284%" y="437" width="0.0801%" height="15" fill="rgb(223,74,37)" fg:x="756" fg:w="1"/><text x="60.7784%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="60.6886%" y="437" width="0.1601%" height="15" fill="rgb(251,219,28)" fg:x="758" fg:w="2"/><text x="60.9386%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (4 samples, 0.32%)</title><rect x="60.6085%" y="453" width="0.3203%" height="15" fill="rgb(218,36,31)" fg:x="757" fg:w="4"/><text x="60.8585%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="60.8487%" y="437" width="0.0801%" height="15" fill="rgb(229,40,15)" fg:x="760" fg:w="1"/><text x="61.0987%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.1689%" y="421" width="0.1601%" height="15" fill="rgb(208,138,37)" fg:x="764" fg:w="2"/><text x="61.4189%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (8 samples, 0.64%)</title><rect x="60.9287%" y="453" width="0.6405%" height="15" fill="rgb(208,40,52)" fg:x="761" fg:w="8"/><text x="61.1787%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="61.0889%" y="437" width="0.4804%" height="15" fill="rgb(246,181,48)" fg:x="763" fg:w="6"/><text x="61.3389%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="61.3291%" y="421" width="0.2402%" height="15" fill="rgb(253,178,36)" fg:x="766" fg:w="3"/><text x="61.5791%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="61.7294%" y="437" width="0.0801%" height="15" fill="rgb(210,170,6)" fg:x="771" fg:w="1"/><text x="61.9794%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="61.8895%" y="421" width="0.1601%" height="15" fill="rgb(243,62,22)" fg:x="773" fg:w="2"/><text x="62.1395%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1297%" y="405" width="0.0801%" height="15" fill="rgb(213,145,26)" fg:x="776" fg:w="1"/><text x="62.3797%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="62.2098%" y="405" width="0.2402%" height="15" fill="rgb(237,177,23)" fg:x="777" fg:w="3"/><text x="62.4598%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="62.2098%" y="389" width="0.2402%" height="15" fill="rgb(252,5,24)" fg:x="777" fg:w="3"/><text x="62.4598%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="62.2098%" y="373" width="0.2402%" height="15" fill="rgb(230,108,54)" fg:x="777" fg:w="3"/><text x="62.4598%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="62.3699%" y="357" width="0.0801%" height="15" fill="rgb(252,192,41)" fg:x="779" fg:w="1"/><text x="62.6199%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="62.6101%" y="389" width="0.0801%" height="15" fill="rgb(218,125,20)" fg:x="782" fg:w="1"/><text x="62.8601%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.6902%" y="373" width="0.1601%" height="15" fill="rgb(230,223,15)" fg:x="783" fg:w="2"/><text x="62.9402%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.7702%" y="357" width="0.0801%" height="15" fill="rgb(239,99,47)" fg:x="784" fg:w="1"/><text x="63.0202%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7702%" y="341" width="0.0801%" height="15" fill="rgb(222,214,23)" fg:x="784" fg:w="1"/><text x="63.0202%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="63.1705%" y="309" width="0.2402%" height="15" fill="rgb(250,98,43)" fg:x="789" fg:w="3"/><text x="63.4205%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3307%" y="293" width="0.0801%" height="15" fill="rgb(226,140,11)" fg:x="791" fg:w="1"/><text x="63.5807%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="63.3307%" y="277" width="0.0801%" height="15" fill="rgb(239,2,22)" fg:x="791" fg:w="1"/><text x="63.5807%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="63.4107%" y="293" width="0.0801%" height="15" fill="rgb(209,106,26)" fg:x="792" fg:w="1"/><text x="63.6607%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4107%" y="277" width="0.0801%" height="15" fill="rgb(209,135,11)" fg:x="792" fg:w="1"/><text x="63.6607%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4107%" y="261" width="0.0801%" height="15" fill="rgb(241,58,6)" fg:x="792" fg:w="1"/><text x="63.6607%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4107%" y="245" width="0.0801%" height="15" fill="rgb(214,78,1)" fg:x="792" fg:w="1"/><text x="63.6607%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="62.9303%" y="357" width="0.8006%" height="15" fill="rgb(229,135,33)" fg:x="786" fg:w="10"/><text x="63.1803%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="63.0905%" y="341" width="0.6405%" height="15" fill="rgb(245,87,50)" fg:x="788" fg:w="8"/><text x="63.3405%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="63.1705%" y="325" width="0.5604%" height="15" fill="rgb(222,222,8)" fg:x="789" fg:w="7"/><text x="63.4205%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="63.4107%" y="309" width="0.3203%" height="15" fill="rgb(214,97,50)" fg:x="792" fg:w="4"/><text x="63.6607%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="63.4908%" y="293" width="0.2402%" height="15" fill="rgb(244,161,51)" fg:x="793" fg:w="3"/><text x="63.7408%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.7310%" y="357" width="0.1601%" height="15" fill="rgb(225,17,4)" fg:x="796" fg:w="2"/><text x="63.9810%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.00%)</title><rect x="62.0496%" y="421" width="2.0016%" height="15" fill="rgb(238,10,13)" fg:x="775" fg:w="25"/><text x="62.2996%" y="431.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.60%)</title><rect x="62.4500%" y="405" width="1.6013%" height="15" fill="rgb(239,169,14)" fg:x="780" fg:w="20"/><text x="62.7000%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="62.6902%" y="389" width="1.3611%" height="15" fill="rgb(213,105,25)" fg:x="783" fg:w="17"/><text x="62.9402%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="62.8503%" y="373" width="1.2010%" height="15" fill="rgb(233,4,17)" fg:x="785" fg:w="15"/><text x="63.1003%" y="383.50"></text></g><g><title>__rdl_alloc (2 samples, 0.16%)</title><rect x="63.8911%" y="357" width="0.1601%" height="15" fill="rgb(212,5,35)" fg:x="798" fg:w="2"/><text x="64.1411%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.16%)</title><rect x="63.8911%" y="341" width="0.1601%" height="15" fill="rgb(216,3,14)" fg:x="798" fg:w="2"/><text x="64.1411%" y="351.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (143 samples, 11.45%)</title><rect x="53.0024%" y="517" width="11.4492%" height="15" fill="rgb(240,105,33)" fg:x="662" fg:w="143"/><text x="53.2524%" y="527.50">&lt;rpc_proto::Json ..</text></g><g><title>kernel::model::EntityPtr::to_json_value (61 samples, 4.88%)</title><rect x="59.5677%" y="501" width="4.8839%" height="15" fill="rgb(216,73,0)" fg:x="744" fg:w="61"/><text x="59.8177%" y="511.50">kernel..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (61 samples, 4.88%)</title><rect x="59.5677%" y="485" width="4.8839%" height="15" fill="rgb(217,153,48)" fg:x="744" fg:w="61"/><text x="59.8177%" y="495.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (60 samples, 4.80%)</title><rect x="59.6477%" y="469" width="4.8038%" height="15" fill="rgb(218,180,8)" fg:x="745" fg:w="60"/><text x="59.8977%" y="479.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.88%)</title><rect x="61.5693%" y="453" width="2.8823%" height="15" fill="rgb(252,168,2)" fg:x="769" fg:w="36"/><text x="61.8193%" y="463.50">se..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 2.64%)</title><rect x="61.8094%" y="437" width="2.6421%" height="15" fill="rgb(224,116,33)" fg:x="772" fg:w="33"/><text x="62.0594%" y="447.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="64.0512%" y="421" width="0.4003%" height="15" fill="rgb(229,205,17)" fg:x="800" fg:w="5"/><text x="64.3012%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="64.2114%" y="405" width="0.2402%" height="15" fill="rgb(234,1,41)" fg:x="802" fg:w="3"/><text x="64.4614%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (265 samples, 21.22%)</title><rect x="43.3147%" y="581" width="21.2170%" height="15" fill="rgb(244,185,8)" fg:x="541" fg:w="265"/><text x="43.5647%" y="591.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (165 samples, 13.21%)</title><rect x="51.3211%" y="565" width="13.2106%" height="15" fill="rgb(248,51,21)" fg:x="641" fg:w="165"/><text x="51.5711%" y="575.50">alloc::vec::in_place..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (164 samples, 13.13%)</title><rect x="51.4011%" y="549" width="13.1305%" height="15" fill="rgb(248,157,31)" fg:x="642" fg:w="164"/><text x="51.6511%" y="559.50">&lt;core::iter::adapter..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (161 samples, 12.89%)</title><rect x="51.6413%" y="533" width="12.8903%" height="15" fill="rgb(210,34,47)" fg:x="645" fg:w="161"/><text x="51.8913%" y="543.50">plugins_rpc::sessio..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="64.4516%" y="517" width="0.0801%" height="15" fill="rgb(227,139,53)" fg:x="805" fg:w="1"/><text x="64.7016%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="64.4516%" y="501" width="0.0801%" height="15" fill="rgb(232,211,37)" fg:x="805" fg:w="1"/><text x="64.7016%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.4516%" y="485" width="0.0801%" height="15" fill="rgb(236,133,10)" fg:x="805" fg:w="1"/><text x="64.7016%" y="495.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (276 samples, 22.10%)</title><rect x="42.5941%" y="597" width="22.0977%" height="15" fill="rgb(243,202,25)" fg:x="532" fg:w="276"/><text x="42.8441%" y="607.50">&lt;plugins_rpc::sessions::SessionServ..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.5316%" y="581" width="0.1601%" height="15" fill="rgb(224,59,9)" fg:x="806" fg:w="2"/><text x="64.7816%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.6117%" y="565" width="0.0801%" height="15" fill="rgb(206,146,16)" fg:x="807" fg:w="1"/><text x="64.8617%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.6117%" y="549" width="0.0801%" height="15" fill="rgb(220,47,2)" fg:x="807" fg:w="1"/><text x="64.8617%" y="559.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="64.6918%" y="597" width="0.0801%" height="15" fill="rgb(225,124,51)" fg:x="808" fg:w="1"/><text x="64.9418%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="64.6918%" y="581" width="0.0801%" height="15" fill="rgb(241,220,50)" fg:x="808" fg:w="1"/><text x="64.9418%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="64.6918%" y="565" width="0.0801%" height="15" fill="rgb(232,168,5)" fg:x="808" fg:w="1"/><text x="64.9418%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.6918%" y="549" width="0.0801%" height="15" fill="rgb(243,90,22)" fg:x="808" fg:w="1"/><text x="64.9418%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="64.6918%" y="533" width="0.0801%" height="15" fill="rgb(223,153,32)" fg:x="808" fg:w="1"/><text x="64.9418%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.6918%" y="517" width="0.0801%" height="15" fill="rgb(243,124,20)" fg:x="808" fg:w="1"/><text x="64.9418%" y="527.50"></text></g><g><title>plugins_rpc::querying::have_surroundings (279 samples, 22.34%)</title><rect x="42.5941%" y="613" width="22.3379%" height="15" fill="rgb(246,168,39)" fg:x="532" fg:w="279"/><text x="42.8441%" y="623.50">plugins_rpc::querying::have_surroun..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="64.7718%" y="597" width="0.1601%" height="15" fill="rgb(222,165,54)" fg:x="809" fg:w="2"/><text x="65.0218%" y="607.50"></text></g><g><title>&lt;rpc_proto::EntityKey as core::convert::From&lt;kernel::model::base::EntityKey&gt;&gt;::from (2 samples, 0.16%)</title><rect x="64.7718%" y="581" width="0.1601%" height="15" fill="rgb(251,142,27)" fg:x="809" fg:w="2"/><text x="65.0218%" y="591.50"></text></g><g><title>kernel::model::base::&lt;impl core::convert::From&lt;kernel::model::base::EntityKey&gt; for alloc::string::String&gt;::from (2 samples, 0.16%)</title><rect x="64.7718%" y="565" width="0.1601%" height="15" fill="rgb(207,168,50)" fg:x="809" fg:w="2"/><text x="65.0218%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="64.7718%" y="549" width="0.1601%" height="15" fill="rgb(250,139,25)" fg:x="809" fg:w="2"/><text x="65.0218%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.8519%" y="533" width="0.0801%" height="15" fill="rgb(214,194,48)" fg:x="810" fg:w="1"/><text x="65.1019%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="64.8519%" y="517" width="0.0801%" height="15" fill="rgb(227,138,47)" fg:x="810" fg:w="1"/><text x="65.1019%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.8519%" y="501" width="0.0801%" height="15" fill="rgb(250,162,5)" fg:x="810" fg:w="1"/><text x="65.1019%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (477 samples, 38.19%)</title><rect x="26.8215%" y="661" width="38.1906%" height="15" fill="rgb(229,74,25)" fg:x="335" fg:w="477"/><text x="27.0715%" y="671.50">&lt;engine::session::Session as kernel::actions::Performer&gt;::perf..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (317 samples, 25.38%)</title><rect x="39.6317%" y="645" width="25.3803%" height="15" fill="rgb(221,124,34)" fg:x="495" fg:w="317"/><text x="39.8817%" y="655.50">kernel::plugins::SessionPlugins::have_sur..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (317 samples, 25.38%)</title><rect x="39.6317%" y="629" width="25.3803%" height="15" fill="rgb(225,94,25)" fg:x="495" fg:w="317"/><text x="39.8817%" y="639.50">&lt;plugins_dynlib::DynamicPlugin as kernel:..</text></g><g><title>plugins_rpc::sessions::SessionServices::new_for_my_session (1 samples, 0.08%)</title><rect x="64.9319%" y="613" width="0.0801%" height="15" fill="rgb(210,100,12)" fg:x="811" fg:w="1"/><text x="65.1819%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="65.0120%" y="597" width="0.0801%" height="15" fill="rgb(206,62,48)" fg:x="812" fg:w="1"/><text x="65.2620%" y="607.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="65.0120%" y="581" width="0.0801%" height="15" fill="rgb(222,181,9)" fg:x="812" fg:w="1"/><text x="65.2620%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="65.0120%" y="629" width="0.1601%" height="15" fill="rgb(248,42,38)" fg:x="812" fg:w="2"/><text x="65.2620%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="65.0120%" y="613" width="0.1601%" height="15" fill="rgb(213,40,6)" fg:x="812" fg:w="2"/><text x="65.2620%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="65.0921%" y="597" width="0.0801%" height="15" fill="rgb(211,108,15)" fg:x="813" fg:w="1"/><text x="65.3421%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="65.0921%" y="581" width="0.0801%" height="15" fill="rgb(249,62,9)" fg:x="813" fg:w="1"/><text x="65.3421%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.0921%" y="565" width="0.0801%" height="15" fill="rgb(233,26,54)" fg:x="813" fg:w="1"/><text x="65.3421%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.0921%" y="549" width="0.0801%" height="15" fill="rgb(210,175,26)" fg:x="813" fg:w="1"/><text x="65.3421%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.0921%" y="533" width="0.0801%" height="15" fill="rgb(210,43,33)" fg:x="813" fg:w="1"/><text x="65.3421%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.0921%" y="517" width="0.0801%" height="15" fill="rgb(224,46,17)" fg:x="813" fg:w="1"/><text x="65.3421%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.0921%" y="501" width="0.0801%" height="15" fill="rgb(254,24,38)" fg:x="813" fg:w="1"/><text x="65.3421%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.0921%" y="485" width="0.0801%" height="15" fill="rgb(248,32,0)" fg:x="813" fg:w="1"/><text x="65.3421%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.0921%" y="469" width="0.0801%" height="15" fill="rgb(224,37,41)" fg:x="813" fg:w="1"/><text x="65.3421%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.0921%" y="453" width="0.0801%" height="15" fill="rgb(252,70,22)" fg:x="813" fg:w="1"/><text x="65.3421%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.0921%" y="437" width="0.0801%" height="15" fill="rgb(241,123,50)" fg:x="813" fg:w="1"/><text x="65.3421%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.0921%" y="421" width="0.0801%" height="15" fill="rgb(246,138,33)" fg:x="813" fg:w="1"/><text x="65.3421%" y="431.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="65.1721%" y="613" width="0.1601%" height="15" fill="rgb(218,39,32)" fg:x="814" fg:w="2"/><text x="65.4221%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.1721%" y="597" width="0.1601%" height="15" fill="rgb(241,229,10)" fg:x="814" fg:w="2"/><text x="65.4221%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.1721%" y="581" width="0.1601%" height="15" fill="rgb(212,160,10)" fg:x="814" fg:w="2"/><text x="65.4221%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.1721%" y="565" width="0.1601%" height="15" fill="rgb(227,48,51)" fg:x="814" fg:w="2"/><text x="65.4221%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.1721%" y="549" width="0.1601%" height="15" fill="rgb(238,159,21)" fg:x="814" fg:w="2"/><text x="65.4221%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.1721%" y="533" width="0.1601%" height="15" fill="rgb(216,1,10)" fg:x="814" fg:w="2"/><text x="65.4221%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.2522%" y="517" width="0.0801%" height="15" fill="rgb(209,228,25)" fg:x="815" fg:w="1"/><text x="65.5022%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.2522%" y="501" width="0.0801%" height="15" fill="rgb(234,160,10)" fg:x="815" fg:w="1"/><text x="65.5022%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.3323%" y="581" width="0.0801%" height="15" fill="rgb(212,66,25)" fg:x="816" fg:w="1"/><text x="65.5823%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="65.0120%" y="645" width="0.5604%" height="15" fill="rgb(254,121,18)" fg:x="812" fg:w="7"/><text x="65.2620%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="65.1721%" y="629" width="0.4003%" height="15" fill="rgb(219,127,1)" fg:x="814" fg:w="5"/><text x="65.4221%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="65.3323%" y="613" width="0.2402%" height="15" fill="rgb(219,224,42)" fg:x="816" fg:w="3"/><text x="65.5823%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.3323%" y="597" width="0.2402%" height="15" fill="rgb(253,130,22)" fg:x="816" fg:w="3"/><text x="65.5823%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="65.4123%" y="581" width="0.1601%" height="15" fill="rgb(253,39,28)" fg:x="817" fg:w="2"/><text x="65.6623%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.4123%" y="565" width="0.1601%" height="15" fill="rgb(231,126,37)" fg:x="817" fg:w="2"/><text x="65.6623%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.4123%" y="549" width="0.1601%" height="15" fill="rgb(251,145,14)" fg:x="817" fg:w="2"/><text x="65.6623%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.4924%" y="533" width="0.0801%" height="15" fill="rgb(229,164,30)" fg:x="818" fg:w="1"/><text x="65.7424%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.4924%" y="517" width="0.0801%" height="15" fill="rgb(233,227,54)" fg:x="818" fg:w="1"/><text x="65.7424%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.4924%" y="501" width="0.0801%" height="15" fill="rgb(240,94,22)" fg:x="818" fg:w="1"/><text x="65.7424%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.4924%" y="485" width="0.0801%" height="15" fill="rgb(217,56,16)" fg:x="818" fg:w="1"/><text x="65.7424%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="65.4924%" y="469" width="0.0801%" height="15" fill="rgb(229,133,38)" fg:x="818" fg:w="1"/><text x="65.7424%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.64%)</title><rect x="65.0120%" y="661" width="0.6405%" height="15" fill="rgb(225,139,35)" fg:x="812" fg:w="8"/><text x="65.2620%" y="671.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="65.5725%" y="645" width="0.0801%" height="15" fill="rgb(223,100,16)" fg:x="819" fg:w="1"/><text x="65.8225%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.5725%" y="629" width="0.0801%" height="15" fill="rgb(207,43,50)" fg:x="819" fg:w="1"/><text x="65.8225%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.5725%" y="613" width="0.0801%" height="15" fill="rgb(237,221,9)" fg:x="819" fg:w="1"/><text x="65.8225%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="65.6525%" y="581" width="0.1601%" height="15" fill="rgb(236,134,24)" fg:x="820" fg:w="2"/><text x="65.9025%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="65.7326%" y="565" width="0.0801%" height="15" fill="rgb(222,173,4)" fg:x="821" fg:w="1"/><text x="65.9826%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.7326%" y="549" width="0.0801%" height="15" fill="rgb(234,144,52)" fg:x="821" fg:w="1"/><text x="65.9826%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.7326%" y="533" width="0.0801%" height="15" fill="rgb(223,41,7)" fg:x="821" fg:w="1"/><text x="65.9826%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7326%" y="517" width="0.0801%" height="15" fill="rgb(226,143,9)" fg:x="821" fg:w="1"/><text x="65.9826%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.7326%" y="501" width="0.0801%" height="15" fill="rgb(234,43,37)" fg:x="821" fg:w="1"/><text x="65.9826%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7326%" y="485" width="0.0801%" height="15" fill="rgb(224,188,11)" fg:x="821" fg:w="1"/><text x="65.9826%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.7326%" y="469" width="0.0801%" height="15" fill="rgb(233,113,28)" fg:x="821" fg:w="1"/><text x="65.9826%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7326%" y="453" width="0.0801%" height="15" fill="rgb(215,16,1)" fg:x="821" fg:w="1"/><text x="65.9826%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.7326%" y="437" width="0.0801%" height="15" fill="rgb(238,74,38)" fg:x="821" fg:w="1"/><text x="65.9826%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7326%" y="421" width="0.0801%" height="15" fill="rgb(221,66,35)" fg:x="821" fg:w="1"/><text x="65.9826%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.7326%" y="405" width="0.0801%" height="15" fill="rgb(251,225,2)" fg:x="821" fg:w="1"/><text x="65.9826%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7326%" y="389" width="0.0801%" height="15" fill="rgb(240,169,18)" fg:x="821" fg:w="1"/><text x="65.9826%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="65.7326%" y="373" width="0.0801%" height="15" fill="rgb(243,130,50)" fg:x="821" fg:w="1"/><text x="65.9826%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="65.7326%" y="357" width="0.0801%" height="15" fill="rgb(228,75,13)" fg:x="821" fg:w="1"/><text x="65.9826%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="65.6525%" y="613" width="0.2402%" height="15" fill="rgb(252,95,35)" fg:x="820" fg:w="3"/><text x="65.9025%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="65.6525%" y="597" width="0.2402%" height="15" fill="rgb(222,180,54)" fg:x="820" fg:w="3"/><text x="65.9025%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="65.8127%" y="581" width="0.0801%" height="15" fill="rgb(250,110,34)" fg:x="822" fg:w="1"/><text x="66.0627%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="65.8127%" y="565" width="0.0801%" height="15" fill="rgb(208,100,21)" fg:x="822" fg:w="1"/><text x="66.0627%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.8127%" y="549" width="0.0801%" height="15" fill="rgb(209,123,47)" fg:x="822" fg:w="1"/><text x="66.0627%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8127%" y="533" width="0.0801%" height="15" fill="rgb(237,147,9)" fg:x="822" fg:w="1"/><text x="66.0627%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8127%" y="517" width="0.0801%" height="15" fill="rgb(228,206,23)" fg:x="822" fg:w="1"/><text x="66.0627%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8127%" y="501" width="0.0801%" height="15" fill="rgb(217,174,46)" fg:x="822" fg:w="1"/><text x="66.0627%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8127%" y="485" width="0.0801%" height="15" fill="rgb(231,126,21)" fg:x="822" fg:w="1"/><text x="66.0627%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.8127%" y="469" width="0.0801%" height="15" fill="rgb(245,26,1)" fg:x="822" fg:w="1"/><text x="66.0627%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8127%" y="453" width="0.0801%" height="15" fill="rgb(224,138,39)" fg:x="822" fg:w="1"/><text x="66.0627%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8127%" y="437" width="0.0801%" height="15" fill="rgb(208,97,3)" fg:x="822" fg:w="1"/><text x="66.0627%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8127%" y="421" width="0.0801%" height="15" fill="rgb(222,77,29)" fg:x="822" fg:w="1"/><text x="66.0627%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8127%" y="405" width="0.0801%" height="15" fill="rgb(243,188,36)" fg:x="822" fg:w="1"/><text x="66.0627%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8127%" y="389" width="0.0801%" height="15" fill="rgb(218,214,3)" fg:x="822" fg:w="1"/><text x="66.0627%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9728%" y="517" width="0.0801%" height="15" fill="rgb(211,183,45)" fg:x="824" fg:w="1"/><text x="66.2228%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.0528%" y="485" width="0.0801%" height="15" fill="rgb(230,218,25)" fg:x="825" fg:w="1"/><text x="66.3028%" y="495.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="65.9728%" y="597" width="0.2402%" height="15" fill="rgb(233,86,6)" fg:x="824" fg:w="3"/><text x="66.2228%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="65.9728%" y="581" width="0.2402%" height="15" fill="rgb(220,59,24)" fg:x="824" fg:w="3"/><text x="66.2228%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.9728%" y="565" width="0.2402%" height="15" fill="rgb(227,60,1)" fg:x="824" fg:w="3"/><text x="66.2228%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="65.9728%" y="549" width="0.2402%" height="15" fill="rgb(216,212,54)" fg:x="824" fg:w="3"/><text x="66.2228%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="65.9728%" y="533" width="0.2402%" height="15" fill="rgb(227,81,54)" fg:x="824" fg:w="3"/><text x="66.2228%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.0528%" y="517" width="0.1601%" height="15" fill="rgb(206,204,43)" fg:x="825" fg:w="2"/><text x="66.3028%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.0528%" y="501" width="0.1601%" height="15" fill="rgb(219,29,26)" fg:x="825" fg:w="2"/><text x="66.3028%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.1329%" y="485" width="0.0801%" height="15" fill="rgb(252,40,36)" fg:x="826" fg:w="1"/><text x="66.3829%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.1329%" y="469" width="0.0801%" height="15" fill="rgb(224,205,39)" fg:x="826" fg:w="1"/><text x="66.3829%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.1329%" y="453" width="0.0801%" height="15" fill="rgb(222,13,21)" fg:x="826" fg:w="1"/><text x="66.3829%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.1329%" y="437" width="0.0801%" height="15" fill="rgb(243,139,6)" fg:x="826" fg:w="1"/><text x="66.3829%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.1329%" y="421" width="0.0801%" height="15" fill="rgb(237,101,11)" fg:x="826" fg:w="1"/><text x="66.3829%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.1329%" y="405" width="0.0801%" height="15" fill="rgb(254,49,28)" fg:x="826" fg:w="1"/><text x="66.3829%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.1329%" y="389" width="0.0801%" height="15" fill="rgb(223,41,21)" fg:x="826" fg:w="1"/><text x="66.3829%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="65.6525%" y="629" width="0.6405%" height="15" fill="rgb(225,103,29)" fg:x="820" fg:w="8"/><text x="65.9025%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="65.8927%" y="613" width="0.4003%" height="15" fill="rgb(244,82,43)" fg:x="823" fg:w="5"/><text x="66.1427%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.2130%" y="597" width="0.0801%" height="15" fill="rgb(217,39,3)" fg:x="827" fg:w="1"/><text x="66.4630%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.2130%" y="581" width="0.0801%" height="15" fill="rgb(239,128,25)" fg:x="827" fg:w="1"/><text x="66.4630%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.2130%" y="565" width="0.0801%" height="15" fill="rgb(210,192,37)" fg:x="827" fg:w="1"/><text x="66.4630%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="65.6525%" y="645" width="0.7206%" height="15" fill="rgb(219,98,18)" fg:x="820" fg:w="9"/><text x="65.9025%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.2930%" y="629" width="0.0801%" height="15" fill="rgb(224,228,38)" fg:x="828" fg:w="1"/><text x="66.5430%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3731%" y="517" width="0.0801%" height="15" fill="rgb(241,129,43)" fg:x="829" fg:w="1"/><text x="66.6231%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (11 samples, 0.88%)</title><rect x="65.6525%" y="661" width="0.8807%" height="15" fill="rgb(223,8,51)" fg:x="820" fg:w="11"/><text x="65.9025%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="66.3731%" y="645" width="0.1601%" height="15" fill="rgb(233,76,24)" fg:x="829" fg:w="2"/><text x="66.6231%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="66.3731%" y="629" width="0.1601%" height="15" fill="rgb(219,115,10)" fg:x="829" fg:w="2"/><text x="66.6231%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="66.3731%" y="613" width="0.1601%" height="15" fill="rgb(222,137,12)" fg:x="829" fg:w="2"/><text x="66.6231%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.3731%" y="597" width="0.1601%" height="15" fill="rgb(216,192,16)" fg:x="829" fg:w="2"/><text x="66.6231%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.3731%" y="581" width="0.1601%" height="15" fill="rgb(247,6,27)" fg:x="829" fg:w="2"/><text x="66.6231%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="66.3731%" y="565" width="0.1601%" height="15" fill="rgb(254,39,44)" fg:x="829" fg:w="2"/><text x="66.6231%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.3731%" y="549" width="0.1601%" height="15" fill="rgb(251,116,35)" fg:x="829" fg:w="2"/><text x="66.6231%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.3731%" y="533" width="0.1601%" height="15" fill="rgb(208,61,44)" fg:x="829" fg:w="2"/><text x="66.6231%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.4532%" y="517" width="0.0801%" height="15" fill="rgb(250,34,5)" fg:x="830" fg:w="1"/><text x="66.7032%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="66.4532%" y="501" width="0.0801%" height="15" fill="rgb(241,40,15)" fg:x="830" fg:w="1"/><text x="66.7032%" y="511.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="66.5332%" y="661" width="0.0801%" height="15" fill="rgb(229,182,2)" fg:x="831" fg:w="1"/><text x="66.7832%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="66.5332%" y="645" width="0.0801%" height="15" fill="rgb(244,148,52)" fg:x="831" fg:w="1"/><text x="66.7832%" y="655.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="66.5332%" y="629" width="0.0801%" height="15" fill="rgb(225,211,4)" fg:x="831" fg:w="1"/><text x="66.7832%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.6934%" y="613" width="0.0801%" height="15" fill="rgb(208,222,47)" fg:x="833" fg:w="1"/><text x="66.9434%" y="623.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="66.6133%" y="661" width="0.2402%" height="15" fill="rgb(233,162,0)" fg:x="832" fg:w="3"/><text x="66.8633%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="66.6133%" y="645" width="0.2402%" height="15" fill="rgb(241,54,13)" fg:x="832" fg:w="3"/><text x="66.8633%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="66.6133%" y="629" width="0.2402%" height="15" fill="rgb(213,89,18)" fg:x="832" fg:w="3"/><text x="66.8633%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.7734%" y="613" width="0.0801%" height="15" fill="rgb(215,170,37)" fg:x="834" fg:w="1"/><text x="67.0234%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7734%" y="597" width="0.0801%" height="15" fill="rgb(216,133,15)" fg:x="834" fg:w="1"/><text x="67.0234%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="66.7734%" y="581" width="0.0801%" height="15" fill="rgb(230,42,19)" fg:x="834" fg:w="1"/><text x="67.0234%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7734%" y="565" width="0.0801%" height="15" fill="rgb(221,103,41)" fg:x="834" fg:w="1"/><text x="67.0234%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.7734%" y="549" width="0.0801%" height="15" fill="rgb(220,142,31)" fg:x="834" fg:w="1"/><text x="67.0234%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (837 samples, 67.01%)</title><rect x="0.0000%" y="725" width="67.0136%" height="15" fill="rgb(239,218,4)" fg:x="0" fg:w="837"/><text x="0.2500%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (837 samples, 67.01%)</title><rect x="0.0000%" y="709" width="67.0136%" height="15" fill="rgb(232,16,4)" fg:x="0" fg:w="837"/><text x="0.2500%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (837 samples, 67.01%)</title><rect x="0.0000%" y="693" width="67.0136%" height="15" fill="rgb(226,213,25)" fg:x="0" fg:w="837"/><text x="0.2500%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (502 samples, 40.19%)</title><rect x="26.8215%" y="677" width="40.1922%" height="15" fill="rgb(235,135,19)" fg:x="335" fg:w="502"/><text x="27.0715%" y="687.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="66.8535%" y="661" width="0.1601%" height="15" fill="rgb(240,107,29)" fg:x="835" fg:w="2"/><text x="67.1035%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="66.8535%" y="645" width="0.1601%" height="15" fill="rgb(206,164,44)" fg:x="835" fg:w="2"/><text x="67.1035%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="66.8535%" y="629" width="0.1601%" height="15" fill="rgb(210,23,48)" fg:x="835" fg:w="2"/><text x="67.1035%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.8535%" y="613" width="0.1601%" height="15" fill="rgb(212,138,25)" fg:x="835" fg:w="2"/><text x="67.1035%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.8535%" y="597" width="0.1601%" height="15" fill="rgb(224,152,3)" fg:x="835" fg:w="2"/><text x="67.1035%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="66.8535%" y="581" width="0.1601%" height="15" fill="rgb(214,38,23)" fg:x="835" fg:w="2"/><text x="67.1035%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.8535%" y="565" width="0.1601%" height="15" fill="rgb(215,161,10)" fg:x="835" fg:w="2"/><text x="67.1035%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.8535%" y="549" width="0.1601%" height="15" fill="rgb(240,185,7)" fg:x="835" fg:w="2"/><text x="67.1035%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.8535%" y="533" width="0.1601%" height="15" fill="rgb(244,104,25)" fg:x="835" fg:w="2"/><text x="67.1035%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="66.8535%" y="517" width="0.1601%" height="15" fill="rgb(242,140,44)" fg:x="835" fg:w="2"/><text x="67.1035%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.8535%" y="501" width="0.1601%" height="15" fill="rgb(245,30,19)" fg:x="835" fg:w="2"/><text x="67.1035%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.9335%" y="485" width="0.0801%" height="15" fill="rgb(219,208,35)" fg:x="836" fg:w="1"/><text x="67.1835%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.9335%" y="469" width="0.0801%" height="15" fill="rgb(235,200,7)" fg:x="836" fg:w="1"/><text x="67.1835%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.9335%" y="453" width="0.0801%" height="15" fill="rgb(220,193,10)" fg:x="836" fg:w="1"/><text x="67.1835%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.9335%" y="437" width="0.0801%" height="15" fill="rgb(212,216,39)" fg:x="836" fg:w="1"/><text x="67.1835%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.9335%" y="421" width="0.0801%" height="15" fill="rgb(212,134,19)" fg:x="836" fg:w="1"/><text x="67.1835%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.9335%" y="405" width="0.0801%" height="15" fill="rgb(230,57,24)" fg:x="836" fg:w="1"/><text x="67.1835%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.9335%" y="389" width="0.0801%" height="15" fill="rgb(238,209,37)" fg:x="836" fg:w="1"/><text x="67.1835%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.9335%" y="373" width="0.0801%" height="15" fill="rgb(247,11,45)" fg:x="836" fg:w="1"/><text x="67.1835%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="66.9335%" y="357" width="0.0801%" height="15" fill="rgb(222,126,6)" fg:x="836" fg:w="1"/><text x="67.1835%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0136%" y="565" width="0.0801%" height="15" fill="rgb(245,77,24)" fg:x="837" fg:w="1"/><text x="67.2636%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.0937%" y="549" width="0.0801%" height="15" fill="rgb(227,14,24)" fg:x="838" fg:w="1"/><text x="67.3437%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.1737%" y="549" width="0.0801%" height="15" fill="rgb(211,112,42)" fg:x="839" fg:w="1"/><text x="67.4237%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.1737%" y="533" width="0.0801%" height="15" fill="rgb(230,103,42)" fg:x="839" fg:w="1"/><text x="67.4237%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2538%" y="517" width="0.0801%" height="15" fill="rgb(228,125,42)" fg:x="840" fg:w="1"/><text x="67.5038%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="67.3339%" y="517" width="0.1601%" height="15" fill="rgb(243,33,6)" fg:x="841" fg:w="2"/><text x="67.5839%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4139%" y="501" width="0.0801%" height="15" fill="rgb(231,2,40)" fg:x="842" fg:w="1"/><text x="67.6639%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="67.0136%" y="581" width="0.6405%" height="15" fill="rgb(224,200,53)" fg:x="837" fg:w="8"/><text x="67.2636%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="67.0937%" y="565" width="0.5604%" height="15" fill="rgb(215,116,36)" fg:x="838" fg:w="7"/><text x="67.3437%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="67.2538%" y="549" width="0.4003%" height="15" fill="rgb(240,23,51)" fg:x="840" fg:w="5"/><text x="67.5038%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="67.2538%" y="533" width="0.4003%" height="15" fill="rgb(221,72,5)" fg:x="840" fg:w="5"/><text x="67.5038%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.4940%" y="517" width="0.1601%" height="15" fill="rgb(245,142,9)" fg:x="843" fg:w="2"/><text x="67.7440%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.5741%" y="501" width="0.0801%" height="15" fill="rgb(207,34,16)" fg:x="844" fg:w="1"/><text x="67.8241%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="67.0136%" y="677" width="0.7206%" height="15" fill="rgb(252,101,12)" fg:x="837" fg:w="9"/><text x="67.2636%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (9 samples, 0.72%)</title><rect x="67.0136%" y="661" width="0.7206%" height="15" fill="rgb(239,89,37)" fg:x="837" fg:w="9"/><text x="67.2636%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="67.0136%" y="645" width="0.7206%" height="15" fill="rgb(252,227,37)" fg:x="837" fg:w="9"/><text x="67.2636%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (9 samples, 0.72%)</title><rect x="67.0136%" y="629" width="0.7206%" height="15" fill="rgb(212,164,17)" fg:x="837" fg:w="9"/><text x="67.2636%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="67.0136%" y="613" width="0.7206%" height="15" fill="rgb(240,86,13)" fg:x="837" fg:w="9"/><text x="67.2636%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="67.0136%" y="597" width="0.7206%" height="15" fill="rgb(233,183,32)" fg:x="837" fg:w="9"/><text x="67.2636%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6541%" y="581" width="0.0801%" height="15" fill="rgb(205,201,38)" fg:x="845" fg:w="1"/><text x="67.9041%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="67.7342%" y="597" width="0.0801%" height="15" fill="rgb(210,122,38)" fg:x="846" fg:w="1"/><text x="67.9842%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="67.7342%" y="581" width="0.0801%" height="15" fill="rgb(241,174,26)" fg:x="846" fg:w="1"/><text x="67.9842%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.7342%" y="565" width="0.0801%" height="15" fill="rgb(219,89,7)" fg:x="846" fg:w="1"/><text x="67.9842%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.7342%" y="549" width="0.0801%" height="15" fill="rgb(246,9,24)" fg:x="846" fg:w="1"/><text x="67.9842%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.7342%" y="533" width="0.0801%" height="15" fill="rgb(205,132,21)" fg:x="846" fg:w="1"/><text x="67.9842%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.7342%" y="517" width="0.0801%" height="15" fill="rgb(210,11,17)" fg:x="846" fg:w="1"/><text x="67.9842%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="67.7342%" y="501" width="0.0801%" height="15" fill="rgb(226,138,14)" fg:x="846" fg:w="1"/><text x="67.9842%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="67.7342%" y="485" width="0.0801%" height="15" fill="rgb(224,108,44)" fg:x="846" fg:w="1"/><text x="67.9842%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="67.7342%" y="469" width="0.0801%" height="15" fill="rgb(247,114,36)" fg:x="846" fg:w="1"/><text x="67.9842%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="67.7342%" y="453" width="0.0801%" height="15" fill="rgb(231,183,14)" fg:x="846" fg:w="1"/><text x="67.9842%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="67.7342%" y="437" width="0.0801%" height="15" fill="rgb(218,168,4)" fg:x="846" fg:w="1"/><text x="67.9842%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="67.7342%" y="421" width="0.0801%" height="15" fill="rgb(210,8,3)" fg:x="846" fg:w="1"/><text x="67.9842%" y="431.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="67.8143%" y="581" width="0.0801%" height="15" fill="rgb(216,165,0)" fg:x="847" fg:w="1"/><text x="68.0643%" y="591.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="67.8143%" y="565" width="0.0801%" height="15" fill="rgb(245,120,5)" fg:x="847" fg:w="1"/><text x="68.0643%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (3 samples, 0.24%)</title><rect x="67.7342%" y="629" width="0.2402%" height="15" fill="rgb(249,121,32)" fg:x="846" fg:w="3"/><text x="67.9842%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.24%)</title><rect x="67.7342%" y="613" width="0.2402%" height="15" fill="rgb(211,55,33)" fg:x="846" fg:w="3"/><text x="67.9842%" y="623.50"></text></g><g><title>libloading::os::unix::Library::open (2 samples, 0.16%)</title><rect x="67.8143%" y="597" width="0.1601%" height="15" fill="rgb(254,46,35)" fg:x="847" fg:w="2"/><text x="68.0643%" y="607.50"></text></g><g><title>dlopen (1 samples, 0.08%)</title><rect x="67.8943%" y="581" width="0.0801%" height="15" fill="rgb(213,213,19)" fg:x="848" fg:w="1"/><text x="68.1443%" y="591.50"></text></g><g><title>_dl_catch_error (1 samples, 0.08%)</title><rect x="67.8943%" y="565" width="0.0801%" height="15" fill="rgb(207,152,44)" fg:x="848" fg:w="1"/><text x="68.1443%" y="575.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="67.8943%" y="549" width="0.0801%" height="15" fill="rgb(227,195,36)" fg:x="848" fg:w="1"/><text x="68.1443%" y="559.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="67.8943%" y="533" width="0.0801%" height="15" fill="rgb(210,137,36)" fg:x="848" fg:w="1"/><text x="68.1443%" y="543.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="67.8943%" y="517" width="0.0801%" height="15" fill="rgb(253,47,47)" fg:x="848" fg:w="1"/><text x="68.1443%" y="527.50"></text></g><g><title>engine::session::Session::initialize (4 samples, 0.32%)</title><rect x="67.7342%" y="645" width="0.3203%" height="15" fill="rgb(230,147,18)" fg:x="846" fg:w="4"/><text x="67.9842%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="67.9744%" y="629" width="0.0801%" height="15" fill="rgb(247,33,49)" fg:x="849" fg:w="1"/><text x="68.2244%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.9744%" y="613" width="0.0801%" height="15" fill="rgb(239,26,29)" fg:x="849" fg:w="1"/><text x="68.2244%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.9744%" y="597" width="0.0801%" height="15" fill="rgb(245,145,52)" fg:x="849" fg:w="1"/><text x="68.2244%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="68.0544%" y="597" width="0.0801%" height="15" fill="rgb(224,139,32)" fg:x="850" fg:w="1"/><text x="68.3044%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (6 samples, 0.48%)</title><rect x="67.7342%" y="677" width="0.4804%" height="15" fill="rgb(238,202,19)" fg:x="846" fg:w="6"/><text x="67.9842%" y="687.50"></text></g><g><title>engine::session::Session::new (6 samples, 0.48%)</title><rect x="67.7342%" y="661" width="0.4804%" height="15" fill="rgb(249,211,53)" fg:x="846" fg:w="6"/><text x="67.9842%" y="671.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="68.0544%" y="645" width="0.1601%" height="15" fill="rgb(237,229,33)" fg:x="850" fg:w="2"/><text x="68.3044%" y="655.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="68.0544%" y="629" width="0.1601%" height="15" fill="rgb(208,97,40)" fg:x="850" fg:w="2"/><text x="68.3044%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="68.0544%" y="613" width="0.1601%" height="15" fill="rgb(254,36,16)" fg:x="850" fg:w="2"/><text x="68.3044%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.1345%" y="597" width="0.0801%" height="15" fill="rgb(221,7,12)" fg:x="851" fg:w="1"/><text x="68.3845%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.1345%" y="581" width="0.0801%" height="15" fill="rgb(205,11,12)" fg:x="851" fg:w="1"/><text x="68.3845%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.1345%" y="565" width="0.0801%" height="15" fill="rgb(227,72,28)" fg:x="851" fg:w="1"/><text x="68.3845%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="68.2146%" y="661" width="0.0801%" height="15" fill="rgb(228,7,34)" fg:x="852" fg:w="1"/><text x="68.4646%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.2146%" y="645" width="0.0801%" height="15" fill="rgb(230,52,42)" fg:x="852" fg:w="1"/><text x="68.4646%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="68.2946%" y="645" width="0.1601%" height="15" fill="rgb(219,177,53)" fg:x="853" fg:w="2"/><text x="68.5446%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.4548%" y="613" width="0.0801%" height="15" fill="rgb(243,196,34)" fg:x="855" fg:w="1"/><text x="68.7048%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.4548%" y="597" width="0.0801%" height="15" fill="rgb(213,66,49)" fg:x="855" fg:w="1"/><text x="68.7048%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.4548%" y="581" width="0.0801%" height="15" fill="rgb(233,11,50)" fg:x="855" fg:w="1"/><text x="68.7048%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.4548%" y="565" width="0.0801%" height="15" fill="rgb(235,190,6)" fg:x="855" fg:w="1"/><text x="68.7048%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.5348%" y="613" width="0.0801%" height="15" fill="rgb(212,64,44)" fg:x="856" fg:w="1"/><text x="68.7848%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="68.5348%" y="597" width="0.0801%" height="15" fill="rgb(206,95,44)" fg:x="856" fg:w="1"/><text x="68.7848%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="68.5348%" y="581" width="0.0801%" height="15" fill="rgb(227,136,25)" fg:x="856" fg:w="1"/><text x="68.7848%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.5348%" y="565" width="0.0801%" height="15" fill="rgb(206,178,17)" fg:x="856" fg:w="1"/><text x="68.7848%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.5348%" y="549" width="0.0801%" height="15" fill="rgb(208,168,35)" fg:x="856" fg:w="1"/><text x="68.7848%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.5348%" y="533" width="0.0801%" height="15" fill="rgb(213,210,40)" fg:x="856" fg:w="1"/><text x="68.7848%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.5348%" y="517" width="0.0801%" height="15" fill="rgb(236,60,6)" fg:x="856" fg:w="1"/><text x="68.7848%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.5348%" y="501" width="0.0801%" height="15" fill="rgb(220,186,36)" fg:x="856" fg:w="1"/><text x="68.7848%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.5348%" y="485" width="0.0801%" height="15" fill="rgb(225,120,49)" fg:x="856" fg:w="1"/><text x="68.7848%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.5348%" y="469" width="0.0801%" height="15" fill="rgb(250,115,20)" fg:x="856" fg:w="1"/><text x="68.7848%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.6149%" y="549" width="0.0801%" height="15" fill="rgb(207,214,23)" fg:x="857" fg:w="1"/><text x="68.8649%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.6149%" y="533" width="0.0801%" height="15" fill="rgb(240,9,18)" fg:x="857" fg:w="1"/><text x="68.8649%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="68.7750%" y="517" width="0.1601%" height="15" fill="rgb(232,170,48)" fg:x="859" fg:w="2"/><text x="69.0250%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.8551%" y="501" width="0.0801%" height="15" fill="rgb(236,149,23)" fg:x="860" fg:w="1"/><text x="69.1051%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.8551%" y="485" width="0.0801%" height="15" fill="rgb(210,125,42)" fg:x="860" fg:w="1"/><text x="69.1051%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.8551%" y="469" width="0.0801%" height="15" fill="rgb(207,201,52)" fg:x="860" fg:w="1"/><text x="69.1051%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.40%)</title><rect x="68.6149%" y="581" width="0.4003%" height="15" fill="rgb(250,187,37)" fg:x="857" fg:w="5"/><text x="68.8649%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="68.6149%" y="565" width="0.4003%" height="15" fill="rgb(214,186,2)" fg:x="857" fg:w="5"/><text x="68.8649%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="68.6950%" y="549" width="0.3203%" height="15" fill="rgb(207,189,15)" fg:x="858" fg:w="4"/><text x="68.9450%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="68.6950%" y="533" width="0.3203%" height="15" fill="rgb(221,99,21)" fg:x="858" fg:w="4"/><text x="68.9450%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.9351%" y="517" width="0.0801%" height="15" fill="rgb(212,67,18)" fg:x="861" fg:w="1"/><text x="69.1851%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.9351%" y="501" width="0.0801%" height="15" fill="rgb(226,24,24)" fg:x="861" fg:w="1"/><text x="69.1851%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0152%" y="533" width="0.0801%" height="15" fill="rgb(252,123,31)" fg:x="862" fg:w="1"/><text x="69.2652%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.0953%" y="533" width="0.0801%" height="15" fill="rgb(251,227,47)" fg:x="863" fg:w="1"/><text x="69.3453%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.0953%" y="517" width="0.0801%" height="15" fill="rgb(233,84,53)" fg:x="863" fg:w="1"/><text x="69.3453%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.2554%" y="453" width="0.1601%" height="15" fill="rgb(228,57,19)" fg:x="865" fg:w="2"/><text x="69.5054%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.2554%" y="437" width="0.1601%" height="15" fill="rgb(251,81,5)" fg:x="865" fg:w="2"/><text x="69.5054%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3355%" y="421" width="0.0801%" height="15" fill="rgb(236,211,27)" fg:x="866" fg:w="1"/><text x="69.5855%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.4155%" y="389" width="0.1601%" height="15" fill="rgb(218,21,6)" fg:x="867" fg:w="2"/><text x="69.6655%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.4155%" y="373" width="0.1601%" height="15" fill="rgb(239,104,19)" fg:x="867" fg:w="2"/><text x="69.6655%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4956%" y="357" width="0.0801%" height="15" fill="rgb(234,179,27)" fg:x="868" fg:w="1"/><text x="69.7456%" y="367.50"></text></g><g><title>engine::session::Session::flush (17 samples, 1.36%)</title><rect x="68.2946%" y="661" width="1.3611%" height="15" fill="rgb(221,154,39)" fg:x="853" fg:w="17"/><text x="68.5446%" y="671.50"></text></g><g><title>engine::session::state::State::close (15 samples, 1.20%)</title><rect x="68.4548%" y="645" width="1.2010%" height="15" fill="rgb(228,190,1)" fg:x="855" fg:w="15"/><text x="68.7048%" y="655.50"></text></g><g><title>engine::session::state::State::flush_entities (15 samples, 1.20%)</title><rect x="68.4548%" y="629" width="1.2010%" height="15" fill="rgb(244,122,33)" fg:x="855" fg:w="15"/><text x="68.7048%" y="639.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (13 samples, 1.04%)</title><rect x="68.6149%" y="613" width="1.0408%" height="15" fill="rgb(227,56,37)" fg:x="857" fg:w="13"/><text x="68.8649%" y="623.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (13 samples, 1.04%)</title><rect x="68.6149%" y="597" width="1.0408%" height="15" fill="rgb(207,158,16)" fg:x="857" fg:w="13"/><text x="68.8649%" y="607.50"></text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="69.0152%" y="581" width="0.6405%" height="15" fill="rgb(251,222,30)" fg:x="862" fg:w="8"/><text x="69.2652%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="69.0152%" y="565" width="0.6405%" height="15" fill="rgb(240,22,49)" fg:x="862" fg:w="8"/><text x="69.2652%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="69.0152%" y="549" width="0.6405%" height="15" fill="rgb(224,207,37)" fg:x="862" fg:w="8"/><text x="69.2652%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="69.1753%" y="533" width="0.4804%" height="15" fill="rgb(249,188,40)" fg:x="864" fg:w="6"/><text x="69.4253%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="69.1753%" y="517" width="0.4804%" height="15" fill="rgb(254,141,11)" fg:x="864" fg:w="6"/><text x="69.4253%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="69.1753%" y="501" width="0.4804%" height="15" fill="rgb(231,177,6)" fg:x="864" fg:w="6"/><text x="69.4253%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="69.1753%" y="485" width="0.4804%" height="15" fill="rgb(241,6,16)" fg:x="864" fg:w="6"/><text x="69.4253%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="69.2554%" y="469" width="0.4003%" height="15" fill="rgb(230,50,14)" fg:x="865" fg:w="5"/><text x="69.5054%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="69.4155%" y="453" width="0.2402%" height="15" fill="rgb(254,36,3)" fg:x="867" fg:w="3"/><text x="69.6655%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="69.4155%" y="437" width="0.2402%" height="15" fill="rgb(226,149,37)" fg:x="867" fg:w="3"/><text x="69.6655%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="69.4155%" y="421" width="0.2402%" height="15" fill="rgb(253,49,27)" fg:x="867" fg:w="3"/><text x="69.6655%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="69.4155%" y="405" width="0.2402%" height="15" fill="rgb(249,182,52)" fg:x="867" fg:w="3"/><text x="69.6655%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="69.5757%" y="389" width="0.0801%" height="15" fill="rgb(223,42,15)" fg:x="869" fg:w="1"/><text x="69.8257%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="69.5757%" y="373" width="0.0801%" height="15" fill="rgb(232,31,42)" fg:x="869" fg:w="1"/><text x="69.8257%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="69.6557%" y="629" width="0.0801%" height="15" fill="rgb(233,56,46)" fg:x="870" fg:w="1"/><text x="69.9057%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="69.6557%" y="613" width="0.0801%" height="15" fill="rgb(241,143,21)" fg:x="870" fg:w="1"/><text x="69.9057%" y="623.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="69.6557%" y="597" width="0.0801%" height="15" fill="rgb(251,222,15)" fg:x="870" fg:w="1"/><text x="69.9057%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="69.6557%" y="581" width="0.0801%" height="15" fill="rgb(242,101,40)" fg:x="870" fg:w="1"/><text x="69.9057%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="69.6557%" y="565" width="0.0801%" height="15" fill="rgb(247,60,44)" fg:x="870" fg:w="1"/><text x="69.9057%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="69.6557%" y="549" width="0.0801%" height="15" fill="rgb(254,48,47)" fg:x="870" fg:w="1"/><text x="69.9057%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7358%" y="597" width="0.0801%" height="15" fill="rgb(253,30,33)" fg:x="871" fg:w="1"/><text x="69.9858%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7358%" y="581" width="0.0801%" height="15" fill="rgb(253,214,47)" fg:x="871" fg:w="1"/><text x="69.9858%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="69.7358%" y="565" width="0.0801%" height="15" fill="rgb(241,108,29)" fg:x="871" fg:w="1"/><text x="69.9858%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7358%" y="549" width="0.0801%" height="15" fill="rgb(240,36,2)" fg:x="871" fg:w="1"/><text x="69.9858%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="69.6557%" y="645" width="0.2402%" height="15" fill="rgb(243,198,24)" fg:x="870" fg:w="3"/><text x="69.9057%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="69.7358%" y="629" width="0.1601%" height="15" fill="rgb(225,98,27)" fg:x="871" fg:w="2"/><text x="69.9858%" y="639.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="69.7358%" y="613" width="0.1601%" height="15" fill="rgb(208,86,30)" fg:x="871" fg:w="2"/><text x="69.9858%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8159%" y="597" width="0.0801%" height="15" fill="rgb(242,157,11)" fg:x="872" fg:w="1"/><text x="70.0659%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="69.8159%" y="581" width="0.0801%" height="15" fill="rgb(244,84,16)" fg:x="872" fg:w="1"/><text x="70.0659%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.8159%" y="565" width="0.0801%" height="15" fill="rgb(247,20,46)" fg:x="872" fg:w="1"/><text x="70.0659%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="69.9760%" y="629" width="0.0801%" height="15" fill="rgb(240,157,20)" fg:x="874" fg:w="1"/><text x="70.2260%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="69.9760%" y="613" width="0.0801%" height="15" fill="rgb(212,151,38)" fg:x="874" fg:w="1"/><text x="70.2260%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="69.9760%" y="597" width="0.0801%" height="15" fill="rgb(233,197,14)" fg:x="874" fg:w="1"/><text x="70.2260%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.9760%" y="581" width="0.0801%" height="15" fill="rgb(226,148,28)" fg:x="874" fg:w="1"/><text x="70.2260%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.9760%" y="565" width="0.0801%" height="15" fill="rgb(244,141,30)" fg:x="874" fg:w="1"/><text x="70.2260%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.9760%" y="549" width="0.0801%" height="15" fill="rgb(215,73,38)" fg:x="874" fg:w="1"/><text x="70.2260%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.9760%" y="533" width="0.0801%" height="15" fill="rgb(230,148,29)" fg:x="874" fg:w="1"/><text x="70.2260%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="70.0560%" y="629" width="0.1601%" height="15" fill="rgb(250,41,52)" fg:x="875" fg:w="2"/><text x="70.3060%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.1361%" y="613" width="0.0801%" height="15" fill="rgb(215,48,1)" fg:x="876" fg:w="1"/><text x="70.3861%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="70.2162%" y="629" width="0.0801%" height="15" fill="rgb(205,223,38)" fg:x="877" fg:w="1"/><text x="70.4662%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="70.2162%" y="613" width="0.0801%" height="15" fill="rgb(213,51,8)" fg:x="877" fg:w="1"/><text x="70.4662%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.2162%" y="597" width="0.0801%" height="15" fill="rgb(248,53,11)" fg:x="877" fg:w="1"/><text x="70.4662%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="70.2162%" y="581" width="0.0801%" height="15" fill="rgb(218,140,4)" fg:x="877" fg:w="1"/><text x="70.4662%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.2162%" y="565" width="0.0801%" height="15" fill="rgb(248,161,31)" fg:x="877" fg:w="1"/><text x="70.4662%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.2162%" y="549" width="0.0801%" height="15" fill="rgb(239,88,32)" fg:x="877" fg:w="1"/><text x="70.4662%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.2162%" y="533" width="0.0801%" height="15" fill="rgb(234,14,28)" fg:x="877" fg:w="1"/><text x="70.4662%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.2162%" y="517" width="0.0801%" height="15" fill="rgb(235,173,11)" fg:x="877" fg:w="1"/><text x="70.4662%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.72%)</title><rect x="69.6557%" y="661" width="0.7206%" height="15" fill="rgb(222,70,2)" fg:x="870" fg:w="9"/><text x="69.9057%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="69.8959%" y="645" width="0.4804%" height="15" fill="rgb(228,196,41)" fg:x="873" fg:w="6"/><text x="70.1459%" y="655.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="70.2962%" y="629" width="0.0801%" height="15" fill="rgb(249,19,9)" fg:x="878" fg:w="1"/><text x="70.5462%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="70.2962%" y="613" width="0.0801%" height="15" fill="rgb(221,16,43)" fg:x="878" fg:w="1"/><text x="70.5462%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.2962%" y="597" width="0.0801%" height="15" fill="rgb(225,207,6)" fg:x="878" fg:w="1"/><text x="70.5462%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="70.3763%" y="661" width="0.0801%" height="15" fill="rgb(249,32,32)" fg:x="879" fg:w="1"/><text x="70.6263%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="70.3763%" y="645" width="0.0801%" height="15" fill="rgb(232,163,43)" fg:x="879" fg:w="1"/><text x="70.6263%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="70.3763%" y="629" width="0.0801%" height="15" fill="rgb(236,158,54)" fg:x="879" fg:w="1"/><text x="70.6263%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="70.3763%" y="613" width="0.0801%" height="15" fill="rgb(205,126,44)" fg:x="879" fg:w="1"/><text x="70.6263%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3763%" y="597" width="0.0801%" height="15" fill="rgb(210,162,12)" fg:x="879" fg:w="1"/><text x="70.6263%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3763%" y="581" width="0.0801%" height="15" fill="rgb(218,156,48)" fg:x="879" fg:w="1"/><text x="70.6263%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.3763%" y="565" width="0.0801%" height="15" fill="rgb(248,210,3)" fg:x="879" fg:w="1"/><text x="70.6263%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.3763%" y="549" width="0.0801%" height="15" fill="rgb(212,43,27)" fg:x="879" fg:w="1"/><text x="70.6263%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.3763%" y="533" width="0.0801%" height="15" fill="rgb(241,52,6)" fg:x="879" fg:w="1"/><text x="70.6263%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.3763%" y="517" width="0.0801%" height="15" fill="rgb(222,178,35)" fg:x="879" fg:w="1"/><text x="70.6263%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.3763%" y="501" width="0.0801%" height="15" fill="rgb(205,121,46)" fg:x="879" fg:w="1"/><text x="70.6263%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="70.4564%" y="645" width="0.0801%" height="15" fill="rgb(249,67,1)" fg:x="880" fg:w="1"/><text x="70.7064%" y="655.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="70.4564%" y="629" width="0.0801%" height="15" fill="rgb(238,168,42)" fg:x="880" fg:w="1"/><text x="70.7064%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="70.4564%" y="613" width="0.0801%" height="15" fill="rgb(205,36,48)" fg:x="880" fg:w="1"/><text x="70.7064%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="70.4564%" y="597" width="0.0801%" height="15" fill="rgb(240,85,12)" fg:x="880" fg:w="1"/><text x="70.7064%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="70.5364%" y="597" width="0.0801%" height="15" fill="rgb(245,27,39)" fg:x="881" fg:w="1"/><text x="70.7864%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="70.5364%" y="581" width="0.0801%" height="15" fill="rgb(218,129,34)" fg:x="881" fg:w="1"/><text x="70.7864%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="70.5364%" y="565" width="0.0801%" height="15" fill="rgb(221,157,12)" fg:x="881" fg:w="1"/><text x="70.7864%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="70.5364%" y="549" width="0.0801%" height="15" fill="rgb(213,206,20)" fg:x="881" fg:w="1"/><text x="70.7864%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="70.5364%" y="533" width="0.0801%" height="15" fill="rgb(227,115,30)" fg:x="881" fg:w="1"/><text x="70.7864%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.5364%" y="517" width="0.0801%" height="15" fill="rgb(221,40,47)" fg:x="881" fg:w="1"/><text x="70.7864%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.5364%" y="501" width="0.0801%" height="15" fill="rgb(239,96,49)" fg:x="881" fg:w="1"/><text x="70.7864%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.5364%" y="485" width="0.0801%" height="15" fill="rgb(223,24,38)" fg:x="881" fg:w="1"/><text x="70.7864%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.5364%" y="469" width="0.0801%" height="15" fill="rgb(242,35,45)" fg:x="881" fg:w="1"/><text x="70.7864%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.5364%" y="453" width="0.0801%" height="15" fill="rgb(236,20,9)" fg:x="881" fg:w="1"/><text x="70.7864%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.5364%" y="437" width="0.0801%" height="15" fill="rgb(239,124,8)" fg:x="881" fg:w="1"/><text x="70.7864%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.5364%" y="421" width="0.0801%" height="15" fill="rgb(228,92,29)" fg:x="881" fg:w="1"/><text x="70.7864%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.5364%" y="405" width="0.0801%" height="15" fill="rgb(251,53,39)" fg:x="881" fg:w="1"/><text x="70.7864%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="70.6165%" y="549" width="0.1601%" height="15" fill="rgb(224,44,10)" fg:x="882" fg:w="2"/><text x="70.8665%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.6165%" y="533" width="0.1601%" height="15" fill="rgb(254,10,15)" fg:x="882" fg:w="2"/><text x="70.8665%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6966%" y="517" width="0.0801%" height="15" fill="rgb(245,173,6)" fg:x="883" fg:w="1"/><text x="70.9466%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="70.6165%" y="565" width="0.2402%" height="15" fill="rgb(228,74,0)" fg:x="882" fg:w="3"/><text x="70.8665%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="70.7766%" y="549" width="0.0801%" height="15" fill="rgb(206,138,29)" fg:x="884" fg:w="1"/><text x="71.0266%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="70.7766%" y="533" width="0.0801%" height="15" fill="rgb(253,27,43)" fg:x="884" fg:w="1"/><text x="71.0266%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (4 samples, 0.32%)</title><rect x="70.6165%" y="597" width="0.3203%" height="15" fill="rgb(231,73,0)" fg:x="882" fg:w="4"/><text x="70.8665%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="70.6165%" y="581" width="0.3203%" height="15" fill="rgb(218,9,23)" fg:x="882" fg:w="4"/><text x="70.8665%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="70.8567%" y="565" width="0.0801%" height="15" fill="rgb(251,55,29)" fg:x="885" fg:w="1"/><text x="71.1067%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="70.8567%" y="549" width="0.0801%" height="15" fill="rgb(223,180,22)" fg:x="885" fg:w="1"/><text x="71.1067%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="70.8567%" y="533" width="0.0801%" height="15" fill="rgb(223,29,21)" fg:x="885" fg:w="1"/><text x="71.1067%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.8567%" y="517" width="0.0801%" height="15" fill="rgb(251,103,37)" fg:x="885" fg:w="1"/><text x="71.1067%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.8567%" y="501" width="0.0801%" height="15" fill="rgb(214,11,21)" fg:x="885" fg:w="1"/><text x="71.1067%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.8567%" y="485" width="0.0801%" height="15" fill="rgb(205,137,13)" fg:x="885" fg:w="1"/><text x="71.1067%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8567%" y="469" width="0.0801%" height="15" fill="rgb(225,58,47)" fg:x="885" fg:w="1"/><text x="71.1067%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8567%" y="453" width="0.0801%" height="15" fill="rgb(222,197,14)" fg:x="885" fg:w="1"/><text x="71.1067%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="70.5364%" y="645" width="0.4804%" height="15" fill="rgb(215,210,33)" fg:x="881" fg:w="6"/><text x="70.7864%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="70.5364%" y="629" width="0.4804%" height="15" fill="rgb(242,13,9)" fg:x="881" fg:w="6"/><text x="70.7864%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="70.5364%" y="613" width="0.4804%" height="15" fill="rgb(218,31,39)" fg:x="881" fg:w="6"/><text x="70.7864%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="70.9367%" y="597" width="0.0801%" height="15" fill="rgb(211,214,23)" fg:x="886" fg:w="1"/><text x="71.1867%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="70.9367%" y="581" width="0.0801%" height="15" fill="rgb(237,92,14)" fg:x="886" fg:w="1"/><text x="71.1867%" y="591.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="70.9367%" y="565" width="0.0801%" height="15" fill="rgb(220,78,5)" fg:x="886" fg:w="1"/><text x="71.1867%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9367%" y="549" width="0.0801%" height="15" fill="rgb(237,23,21)" fg:x="886" fg:w="1"/><text x="71.1867%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9367%" y="533" width="0.0801%" height="15" fill="rgb(251,207,51)" fg:x="886" fg:w="1"/><text x="71.1867%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="70.9367%" y="517" width="0.0801%" height="15" fill="rgb(249,206,18)" fg:x="886" fg:w="1"/><text x="71.1867%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9367%" y="501" width="0.0801%" height="15" fill="rgb(236,20,19)" fg:x="886" fg:w="1"/><text x="71.1867%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.0168%" y="581" width="0.0801%" height="15" fill="rgb(214,227,29)" fg:x="887" fg:w="1"/><text x="71.2668%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.0168%" y="565" width="0.0801%" height="15" fill="rgb(209,183,4)" fg:x="887" fg:w="1"/><text x="71.2668%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.0168%" y="549" width="0.0801%" height="15" fill="rgb(233,111,23)" fg:x="887" fg:w="1"/><text x="71.2668%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.0168%" y="533" width="0.0801%" height="15" fill="rgb(238,121,27)" fg:x="887" fg:w="1"/><text x="71.2668%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="71.0969%" y="517" width="0.0801%" height="15" fill="rgb(236,120,41)" fg:x="888" fg:w="1"/><text x="71.3469%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="71.1769%" y="517" width="0.2402%" height="15" fill="rgb(241,143,10)" fg:x="889" fg:w="3"/><text x="71.4269%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="71.1769%" y="501" width="0.2402%" height="15" fill="rgb(224,86,31)" fg:x="889" fg:w="3"/><text x="71.4269%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="71.2570%" y="485" width="0.1601%" height="15" fill="rgb(236,212,27)" fg:x="890" fg:w="2"/><text x="71.5070%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.3371%" y="469" width="0.0801%" height="15" fill="rgb(219,43,51)" fg:x="891" fg:w="1"/><text x="71.5871%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.3371%" y="453" width="0.0801%" height="15" fill="rgb(232,216,8)" fg:x="891" fg:w="1"/><text x="71.5871%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="71.4171%" y="501" width="0.0801%" height="15" fill="rgb(206,222,39)" fg:x="892" fg:w="1"/><text x="71.6671%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="71.4171%" y="485" width="0.0801%" height="15" fill="rgb(209,149,48)" fg:x="892" fg:w="1"/><text x="71.6671%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.4972%" y="501" width="0.0801%" height="15" fill="rgb(229,155,21)" fg:x="893" fg:w="1"/><text x="71.7472%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.4972%" y="485" width="0.0801%" height="15" fill="rgb(246,152,26)" fg:x="893" fg:w="1"/><text x="71.7472%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.6573%" y="485" width="0.0801%" height="15" fill="rgb(206,70,42)" fg:x="895" fg:w="1"/><text x="71.9073%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.6573%" y="469" width="0.0801%" height="15" fill="rgb(236,9,11)" fg:x="895" fg:w="1"/><text x="71.9073%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.6573%" y="453" width="0.0801%" height="15" fill="rgb(238,145,47)" fg:x="895" fg:w="1"/><text x="71.9073%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="71.7374%" y="453" width="0.0801%" height="15" fill="rgb(252,189,7)" fg:x="896" fg:w="1"/><text x="71.9874%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="71.8175%" y="453" width="0.0801%" height="15" fill="rgb(254,168,51)" fg:x="897" fg:w="1"/><text x="72.0675%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.8175%" y="437" width="0.0801%" height="15" fill="rgb(227,105,46)" fg:x="897" fg:w="1"/><text x="72.0675%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="71.5773%" y="501" width="0.4804%" height="15" fill="rgb(227,74,30)" fg:x="894" fg:w="6"/><text x="71.8273%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="71.7374%" y="485" width="0.3203%" height="15" fill="rgb(206,212,44)" fg:x="896" fg:w="4"/><text x="71.9874%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="71.7374%" y="469" width="0.3203%" height="15" fill="rgb(252,69,11)" fg:x="896" fg:w="4"/><text x="71.9874%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="71.8975%" y="453" width="0.1601%" height="15" fill="rgb(239,116,0)" fg:x="898" fg:w="2"/><text x="72.1475%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.9776%" y="437" width="0.0801%" height="15" fill="rgb(246,189,23)" fg:x="899" fg:w="1"/><text x="72.2276%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="71.4171%" y="517" width="0.7206%" height="15" fill="rgb(229,50,41)" fg:x="892" fg:w="9"/><text x="71.6671%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.0576%" y="501" width="0.0801%" height="15" fill="rgb(214,66,37)" fg:x="900" fg:w="1"/><text x="72.3076%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.0576%" y="485" width="0.0801%" height="15" fill="rgb(226,28,6)" fg:x="900" fg:w="1"/><text x="72.3076%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="71.0969%" y="533" width="1.1209%" height="15" fill="rgb(239,154,0)" fg:x="888" fg:w="14"/><text x="71.3469%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.1377%" y="517" width="0.0801%" height="15" fill="rgb(233,97,11)" fg:x="901" fg:w="1"/><text x="72.3877%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.20%)</title><rect x="71.0969%" y="549" width="1.2010%" height="15" fill="rgb(236,215,16)" fg:x="888" fg:w="15"/><text x="71.3469%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.2178%" y="533" width="0.0801%" height="15" fill="rgb(246,188,29)" fg:x="902" fg:w="1"/><text x="72.4678%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.2178%" y="517" width="0.0801%" height="15" fill="rgb(207,7,29)" fg:x="902" fg:w="1"/><text x="72.4678%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2178%" y="501" width="0.0801%" height="15" fill="rgb(238,112,43)" fg:x="902" fg:w="1"/><text x="72.4678%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.2178%" y="485" width="0.0801%" height="15" fill="rgb(230,110,32)" fg:x="902" fg:w="1"/><text x="72.4678%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.2978%" y="517" width="0.0801%" height="15" fill="rgb(218,197,32)" fg:x="903" fg:w="1"/><text x="72.5478%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4580%" y="501" width="0.0801%" height="15" fill="rgb(252,61,9)" fg:x="905" fg:w="1"/><text x="72.7080%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6181%" y="469" width="0.0801%" height="15" fill="rgb(244,140,14)" fg:x="907" fg:w="1"/><text x="72.8681%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="72.2978%" y="549" width="0.5604%" height="15" fill="rgb(216,14,47)" fg:x="903" fg:w="7"/><text x="72.5478%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="72.2978%" y="533" width="0.5604%" height="15" fill="rgb(224,130,52)" fg:x="903" fg:w="7"/><text x="72.5478%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="72.3779%" y="517" width="0.4804%" height="15" fill="rgb(210,229,51)" fg:x="904" fg:w="6"/><text x="72.6279%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="72.5380%" y="501" width="0.3203%" height="15" fill="rgb(242,13,9)" fg:x="906" fg:w="4"/><text x="72.7880%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="72.6181%" y="485" width="0.2402%" height="15" fill="rgb(252,71,50)" fg:x="907" fg:w="3"/><text x="72.8681%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="72.6982%" y="469" width="0.1601%" height="15" fill="rgb(218,225,6)" fg:x="908" fg:w="2"/><text x="72.9482%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.8583%" y="501" width="0.1601%" height="15" fill="rgb(219,27,35)" fg:x="910" fg:w="2"/><text x="73.1083%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.0184%" y="453" width="0.0801%" height="15" fill="rgb(226,30,1)" fg:x="912" fg:w="1"/><text x="73.2684%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.0184%" y="437" width="0.0801%" height="15" fill="rgb(227,164,34)" fg:x="912" fg:w="1"/><text x="73.2684%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="73.0184%" y="421" width="0.0801%" height="15" fill="rgb(206,103,4)" fg:x="912" fg:w="1"/><text x="73.2684%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1785%" y="421" width="0.0801%" height="15" fill="rgb(214,166,19)" fg:x="914" fg:w="1"/><text x="73.4285%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1785%" y="405" width="0.0801%" height="15" fill="rgb(240,56,20)" fg:x="914" fg:w="1"/><text x="73.4285%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1785%" y="389" width="0.0801%" height="15" fill="rgb(224,25,3)" fg:x="914" fg:w="1"/><text x="73.4285%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="73.0184%" y="485" width="0.3203%" height="15" fill="rgb(216,206,54)" fg:x="912" fg:w="4"/><text x="73.2684%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="73.0184%" y="469" width="0.3203%" height="15" fill="rgb(225,142,10)" fg:x="912" fg:w="4"/><text x="73.2684%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="73.0985%" y="453" width="0.2402%" height="15" fill="rgb(246,9,18)" fg:x="913" fg:w="3"/><text x="73.3485%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="73.0985%" y="437" width="0.2402%" height="15" fill="rgb(247,140,18)" fg:x="913" fg:w="3"/><text x="73.3485%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.2586%" y="421" width="0.0801%" height="15" fill="rgb(239,184,22)" fg:x="915" fg:w="1"/><text x="73.5086%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="73.2586%" y="405" width="0.0801%" height="15" fill="rgb(227,94,44)" fg:x="915" fg:w="1"/><text x="73.5086%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.2586%" y="389" width="0.0801%" height="15" fill="rgb(219,43,3)" fg:x="915" fg:w="1"/><text x="73.5086%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="73.2586%" y="373" width="0.0801%" height="15" fill="rgb(210,76,31)" fg:x="915" fg:w="1"/><text x="73.5086%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.2586%" y="357" width="0.0801%" height="15" fill="rgb(225,85,12)" fg:x="915" fg:w="1"/><text x="73.5086%" y="367.50"></text></g><g><title>engine::session::Session::flush (30 samples, 2.40%)</title><rect x="71.0168%" y="645" width="2.4019%" height="15" fill="rgb(214,191,28)" fg:x="887" fg:w="30"/><text x="71.2668%" y="655.50">en..</text></g><g><title>engine::session::Session::save_changes (30 samples, 2.40%)</title><rect x="71.0168%" y="629" width="2.4019%" height="15" fill="rgb(214,43,14)" fg:x="887" fg:w="30"/><text x="71.2668%" y="639.50">en..</text></g><g><title>engine::session::state::State::close (30 samples, 2.40%)</title><rect x="71.0168%" y="613" width="2.4019%" height="15" fill="rgb(253,117,5)" fg:x="887" fg:w="30"/><text x="71.2668%" y="623.50">en..</text></g><g><title>engine::session::state::State::flush_entities (30 samples, 2.40%)</title><rect x="71.0168%" y="597" width="2.4019%" height="15" fill="rgb(208,124,26)" fg:x="887" fg:w="30"/><text x="71.2668%" y="607.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (29 samples, 2.32%)</title><rect x="71.0969%" y="581" width="2.3219%" height="15" fill="rgb(228,208,39)" fg:x="888" fg:w="29"/><text x="71.3469%" y="591.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (29 samples, 2.32%)</title><rect x="71.0969%" y="565" width="2.3219%" height="15" fill="rgb(206,180,39)" fg:x="888" fg:w="29"/><text x="71.3469%" y="575.50">e..</text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="72.8583%" y="549" width="0.5604%" height="15" fill="rgb(205,111,37)" fg:x="910" fg:w="7"/><text x="73.1083%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="72.8583%" y="533" width="0.5604%" height="15" fill="rgb(208,121,24)" fg:x="910" fg:w="7"/><text x="73.1083%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="72.8583%" y="517" width="0.5604%" height="15" fill="rgb(218,215,32)" fg:x="910" fg:w="7"/><text x="73.1083%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="73.0184%" y="501" width="0.4003%" height="15" fill="rgb(244,168,53)" fg:x="912" fg:w="5"/><text x="73.2684%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.3387%" y="485" width="0.0801%" height="15" fill="rgb(214,9,36)" fg:x="916" fg:w="1"/><text x="73.5887%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="73.4187%" y="645" width="0.0801%" height="15" fill="rgb(231,4,34)" fg:x="917" fg:w="1"/><text x="73.6687%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="73.4187%" y="629" width="0.0801%" height="15" fill="rgb(210,83,51)" fg:x="917" fg:w="1"/><text x="73.6687%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.4187%" y="613" width="0.0801%" height="15" fill="rgb(224,112,1)" fg:x="917" fg:w="1"/><text x="73.6687%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4187%" y="597" width="0.0801%" height="15" fill="rgb(216,33,41)" fg:x="917" fg:w="1"/><text x="73.6687%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="73.4988%" y="629" width="0.1601%" height="15" fill="rgb(215,179,42)" fg:x="918" fg:w="2"/><text x="73.7488%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="73.4988%" y="613" width="0.1601%" height="15" fill="rgb(205,81,48)" fg:x="918" fg:w="2"/><text x="73.7488%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="73.4988%" y="597" width="0.1601%" height="15" fill="rgb(246,17,30)" fg:x="918" fg:w="2"/><text x="73.7488%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="73.4988%" y="581" width="0.1601%" height="15" fill="rgb(226,19,16)" fg:x="918" fg:w="2"/><text x="73.7488%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="73.5789%" y="565" width="0.0801%" height="15" fill="rgb(207,3,14)" fg:x="919" fg:w="1"/><text x="73.8289%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.5789%" y="549" width="0.0801%" height="15" fill="rgb(226,77,12)" fg:x="919" fg:w="1"/><text x="73.8289%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.5789%" y="533" width="0.0801%" height="15" fill="rgb(226,76,25)" fg:x="919" fg:w="1"/><text x="73.8289%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="73.5789%" y="517" width="0.0801%" height="15" fill="rgb(217,216,25)" fg:x="919" fg:w="1"/><text x="73.8289%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.5789%" y="501" width="0.0801%" height="15" fill="rgb(247,127,42)" fg:x="919" fg:w="1"/><text x="73.8289%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.5789%" y="485" width="0.0801%" height="15" fill="rgb(226,10,34)" fg:x="919" fg:w="1"/><text x="73.8289%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5789%" y="469" width="0.0801%" height="15" fill="rgb(249,78,0)" fg:x="919" fg:w="1"/><text x="73.8289%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5789%" y="453" width="0.0801%" height="15" fill="rgb(226,218,38)" fg:x="919" fg:w="1"/><text x="73.8289%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="73.5789%" y="437" width="0.0801%" height="15" fill="rgb(240,92,1)" fg:x="919" fg:w="1"/><text x="73.8289%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="73.5789%" y="421" width="0.0801%" height="15" fill="rgb(237,224,33)" fg:x="919" fg:w="1"/><text x="73.8289%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="73.5789%" y="405" width="0.0801%" height="15" fill="rgb(211,46,1)" fg:x="919" fg:w="1"/><text x="73.8289%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="73.5789%" y="389" width="0.0801%" height="15" fill="rgb(239,190,4)" fg:x="919" fg:w="1"/><text x="73.8289%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.5789%" y="373" width="0.0801%" height="15" fill="rgb(221,50,22)" fg:x="919" fg:w="1"/><text x="73.8289%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="73.6589%" y="629" width="0.0801%" height="15" fill="rgb(207,176,8)" fg:x="920" fg:w="1"/><text x="73.9089%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="73.6589%" y="613" width="0.0801%" height="15" fill="rgb(244,114,50)" fg:x="920" fg:w="1"/><text x="73.9089%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="73.8191%" y="613" width="0.0801%" height="15" fill="rgb(226,206,19)" fg:x="922" fg:w="1"/><text x="74.0691%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="73.8191%" y="597" width="0.0801%" height="15" fill="rgb(208,199,16)" fg:x="922" fg:w="1"/><text x="74.0691%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="73.8191%" y="581" width="0.0801%" height="15" fill="rgb(208,38,14)" fg:x="922" fg:w="1"/><text x="74.0691%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.8191%" y="565" width="0.0801%" height="15" fill="rgb(221,211,49)" fg:x="922" fg:w="1"/><text x="74.0691%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.8191%" y="549" width="0.0801%" height="15" fill="rgb(227,214,34)" fg:x="922" fg:w="1"/><text x="74.0691%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8191%" y="533" width="0.0801%" height="15" fill="rgb(234,5,54)" fg:x="922" fg:w="1"/><text x="74.0691%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8191%" y="517" width="0.0801%" height="15" fill="rgb(236,215,22)" fg:x="922" fg:w="1"/><text x="74.0691%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8191%" y="501" width="0.0801%" height="15" fill="rgb(244,0,11)" fg:x="922" fg:w="1"/><text x="74.0691%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8191%" y="485" width="0.0801%" height="15" fill="rgb(212,140,16)" fg:x="922" fg:w="1"/><text x="74.0691%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8191%" y="469" width="0.0801%" height="15" fill="rgb(238,101,37)" fg:x="922" fg:w="1"/><text x="74.0691%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="73.8991%" y="613" width="0.1601%" height="15" fill="rgb(247,46,3)" fg:x="923" fg:w="2"/><text x="74.1491%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="73.8991%" y="597" width="0.1601%" height="15" fill="rgb(208,106,19)" fg:x="923" fg:w="2"/><text x="74.1491%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.8991%" y="581" width="0.1601%" height="15" fill="rgb(240,227,15)" fg:x="923" fg:w="2"/><text x="74.1491%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9792%" y="565" width="0.0801%" height="15" fill="rgb(226,173,6)" fg:x="924" fg:w="1"/><text x="74.2292%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.0592%" y="517" width="0.0801%" height="15" fill="rgb(213,191,1)" fg:x="925" fg:w="1"/><text x="74.3092%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.0592%" y="501" width="0.0801%" height="15" fill="rgb(246,51,36)" fg:x="925" fg:w="1"/><text x="74.3092%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.0592%" y="485" width="0.0801%" height="15" fill="rgb(238,40,32)" fg:x="925" fg:w="1"/><text x="74.3092%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.0592%" y="469" width="0.0801%" height="15" fill="rgb(208,126,27)" fg:x="925" fg:w="1"/><text x="74.3092%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0592%" y="453" width="0.0801%" height="15" fill="rgb(227,117,38)" fg:x="925" fg:w="1"/><text x="74.3092%" y="463.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.72%)</title><rect x="73.4988%" y="645" width="0.7206%" height="15" fill="rgb(232,16,1)" fg:x="918" fg:w="9"/><text x="73.7488%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="73.7390%" y="629" width="0.4804%" height="15" fill="rgb(212,111,31)" fg:x="921" fg:w="6"/><text x="73.9890%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="74.0592%" y="613" width="0.1601%" height="15" fill="rgb(253,227,2)" fg:x="925" fg:w="2"/><text x="74.3092%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="74.0592%" y="597" width="0.1601%" height="15" fill="rgb(216,122,17)" fg:x="925" fg:w="2"/><text x="74.3092%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="74.0592%" y="581" width="0.1601%" height="15" fill="rgb(227,37,2)" fg:x="925" fg:w="2"/><text x="74.3092%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="74.0592%" y="565" width="0.1601%" height="15" fill="rgb(244,113,40)" fg:x="925" fg:w="2"/><text x="74.3092%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.0592%" y="549" width="0.1601%" height="15" fill="rgb(217,193,34)" fg:x="925" fg:w="2"/><text x="74.3092%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.0592%" y="533" width="0.1601%" height="15" fill="rgb(212,223,15)" fg:x="925" fg:w="2"/><text x="74.3092%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1393%" y="517" width="0.0801%" height="15" fill="rgb(238,143,18)" fg:x="926" fg:w="1"/><text x="74.3893%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1393%" y="501" width="0.0801%" height="15" fill="rgb(231,18,49)" fg:x="926" fg:w="1"/><text x="74.3893%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1393%" y="485" width="0.0801%" height="15" fill="rgb(249,122,4)" fg:x="926" fg:w="1"/><text x="74.3893%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1393%" y="469" width="0.0801%" height="15" fill="rgb(245,138,54)" fg:x="926" fg:w="1"/><text x="74.3893%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.1393%" y="453" width="0.0801%" height="15" fill="rgb(218,130,18)" fg:x="926" fg:w="1"/><text x="74.3893%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1393%" y="437" width="0.0801%" height="15" fill="rgb(235,94,13)" fg:x="926" fg:w="1"/><text x="74.3893%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1393%" y="421" width="0.0801%" height="15" fill="rgb(247,143,5)" fg:x="926" fg:w="1"/><text x="74.3893%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1393%" y="405" width="0.0801%" height="15" fill="rgb(212,59,54)" fg:x="926" fg:w="1"/><text x="74.3893%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1393%" y="389" width="0.0801%" height="15" fill="rgb(206,121,24)" fg:x="926" fg:w="1"/><text x="74.3893%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1393%" y="373" width="0.0801%" height="15" fill="rgb(235,38,8)" fg:x="926" fg:w="1"/><text x="74.3893%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.1393%" y="357" width="0.0801%" height="15" fill="rgb(227,102,26)" fg:x="926" fg:w="1"/><text x="74.3893%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2194%" y="501" width="0.0801%" height="15" fill="rgb(240,183,46)" fg:x="927" fg:w="1"/><text x="74.4694%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="74.2194%" y="645" width="0.1601%" height="15" fill="rgb(208,177,23)" fg:x="927" fg:w="2"/><text x="74.4694%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="74.2194%" y="629" width="0.1601%" height="15" fill="rgb(216,152,5)" fg:x="927" fg:w="2"/><text x="74.4694%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.2194%" y="613" width="0.1601%" height="15" fill="rgb(238,199,2)" fg:x="927" fg:w="2"/><text x="74.4694%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.2194%" y="597" width="0.1601%" height="15" fill="rgb(235,142,28)" fg:x="927" fg:w="2"/><text x="74.4694%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.2194%" y="581" width="0.1601%" height="15" fill="rgb(225,97,25)" fg:x="927" fg:w="2"/><text x="74.4694%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.2194%" y="565" width="0.1601%" height="15" fill="rgb(208,75,46)" fg:x="927" fg:w="2"/><text x="74.4694%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.2194%" y="549" width="0.1601%" height="15" fill="rgb(240,136,15)" fg:x="927" fg:w="2"/><text x="74.4694%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.2194%" y="533" width="0.1601%" height="15" fill="rgb(235,36,27)" fg:x="927" fg:w="2"/><text x="74.4694%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.2194%" y="517" width="0.1601%" height="15" fill="rgb(231,132,23)" fg:x="927" fg:w="2"/><text x="74.4694%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2994%" y="501" width="0.0801%" height="15" fill="rgb(205,208,20)" fg:x="928" fg:w="1"/><text x="74.5494%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2994%" y="485" width="0.0801%" height="15" fill="rgb(215,26,40)" fg:x="928" fg:w="1"/><text x="74.5494%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.2994%" y="469" width="0.0801%" height="15" fill="rgb(238,183,34)" fg:x="928" fg:w="1"/><text x="74.5494%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.2994%" y="453" width="0.0801%" height="15" fill="rgb(207,96,10)" fg:x="928" fg:w="1"/><text x="74.5494%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.2994%" y="437" width="0.0801%" height="15" fill="rgb(218,88,6)" fg:x="928" fg:w="1"/><text x="74.5494%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="74.2994%" y="421" width="0.0801%" height="15" fill="rgb(217,22,49)" fg:x="928" fg:w="1"/><text x="74.5494%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.2994%" y="405" width="0.0801%" height="15" fill="rgb(240,195,14)" fg:x="928" fg:w="1"/><text x="74.5494%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="74.3795%" y="629" width="0.0801%" height="15" fill="rgb(229,48,27)" fg:x="929" fg:w="1"/><text x="74.6295%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="74.3795%" y="613" width="0.0801%" height="15" fill="rgb(220,194,45)" fg:x="929" fg:w="1"/><text x="74.6295%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="74.3795%" y="597" width="0.0801%" height="15" fill="rgb(252,60,20)" fg:x="929" fg:w="1"/><text x="74.6295%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="74.3795%" y="581" width="0.0801%" height="15" fill="rgb(244,169,33)" fg:x="929" fg:w="1"/><text x="74.6295%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="74.3795%" y="565" width="0.0801%" height="15" fill="rgb(234,141,34)" fg:x="929" fg:w="1"/><text x="74.6295%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="74.3795%" y="549" width="0.0801%" height="15" fill="rgb(241,141,9)" fg:x="929" fg:w="1"/><text x="74.6295%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3795%" y="533" width="0.0801%" height="15" fill="rgb(246,27,36)" fg:x="929" fg:w="1"/><text x="74.6295%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3795%" y="517" width="0.0801%" height="15" fill="rgb(216,188,42)" fg:x="929" fg:w="1"/><text x="74.6295%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3795%" y="501" width="0.0801%" height="15" fill="rgb(234,205,22)" fg:x="929" fg:w="1"/><text x="74.6295%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3795%" y="485" width="0.0801%" height="15" fill="rgb(210,202,32)" fg:x="929" fg:w="1"/><text x="74.6295%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::model::MovingHooks as plugins_core::moving::model::AfterMoveHook&gt;::after_move (1 samples, 0.08%)</title><rect x="74.4596%" y="613" width="0.0801%" height="15" fill="rgb(217,0,48)" fg:x="930" fg:w="1"/><text x="74.7096%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="74.5396%" y="613" width="0.0801%" height="15" fill="rgb(207,115,37)" fg:x="931" fg:w="1"/><text x="74.7896%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5396%" y="597" width="0.0801%" height="15" fill="rgb(237,221,44)" fg:x="931" fg:w="1"/><text x="74.7896%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5396%" y="581" width="0.0801%" height="15" fill="rgb(249,78,2)" fg:x="931" fg:w="1"/><text x="74.7896%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (53 samples, 4.24%)</title><rect x="70.4564%" y="661" width="4.2434%" height="15" fill="rgb(211,169,23)" fg:x="880" fg:w="53"/><text x="70.7064%" y="671.50">plugi..</text></g><g><title>plugins_core::build::Build::occupying (4 samples, 0.32%)</title><rect x="74.3795%" y="645" width="0.3203%" height="15" fill="rgb(207,116,29)" fg:x="929" fg:w="4"/><text x="74.6295%" y="655.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="74.4596%" y="629" width="0.2402%" height="15" fill="rgb(240,84,33)" fg:x="930" fg:w="3"/><text x="74.7096%" y="639.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="74.6197%" y="613" width="0.0801%" height="15" fill="rgb(229,224,31)" fg:x="932" fg:w="1"/><text x="74.8697%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="74.6197%" y="597" width="0.0801%" height="15" fill="rgb(227,90,31)" fg:x="932" fg:w="1"/><text x="74.8697%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="74.6197%" y="581" width="0.0801%" height="15" fill="rgb(249,22,41)" fg:x="932" fg:w="1"/><text x="74.8697%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.6197%" y="565" width="0.0801%" height="15" fill="rgb(239,65,11)" fg:x="932" fg:w="1"/><text x="74.8697%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.6197%" y="549" width="0.0801%" height="15" fill="rgb(205,5,23)" fg:x="932" fg:w="1"/><text x="74.8697%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.6197%" y="533" width="0.0801%" height="15" fill="rgb(254,78,52)" fg:x="932" fg:w="1"/><text x="74.8697%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6197%" y="517" width="0.0801%" height="15" fill="rgb(214,156,33)" fg:x="932" fg:w="1"/><text x="74.8697%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="74.6998%" y="629" width="0.0801%" height="15" fill="rgb(208,20,30)" fg:x="933" fg:w="1"/><text x="74.9498%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="74.6998%" y="613" width="0.0801%" height="15" fill="rgb(223,133,18)" fg:x="933" fg:w="1"/><text x="74.9498%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="74.6998%" y="661" width="0.1601%" height="15" fill="rgb(222,91,41)" fg:x="933" fg:w="2"/><text x="74.9498%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="74.6998%" y="645" width="0.1601%" height="15" fill="rgb(247,137,48)" fg:x="933" fg:w="2"/><text x="74.9498%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="74.7798%" y="629" width="0.0801%" height="15" fill="rgb(239,156,11)" fg:x="934" fg:w="1"/><text x="75.0298%" y="639.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="74.7798%" y="613" width="0.0801%" height="15" fill="rgb(244,56,26)" fg:x="934" fg:w="1"/><text x="75.0298%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9400%" y="485" width="0.0801%" height="15" fill="rgb(205,131,49)" fg:x="936" fg:w="1"/><text x="75.1900%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.9400%" y="469" width="0.0801%" height="15" fill="rgb(224,0,2)" fg:x="936" fg:w="1"/><text x="75.1900%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.9400%" y="581" width="0.1601%" height="15" fill="rgb(247,59,36)" fg:x="936" fg:w="2"/><text x="75.1900%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.9400%" y="565" width="0.1601%" height="15" fill="rgb(215,4,47)" fg:x="936" fg:w="2"/><text x="75.1900%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.9400%" y="549" width="0.1601%" height="15" fill="rgb(242,72,42)" fg:x="936" fg:w="2"/><text x="75.1900%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.9400%" y="533" width="0.1601%" height="15" fill="rgb(232,145,44)" fg:x="936" fg:w="2"/><text x="75.1900%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.9400%" y="517" width="0.1601%" height="15" fill="rgb(205,108,43)" fg:x="936" fg:w="2"/><text x="75.1900%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.9400%" y="501" width="0.1601%" height="15" fill="rgb(215,190,17)" fg:x="936" fg:w="2"/><text x="75.1900%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0200%" y="485" width="0.0801%" height="15" fill="rgb(223,90,34)" fg:x="937" fg:w="1"/><text x="75.2700%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0200%" y="469" width="0.0801%" height="15" fill="rgb(216,25,0)" fg:x="937" fg:w="1"/><text x="75.2700%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.0200%" y="453" width="0.0801%" height="15" fill="rgb(223,51,28)" fg:x="937" fg:w="1"/><text x="75.2700%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.0200%" y="437" width="0.0801%" height="15" fill="rgb(227,131,7)" fg:x="937" fg:w="1"/><text x="75.2700%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.0200%" y="421" width="0.0801%" height="15" fill="rgb(216,72,36)" fg:x="937" fg:w="1"/><text x="75.2700%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0200%" y="405" width="0.0801%" height="15" fill="rgb(243,158,40)" fg:x="937" fg:w="1"/><text x="75.2700%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0200%" y="389" width="0.0801%" height="15" fill="rgb(218,60,54)" fg:x="937" fg:w="1"/><text x="75.2700%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.0200%" y="373" width="0.0801%" height="15" fill="rgb(230,15,46)" fg:x="937" fg:w="1"/><text x="75.2700%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.0200%" y="357" width="0.0801%" height="15" fill="rgb(250,22,26)" fg:x="937" fg:w="1"/><text x="75.2700%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.0200%" y="341" width="0.0801%" height="15" fill="rgb(239,194,40)" fg:x="937" fg:w="1"/><text x="75.2700%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.0200%" y="325" width="0.0801%" height="15" fill="rgb(219,62,9)" fg:x="937" fg:w="1"/><text x="75.2700%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0200%" y="309" width="0.0801%" height="15" fill="rgb(228,45,21)" fg:x="937" fg:w="1"/><text x="75.2700%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.1001%" y="453" width="0.0801%" height="15" fill="rgb(242,56,44)" fg:x="938" fg:w="1"/><text x="75.3501%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1001%" y="437" width="0.0801%" height="15" fill="rgb(239,170,14)" fg:x="938" fg:w="1"/><text x="75.3501%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2602%" y="437" width="0.0801%" height="15" fill="rgb(236,150,13)" fg:x="940" fg:w="1"/><text x="75.5102%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2602%" y="421" width="0.0801%" height="15" fill="rgb(228,15,30)" fg:x="940" fg:w="1"/><text x="75.5102%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2602%" y="405" width="0.0801%" height="15" fill="rgb(217,43,28)" fg:x="940" fg:w="1"/><text x="75.5102%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="74.8599%" y="645" width="0.5604%" height="15" fill="rgb(246,223,1)" fg:x="935" fg:w="7"/><text x="75.1099%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="74.9400%" y="629" width="0.4804%" height="15" fill="rgb(247,103,7)" fg:x="936" fg:w="6"/><text x="75.1900%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="74.9400%" y="613" width="0.4804%" height="15" fill="rgb(205,105,39)" fg:x="936" fg:w="6"/><text x="75.1900%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="74.9400%" y="597" width="0.4804%" height="15" fill="rgb(216,134,18)" fg:x="936" fg:w="6"/><text x="75.1900%" y="607.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="75.1001%" y="581" width="0.3203%" height="15" fill="rgb(226,139,50)" fg:x="938" fg:w="4"/><text x="75.3501%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="75.1001%" y="565" width="0.3203%" height="15" fill="rgb(251,152,38)" fg:x="938" fg:w="4"/><text x="75.3501%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="75.1001%" y="549" width="0.3203%" height="15" fill="rgb(222,63,15)" fg:x="938" fg:w="4"/><text x="75.3501%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="75.1001%" y="533" width="0.3203%" height="15" fill="rgb(212,198,28)" fg:x="938" fg:w="4"/><text x="75.3501%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="75.1001%" y="517" width="0.3203%" height="15" fill="rgb(216,93,38)" fg:x="938" fg:w="4"/><text x="75.3501%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="75.1001%" y="501" width="0.3203%" height="15" fill="rgb(247,202,44)" fg:x="938" fg:w="4"/><text x="75.3501%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="75.1001%" y="485" width="0.3203%" height="15" fill="rgb(237,204,46)" fg:x="938" fg:w="4"/><text x="75.3501%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="75.1001%" y="469" width="0.3203%" height="15" fill="rgb(224,98,48)" fg:x="938" fg:w="4"/><text x="75.3501%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="75.1801%" y="453" width="0.2402%" height="15" fill="rgb(247,105,21)" fg:x="939" fg:w="3"/><text x="75.4301%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="75.3403%" y="437" width="0.0801%" height="15" fill="rgb(212,137,52)" fg:x="941" fg:w="1"/><text x="75.5903%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.3403%" y="421" width="0.0801%" height="15" fill="rgb(223,76,33)" fg:x="941" fg:w="1"/><text x="75.5903%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3403%" y="405" width="0.0801%" height="15" fill="rgb(209,156,27)" fg:x="941" fg:w="1"/><text x="75.5903%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3403%" y="389" width="0.0801%" height="15" fill="rgb(249,81,54)" fg:x="941" fg:w="1"/><text x="75.5903%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3403%" y="373" width="0.0801%" height="15" fill="rgb(241,46,29)" fg:x="941" fg:w="1"/><text x="75.5903%" y="383.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (93 samples, 7.45%)</title><rect x="68.2146%" y="677" width="7.4460%" height="15" fill="rgb(213,193,39)" fg:x="852" fg:w="93"/><text x="68.4646%" y="687.50">&lt;tests::Ho..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (10 samples, 0.80%)</title><rect x="74.8599%" y="661" width="0.8006%" height="15" fill="rgb(214,85,16)" fg:x="935" fg:w="10"/><text x="75.1099%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="75.4203%" y="645" width="0.2402%" height="15" fill="rgb(216,184,17)" fg:x="942" fg:w="3"/><text x="75.6703%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="75.5004%" y="629" width="0.1601%" height="15" fill="rgb(254,219,29)" fg:x="943" fg:w="2"/><text x="75.7504%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="75.5004%" y="613" width="0.1601%" height="15" fill="rgb(209,148,34)" fg:x="943" fg:w="2"/><text x="75.7504%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="75.5004%" y="597" width="0.1601%" height="15" fill="rgb(253,215,11)" fg:x="943" fg:w="2"/><text x="75.7504%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5805%" y="581" width="0.0801%" height="15" fill="rgb(232,126,20)" fg:x="944" fg:w="1"/><text x="75.8305%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5805%" y="565" width="0.0801%" height="15" fill="rgb(248,118,51)" fg:x="944" fg:w="1"/><text x="75.8305%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5805%" y="549" width="0.0801%" height="15" fill="rgb(226,121,21)" fg:x="944" fg:w="1"/><text x="75.8305%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5805%" y="533" width="0.0801%" height="15" fill="rgb(216,128,16)" fg:x="944" fg:w="1"/><text x="75.8305%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.5805%" y="517" width="0.0801%" height="15" fill="rgb(205,17,9)" fg:x="944" fg:w="1"/><text x="75.8305%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5805%" y="501" width="0.0801%" height="15" fill="rgb(206,197,21)" fg:x="944" fg:w="1"/><text x="75.8305%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5805%" y="485" width="0.0801%" height="15" fill="rgb(212,202,9)" fg:x="944" fg:w="1"/><text x="75.8305%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5805%" y="469" width="0.0801%" height="15" fill="rgb(241,131,50)" fg:x="944" fg:w="1"/><text x="75.8305%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5805%" y="453" width="0.0801%" height="15" fill="rgb(228,115,51)" fg:x="944" fg:w="1"/><text x="75.8305%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5805%" y="437" width="0.0801%" height="15" fill="rgb(237,209,8)" fg:x="944" fg:w="1"/><text x="75.8305%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="75.6605%" y="661" width="0.1601%" height="15" fill="rgb(241,121,28)" fg:x="945" fg:w="2"/><text x="75.9105%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7406%" y="645" width="0.0801%" height="15" fill="rgb(238,194,51)" fg:x="946" fg:w="1"/><text x="75.9906%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7406%" y="629" width="0.0801%" height="15" fill="rgb(208,41,39)" fg:x="946" fg:w="1"/><text x="75.9906%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.7406%" y="613" width="0.0801%" height="15" fill="rgb(223,95,44)" fg:x="946" fg:w="1"/><text x="75.9906%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.7406%" y="597" width="0.0801%" height="15" fill="rgb(253,98,40)" fg:x="946" fg:w="1"/><text x="75.9906%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.7406%" y="581" width="0.0801%" height="15" fill="rgb(210,5,12)" fg:x="946" fg:w="1"/><text x="75.9906%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="75.7406%" y="565" width="0.0801%" height="15" fill="rgb(233,201,23)" fg:x="946" fg:w="1"/><text x="75.9906%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="75.7406%" y="549" width="0.0801%" height="15" fill="rgb(251,68,15)" fg:x="946" fg:w="1"/><text x="75.9906%" y="559.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8207%" y="581" width="0.0801%" height="15" fill="rgb(243,10,46)" fg:x="947" fg:w="1"/><text x="76.0707%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8207%" y="565" width="0.0801%" height="15" fill="rgb(253,130,44)" fg:x="947" fg:w="1"/><text x="76.0707%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8207%" y="549" width="0.0801%" height="15" fill="rgb(244,5,26)" fg:x="947" fg:w="1"/><text x="76.0707%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8207%" y="533" width="0.0801%" height="15" fill="rgb(220,126,20)" fg:x="947" fg:w="1"/><text x="76.0707%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8207%" y="517" width="0.0801%" height="15" fill="rgb(212,188,29)" fg:x="947" fg:w="1"/><text x="76.0707%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (2 samples, 0.16%)</title><rect x="75.8207%" y="645" width="0.1601%" height="15" fill="rgb(227,194,48)" fg:x="947" fg:w="2"/><text x="76.0707%" y="655.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="75.8207%" y="629" width="0.1601%" height="15" fill="rgb(245,64,28)" fg:x="947" fg:w="2"/><text x="76.0707%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="75.8207%" y="613" width="0.1601%" height="15" fill="rgb(205,44,7)" fg:x="947" fg:w="2"/><text x="76.0707%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.8207%" y="597" width="0.1601%" height="15" fill="rgb(213,193,11)" fg:x="947" fg:w="2"/><text x="76.0707%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9007%" y="581" width="0.0801%" height="15" fill="rgb(238,157,6)" fg:x="948" fg:w="1"/><text x="76.1507%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9007%" y="565" width="0.0801%" height="15" fill="rgb(222,73,7)" fg:x="948" fg:w="1"/><text x="76.1507%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.9007%" y="549" width="0.0801%" height="15" fill="rgb(224,78,15)" fg:x="948" fg:w="1"/><text x="76.1507%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.9007%" y="533" width="0.0801%" height="15" fill="rgb(218,149,46)" fg:x="948" fg:w="1"/><text x="76.1507%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="75.9007%" y="517" width="0.0801%" height="15" fill="rgb(218,175,44)" fg:x="948" fg:w="1"/><text x="76.1507%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9007%" y="501" width="0.0801%" height="15" fill="rgb(215,183,45)" fg:x="948" fg:w="1"/><text x="76.1507%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9007%" y="485" width="0.0801%" height="15" fill="rgb(226,116,37)" fg:x="948" fg:w="1"/><text x="76.1507%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.9007%" y="469" width="0.0801%" height="15" fill="rgb(252,224,12)" fg:x="948" fg:w="1"/><text x="76.1507%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.9808%" y="597" width="0.0801%" height="15" fill="rgb(232,212,21)" fg:x="949" fg:w="1"/><text x="76.2308%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.9808%" y="581" width="0.0801%" height="15" fill="rgb(226,191,16)" fg:x="949" fg:w="1"/><text x="76.2308%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.9808%" y="565" width="0.0801%" height="15" fill="rgb(231,156,11)" fg:x="949" fg:w="1"/><text x="76.2308%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.9808%" y="549" width="0.0801%" height="15" fill="rgb(225,134,49)" fg:x="949" fg:w="1"/><text x="76.2308%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.9808%" y="533" width="0.0801%" height="15" fill="rgb(254,55,32)" fg:x="949" fg:w="1"/><text x="76.2308%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="75.9808%" y="517" width="0.0801%" height="15" fill="rgb(242,195,29)" fg:x="949" fg:w="1"/><text x="76.2308%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="75.9808%" y="501" width="0.0801%" height="15" fill="rgb(210,155,20)" fg:x="949" fg:w="1"/><text x="76.2308%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="76.0608%" y="581" width="0.1601%" height="15" fill="rgb(243,170,23)" fg:x="950" fg:w="2"/><text x="76.3108%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.0608%" y="565" width="0.1601%" height="15" fill="rgb(242,197,51)" fg:x="950" fg:w="2"/><text x="76.3108%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.0608%" y="549" width="0.1601%" height="15" fill="rgb(248,48,13)" fg:x="950" fg:w="2"/><text x="76.3108%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.1409%" y="533" width="0.0801%" height="15" fill="rgb(221,185,15)" fg:x="951" fg:w="1"/><text x="76.3909%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1409%" y="517" width="0.0801%" height="15" fill="rgb(244,49,7)" fg:x="951" fg:w="1"/><text x="76.3909%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.1409%" y="501" width="0.0801%" height="15" fill="rgb(213,182,52)" fg:x="951" fg:w="1"/><text x="76.3909%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.1409%" y="485" width="0.0801%" height="15" fill="rgb(209,15,45)" fg:x="951" fg:w="1"/><text x="76.3909%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.1409%" y="469" width="0.0801%" height="15" fill="rgb(233,23,44)" fg:x="951" fg:w="1"/><text x="76.3909%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="76.3010%" y="565" width="0.2402%" height="15" fill="rgb(220,182,30)" fg:x="953" fg:w="3"/><text x="76.5510%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="76.3010%" y="549" width="0.2402%" height="15" fill="rgb(219,116,33)" fg:x="953" fg:w="3"/><text x="76.5510%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="76.3010%" y="533" width="0.2402%" height="15" fill="rgb(231,15,21)" fg:x="953" fg:w="3"/><text x="76.5510%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="76.3010%" y="517" width="0.2402%" height="15" fill="rgb(238,119,25)" fg:x="953" fg:w="3"/><text x="76.5510%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.4612%" y="501" width="0.0801%" height="15" fill="rgb(232,30,39)" fg:x="955" fg:w="1"/><text x="76.7112%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.4612%" y="485" width="0.0801%" height="15" fill="rgb(241,26,30)" fg:x="955" fg:w="1"/><text x="76.7112%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5412%" y="517" width="0.0801%" height="15" fill="rgb(234,154,4)" fg:x="956" fg:w="1"/><text x="76.7912%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.5412%" y="501" width="0.0801%" height="15" fill="rgb(229,199,39)" fg:x="956" fg:w="1"/><text x="76.7912%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="76.5412%" y="549" width="0.1601%" height="15" fill="rgb(236,213,10)" fg:x="956" fg:w="2"/><text x="76.7912%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="76.5412%" y="533" width="0.1601%" height="15" fill="rgb(247,28,19)" fg:x="956" fg:w="2"/><text x="76.7912%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.6213%" y="517" width="0.0801%" height="15" fill="rgb(239,199,24)" fg:x="957" fg:w="1"/><text x="76.8713%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.7014%" y="549" width="0.0801%" height="15" fill="rgb(246,122,13)" fg:x="958" fg:w="1"/><text x="76.9514%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.7814%" y="517" width="0.0801%" height="15" fill="rgb(210,203,29)" fg:x="959" fg:w="1"/><text x="77.0314%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.7814%" y="501" width="0.0801%" height="15" fill="rgb(218,4,50)" fg:x="959" fg:w="1"/><text x="77.0314%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.8615%" y="485" width="0.0801%" height="15" fill="rgb(236,142,48)" fg:x="960" fg:w="1"/><text x="77.1115%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="76.8615%" y="501" width="0.1601%" height="15" fill="rgb(245,173,2)" fg:x="960" fg:w="2"/><text x="77.1115%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="76.9416%" y="485" width="0.0801%" height="15" fill="rgb(244,196,18)" fg:x="961" fg:w="1"/><text x="77.1916%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="76.7814%" y="549" width="0.3203%" height="15" fill="rgb(221,27,33)" fg:x="959" fg:w="4"/><text x="77.0314%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="76.7814%" y="533" width="0.3203%" height="15" fill="rgb(210,206,16)" fg:x="959" fg:w="4"/><text x="77.0314%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="76.8615%" y="517" width="0.2402%" height="15" fill="rgb(238,161,34)" fg:x="960" fg:w="3"/><text x="77.1115%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.0216%" y="501" width="0.0801%" height="15" fill="rgb(243,118,39)" fg:x="962" fg:w="1"/><text x="77.2716%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="76.5412%" y="565" width="0.7206%" height="15" fill="rgb(234,126,9)" fg:x="956" fg:w="9"/><text x="76.7912%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.1017%" y="549" width="0.1601%" height="15" fill="rgb(234,167,42)" fg:x="963" fg:w="2"/><text x="77.3517%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.1017%" y="533" width="0.1601%" height="15" fill="rgb(238,54,48)" fg:x="963" fg:w="2"/><text x="77.3517%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.1017%" y="517" width="0.1601%" height="15" fill="rgb(226,105,2)" fg:x="963" fg:w="2"/><text x="77.3517%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="76.2210%" y="581" width="1.2010%" height="15" fill="rgb(223,95,23)" fg:x="952" fg:w="15"/><text x="76.4710%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.2618%" y="565" width="0.1601%" height="15" fill="rgb(249,212,19)" fg:x="965" fg:w="2"/><text x="77.5118%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.2618%" y="549" width="0.1601%" height="15" fill="rgb(234,158,54)" fg:x="965" fg:w="2"/><text x="77.5118%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.2618%" y="533" width="0.1601%" height="15" fill="rgb(247,114,32)" fg:x="965" fg:w="2"/><text x="77.5118%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="77.2618%" y="517" width="0.1601%" height="15" fill="rgb(250,68,44)" fg:x="965" fg:w="2"/><text x="77.5118%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.3419%" y="501" width="0.0801%" height="15" fill="rgb(242,3,15)" fg:x="966" fg:w="1"/><text x="77.5919%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.3419%" y="485" width="0.0801%" height="15" fill="rgb(223,110,32)" fg:x="966" fg:w="1"/><text x="77.5919%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.44%)</title><rect x="76.0608%" y="597" width="1.4412%" height="15" fill="rgb(216,26,54)" fg:x="950" fg:w="18"/><text x="76.3108%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4219%" y="581" width="0.0801%" height="15" fill="rgb(209,145,42)" fg:x="967" fg:w="1"/><text x="77.6719%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.4219%" y="565" width="0.0801%" height="15" fill="rgb(240,111,53)" fg:x="967" fg:w="1"/><text x="77.6719%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.4219%" y="549" width="0.0801%" height="15" fill="rgb(209,101,4)" fg:x="967" fg:w="1"/><text x="77.6719%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.5020%" y="597" width="0.0801%" height="15" fill="rgb(231,74,29)" fg:x="968" fg:w="1"/><text x="77.7520%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.5020%" y="581" width="0.0801%" height="15" fill="rgb(223,12,12)" fg:x="968" fg:w="1"/><text x="77.7520%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.5020%" y="565" width="0.0801%" height="15" fill="rgb(207,162,2)" fg:x="968" fg:w="1"/><text x="77.7520%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.5020%" y="549" width="0.0801%" height="15" fill="rgb(230,152,0)" fg:x="968" fg:w="1"/><text x="77.7520%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.5020%" y="533" width="0.0801%" height="15" fill="rgb(254,156,19)" fg:x="968" fg:w="1"/><text x="77.7520%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.5020%" y="517" width="0.0801%" height="15" fill="rgb(250,28,0)" fg:x="968" fg:w="1"/><text x="77.7520%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.5020%" y="501" width="0.0801%" height="15" fill="rgb(253,27,5)" fg:x="968" fg:w="1"/><text x="77.7520%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.5020%" y="485" width="0.0801%" height="15" fill="rgb(244,154,7)" fg:x="968" fg:w="1"/><text x="77.7520%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6621%" y="533" width="0.0801%" height="15" fill="rgb(242,108,21)" fg:x="970" fg:w="1"/><text x="77.9121%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.7422%" y="533" width="0.0801%" height="15" fill="rgb(254,200,38)" fg:x="971" fg:w="1"/><text x="77.9922%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="77.8223%" y="501" width="0.1601%" height="15" fill="rgb(250,145,41)" fg:x="972" fg:w="2"/><text x="78.0723%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.9023%" y="485" width="0.0801%" height="15" fill="rgb(235,136,31)" fg:x="973" fg:w="1"/><text x="78.1523%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="78.0624%" y="485" width="0.1601%" height="15" fill="rgb(215,13,18)" fg:x="975" fg:w="2"/><text x="78.3124%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="77.6621%" y="565" width="0.6405%" height="15" fill="rgb(238,199,12)" fg:x="970" fg:w="8"/><text x="77.9121%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="77.6621%" y="549" width="0.6405%" height="15" fill="rgb(242,179,49)" fg:x="970" fg:w="8"/><text x="77.9121%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="77.8223%" y="533" width="0.4804%" height="15" fill="rgb(214,10,44)" fg:x="972" fg:w="6"/><text x="78.0723%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="77.8223%" y="517" width="0.4804%" height="15" fill="rgb(229,181,11)" fg:x="972" fg:w="6"/><text x="78.0723%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="77.9824%" y="501" width="0.3203%" height="15" fill="rgb(244,155,10)" fg:x="974" fg:w="4"/><text x="78.2324%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="78.2226%" y="485" width="0.0801%" height="15" fill="rgb(254,13,48)" fg:x="977" fg:w="1"/><text x="78.4726%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.2226%" y="469" width="0.0801%" height="15" fill="rgb(210,164,6)" fg:x="977" fg:w="1"/><text x="78.4726%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.2226%" y="453" width="0.0801%" height="15" fill="rgb(216,187,40)" fg:x="977" fg:w="1"/><text x="78.4726%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.3026%" y="565" width="0.0801%" height="15" fill="rgb(208,143,21)" fg:x="978" fg:w="1"/><text x="78.5526%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3026%" y="549" width="0.0801%" height="15" fill="rgb(211,73,41)" fg:x="978" fg:w="1"/><text x="78.5526%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="78.4628%" y="517" width="0.1601%" height="15" fill="rgb(244,69,21)" fg:x="980" fg:w="2"/><text x="78.7128%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.5428%" y="501" width="0.0801%" height="15" fill="rgb(230,152,32)" fg:x="981" fg:w="1"/><text x="78.7928%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.5428%" y="485" width="0.0801%" height="15" fill="rgb(208,110,18)" fg:x="981" fg:w="1"/><text x="78.7928%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.5428%" y="469" width="0.0801%" height="15" fill="rgb(214,201,49)" fg:x="981" fg:w="1"/><text x="78.7928%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="78.4628%" y="549" width="0.2402%" height="15" fill="rgb(253,153,27)" fg:x="980" fg:w="3"/><text x="78.7128%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="78.4628%" y="533" width="0.2402%" height="15" fill="rgb(238,61,11)" fg:x="980" fg:w="3"/><text x="78.7128%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.6229%" y="517" width="0.0801%" height="15" fill="rgb(227,84,2)" fg:x="982" fg:w="1"/><text x="78.8729%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7030%" y="517" width="0.0801%" height="15" fill="rgb(233,52,8)" fg:x="983" fg:w="1"/><text x="78.9530%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7030%" y="501" width="0.0801%" height="15" fill="rgb(209,136,13)" fg:x="983" fg:w="1"/><text x="78.9530%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7030%" y="485" width="0.0801%" height="15" fill="rgb(229,86,25)" fg:x="983" fg:w="1"/><text x="78.9530%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.7030%" y="469" width="0.0801%" height="15" fill="rgb(235,47,16)" fg:x="983" fg:w="1"/><text x="78.9530%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.7030%" y="453" width="0.0801%" height="15" fill="rgb(231,186,4)" fg:x="983" fg:w="1"/><text x="78.9530%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.7030%" y="437" width="0.0801%" height="15" fill="rgb(209,213,23)" fg:x="983" fg:w="1"/><text x="78.9530%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.7030%" y="421" width="0.0801%" height="15" fill="rgb(212,142,47)" fg:x="983" fg:w="1"/><text x="78.9530%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.7030%" y="405" width="0.0801%" height="15" fill="rgb(251,86,24)" fg:x="983" fg:w="1"/><text x="78.9530%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.7030%" y="389" width="0.0801%" height="15" fill="rgb(206,217,17)" fg:x="983" fg:w="1"/><text x="78.9530%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.7030%" y="373" width="0.0801%" height="15" fill="rgb(248,92,38)" fg:x="983" fg:w="1"/><text x="78.9530%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.7030%" y="357" width="0.0801%" height="15" fill="rgb(214,25,29)" fg:x="983" fg:w="1"/><text x="78.9530%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.7030%" y="341" width="0.0801%" height="15" fill="rgb(245,117,13)" fg:x="983" fg:w="1"/><text x="78.9530%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7030%" y="325" width="0.0801%" height="15" fill="rgb(205,169,9)" fg:x="983" fg:w="1"/><text x="78.9530%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (16 samples, 1.28%)</title><rect x="77.5821%" y="581" width="1.2810%" height="15" fill="rgb(223,134,38)" fg:x="969" fg:w="16"/><text x="77.8321%" y="591.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="78.3827%" y="565" width="0.4804%" height="15" fill="rgb(249,129,49)" fg:x="979" fg:w="6"/><text x="78.6327%" y="575.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="78.7030%" y="549" width="0.1601%" height="15" fill="rgb(229,157,45)" fg:x="983" fg:w="2"/><text x="78.9530%" y="559.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="78.7030%" y="533" width="0.1601%" height="15" fill="rgb(232,159,11)" fg:x="983" fg:w="2"/><text x="78.9530%" y="543.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="78.7830%" y="517" width="0.0801%" height="15" fill="rgb(230,134,26)" fg:x="984" fg:w="1"/><text x="79.0330%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="78.7830%" y="501" width="0.0801%" height="15" fill="rgb(234,149,40)" fg:x="984" fg:w="1"/><text x="79.0330%" y="511.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="78.7830%" y="485" width="0.0801%" height="15" fill="rgb(221,122,15)" fg:x="984" fg:w="1"/><text x="79.0330%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7830%" y="469" width="0.0801%" height="15" fill="rgb(228,127,0)" fg:x="984" fg:w="1"/><text x="79.0330%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7830%" y="453" width="0.0801%" height="15" fill="rgb(248,37,7)" fg:x="984" fg:w="1"/><text x="79.0330%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7830%" y="437" width="0.0801%" height="15" fill="rgb(215,140,49)" fg:x="984" fg:w="1"/><text x="79.0330%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.7830%" y="421" width="0.0801%" height="15" fill="rgb(236,65,39)" fg:x="984" fg:w="1"/><text x="79.0330%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.7830%" y="405" width="0.0801%" height="15" fill="rgb(253,102,38)" fg:x="984" fg:w="1"/><text x="79.0330%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.7830%" y="389" width="0.0801%" height="15" fill="rgb(244,100,34)" fg:x="984" fg:w="1"/><text x="79.0330%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.7830%" y="373" width="0.0801%" height="15" fill="rgb(210,179,47)" fg:x="984" fg:w="1"/><text x="79.0330%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.7830%" y="357" width="0.0801%" height="15" fill="rgb(231,41,37)" fg:x="984" fg:w="1"/><text x="79.0330%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.7830%" y="341" width="0.0801%" height="15" fill="rgb(226,209,17)" fg:x="984" fg:w="1"/><text x="79.0330%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.7830%" y="325" width="0.0801%" height="15" fill="rgb(231,154,20)" fg:x="984" fg:w="1"/><text x="79.0330%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.7830%" y="309" width="0.0801%" height="15" fill="rgb(216,134,24)" fg:x="984" fg:w="1"/><text x="79.0330%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.7830%" y="293" width="0.0801%" height="15" fill="rgb(224,71,42)" fg:x="984" fg:w="1"/><text x="79.0330%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7830%" y="277" width="0.0801%" height="15" fill="rgb(250,65,23)" fg:x="984" fg:w="1"/><text x="79.0330%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.9432%" y="549" width="0.0801%" height="15" fill="rgb(209,160,35)" fg:x="986" fg:w="1"/><text x="79.1932%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0232%" y="549" width="0.0801%" height="15" fill="rgb(215,8,11)" fg:x="987" fg:w="1"/><text x="79.2732%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0232%" y="533" width="0.0801%" height="15" fill="rgb(227,27,12)" fg:x="987" fg:w="1"/><text x="79.2732%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="79.1033%" y="549" width="0.0801%" height="15" fill="rgb(226,111,41)" fg:x="988" fg:w="1"/><text x="79.3533%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.3435%" y="501" width="0.1601%" height="15" fill="rgb(212,195,15)" fg:x="991" fg:w="2"/><text x="79.5935%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.3435%" y="485" width="0.1601%" height="15" fill="rgb(216,191,17)" fg:x="991" fg:w="2"/><text x="79.5935%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="79.3435%" y="469" width="0.1601%" height="15" fill="rgb(215,57,44)" fg:x="991" fg:w="2"/><text x="79.5935%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="79.5036%" y="501" width="0.2402%" height="15" fill="rgb(209,38,4)" fg:x="993" fg:w="3"/><text x="79.7536%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="79.5036%" y="485" width="0.2402%" height="15" fill="rgb(238,49,31)" fg:x="993" fg:w="3"/><text x="79.7536%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="79.5036%" y="469" width="0.2402%" height="15" fill="rgb(219,48,39)" fg:x="993" fg:w="3"/><text x="79.7536%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.5837%" y="453" width="0.1601%" height="15" fill="rgb(252,223,43)" fg:x="994" fg:w="2"/><text x="79.8337%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6637%" y="437" width="0.0801%" height="15" fill="rgb(247,205,46)" fg:x="995" fg:w="1"/><text x="79.9137%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6637%" y="421" width="0.0801%" height="15" fill="rgb(231,16,40)" fg:x="995" fg:w="1"/><text x="79.9137%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8239%" y="469" width="0.0801%" height="15" fill="rgb(231,115,5)" fg:x="997" fg:w="1"/><text x="80.0739%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8239%" y="453" width="0.0801%" height="15" fill="rgb(206,127,43)" fg:x="997" fg:w="1"/><text x="80.0739%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8239%" y="437" width="0.0801%" height="15" fill="rgb(218,101,9)" fg:x="997" fg:w="1"/><text x="80.0739%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (15 samples, 1.20%)</title><rect x="78.8631%" y="581" width="1.2010%" height="15" fill="rgb(235,138,50)" fg:x="985" fg:w="15"/><text x="79.1131%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.20%)</title><rect x="78.8631%" y="565" width="1.2010%" height="15" fill="rgb(214,197,52)" fg:x="985" fg:w="15"/><text x="79.1131%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="79.1833%" y="549" width="0.8807%" height="15" fill="rgb(230,80,19)" fg:x="989" fg:w="11"/><text x="79.4333%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="79.2634%" y="533" width="0.8006%" height="15" fill="rgb(224,77,16)" fg:x="990" fg:w="10"/><text x="79.5134%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="79.2634%" y="517" width="0.8006%" height="15" fill="rgb(246,4,13)" fg:x="990" fg:w="10"/><text x="79.5134%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="79.7438%" y="501" width="0.3203%" height="15" fill="rgb(220,177,26)" fg:x="996" fg:w="4"/><text x="79.9938%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="79.8239%" y="485" width="0.2402%" height="15" fill="rgb(215,114,45)" fg:x="997" fg:w="3"/><text x="80.0739%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="79.9039%" y="469" width="0.1601%" height="15" fill="rgb(215,71,54)" fg:x="998" fg:w="2"/><text x="80.1539%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="79.9840%" y="453" width="0.0801%" height="15" fill="rgb(211,155,22)" fg:x="999" fg:w="1"/><text x="80.2340%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.9840%" y="437" width="0.0801%" height="15" fill="rgb(245,206,18)" fg:x="999" fg:w="1"/><text x="80.2340%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="80.0641%" y="389" width="0.0801%" height="15" fill="rgb(248,216,48)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.0641%" y="373" width="0.0801%" height="15" fill="rgb(244,84,45)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="80.0641%" y="357" width="0.0801%" height="15" fill="rgb(245,13,45)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.0641%" y="341" width="0.0801%" height="15" fill="rgb(247,163,2)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.0641%" y="325" width="0.0801%" height="15" fill="rgb(211,175,10)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="80.0641%" y="421" width="0.1601%" height="15" fill="rgb(215,186,31)" fg:x="1000" fg:w="2"/><text x="80.3141%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="80.0641%" y="405" width="0.1601%" height="15" fill="rgb(207,42,11)" fg:x="1000" fg:w="2"/><text x="80.3141%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.1441%" y="389" width="0.0801%" height="15" fill="rgb(224,197,20)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.1441%" y="373" width="0.0801%" height="15" fill="rgb(244,119,36)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="80.0641%" y="485" width="0.2402%" height="15" fill="rgb(250,60,27)" fg:x="1000" fg:w="3"/><text x="80.3141%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="80.0641%" y="469" width="0.2402%" height="15" fill="rgb(252,202,1)" fg:x="1000" fg:w="3"/><text x="80.3141%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="80.0641%" y="453" width="0.2402%" height="15" fill="rgb(206,53,25)" fg:x="1000" fg:w="3"/><text x="80.3141%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="80.0641%" y="437" width="0.2402%" height="15" fill="rgb(210,88,4)" fg:x="1000" fg:w="3"/><text x="80.3141%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2242%" y="421" width="0.0801%" height="15" fill="rgb(211,144,28)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2242%" y="405" width="0.0801%" height="15" fill="rgb(247,81,32)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2242%" y="389" width="0.0801%" height="15" fill="rgb(225,192,11)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.3042%" y="485" width="0.0801%" height="15" fill="rgb(232,212,27)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.3042%" y="469" width="0.0801%" height="15" fill="rgb(239,3,29)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="479.50"></text></g><g><title>engine::session::Session::close (60 samples, 4.80%)</title><rect x="75.6605%" y="677" width="4.8038%" height="15" fill="rgb(252,225,29)" fg:x="945" fg:w="60"/><text x="75.9105%" y="687.50">engine..</text></g><g><title>engine::session::state::State::close (58 samples, 4.64%)</title><rect x="75.8207%" y="661" width="4.6437%" height="15" fill="rgb(205,151,9)" fg:x="947" fg:w="58"/><text x="76.0707%" y="671.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (56 samples, 4.48%)</title><rect x="75.9808%" y="645" width="4.4836%" height="15" fill="rgb(216,171,47)" fg:x="949" fg:w="56"/><text x="76.2308%" y="655.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (56 samples, 4.48%)</title><rect x="75.9808%" y="629" width="4.4836%" height="15" fill="rgb(206,181,1)" fg:x="949" fg:w="56"/><text x="76.2308%" y="639.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (56 samples, 4.48%)</title><rect x="75.9808%" y="613" width="4.4836%" height="15" fill="rgb(232,218,10)" fg:x="949" fg:w="56"/><text x="76.2308%" y="623.50">engin..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.88%)</title><rect x="77.5821%" y="597" width="2.8823%" height="15" fill="rgb(244,222,51)" fg:x="969" fg:w="36"/><text x="77.8321%" y="607.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="80.0641%" y="581" width="0.4003%" height="15" fill="rgb(252,215,16)" fg:x="1000" fg:w="5"/><text x="80.3141%" y="591.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="80.0641%" y="565" width="0.4003%" height="15" fill="rgb(212,130,13)" fg:x="1000" fg:w="5"/><text x="80.3141%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="80.0641%" y="549" width="0.4003%" height="15" fill="rgb(227,103,37)" fg:x="1000" fg:w="5"/><text x="80.3141%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="80.0641%" y="533" width="0.4003%" height="15" fill="rgb(249,48,15)" fg:x="1000" fg:w="5"/><text x="80.3141%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="80.0641%" y="517" width="0.4003%" height="15" fill="rgb(225,96,9)" fg:x="1000" fg:w="5"/><text x="80.3141%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="80.0641%" y="501" width="0.4003%" height="15" fill="rgb(213,81,41)" fg:x="1000" fg:w="5"/><text x="80.3141%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3843%" y="485" width="0.0801%" height="15" fill="rgb(230,15,12)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3843%" y="469" width="0.0801%" height="15" fill="rgb(218,106,37)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="80.5444%" y="549" width="0.0801%" height="15" fill="rgb(223,172,47)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="559.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="80.6245%" y="517" width="0.0801%" height="15" fill="rgb(246,180,49)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.6245%" y="501" width="0.0801%" height="15" fill="rgb(231,63,37)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.6245%" y="485" width="0.0801%" height="15" fill="rgb(235,70,40)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.6245%" y="469" width="0.0801%" height="15" fill="rgb(250,54,26)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.6245%" y="453" width="0.0801%" height="15" fill="rgb(214,190,1)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.6245%" y="437" width="0.0801%" height="15" fill="rgb(212,40,35)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.6245%" y="421" width="0.0801%" height="15" fill="rgb(239,183,47)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.6245%" y="405" width="0.0801%" height="15" fill="rgb(211,171,49)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="80.6245%" y="389" width="0.0801%" height="15" fill="rgb(249,186,27)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (2 samples, 0.16%)</title><rect x="80.6245%" y="533" width="0.1601%" height="15" fill="rgb(223,23,48)" fg:x="1007" fg:w="2"/><text x="80.8745%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.7046%" y="517" width="0.0801%" height="15" fill="rgb(209,203,21)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.7046%" y="501" width="0.0801%" height="15" fill="rgb(229,33,27)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.7046%" y="485" width="0.0801%" height="15" fill="rgb(207,8,53)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.7046%" y="469" width="0.0801%" height="15" fill="rgb(221,42,0)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.7046%" y="453" width="0.0801%" height="15" fill="rgb(223,115,3)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.7046%" y="437" width="0.0801%" height="15" fill="rgb(239,35,26)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.7046%" y="421" width="0.0801%" height="15" fill="rgb(233,22,9)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (6 samples, 0.48%)</title><rect x="80.4644%" y="629" width="0.4804%" height="15" fill="rgb(236,221,48)" fg:x="1005" fg:w="6"/><text x="80.7144%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="80.4644%" y="613" width="0.4804%" height="15" fill="rgb(235,52,30)" fg:x="1005" fg:w="6"/><text x="80.7144%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="80.5444%" y="597" width="0.4003%" height="15" fill="rgb(238,133,51)" fg:x="1006" fg:w="5"/><text x="80.7944%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="80.5444%" y="581" width="0.4003%" height="15" fill="rgb(213,122,23)" fg:x="1006" fg:w="5"/><text x="80.7944%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="80.5444%" y="565" width="0.4003%" height="15" fill="rgb(225,8,15)" fg:x="1006" fg:w="5"/><text x="80.7944%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="80.6245%" y="549" width="0.3203%" height="15" fill="rgb(219,126,35)" fg:x="1007" fg:w="4"/><text x="80.8745%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.7846%" y="533" width="0.1601%" height="15" fill="rgb(246,113,21)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.7846%" y="517" width="0.1601%" height="15" fill="rgb(241,193,32)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.7846%" y="501" width="0.1601%" height="15" fill="rgb(218,99,18)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="80.7846%" y="485" width="0.1601%" height="15" fill="rgb(225,114,4)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.7846%" y="469" width="0.1601%" height="15" fill="rgb(235,0,15)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="80.7846%" y="453" width="0.1601%" height="15" fill="rgb(247,45,27)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.7846%" y="437" width="0.1601%" height="15" fill="rgb(249,88,53)" fg:x="1009" fg:w="2"/><text x="81.0346%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.8647%" y="421" width="0.0801%" height="15" fill="rgb(207,58,45)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8647%" y="405" width="0.0801%" height="15" fill="rgb(216,7,11)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8647%" y="389" width="0.0801%" height="15" fill="rgb(230,40,33)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="399.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="80.9448%" y="629" width="0.0801%" height="15" fill="rgb(232,24,46)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="80.9448%" y="613" width="0.0801%" height="15" fill="rgb(219,222,45)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="80.9448%" y="597" width="0.0801%" height="15" fill="rgb(229,85,44)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="80.9448%" y="581" width="0.0801%" height="15" fill="rgb(243,71,36)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.9448%" y="565" width="0.0801%" height="15" fill="rgb(230,203,45)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.9448%" y="549" width="0.0801%" height="15" fill="rgb(224,77,49)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.9448%" y="533" width="0.0801%" height="15" fill="rgb(210,186,47)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.9448%" y="517" width="0.0801%" height="15" fill="rgb(232,146,10)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.9448%" y="501" width="0.0801%" height="15" fill="rgb(236,185,51)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.9448%" y="485" width="0.0801%" height="15" fill="rgb(223,206,43)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.9448%" y="469" width="0.0801%" height="15" fill="rgb(227,212,9)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.9448%" y="453" width="0.0801%" height="15" fill="rgb(205,82,3)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="80.9448%" y="437" width="0.0801%" height="15" fill="rgb(214,2,27)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.9448%" y="421" width="0.0801%" height="15" fill="rgb(241,37,22)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.9448%" y="405" width="0.0801%" height="15" fill="rgb(219,182,1)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.9448%" y="389" width="0.0801%" height="15" fill="rgb(208,224,23)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.9448%" y="373" width="0.0801%" height="15" fill="rgb(219,121,32)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.9448%" y="357" width="0.0801%" height="15" fill="rgb(253,13,40)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="80.9448%" y="341" width="0.0801%" height="15" fill="rgb(233,6,28)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="80.9448%" y="325" width="0.0801%" height="15" fill="rgb(233,73,8)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="80.9448%" y="309" width="0.0801%" height="15" fill="rgb(223,48,27)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="80.9448%" y="293" width="0.0801%" height="15" fill="rgb(231,98,37)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.9448%" y="277" width="0.0801%" height="15" fill="rgb(249,43,32)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.9448%" y="261" width="0.0801%" height="15" fill="rgb(246,184,20)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.9448%" y="245" width="0.0801%" height="15" fill="rgb(251,216,0)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="80.9448%" y="229" width="0.0801%" height="15" fill="rgb(238,41,42)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.9448%" y="213" width="0.0801%" height="15" fill="rgb(227,224,50)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="80.9448%" y="197" width="0.0801%" height="15" fill="rgb(237,189,18)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="80.9448%" y="181" width="0.0801%" height="15" fill="rgb(238,108,6)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="80.9448%" y="165" width="0.0801%" height="15" fill="rgb(214,197,53)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.9448%" y="149" width="0.0801%" height="15" fill="rgb(206,183,15)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="159.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (8 samples, 0.64%)</title><rect x="80.4644%" y="645" width="0.6405%" height="15" fill="rgb(208,130,32)" fg:x="1005" fg:w="8"/><text x="80.7144%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.0248%" y="629" width="0.0801%" height="15" fill="rgb(226,128,52)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="81.1049%" y="421" width="0.2402%" height="15" fill="rgb(231,183,21)" fg:x="1013" fg:w="3"/><text x="81.3549%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="81.1049%" y="405" width="0.2402%" height="15" fill="rgb(216,8,35)" fg:x="1013" fg:w="3"/><text x="81.3549%" y="415.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="81.1049%" y="389" width="0.2402%" height="15" fill="rgb(224,221,8)" fg:x="1013" fg:w="3"/><text x="81.3549%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3451%" y="373" width="0.0801%" height="15" fill="rgb(210,111,33)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3451%" y="357" width="0.0801%" height="15" fill="rgb(232,211,38)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3451%" y="341" width="0.0801%" height="15" fill="rgb(216,190,27)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3451%" y="325" width="0.0801%" height="15" fill="rgb(237,215,27)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3451%" y="309" width="0.0801%" height="15" fill="rgb(251,121,39)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3451%" y="293" width="0.0801%" height="15" fill="rgb(244,21,14)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.3451%" y="277" width="0.0801%" height="15" fill="rgb(221,192,22)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.3451%" y="261" width="0.0801%" height="15" fill="rgb(251,190,28)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.3451%" y="245" width="0.0801%" height="15" fill="rgb(217,4,51)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.3451%" y="229" width="0.0801%" height="15" fill="rgb(215,183,49)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.3451%" y="213" width="0.0801%" height="15" fill="rgb(249,28,49)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.3451%" y="197" width="0.0801%" height="15" fill="rgb(214,42,20)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.3451%" y="181" width="0.0801%" height="15" fill="rgb(222,77,27)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.3451%" y="165" width="0.0801%" height="15" fill="rgb(252,198,32)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.3451%" y="149" width="0.0801%" height="15" fill="rgb(207,140,50)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3451%" y="133" width="0.0801%" height="15" fill="rgb(251,170,16)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="143.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (5 samples, 0.40%)</title><rect x="81.1049%" y="437" width="0.4003%" height="15" fill="rgb(249,111,45)" fg:x="1013" fg:w="5"/><text x="81.3549%" y="447.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.16%)</title><rect x="81.3451%" y="421" width="0.1601%" height="15" fill="rgb(241,99,35)" fg:x="1016" fg:w="2"/><text x="81.5951%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="81.3451%" y="405" width="0.1601%" height="15" fill="rgb(216,188,17)" fg:x="1016" fg:w="2"/><text x="81.5951%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.3451%" y="389" width="0.1601%" height="15" fill="rgb(254,209,53)" fg:x="1016" fg:w="2"/><text x="81.5951%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4251%" y="373" width="0.0801%" height="15" fill="rgb(231,105,41)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4251%" y="357" width="0.0801%" height="15" fill="rgb(242,93,23)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="81.4251%" y="341" width="0.0801%" height="15" fill="rgb(218,159,11)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="81.4251%" y="325" width="0.0801%" height="15" fill="rgb(209,90,32)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="81.4251%" y="309" width="0.0801%" height="15" fill="rgb(253,118,46)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4251%" y="293" width="0.0801%" height="15" fill="rgb(219,121,2)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4251%" y="277" width="0.0801%" height="15" fill="rgb(207,57,47)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5052%" y="421" width="0.0801%" height="15" fill="rgb(235,113,43)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="431.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5052%" y="405" width="0.0801%" height="15" fill="rgb(238,30,50)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5052%" y="389" width="0.0801%" height="15" fill="rgb(237,47,29)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5052%" y="373" width="0.0801%" height="15" fill="rgb(245,102,24)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.5052%" y="357" width="0.0801%" height="15" fill="rgb(245,152,9)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.5052%" y="341" width="0.0801%" height="15" fill="rgb(223,213,17)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.5052%" y="325" width="0.0801%" height="15" fill="rgb(241,164,4)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.5052%" y="309" width="0.0801%" height="15" fill="rgb(205,209,31)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.5052%" y="293" width="0.0801%" height="15" fill="rgb(248,173,2)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.5052%" y="277" width="0.0801%" height="15" fill="rgb(207,67,32)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.5052%" y="261" width="0.0801%" height="15" fill="rgb(239,109,13)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.5052%" y="245" width="0.0801%" height="15" fill="rgb(233,123,24)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.5052%" y="229" width="0.0801%" height="15" fill="rgb(232,120,19)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5052%" y="213" width="0.0801%" height="15" fill="rgb(225,17,50)" fg:x="1018" fg:w="1"/><text x="81.7552%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="81.5853%" y="357" width="0.0801%" height="15" fill="rgb(239,216,13)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5853%" y="341" width="0.0801%" height="15" fill="rgb(232,213,26)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (10 samples, 0.80%)</title><rect x="81.1049%" y="469" width="0.8006%" height="15" fill="rgb(244,59,39)" fg:x="1013" fg:w="10"/><text x="81.3549%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (10 samples, 0.80%)</title><rect x="81.1049%" y="453" width="0.8006%" height="15" fill="rgb(234,61,35)" fg:x="1013" fg:w="10"/><text x="81.3549%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.40%)</title><rect x="81.5052%" y="437" width="0.4003%" height="15" fill="rgb(245,94,24)" fg:x="1018" fg:w="5"/><text x="81.7552%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="81.5853%" y="421" width="0.3203%" height="15" fill="rgb(238,190,44)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="431.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="81.5853%" y="405" width="0.3203%" height="15" fill="rgb(205,145,25)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::name (4 samples, 0.32%)</title><rect x="81.5853%" y="389" width="0.3203%" height="15" fill="rgb(229,158,41)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="81.5853%" y="373" width="0.3203%" height="15" fill="rgb(224,121,5)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="383.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.6653%" y="357" width="0.2402%" height="15" fill="rgb(238,168,35)" fg:x="1020" fg:w="3"/><text x="81.9153%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.6653%" y="341" width="0.2402%" height="15" fill="rgb(231,11,42)" fg:x="1020" fg:w="3"/><text x="81.9153%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="81.6653%" y="325" width="0.2402%" height="15" fill="rgb(241,105,19)" fg:x="1020" fg:w="3"/><text x="81.9153%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="81.6653%" y="309" width="0.2402%" height="15" fill="rgb(253,210,20)" fg:x="1020" fg:w="3"/><text x="81.9153%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="81.6653%" y="293" width="0.2402%" height="15" fill="rgb(215,72,52)" fg:x="1020" fg:w="3"/><text x="81.9153%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="81.6653%" y="277" width="0.2402%" height="15" fill="rgb(223,225,30)" fg:x="1020" fg:w="3"/><text x="81.9153%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="81.6653%" y="261" width="0.2402%" height="15" fill="rgb(220,138,44)" fg:x="1020" fg:w="3"/><text x="81.9153%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="81.7454%" y="245" width="0.1601%" height="15" fill="rgb(206,128,12)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="81.7454%" y="229" width="0.1601%" height="15" fill="rgb(245,194,0)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="81.7454%" y="213" width="0.1601%" height="15" fill="rgb(235,175,41)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="81.7454%" y="197" width="0.1601%" height="15" fill="rgb(216,15,48)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="81.7454%" y="181" width="0.1601%" height="15" fill="rgb(223,179,5)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="81.7454%" y="165" width="0.1601%" height="15" fill="rgb(220,80,15)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="81.7454%" y="149" width="0.1601%" height="15" fill="rgb(228,20,30)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="81.7454%" y="133" width="0.1601%" height="15" fill="rgb(229,194,27)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="81.7454%" y="117" width="0.1601%" height="15" fill="rgb(238,202,32)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="127.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="81.7454%" y="101" width="0.1601%" height="15" fill="rgb(207,82,27)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="81.7454%" y="85" width="0.1601%" height="15" fill="rgb(246,122,46)" fg:x="1021" fg:w="2"/><text x="81.9954%" y="95.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9055%" y="469" width="0.0801%" height="15" fill="rgb(220,101,26)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9856%" y="405" width="0.0801%" height="15" fill="rgb(251,63,9)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9856%" y="389" width="0.0801%" height="15" fill="rgb(235,186,5)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9856%" y="373" width="0.0801%" height="15" fill="rgb(241,139,37)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9856%" y="357" width="0.0801%" height="15" fill="rgb(252,177,51)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9856%" y="341" width="0.0801%" height="15" fill="rgb(214,131,22)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9856%" y="325" width="0.0801%" height="15" fill="rgb(246,53,19)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.9856%" y="453" width="0.2402%" height="15" fill="rgb(231,158,27)" fg:x="1024" fg:w="3"/><text x="82.2356%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.9856%" y="437" width="0.2402%" height="15" fill="rgb(226,166,46)" fg:x="1024" fg:w="3"/><text x="82.2356%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.9856%" y="421" width="0.2402%" height="15" fill="rgb(218,178,26)" fg:x="1024" fg:w="3"/><text x="82.2356%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.0657%" y="405" width="0.1601%" height="15" fill="rgb(206,25,39)" fg:x="1025" fg:w="2"/><text x="82.3157%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.0657%" y="389" width="0.1601%" height="15" fill="rgb(232,218,41)" fg:x="1025" fg:w="2"/><text x="82.3157%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.0657%" y="373" width="0.1601%" height="15" fill="rgb(212,151,15)" fg:x="1025" fg:w="2"/><text x="82.3157%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.0657%" y="357" width="0.1601%" height="15" fill="rgb(213,49,22)" fg:x="1025" fg:w="2"/><text x="82.3157%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="82.0657%" y="341" width="0.1601%" height="15" fill="rgb(247,116,21)" fg:x="1025" fg:w="2"/><text x="82.3157%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.0657%" y="325" width="0.1601%" height="15" fill="rgb(248,98,14)" fg:x="1025" fg:w="2"/><text x="82.3157%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1457%" y="309" width="0.0801%" height="15" fill="rgb(247,72,6)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1457%" y="293" width="0.0801%" height="15" fill="rgb(213,9,22)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2258%" y="389" width="0.0801%" height="15" fill="rgb(213,122,30)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2258%" y="373" width="0.0801%" height="15" fill="rgb(244,11,30)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2258%" y="357" width="0.0801%" height="15" fill="rgb(236,102,26)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.2258%" y="341" width="0.0801%" height="15" fill="rgb(231,166,37)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.2258%" y="325" width="0.0801%" height="15" fill="rgb(220,224,29)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.2258%" y="309" width="0.0801%" height="15" fill="rgb(227,30,40)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.2258%" y="293" width="0.0801%" height="15" fill="rgb(235,8,36)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.2258%" y="277" width="0.0801%" height="15" fill="rgb(232,175,19)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.2258%" y="261" width="0.0801%" height="15" fill="rgb(217,114,10)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.2258%" y="245" width="0.0801%" height="15" fill="rgb(214,112,41)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.2258%" y="229" width="0.0801%" height="15" fill="rgb(226,69,34)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.2258%" y="213" width="0.0801%" height="15" fill="rgb(219,23,46)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.2258%" y="197" width="0.0801%" height="15" fill="rgb(233,3,8)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.2258%" y="181" width="0.0801%" height="15" fill="rgb(251,34,42)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2258%" y="165" width="0.0801%" height="15" fill="rgb(215,84,9)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.2258%" y="405" width="0.1601%" height="15" fill="rgb(231,75,52)" fg:x="1027" fg:w="2"/><text x="82.4758%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3058%" y="389" width="0.0801%" height="15" fill="rgb(247,201,31)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (6 samples, 0.48%)</title><rect x="81.9856%" y="469" width="0.4804%" height="15" fill="rgb(215,171,37)" fg:x="1024" fg:w="6"/><text x="82.2356%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="82.2258%" y="453" width="0.2402%" height="15" fill="rgb(208,208,44)" fg:x="1027" fg:w="3"/><text x="82.4758%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="82.2258%" y="437" width="0.2402%" height="15" fill="rgb(247,146,54)" fg:x="1027" fg:w="3"/><text x="82.4758%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.2258%" y="421" width="0.2402%" height="15" fill="rgb(209,0,40)" fg:x="1027" fg:w="3"/><text x="82.4758%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.3859%" y="405" width="0.0801%" height="15" fill="rgb(221,59,4)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3859%" y="389" width="0.0801%" height="15" fill="rgb(227,153,47)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.3859%" y="373" width="0.0801%" height="15" fill="rgb(253,225,10)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3859%" y="357" width="0.0801%" height="15" fill="rgb(237,201,24)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.3859%" y="341" width="0.0801%" height="15" fill="rgb(238,23,27)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3859%" y="325" width="0.0801%" height="15" fill="rgb(236,54,50)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.3859%" y="309" width="0.0801%" height="15" fill="rgb(216,106,0)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.3859%" y="293" width="0.0801%" height="15" fill="rgb(234,179,35)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3859%" y="277" width="0.0801%" height="15" fill="rgb(210,35,8)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.4660%" y="453" width="0.0801%" height="15" fill="rgb(238,144,16)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="82.4660%" y="437" width="0.0801%" height="15" fill="rgb(244,54,7)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.4660%" y="421" width="0.0801%" height="15" fill="rgb(233,225,40)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.4660%" y="405" width="0.0801%" height="15" fill="rgb(249,227,23)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4660%" y="389" width="0.0801%" height="15" fill="rgb(215,42,44)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4660%" y="373" width="0.0801%" height="15" fill="rgb(220,145,40)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4660%" y="357" width="0.0801%" height="15" fill="rgb(228,218,40)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4660%" y="341" width="0.0801%" height="15" fill="rgb(217,52,54)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.4660%" y="325" width="0.0801%" height="15" fill="rgb(223,90,22)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.4660%" y="309" width="0.0801%" height="15" fill="rgb(232,114,35)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.4660%" y="293" width="0.0801%" height="15" fill="rgb(227,223,50)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.4660%" y="277" width="0.0801%" height="15" fill="rgb(249,175,7)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.4660%" y="261" width="0.0801%" height="15" fill="rgb(249,173,15)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.4660%" y="245" width="0.0801%" height="15" fill="rgb(240,131,6)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.4660%" y="229" width="0.0801%" height="15" fill="rgb(246,117,16)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.4660%" y="213" width="0.0801%" height="15" fill="rgb(209,32,16)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.4660%" y="197" width="0.0801%" height="15" fill="rgb(207,45,44)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.4660%" y="181" width="0.0801%" height="15" fill="rgb(210,66,3)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.4660%" y="165" width="0.0801%" height="15" fill="rgb(246,133,30)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4660%" y="149" width="0.0801%" height="15" fill="rgb(224,37,17)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="159.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6261%" y="421" width="0.0801%" height="15" fill="rgb(237,218,18)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6261%" y="405" width="0.0801%" height="15" fill="rgb(240,57,8)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6261%" y="389" width="0.0801%" height="15" fill="rgb(231,51,38)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6261%" y="373" width="0.0801%" height="15" fill="rgb(230,89,50)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6261%" y="357" width="0.0801%" height="15" fill="rgb(234,103,34)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6261%" y="341" width="0.0801%" height="15" fill="rgb(220,45,48)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.6261%" y="325" width="0.0801%" height="15" fill="rgb(250,210,3)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.6261%" y="309" width="0.0801%" height="15" fill="rgb(210,118,12)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.6261%" y="293" width="0.0801%" height="15" fill="rgb(238,154,21)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6261%" y="277" width="0.0801%" height="15" fill="rgb(227,220,4)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6261%" y="261" width="0.0801%" height="15" fill="rgb(207,179,27)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.6261%" y="245" width="0.0801%" height="15" fill="rgb(240,111,30)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.6261%" y="229" width="0.0801%" height="15" fill="rgb(251,29,1)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.6261%" y="213" width="0.0801%" height="15" fill="rgb(224,141,39)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.6261%" y="197" width="0.0801%" height="15" fill="rgb(207,98,26)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6261%" y="181" width="0.0801%" height="15" fill="rgb(221,37,6)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="191.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="82.5460%" y="453" width="0.2402%" height="15" fill="rgb(217,32,44)" fg:x="1031" fg:w="3"/><text x="82.7960%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.5460%" y="437" width="0.2402%" height="15" fill="rgb(253,149,2)" fg:x="1031" fg:w="3"/><text x="82.7960%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7062%" y="421" width="0.0801%" height="15" fill="rgb(220,165,39)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7062%" y="405" width="0.0801%" height="15" fill="rgb(235,33,48)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7862%" y="421" width="0.0801%" height="15" fill="rgb(221,89,6)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7862%" y="405" width="0.0801%" height="15" fill="rgb(215,214,6)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7862%" y="389" width="0.0801%" height="15" fill="rgb(241,1,30)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.9464%" y="373" width="0.0801%" height="15" fill="rgb(211,140,32)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9464%" y="357" width="0.0801%" height="15" fill="rgb(232,48,21)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="82.8663%" y="421" width="0.2402%" height="15" fill="rgb(252,217,9)" fg:x="1035" fg:w="3"/><text x="83.1163%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="82.8663%" y="405" width="0.2402%" height="15" fill="rgb(206,123,34)" fg:x="1035" fg:w="3"/><text x="83.1163%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.9464%" y="389" width="0.1601%" height="15" fill="rgb(245,161,38)" fg:x="1036" fg:w="2"/><text x="83.1964%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="83.0264%" y="373" width="0.0801%" height="15" fill="rgb(233,205,7)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.0264%" y="357" width="0.0801%" height="15" fill="rgb(217,119,18)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0264%" y="341" width="0.0801%" height="15" fill="rgb(252,126,3)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="351.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="83.1065%" y="421" width="0.1601%" height="15" fill="rgb(252,188,15)" fg:x="1038" fg:w="2"/><text x="83.3565%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.1065%" y="405" width="0.1601%" height="15" fill="rgb(228,1,48)" fg:x="1038" fg:w="2"/><text x="83.3565%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="83.1065%" y="389" width="0.1601%" height="15" fill="rgb(205,187,8)" fg:x="1038" fg:w="2"/><text x="83.3565%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="83.1065%" y="373" width="0.1601%" height="15" fill="rgb(205,105,50)" fg:x="1038" fg:w="2"/><text x="83.3565%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.1065%" y="357" width="0.1601%" height="15" fill="rgb(211,31,46)" fg:x="1038" fg:w="2"/><text x="83.3565%" y="367.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="82.7862%" y="453" width="0.5604%" height="15" fill="rgb(213,126,5)" fg:x="1034" fg:w="7"/><text x="83.0362%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="82.7862%" y="437" width="0.5604%" height="15" fill="rgb(231,87,9)" fg:x="1034" fg:w="7"/><text x="83.0362%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2666%" y="421" width="0.0801%" height="15" fill="rgb(219,224,20)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2666%" y="405" width="0.0801%" height="15" fill="rgb(230,84,21)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2666%" y="389" width="0.0801%" height="15" fill="rgb(224,169,42)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2666%" y="373" width="0.0801%" height="15" fill="rgb(227,182,13)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2666%" y="357" width="0.0801%" height="15" fill="rgb(249,57,41)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2666%" y="341" width="0.0801%" height="15" fill="rgb(214,93,52)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="83.3467%" y="453" width="0.1601%" height="15" fill="rgb(229,161,34)" fg:x="1041" fg:w="2"/><text x="83.5967%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="83.3467%" y="437" width="0.1601%" height="15" fill="rgb(227,193,17)" fg:x="1041" fg:w="2"/><text x="83.5967%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="83.3467%" y="421" width="0.1601%" height="15" fill="rgb(242,164,46)" fg:x="1041" fg:w="2"/><text x="83.5967%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.3467%" y="405" width="0.1601%" height="15" fill="rgb(242,142,47)" fg:x="1041" fg:w="2"/><text x="83.5967%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.3467%" y="389" width="0.1601%" height="15" fill="rgb(208,23,18)" fg:x="1041" fg:w="2"/><text x="83.5967%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.3467%" y="373" width="0.1601%" height="15" fill="rgb(219,54,38)" fg:x="1041" fg:w="2"/><text x="83.5967%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4267%" y="357" width="0.0801%" height="15" fill="rgb(206,97,35)" fg:x="1042" fg:w="1"/><text x="83.6767%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4267%" y="341" width="0.0801%" height="15" fill="rgb(208,76,8)" fg:x="1042" fg:w="1"/><text x="83.6767%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5068%" y="357" width="0.0801%" height="15" fill="rgb(220,92,28)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5068%" y="341" width="0.0801%" height="15" fill="rgb(209,158,39)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.5068%" y="325" width="0.0801%" height="15" fill="rgb(238,175,9)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.5068%" y="309" width="0.0801%" height="15" fill="rgb(240,116,17)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.5068%" y="293" width="0.0801%" height="15" fill="rgb(208,7,2)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.5068%" y="277" width="0.0801%" height="15" fill="rgb(252,52,4)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5068%" y="261" width="0.0801%" height="15" fill="rgb(222,68,34)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (32 samples, 2.56%)</title><rect x="81.1049%" y="485" width="2.5620%" height="15" fill="rgb(242,154,35)" fg:x="1013" fg:w="32"/><text x="81.3549%" y="495.50">&lt;p..</text></g><g><title>plugins_core::tools::move_between (15 samples, 1.20%)</title><rect x="82.4660%" y="469" width="1.2010%" height="15" fill="rgb(210,125,54)" fg:x="1030" fg:w="15"/><text x="82.7160%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="83.5068%" y="453" width="0.1601%" height="15" fill="rgb(247,121,18)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.5068%" y="437" width="0.1601%" height="15" fill="rgb(223,48,51)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.5068%" y="421" width="0.1601%" height="15" fill="rgb(211,156,48)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="83.5068%" y="405" width="0.1601%" height="15" fill="rgb(236,56,31)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="83.5068%" y="389" width="0.1601%" height="15" fill="rgb(247,157,52)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="83.5068%" y="373" width="0.1601%" height="15" fill="rgb(244,121,39)" fg:x="1043" fg:w="2"/><text x="83.7568%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="83.5869%" y="357" width="0.0801%" height="15" fill="rgb(239,4,40)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.5869%" y="341" width="0.0801%" height="15" fill="rgb(213,204,45)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.7470%" y="421" width="0.0801%" height="15" fill="rgb(242,107,0)" fg:x="1046" fg:w="1"/><text x="83.9970%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.7470%" y="405" width="0.0801%" height="15" fill="rgb(215,152,25)" fg:x="1046" fg:w="1"/><text x="83.9970%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.7470%" y="389" width="0.0801%" height="15" fill="rgb(233,151,6)" fg:x="1046" fg:w="1"/><text x="83.9970%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="83.8271%" y="405" width="0.0801%" height="15" fill="rgb(206,126,44)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="83.8271%" y="389" width="0.0801%" height="15" fill="rgb(209,145,15)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="83.8271%" y="373" width="0.0801%" height="15" fill="rgb(235,214,8)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.8271%" y="357" width="0.0801%" height="15" fill="rgb(216,140,51)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.9071%" y="405" width="0.0801%" height="15" fill="rgb(213,83,34)" fg:x="1048" fg:w="1"/><text x="84.1571%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (4 samples, 0.32%)</title><rect x="83.7470%" y="437" width="0.3203%" height="15" fill="rgb(218,186,44)" fg:x="1046" fg:w="4"/><text x="83.9970%" y="447.50"></text></g><g><title>plugins_core::tools::contained_by (3 samples, 0.24%)</title><rect x="83.8271%" y="421" width="0.2402%" height="15" fill="rgb(225,147,10)" fg:x="1047" fg:w="3"/><text x="84.0771%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="83.9872%" y="405" width="0.0801%" height="15" fill="rgb(209,214,20)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.9872%" y="389" width="0.0801%" height="15" fill="rgb(252,61,32)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9872%" y="373" width="0.0801%" height="15" fill="rgb(237,204,10)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9872%" y="357" width="0.0801%" height="15" fill="rgb(246,118,16)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9872%" y="341" width="0.0801%" height="15" fill="rgb(214,50,9)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9872%" y="325" width="0.0801%" height="15" fill="rgb(212,41,1)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9872%" y="309" width="0.0801%" height="15" fill="rgb(228,172,32)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9872%" y="293" width="0.0801%" height="15" fill="rgb(231,85,38)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.9872%" y="277" width="0.0801%" height="15" fill="rgb(223,120,31)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.9872%" y="261" width="0.0801%" height="15" fill="rgb(254,174,9)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.9872%" y="245" width="0.0801%" height="15" fill="rgb(243,197,0)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.9872%" y="229" width="0.0801%" height="15" fill="rgb(226,186,17)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.9872%" y="213" width="0.0801%" height="15" fill="rgb(229,38,38)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.9872%" y="197" width="0.0801%" height="15" fill="rgb(238,82,14)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0673%" y="341" width="0.0801%" height="15" fill="rgb(230,154,54)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0673%" y="325" width="0.0801%" height="15" fill="rgb(243,84,17)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1473%" y="341" width="0.0801%" height="15" fill="rgb(226,41,37)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.1473%" y="325" width="0.0801%" height="15" fill="rgb(219,20,18)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1473%" y="309" width="0.0801%" height="15" fill="rgb(243,173,39)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1473%" y="293" width="0.0801%" height="15" fill="rgb(245,79,20)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1473%" y="277" width="0.0801%" height="15" fill="rgb(229,101,45)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1473%" y="261" width="0.0801%" height="15" fill="rgb(215,123,52)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.1473%" y="245" width="0.0801%" height="15" fill="rgb(215,11,33)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.1473%" y="229" width="0.0801%" height="15" fill="rgb(245,105,20)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="239.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="84.0673%" y="437" width="0.3203%" height="15" fill="rgb(231,132,30)" fg:x="1050" fg:w="4"/><text x="84.3173%" y="447.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="84.0673%" y="421" width="0.3203%" height="15" fill="rgb(224,62,21)" fg:x="1050" fg:w="4"/><text x="84.3173%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::name (4 samples, 0.32%)</title><rect x="84.0673%" y="405" width="0.3203%" height="15" fill="rgb(209,221,38)" fg:x="1050" fg:w="4"/><text x="84.3173%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="84.0673%" y="389" width="0.3203%" height="15" fill="rgb(229,200,30)" fg:x="1050" fg:w="4"/><text x="84.3173%" y="399.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="84.0673%" y="373" width="0.3203%" height="15" fill="rgb(237,142,41)" fg:x="1050" fg:w="4"/><text x="84.3173%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="84.0673%" y="357" width="0.3203%" height="15" fill="rgb(238,37,22)" fg:x="1050" fg:w="4"/><text x="84.3173%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.2274%" y="341" width="0.1601%" height="15" fill="rgb(234,182,17)" fg:x="1052" fg:w="2"/><text x="84.4774%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.2274%" y="325" width="0.1601%" height="15" fill="rgb(237,58,48)" fg:x="1052" fg:w="2"/><text x="84.4774%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3074%" y="309" width="0.0801%" height="15" fill="rgb(226,112,37)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3074%" y="293" width="0.0801%" height="15" fill="rgb(230,201,20)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.3074%" y="277" width="0.0801%" height="15" fill="rgb(252,95,39)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3074%" y="261" width="0.0801%" height="15" fill="rgb(240,150,33)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3074%" y="245" width="0.0801%" height="15" fill="rgb(208,202,37)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (10 samples, 0.80%)</title><rect x="83.6669%" y="469" width="0.8006%" height="15" fill="rgb(251,37,12)" fg:x="1045" fg:w="10"/><text x="83.9169%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (10 samples, 0.80%)</title><rect x="83.6669%" y="453" width="0.8006%" height="15" fill="rgb(247,150,26)" fg:x="1045" fg:w="10"/><text x="83.9169%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="84.3875%" y="437" width="0.0801%" height="15" fill="rgb(232,28,8)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3875%" y="421" width="0.0801%" height="15" fill="rgb(226,121,34)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3875%" y="405" width="0.0801%" height="15" fill="rgb(237,23,13)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3875%" y="389" width="0.0801%" height="15" fill="rgb(214,42,29)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.3875%" y="373" width="0.0801%" height="15" fill="rgb(246,204,29)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.3875%" y="357" width="0.0801%" height="15" fill="rgb(242,28,40)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.3875%" y="341" width="0.0801%" height="15" fill="rgb(243,64,49)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.3875%" y="325" width="0.0801%" height="15" fill="rgb(226,93,13)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.3875%" y="309" width="0.0801%" height="15" fill="rgb(241,113,26)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.3875%" y="293" width="0.0801%" height="15" fill="rgb(209,209,0)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.3875%" y="277" width="0.0801%" height="15" fill="rgb(251,183,50)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.3875%" y="261" width="0.0801%" height="15" fill="rgb(248,24,43)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.3875%" y="245" width="0.0801%" height="15" fill="rgb(218,102,9)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3875%" y="229" width="0.0801%" height="15" fill="rgb(249,209,39)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="84.4676%" y="469" width="0.0801%" height="15" fill="rgb(210,37,6)" fg:x="1055" fg:w="1"/><text x="84.7176%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.5476%" y="453" width="0.0801%" height="15" fill="rgb(212,99,4)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.5476%" y="437" width="0.0801%" height="15" fill="rgb(253,59,46)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.5476%" y="421" width="0.0801%" height="15" fill="rgb(229,96,9)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5476%" y="405" width="0.0801%" height="15" fill="rgb(207,103,49)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5476%" y="389" width="0.0801%" height="15" fill="rgb(250,226,20)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5476%" y="373" width="0.0801%" height="15" fill="rgb(238,220,11)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5476%" y="357" width="0.0801%" height="15" fill="rgb(236,74,15)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5476%" y="341" width="0.0801%" height="15" fill="rgb(218,43,40)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5476%" y="325" width="0.0801%" height="15" fill="rgb(245,206,37)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5476%" y="309" width="0.0801%" height="15" fill="rgb(206,30,3)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5476%" y="293" width="0.0801%" height="15" fill="rgb(211,29,35)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5476%" y="277" width="0.0801%" height="15" fill="rgb(218,49,50)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5476%" y="261" width="0.0801%" height="15" fill="rgb(211,114,30)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="84.5476%" y="245" width="0.0801%" height="15" fill="rgb(238,70,33)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="84.5476%" y="229" width="0.0801%" height="15" fill="rgb(238,141,50)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="239.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="84.5476%" y="213" width="0.0801%" height="15" fill="rgb(205,69,6)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="84.6277%" y="437" width="0.0801%" height="15" fill="rgb(229,65,0)" fg:x="1057" fg:w="1"/><text x="84.8777%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.7078%" y="405" width="0.1601%" height="15" fill="rgb(211,3,37)" fg:x="1058" fg:w="2"/><text x="84.9578%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.7078%" y="389" width="0.1601%" height="15" fill="rgb(223,196,42)" fg:x="1058" fg:w="2"/><text x="84.9578%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.7078%" y="373" width="0.1601%" height="15" fill="rgb(227,191,15)" fg:x="1058" fg:w="2"/><text x="84.9578%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.7078%" y="357" width="0.1601%" height="15" fill="rgb(229,210,53)" fg:x="1058" fg:w="2"/><text x="84.9578%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7878%" y="341" width="0.0801%" height="15" fill="rgb(250,203,10)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7878%" y="325" width="0.0801%" height="15" fill="rgb(247,8,37)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.7878%" y="309" width="0.0801%" height="15" fill="rgb(240,52,9)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.7878%" y="293" width="0.0801%" height="15" fill="rgb(243,100,52)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.7878%" y="277" width="0.0801%" height="15" fill="rgb(224,149,30)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7878%" y="261" width="0.0801%" height="15" fill="rgb(232,27,45)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7878%" y="245" width="0.0801%" height="15" fill="rgb(242,161,36)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.7878%" y="229" width="0.0801%" height="15" fill="rgb(235,223,32)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.7878%" y="213" width="0.0801%" height="15" fill="rgb(242,78,19)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.7878%" y="197" width="0.0801%" height="15" fill="rgb(233,157,47)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.7878%" y="181" width="0.0801%" height="15" fill="rgb(251,213,5)" fg:x="1059" fg:w="1"/><text x="85.0378%" y="191.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (6 samples, 0.48%)</title><rect x="84.5476%" y="469" width="0.4804%" height="15" fill="rgb(215,223,5)" fg:x="1056" fg:w="6"/><text x="84.7976%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="84.6277%" y="453" width="0.4003%" height="15" fill="rgb(230,14,7)" fg:x="1057" fg:w="5"/><text x="84.8777%" y="463.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="84.7078%" y="437" width="0.3203%" height="15" fill="rgb(249,179,20)" fg:x="1058" fg:w="4"/><text x="84.9578%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="84.7078%" y="421" width="0.3203%" height="15" fill="rgb(230,204,44)" fg:x="1058" fg:w="4"/><text x="84.9578%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.8679%" y="405" width="0.1601%" height="15" fill="rgb(233,229,46)" fg:x="1060" fg:w="2"/><text x="85.1179%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.8679%" y="389" width="0.1601%" height="15" fill="rgb(210,154,35)" fg:x="1060" fg:w="2"/><text x="85.1179%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.8679%" y="373" width="0.1601%" height="15" fill="rgb(220,178,16)" fg:x="1060" fg:w="2"/><text x="85.1179%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.8679%" y="357" width="0.1601%" height="15" fill="rgb(243,0,53)" fg:x="1060" fg:w="2"/><text x="85.1179%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="84.8679%" y="341" width="0.1601%" height="15" fill="rgb(223,221,47)" fg:x="1060" fg:w="2"/><text x="85.1179%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.8679%" y="325" width="0.1601%" height="15" fill="rgb(233,82,15)" fg:x="1060" fg:w="2"/><text x="85.1179%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9480%" y="309" width="0.0801%" height="15" fill="rgb(222,8,38)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="319.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="85.0280%" y="469" width="0.1601%" height="15" fill="rgb(241,28,48)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="85.0280%" y="453" width="0.1601%" height="15" fill="rgb(209,227,15)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="85.0280%" y="437" width="0.1601%" height="15" fill="rgb(234,189,48)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="85.0280%" y="421" width="0.1601%" height="15" fill="rgb(212,27,44)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="85.0280%" y="405" width="0.1601%" height="15" fill="rgb(249,55,42)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="85.0280%" y="389" width="0.1601%" height="15" fill="rgb(215,211,28)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="85.0280%" y="373" width="0.1601%" height="15" fill="rgb(221,155,16)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="85.0280%" y="357" width="0.1601%" height="15" fill="rgb(247,106,30)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="85.0280%" y="341" width="0.1601%" height="15" fill="rgb(230,76,31)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="85.0280%" y="325" width="0.1601%" height="15" fill="rgb(222,6,48)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="85.0280%" y="309" width="0.1601%" height="15" fill="rgb(228,82,3)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="85.0280%" y="293" width="0.1601%" height="15" fill="rgb(245,208,52)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="85.0280%" y="277" width="0.1601%" height="15" fill="rgb(218,65,17)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="85.0280%" y="261" width="0.1601%" height="15" fill="rgb(242,63,26)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1882%" y="245" width="0.0801%" height="15" fill="rgb(224,119,39)" fg:x="1064" fg:w="1"/><text x="85.4382%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.1882%" y="421" width="0.1601%" height="15" fill="rgb(229,106,3)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.1882%" y="405" width="0.1601%" height="15" fill="rgb(248,6,33)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.1882%" y="389" width="0.1601%" height="15" fill="rgb(226,3,49)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.1882%" y="373" width="0.1601%" height="15" fill="rgb(228,142,14)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.1882%" y="357" width="0.1601%" height="15" fill="rgb(241,141,54)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.1882%" y="341" width="0.1601%" height="15" fill="rgb(252,17,50)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.1882%" y="325" width="0.1601%" height="15" fill="rgb(221,120,48)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="85.1882%" y="309" width="0.1601%" height="15" fill="rgb(229,171,33)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.1882%" y="293" width="0.1601%" height="15" fill="rgb(236,207,21)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.1882%" y="277" width="0.1601%" height="15" fill="rgb(218,93,35)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.1882%" y="261" width="0.1601%" height="15" fill="rgb(207,101,8)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.2682%" y="245" width="0.0801%" height="15" fill="rgb(237,67,44)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="255.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="85.1882%" y="453" width="0.2402%" height="15" fill="rgb(236,218,7)" fg:x="1064" fg:w="3"/><text x="85.4382%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="85.1882%" y="437" width="0.2402%" height="15" fill="rgb(252,207,10)" fg:x="1064" fg:w="3"/><text x="85.4382%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.3483%" y="421" width="0.0801%" height="15" fill="rgb(221,175,6)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.3483%" y="405" width="0.0801%" height="15" fill="rgb(230,105,53)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3483%" y="389" width="0.0801%" height="15" fill="rgb(253,83,6)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3483%" y="373" width="0.0801%" height="15" fill="rgb(206,198,44)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3483%" y="357" width="0.0801%" height="15" fill="rgb(206,164,29)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3483%" y="341" width="0.0801%" height="15" fill="rgb(215,2,50)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3483%" y="325" width="0.0801%" height="15" fill="rgb(246,127,18)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.3483%" y="309" width="0.0801%" height="15" fill="rgb(232,6,21)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3483%" y="293" width="0.0801%" height="15" fill="rgb(224,154,1)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3483%" y="277" width="0.0801%" height="15" fill="rgb(248,135,32)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3483%" y="261" width="0.0801%" height="15" fill="rgb(253,129,38)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3483%" y="245" width="0.0801%" height="15" fill="rgb(214,110,11)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3483%" y="229" width="0.0801%" height="15" fill="rgb(246,150,22)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="239.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="85.3483%" y="213" width="0.0801%" height="15" fill="rgb(219,170,39)" fg:x="1066" fg:w="1"/><text x="85.5983%" y="223.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4283%" y="421" width="0.0801%" height="15" fill="rgb(221,143,52)" fg:x="1067" fg:w="1"/><text x="85.6783%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4283%" y="405" width="0.0801%" height="15" fill="rgb(237,122,11)" fg:x="1067" fg:w="1"/><text x="85.6783%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4283%" y="389" width="0.0801%" height="15" fill="rgb(217,114,13)" fg:x="1067" fg:w="1"/><text x="85.6783%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="85.5084%" y="421" width="0.0801%" height="15" fill="rgb(218,184,28)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5084%" y="405" width="0.0801%" height="15" fill="rgb(237,33,22)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="85.4283%" y="453" width="0.2402%" height="15" fill="rgb(224,56,42)" fg:x="1067" fg:w="3"/><text x="85.6783%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.4283%" y="437" width="0.2402%" height="15" fill="rgb(216,138,53)" fg:x="1067" fg:w="3"/><text x="85.6783%" y="447.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="85.5885%" y="421" width="0.0801%" height="15" fill="rgb(233,229,40)" fg:x="1069" fg:w="1"/><text x="85.8385%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="85.5885%" y="405" width="0.0801%" height="15" fill="rgb(252,105,0)" fg:x="1069" fg:w="1"/><text x="85.8385%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="85.5885%" y="389" width="0.0801%" height="15" fill="rgb(212,75,24)" fg:x="1069" fg:w="1"/><text x="85.8385%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="85.5885%" y="373" width="0.0801%" height="15" fill="rgb(235,168,50)" fg:x="1069" fg:w="1"/><text x="85.8385%" y="383.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="85.6685%" y="453" width="0.0801%" height="15" fill="rgb(247,204,12)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.6685%" y="437" width="0.0801%" height="15" fill="rgb(250,203,27)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6685%" y="421" width="0.0801%" height="15" fill="rgb(221,215,2)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6685%" y="405" width="0.0801%" height="15" fill="rgb(242,163,47)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6685%" y="389" width="0.0801%" height="15" fill="rgb(237,136,50)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.6685%" y="373" width="0.0801%" height="15" fill="rgb(217,201,47)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.6685%" y="357" width="0.0801%" height="15" fill="rgb(212,38,47)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.6685%" y="341" width="0.0801%" height="15" fill="rgb(254,113,41)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6685%" y="325" width="0.0801%" height="15" fill="rgb(236,7,22)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6685%" y="309" width="0.0801%" height="15" fill="rgb(235,81,25)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.6685%" y="293" width="0.0801%" height="15" fill="rgb(216,41,31)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.6685%" y="277" width="0.0801%" height="15" fill="rgb(249,219,15)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.6685%" y="261" width="0.0801%" height="15" fill="rgb(248,201,3)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.6685%" y="245" width="0.0801%" height="15" fill="rgb(249,141,18)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6685%" y="229" width="0.0801%" height="15" fill="rgb(222,32,39)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.7486%" y="405" width="0.0801%" height="15" fill="rgb(237,139,51)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.7486%" y="389" width="0.0801%" height="15" fill="rgb(218,210,4)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.7486%" y="373" width="0.0801%" height="15" fill="rgb(217,199,13)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7486%" y="357" width="0.0801%" height="15" fill="rgb(222,118,25)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.7486%" y="341" width="0.0801%" height="15" fill="rgb(241,70,28)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7486%" y="325" width="0.0801%" height="15" fill="rgb(205,51,41)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7486%" y="309" width="0.0801%" height="15" fill="rgb(237,165,49)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7486%" y="293" width="0.0801%" height="15" fill="rgb(213,10,51)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7486%" y="277" width="0.0801%" height="15" fill="rgb(245,89,32)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="287.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="85.7486%" y="453" width="0.1601%" height="15" fill="rgb(249,81,54)" fg:x="1071" fg:w="2"/><text x="85.9986%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="85.7486%" y="437" width="0.1601%" height="15" fill="rgb(223,134,14)" fg:x="1071" fg:w="2"/><text x="85.9986%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="85.7486%" y="421" width="0.1601%" height="15" fill="rgb(233,62,37)" fg:x="1071" fg:w="2"/><text x="85.9986%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.8287%" y="405" width="0.0801%" height="15" fill="rgb(219,117,42)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.8287%" y="389" width="0.0801%" height="15" fill="rgb(248,40,28)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.8287%" y="373" width="0.0801%" height="15" fill="rgb(246,66,35)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8287%" y="357" width="0.0801%" height="15" fill="rgb(250,229,22)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8287%" y="341" width="0.0801%" height="15" fill="rgb(213,89,18)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8287%" y="325" width="0.0801%" height="15" fill="rgb(213,122,9)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8287%" y="309" width="0.0801%" height="15" fill="rgb(220,213,48)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.8287%" y="293" width="0.0801%" height="15" fill="rgb(244,109,54)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8287%" y="277" width="0.0801%" height="15" fill="rgb(254,104,49)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="85.9087%" y="437" width="0.0801%" height="15" fill="rgb(219,28,32)" fg:x="1073" fg:w="1"/><text x="86.1587%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9087%" y="421" width="0.0801%" height="15" fill="rgb(249,153,33)" fg:x="1073" fg:w="1"/><text x="86.1587%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (62 samples, 4.96%)</title><rect x="81.1049%" y="645" width="4.9640%" height="15" fill="rgb(230,116,21)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="655.50">&lt;engin..</text></g><g><title>kernel::plugins::mw::apply_middleware (62 samples, 4.96%)</title><rect x="81.1049%" y="629" width="4.9640%" height="15" fill="rgb(247,110,3)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="639.50">kernel..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (62 samples, 4.96%)</title><rect x="81.1049%" y="613" width="4.9640%" height="15" fill="rgb(227,128,3)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="623.50">kernel..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (62 samples, 4.96%)</title><rect x="81.1049%" y="597" width="4.9640%" height="15" fill="rgb(208,21,1)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="607.50">&lt;plugi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (62 samples, 4.96%)</title><rect x="81.1049%" y="581" width="4.9640%" height="15" fill="rgb(225,24,20)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="591.50">kernel..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (62 samples, 4.96%)</title><rect x="81.1049%" y="565" width="4.9640%" height="15" fill="rgb(250,159,24)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="575.50">core::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (62 samples, 4.96%)</title><rect x="81.1049%" y="549" width="4.9640%" height="15" fill="rgb(214,30,53)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="559.50">kernel..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (62 samples, 4.96%)</title><rect x="81.1049%" y="533" width="4.9640%" height="15" fill="rgb(243,198,11)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="543.50">core::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (62 samples, 4.96%)</title><rect x="81.1049%" y="517" width="4.9640%" height="15" fill="rgb(232,33,1)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="527.50">&lt;alloc..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (62 samples, 4.96%)</title><rect x="81.1049%" y="501" width="4.9640%" height="15" fill="rgb(242,60,11)" fg:x="1013" fg:w="62"/><text x="81.3549%" y="511.50">&lt;engin..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (30 samples, 2.40%)</title><rect x="83.6669%" y="485" width="2.4019%" height="15" fill="rgb(241,229,34)" fg:x="1045" fg:w="30"/><text x="83.9169%" y="495.50">&lt;p..</text></g><g><title>plugins_core::tools::move_between (11 samples, 0.88%)</title><rect x="85.1882%" y="469" width="0.8807%" height="15" fill="rgb(230,92,51)" fg:x="1064" fg:w="11"/><text x="85.4382%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="85.9087%" y="453" width="0.1601%" height="15" fill="rgb(212,209,8)" fg:x="1073" fg:w="2"/><text x="86.1587%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.9888%" y="437" width="0.0801%" height="15" fill="rgb(241,55,35)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.9888%" y="421" width="0.0801%" height="15" fill="rgb(208,187,52)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="85.9888%" y="405" width="0.0801%" height="15" fill="rgb(251,110,17)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="415.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.9888%" y="389" width="0.0801%" height="15" fill="rgb(246,225,54)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.9888%" y="373" width="0.0801%" height="15" fill="rgb(220,109,6)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.9888%" y="357" width="0.0801%" height="15" fill="rgb(228,56,50)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.9888%" y="341" width="0.0801%" height="15" fill="rgb(230,34,30)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9888%" y="325" width="0.0801%" height="15" fill="rgb(205,28,42)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9888%" y="309" width="0.0801%" height="15" fill="rgb(215,68,0)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.9888%" y="293" width="0.0801%" height="15" fill="rgb(206,91,47)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.9888%" y="277" width="0.0801%" height="15" fill="rgb(241,159,43)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.9888%" y="261" width="0.0801%" height="15" fill="rgb(232,191,38)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.9888%" y="245" width="0.0801%" height="15" fill="rgb(212,180,41)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.9888%" y="229" width="0.0801%" height="15" fill="rgb(236,134,49)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="239.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0689%" y="645" width="0.0801%" height="15" fill="rgb(221,83,26)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0689%" y="629" width="0.0801%" height="15" fill="rgb(215,87,39)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0689%" y="613" width="0.0801%" height="15" fill="rgb(242,28,29)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.0689%" y="597" width="0.0801%" height="15" fill="rgb(212,219,47)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.0689%" y="581" width="0.0801%" height="15" fill="rgb(221,35,20)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.0689%" y="565" width="0.0801%" height="15" fill="rgb(234,144,13)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0689%" y="549" width="0.0801%" height="15" fill="rgb(237,41,27)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0689%" y="533" width="0.0801%" height="15" fill="rgb(253,175,5)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.0689%" y="517" width="0.0801%" height="15" fill="rgb(235,210,51)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.0689%" y="501" width="0.0801%" height="15" fill="rgb(241,180,35)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.0689%" y="485" width="0.0801%" height="15" fill="rgb(219,45,16)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.0689%" y="469" width="0.0801%" height="15" fill="rgb(247,212,4)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0689%" y="453" width="0.0801%" height="15" fill="rgb(224,211,1)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="86.4692%" y="517" width="0.1601%" height="15" fill="rgb(210,193,36)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.4692%" y="501" width="0.1601%" height="15" fill="rgb(215,121,20)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="86.3891%" y="533" width="0.3203%" height="15" fill="rgb(238,146,2)" fg:x="1079" fg:w="4"/><text x="86.6391%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6293%" y="517" width="0.0801%" height="15" fill="rgb(254,123,45)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="86.3090%" y="549" width="0.5604%" height="15" fill="rgb(225,126,11)" fg:x="1078" fg:w="7"/><text x="86.5590%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.7094%" y="533" width="0.1601%" height="15" fill="rgb(239,12,5)" fg:x="1083" fg:w="2"/><text x="86.9594%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="86.8695%" y="549" width="0.2402%" height="15" fill="rgb(241,207,14)" fg:x="1085" fg:w="3"/><text x="87.1195%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="86.3090%" y="565" width="1.1209%" height="15" fill="rgb(227,134,33)" fg:x="1078" fg:w="14"/><text x="86.5590%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (4 samples, 0.32%)</title><rect x="87.1097%" y="549" width="0.3203%" height="15" fill="rgb(221,40,52)" fg:x="1088" fg:w="4"/><text x="87.3597%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="87.1898%" y="533" width="0.2402%" height="15" fill="rgb(206,93,8)" fg:x="1089" fg:w="3"/><text x="87.4398%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="87.1898%" y="517" width="0.2402%" height="15" fill="rgb(242,160,22)" fg:x="1089" fg:w="3"/><text x="87.4398%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.20%)</title><rect x="86.3090%" y="581" width="1.2010%" height="15" fill="rgb(232,204,40)" fg:x="1078" fg:w="15"/><text x="86.5590%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="87.4299%" y="565" width="0.0801%" height="15" fill="rgb(247,210,47)" fg:x="1092" fg:w="1"/><text x="87.6799%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.60%)</title><rect x="86.1489%" y="597" width="1.6013%" height="15" fill="rgb(211,91,7)" fg:x="1076" fg:w="20"/><text x="86.3989%" y="607.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="87.5100%" y="581" width="0.2402%" height="15" fill="rgb(252,160,34)" fg:x="1093" fg:w="3"/><text x="87.7600%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (21 samples, 1.68%)</title><rect x="86.1489%" y="613" width="1.6813%" height="15" fill="rgb(220,34,39)" fg:x="1076" fg:w="21"/><text x="86.3989%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7502%" y="597" width="0.0801%" height="15" fill="rgb(247,49,38)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="607.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="87.8303%" y="565" width="0.4003%" height="15" fill="rgb(228,175,44)" fg:x="1097" fg:w="5"/><text x="88.0803%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="88.2306%" y="565" width="0.0801%" height="15" fill="rgb(218,214,32)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="87.8303%" y="581" width="0.6405%" height="15" fill="rgb(213,50,12)" fg:x="1097" fg:w="8"/><text x="88.0803%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.16%)</title><rect x="88.3106%" y="565" width="0.1601%" height="15" fill="rgb(219,35,41)" fg:x="1103" fg:w="2"/><text x="88.5606%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="88.3907%" y="549" width="0.0801%" height="15" fill="rgb(219,18,38)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.3907%" y="533" width="0.0801%" height="15" fill="rgb(223,217,6)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3907%" y="517" width="0.0801%" height="15" fill="rgb(208,193,35)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.3907%" y="501" width="0.0801%" height="15" fill="rgb(254,212,54)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="88.3907%" y="485" width="0.0801%" height="15" fill="rgb(205,10,2)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="88.4708%" y="581" width="0.0801%" height="15" fill="rgb(230,133,29)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="88.4708%" y="565" width="0.0801%" height="15" fill="rgb(226,14,15)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4708%" y="549" width="0.0801%" height="15" fill="rgb(226,140,54)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="88.4708%" y="533" width="0.0801%" height="15" fill="rgb(250,47,41)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.5508%" y="581" width="0.0801%" height="15" fill="rgb(227,218,41)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="88.5508%" y="565" width="0.0801%" height="15" fill="rgb(254,183,7)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="88.5508%" y="549" width="0.0801%" height="15" fill="rgb(206,84,53)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5508%" y="533" width="0.0801%" height="15" fill="rgb(213,177,2)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6309%" y="373" width="0.0801%" height="15" fill="rgb(234,28,29)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="88.6309%" y="517" width="0.1601%" height="15" fill="rgb(248,211,38)" fg:x="1107" fg:w="2"/><text x="88.8809%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="88.6309%" y="501" width="0.1601%" height="15" fill="rgb(246,30,0)" fg:x="1107" fg:w="2"/><text x="88.8809%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="88.6309%" y="485" width="0.1601%" height="15" fill="rgb(244,115,24)" fg:x="1107" fg:w="2"/><text x="88.8809%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="88.6309%" y="469" width="0.1601%" height="15" fill="rgb(226,193,14)" fg:x="1107" fg:w="2"/><text x="88.8809%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="88.6309%" y="453" width="0.1601%" height="15" fill="rgb(211,196,48)" fg:x="1107" fg:w="2"/><text x="88.8809%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="88.6309%" y="437" width="0.1601%" height="15" fill="rgb(235,32,20)" fg:x="1107" fg:w="2"/><text x="88.8809%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="88.6309%" y="421" width="0.1601%" height="15" fill="rgb(251,151,49)" fg:x="1107" fg:w="2"/><text x="88.8809%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="88.6309%" y="405" width="0.1601%" height="15" fill="rgb(254,141,38)" fg:x="1107" fg:w="2"/><text x="88.8809%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="88.6309%" y="389" width="0.1601%" height="15" fill="rgb(209,118,44)" fg:x="1107" fg:w="2"/><text x="88.8809%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.7110%" y="373" width="0.0801%" height="15" fill="rgb(205,81,4)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.7110%" y="357" width="0.0801%" height="15" fill="rgb(241,25,6)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.7110%" y="341" width="0.0801%" height="15" fill="rgb(212,179,29)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="88.7110%" y="325" width="0.0801%" height="15" fill="rgb(241,40,32)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.7110%" y="309" width="0.0801%" height="15" fill="rgb(223,35,2)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.7110%" y="293" width="0.0801%" height="15" fill="rgb(221,125,54)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.7110%" y="277" width="0.0801%" height="15" fill="rgb(230,5,49)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="88.7110%" y="261" width="0.0801%" height="15" fill="rgb(221,157,7)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="88.7110%" y="245" width="0.0801%" height="15" fill="rgb(242,163,10)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7110%" y="229" width="0.0801%" height="15" fill="rgb(232,30,2)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7110%" y="213" width="0.0801%" height="15" fill="rgb(245,102,40)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="88.7110%" y="197" width="0.0801%" height="15" fill="rgb(242,10,41)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="88.7110%" y="181" width="0.0801%" height="15" fill="rgb(236,184,36)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="88.7110%" y="165" width="0.0801%" height="15" fill="rgb(247,147,48)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="88.7110%" y="149" width="0.0801%" height="15" fill="rgb(226,166,2)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="88.7110%" y="133" width="0.0801%" height="15" fill="rgb(251,196,7)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="88.7110%" y="117" width="0.0801%" height="15" fill="rgb(241,40,13)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="88.7110%" y="101" width="0.0801%" height="15" fill="rgb(254,4,12)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="88.7110%" y="85" width="0.0801%" height="15" fill="rgb(244,139,49)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="95.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8711%" y="181" width="0.0801%" height="15" fill="rgb(227,28,42)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="191.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="88.8711%" y="389" width="0.1601%" height="15" fill="rgb(231,135,32)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.8711%" y="373" width="0.1601%" height="15" fill="rgb(244,182,3)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.8711%" y="357" width="0.1601%" height="15" fill="rgb(247,46,19)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.8711%" y="341" width="0.1601%" height="15" fill="rgb(251,179,10)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.8711%" y="325" width="0.1601%" height="15" fill="rgb(229,222,18)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.8711%" y="309" width="0.1601%" height="15" fill="rgb(251,107,20)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.8711%" y="293" width="0.1601%" height="15" fill="rgb(233,193,19)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.8711%" y="277" width="0.1601%" height="15" fill="rgb(229,146,53)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.8711%" y="261" width="0.1601%" height="15" fill="rgb(244,52,11)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.8711%" y="245" width="0.1601%" height="15" fill="rgb(245,211,46)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.8711%" y="229" width="0.1601%" height="15" fill="rgb(213,8,31)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.8711%" y="213" width="0.1601%" height="15" fill="rgb(205,101,39)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.8711%" y="197" width="0.1601%" height="15" fill="rgb(212,157,1)" fg:x="1110" fg:w="2"/><text x="89.1211%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.9512%" y="181" width="0.0801%" height="15" fill="rgb(232,30,46)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.9512%" y="165" width="0.0801%" height="15" fill="rgb(216,201,6)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9512%" y="149" width="0.0801%" height="15" fill="rgb(209,18,6)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9512%" y="133" width="0.0801%" height="15" fill="rgb(219,138,3)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.9512%" y="117" width="0.0801%" height="15" fill="rgb(210,91,46)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="89.0312%" y="357" width="0.1601%" height="15" fill="rgb(241,80,44)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.0312%" y="341" width="0.1601%" height="15" fill="rgb(236,205,36)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="351.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.0312%" y="325" width="0.1601%" height="15" fill="rgb(205,59,37)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.0312%" y="309" width="0.1601%" height="15" fill="rgb(239,166,39)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1113%" y="293" width="0.0801%" height="15" fill="rgb(239,146,40)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="303.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="88.7910%" y="517" width="0.4804%" height="15" fill="rgb(231,11,52)" fg:x="1109" fg:w="6"/><text x="89.0410%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (6 samples, 0.48%)</title><rect x="88.7910%" y="501" width="0.4804%" height="15" fill="rgb(253,21,37)" fg:x="1109" fg:w="6"/><text x="89.0410%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (6 samples, 0.48%)</title><rect x="88.7910%" y="485" width="0.4804%" height="15" fill="rgb(224,87,39)" fg:x="1109" fg:w="6"/><text x="89.0410%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="88.7910%" y="469" width="0.4804%" height="15" fill="rgb(249,15,46)" fg:x="1109" fg:w="6"/><text x="89.0410%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="88.7910%" y="453" width="0.4804%" height="15" fill="rgb(250,37,51)" fg:x="1109" fg:w="6"/><text x="89.0410%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="88.7910%" y="437" width="0.4804%" height="15" fill="rgb(205,185,43)" fg:x="1109" fg:w="6"/><text x="89.0410%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="88.7910%" y="421" width="0.4804%" height="15" fill="rgb(206,65,41)" fg:x="1109" fg:w="6"/><text x="89.0410%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="88.7910%" y="405" width="0.4804%" height="15" fill="rgb(236,159,32)" fg:x="1109" fg:w="6"/><text x="89.0410%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="89.0312%" y="389" width="0.2402%" height="15" fill="rgb(228,199,27)" fg:x="1112" fg:w="3"/><text x="89.2812%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="89.0312%" y="373" width="0.2402%" height="15" fill="rgb(212,0,37)" fg:x="1112" fg:w="3"/><text x="89.2812%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.1914%" y="357" width="0.0801%" height="15" fill="rgb(248,50,11)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1914%" y="341" width="0.0801%" height="15" fill="rgb(231,164,25)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.1914%" y="325" width="0.0801%" height="15" fill="rgb(238,38,39)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1914%" y="309" width="0.0801%" height="15" fill="rgb(210,15,50)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="89.2714%" y="517" width="0.0801%" height="15" fill="rgb(251,126,36)" fg:x="1115" fg:w="1"/><text x="89.5214%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2714%" y="501" width="0.0801%" height="15" fill="rgb(243,59,26)" fg:x="1115" fg:w="1"/><text x="89.5214%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.3515%" y="453" width="0.1601%" height="15" fill="rgb(215,24,30)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.3515%" y="437" width="0.1601%" height="15" fill="rgb(253,50,51)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="89.3515%" y="421" width="0.1601%" height="15" fill="rgb(252,2,16)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="89.3515%" y="405" width="0.1601%" height="15" fill="rgb(209,123,36)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="89.3515%" y="389" width="0.1601%" height="15" fill="rgb(245,60,15)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="89.3515%" y="373" width="0.1601%" height="15" fill="rgb(246,4,13)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="89.3515%" y="357" width="0.1601%" height="15" fill="rgb(210,223,46)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="89.3515%" y="341" width="0.1601%" height="15" fill="rgb(248,1,9)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.4315%" y="325" width="0.0801%" height="15" fill="rgb(254,2,34)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.4315%" y="309" width="0.0801%" height="15" fill="rgb(239,176,1)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.4315%" y="293" width="0.0801%" height="15" fill="rgb(250,25,32)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4315%" y="277" width="0.0801%" height="15" fill="rgb(225,28,39)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="89.3515%" y="485" width="0.2402%" height="15" fill="rgb(230,166,37)" fg:x="1116" fg:w="3"/><text x="89.6015%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="89.3515%" y="469" width="0.2402%" height="15" fill="rgb(246,220,4)" fg:x="1116" fg:w="3"/><text x="89.6015%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5116%" y="453" width="0.0801%" height="15" fill="rgb(219,119,33)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.5116%" y="437" width="0.0801%" height="15" fill="rgb(221,207,38)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5116%" y="421" width="0.0801%" height="15" fill="rgb(214,153,5)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5116%" y="405" width="0.0801%" height="15" fill="rgb(223,50,16)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.5116%" y="389" width="0.0801%" height="15" fill="rgb(209,207,12)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.5116%" y="373" width="0.0801%" height="15" fill="rgb(207,3,46)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.5116%" y="357" width="0.0801%" height="15" fill="rgb(232,45,53)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.5116%" y="341" width="0.0801%" height="15" fill="rgb(206,140,15)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.5116%" y="325" width="0.0801%" height="15" fill="rgb(245,66,17)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.5116%" y="309" width="0.0801%" height="15" fill="rgb(221,25,37)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.5116%" y="293" width="0.0801%" height="15" fill="rgb(215,99,47)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.5116%" y="277" width="0.0801%" height="15" fill="rgb(219,154,44)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.5116%" y="261" width="0.0801%" height="15" fill="rgb(210,197,36)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5116%" y="245" width="0.0801%" height="15" fill="rgb(217,137,10)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="89.5917%" y="485" width="0.1601%" height="15" fill="rgb(240,216,26)" fg:x="1119" fg:w="2"/><text x="89.8417%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="89.5917%" y="469" width="0.1601%" height="15" fill="rgb(242,76,17)" fg:x="1119" fg:w="2"/><text x="89.8417%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.6717%" y="453" width="0.0801%" height="15" fill="rgb(243,142,51)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="89.6717%" y="437" width="0.0801%" height="15" fill="rgb(233,109,46)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="447.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="89.6717%" y="421" width="0.0801%" height="15" fill="rgb(252,45,32)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.6717%" y="405" width="0.0801%" height="15" fill="rgb(210,69,52)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="415.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (16 samples, 1.28%)</title><rect x="88.6309%" y="533" width="1.2810%" height="15" fill="rgb(242,30,2)" fg:x="1107" fg:w="16"/><text x="88.8809%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="89.3515%" y="517" width="0.5604%" height="15" fill="rgb(246,137,1)" fg:x="1116" fg:w="7"/><text x="89.6015%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="89.3515%" y="501" width="0.5604%" height="15" fill="rgb(221,205,25)" fg:x="1116" fg:w="7"/><text x="89.6015%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.7518%" y="485" width="0.1601%" height="15" fill="rgb(224,44,43)" fg:x="1121" fg:w="2"/><text x="90.0018%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.7518%" y="469" width="0.1601%" height="15" fill="rgb(209,81,13)" fg:x="1121" fg:w="2"/><text x="90.0018%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="89.8319%" y="453" width="0.0801%" height="15" fill="rgb(227,88,4)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="89.8319%" y="437" width="0.0801%" height="15" fill="rgb(228,118,49)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="89.8319%" y="421" width="0.0801%" height="15" fill="rgb(225,215,27)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8319%" y="405" width="0.0801%" height="15" fill="rgb(235,226,1)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8319%" y="389" width="0.0801%" height="15" fill="rgb(205,107,17)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="89.8319%" y="373" width="0.0801%" height="15" fill="rgb(247,85,8)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.9920%" y="517" width="0.0801%" height="15" fill="rgb(230,220,20)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9920%" y="501" width="0.0801%" height="15" fill="rgb(237,22,6)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9920%" y="485" width="0.0801%" height="15" fill="rgb(253,39,1)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.9920%" y="469" width="0.0801%" height="15" fill="rgb(251,206,50)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.9920%" y="453" width="0.0801%" height="15" fill="rgb(239,162,11)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.9920%" y="437" width="0.0801%" height="15" fill="rgb(234,164,6)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.9920%" y="421" width="0.0801%" height="15" fill="rgb(238,112,10)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.9920%" y="405" width="0.0801%" height="15" fill="rgb(232,78,29)" fg:x="1124" fg:w="1"/><text x="90.2420%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2322%" y="453" width="0.0801%" height="15" fill="rgb(232,20,13)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2322%" y="437" width="0.0801%" height="15" fill="rgb(222,175,9)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.2322%" y="421" width="0.0801%" height="15" fill="rgb(233,61,14)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.2322%" y="405" width="0.0801%" height="15" fill="rgb(224,152,29)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.2322%" y="389" width="0.0801%" height="15" fill="rgb(232,26,6)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.2322%" y="373" width="0.0801%" height="15" fill="rgb(210,116,11)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.2322%" y="357" width="0.0801%" height="15" fill="rgb(238,213,15)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.2322%" y="341" width="0.0801%" height="15" fill="rgb(236,177,32)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.2322%" y="325" width="0.0801%" height="15" fill="rgb(230,36,43)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.2322%" y="309" width="0.0801%" height="15" fill="rgb(212,76,23)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.2322%" y="293" width="0.0801%" height="15" fill="rgb(225,168,24)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2322%" y="277" width="0.0801%" height="15" fill="rgb(206,40,44)" fg:x="1127" fg:w="1"/><text x="90.4822%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3122%" y="341" width="0.0801%" height="15" fill="rgb(251,213,6)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3122%" y="325" width="0.0801%" height="15" fill="rgb(220,7,47)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.3122%" y="309" width="0.0801%" height="15" fill="rgb(254,130,53)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.3122%" y="293" width="0.0801%" height="15" fill="rgb(240,2,46)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.3122%" y="277" width="0.0801%" height="15" fill="rgb(252,144,40)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.3122%" y="261" width="0.0801%" height="15" fill="rgb(226,23,10)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3122%" y="245" width="0.0801%" height="15" fill="rgb(212,204,35)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.3122%" y="437" width="0.1601%" height="15" fill="rgb(218,201,15)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.3122%" y="421" width="0.1601%" height="15" fill="rgb(224,197,5)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.3122%" y="405" width="0.1601%" height="15" fill="rgb(224,185,18)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="90.3122%" y="389" width="0.1601%" height="15" fill="rgb(251,71,45)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="90.3122%" y="373" width="0.1601%" height="15" fill="rgb(216,74,24)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="90.3122%" y="357" width="0.1601%" height="15" fill="rgb(250,36,51)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.3923%" y="341" width="0.0801%" height="15" fill="rgb(209,224,28)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.3923%" y="325" width="0.0801%" height="15" fill="rgb(228,5,10)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="90.1521%" y="485" width="0.4003%" height="15" fill="rgb(250,57,40)" fg:x="1126" fg:w="5"/><text x="90.4021%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="90.1521%" y="469" width="0.4003%" height="15" fill="rgb(228,194,41)" fg:x="1126" fg:w="5"/><text x="90.4021%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="90.3122%" y="453" width="0.2402%" height="15" fill="rgb(206,68,23)" fg:x="1128" fg:w="3"/><text x="90.5622%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="90.4724%" y="437" width="0.0801%" height="15" fill="rgb(230,33,29)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="90.4724%" y="421" width="0.0801%" height="15" fill="rgb(210,39,32)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="90.6325%" y="341" width="0.0801%" height="15" fill="rgb(236,89,23)" fg:x="1132" fg:w="1"/><text x="90.8825%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7126%" y="309" width="0.0801%" height="15" fill="rgb(218,52,52)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7126%" y="293" width="0.0801%" height="15" fill="rgb(235,154,5)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7126%" y="277" width="0.0801%" height="15" fill="rgb(223,168,9)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7126%" y="261" width="0.0801%" height="15" fill="rgb(220,8,33)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.7126%" y="245" width="0.0801%" height="15" fill="rgb(216,176,3)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.7126%" y="229" width="0.0801%" height="15" fill="rgb(254,150,22)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.7126%" y="213" width="0.0801%" height="15" fill="rgb(231,61,53)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.7126%" y="197" width="0.0801%" height="15" fill="rgb(249,177,41)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.7126%" y="181" width="0.0801%" height="15" fill="rgb(221,122,7)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.7126%" y="165" width="0.0801%" height="15" fill="rgb(215,115,7)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.7126%" y="149" width="0.0801%" height="15" fill="rgb(218,108,33)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.7126%" y="133" width="0.0801%" height="15" fill="rgb(221,205,39)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.7126%" y="117" width="0.0801%" height="15" fill="rgb(220,171,18)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.7126%" y="101" width="0.0801%" height="15" fill="rgb(236,188,29)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.7126%" y="85" width="0.0801%" height="15" fill="rgb(239,29,5)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7126%" y="69" width="0.0801%" height="15" fill="rgb(236,114,44)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="79.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="90.6325%" y="389" width="0.3203%" height="15" fill="rgb(239,214,48)" fg:x="1132" fg:w="4"/><text x="90.8825%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="90.6325%" y="373" width="0.3203%" height="15" fill="rgb(241,56,8)" fg:x="1132" fg:w="4"/><text x="90.8825%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="90.6325%" y="357" width="0.3203%" height="15" fill="rgb(228,201,0)" fg:x="1132" fg:w="4"/><text x="90.8825%" y="367.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="90.7126%" y="341" width="0.2402%" height="15" fill="rgb(226,219,34)" fg:x="1133" fg:w="3"/><text x="90.9626%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.7126%" y="325" width="0.2402%" height="15" fill="rgb(209,204,54)" fg:x="1133" fg:w="3"/><text x="90.9626%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.7926%" y="309" width="0.1601%" height="15" fill="rgb(251,160,17)" fg:x="1134" fg:w="2"/><text x="91.0426%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.7926%" y="293" width="0.1601%" height="15" fill="rgb(235,15,25)" fg:x="1134" fg:w="2"/><text x="91.0426%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.7926%" y="277" width="0.1601%" height="15" fill="rgb(216,209,28)" fg:x="1134" fg:w="2"/><text x="91.0426%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.7926%" y="261" width="0.1601%" height="15" fill="rgb(248,123,21)" fg:x="1134" fg:w="2"/><text x="91.0426%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="90.7926%" y="245" width="0.1601%" height="15" fill="rgb(226,138,44)" fg:x="1134" fg:w="2"/><text x="91.0426%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.7926%" y="229" width="0.1601%" height="15" fill="rgb(211,104,54)" fg:x="1134" fg:w="2"/><text x="91.0426%" y="239.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="90.9528%" y="373" width="0.0801%" height="15" fill="rgb(241,198,15)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.9528%" y="357" width="0.0801%" height="15" fill="rgb(227,155,54)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9528%" y="341" width="0.0801%" height="15" fill="rgb(225,131,31)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.9528%" y="325" width="0.0801%" height="15" fill="rgb(242,40,17)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9528%" y="309" width="0.0801%" height="15" fill="rgb(254,57,35)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.0328%" y="341" width="0.1601%" height="15" fill="rgb(240,64,32)" fg:x="1137" fg:w="2"/><text x="91.2828%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.1930%" y="309" width="0.1601%" height="15" fill="rgb(251,136,26)" fg:x="1139" fg:w="2"/><text x="91.4430%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.1930%" y="293" width="0.1601%" height="15" fill="rgb(208,60,54)" fg:x="1139" fg:w="2"/><text x="91.4430%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.4331%" y="293" width="0.0801%" height="15" fill="rgb(220,13,12)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4331%" y="277" width="0.0801%" height="15" fill="rgb(213,149,1)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.4331%" y="261" width="0.0801%" height="15" fill="rgb(212,191,39)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4331%" y="245" width="0.0801%" height="15" fill="rgb(215,221,42)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.4331%" y="229" width="0.0801%" height="15" fill="rgb(244,79,23)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4331%" y="213" width="0.0801%" height="15" fill="rgb(247,17,29)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="91.4331%" y="197" width="0.0801%" height="15" fill="rgb(251,221,21)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="91.1930%" y="341" width="0.4003%" height="15" fill="rgb(207,202,34)" fg:x="1139" fg:w="5"/><text x="91.4430%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="91.1930%" y="325" width="0.4003%" height="15" fill="rgb(217,4,34)" fg:x="1139" fg:w="5"/><text x="91.4430%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="91.3531%" y="309" width="0.2402%" height="15" fill="rgb(253,17,16)" fg:x="1141" fg:w="3"/><text x="91.6031%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5132%" y="293" width="0.0801%" height="15" fill="rgb(223,91,48)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5132%" y="277" width="0.0801%" height="15" fill="rgb(244,191,22)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.5132%" y="261" width="0.0801%" height="15" fill="rgb(211,107,14)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="271.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.12%)</title><rect x="90.5524%" y="469" width="1.1209%" height="15" fill="rgb(232,81,23)" fg:x="1131" fg:w="14"/><text x="90.8024%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="90.5524%" y="453" width="1.1209%" height="15" fill="rgb(237,126,14)" fg:x="1131" fg:w="14"/><text x="90.8024%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.04%)</title><rect x="90.6325%" y="437" width="1.0408%" height="15" fill="rgb(230,65,39)" fg:x="1132" fg:w="13"/><text x="90.8825%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.04%)</title><rect x="90.6325%" y="421" width="1.0408%" height="15" fill="rgb(208,106,41)" fg:x="1132" fg:w="13"/><text x="90.8825%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.04%)</title><rect x="90.6325%" y="405" width="1.0408%" height="15" fill="rgb(206,125,25)" fg:x="1132" fg:w="13"/><text x="90.8825%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.72%)</title><rect x="90.9528%" y="389" width="0.7206%" height="15" fill="rgb(250,24,29)" fg:x="1136" fg:w="9"/><text x="91.2028%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="91.0328%" y="373" width="0.6405%" height="15" fill="rgb(226,49,32)" fg:x="1137" fg:w="8"/><text x="91.2828%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="91.0328%" y="357" width="0.6405%" height="15" fill="rgb(217,110,16)" fg:x="1137" fg:w="8"/><text x="91.2828%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.5933%" y="341" width="0.0801%" height="15" fill="rgb(252,16,53)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5933%" y="325" width="0.0801%" height="15" fill="rgb(238,163,11)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5933%" y="309" width="0.0801%" height="15" fill="rgb(206,210,1)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (15 samples, 1.20%)</title><rect x="90.5524%" y="485" width="1.2010%" height="15" fill="rgb(229,8,25)" fg:x="1131" fg:w="15"/><text x="90.8024%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="91.6733%" y="469" width="0.0801%" height="15" fill="rgb(247,155,23)" fg:x="1145" fg:w="1"/><text x="91.9233%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.6733%" y="453" width="0.0801%" height="15" fill="rgb(207,26,7)" fg:x="1145" fg:w="1"/><text x="91.9233%" y="463.50"></text></g><g><title>plugins_core::tools::get_contained_keys (25 samples, 2.00%)</title><rect x="89.9119%" y="533" width="2.0016%" height="15" fill="rgb(215,179,12)" fg:x="1123" fg:w="25"/><text x="90.1619%" y="543.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (23 samples, 1.84%)</title><rect x="90.0721%" y="517" width="1.8415%" height="15" fill="rgb(238,208,11)" fg:x="1125" fg:w="23"/><text x="90.3221%" y="527.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (23 samples, 1.84%)</title><rect x="90.0721%" y="501" width="1.8415%" height="15" fill="rgb(238,102,42)" fg:x="1125" fg:w="23"/><text x="90.3221%" y="511.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.7534%" y="485" width="0.1601%" height="15" fill="rgb(239,35,9)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.7534%" y="469" width="0.1601%" height="15" fill="rgb(244,182,30)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="91.7534%" y="453" width="0.1601%" height="15" fill="rgb(232,181,23)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="91.7534%" y="437" width="0.1601%" height="15" fill="rgb(242,154,29)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="91.7534%" y="421" width="0.1601%" height="15" fill="rgb(219,23,2)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.7534%" y="405" width="0.1601%" height="15" fill="rgb(234,94,43)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.7534%" y="389" width="0.1601%" height="15" fill="rgb(223,55,45)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.7534%" y="373" width="0.1601%" height="15" fill="rgb(241,215,54)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 3.44%)</title><rect x="88.6309%" y="565" width="3.4428%" height="15" fill="rgb(247,63,53)" fg:x="1107" fg:w="43"/><text x="88.8809%" y="575.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (43 samples, 3.44%)</title><rect x="88.6309%" y="549" width="3.4428%" height="15" fill="rgb(220,166,7)" fg:x="1107" fg:w="43"/><text x="88.8809%" y="559.50">&lt;co..</text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="91.9135%" y="533" width="0.1601%" height="15" fill="rgb(248,53,45)" fg:x="1148" fg:w="2"/><text x="92.1635%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="91.9135%" y="517" width="0.1601%" height="15" fill="rgb(224,207,20)" fg:x="1148" fg:w="2"/><text x="92.1635%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.9936%" y="501" width="0.0801%" height="15" fill="rgb(244,185,11)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9936%" y="485" width="0.0801%" height="15" fill="rgb(230,13,42)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9936%" y="469" width="0.0801%" height="15" fill="rgb(243,191,18)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.9936%" y="453" width="0.0801%" height="15" fill="rgb(249,135,15)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.9936%" y="437" width="0.0801%" height="15" fill="rgb(229,26,35)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.9936%" y="421" width="0.0801%" height="15" fill="rgb(216,191,16)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9936%" y="405" width="0.0801%" height="15" fill="rgb(242,18,7)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9936%" y="389" width="0.0801%" height="15" fill="rgb(205,128,17)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="92.1537%" y="501" width="0.1601%" height="15" fill="rgb(229,199,44)" fg:x="1151" fg:w="2"/><text x="92.4037%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="92.1537%" y="485" width="0.1601%" height="15" fill="rgb(234,222,3)" fg:x="1151" fg:w="2"/><text x="92.4037%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.3139%" y="277" width="0.0801%" height="15" fill="rgb(220,170,20)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.3139%" y="261" width="0.0801%" height="15" fill="rgb(207,138,8)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.3139%" y="245" width="0.0801%" height="15" fill="rgb(244,130,36)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="92.3139%" y="229" width="0.0801%" height="15" fill="rgb(207,197,52)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.3139%" y="213" width="0.0801%" height="15" fill="rgb(206,9,21)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3139%" y="197" width="0.0801%" height="15" fill="rgb(250,15,47)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="207.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="92.3139%" y="373" width="0.1601%" height="15" fill="rgb(235,202,14)" fg:x="1153" fg:w="2"/><text x="92.5639%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="92.3139%" y="357" width="0.1601%" height="15" fill="rgb(211,180,47)" fg:x="1153" fg:w="2"/><text x="92.5639%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="92.3139%" y="341" width="0.1601%" height="15" fill="rgb(209,61,11)" fg:x="1153" fg:w="2"/><text x="92.5639%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="92.3139%" y="325" width="0.1601%" height="15" fill="rgb(243,197,29)" fg:x="1153" fg:w="2"/><text x="92.5639%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="92.3139%" y="309" width="0.1601%" height="15" fill="rgb(216,185,16)" fg:x="1153" fg:w="2"/><text x="92.5639%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="92.3139%" y="293" width="0.1601%" height="15" fill="rgb(248,5,15)" fg:x="1153" fg:w="2"/><text x="92.5639%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.3939%" y="277" width="0.0801%" height="15" fill="rgb(240,39,41)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="92.1537%" y="517" width="0.4003%" height="15" fill="rgb(224,220,43)" fg:x="1151" fg:w="5"/><text x="92.4037%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="92.3139%" y="501" width="0.2402%" height="15" fill="rgb(215,21,24)" fg:x="1153" fg:w="3"/><text x="92.5639%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="92.3139%" y="485" width="0.2402%" height="15" fill="rgb(220,102,8)" fg:x="1153" fg:w="3"/><text x="92.5639%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="92.3139%" y="469" width="0.2402%" height="15" fill="rgb(225,185,10)" fg:x="1153" fg:w="3"/><text x="92.5639%" y="479.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="92.3139%" y="453" width="0.2402%" height="15" fill="rgb(212,108,24)" fg:x="1153" fg:w="3"/><text x="92.5639%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="92.3139%" y="437" width="0.2402%" height="15" fill="rgb(237,27,0)" fg:x="1153" fg:w="3"/><text x="92.5639%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="92.3139%" y="421" width="0.2402%" height="15" fill="rgb(212,106,38)" fg:x="1153" fg:w="3"/><text x="92.5639%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="92.3139%" y="405" width="0.2402%" height="15" fill="rgb(210,125,30)" fg:x="1153" fg:w="3"/><text x="92.5639%" y="415.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="92.3139%" y="389" width="0.2402%" height="15" fill="rgb(215,219,1)" fg:x="1153" fg:w="3"/><text x="92.5639%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.4740%" y="373" width="0.0801%" height="15" fill="rgb(223,10,12)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="92.4740%" y="357" width="0.0801%" height="15" fill="rgb(245,40,34)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.4740%" y="341" width="0.0801%" height="15" fill="rgb(211,185,19)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.4740%" y="325" width="0.0801%" height="15" fill="rgb(243,190,43)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.4740%" y="309" width="0.0801%" height="15" fill="rgb(232,208,29)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.4740%" y="293" width="0.0801%" height="15" fill="rgb(234,134,27)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.4740%" y="277" width="0.0801%" height="15" fill="rgb(225,41,29)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="92.4740%" y="261" width="0.0801%" height="15" fill="rgb(241,214,44)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="92.4740%" y="245" width="0.0801%" height="15" fill="rgb(205,219,41)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="92.4740%" y="229" width="0.0801%" height="15" fill="rgb(226,15,26)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="92.4740%" y="213" width="0.0801%" height="15" fill="rgb(210,83,41)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="93.5949%" y="165" width="0.0801%" height="15" fill="rgb(247,9,39)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="175.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.5949%" y="149" width="0.0801%" height="15" fill="rgb(209,37,30)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="93.5949%" y="133" width="0.0801%" height="15" fill="rgb(248,170,46)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="143.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.5949%" y="117" width="0.0801%" height="15" fill="rgb(237,129,44)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="93.4347%" y="181" width="0.3203%" height="15" fill="rgb(225,117,51)" fg:x="1167" fg:w="4"/><text x="93.6847%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6749%" y="165" width="0.0801%" height="15" fill="rgb(212,165,2)" fg:x="1170" fg:w="1"/><text x="93.9249%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6749%" y="149" width="0.0801%" height="15" fill="rgb(213,53,45)" fg:x="1170" fg:w="1"/><text x="93.9249%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.48%)</title><rect x="93.3547%" y="261" width="0.4804%" height="15" fill="rgb(220,148,3)" fg:x="1166" fg:w="6"/><text x="93.6047%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="93.3547%" y="245" width="0.4804%" height="15" fill="rgb(228,37,29)" fg:x="1166" fg:w="6"/><text x="93.6047%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.40%)</title><rect x="93.4347%" y="229" width="0.4003%" height="15" fill="rgb(209,76,29)" fg:x="1167" fg:w="5"/><text x="93.6847%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.40%)</title><rect x="93.4347%" y="213" width="0.4003%" height="15" fill="rgb(215,90,5)" fg:x="1167" fg:w="5"/><text x="93.6847%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="93.4347%" y="197" width="0.4003%" height="15" fill="rgb(227,207,32)" fg:x="1167" fg:w="5"/><text x="93.6847%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="93.7550%" y="181" width="0.0801%" height="15" fill="rgb(251,218,44)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7550%" y="165" width="0.0801%" height="15" fill="rgb(211,44,16)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.72%)</title><rect x="93.2746%" y="309" width="0.7206%" height="15" fill="rgb(242,170,37)" fg:x="1165" fg:w="9"/><text x="93.5246%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="93.2746%" y="293" width="0.7206%" height="15" fill="rgb(205,181,22)" fg:x="1165" fg:w="9"/><text x="93.5246%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.72%)</title><rect x="93.2746%" y="277" width="0.7206%" height="15" fill="rgb(228,130,19)" fg:x="1165" fg:w="9"/><text x="93.5246%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.8351%" y="261" width="0.1601%" height="15" fill="rgb(228,9,15)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="93.8351%" y="245" width="0.1601%" height="15" fill="rgb(219,66,48)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.9952%" y="309" width="0.0801%" height="15" fill="rgb(234,203,10)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.9952%" y="293" width="0.0801%" height="15" fill="rgb(219,209,1)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="93.2746%" y="341" width="0.8807%" height="15" fill="rgb(206,167,9)" fg:x="1165" fg:w="11"/><text x="93.5246%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.88%)</title><rect x="93.2746%" y="325" width="0.8807%" height="15" fill="rgb(210,11,39)" fg:x="1165" fg:w="11"/><text x="93.5246%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.0753%" y="309" width="0.0801%" height="15" fill="rgb(251,90,47)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.0753%" y="293" width="0.0801%" height="15" fill="rgb(237,7,4)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="94.1553%" y="325" width="0.1601%" height="15" fill="rgb(232,205,47)" fg:x="1176" fg:w="2"/><text x="94.4053%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="94.2354%" y="309" width="0.0801%" height="15" fill="rgb(215,86,48)" fg:x="1177" fg:w="1"/><text x="94.4854%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.2354%" y="293" width="0.0801%" height="15" fill="rgb(232,14,47)" fg:x="1177" fg:w="1"/><text x="94.4854%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="94.2354%" y="277" width="0.0801%" height="15" fill="rgb(240,28,46)" fg:x="1177" fg:w="1"/><text x="94.4854%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (14 samples, 1.12%)</title><rect x="93.2746%" y="357" width="1.1209%" height="15" fill="rgb(224,85,5)" fg:x="1165" fg:w="14"/><text x="93.5246%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="94.1553%" y="341" width="0.2402%" height="15" fill="rgb(219,34,25)" fg:x="1176" fg:w="3"/><text x="94.4053%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3155%" y="325" width="0.0801%" height="15" fill="rgb(247,137,45)" fg:x="1178" fg:w="1"/><text x="94.5655%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.36%)</title><rect x="93.1145%" y="373" width="1.3611%" height="15" fill="rgb(237,121,47)" fg:x="1163" fg:w="17"/><text x="93.3645%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3955%" y="357" width="0.0801%" height="15" fill="rgb(247,148,27)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (19 samples, 1.52%)</title><rect x="93.0344%" y="405" width="1.5212%" height="15" fill="rgb(220,44,0)" fg:x="1162" fg:w="19"/><text x="93.2844%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 1.44%)</title><rect x="93.1145%" y="389" width="1.4412%" height="15" fill="rgb(236,61,29)" fg:x="1163" fg:w="18"/><text x="93.3645%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="94.4756%" y="373" width="0.0801%" height="15" fill="rgb(244,180,35)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 1.76%)</title><rect x="93.0344%" y="421" width="1.7614%" height="15" fill="rgb(242,14,54)" fg:x="1162" fg:w="22"/><text x="93.2844%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="94.5556%" y="405" width="0.2402%" height="15" fill="rgb(206,24,45)" fg:x="1181" fg:w="3"/><text x="94.8056%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="94.6357%" y="389" width="0.1601%" height="15" fill="rgb(215,211,6)" fg:x="1182" fg:w="2"/><text x="94.8857%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.24%)</title><rect x="92.7942%" y="453" width="2.2418%" height="15" fill="rgb(207,56,2)" fg:x="1159" fg:w="28"/><text x="93.0442%" y="463.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (25 samples, 2.00%)</title><rect x="93.0344%" y="437" width="2.0016%" height="15" fill="rgb(220,135,9)" fg:x="1162" fg:w="25"/><text x="93.2844%" y="447.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="94.7958%" y="421" width="0.2402%" height="15" fill="rgb(214,145,52)" fg:x="1184" fg:w="3"/><text x="95.0458%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9560%" y="405" width="0.0801%" height="15" fill="rgb(241,83,53)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.0360%" y="437" width="0.0801%" height="15" fill="rgb(222,66,13)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (32 samples, 2.56%)</title><rect x="92.6341%" y="501" width="2.5620%" height="15" fill="rgb(239,164,54)" fg:x="1157" fg:w="32"/><text x="92.8841%" y="511.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (32 samples, 2.56%)</title><rect x="92.6341%" y="485" width="2.5620%" height="15" fill="rgb(216,189,13)" fg:x="1157" fg:w="32"/><text x="92.8841%" y="495.50">&lt;s..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 2.56%)</title><rect x="92.6341%" y="469" width="2.5620%" height="15" fill="rgb(228,212,51)" fg:x="1157" fg:w="32"/><text x="92.8841%" y="479.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.0360%" y="453" width="0.1601%" height="15" fill="rgb(207,190,21)" fg:x="1187" fg:w="2"/><text x="95.2860%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1161%" y="437" width="0.0801%" height="15" fill="rgb(245,28,35)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4363%" y="453" width="0.0801%" height="15" fill="rgb(239,23,40)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="95.5164%" y="453" width="0.2402%" height="15" fill="rgb(242,10,51)" fg:x="1193" fg:w="3"/><text x="95.7664%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6765%" y="437" width="0.0801%" height="15" fill="rgb(207,186,5)" fg:x="1195" fg:w="1"/><text x="95.9265%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6765%" y="421" width="0.0801%" height="15" fill="rgb(242,21,16)" fg:x="1195" fg:w="1"/><text x="95.9265%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="95.7566%" y="453" width="0.0801%" height="15" fill="rgb(237,0,53)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.7566%" y="437" width="0.0801%" height="15" fill="rgb(215,8,52)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7566%" y="421" width="0.0801%" height="15" fill="rgb(248,62,44)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="95.8367%" y="453" width="0.1601%" height="15" fill="rgb(224,83,15)" fg:x="1197" fg:w="2"/><text x="96.0867%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="95.8367%" y="437" width="0.1601%" height="15" fill="rgb(249,100,46)" fg:x="1197" fg:w="2"/><text x="96.0867%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9167%" y="421" width="0.0801%" height="15" fill="rgb(213,35,48)" fg:x="1198" fg:w="1"/><text x="96.1667%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="96.0769%" y="421" width="0.0801%" height="15" fill="rgb(251,2,13)" fg:x="1200" fg:w="1"/><text x="96.3269%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="95.9968%" y="453" width="0.4804%" height="15" fill="rgb(212,132,21)" fg:x="1199" fg:w="6"/><text x="96.2468%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="95.9968%" y="437" width="0.4804%" height="15" fill="rgb(247,17,21)" fg:x="1199" fg:w="6"/><text x="96.2468%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="96.1569%" y="421" width="0.3203%" height="15" fill="rgb(220,177,38)" fg:x="1201" fg:w="4"/><text x="96.4069%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3971%" y="405" width="0.0801%" height="15" fill="rgb(233,219,21)" fg:x="1204" fg:w="1"/><text x="96.6471%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="96.3971%" y="389" width="0.0801%" height="15" fill="rgb(246,17,7)" fg:x="1204" fg:w="1"/><text x="96.6471%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="96.6373%" y="421" width="0.0801%" height="15" fill="rgb(212,4,22)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.7974%" y="405" width="0.0801%" height="15" fill="rgb(243,85,21)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.0376%" y="357" width="0.1601%" height="15" fill="rgb(232,218,2)" fg:x="1212" fg:w="2"/><text x="97.2876%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="96.8775%" y="405" width="0.4003%" height="15" fill="rgb(253,168,47)" fg:x="1210" fg:w="5"/><text x="97.1275%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="96.8775%" y="389" width="0.4003%" height="15" fill="rgb(238,101,25)" fg:x="1210" fg:w="5"/><text x="97.1275%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="96.9576%" y="373" width="0.3203%" height="15" fill="rgb(251,86,12)" fg:x="1211" fg:w="4"/><text x="97.2076%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="97.1978%" y="357" width="0.0801%" height="15" fill="rgb(241,112,44)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1978%" y="341" width="0.0801%" height="15" fill="rgb(224,28,25)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.3579%" y="373" width="0.2402%" height="15" fill="rgb(209,201,1)" fg:x="1216" fg:w="3"/><text x="97.6079%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.4380%" y="357" width="0.1601%" height="15" fill="rgb(231,30,22)" fg:x="1217" fg:w="2"/><text x="97.6880%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7582%" y="341" width="0.0801%" height="15" fill="rgb(247,96,31)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7582%" y="325" width="0.0801%" height="15" fill="rgb(251,100,12)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7582%" y="309" width="0.0801%" height="15" fill="rgb(224,174,7)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="97.3579%" y="389" width="0.8807%" height="15" fill="rgb(231,168,19)" fg:x="1216" fg:w="11"/><text x="97.6079%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="97.5981%" y="373" width="0.6405%" height="15" fill="rgb(226,85,5)" fg:x="1219" fg:w="8"/><text x="97.8481%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="97.7582%" y="357" width="0.4804%" height="15" fill="rgb(210,215,5)" fg:x="1221" fg:w="6"/><text x="98.0082%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="97.8383%" y="341" width="0.4003%" height="15" fill="rgb(233,70,8)" fg:x="1222" fg:w="5"/><text x="98.0883%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="97.8383%" y="325" width="0.4003%" height="15" fill="rgb(229,109,53)" fg:x="1222" fg:w="5"/><text x="98.0883%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="97.8383%" y="309" width="0.4003%" height="15" fill="rgb(213,125,35)" fg:x="1222" fg:w="5"/><text x="98.0883%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="98.0785%" y="293" width="0.1601%" height="15" fill="rgb(215,12,48)" fg:x="1225" fg:w="2"/><text x="98.3285%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.1585%" y="277" width="0.0801%" height="15" fill="rgb(207,12,38)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.1585%" y="261" width="0.0801%" height="15" fill="rgb(216,229,2)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1585%" y="245" width="0.0801%" height="15" fill="rgb(229,209,31)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.60%)</title><rect x="96.7174%" y="421" width="1.6013%" height="15" fill="rgb(239,57,22)" fg:x="1208" fg:w="20"/><text x="96.9674%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="97.2778%" y="405" width="1.0408%" height="15" fill="rgb(239,119,54)" fg:x="1215" fg:w="13"/><text x="97.5278%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2386%" y="389" width="0.0801%" height="15" fill="rgb(231,80,45)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (25 samples, 2.00%)</title><rect x="96.4772%" y="437" width="2.0016%" height="15" fill="rgb(219,138,19)" fg:x="1205" fg:w="25"/><text x="96.7272%" y="447.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="98.3187%" y="421" width="0.1601%" height="15" fill="rgb(216,53,26)" fg:x="1228" fg:w="2"/><text x="98.5687%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3987%" y="405" width="0.0801%" height="15" fill="rgb(224,30,16)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="415.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (75 samples, 6.00%)</title><rect x="92.5540%" y="517" width="6.0048%" height="15" fill="rgb(224,151,24)" fg:x="1156" fg:w="75"/><text x="92.8040%" y="527.50">&lt;rpc_pro..</text></g><g><title>kernel::model::EntityPtr::to_json_value (42 samples, 3.36%)</title><rect x="95.1962%" y="501" width="3.3627%" height="15" fill="rgb(236,75,7)" fg:x="1189" fg:w="42"/><text x="95.4462%" y="511.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (42 samples, 3.36%)</title><rect x="95.1962%" y="485" width="3.3627%" height="15" fill="rgb(248,106,42)" fg:x="1189" fg:w="42"/><text x="95.4462%" y="495.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (41 samples, 3.28%)</title><rect x="95.2762%" y="469" width="3.2826%" height="15" fill="rgb(222,217,11)" fg:x="1190" fg:w="41"/><text x="95.5262%" y="479.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (26 samples, 2.08%)</title><rect x="96.4772%" y="453" width="2.0817%" height="15" fill="rgb(234,143,31)" fg:x="1205" fg:w="26"/><text x="96.7272%" y="463.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4788%" y="437" width="0.0801%" height="15" fill="rgb(237,148,28)" fg:x="1230" fg:w="1"/><text x="98.7288%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4788%" y="421" width="0.0801%" height="15" fill="rgb(241,151,6)" fg:x="1230" fg:w="1"/><text x="98.7288%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4788%" y="405" width="0.0801%" height="15" fill="rgb(226,55,18)" fg:x="1230" fg:w="1"/><text x="98.7288%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.5588%" y="517" width="0.0801%" height="15" fill="rgb(226,196,6)" fg:x="1231" fg:w="1"/><text x="98.8088%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (126 samples, 10.09%)</title><rect x="88.6309%" y="581" width="10.0881%" height="15" fill="rgb(251,228,11)" fg:x="1107" fg:w="126"/><text x="88.8809%" y="591.50">core::iter::ada..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (83 samples, 6.65%)</title><rect x="92.0737%" y="565" width="6.6453%" height="15" fill="rgb(219,197,15)" fg:x="1150" fg:w="83"/><text x="92.3237%" y="575.50">alloc::ve..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (83 samples, 6.65%)</title><rect x="92.0737%" y="549" width="6.6453%" height="15" fill="rgb(243,105,44)" fg:x="1150" fg:w="83"/><text x="92.3237%" y="559.50">&lt;core::it..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (83 samples, 6.65%)</title><rect x="92.0737%" y="533" width="6.6453%" height="15" fill="rgb(205,183,40)" fg:x="1150" fg:w="83"/><text x="92.3237%" y="543.50">plugins_r..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.6389%" y="517" width="0.0801%" height="15" fill="rgb(232,138,46)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="527.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (137 samples, 10.97%)</title><rect x="87.8303%" y="597" width="10.9688%" height="15" fill="rgb(234,161,14)" fg:x="1097" fg:w="137"/><text x="88.0803%" y="607.50">&lt;plugins_rpc::se..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7190%" y="581" width="0.0801%" height="15" fill="rgb(238,211,18)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7190%" y="565" width="0.0801%" height="15" fill="rgb(217,130,2)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="575.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="98.7990%" y="597" width="0.0801%" height="15" fill="rgb(251,17,29)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="607.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="98.8791%" y="597" width="0.0801%" height="15" fill="rgb(243,18,0)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (232 samples, 18.57%)</title><rect x="80.4644%" y="661" width="18.5749%" height="15" fill="rgb(227,220,45)" fg:x="1005" fg:w="232"/><text x="80.7144%" y="671.50">&lt;engine::session::Session as ..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (161 samples, 12.89%)</title><rect x="86.1489%" y="645" width="12.8903%" height="15" fill="rgb(212,34,2)" fg:x="1076" fg:w="161"/><text x="86.3989%" y="655.50">kernel::plugins::Se..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (161 samples, 12.89%)</title><rect x="86.1489%" y="629" width="12.8903%" height="15" fill="rgb(236,23,8)" fg:x="1076" fg:w="161"/><text x="86.3989%" y="639.50">&lt;plugins_dynlib::Dy..</text></g><g><title>plugins_rpc::querying::have_surroundings (140 samples, 11.21%)</title><rect x="87.8303%" y="613" width="11.2090%" height="15" fill="rgb(210,113,39)" fg:x="1097" fg:w="140"/><text x="88.0803%" y="623.50">plugins_rpc::que..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="98.9592%" y="597" width="0.0801%" height="15" fill="rgb(243,123,48)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="607.50"></text></g><g><title>&lt;rpc_proto::EntityKey as core::convert::From&lt;kernel::model::base::EntityKey&gt;&gt;::from (1 samples, 0.08%)</title><rect x="98.9592%" y="581" width="0.0801%" height="15" fill="rgb(223,175,36)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="591.50"></text></g><g><title>kernel::model::base::&lt;impl core::convert::From&lt;kernel::model::base::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="98.9592%" y="565" width="0.0801%" height="15" fill="rgb(226,100,30)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="98.9592%" y="549" width="0.0801%" height="15" fill="rgb(221,225,39)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.9592%" y="533" width="0.0801%" height="15" fill="rgb(224,222,42)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (1 samples, 0.08%)</title><rect x="99.0392%" y="629" width="0.0801%" height="15" fill="rgb(221,53,1)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0392%" y="613" width="0.0801%" height="15" fill="rgb(216,187,48)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0392%" y="597" width="0.0801%" height="15" fill="rgb(220,108,2)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.0392%" y="581" width="0.0801%" height="15" fill="rgb(216,13,42)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0392%" y="565" width="0.0801%" height="15" fill="rgb(205,14,29)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0392%" y="549" width="0.0801%" height="15" fill="rgb(217,168,30)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0392%" y="533" width="0.0801%" height="15" fill="rgb(246,173,54)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0392%" y="517" width="0.0801%" height="15" fill="rgb(227,177,11)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.0392%" y="501" width="0.0801%" height="15" fill="rgb(223,215,51)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0392%" y="485" width="0.0801%" height="15" fill="rgb(253,4,17)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0392%" y="469" width="0.0801%" height="15" fill="rgb(206,150,43)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0392%" y="453" width="0.0801%" height="15" fill="rgb(241,100,52)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="99.0392%" y="437" width="0.0801%" height="15" fill="rgb(234,120,21)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="99.0392%" y="661" width="0.1601%" height="15" fill="rgb(231,60,11)" fg:x="1237" fg:w="2"/><text x="99.2892%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (2 samples, 0.16%)</title><rect x="99.0392%" y="645" width="0.1601%" height="15" fill="rgb(247,77,50)" fg:x="1237" fg:w="2"/><text x="99.2892%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.1193%" y="629" width="0.0801%" height="15" fill="rgb(251,199,54)" fg:x="1238" fg:w="1"/><text x="99.3693%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.1193%" y="613" width="0.0801%" height="15" fill="rgb(212,120,38)" fg:x="1238" fg:w="1"/><text x="99.3693%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.1193%" y="597" width="0.0801%" height="15" fill="rgb(250,161,37)" fg:x="1238" fg:w="1"/><text x="99.3693%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1193%" y="581" width="0.0801%" height="15" fill="rgb(232,158,45)" fg:x="1238" fg:w="1"/><text x="99.3693%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1193%" y="565" width="0.0801%" height="15" fill="rgb(233,114,2)" fg:x="1238" fg:w="1"/><text x="99.3693%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1193%" y="549" width="0.0801%" height="15" fill="rgb(248,139,0)" fg:x="1238" fg:w="1"/><text x="99.3693%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1193%" y="533" width="0.0801%" height="15" fill="rgb(222,164,18)" fg:x="1238" fg:w="1"/><text x="99.3693%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.1994%" y="581" width="0.0801%" height="15" fill="rgb(221,140,42)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.1994%" y="565" width="0.0801%" height="15" fill="rgb(209,186,11)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.1994%" y="549" width="0.0801%" height="15" fill="rgb(254,212,38)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1994%" y="533" width="0.0801%" height="15" fill="rgb(219,156,31)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1994%" y="517" width="0.0801%" height="15" fill="rgb(222,148,42)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1994%" y="501" width="0.0801%" height="15" fill="rgb(225,65,5)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1994%" y="485" width="0.0801%" height="15" fill="rgb(235,28,12)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.1994%" y="469" width="0.0801%" height="15" fill="rgb(245,58,4)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1994%" y="453" width="0.0801%" height="15" fill="rgb(235,118,5)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1994%" y="437" width="0.0801%" height="15" fill="rgb(253,196,3)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1994%" y="421" width="0.0801%" height="15" fill="rgb(238,90,28)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1994%" y="405" width="0.0801%" height="15" fill="rgb(254,227,4)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1994%" y="389" width="0.0801%" height="15" fill="rgb(237,114,35)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="99.1994%" y="373" width="0.0801%" height="15" fill="rgb(221,147,29)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.1994%" y="357" width="0.0801%" height="15" fill="rgb(216,201,17)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="367.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="99.1994%" y="341" width="0.0801%" height="15" fill="rgb(251,46,50)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="99.1994%" y="613" width="0.2402%" height="15" fill="rgb(216,143,48)" fg:x="1239" fg:w="3"/><text x="99.4494%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="99.1994%" y="597" width="0.2402%" height="15" fill="rgb(224,62,51)" fg:x="1239" fg:w="3"/><text x="99.4494%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="99.2794%" y="581" width="0.1601%" height="15" fill="rgb(232,152,20)" fg:x="1240" fg:w="2"/><text x="99.5294%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.2794%" y="565" width="0.1601%" height="15" fill="rgb(233,194,7)" fg:x="1240" fg:w="2"/><text x="99.5294%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.2794%" y="549" width="0.1601%" height="15" fill="rgb(207,33,22)" fg:x="1240" fg:w="2"/><text x="99.5294%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.2794%" y="533" width="0.1601%" height="15" fill="rgb(226,54,34)" fg:x="1240" fg:w="2"/><text x="99.5294%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2794%" y="517" width="0.1601%" height="15" fill="rgb(227,161,47)" fg:x="1240" fg:w="2"/><text x="99.5294%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.2794%" y="501" width="0.1601%" height="15" fill="rgb(218,58,37)" fg:x="1240" fg:w="2"/><text x="99.5294%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2794%" y="485" width="0.1601%" height="15" fill="rgb(208,173,18)" fg:x="1240" fg:w="2"/><text x="99.5294%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.2794%" y="469" width="0.1601%" height="15" fill="rgb(230,159,11)" fg:x="1240" fg:w="2"/><text x="99.5294%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2794%" y="453" width="0.1601%" height="15" fill="rgb(238,90,51)" fg:x="1240" fg:w="2"/><text x="99.5294%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3595%" y="437" width="0.0801%" height="15" fill="rgb(225,97,36)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3595%" y="421" width="0.0801%" height="15" fill="rgb(211,205,42)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3595%" y="405" width="0.0801%" height="15" fill="rgb(219,152,7)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="415.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.4396%" y="597" width="0.0801%" height="15" fill="rgb(222,79,10)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4396%" y="581" width="0.0801%" height="15" fill="rgb(242,13,11)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4396%" y="565" width="0.0801%" height="15" fill="rgb(231,143,41)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4396%" y="549" width="0.0801%" height="15" fill="rgb(222,147,19)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4396%" y="533" width="0.0801%" height="15" fill="rgb(235,5,39)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4396%" y="517" width="0.0801%" height="15" fill="rgb(246,155,51)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4396%" y="501" width="0.0801%" height="15" fill="rgb(218,157,4)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4396%" y="485" width="0.0801%" height="15" fill="rgb(226,184,4)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4396%" y="469" width="0.0801%" height="15" fill="rgb(210,103,26)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4396%" y="453" width="0.0801%" height="15" fill="rgb(228,23,31)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4396%" y="437" width="0.0801%" height="15" fill="rgb(205,176,34)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4396%" y="421" width="0.0801%" height="15" fill="rgb(246,213,37)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4396%" y="405" width="0.0801%" height="15" fill="rgb(213,52,45)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4396%" y="389" width="0.0801%" height="15" fill="rgb(249,9,52)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="99.1994%" y="661" width="0.4003%" height="15" fill="rgb(205,97,16)" fg:x="1239" fg:w="5"/><text x="99.4494%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="99.1994%" y="645" width="0.4003%" height="15" fill="rgb(214,11,46)" fg:x="1239" fg:w="5"/><text x="99.4494%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="99.1994%" y="629" width="0.4003%" height="15" fill="rgb(221,66,18)" fg:x="1239" fg:w="5"/><text x="99.4494%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (2 samples, 0.16%)</title><rect x="99.4396%" y="613" width="0.1601%" height="15" fill="rgb(213,49,1)" fg:x="1242" fg:w="2"/><text x="99.6896%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5196%" y="597" width="0.0801%" height="15" fill="rgb(232,75,51)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5196%" y="581" width="0.0801%" height="15" fill="rgb(208,218,40)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.5196%" y="565" width="0.0801%" height="15" fill="rgb(206,144,50)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5196%" y="549" width="0.0801%" height="15" fill="rgb(216,9,51)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5196%" y="533" width="0.0801%" height="15" fill="rgb(226,6,53)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5196%" y="517" width="0.0801%" height="15" fill="rgb(216,9,50)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5196%" y="501" width="0.0801%" height="15" fill="rgb(214,101,31)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5196%" y="485" width="0.0801%" height="15" fill="rgb(247,85,17)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5196%" y="469" width="0.0801%" height="15" fill="rgb(248,138,25)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5196%" y="453" width="0.0801%" height="15" fill="rgb(225,146,20)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5196%" y="437" width="0.0801%" height="15" fill="rgb(224,184,17)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5196%" y="421" width="0.0801%" height="15" fill="rgb(231,10,20)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5196%" y="405" width="0.0801%" height="15" fill="rgb(210,93,37)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5196%" y="389" width="0.0801%" height="15" fill="rgb(226,84,42)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5196%" y="373" width="0.0801%" height="15" fill="rgb(253,192,7)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5196%" y="357" width="0.0801%" height="15" fill="rgb(214,107,27)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5196%" y="341" width="0.0801%" height="15" fill="rgb(238,146,21)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5196%" y="325" width="0.0801%" height="15" fill="rgb(209,136,30)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5196%" y="309" width="0.0801%" height="15" fill="rgb(226,60,22)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5196%" y="293" width="0.0801%" height="15" fill="rgb(243,92,26)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.5196%" y="277" width="0.0801%" height="15" fill="rgb(211,85,33)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.5196%" y="261" width="0.0801%" height="15" fill="rgb(243,187,44)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="271.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.5997%" y="661" width="0.1601%" height="15" fill="rgb(251,172,23)" fg:x="1244" fg:w="2"/><text x="99.8497%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="99.5997%" y="645" width="0.1601%" height="15" fill="rgb(254,162,50)" fg:x="1244" fg:w="2"/><text x="99.8497%" y="655.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6797%" y="629" width="0.0801%" height="15" fill="rgb(239,14,53)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6797%" y="613" width="0.0801%" height="15" fill="rgb(242,208,8)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="623.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.6797%" y="597" width="0.0801%" height="15" fill="rgb(225,61,41)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.6797%" y="581" width="0.0801%" height="15" fill="rgb(219,154,6)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="591.50"></text></g><g><title>plugins_core::library::parser::word (1 samples, 0.08%)</title><rect x="99.6797%" y="565" width="0.0801%" height="15" fill="rgb(227,223,44)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="575.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.08%)</title><rect x="99.6797%" y="549" width="0.0801%" height="15" fill="rgb(220,188,6)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="559.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="99.6797%" y="533" width="0.0801%" height="15" fill="rgb(216,65,22)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="543.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="99.6797%" y="517" width="0.0801%" height="15" fill="rgb(236,66,46)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.7598%" y="645" width="0.0801%" height="15" fill="rgb(211,150,52)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.7598%" y="629" width="0.0801%" height="15" fill="rgb(253,89,19)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.7598%" y="661" width="0.1601%" height="15" fill="rgb(245,4,1)" fg:x="1246" fg:w="2"/><text x="100.0098%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.8399%" y="645" width="0.0801%" height="15" fill="rgb(230,109,16)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.8399%" y="629" width="0.0801%" height="15" fill="rgb(213,7,47)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="639.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.8399%" y="613" width="0.0801%" height="15" fill="rgb(242,148,14)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.8399%" y="597" width="0.0801%" height="15" fill="rgb(238,51,34)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.8399%" y="581" width="0.0801%" height="15" fill="rgb(222,49,22)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.8399%" y="565" width="0.0801%" height="15" fill="rgb(237,102,50)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.8399%" y="549" width="0.0801%" height="15" fill="rgb(237,195,8)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.8399%" y="533" width="0.0801%" height="15" fill="rgb(245,60,18)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.8399%" y="517" width="0.0801%" height="15" fill="rgb(253,74,32)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.8399%" y="501" width="0.0801%" height="15" fill="rgb(240,91,39)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.8399%" y="485" width="0.0801%" height="15" fill="rgb(221,162,34)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.8399%" y="469" width="0.0801%" height="15" fill="rgb(223,32,2)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.8399%" y="453" width="0.0801%" height="15" fill="rgb(245,220,46)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.8399%" y="437" width="0.0801%" height="15" fill="rgb(216,38,33)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.8399%" y="421" width="0.0801%" height="15" fill="rgb(210,123,14)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.8399%" y="405" width="0.0801%" height="15" fill="rgb(214,38,47)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8399%" y="389" width="0.0801%" height="15" fill="rgb(244,180,16)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="399.50"></text></g><g><title>all (1,249 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(252,21,32)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1039.50"></text></g><g><title>simple-484c7248 (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(245,218,31)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1023.50">simple-484c7248</text></g><g><title>_start (1,249 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(247,81,18)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1007.50">_start</text></g><g><title>__libc_start_main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(220,151,1)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="991.50">__libc_start_main</text></g><g><title>main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(211,157,11)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="975.50">main</text></g><g><title>std::rt::lang_start_internal (1,249 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(239,46,30)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(236,144,43)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(206,71,45)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(240,85,31)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(221,43,52)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(243,106,22)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(209,138,38)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(216,63,40)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,249 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(206,115,21)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="831.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(235,53,44)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="815.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,249 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(244,160,14)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(223,16,19)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="783.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,249 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(242,63,42)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="767.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,249 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(209,66,49)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="751.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (412 samples, 32.99%)</title><rect x="67.0136%" y="725" width="32.9864%" height="15" fill="rgb(207,126,46)" fg:x="837" fg:w="412"/><text x="67.2636%" y="735.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::ro..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (412 samples, 32.99%)</title><rect x="67.0136%" y="709" width="32.9864%" height="15" fill="rgb(218,160,41)" fg:x="837" fg:w="412"/><text x="67.2636%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (412 samples, 32.99%)</title><rect x="67.0136%" y="693" width="32.9864%" height="15" fill="rgb(234,125,46)" fg:x="837" fg:w="412"/><text x="67.2636%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (244 samples, 19.54%)</title><rect x="80.4644%" y="677" width="19.5356%" height="15" fill="rgb(205,66,36)" fg:x="1005" fg:w="244"/><text x="80.7144%" y="687.50">engine::session::Session::evalu..</text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="99.9199%" y="661" width="0.0801%" height="15" fill="rgb(220,135,16)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9199%" y="645" width="0.0801%" height="15" fill="rgb(214,217,54)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9199%" y="629" width="0.0801%" height="15" fill="rgb(206,30,9)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.9199%" y="613" width="0.0801%" height="15" fill="rgb(207,196,5)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.9199%" y="597" width="0.0801%" height="15" fill="rgb(227,116,12)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.9199%" y="581" width="0.0801%" height="15" fill="rgb(235,227,13)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.9199%" y="565" width="0.0801%" height="15" fill="rgb(238,212,29)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.9199%" y="549" width="0.0801%" height="15" fill="rgb(230,152,17)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.9199%" y="533" width="0.0801%" height="15" fill="rgb(220,197,1)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.9199%" y="517" width="0.0801%" height="15" fill="rgb(229,227,40)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.9199%" y="501" width="0.0801%" height="15" fill="rgb(227,179,16)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.9199%" y="485" width="0.0801%" height="15" fill="rgb(246,116,44)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9199%" y="469" width="0.0801%" height="15" fill="rgb(205,191,4)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="479.50"></text></g></svg></svg>