<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="1242"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3221%" y="741" width="0.0805%" height="15" fill="rgb(227,94,44)" fg:x="4" fg:w="1"/><text x="0.5721%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.32%)</title><rect x="0.1610%" y="773" width="0.3221%" height="15" fill="rgb(219,43,3)" fg:x="2" fg:w="4"/><text x="0.4110%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="0.1610%" y="757" width="0.3221%" height="15" fill="rgb(210,76,31)" fg:x="2" fg:w="4"/><text x="0.4110%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (1 samples, 0.08%)</title><rect x="0.4026%" y="741" width="0.0805%" height="15" fill="rgb(225,85,12)" fg:x="5" fg:w="1"/><text x="0.6526%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4831%" y="741" width="0.0805%" height="15" fill="rgb(214,191,28)" fg:x="6" fg:w="1"/><text x="0.7331%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6441%" y="677" width="0.0805%" height="15" fill="rgb(214,43,14)" fg:x="8" fg:w="1"/><text x="0.8941%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="0.7246%" y="677" width="0.3221%" height="15" fill="rgb(253,117,5)" fg:x="9" fg:w="4"/><text x="0.9746%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="1.1272%" y="661" width="0.2415%" height="15" fill="rgb(208,124,26)" fg:x="14" fg:w="3"/><text x="1.3772%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.3688%" y="661" width="0.1610%" height="15" fill="rgb(228,208,39)" fg:x="17" fg:w="2"/><text x="1.6188%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.3688%" y="645" width="0.1610%" height="15" fill="rgb(206,180,39)" fg:x="17" fg:w="2"/><text x="1.6188%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.6103%" y="645" width="0.0805%" height="15" fill="rgb(205,111,37)" fg:x="20" fg:w="1"/><text x="1.8603%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6908%" y="629" width="0.0805%" height="15" fill="rgb(208,121,24)" fg:x="21" fg:w="1"/><text x="1.9408%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.7713%" y="629" width="0.1610%" height="15" fill="rgb(218,215,32)" fg:x="22" fg:w="2"/><text x="2.0213%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.7713%" y="613" width="0.1610%" height="15" fill="rgb(244,168,53)" fg:x="22" fg:w="2"/><text x="2.0213%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.61%)</title><rect x="0.6441%" y="693" width="1.6103%" height="15" fill="rgb(214,9,36)" fg:x="8" fg:w="20"/><text x="0.8941%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="1.0467%" y="677" width="1.2077%" height="15" fill="rgb(231,4,34)" fg:x="13" fg:w="15"/><text x="1.2967%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="1.5298%" y="661" width="0.7246%" height="15" fill="rgb(210,83,51)" fg:x="19" fg:w="9"/><text x="1.7798%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.6908%" y="645" width="0.5636%" height="15" fill="rgb(224,112,1)" fg:x="21" fg:w="7"/><text x="1.9408%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="1.9324%" y="629" width="0.3221%" height="15" fill="rgb(216,33,41)" fg:x="24" fg:w="4"/><text x="2.1824%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.0129%" y="613" width="0.2415%" height="15" fill="rgb(215,179,42)" fg:x="25" fg:w="3"/><text x="2.2629%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.0129%" y="597" width="0.2415%" height="15" fill="rgb(205,81,48)" fg:x="25" fg:w="3"/><text x="2.2629%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.77%)</title><rect x="0.5636%" y="725" width="1.7713%" height="15" fill="rgb(246,17,30)" fg:x="7" fg:w="22"/><text x="0.8136%" y="735.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.77%)</title><rect x="0.5636%" y="709" width="1.7713%" height="15" fill="rgb(226,19,16)" fg:x="7" fg:w="22"/><text x="0.8136%" y="719.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2544%" y="693" width="0.0805%" height="15" fill="rgb(207,3,14)" fg:x="28" fg:w="1"/><text x="2.5044%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.33%)</title><rect x="0.0805%" y="789" width="2.3349%" height="15" fill="rgb(226,77,12)" fg:x="1" fg:w="29"/><text x="0.3305%" y="799.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (24 samples, 1.93%)</title><rect x="0.4831%" y="773" width="1.9324%" height="15" fill="rgb(226,76,25)" fg:x="6" fg:w="24"/><text x="0.7331%" y="783.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.93%)</title><rect x="0.4831%" y="757" width="1.9324%" height="15" fill="rgb(217,216,25)" fg:x="6" fg:w="24"/><text x="0.7331%" y="767.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (23 samples, 1.85%)</title><rect x="0.5636%" y="741" width="1.8519%" height="15" fill="rgb(247,127,42)" fg:x="7" fg:w="23"/><text x="0.8136%" y="751.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3349%" y="725" width="0.0805%" height="15" fill="rgb(226,10,34)" fg:x="29" fg:w="1"/><text x="2.5849%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="2.4960%" y="693" width="0.0805%" height="15" fill="rgb(249,78,0)" fg:x="31" fg:w="1"/><text x="2.7460%" y="703.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="2.5765%" y="661" width="0.1610%" height="15" fill="rgb(226,218,38)" fg:x="32" fg:w="2"/><text x="2.8265%" y="671.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="2.5765%" y="677" width="0.2415%" height="15" fill="rgb(240,92,1)" fg:x="32" fg:w="3"/><text x="2.8265%" y="687.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="2.7375%" y="661" width="0.0805%" height="15" fill="rgb(237,224,33)" fg:x="34" fg:w="1"/><text x="2.9875%" y="671.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (19 samples, 1.53%)</title><rect x="2.4960%" y="725" width="1.5298%" height="15" fill="rgb(211,46,1)" fg:x="31" fg:w="19"/><text x="2.7460%" y="735.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (19 samples, 1.53%)</title><rect x="2.4960%" y="709" width="1.5298%" height="15" fill="rgb(239,190,4)" fg:x="31" fg:w="19"/><text x="2.7460%" y="719.50"></text></g><g><title>libloading::safe::Library::new (18 samples, 1.45%)</title><rect x="2.5765%" y="693" width="1.4493%" height="15" fill="rgb(221,50,22)" fg:x="32" fg:w="18"/><text x="2.8265%" y="703.50"></text></g><g><title>dlopen (15 samples, 1.21%)</title><rect x="2.8180%" y="677" width="1.2077%" height="15" fill="rgb(207,176,8)" fg:x="35" fg:w="15"/><text x="3.0680%" y="687.50"></text></g><g><title>_dl_catch_error (15 samples, 1.21%)</title><rect x="2.8180%" y="661" width="1.2077%" height="15" fill="rgb(244,114,50)" fg:x="35" fg:w="15"/><text x="3.0680%" y="671.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.21%)</title><rect x="2.8180%" y="645" width="1.2077%" height="15" fill="rgb(226,206,19)" fg:x="35" fg:w="15"/><text x="3.0680%" y="655.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="3.3011%" y="629" width="0.7246%" height="15" fill="rgb(208,199,16)" fg:x="41" fg:w="9"/><text x="3.5511%" y="639.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="3.3011%" y="613" width="0.7246%" height="15" fill="rgb(208,38,14)" fg:x="41" fg:w="9"/><text x="3.5511%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.0258%" y="693" width="0.0805%" height="15" fill="rgb(221,211,49)" fg:x="50" fg:w="1"/><text x="4.2758%" y="703.50"></text></g><g><title>engine::session::Session::initialize (21 samples, 1.69%)</title><rect x="2.4960%" y="741" width="1.6908%" height="15" fill="rgb(227,214,34)" fg:x="31" fg:w="21"/><text x="2.7460%" y="751.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="4.0258%" y="725" width="0.1610%" height="15" fill="rgb(234,5,54)" fg:x="50" fg:w="2"/><text x="4.2758%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.0258%" y="709" width="0.1610%" height="15" fill="rgb(236,215,22)" fg:x="50" fg:w="2"/><text x="4.2758%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.1063%" y="693" width="0.0805%" height="15" fill="rgb(244,0,11)" fg:x="51" fg:w="1"/><text x="4.3563%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.1063%" y="677" width="0.0805%" height="15" fill="rgb(212,140,16)" fg:x="51" fg:w="1"/><text x="4.3563%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.1063%" y="661" width="0.0805%" height="15" fill="rgb(238,101,37)" fg:x="51" fg:w="1"/><text x="4.3563%" y="671.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (25 samples, 2.01%)</title><rect x="2.4155%" y="789" width="2.0129%" height="15" fill="rgb(247,46,3)" fg:x="30" fg:w="25"/><text x="2.6655%" y="799.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (25 samples, 2.01%)</title><rect x="2.4155%" y="773" width="2.0129%" height="15" fill="rgb(208,106,19)" fg:x="30" fg:w="25"/><text x="2.6655%" y="783.50">e..</text></g><g><title>engine::session::Session::new (25 samples, 2.01%)</title><rect x="2.4155%" y="757" width="2.0129%" height="15" fill="rgb(240,227,15)" fg:x="30" fg:w="25"/><text x="2.6655%" y="767.50">e..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="4.1868%" y="741" width="0.2415%" height="15" fill="rgb(226,173,6)" fg:x="52" fg:w="3"/><text x="4.4368%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="4.1868%" y="725" width="0.2415%" height="15" fill="rgb(213,191,1)" fg:x="52" fg:w="3"/><text x="4.4368%" y="735.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="4.3478%" y="709" width="0.0805%" height="15" fill="rgb(246,51,36)" fg:x="54" fg:w="1"/><text x="4.5978%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="4.3478%" y="693" width="0.0805%" height="15" fill="rgb(238,40,32)" fg:x="54" fg:w="1"/><text x="4.5978%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.4283%" y="773" width="0.0805%" height="15" fill="rgb(208,126,27)" fg:x="55" fg:w="1"/><text x="4.6783%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.4283%" y="757" width="0.0805%" height="15" fill="rgb(227,117,38)" fg:x="55" fg:w="1"/><text x="4.6783%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.5089%" y="725" width="0.0805%" height="15" fill="rgb(232,16,1)" fg:x="56" fg:w="1"/><text x="4.7589%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.5894%" y="725" width="0.0805%" height="15" fill="rgb(212,111,31)" fg:x="57" fg:w="1"/><text x="4.8394%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="4.5894%" y="709" width="0.0805%" height="15" fill="rgb(253,227,2)" fg:x="57" fg:w="1"/><text x="4.8394%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="4.5894%" y="693" width="0.0805%" height="15" fill="rgb(216,122,17)" fg:x="57" fg:w="1"/><text x="4.8394%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.7504%" y="693" width="0.0805%" height="15" fill="rgb(227,37,2)" fg:x="59" fg:w="1"/><text x="5.0004%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.7504%" y="677" width="0.0805%" height="15" fill="rgb(244,113,40)" fg:x="59" fg:w="1"/><text x="5.0004%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.7504%" y="661" width="0.0805%" height="15" fill="rgb(217,193,34)" fg:x="59" fg:w="1"/><text x="5.0004%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.7504%" y="645" width="0.0805%" height="15" fill="rgb(212,223,15)" fg:x="59" fg:w="1"/><text x="5.0004%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.7504%" y="629" width="0.0805%" height="15" fill="rgb(238,143,18)" fg:x="59" fg:w="1"/><text x="5.0004%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="4.7504%" y="613" width="0.0805%" height="15" fill="rgb(231,18,49)" fg:x="59" fg:w="1"/><text x="5.0004%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.7504%" y="597" width="0.0805%" height="15" fill="rgb(249,122,4)" fg:x="59" fg:w="1"/><text x="5.0004%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="4.8309%" y="693" width="0.0805%" height="15" fill="rgb(245,138,54)" fg:x="60" fg:w="1"/><text x="5.0809%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="4.8309%" y="677" width="0.0805%" height="15" fill="rgb(218,130,18)" fg:x="60" fg:w="1"/><text x="5.0809%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="4.8309%" y="661" width="0.0805%" height="15" fill="rgb(235,94,13)" fg:x="60" fg:w="1"/><text x="5.0809%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="4.8309%" y="645" width="0.0805%" height="15" fill="rgb(247,143,5)" fg:x="60" fg:w="1"/><text x="5.0809%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.8309%" y="629" width="0.0805%" height="15" fill="rgb(212,59,54)" fg:x="60" fg:w="1"/><text x="5.0809%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.8309%" y="613" width="0.0805%" height="15" fill="rgb(206,121,24)" fg:x="60" fg:w="1"/><text x="5.0809%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.8309%" y="597" width="0.0805%" height="15" fill="rgb(235,38,8)" fg:x="60" fg:w="1"/><text x="5.0809%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="4.9919%" y="661" width="0.3221%" height="15" fill="rgb(227,102,26)" fg:x="62" fg:w="4"/><text x="5.2419%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.0725%" y="645" width="0.2415%" height="15" fill="rgb(240,183,46)" fg:x="63" fg:w="3"/><text x="5.3225%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.1530%" y="629" width="0.1610%" height="15" fill="rgb(208,177,23)" fg:x="64" fg:w="2"/><text x="5.4030%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.1530%" y="613" width="0.1610%" height="15" fill="rgb(216,152,5)" fg:x="64" fg:w="2"/><text x="5.4030%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="4.9114%" y="677" width="0.4831%" height="15" fill="rgb(238,199,2)" fg:x="61" fg:w="6"/><text x="5.1614%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.3140%" y="661" width="0.0805%" height="15" fill="rgb(235,142,28)" fg:x="66" fg:w="1"/><text x="5.5640%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.3140%" y="645" width="0.0805%" height="15" fill="rgb(225,97,25)" fg:x="66" fg:w="1"/><text x="5.5640%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3140%" y="629" width="0.0805%" height="15" fill="rgb(208,75,46)" fg:x="66" fg:w="1"/><text x="5.5640%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.4750%" y="661" width="0.0805%" height="15" fill="rgb(240,136,15)" fg:x="68" fg:w="1"/><text x="5.7250%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.4750%" y="645" width="0.0805%" height="15" fill="rgb(235,36,27)" fg:x="68" fg:w="1"/><text x="5.7250%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.4750%" y="629" width="0.0805%" height="15" fill="rgb(231,132,23)" fg:x="68" fg:w="1"/><text x="5.7250%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.4750%" y="613" width="0.0805%" height="15" fill="rgb(205,208,20)" fg:x="68" fg:w="1"/><text x="5.7250%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.4750%" y="597" width="0.0805%" height="15" fill="rgb(215,26,40)" fg:x="68" fg:w="1"/><text x="5.7250%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.4750%" y="581" width="0.0805%" height="15" fill="rgb(238,183,34)" fg:x="68" fg:w="1"/><text x="5.7250%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.4750%" y="565" width="0.0805%" height="15" fill="rgb(207,96,10)" fg:x="68" fg:w="1"/><text x="5.7250%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.7971%" y="645" width="0.0805%" height="15" fill="rgb(218,88,6)" fg:x="72" fg:w="1"/><text x="6.0471%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="5.8776%" y="613" width="0.4026%" height="15" fill="rgb(217,22,49)" fg:x="73" fg:w="5"/><text x="6.1276%" y="623.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="5.8776%" y="597" width="0.4026%" height="15" fill="rgb(240,195,14)" fg:x="73" fg:w="5"/><text x="6.1276%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="5.9581%" y="581" width="0.3221%" height="15" fill="rgb(229,48,27)" fg:x="74" fg:w="4"/><text x="6.2081%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="5.8776%" y="645" width="0.5636%" height="15" fill="rgb(220,194,45)" fg:x="73" fg:w="7"/><text x="6.1276%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="5.8776%" y="629" width="0.5636%" height="15" fill="rgb(252,60,20)" fg:x="73" fg:w="7"/><text x="6.1276%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="6.2802%" y="613" width="0.1610%" height="15" fill="rgb(244,169,33)" fg:x="78" fg:w="2"/><text x="6.5302%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.3607%" y="597" width="0.0805%" height="15" fill="rgb(234,141,34)" fg:x="79" fg:w="1"/><text x="6.6107%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.3607%" y="581" width="0.0805%" height="15" fill="rgb(241,141,9)" fg:x="79" fg:w="1"/><text x="6.6107%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.3607%" y="565" width="0.0805%" height="15" fill="rgb(246,27,36)" fg:x="79" fg:w="1"/><text x="6.6107%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="6.4412%" y="645" width="0.4026%" height="15" fill="rgb(216,188,42)" fg:x="80" fg:w="5"/><text x="6.6912%" y="655.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="6.4412%" y="629" width="0.4026%" height="15" fill="rgb(234,205,22)" fg:x="80" fg:w="5"/><text x="6.6912%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.6828%" y="613" width="0.1610%" height="15" fill="rgb(210,202,32)" fg:x="83" fg:w="2"/><text x="6.9328%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.6828%" y="597" width="0.1610%" height="15" fill="rgb(217,0,48)" fg:x="83" fg:w="2"/><text x="6.9328%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="6.6828%" y="581" width="0.1610%" height="15" fill="rgb(207,115,37)" fg:x="83" fg:w="2"/><text x="6.9328%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="6.6828%" y="565" width="0.1610%" height="15" fill="rgb(237,221,44)" fg:x="83" fg:w="2"/><text x="6.9328%" y="575.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="6.6828%" y="549" width="0.1610%" height="15" fill="rgb(249,78,2)" fg:x="83" fg:w="2"/><text x="6.9328%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.8438%" y="629" width="0.0805%" height="15" fill="rgb(211,169,23)" fg:x="85" fg:w="1"/><text x="7.0938%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8438%" y="613" width="0.0805%" height="15" fill="rgb(207,116,29)" fg:x="85" fg:w="1"/><text x="7.0938%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.9243%" y="613" width="0.0805%" height="15" fill="rgb(240,84,33)" fg:x="86" fg:w="1"/><text x="7.1743%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.9243%" y="597" width="0.0805%" height="15" fill="rgb(229,224,31)" fg:x="86" fg:w="1"/><text x="7.1743%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.9243%" y="581" width="0.0805%" height="15" fill="rgb(227,90,31)" fg:x="86" fg:w="1"/><text x="7.1743%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.9243%" y="565" width="0.0805%" height="15" fill="rgb(249,22,41)" fg:x="86" fg:w="1"/><text x="7.1743%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.0048%" y="597" width="0.0805%" height="15" fill="rgb(239,65,11)" fg:x="87" fg:w="1"/><text x="7.2548%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.0853%" y="597" width="0.0805%" height="15" fill="rgb(205,5,23)" fg:x="88" fg:w="1"/><text x="7.3353%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.0853%" y="581" width="0.0805%" height="15" fill="rgb(254,78,52)" fg:x="88" fg:w="1"/><text x="7.3353%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.1659%" y="597" width="0.0805%" height="15" fill="rgb(214,156,33)" fg:x="89" fg:w="1"/><text x="7.4159%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.1659%" y="581" width="0.0805%" height="15" fill="rgb(208,20,30)" fg:x="89" fg:w="1"/><text x="7.4159%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.77%)</title><rect x="5.5556%" y="661" width="1.7713%" height="15" fill="rgb(223,133,18)" fg:x="69" fg:w="22"/><text x="5.8056%" y="671.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="6.8438%" y="645" width="0.4831%" height="15" fill="rgb(222,91,41)" fg:x="85" fg:w="6"/><text x="7.0938%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="6.9243%" y="629" width="0.4026%" height="15" fill="rgb(247,137,48)" fg:x="86" fg:w="5"/><text x="7.1743%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="7.0048%" y="613" width="0.3221%" height="15" fill="rgb(239,156,11)" fg:x="87" fg:w="4"/><text x="7.2548%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.2464%" y="597" width="0.0805%" height="15" fill="rgb(244,56,26)" fg:x="90" fg:w="1"/><text x="7.4964%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.58%)</title><rect x="4.9114%" y="693" width="2.5765%" height="15" fill="rgb(205,131,49)" fg:x="61" fg:w="32"/><text x="5.1614%" y="703.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.09%)</title><rect x="5.3945%" y="677" width="2.0934%" height="15" fill="rgb(224,0,2)" fg:x="67" fg:w="26"/><text x="5.6445%" y="687.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.3269%" y="661" width="0.1610%" height="15" fill="rgb(247,59,36)" fg:x="91" fg:w="2"/><text x="7.5769%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.3269%" y="645" width="0.1610%" height="15" fill="rgb(215,4,47)" fg:x="91" fg:w="2"/><text x="7.5769%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.3269%" y="629" width="0.1610%" height="15" fill="rgb(242,72,42)" fg:x="91" fg:w="2"/><text x="7.5769%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="7.3269%" y="613" width="0.1610%" height="15" fill="rgb(232,145,44)" fg:x="91" fg:w="2"/><text x="7.5769%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.4074%" y="597" width="0.0805%" height="15" fill="rgb(205,108,43)" fg:x="92" fg:w="1"/><text x="7.6574%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.4074%" y="581" width="0.0805%" height="15" fill="rgb(215,190,17)" fg:x="92" fg:w="1"/><text x="7.6574%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="7.4879%" y="693" width="0.3221%" height="15" fill="rgb(223,90,34)" fg:x="93" fg:w="4"/><text x="7.7379%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="7.4879%" y="677" width="0.3221%" height="15" fill="rgb(216,25,0)" fg:x="93" fg:w="4"/><text x="7.7379%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="7.4879%" y="661" width="0.3221%" height="15" fill="rgb(223,51,28)" fg:x="93" fg:w="4"/><text x="7.7379%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="7.5684%" y="645" width="0.2415%" height="15" fill="rgb(227,131,7)" fg:x="94" fg:w="3"/><text x="7.8184%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="7.6490%" y="629" width="0.1610%" height="15" fill="rgb(216,72,36)" fg:x="95" fg:w="2"/><text x="7.8990%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="7.8100%" y="677" width="0.0805%" height="15" fill="rgb(243,158,40)" fg:x="97" fg:w="1"/><text x="8.0600%" y="687.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="7.8100%" y="661" width="0.0805%" height="15" fill="rgb(218,60,54)" fg:x="97" fg:w="1"/><text x="8.0600%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.8100%" y="645" width="0.0805%" height="15" fill="rgb(230,15,46)" fg:x="97" fg:w="1"/><text x="8.0600%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.8100%" y="629" width="0.0805%" height="15" fill="rgb(250,22,26)" fg:x="97" fg:w="1"/><text x="8.0600%" y="639.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="7.8100%" y="613" width="0.0805%" height="15" fill="rgb(239,194,40)" fg:x="97" fg:w="1"/><text x="8.0600%" y="623.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="7.8100%" y="597" width="0.0805%" height="15" fill="rgb(219,62,9)" fg:x="97" fg:w="1"/><text x="8.0600%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.9710%" y="645" width="0.0805%" height="15" fill="rgb(228,45,21)" fg:x="99" fg:w="1"/><text x="8.2210%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.0515%" y="645" width="0.0805%" height="15" fill="rgb(242,56,44)" fg:x="100" fg:w="1"/><text x="8.3015%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="8.1320%" y="645" width="0.1610%" height="15" fill="rgb(239,170,14)" fg:x="101" fg:w="2"/><text x="8.3820%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.2126%" y="629" width="0.0805%" height="15" fill="rgb(236,150,13)" fg:x="102" fg:w="1"/><text x="8.4626%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="8.4541%" y="565" width="0.0805%" height="15" fill="rgb(228,15,30)" fg:x="105" fg:w="1"/><text x="8.7041%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.4541%" y="549" width="0.0805%" height="15" fill="rgb(217,43,28)" fg:x="105" fg:w="1"/><text x="8.7041%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="8.4541%" y="597" width="0.1610%" height="15" fill="rgb(246,223,1)" fg:x="105" fg:w="2"/><text x="8.7041%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="8.4541%" y="581" width="0.1610%" height="15" fill="rgb(247,103,7)" fg:x="105" fg:w="2"/><text x="8.7041%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5346%" y="565" width="0.0805%" height="15" fill="rgb(205,105,39)" fg:x="106" fg:w="1"/><text x="8.7846%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.6151%" y="581" width="0.0805%" height="15" fill="rgb(216,134,18)" fg:x="107" fg:w="1"/><text x="8.8651%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="8.6957%" y="581" width="0.0805%" height="15" fill="rgb(226,139,50)" fg:x="108" fg:w="1"/><text x="8.9457%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7762%" y="565" width="0.0805%" height="15" fill="rgb(251,152,38)" fg:x="109" fg:w="1"/><text x="9.0262%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7762%" y="549" width="0.0805%" height="15" fill="rgb(222,63,15)" fg:x="109" fg:w="1"/><text x="9.0262%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7762%" y="533" width="0.0805%" height="15" fill="rgb(212,198,28)" fg:x="109" fg:w="1"/><text x="9.0262%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.9372%" y="501" width="0.0805%" height="15" fill="rgb(216,93,38)" fg:x="111" fg:w="1"/><text x="9.1872%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="8.9372%" y="517" width="0.2415%" height="15" fill="rgb(247,202,44)" fg:x="111" fg:w="3"/><text x="9.1872%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="9.0177%" y="501" width="0.1610%" height="15" fill="rgb(237,204,46)" fg:x="112" fg:w="2"/><text x="9.2677%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.0982%" y="485" width="0.0805%" height="15" fill="rgb(224,98,48)" fg:x="113" fg:w="1"/><text x="9.3482%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="8.7762%" y="581" width="0.4831%" height="15" fill="rgb(247,105,21)" fg:x="109" fg:w="6"/><text x="9.0262%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="8.8567%" y="565" width="0.4026%" height="15" fill="rgb(212,137,52)" fg:x="110" fg:w="5"/><text x="9.1067%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="8.9372%" y="549" width="0.3221%" height="15" fill="rgb(223,76,33)" fg:x="111" fg:w="4"/><text x="9.1872%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="8.9372%" y="533" width="0.3221%" height="15" fill="rgb(209,156,27)" fg:x="111" fg:w="4"/><text x="9.1872%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.1787%" y="517" width="0.0805%" height="15" fill="rgb(249,81,54)" fg:x="114" fg:w="1"/><text x="9.4287%" y="527.50"></text></g><g><title>engine::session::Session::flush (60 samples, 4.83%)</title><rect x="4.5089%" y="773" width="4.8309%" height="15" fill="rgb(241,46,29)" fg:x="56" fg:w="60"/><text x="4.7589%" y="783.50">engine..</text></g><g><title>engine::session::state::State::close (60 samples, 4.83%)</title><rect x="4.5089%" y="757" width="4.8309%" height="15" fill="rgb(213,193,39)" fg:x="56" fg:w="60"/><text x="4.7589%" y="767.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (60 samples, 4.83%)</title><rect x="4.5089%" y="741" width="4.8309%" height="15" fill="rgb(214,85,16)" fg:x="56" fg:w="60"/><text x="4.7589%" y="751.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (58 samples, 4.67%)</title><rect x="4.6699%" y="725" width="4.6699%" height="15" fill="rgb(216,184,17)" fg:x="58" fg:w="58"/><text x="4.9199%" y="735.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (58 samples, 4.67%)</title><rect x="4.6699%" y="709" width="4.6699%" height="15" fill="rgb(254,219,29)" fg:x="58" fg:w="58"/><text x="4.9199%" y="719.50">engin..</text></g><g><title>kernel::model::any_entity_changes (19 samples, 1.53%)</title><rect x="7.8100%" y="693" width="1.5298%" height="15" fill="rgb(209,148,34)" fg:x="97" fg:w="19"/><text x="8.0600%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (18 samples, 1.45%)</title><rect x="7.8905%" y="677" width="1.4493%" height="15" fill="rgb(253,215,11)" fg:x="98" fg:w="18"/><text x="8.1405%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.45%)</title><rect x="7.8905%" y="661" width="1.4493%" height="15" fill="rgb(232,126,20)" fg:x="98" fg:w="18"/><text x="8.1405%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="8.2931%" y="645" width="1.0467%" height="15" fill="rgb(248,118,51)" fg:x="103" fg:w="13"/><text x="8.5431%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.97%)</title><rect x="8.3736%" y="629" width="0.9662%" height="15" fill="rgb(226,121,21)" fg:x="104" fg:w="12"/><text x="8.6236%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="8.4541%" y="613" width="0.8857%" height="15" fill="rgb(216,128,16)" fg:x="105" fg:w="11"/><text x="8.7041%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="8.6151%" y="597" width="0.7246%" height="15" fill="rgb(205,17,9)" fg:x="107" fg:w="9"/><text x="8.8651%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2593%" y="581" width="0.0805%" height="15" fill="rgb(206,197,21)" fg:x="115" fg:w="1"/><text x="9.5093%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="9.3398%" y="741" width="0.0805%" height="15" fill="rgb(212,202,9)" fg:x="116" fg:w="1"/><text x="9.5898%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="9.3398%" y="725" width="0.0805%" height="15" fill="rgb(241,131,50)" fg:x="116" fg:w="1"/><text x="9.5898%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="9.3398%" y="709" width="0.0805%" height="15" fill="rgb(228,115,51)" fg:x="116" fg:w="1"/><text x="9.5898%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="693" width="0.0805%" height="15" fill="rgb(237,209,8)" fg:x="116" fg:w="1"/><text x="9.5898%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="9.3398%" y="677" width="0.0805%" height="15" fill="rgb(241,121,28)" fg:x="116" fg:w="1"/><text x="9.5898%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="661" width="0.0805%" height="15" fill="rgb(238,194,51)" fg:x="116" fg:w="1"/><text x="9.5898%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="645" width="0.0805%" height="15" fill="rgb(208,41,39)" fg:x="116" fg:w="1"/><text x="9.5898%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="629" width="0.0805%" height="15" fill="rgb(223,95,44)" fg:x="116" fg:w="1"/><text x="9.5898%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="9.3398%" y="613" width="0.0805%" height="15" fill="rgb(253,98,40)" fg:x="116" fg:w="1"/><text x="9.5898%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="597" width="0.0805%" height="15" fill="rgb(210,5,12)" fg:x="116" fg:w="1"/><text x="9.5898%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="581" width="0.0805%" height="15" fill="rgb(233,201,23)" fg:x="116" fg:w="1"/><text x="9.5898%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="565" width="0.0805%" height="15" fill="rgb(251,68,15)" fg:x="116" fg:w="1"/><text x="9.5898%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="9.3398%" y="549" width="0.0805%" height="15" fill="rgb(243,10,46)" fg:x="116" fg:w="1"/><text x="9.5898%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="533" width="0.0805%" height="15" fill="rgb(253,130,44)" fg:x="116" fg:w="1"/><text x="9.5898%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="517" width="0.0805%" height="15" fill="rgb(244,5,26)" fg:x="116" fg:w="1"/><text x="9.5898%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="501" width="0.0805%" height="15" fill="rgb(220,126,20)" fg:x="116" fg:w="1"/><text x="9.5898%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="9.3398%" y="485" width="0.0805%" height="15" fill="rgb(212,188,29)" fg:x="116" fg:w="1"/><text x="9.5898%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="9.3398%" y="469" width="0.0805%" height="15" fill="rgb(227,194,48)" fg:x="116" fg:w="1"/><text x="9.5898%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.3398%" y="453" width="0.0805%" height="15" fill="rgb(245,64,28)" fg:x="116" fg:w="1"/><text x="9.5898%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.3398%" y="437" width="0.0805%" height="15" fill="rgb(205,44,7)" fg:x="116" fg:w="1"/><text x="9.5898%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="9.3398%" y="421" width="0.0805%" height="15" fill="rgb(213,193,11)" fg:x="116" fg:w="1"/><text x="9.5898%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="9.3398%" y="405" width="0.0805%" height="15" fill="rgb(238,157,6)" fg:x="116" fg:w="1"/><text x="9.5898%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="9.3398%" y="389" width="0.0805%" height="15" fill="rgb(222,73,7)" fg:x="116" fg:w="1"/><text x="9.5898%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="9.3398%" y="373" width="0.0805%" height="15" fill="rgb(224,78,15)" fg:x="116" fg:w="1"/><text x="9.5898%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="9.3398%" y="357" width="0.0805%" height="15" fill="rgb(218,149,46)" fg:x="116" fg:w="1"/><text x="9.5898%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="9.3398%" y="341" width="0.0805%" height="15" fill="rgb(218,175,44)" fg:x="116" fg:w="1"/><text x="9.5898%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.3398%" y="325" width="0.0805%" height="15" fill="rgb(215,183,45)" fg:x="116" fg:w="1"/><text x="9.5898%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="9.3398%" y="309" width="0.0805%" height="15" fill="rgb(226,116,37)" fg:x="116" fg:w="1"/><text x="9.5898%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.3398%" y="293" width="0.0805%" height="15" fill="rgb(252,224,12)" fg:x="116" fg:w="1"/><text x="9.5898%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="9.3398%" y="277" width="0.0805%" height="15" fill="rgb(232,212,21)" fg:x="116" fg:w="1"/><text x="9.5898%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="9.3398%" y="261" width="0.0805%" height="15" fill="rgb(226,191,16)" fg:x="116" fg:w="1"/><text x="9.5898%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="9.3398%" y="245" width="0.0805%" height="15" fill="rgb(231,156,11)" fg:x="116" fg:w="1"/><text x="9.5898%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.3398%" y="229" width="0.0805%" height="15" fill="rgb(225,134,49)" fg:x="116" fg:w="1"/><text x="9.5898%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.5008%" y="693" width="0.0805%" height="15" fill="rgb(254,55,32)" fg:x="118" fg:w="1"/><text x="9.7508%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.5008%" y="677" width="0.0805%" height="15" fill="rgb(242,195,29)" fg:x="118" fg:w="1"/><text x="9.7508%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="9.4203%" y="741" width="0.2415%" height="15" fill="rgb(210,155,20)" fg:x="117" fg:w="3"/><text x="9.6703%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="9.4203%" y="725" width="0.2415%" height="15" fill="rgb(243,170,23)" fg:x="117" fg:w="3"/><text x="9.6703%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="9.4203%" y="709" width="0.2415%" height="15" fill="rgb(242,197,51)" fg:x="117" fg:w="3"/><text x="9.6703%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.5813%" y="693" width="0.0805%" height="15" fill="rgb(248,48,13)" fg:x="119" fg:w="1"/><text x="9.8313%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.5813%" y="677" width="0.0805%" height="15" fill="rgb(221,185,15)" fg:x="119" fg:w="1"/><text x="9.8313%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.5813%" y="661" width="0.0805%" height="15" fill="rgb(244,49,7)" fg:x="119" fg:w="1"/><text x="9.8313%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="9.6618%" y="725" width="0.2415%" height="15" fill="rgb(213,182,52)" fg:x="120" fg:w="3"/><text x="9.9118%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="9.6618%" y="709" width="0.2415%" height="15" fill="rgb(209,15,45)" fg:x="120" fg:w="3"/><text x="9.9118%" y="719.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="9.7424%" y="693" width="0.1610%" height="15" fill="rgb(233,23,44)" fg:x="121" fg:w="2"/><text x="9.9924%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.8229%" y="677" width="0.0805%" height="15" fill="rgb(220,182,30)" fg:x="122" fg:w="1"/><text x="10.0729%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.8229%" y="661" width="0.0805%" height="15" fill="rgb(219,116,33)" fg:x="122" fg:w="1"/><text x="10.0729%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.9034%" y="677" width="0.0805%" height="15" fill="rgb(231,15,21)" fg:x="123" fg:w="1"/><text x="10.1534%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.9034%" y="661" width="0.0805%" height="15" fill="rgb(238,119,25)" fg:x="123" fg:w="1"/><text x="10.1534%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="9.6618%" y="741" width="0.4026%" height="15" fill="rgb(232,30,39)" fg:x="120" fg:w="5"/><text x="9.9118%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="9.9034%" y="725" width="0.1610%" height="15" fill="rgb(241,26,30)" fg:x="123" fg:w="2"/><text x="10.1534%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="9.9034%" y="709" width="0.1610%" height="15" fill="rgb(234,154,4)" fg:x="123" fg:w="2"/><text x="10.1534%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="9.9034%" y="693" width="0.1610%" height="15" fill="rgb(229,199,39)" fg:x="123" fg:w="2"/><text x="10.1534%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.9839%" y="677" width="0.0805%" height="15" fill="rgb(236,213,10)" fg:x="124" fg:w="1"/><text x="10.2339%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.9839%" y="661" width="0.0805%" height="15" fill="rgb(247,28,19)" fg:x="124" fg:w="1"/><text x="10.2339%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.9839%" y="645" width="0.0805%" height="15" fill="rgb(239,199,24)" fg:x="124" fg:w="1"/><text x="10.2339%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="10.0644%" y="693" width="0.0805%" height="15" fill="rgb(246,122,13)" fg:x="125" fg:w="1"/><text x="10.3144%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.0644%" y="677" width="0.0805%" height="15" fill="rgb(210,203,29)" fg:x="125" fg:w="1"/><text x="10.3144%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.0644%" y="661" width="0.0805%" height="15" fill="rgb(218,4,50)" fg:x="125" fg:w="1"/><text x="10.3144%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0644%" y="645" width="0.0805%" height="15" fill="rgb(236,142,48)" fg:x="125" fg:w="1"/><text x="10.3144%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.0644%" y="629" width="0.0805%" height="15" fill="rgb(245,173,2)" fg:x="125" fg:w="1"/><text x="10.3144%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0644%" y="613" width="0.0805%" height="15" fill="rgb(244,196,18)" fg:x="125" fg:w="1"/><text x="10.3144%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.0644%" y="597" width="0.0805%" height="15" fill="rgb(221,27,33)" fg:x="125" fg:w="1"/><text x="10.3144%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.0644%" y="581" width="0.0805%" height="15" fill="rgb(210,206,16)" fg:x="125" fg:w="1"/><text x="10.3144%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.0644%" y="565" width="0.0805%" height="15" fill="rgb(238,161,34)" fg:x="125" fg:w="1"/><text x="10.3144%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.0644%" y="549" width="0.0805%" height="15" fill="rgb(243,118,39)" fg:x="125" fg:w="1"/><text x="10.3144%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.1449%" y="661" width="0.0805%" height="15" fill="rgb(234,126,9)" fg:x="126" fg:w="1"/><text x="10.3949%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="10.0644%" y="725" width="0.2415%" height="15" fill="rgb(234,167,42)" fg:x="125" fg:w="3"/><text x="10.3144%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="10.0644%" y="709" width="0.2415%" height="15" fill="rgb(238,54,48)" fg:x="125" fg:w="3"/><text x="10.3144%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="10.1449%" y="693" width="0.1610%" height="15" fill="rgb(226,105,2)" fg:x="126" fg:w="2"/><text x="10.3949%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="10.1449%" y="677" width="0.1610%" height="15" fill="rgb(223,95,23)" fg:x="126" fg:w="2"/><text x="10.3949%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2254%" y="661" width="0.0805%" height="15" fill="rgb(249,212,19)" fg:x="127" fg:w="1"/><text x="10.4754%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.2254%" y="645" width="0.0805%" height="15" fill="rgb(234,158,54)" fg:x="127" fg:w="1"/><text x="10.4754%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2254%" y="629" width="0.0805%" height="15" fill="rgb(247,114,32)" fg:x="127" fg:w="1"/><text x="10.4754%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.2254%" y="613" width="0.0805%" height="15" fill="rgb(250,68,44)" fg:x="127" fg:w="1"/><text x="10.4754%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="10.2254%" y="597" width="0.0805%" height="15" fill="rgb(242,3,15)" fg:x="127" fg:w="1"/><text x="10.4754%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2254%" y="581" width="0.0805%" height="15" fill="rgb(223,110,32)" fg:x="127" fg:w="1"/><text x="10.4754%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.2254%" y="565" width="0.0805%" height="15" fill="rgb(216,26,54)" fg:x="127" fg:w="1"/><text x="10.4754%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2254%" y="549" width="0.0805%" height="15" fill="rgb(209,145,42)" fg:x="127" fg:w="1"/><text x="10.4754%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.2254%" y="533" width="0.0805%" height="15" fill="rgb(240,111,53)" fg:x="127" fg:w="1"/><text x="10.4754%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.2254%" y="517" width="0.0805%" height="15" fill="rgb(209,101,4)" fg:x="127" fg:w="1"/><text x="10.4754%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.53%)</title><rect x="9.3398%" y="757" width="1.5298%" height="15" fill="rgb(231,74,29)" fg:x="116" fg:w="19"/><text x="9.5898%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.81%)</title><rect x="10.0644%" y="741" width="0.8052%" height="15" fill="rgb(223,12,12)" fg:x="125" fg:w="10"/><text x="10.3144%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="10.3060%" y="725" width="0.5636%" height="15" fill="rgb(207,162,2)" fg:x="128" fg:w="7"/><text x="10.5560%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="10.3865%" y="709" width="0.4831%" height="15" fill="rgb(230,152,0)" fg:x="129" fg:w="6"/><text x="10.6365%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="10.3865%" y="693" width="0.4831%" height="15" fill="rgb(254,156,19)" fg:x="129" fg:w="6"/><text x="10.6365%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="10.3865%" y="677" width="0.4831%" height="15" fill="rgb(250,28,0)" fg:x="129" fg:w="6"/><text x="10.6365%" y="687.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="10.3865%" y="661" width="0.4831%" height="15" fill="rgb(253,27,5)" fg:x="129" fg:w="6"/><text x="10.6365%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8696%" y="661" width="0.0805%" height="15" fill="rgb(244,154,7)" fg:x="135" fg:w="1"/><text x="11.1196%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8696%" y="645" width="0.0805%" height="15" fill="rgb(242,108,21)" fg:x="135" fg:w="1"/><text x="11.1196%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8696%" y="629" width="0.0805%" height="15" fill="rgb(254,200,38)" fg:x="135" fg:w="1"/><text x="11.1196%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8696%" y="613" width="0.0805%" height="15" fill="rgb(250,145,41)" fg:x="135" fg:w="1"/><text x="11.1196%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.8696%" y="597" width="0.0805%" height="15" fill="rgb(235,136,31)" fg:x="135" fg:w="1"/><text x="11.1196%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.8696%" y="581" width="0.0805%" height="15" fill="rgb(215,13,18)" fg:x="135" fg:w="1"/><text x="11.1196%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.8696%" y="565" width="0.0805%" height="15" fill="rgb(238,199,12)" fg:x="135" fg:w="1"/><text x="11.1196%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.8696%" y="549" width="0.0805%" height="15" fill="rgb(242,179,49)" fg:x="135" fg:w="1"/><text x="11.1196%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.8696%" y="533" width="0.0805%" height="15" fill="rgb(214,10,44)" fg:x="135" fg:w="1"/><text x="11.1196%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.8696%" y="517" width="0.0805%" height="15" fill="rgb(229,181,11)" fg:x="135" fg:w="1"/><text x="11.1196%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.8696%" y="501" width="0.0805%" height="15" fill="rgb(244,155,10)" fg:x="135" fg:w="1"/><text x="11.1196%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.8696%" y="485" width="0.0805%" height="15" fill="rgb(254,13,48)" fg:x="135" fg:w="1"/><text x="11.1196%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.8696%" y="469" width="0.0805%" height="15" fill="rgb(210,164,6)" fg:x="135" fg:w="1"/><text x="11.1196%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.8696%" y="453" width="0.0805%" height="15" fill="rgb(216,187,40)" fg:x="135" fg:w="1"/><text x="11.1196%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.8696%" y="437" width="0.0805%" height="15" fill="rgb(208,143,21)" fg:x="135" fg:w="1"/><text x="11.1196%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.8696%" y="421" width="0.0805%" height="15" fill="rgb(211,73,41)" fg:x="135" fg:w="1"/><text x="11.1196%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9501%" y="597" width="0.0805%" height="15" fill="rgb(244,69,21)" fg:x="136" fg:w="1"/><text x="11.2001%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.9501%" y="661" width="0.1610%" height="15" fill="rgb(230,152,32)" fg:x="136" fg:w="2"/><text x="11.2001%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="10.9501%" y="645" width="0.1610%" height="15" fill="rgb(208,110,18)" fg:x="136" fg:w="2"/><text x="11.2001%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.9501%" y="629" width="0.1610%" height="15" fill="rgb(214,201,49)" fg:x="136" fg:w="2"/><text x="11.2001%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.9501%" y="613" width="0.1610%" height="15" fill="rgb(253,153,27)" fg:x="136" fg:w="2"/><text x="11.2001%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.0306%" y="597" width="0.0805%" height="15" fill="rgb(238,61,11)" fg:x="137" fg:w="1"/><text x="11.2806%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0306%" y="581" width="0.0805%" height="15" fill="rgb(227,84,2)" fg:x="137" fg:w="1"/><text x="11.2806%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="11.1111%" y="565" width="0.0805%" height="15" fill="rgb(233,52,8)" fg:x="138" fg:w="1"/><text x="11.3611%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.1111%" y="549" width="0.0805%" height="15" fill="rgb(209,136,13)" fg:x="138" fg:w="1"/><text x="11.3611%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.1916%" y="533" width="0.0805%" height="15" fill="rgb(229,86,25)" fg:x="139" fg:w="1"/><text x="11.4416%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="10.8696%" y="741" width="0.4831%" height="15" fill="rgb(235,47,16)" fg:x="135" fg:w="6"/><text x="11.1196%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="10.8696%" y="725" width="0.4831%" height="15" fill="rgb(231,186,4)" fg:x="135" fg:w="6"/><text x="11.1196%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="10.8696%" y="709" width="0.4831%" height="15" fill="rgb(209,213,23)" fg:x="135" fg:w="6"/><text x="11.1196%" y="719.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="10.8696%" y="693" width="0.4831%" height="15" fill="rgb(212,142,47)" fg:x="135" fg:w="6"/><text x="11.1196%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="10.8696%" y="677" width="0.4831%" height="15" fill="rgb(251,86,24)" fg:x="135" fg:w="6"/><text x="11.1196%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="11.1111%" y="661" width="0.2415%" height="15" fill="rgb(206,217,17)" fg:x="138" fg:w="3"/><text x="11.3611%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.1111%" y="645" width="0.2415%" height="15" fill="rgb(248,92,38)" fg:x="138" fg:w="3"/><text x="11.3611%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="11.1111%" y="629" width="0.2415%" height="15" fill="rgb(214,25,29)" fg:x="138" fg:w="3"/><text x="11.3611%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.1111%" y="613" width="0.2415%" height="15" fill="rgb(245,117,13)" fg:x="138" fg:w="3"/><text x="11.3611%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="11.1111%" y="597" width="0.2415%" height="15" fill="rgb(205,169,9)" fg:x="138" fg:w="3"/><text x="11.3611%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.1111%" y="581" width="0.2415%" height="15" fill="rgb(223,134,38)" fg:x="138" fg:w="3"/><text x="11.3611%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="11.1916%" y="565" width="0.1610%" height="15" fill="rgb(249,129,49)" fg:x="139" fg:w="2"/><text x="11.4416%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.1916%" y="549" width="0.1610%" height="15" fill="rgb(229,157,45)" fg:x="139" fg:w="2"/><text x="11.4416%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.2721%" y="533" width="0.0805%" height="15" fill="rgb(232,159,11)" fg:x="140" fg:w="1"/><text x="11.5221%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.2721%" y="517" width="0.0805%" height="15" fill="rgb(230,134,26)" fg:x="140" fg:w="1"/><text x="11.5221%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="11.3527%" y="741" width="0.1610%" height="15" fill="rgb(234,149,40)" fg:x="141" fg:w="2"/><text x="11.6027%" y="751.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="11.3527%" y="725" width="0.1610%" height="15" fill="rgb(221,122,15)" fg:x="141" fg:w="2"/><text x="11.6027%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="11.3527%" y="709" width="0.1610%" height="15" fill="rgb(228,127,0)" fg:x="141" fg:w="2"/><text x="11.6027%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="11.3527%" y="693" width="0.1610%" height="15" fill="rgb(248,37,7)" fg:x="141" fg:w="2"/><text x="11.6027%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="11.3527%" y="677" width="0.1610%" height="15" fill="rgb(215,140,49)" fg:x="141" fg:w="2"/><text x="11.6027%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.4332%" y="661" width="0.0805%" height="15" fill="rgb(236,65,39)" fg:x="142" fg:w="1"/><text x="11.6832%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.5942%" y="693" width="0.0805%" height="15" fill="rgb(253,102,38)" fg:x="144" fg:w="1"/><text x="11.8442%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.5942%" y="677" width="0.0805%" height="15" fill="rgb(244,100,34)" fg:x="144" fg:w="1"/><text x="11.8442%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.5942%" y="661" width="0.0805%" height="15" fill="rgb(210,179,47)" fg:x="144" fg:w="1"/><text x="11.8442%" y="671.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="11.5942%" y="645" width="0.0805%" height="15" fill="rgb(231,41,37)" fg:x="144" fg:w="1"/><text x="11.8442%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7552%" y="645" width="0.0805%" height="15" fill="rgb(226,209,17)" fg:x="146" fg:w="1"/><text x="12.0052%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7552%" y="629" width="0.0805%" height="15" fill="rgb(231,154,20)" fg:x="146" fg:w="1"/><text x="12.0052%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7552%" y="613" width="0.0805%" height="15" fill="rgb(216,134,24)" fg:x="146" fg:w="1"/><text x="12.0052%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7552%" y="597" width="0.0805%" height="15" fill="rgb(224,71,42)" fg:x="146" fg:w="1"/><text x="12.0052%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.7552%" y="581" width="0.0805%" height="15" fill="rgb(250,65,23)" fg:x="146" fg:w="1"/><text x="12.0052%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="11.5942%" y="725" width="0.3221%" height="15" fill="rgb(209,160,35)" fg:x="144" fg:w="4"/><text x="11.8442%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="11.5942%" y="709" width="0.3221%" height="15" fill="rgb(215,8,11)" fg:x="144" fg:w="4"/><text x="11.8442%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="11.6747%" y="693" width="0.2415%" height="15" fill="rgb(227,27,12)" fg:x="145" fg:w="3"/><text x="11.9247%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="11.6747%" y="677" width="0.2415%" height="15" fill="rgb(226,111,41)" fg:x="145" fg:w="3"/><text x="11.9247%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.6747%" y="661" width="0.2415%" height="15" fill="rgb(212,195,15)" fg:x="145" fg:w="3"/><text x="11.9247%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.8357%" y="645" width="0.0805%" height="15" fill="rgb(216,191,17)" fg:x="147" fg:w="1"/><text x="12.0857%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8357%" y="629" width="0.0805%" height="15" fill="rgb(215,57,44)" fg:x="147" fg:w="1"/><text x="12.0857%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.8357%" y="613" width="0.0805%" height="15" fill="rgb(209,38,4)" fg:x="147" fg:w="1"/><text x="12.0857%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8357%" y="597" width="0.0805%" height="15" fill="rgb(238,49,31)" fg:x="147" fg:w="1"/><text x="12.0857%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.8357%" y="581" width="0.0805%" height="15" fill="rgb(219,48,39)" fg:x="147" fg:w="1"/><text x="12.0857%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8357%" y="565" width="0.0805%" height="15" fill="rgb(252,223,43)" fg:x="147" fg:w="1"/><text x="12.0857%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.8357%" y="549" width="0.0805%" height="15" fill="rgb(247,205,46)" fg:x="147" fg:w="1"/><text x="12.0857%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8357%" y="533" width="0.0805%" height="15" fill="rgb(231,16,40)" fg:x="147" fg:w="1"/><text x="12.0857%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.8357%" y="517" width="0.0805%" height="15" fill="rgb(231,115,5)" fg:x="147" fg:w="1"/><text x="12.0857%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.8357%" y="501" width="0.0805%" height="15" fill="rgb(206,127,43)" fg:x="147" fg:w="1"/><text x="12.0857%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.8357%" y="485" width="0.0805%" height="15" fill="rgb(218,101,9)" fg:x="147" fg:w="1"/><text x="12.0857%" y="495.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="11.5137%" y="741" width="0.6441%" height="15" fill="rgb(235,138,50)" fg:x="143" fg:w="8"/><text x="11.7637%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="11.9163%" y="725" width="0.2415%" height="15" fill="rgb(214,197,52)" fg:x="148" fg:w="3"/><text x="12.1663%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.9163%" y="709" width="0.2415%" height="15" fill="rgb(230,80,19)" fg:x="148" fg:w="3"/><text x="12.1663%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="12.0773%" y="693" width="0.0805%" height="15" fill="rgb(224,77,16)" fg:x="150" fg:w="1"/><text x="12.3273%" y="703.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="12.0773%" y="677" width="0.0805%" height="15" fill="rgb(246,4,13)" fg:x="150" fg:w="1"/><text x="12.3273%" y="687.50"></text></g><g><title>plugins_core::build::Build::holding (37 samples, 2.98%)</title><rect x="9.3398%" y="773" width="2.9791%" height="15" fill="rgb(220,177,26)" fg:x="116" fg:w="37"/><text x="9.5898%" y="783.50">plu..</text></g><g><title>plugins_core::tools::set_container (18 samples, 1.45%)</title><rect x="10.8696%" y="757" width="1.4493%" height="15" fill="rgb(215,114,45)" fg:x="135" fg:w="18"/><text x="11.1196%" y="767.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="12.1578%" y="741" width="0.1610%" height="15" fill="rgb(215,71,54)" fg:x="151" fg:w="2"/><text x="12.4078%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.1578%" y="725" width="0.1610%" height="15" fill="rgb(211,155,22)" fg:x="151" fg:w="2"/><text x="12.4078%" y="735.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="12.1578%" y="709" width="0.1610%" height="15" fill="rgb(245,206,18)" fg:x="151" fg:w="2"/><text x="12.4078%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.1578%" y="693" width="0.1610%" height="15" fill="rgb(248,216,48)" fg:x="151" fg:w="2"/><text x="12.4078%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="12.1578%" y="677" width="0.1610%" height="15" fill="rgb(244,84,45)" fg:x="151" fg:w="2"/><text x="12.4078%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.2383%" y="661" width="0.0805%" height="15" fill="rgb(245,13,45)" fg:x="152" fg:w="1"/><text x="12.4883%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="12.2383%" y="645" width="0.0805%" height="15" fill="rgb(247,163,2)" fg:x="152" fg:w="1"/><text x="12.4883%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="12.3188%" y="741" width="0.0805%" height="15" fill="rgb(211,175,10)" fg:x="153" fg:w="1"/><text x="12.5688%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="12.3188%" y="725" width="0.0805%" height="15" fill="rgb(215,186,31)" fg:x="153" fg:w="1"/><text x="12.5688%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="12.3188%" y="709" width="0.0805%" height="15" fill="rgb(207,42,11)" fg:x="153" fg:w="1"/><text x="12.5688%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="693" width="0.0805%" height="15" fill="rgb(224,197,20)" fg:x="153" fg:w="1"/><text x="12.5688%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.3188%" y="677" width="0.0805%" height="15" fill="rgb(244,119,36)" fg:x="153" fg:w="1"/><text x="12.5688%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="661" width="0.0805%" height="15" fill="rgb(250,60,27)" fg:x="153" fg:w="1"/><text x="12.5688%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="645" width="0.0805%" height="15" fill="rgb(252,202,1)" fg:x="153" fg:w="1"/><text x="12.5688%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="629" width="0.0805%" height="15" fill="rgb(206,53,25)" fg:x="153" fg:w="1"/><text x="12.5688%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.3188%" y="613" width="0.0805%" height="15" fill="rgb(210,88,4)" fg:x="153" fg:w="1"/><text x="12.5688%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="597" width="0.0805%" height="15" fill="rgb(211,144,28)" fg:x="153" fg:w="1"/><text x="12.5688%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="581" width="0.0805%" height="15" fill="rgb(247,81,32)" fg:x="153" fg:w="1"/><text x="12.5688%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="565" width="0.0805%" height="15" fill="rgb(225,192,11)" fg:x="153" fg:w="1"/><text x="12.5688%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.3188%" y="549" width="0.0805%" height="15" fill="rgb(232,212,27)" fg:x="153" fg:w="1"/><text x="12.5688%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="533" width="0.0805%" height="15" fill="rgb(239,3,29)" fg:x="153" fg:w="1"/><text x="12.5688%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="517" width="0.0805%" height="15" fill="rgb(252,225,29)" fg:x="153" fg:w="1"/><text x="12.5688%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="501" width="0.0805%" height="15" fill="rgb(205,151,9)" fg:x="153" fg:w="1"/><text x="12.5688%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.3188%" y="485" width="0.0805%" height="15" fill="rgb(216,171,47)" fg:x="153" fg:w="1"/><text x="12.5688%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.3188%" y="469" width="0.0805%" height="15" fill="rgb(206,181,1)" fg:x="153" fg:w="1"/><text x="12.5688%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.3188%" y="453" width="0.0805%" height="15" fill="rgb(232,218,10)" fg:x="153" fg:w="1"/><text x="12.5688%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.3188%" y="437" width="0.0805%" height="15" fill="rgb(244,222,51)" fg:x="153" fg:w="1"/><text x="12.5688%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="12.3188%" y="421" width="0.0805%" height="15" fill="rgb(252,215,16)" fg:x="153" fg:w="1"/><text x="12.5688%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="12.3188%" y="405" width="0.0805%" height="15" fill="rgb(212,130,13)" fg:x="153" fg:w="1"/><text x="12.5688%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="12.3188%" y="389" width="0.0805%" height="15" fill="rgb(227,103,37)" fg:x="153" fg:w="1"/><text x="12.5688%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="12.3188%" y="373" width="0.0805%" height="15" fill="rgb(249,48,15)" fg:x="153" fg:w="1"/><text x="12.5688%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.3188%" y="357" width="0.0805%" height="15" fill="rgb(225,96,9)" fg:x="153" fg:w="1"/><text x="12.5688%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.3994%" y="645" width="0.1610%" height="15" fill="rgb(213,81,41)" fg:x="154" fg:w="2"/><text x="12.6494%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4799%" y="629" width="0.0805%" height="15" fill="rgb(230,15,12)" fg:x="155" fg:w="1"/><text x="12.7299%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.3994%" y="693" width="0.2415%" height="15" fill="rgb(218,106,37)" fg:x="154" fg:w="3"/><text x="12.6494%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.3994%" y="677" width="0.2415%" height="15" fill="rgb(223,172,47)" fg:x="154" fg:w="3"/><text x="12.6494%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.3994%" y="661" width="0.2415%" height="15" fill="rgb(246,180,49)" fg:x="154" fg:w="3"/><text x="12.6494%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5604%" y="645" width="0.0805%" height="15" fill="rgb(231,63,37)" fg:x="156" fg:w="1"/><text x="12.8104%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5604%" y="629" width="0.0805%" height="15" fill="rgb(235,70,40)" fg:x="156" fg:w="1"/><text x="12.8104%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.5604%" y="613" width="0.0805%" height="15" fill="rgb(250,54,26)" fg:x="156" fg:w="1"/><text x="12.8104%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.5604%" y="597" width="0.0805%" height="15" fill="rgb(214,190,1)" fg:x="156" fg:w="1"/><text x="12.8104%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.5604%" y="581" width="0.0805%" height="15" fill="rgb(212,40,35)" fg:x="156" fg:w="1"/><text x="12.8104%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5604%" y="565" width="0.0805%" height="15" fill="rgb(239,183,47)" fg:x="156" fg:w="1"/><text x="12.8104%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5604%" y="549" width="0.0805%" height="15" fill="rgb(211,171,49)" fg:x="156" fg:w="1"/><text x="12.8104%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.5604%" y="533" width="0.0805%" height="15" fill="rgb(249,186,27)" fg:x="156" fg:w="1"/><text x="12.8104%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.5604%" y="517" width="0.0805%" height="15" fill="rgb(223,23,48)" fg:x="156" fg:w="1"/><text x="12.8104%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.5604%" y="501" width="0.0805%" height="15" fill="rgb(209,203,21)" fg:x="156" fg:w="1"/><text x="12.8104%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.5604%" y="485" width="0.0805%" height="15" fill="rgb(229,33,27)" fg:x="156" fg:w="1"/><text x="12.8104%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5604%" y="469" width="0.0805%" height="15" fill="rgb(207,8,53)" fg:x="156" fg:w="1"/><text x="12.8104%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.6409%" y="693" width="0.0805%" height="15" fill="rgb(221,42,0)" fg:x="157" fg:w="1"/><text x="12.8909%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.6409%" y="677" width="0.0805%" height="15" fill="rgb(223,115,3)" fg:x="157" fg:w="1"/><text x="12.8909%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.6409%" y="661" width="0.0805%" height="15" fill="rgb(239,35,26)" fg:x="157" fg:w="1"/><text x="12.8909%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.6409%" y="645" width="0.0805%" height="15" fill="rgb(233,22,9)" fg:x="157" fg:w="1"/><text x="12.8909%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.6409%" y="629" width="0.0805%" height="15" fill="rgb(236,221,48)" fg:x="157" fg:w="1"/><text x="12.8909%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.6409%" y="613" width="0.0805%" height="15" fill="rgb(235,52,30)" fg:x="157" fg:w="1"/><text x="12.8909%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7214%" y="597" width="0.0805%" height="15" fill="rgb(238,133,51)" fg:x="158" fg:w="1"/><text x="12.9714%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7214%" y="581" width="0.0805%" height="15" fill="rgb(213,122,23)" fg:x="158" fg:w="1"/><text x="12.9714%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="12.3994%" y="741" width="0.4831%" height="15" fill="rgb(225,8,15)" fg:x="154" fg:w="6"/><text x="12.6494%" y="751.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="12.3994%" y="725" width="0.4831%" height="15" fill="rgb(219,126,35)" fg:x="154" fg:w="6"/><text x="12.6494%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="12.3994%" y="709" width="0.4831%" height="15" fill="rgb(246,113,21)" fg:x="154" fg:w="6"/><text x="12.6494%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.7214%" y="693" width="0.1610%" height="15" fill="rgb(241,193,32)" fg:x="158" fg:w="2"/><text x="12.9714%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.7214%" y="677" width="0.1610%" height="15" fill="rgb(218,99,18)" fg:x="158" fg:w="2"/><text x="12.9714%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.7214%" y="661" width="0.1610%" height="15" fill="rgb(225,114,4)" fg:x="158" fg:w="2"/><text x="12.9714%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.7214%" y="645" width="0.1610%" height="15" fill="rgb(235,0,15)" fg:x="158" fg:w="2"/><text x="12.9714%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="12.7214%" y="629" width="0.1610%" height="15" fill="rgb(247,45,27)" fg:x="158" fg:w="2"/><text x="12.9714%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.7214%" y="613" width="0.1610%" height="15" fill="rgb(249,88,53)" fg:x="158" fg:w="2"/><text x="12.9714%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.8019%" y="597" width="0.0805%" height="15" fill="rgb(207,58,45)" fg:x="159" fg:w="1"/><text x="13.0519%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.8019%" y="581" width="0.0805%" height="15" fill="rgb(216,7,11)" fg:x="159" fg:w="1"/><text x="13.0519%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="12.8824%" y="741" width="0.1610%" height="15" fill="rgb(230,40,33)" fg:x="160" fg:w="2"/><text x="13.1324%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="12.8824%" y="725" width="0.1610%" height="15" fill="rgb(232,24,46)" fg:x="160" fg:w="2"/><text x="13.1324%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.8824%" y="709" width="0.1610%" height="15" fill="rgb(219,222,45)" fg:x="160" fg:w="2"/><text x="13.1324%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.8824%" y="693" width="0.1610%" height="15" fill="rgb(229,85,44)" fg:x="160" fg:w="2"/><text x="13.1324%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.8824%" y="677" width="0.1610%" height="15" fill="rgb(243,71,36)" fg:x="160" fg:w="2"/><text x="13.1324%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="12.8824%" y="661" width="0.1610%" height="15" fill="rgb(230,203,45)" fg:x="160" fg:w="2"/><text x="13.1324%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.0435%" y="661" width="0.2415%" height="15" fill="rgb(224,77,49)" fg:x="162" fg:w="3"/><text x="13.2935%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1240%" y="645" width="0.1610%" height="15" fill="rgb(210,186,47)" fg:x="163" fg:w="2"/><text x="13.3740%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1240%" y="629" width="0.1610%" height="15" fill="rgb(232,146,10)" fg:x="163" fg:w="2"/><text x="13.3740%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1240%" y="613" width="0.1610%" height="15" fill="rgb(236,185,51)" fg:x="163" fg:w="2"/><text x="13.3740%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2045%" y="597" width="0.0805%" height="15" fill="rgb(223,206,43)" fg:x="164" fg:w="1"/><text x="13.4545%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.2850%" y="661" width="0.0805%" height="15" fill="rgb(227,212,9)" fg:x="165" fg:w="1"/><text x="13.5350%" y="671.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="13.0435%" y="693" width="0.4026%" height="15" fill="rgb(205,82,3)" fg:x="162" fg:w="5"/><text x="13.2935%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="13.0435%" y="677" width="0.4026%" height="15" fill="rgb(214,2,27)" fg:x="162" fg:w="5"/><text x="13.2935%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.3655%" y="661" width="0.0805%" height="15" fill="rgb(241,37,22)" fg:x="166" fg:w="1"/><text x="13.6155%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3655%" y="645" width="0.0805%" height="15" fill="rgb(219,182,1)" fg:x="166" fg:w="1"/><text x="13.6155%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.3655%" y="629" width="0.0805%" height="15" fill="rgb(208,224,23)" fg:x="166" fg:w="1"/><text x="13.6155%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3655%" y="613" width="0.0805%" height="15" fill="rgb(219,121,32)" fg:x="166" fg:w="1"/><text x="13.6155%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.3655%" y="597" width="0.0805%" height="15" fill="rgb(253,13,40)" fg:x="166" fg:w="1"/><text x="13.6155%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3655%" y="581" width="0.0805%" height="15" fill="rgb(233,6,28)" fg:x="166" fg:w="1"/><text x="13.6155%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4461%" y="629" width="0.0805%" height="15" fill="rgb(233,73,8)" fg:x="167" fg:w="1"/><text x="13.6961%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4461%" y="613" width="0.0805%" height="15" fill="rgb(223,48,27)" fg:x="167" fg:w="1"/><text x="13.6961%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4461%" y="597" width="0.0805%" height="15" fill="rgb(231,98,37)" fg:x="167" fg:w="1"/><text x="13.6961%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.4461%" y="581" width="0.0805%" height="15" fill="rgb(249,43,32)" fg:x="167" fg:w="1"/><text x="13.6961%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.4461%" y="661" width="0.1610%" height="15" fill="rgb(246,184,20)" fg:x="167" fg:w="2"/><text x="13.6961%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.4461%" y="645" width="0.1610%" height="15" fill="rgb(251,216,0)" fg:x="167" fg:w="2"/><text x="13.6961%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5266%" y="629" width="0.0805%" height="15" fill="rgb(238,41,42)" fg:x="168" fg:w="1"/><text x="13.7766%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6071%" y="581" width="0.0805%" height="15" fill="rgb(227,224,50)" fg:x="169" fg:w="1"/><text x="13.8571%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6071%" y="565" width="0.0805%" height="15" fill="rgb(237,189,18)" fg:x="169" fg:w="1"/><text x="13.8571%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.6071%" y="549" width="0.0805%" height="15" fill="rgb(238,108,6)" fg:x="169" fg:w="1"/><text x="13.8571%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="13.6876%" y="565" width="0.0805%" height="15" fill="rgb(214,197,53)" fg:x="170" fg:w="1"/><text x="13.9376%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6876%" y="549" width="0.0805%" height="15" fill="rgb(206,183,15)" fg:x="170" fg:w="1"/><text x="13.9376%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6876%" y="533" width="0.0805%" height="15" fill="rgb(208,130,32)" fg:x="170" fg:w="1"/><text x="13.9376%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.6876%" y="517" width="0.0805%" height="15" fill="rgb(226,128,52)" fg:x="170" fg:w="1"/><text x="13.9376%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.53%)</title><rect x="12.3188%" y="773" width="1.5298%" height="15" fill="rgb(231,183,21)" fg:x="153" fg:w="19"/><text x="12.5688%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.53%)</title><rect x="12.3188%" y="757" width="1.5298%" height="15" fill="rgb(216,8,35)" fg:x="153" fg:w="19"/><text x="12.5688%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.81%)</title><rect x="13.0435%" y="741" width="0.8052%" height="15" fill="rgb(224,221,8)" fg:x="162" fg:w="10"/><text x="13.2935%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (10 samples, 0.81%)</title><rect x="13.0435%" y="725" width="0.8052%" height="15" fill="rgb(210,111,33)" fg:x="162" fg:w="10"/><text x="13.2935%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (10 samples, 0.81%)</title><rect x="13.0435%" y="709" width="0.8052%" height="15" fill="rgb(232,211,38)" fg:x="162" fg:w="10"/><text x="13.2935%" y="719.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="13.4461%" y="693" width="0.4026%" height="15" fill="rgb(216,190,27)" fg:x="167" fg:w="5"/><text x="13.6961%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="13.4461%" y="677" width="0.4026%" height="15" fill="rgb(237,215,27)" fg:x="167" fg:w="5"/><text x="13.6961%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="13.6071%" y="661" width="0.2415%" height="15" fill="rgb(251,121,39)" fg:x="169" fg:w="3"/><text x="13.8571%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="13.6071%" y="645" width="0.2415%" height="15" fill="rgb(244,21,14)" fg:x="169" fg:w="3"/><text x="13.8571%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="13.6071%" y="629" width="0.2415%" height="15" fill="rgb(221,192,22)" fg:x="169" fg:w="3"/><text x="13.8571%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="13.6071%" y="613" width="0.2415%" height="15" fill="rgb(251,190,28)" fg:x="169" fg:w="3"/><text x="13.8571%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="13.6071%" y="597" width="0.2415%" height="15" fill="rgb(217,4,51)" fg:x="169" fg:w="3"/><text x="13.8571%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="13.6876%" y="581" width="0.1610%" height="15" fill="rgb(215,183,49)" fg:x="170" fg:w="2"/><text x="13.9376%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.7681%" y="565" width="0.0805%" height="15" fill="rgb(249,28,49)" fg:x="171" fg:w="1"/><text x="14.0181%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.7681%" y="549" width="0.0805%" height="15" fill="rgb(214,42,20)" fg:x="171" fg:w="1"/><text x="14.0181%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.8486%" y="741" width="0.0805%" height="15" fill="rgb(222,77,27)" fg:x="172" fg:w="1"/><text x="14.0986%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.8486%" y="725" width="0.0805%" height="15" fill="rgb(252,198,32)" fg:x="172" fg:w="1"/><text x="14.0986%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.8486%" y="709" width="0.0805%" height="15" fill="rgb(207,140,50)" fg:x="172" fg:w="1"/><text x="14.0986%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8486%" y="693" width="0.0805%" height="15" fill="rgb(251,170,16)" fg:x="172" fg:w="1"/><text x="14.0986%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.8486%" y="677" width="0.0805%" height="15" fill="rgb(249,111,45)" fg:x="172" fg:w="1"/><text x="14.0986%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8486%" y="661" width="0.0805%" height="15" fill="rgb(241,99,35)" fg:x="172" fg:w="1"/><text x="14.0986%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.9291%" y="613" width="0.0805%" height="15" fill="rgb(216,188,17)" fg:x="173" fg:w="1"/><text x="14.1791%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.9291%" y="597" width="0.0805%" height="15" fill="rgb(254,209,53)" fg:x="173" fg:w="1"/><text x="14.1791%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="13.9291%" y="581" width="0.0805%" height="15" fill="rgb(231,105,41)" fg:x="173" fg:w="1"/><text x="14.1791%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="13.8486%" y="773" width="0.2415%" height="15" fill="rgb(242,93,23)" fg:x="172" fg:w="3"/><text x="14.0986%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="13.8486%" y="757" width="0.2415%" height="15" fill="rgb(218,159,11)" fg:x="172" fg:w="3"/><text x="14.0986%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="13.9291%" y="741" width="0.1610%" height="15" fill="rgb(209,90,32)" fg:x="173" fg:w="2"/><text x="14.1791%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="13.9291%" y="725" width="0.1610%" height="15" fill="rgb(253,118,46)" fg:x="173" fg:w="2"/><text x="14.1791%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="13.9291%" y="709" width="0.1610%" height="15" fill="rgb(219,121,2)" fg:x="173" fg:w="2"/><text x="14.1791%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.9291%" y="693" width="0.1610%" height="15" fill="rgb(207,57,47)" fg:x="173" fg:w="2"/><text x="14.1791%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="13.9291%" y="677" width="0.1610%" height="15" fill="rgb(235,113,43)" fg:x="173" fg:w="2"/><text x="14.1791%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.9291%" y="661" width="0.1610%" height="15" fill="rgb(238,30,50)" fg:x="173" fg:w="2"/><text x="14.1791%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="13.9291%" y="645" width="0.1610%" height="15" fill="rgb(237,47,29)" fg:x="173" fg:w="2"/><text x="14.1791%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="13.9291%" y="629" width="0.1610%" height="15" fill="rgb(245,102,24)" fg:x="173" fg:w="2"/><text x="14.1791%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0097%" y="613" width="0.0805%" height="15" fill="rgb(245,152,9)" fg:x="174" fg:w="1"/><text x="14.2597%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="14.0902%" y="757" width="0.1610%" height="15" fill="rgb(223,213,17)" fg:x="175" fg:w="2"/><text x="14.3402%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.0902%" y="741" width="0.1610%" height="15" fill="rgb(241,164,4)" fg:x="175" fg:w="2"/><text x="14.3402%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.0902%" y="725" width="0.1610%" height="15" fill="rgb(205,209,31)" fg:x="175" fg:w="2"/><text x="14.3402%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.0902%" y="709" width="0.1610%" height="15" fill="rgb(248,173,2)" fg:x="175" fg:w="2"/><text x="14.3402%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0902%" y="693" width="0.1610%" height="15" fill="rgb(207,67,32)" fg:x="175" fg:w="2"/><text x="14.3402%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0902%" y="677" width="0.1610%" height="15" fill="rgb(239,109,13)" fg:x="175" fg:w="2"/><text x="14.3402%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0902%" y="661" width="0.1610%" height="15" fill="rgb(233,123,24)" fg:x="175" fg:w="2"/><text x="14.3402%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0902%" y="645" width="0.1610%" height="15" fill="rgb(232,120,19)" fg:x="175" fg:w="2"/><text x="14.3402%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.0902%" y="629" width="0.1610%" height="15" fill="rgb(225,17,50)" fg:x="175" fg:w="2"/><text x="14.3402%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0902%" y="613" width="0.1610%" height="15" fill="rgb(239,216,13)" fg:x="175" fg:w="2"/><text x="14.3402%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0902%" y="597" width="0.1610%" height="15" fill="rgb(232,213,26)" fg:x="175" fg:w="2"/><text x="14.3402%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0902%" y="581" width="0.1610%" height="15" fill="rgb(244,59,39)" fg:x="175" fg:w="2"/><text x="14.3402%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1707%" y="565" width="0.0805%" height="15" fill="rgb(234,61,35)" fg:x="176" fg:w="1"/><text x="14.4207%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1707%" y="549" width="0.0805%" height="15" fill="rgb(245,94,24)" fg:x="176" fg:w="1"/><text x="14.4207%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.1707%" y="533" width="0.0805%" height="15" fill="rgb(238,190,44)" fg:x="176" fg:w="1"/><text x="14.4207%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.1707%" y="517" width="0.0805%" height="15" fill="rgb(205,145,25)" fg:x="176" fg:w="1"/><text x="14.4207%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="14.2512%" y="725" width="0.0805%" height="15" fill="rgb(229,158,41)" fg:x="177" fg:w="1"/><text x="14.5012%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="14.2512%" y="709" width="0.0805%" height="15" fill="rgb(224,121,5)" fg:x="177" fg:w="1"/><text x="14.5012%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.2512%" y="693" width="0.0805%" height="15" fill="rgb(238,168,35)" fg:x="177" fg:w="1"/><text x="14.5012%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="14.2512%" y="757" width="0.1610%" height="15" fill="rgb(231,11,42)" fg:x="177" fg:w="2"/><text x="14.5012%" y="767.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="14.2512%" y="741" width="0.1610%" height="15" fill="rgb(241,105,19)" fg:x="177" fg:w="2"/><text x="14.5012%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.3317%" y="725" width="0.0805%" height="15" fill="rgb(253,210,20)" fg:x="178" fg:w="1"/><text x="14.5817%" y="735.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="14.3317%" y="709" width="0.0805%" height="15" fill="rgb(215,72,52)" fg:x="178" fg:w="1"/><text x="14.5817%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.3317%" y="693" width="0.0805%" height="15" fill="rgb(223,225,30)" fg:x="178" fg:w="1"/><text x="14.5817%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="14.3317%" y="677" width="0.0805%" height="15" fill="rgb(220,138,44)" fg:x="178" fg:w="1"/><text x="14.5817%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="14.3317%" y="661" width="0.0805%" height="15" fill="rgb(206,128,12)" fg:x="178" fg:w="1"/><text x="14.5817%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.4122%" y="757" width="0.0805%" height="15" fill="rgb(245,194,0)" fg:x="179" fg:w="1"/><text x="14.6622%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="14.5733%" y="693" width="0.0805%" height="15" fill="rgb(235,175,41)" fg:x="181" fg:w="1"/><text x="14.8233%" y="703.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="14.5733%" y="677" width="0.0805%" height="15" fill="rgb(216,15,48)" fg:x="181" fg:w="1"/><text x="14.8233%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.5733%" y="661" width="0.0805%" height="15" fill="rgb(223,179,5)" fg:x="181" fg:w="1"/><text x="14.8233%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.5733%" y="645" width="0.0805%" height="15" fill="rgb(220,80,15)" fg:x="181" fg:w="1"/><text x="14.8233%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.5733%" y="629" width="0.0805%" height="15" fill="rgb(228,20,30)" fg:x="181" fg:w="1"/><text x="14.8233%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.5733%" y="613" width="0.0805%" height="15" fill="rgb(229,194,27)" fg:x="181" fg:w="1"/><text x="14.8233%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.5733%" y="597" width="0.0805%" height="15" fill="rgb(238,202,32)" fg:x="181" fg:w="1"/><text x="14.8233%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="14.5733%" y="581" width="0.0805%" height="15" fill="rgb(207,82,27)" fg:x="181" fg:w="1"/><text x="14.8233%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="14.5733%" y="565" width="0.0805%" height="15" fill="rgb(246,122,46)" fg:x="181" fg:w="1"/><text x="14.8233%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="14.5733%" y="549" width="0.0805%" height="15" fill="rgb(220,101,26)" fg:x="181" fg:w="1"/><text x="14.8233%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="14.5733%" y="533" width="0.0805%" height="15" fill="rgb(251,63,9)" fg:x="181" fg:w="1"/><text x="14.8233%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.5733%" y="517" width="0.0805%" height="15" fill="rgb(235,186,5)" fg:x="181" fg:w="1"/><text x="14.8233%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6538%" y="629" width="0.0805%" height="15" fill="rgb(241,139,37)" fg:x="182" fg:w="1"/><text x="14.9038%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="14.6538%" y="693" width="0.1610%" height="15" fill="rgb(252,177,51)" fg:x="182" fg:w="2"/><text x="14.9038%" y="703.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="14.6538%" y="677" width="0.1610%" height="15" fill="rgb(214,131,22)" fg:x="182" fg:w="2"/><text x="14.9038%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="14.6538%" y="661" width="0.1610%" height="15" fill="rgb(246,53,19)" fg:x="182" fg:w="2"/><text x="14.9038%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.6538%" y="645" width="0.1610%" height="15" fill="rgb(231,158,27)" fg:x="182" fg:w="2"/><text x="14.9038%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="14.7343%" y="629" width="0.0805%" height="15" fill="rgb(226,166,46)" fg:x="183" fg:w="1"/><text x="14.9843%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.7343%" y="613" width="0.0805%" height="15" fill="rgb(218,178,26)" fg:x="183" fg:w="1"/><text x="14.9843%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7343%" y="597" width="0.0805%" height="15" fill="rgb(206,25,39)" fg:x="183" fg:w="1"/><text x="14.9843%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="14.5733%" y="709" width="0.3221%" height="15" fill="rgb(232,218,41)" fg:x="181" fg:w="4"/><text x="14.8233%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="14.8148%" y="693" width="0.0805%" height="15" fill="rgb(212,151,15)" fg:x="184" fg:w="1"/><text x="15.0648%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="14.8148%" y="677" width="0.0805%" height="15" fill="rgb(213,49,22)" fg:x="184" fg:w="1"/><text x="15.0648%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.8148%" y="661" width="0.0805%" height="15" fill="rgb(247,116,21)" fg:x="184" fg:w="1"/><text x="15.0648%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="14.8953%" y="677" width="0.0805%" height="15" fill="rgb(248,98,14)" fg:x="185" fg:w="1"/><text x="15.1453%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.8953%" y="661" width="0.0805%" height="15" fill="rgb(247,72,6)" fg:x="185" fg:w="1"/><text x="15.1453%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9758%" y="565" width="0.0805%" height="15" fill="rgb(213,9,22)" fg:x="186" fg:w="1"/><text x="15.2258%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9758%" y="549" width="0.0805%" height="15" fill="rgb(213,122,30)" fg:x="186" fg:w="1"/><text x="15.2258%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.9758%" y="629" width="0.1610%" height="15" fill="rgb(244,11,30)" fg:x="186" fg:w="2"/><text x="15.2258%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.9758%" y="613" width="0.1610%" height="15" fill="rgb(236,102,26)" fg:x="186" fg:w="2"/><text x="15.2258%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.9758%" y="597" width="0.1610%" height="15" fill="rgb(231,166,37)" fg:x="186" fg:w="2"/><text x="15.2258%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.9758%" y="581" width="0.1610%" height="15" fill="rgb(220,224,29)" fg:x="186" fg:w="2"/><text x="15.2258%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0564%" y="565" width="0.0805%" height="15" fill="rgb(227,30,40)" fg:x="187" fg:w="1"/><text x="15.3064%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0564%" y="549" width="0.0805%" height="15" fill="rgb(235,8,36)" fg:x="187" fg:w="1"/><text x="15.3064%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.0564%" y="533" width="0.0805%" height="15" fill="rgb(232,175,19)" fg:x="187" fg:w="1"/><text x="15.3064%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.0564%" y="517" width="0.0805%" height="15" fill="rgb(217,114,10)" fg:x="187" fg:w="1"/><text x="15.3064%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.0564%" y="501" width="0.0805%" height="15" fill="rgb(214,112,41)" fg:x="187" fg:w="1"/><text x="15.3064%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0564%" y="485" width="0.0805%" height="15" fill="rgb(226,69,34)" fg:x="187" fg:w="1"/><text x="15.3064%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0564%" y="469" width="0.0805%" height="15" fill="rgb(219,23,46)" fg:x="187" fg:w="1"/><text x="15.3064%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.0564%" y="453" width="0.0805%" height="15" fill="rgb(233,3,8)" fg:x="187" fg:w="1"/><text x="15.3064%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.0564%" y="437" width="0.0805%" height="15" fill="rgb(251,34,42)" fg:x="187" fg:w="1"/><text x="15.3064%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.0564%" y="421" width="0.0805%" height="15" fill="rgb(215,84,9)" fg:x="187" fg:w="1"/><text x="15.3064%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.0564%" y="405" width="0.0805%" height="15" fill="rgb(231,75,52)" fg:x="187" fg:w="1"/><text x="15.3064%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0564%" y="389" width="0.0805%" height="15" fill="rgb(247,201,31)" fg:x="187" fg:w="1"/><text x="15.3064%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="14.8953%" y="709" width="0.3221%" height="15" fill="rgb(215,171,37)" fg:x="185" fg:w="4"/><text x="15.1453%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="14.8953%" y="693" width="0.3221%" height="15" fill="rgb(208,208,44)" fg:x="185" fg:w="4"/><text x="15.1453%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="14.9758%" y="677" width="0.2415%" height="15" fill="rgb(247,146,54)" fg:x="186" fg:w="3"/><text x="15.2258%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="14.9758%" y="661" width="0.2415%" height="15" fill="rgb(209,0,40)" fg:x="186" fg:w="3"/><text x="15.2258%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.9758%" y="645" width="0.2415%" height="15" fill="rgb(221,59,4)" fg:x="186" fg:w="3"/><text x="15.2258%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1369%" y="629" width="0.0805%" height="15" fill="rgb(227,153,47)" fg:x="188" fg:w="1"/><text x="15.3869%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1369%" y="613" width="0.0805%" height="15" fill="rgb(253,225,10)" fg:x="188" fg:w="1"/><text x="15.3869%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1369%" y="597" width="0.0805%" height="15" fill="rgb(237,201,24)" fg:x="188" fg:w="1"/><text x="15.3869%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1369%" y="581" width="0.0805%" height="15" fill="rgb(238,23,27)" fg:x="188" fg:w="1"/><text x="15.3869%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.1369%" y="565" width="0.0805%" height="15" fill="rgb(236,54,50)" fg:x="188" fg:w="1"/><text x="15.3869%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1369%" y="549" width="0.0805%" height="15" fill="rgb(216,106,0)" fg:x="188" fg:w="1"/><text x="15.3869%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1369%" y="533" width="0.0805%" height="15" fill="rgb(234,179,35)" fg:x="188" fg:w="1"/><text x="15.3869%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1369%" y="517" width="0.0805%" height="15" fill="rgb(210,35,8)" fg:x="188" fg:w="1"/><text x="15.3869%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="15.2174%" y="677" width="0.1610%" height="15" fill="rgb(238,144,16)" fg:x="189" fg:w="2"/><text x="15.4674%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="15.2174%" y="661" width="0.1610%" height="15" fill="rgb(244,54,7)" fg:x="189" fg:w="2"/><text x="15.4674%" y="671.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="15.2174%" y="645" width="0.1610%" height="15" fill="rgb(233,225,40)" fg:x="189" fg:w="2"/><text x="15.4674%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2979%" y="629" width="0.0805%" height="15" fill="rgb(249,227,23)" fg:x="190" fg:w="1"/><text x="15.5479%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2979%" y="613" width="0.0805%" height="15" fill="rgb(215,42,44)" fg:x="190" fg:w="1"/><text x="15.5479%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2979%" y="597" width="0.0805%" height="15" fill="rgb(220,145,40)" fg:x="190" fg:w="1"/><text x="15.5479%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.2979%" y="581" width="0.0805%" height="15" fill="rgb(228,218,40)" fg:x="190" fg:w="1"/><text x="15.5479%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.2979%" y="565" width="0.0805%" height="15" fill="rgb(217,52,54)" fg:x="190" fg:w="1"/><text x="15.5479%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.2979%" y="549" width="0.0805%" height="15" fill="rgb(223,90,22)" fg:x="190" fg:w="1"/><text x="15.5479%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2979%" y="533" width="0.0805%" height="15" fill="rgb(232,114,35)" fg:x="190" fg:w="1"/><text x="15.5479%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2979%" y="517" width="0.0805%" height="15" fill="rgb(227,223,50)" fg:x="190" fg:w="1"/><text x="15.5479%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.2979%" y="501" width="0.0805%" height="15" fill="rgb(249,175,7)" fg:x="190" fg:w="1"/><text x="15.5479%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.2979%" y="485" width="0.0805%" height="15" fill="rgb(249,173,15)" fg:x="190" fg:w="1"/><text x="15.5479%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.2979%" y="469" width="0.0805%" height="15" fill="rgb(240,131,6)" fg:x="190" fg:w="1"/><text x="15.5479%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.2979%" y="453" width="0.0805%" height="15" fill="rgb(246,117,16)" fg:x="190" fg:w="1"/><text x="15.5479%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2979%" y="437" width="0.0805%" height="15" fill="rgb(209,32,16)" fg:x="190" fg:w="1"/><text x="15.5479%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.3784%" y="677" width="0.0805%" height="15" fill="rgb(207,45,44)" fg:x="191" fg:w="1"/><text x="15.6284%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.3784%" y="661" width="0.0805%" height="15" fill="rgb(210,66,3)" fg:x="191" fg:w="1"/><text x="15.6284%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.3784%" y="645" width="0.0805%" height="15" fill="rgb(246,133,30)" fg:x="191" fg:w="1"/><text x="15.6284%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3784%" y="629" width="0.0805%" height="15" fill="rgb(224,37,17)" fg:x="191" fg:w="1"/><text x="15.6284%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3784%" y="613" width="0.0805%" height="15" fill="rgb(237,218,18)" fg:x="191" fg:w="1"/><text x="15.6284%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3784%" y="597" width="0.0805%" height="15" fill="rgb(240,57,8)" fg:x="191" fg:w="1"/><text x="15.6284%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.4589%" y="661" width="0.0805%" height="15" fill="rgb(231,51,38)" fg:x="192" fg:w="1"/><text x="15.7089%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.4589%" y="645" width="0.0805%" height="15" fill="rgb(230,89,50)" fg:x="192" fg:w="1"/><text x="15.7089%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.4589%" y="629" width="0.0805%" height="15" fill="rgb(234,103,34)" fg:x="192" fg:w="1"/><text x="15.7089%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="15.5395%" y="645" width="0.0805%" height="15" fill="rgb(220,45,48)" fg:x="193" fg:w="1"/><text x="15.7895%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.5395%" y="629" width="0.0805%" height="15" fill="rgb(250,210,3)" fg:x="193" fg:w="1"/><text x="15.7895%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5395%" y="613" width="0.0805%" height="15" fill="rgb(210,118,12)" fg:x="193" fg:w="1"/><text x="15.7895%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.5395%" y="597" width="0.0805%" height="15" fill="rgb(238,154,21)" fg:x="193" fg:w="1"/><text x="15.7895%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5395%" y="581" width="0.0805%" height="15" fill="rgb(227,220,4)" fg:x="193" fg:w="1"/><text x="15.7895%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="15.4589%" y="677" width="0.2415%" height="15" fill="rgb(207,179,27)" fg:x="192" fg:w="3"/><text x="15.7089%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.5395%" y="661" width="0.1610%" height="15" fill="rgb(240,111,30)" fg:x="193" fg:w="2"/><text x="15.7895%" y="671.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="15.6200%" y="645" width="0.0805%" height="15" fill="rgb(251,29,1)" fg:x="194" fg:w="1"/><text x="15.8700%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.6200%" y="629" width="0.0805%" height="15" fill="rgb(224,141,39)" fg:x="194" fg:w="1"/><text x="15.8700%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.6200%" y="613" width="0.0805%" height="15" fill="rgb(207,98,26)" fg:x="194" fg:w="1"/><text x="15.8700%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.6200%" y="597" width="0.0805%" height="15" fill="rgb(221,37,6)" fg:x="194" fg:w="1"/><text x="15.8700%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7005%" y="597" width="0.0805%" height="15" fill="rgb(217,32,44)" fg:x="195" fg:w="1"/><text x="15.9505%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7005%" y="581" width="0.0805%" height="15" fill="rgb(253,149,2)" fg:x="195" fg:w="1"/><text x="15.9505%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7005%" y="565" width="0.0805%" height="15" fill="rgb(220,165,39)" fg:x="195" fg:w="1"/><text x="15.9505%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7005%" y="549" width="0.0805%" height="15" fill="rgb(235,33,48)" fg:x="195" fg:w="1"/><text x="15.9505%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7810%" y="597" width="0.0805%" height="15" fill="rgb(221,89,6)" fg:x="196" fg:w="1"/><text x="16.0310%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7810%" y="581" width="0.0805%" height="15" fill="rgb(215,214,6)" fg:x="196" fg:w="1"/><text x="16.0310%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="15.7005%" y="629" width="0.2415%" height="15" fill="rgb(241,1,30)" fg:x="195" fg:w="3"/><text x="15.9505%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.7005%" y="613" width="0.2415%" height="15" fill="rgb(211,140,32)" fg:x="195" fg:w="3"/><text x="15.9505%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.8615%" y="597" width="0.0805%" height="15" fill="rgb(232,48,21)" fg:x="197" fg:w="1"/><text x="16.1115%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8615%" y="581" width="0.0805%" height="15" fill="rgb(252,217,9)" fg:x="197" fg:w="1"/><text x="16.1115%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.8615%" y="565" width="0.0805%" height="15" fill="rgb(206,123,34)" fg:x="197" fg:w="1"/><text x="16.1115%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8615%" y="549" width="0.0805%" height="15" fill="rgb(245,161,38)" fg:x="197" fg:w="1"/><text x="16.1115%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.8615%" y="533" width="0.0805%" height="15" fill="rgb(233,205,7)" fg:x="197" fg:w="1"/><text x="16.1115%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.8615%" y="517" width="0.0805%" height="15" fill="rgb(217,119,18)" fg:x="197" fg:w="1"/><text x="16.1115%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="15.8615%" y="501" width="0.0805%" height="15" fill="rgb(252,126,3)" fg:x="197" fg:w="1"/><text x="16.1115%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="15.2174%" y="693" width="0.8052%" height="15" fill="rgb(252,188,15)" fg:x="189" fg:w="10"/><text x="15.4674%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="15.7005%" y="677" width="0.3221%" height="15" fill="rgb(228,1,48)" fg:x="195" fg:w="4"/><text x="15.9505%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="15.7005%" y="661" width="0.3221%" height="15" fill="rgb(205,187,8)" fg:x="195" fg:w="4"/><text x="15.9505%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="15.7005%" y="645" width="0.3221%" height="15" fill="rgb(205,105,50)" fg:x="195" fg:w="4"/><text x="15.9505%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.9420%" y="629" width="0.0805%" height="15" fill="rgb(211,31,46)" fg:x="198" fg:w="1"/><text x="16.1920%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.9420%" y="613" width="0.0805%" height="15" fill="rgb(213,126,5)" fg:x="198" fg:w="1"/><text x="16.1920%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.9420%" y="597" width="0.0805%" height="15" fill="rgb(231,87,9)" fg:x="198" fg:w="1"/><text x="16.1920%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.9420%" y="581" width="0.0805%" height="15" fill="rgb(219,224,20)" fg:x="198" fg:w="1"/><text x="16.1920%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.9420%" y="565" width="0.0805%" height="15" fill="rgb(230,84,21)" fg:x="198" fg:w="1"/><text x="16.1920%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.9420%" y="549" width="0.0805%" height="15" fill="rgb(224,169,42)" fg:x="198" fg:w="1"/><text x="16.1920%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.9420%" y="533" width="0.0805%" height="15" fill="rgb(227,182,13)" fg:x="198" fg:w="1"/><text x="16.1920%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.9420%" y="517" width="0.0805%" height="15" fill="rgb(249,57,41)" fg:x="198" fg:w="1"/><text x="16.1920%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.9420%" y="501" width="0.0805%" height="15" fill="rgb(214,93,52)" fg:x="198" fg:w="1"/><text x="16.1920%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="16.0225%" y="693" width="0.0805%" height="15" fill="rgb(229,161,34)" fg:x="199" fg:w="1"/><text x="16.2725%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.0225%" y="677" width="0.0805%" height="15" fill="rgb(227,193,17)" fg:x="199" fg:w="1"/><text x="16.2725%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1031%" y="597" width="0.0805%" height="15" fill="rgb(242,164,46)" fg:x="200" fg:w="1"/><text x="16.3531%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1031%" y="581" width="0.0805%" height="15" fill="rgb(242,142,47)" fg:x="200" fg:w="1"/><text x="16.3531%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1031%" y="565" width="0.0805%" height="15" fill="rgb(208,23,18)" fg:x="200" fg:w="1"/><text x="16.3531%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.1031%" y="549" width="0.0805%" height="15" fill="rgb(219,54,38)" fg:x="200" fg:w="1"/><text x="16.3531%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.1031%" y="533" width="0.0805%" height="15" fill="rgb(206,97,35)" fg:x="200" fg:w="1"/><text x="16.3531%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.1031%" y="517" width="0.0805%" height="15" fill="rgb(208,76,8)" fg:x="200" fg:w="1"/><text x="16.3531%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1031%" y="501" width="0.0805%" height="15" fill="rgb(220,92,28)" fg:x="200" fg:w="1"/><text x="16.3531%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1031%" y="485" width="0.0805%" height="15" fill="rgb(209,158,39)" fg:x="200" fg:w="1"/><text x="16.3531%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.1031%" y="469" width="0.0805%" height="15" fill="rgb(238,175,9)" fg:x="200" fg:w="1"/><text x="16.3531%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.1031%" y="453" width="0.0805%" height="15" fill="rgb(240,116,17)" fg:x="200" fg:w="1"/><text x="16.3531%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.1031%" y="437" width="0.0805%" height="15" fill="rgb(208,7,2)" fg:x="200" fg:w="1"/><text x="16.3531%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.1031%" y="421" width="0.0805%" height="15" fill="rgb(252,52,4)" fg:x="200" fg:w="1"/><text x="16.3531%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1031%" y="405" width="0.0805%" height="15" fill="rgb(222,68,34)" fg:x="200" fg:w="1"/><text x="16.3531%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="16.1031%" y="677" width="0.1610%" height="15" fill="rgb(242,154,35)" fg:x="200" fg:w="2"/><text x="16.3531%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="16.1031%" y="661" width="0.1610%" height="15" fill="rgb(210,125,54)" fg:x="200" fg:w="2"/><text x="16.3531%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="16.1031%" y="645" width="0.1610%" height="15" fill="rgb(247,121,18)" fg:x="200" fg:w="2"/><text x="16.3531%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.1031%" y="629" width="0.1610%" height="15" fill="rgb(223,48,51)" fg:x="200" fg:w="2"/><text x="16.3531%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.1031%" y="613" width="0.1610%" height="15" fill="rgb(211,156,48)" fg:x="200" fg:w="2"/><text x="16.3531%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.1836%" y="597" width="0.0805%" height="15" fill="rgb(236,56,31)" fg:x="201" fg:w="1"/><text x="16.4336%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1836%" y="581" width="0.0805%" height="15" fill="rgb(247,157,52)" fg:x="201" fg:w="1"/><text x="16.4336%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.1836%" y="565" width="0.0805%" height="15" fill="rgb(244,121,39)" fg:x="201" fg:w="1"/><text x="16.4336%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1836%" y="549" width="0.0805%" height="15" fill="rgb(239,4,40)" fg:x="201" fg:w="1"/><text x="16.4336%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.1836%" y="533" width="0.0805%" height="15" fill="rgb(213,204,45)" fg:x="201" fg:w="1"/><text x="16.4336%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1836%" y="517" width="0.0805%" height="15" fill="rgb(242,107,0)" fg:x="201" fg:w="1"/><text x="16.4336%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1836%" y="501" width="0.0805%" height="15" fill="rgb(215,152,25)" fg:x="201" fg:w="1"/><text x="16.4336%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.1836%" y="485" width="0.0805%" height="15" fill="rgb(233,151,6)" fg:x="201" fg:w="1"/><text x="16.4336%" y="495.50"></text></g><g><title>plugins_core::build::Build::leads_to (14 samples, 1.13%)</title><rect x="15.2174%" y="709" width="1.1272%" height="15" fill="rgb(206,126,44)" fg:x="189" fg:w="14"/><text x="15.4674%" y="719.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.24%)</title><rect x="16.1031%" y="693" width="0.2415%" height="15" fill="rgb(209,145,15)" fg:x="200" fg:w="3"/><text x="16.3531%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.2641%" y="677" width="0.0805%" height="15" fill="rgb(235,214,8)" fg:x="202" fg:w="1"/><text x="16.5141%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2641%" y="661" width="0.0805%" height="15" fill="rgb(216,140,51)" fg:x="202" fg:w="1"/><text x="16.5141%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.2641%" y="645" width="0.0805%" height="15" fill="rgb(213,83,34)" fg:x="202" fg:w="1"/><text x="16.5141%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2641%" y="629" width="0.0805%" height="15" fill="rgb(218,186,44)" fg:x="202" fg:w="1"/><text x="16.5141%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.2641%" y="613" width="0.0805%" height="15" fill="rgb(225,147,10)" fg:x="202" fg:w="1"/><text x="16.5141%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 1.93%)</title><rect x="14.4928%" y="757" width="1.9324%" height="15" fill="rgb(209,214,20)" fg:x="180" fg:w="24"/><text x="14.7428%" y="767.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.93%)</title><rect x="14.4928%" y="741" width="1.9324%" height="15" fill="rgb(252,61,32)" fg:x="180" fg:w="24"/><text x="14.7428%" y="751.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (24 samples, 1.93%)</title><rect x="14.4928%" y="725" width="1.9324%" height="15" fill="rgb(237,204,10)" fg:x="180" fg:w="24"/><text x="14.7428%" y="735.50">p..</text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="16.3446%" y="709" width="0.0805%" height="15" fill="rgb(246,118,16)" fg:x="203" fg:w="1"/><text x="16.5946%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="16.3446%" y="693" width="0.0805%" height="15" fill="rgb(214,50,9)" fg:x="203" fg:w="1"/><text x="16.5946%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.3446%" y="677" width="0.0805%" height="15" fill="rgb(212,41,1)" fg:x="203" fg:w="1"/><text x="16.5946%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.3446%" y="661" width="0.0805%" height="15" fill="rgb(228,172,32)" fg:x="203" fg:w="1"/><text x="16.5946%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3446%" y="645" width="0.0805%" height="15" fill="rgb(231,85,38)" fg:x="203" fg:w="1"/><text x="16.5946%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3446%" y="629" width="0.0805%" height="15" fill="rgb(223,120,31)" fg:x="203" fg:w="1"/><text x="16.5946%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3446%" y="613" width="0.0805%" height="15" fill="rgb(254,174,9)" fg:x="203" fg:w="1"/><text x="16.5946%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="16.4251%" y="645" width="0.1610%" height="15" fill="rgb(243,197,0)" fg:x="204" fg:w="2"/><text x="16.6751%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="16.4251%" y="629" width="0.1610%" height="15" fill="rgb(226,186,17)" fg:x="204" fg:w="2"/><text x="16.6751%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="16.4251%" y="613" width="0.1610%" height="15" fill="rgb(229,38,38)" fg:x="204" fg:w="2"/><text x="16.6751%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="16.4251%" y="597" width="0.1610%" height="15" fill="rgb(238,82,14)" fg:x="204" fg:w="2"/><text x="16.6751%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="16.4251%" y="581" width="0.1610%" height="15" fill="rgb(230,154,54)" fg:x="204" fg:w="2"/><text x="16.6751%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="16.4251%" y="565" width="0.1610%" height="15" fill="rgb(243,84,17)" fg:x="204" fg:w="2"/><text x="16.6751%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.4251%" y="549" width="0.1610%" height="15" fill="rgb(226,41,37)" fg:x="204" fg:w="2"/><text x="16.6751%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="16.4251%" y="741" width="0.2415%" height="15" fill="rgb(219,20,18)" fg:x="204" fg:w="3"/><text x="16.6751%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="16.4251%" y="725" width="0.2415%" height="15" fill="rgb(243,173,39)" fg:x="204" fg:w="3"/><text x="16.6751%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="16.4251%" y="709" width="0.2415%" height="15" fill="rgb(245,79,20)" fg:x="204" fg:w="3"/><text x="16.6751%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="16.4251%" y="693" width="0.2415%" height="15" fill="rgb(229,101,45)" fg:x="204" fg:w="3"/><text x="16.6751%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="16.4251%" y="677" width="0.2415%" height="15" fill="rgb(215,123,52)" fg:x="204" fg:w="3"/><text x="16.6751%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="16.4251%" y="661" width="0.2415%" height="15" fill="rgb(215,11,33)" fg:x="204" fg:w="3"/><text x="16.6751%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="16.5862%" y="645" width="0.0805%" height="15" fill="rgb(245,105,20)" fg:x="206" fg:w="1"/><text x="16.8362%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.5862%" y="629" width="0.0805%" height="15" fill="rgb(231,132,30)" fg:x="206" fg:w="1"/><text x="16.8362%" y="639.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="16.6667%" y="677" width="0.0805%" height="15" fill="rgb(224,62,21)" fg:x="207" fg:w="1"/><text x="16.9167%" y="687.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="16.6667%" y="725" width="0.1610%" height="15" fill="rgb(209,221,38)" fg:x="207" fg:w="2"/><text x="16.9167%" y="735.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="16.6667%" y="709" width="0.1610%" height="15" fill="rgb(229,200,30)" fg:x="207" fg:w="2"/><text x="16.9167%" y="719.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="16.6667%" y="693" width="0.1610%" height="15" fill="rgb(237,142,41)" fg:x="207" fg:w="2"/><text x="16.9167%" y="703.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="16.7472%" y="677" width="0.0805%" height="15" fill="rgb(238,37,22)" fg:x="208" fg:w="1"/><text x="16.9972%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="16.7472%" y="661" width="0.0805%" height="15" fill="rgb(234,182,17)" fg:x="208" fg:w="1"/><text x="16.9972%" y="671.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="16.7472%" y="645" width="0.0805%" height="15" fill="rgb(237,58,48)" fg:x="208" fg:w="1"/><text x="16.9972%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="16.8277%" y="693" width="0.0805%" height="15" fill="rgb(226,112,37)" fg:x="209" fg:w="1"/><text x="17.0777%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="16.9082%" y="661" width="0.0805%" height="15" fill="rgb(230,201,20)" fg:x="210" fg:w="1"/><text x="17.1582%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="16.9082%" y="693" width="0.1610%" height="15" fill="rgb(252,95,39)" fg:x="210" fg:w="2"/><text x="17.1582%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="16.9082%" y="677" width="0.1610%" height="15" fill="rgb(240,150,33)" fg:x="210" fg:w="2"/><text x="17.1582%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.9887%" y="661" width="0.0805%" height="15" fill="rgb(208,202,37)" fg:x="211" fg:w="1"/><text x="17.2387%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.0692%" y="661" width="0.0805%" height="15" fill="rgb(251,37,12)" fg:x="212" fg:w="1"/><text x="17.3192%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.0692%" y="645" width="0.0805%" height="15" fill="rgb(247,150,26)" fg:x="212" fg:w="1"/><text x="17.3192%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.0692%" y="629" width="0.0805%" height="15" fill="rgb(232,28,8)" fg:x="212" fg:w="1"/><text x="17.3192%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.0692%" y="613" width="0.0805%" height="15" fill="rgb(226,121,34)" fg:x="212" fg:w="1"/><text x="17.3192%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.0692%" y="597" width="0.0805%" height="15" fill="rgb(237,23,13)" fg:x="212" fg:w="1"/><text x="17.3192%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.0692%" y="581" width="0.0805%" height="15" fill="rgb(214,42,29)" fg:x="212" fg:w="1"/><text x="17.3192%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.0692%" y="565" width="0.0805%" height="15" fill="rgb(246,204,29)" fg:x="212" fg:w="1"/><text x="17.3192%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="17.1498%" y="661" width="0.0805%" height="15" fill="rgb(242,28,40)" fg:x="213" fg:w="1"/><text x="17.3998%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.1498%" y="645" width="0.0805%" height="15" fill="rgb(243,64,49)" fg:x="213" fg:w="1"/><text x="17.3998%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.1498%" y="629" width="0.0805%" height="15" fill="rgb(226,93,13)" fg:x="213" fg:w="1"/><text x="17.3998%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.1498%" y="613" width="0.0805%" height="15" fill="rgb(241,113,26)" fg:x="213" fg:w="1"/><text x="17.3998%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="17.1498%" y="597" width="0.0805%" height="15" fill="rgb(209,209,0)" fg:x="213" fg:w="1"/><text x="17.3998%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="17.2303%" y="629" width="0.2415%" height="15" fill="rgb(251,183,50)" fg:x="214" fg:w="3"/><text x="17.4803%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.2303%" y="613" width="0.2415%" height="15" fill="rgb(248,24,43)" fg:x="214" fg:w="3"/><text x="17.4803%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.3108%" y="597" width="0.1610%" height="15" fill="rgb(218,102,9)" fg:x="215" fg:w="2"/><text x="17.5608%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.3108%" y="581" width="0.1610%" height="15" fill="rgb(249,209,39)" fg:x="215" fg:w="2"/><text x="17.5608%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="17.2303%" y="645" width="0.4026%" height="15" fill="rgb(210,37,6)" fg:x="214" fg:w="5"/><text x="17.4803%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.4718%" y="629" width="0.1610%" height="15" fill="rgb(212,99,4)" fg:x="217" fg:w="2"/><text x="17.7218%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.5523%" y="613" width="0.0805%" height="15" fill="rgb(253,59,46)" fg:x="218" fg:w="1"/><text x="17.8023%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.5523%" y="597" width="0.0805%" height="15" fill="rgb(229,96,9)" fg:x="218" fg:w="1"/><text x="17.8023%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="17.8744%" y="629" width="0.0805%" height="15" fill="rgb(207,103,49)" fg:x="222" fg:w="1"/><text x="18.1244%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.8744%" y="613" width="0.0805%" height="15" fill="rgb(250,226,20)" fg:x="222" fg:w="1"/><text x="18.1244%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="17.9549%" y="629" width="0.4831%" height="15" fill="rgb(238,220,11)" fg:x="223" fg:w="6"/><text x="18.2049%" y="639.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="18.0354%" y="613" width="0.4026%" height="15" fill="rgb(236,74,15)" fg:x="224" fg:w="5"/><text x="18.2854%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="18.1159%" y="597" width="0.3221%" height="15" fill="rgb(218,43,40)" fg:x="225" fg:w="4"/><text x="18.3659%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="18.1965%" y="581" width="0.2415%" height="15" fill="rgb(245,206,37)" fg:x="226" fg:w="3"/><text x="18.4465%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.3575%" y="565" width="0.0805%" height="15" fill="rgb(206,30,3)" fg:x="228" fg:w="1"/><text x="18.6075%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.3575%" y="549" width="0.0805%" height="15" fill="rgb(211,29,35)" fg:x="228" fg:w="1"/><text x="18.6075%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.3575%" y="533" width="0.0805%" height="15" fill="rgb(218,49,50)" fg:x="228" fg:w="1"/><text x="18.6075%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.5185%" y="581" width="0.0805%" height="15" fill="rgb(211,114,30)" fg:x="230" fg:w="1"/><text x="18.7685%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.5185%" y="565" width="0.0805%" height="15" fill="rgb(238,70,33)" fg:x="230" fg:w="1"/><text x="18.7685%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.5185%" y="549" width="0.0805%" height="15" fill="rgb(238,141,50)" fg:x="230" fg:w="1"/><text x="18.7685%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.5185%" y="533" width="0.0805%" height="15" fill="rgb(205,69,6)" fg:x="230" fg:w="1"/><text x="18.7685%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="18.5185%" y="613" width="0.1610%" height="15" fill="rgb(229,65,0)" fg:x="230" fg:w="2"/><text x="18.7685%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="18.5185%" y="597" width="0.1610%" height="15" fill="rgb(211,3,37)" fg:x="230" fg:w="2"/><text x="18.7685%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="18.5990%" y="581" width="0.0805%" height="15" fill="rgb(223,196,42)" fg:x="231" fg:w="1"/><text x="18.8490%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.5990%" y="565" width="0.0805%" height="15" fill="rgb(227,191,15)" fg:x="231" fg:w="1"/><text x="18.8490%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.6795%" y="613" width="0.0805%" height="15" fill="rgb(229,210,53)" fg:x="232" fg:w="1"/><text x="18.9295%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.6795%" y="597" width="0.0805%" height="15" fill="rgb(250,203,10)" fg:x="232" fg:w="1"/><text x="18.9295%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.6795%" y="581" width="0.0805%" height="15" fill="rgb(247,8,37)" fg:x="232" fg:w="1"/><text x="18.9295%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6795%" y="565" width="0.0805%" height="15" fill="rgb(240,52,9)" fg:x="232" fg:w="1"/><text x="18.9295%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.7601%" y="597" width="0.0805%" height="15" fill="rgb(243,100,52)" fg:x="233" fg:w="1"/><text x="19.0101%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.8406%" y="597" width="0.1610%" height="15" fill="rgb(224,149,30)" fg:x="234" fg:w="2"/><text x="19.0906%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.9211%" y="581" width="0.0805%" height="15" fill="rgb(232,27,45)" fg:x="235" fg:w="1"/><text x="19.1711%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.9211%" y="565" width="0.0805%" height="15" fill="rgb(242,161,36)" fg:x="235" fg:w="1"/><text x="19.1711%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.9211%" y="549" width="0.0805%" height="15" fill="rgb(235,223,32)" fg:x="235" fg:w="1"/><text x="19.1711%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.0016%" y="581" width="0.0805%" height="15" fill="rgb(242,78,19)" fg:x="236" fg:w="1"/><text x="19.2516%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.0016%" y="565" width="0.0805%" height="15" fill="rgb(233,157,47)" fg:x="236" fg:w="1"/><text x="19.2516%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.0016%" y="549" width="0.0805%" height="15" fill="rgb(251,213,5)" fg:x="236" fg:w="1"/><text x="19.2516%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.0016%" y="533" width="0.0805%" height="15" fill="rgb(215,223,5)" fg:x="236" fg:w="1"/><text x="19.2516%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.1626%" y="549" width="0.0805%" height="15" fill="rgb(230,14,7)" fg:x="238" fg:w="1"/><text x="19.4126%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.1626%" y="533" width="0.0805%" height="15" fill="rgb(249,179,20)" fg:x="238" fg:w="1"/><text x="19.4126%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.1626%" y="517" width="0.0805%" height="15" fill="rgb(230,204,44)" fg:x="238" fg:w="1"/><text x="19.4126%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="19.0821%" y="565" width="0.3221%" height="15" fill="rgb(233,229,46)" fg:x="237" fg:w="4"/><text x="19.3321%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.2432%" y="549" width="0.1610%" height="15" fill="rgb(210,154,35)" fg:x="239" fg:w="2"/><text x="19.4932%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.2432%" y="533" width="0.1610%" height="15" fill="rgb(220,178,16)" fg:x="239" fg:w="2"/><text x="19.4932%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.3237%" y="517" width="0.0805%" height="15" fill="rgb(243,0,53)" fg:x="240" fg:w="1"/><text x="19.5737%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.3237%" y="501" width="0.0805%" height="15" fill="rgb(223,221,47)" fg:x="240" fg:w="1"/><text x="19.5737%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.3237%" y="485" width="0.0805%" height="15" fill="rgb(233,82,15)" fg:x="240" fg:w="1"/><text x="19.5737%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.3237%" y="469" width="0.0805%" height="15" fill="rgb(222,8,38)" fg:x="240" fg:w="1"/><text x="19.5737%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.3237%" y="453" width="0.0805%" height="15" fill="rgb(241,28,48)" fg:x="240" fg:w="1"/><text x="19.5737%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="19.0821%" y="581" width="0.4026%" height="15" fill="rgb(209,227,15)" fg:x="237" fg:w="5"/><text x="19.3321%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.4042%" y="565" width="0.0805%" height="15" fill="rgb(234,189,48)" fg:x="241" fg:w="1"/><text x="19.6542%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="18.7601%" y="613" width="0.8052%" height="15" fill="rgb(212,27,44)" fg:x="233" fg:w="10"/><text x="19.0101%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="19.0016%" y="597" width="0.5636%" height="15" fill="rgb(249,55,42)" fg:x="236" fg:w="7"/><text x="19.2516%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.4847%" y="581" width="0.0805%" height="15" fill="rgb(215,211,28)" fg:x="242" fg:w="1"/><text x="19.7347%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="18.4380%" y="629" width="1.2882%" height="15" fill="rgb(221,155,16)" fg:x="229" fg:w="16"/><text x="18.6880%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.5652%" y="613" width="0.1610%" height="15" fill="rgb(247,106,30)" fg:x="243" fg:w="2"/><text x="19.8152%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.25%)</title><rect x="17.6329%" y="645" width="2.2544%" height="15" fill="rgb(230,76,31)" fg:x="219" fg:w="28"/><text x="17.8829%" y="655.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.7262%" y="629" width="0.1610%" height="15" fill="rgb(222,6,48)" fg:x="245" fg:w="2"/><text x="19.9762%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.8068%" y="613" width="0.0805%" height="15" fill="rgb(228,82,3)" fg:x="246" fg:w="1"/><text x="20.0568%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.8068%" y="597" width="0.0805%" height="15" fill="rgb(245,208,52)" fg:x="246" fg:w="1"/><text x="20.0568%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.8068%" y="581" width="0.0805%" height="15" fill="rgb(218,65,17)" fg:x="246" fg:w="1"/><text x="20.0568%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.8068%" y="565" width="0.0805%" height="15" fill="rgb(242,63,26)" fg:x="246" fg:w="1"/><text x="20.0568%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.8068%" y="549" width="0.0805%" height="15" fill="rgb(224,119,39)" fg:x="246" fg:w="1"/><text x="20.0568%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.74%)</title><rect x="17.2303%" y="661" width="2.7375%" height="15" fill="rgb(229,106,3)" fg:x="214" fg:w="34"/><text x="17.4803%" y="671.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8873%" y="645" width="0.0805%" height="15" fill="rgb(248,6,33)" fg:x="247" fg:w="1"/><text x="20.1373%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.8873%" y="629" width="0.0805%" height="15" fill="rgb(226,3,49)" fg:x="247" fg:w="1"/><text x="20.1373%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.8873%" y="613" width="0.0805%" height="15" fill="rgb(228,142,14)" fg:x="247" fg:w="1"/><text x="20.1373%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.8873%" y="597" width="0.0805%" height="15" fill="rgb(241,141,54)" fg:x="247" fg:w="1"/><text x="20.1373%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.0483%" y="629" width="0.0805%" height="15" fill="rgb(252,17,50)" fg:x="249" fg:w="1"/><text x="20.2983%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.1288%" y="613" width="0.0805%" height="15" fill="rgb(221,120,48)" fg:x="250" fg:w="1"/><text x="20.3788%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2093%" y="597" width="0.0805%" height="15" fill="rgb(229,171,33)" fg:x="251" fg:w="1"/><text x="20.4593%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.2899%" y="597" width="0.0805%" height="15" fill="rgb(236,207,21)" fg:x="252" fg:w="1"/><text x="20.5399%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2899%" y="581" width="0.0805%" height="15" fill="rgb(218,93,35)" fg:x="252" fg:w="1"/><text x="20.5399%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.3704%" y="581" width="0.0805%" height="15" fill="rgb(207,101,8)" fg:x="253" fg:w="1"/><text x="20.6204%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="20.4509%" y="549" width="0.1610%" height="15" fill="rgb(237,67,44)" fg:x="254" fg:w="2"/><text x="20.7009%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5314%" y="533" width="0.0805%" height="15" fill="rgb(236,218,7)" fg:x="255" fg:w="1"/><text x="20.7814%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="19.9678%" y="661" width="0.7246%" height="15" fill="rgb(252,207,10)" fg:x="248" fg:w="9"/><text x="20.2178%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="19.9678%" y="645" width="0.7246%" height="15" fill="rgb(221,175,6)" fg:x="248" fg:w="9"/><text x="20.2178%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="20.1288%" y="629" width="0.5636%" height="15" fill="rgb(230,105,53)" fg:x="250" fg:w="7"/><text x="20.3788%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="20.2093%" y="613" width="0.4831%" height="15" fill="rgb(253,83,6)" fg:x="251" fg:w="6"/><text x="20.4593%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="20.3704%" y="597" width="0.3221%" height="15" fill="rgb(206,198,44)" fg:x="253" fg:w="4"/><text x="20.6204%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="20.4509%" y="581" width="0.2415%" height="15" fill="rgb(206,164,29)" fg:x="254" fg:w="3"/><text x="20.7009%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="20.4509%" y="565" width="0.2415%" height="15" fill="rgb(215,2,50)" fg:x="254" fg:w="3"/><text x="20.7009%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6119%" y="549" width="0.0805%" height="15" fill="rgb(246,127,18)" fg:x="256" fg:w="1"/><text x="20.8619%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.6119%" y="533" width="0.0805%" height="15" fill="rgb(232,6,21)" fg:x="256" fg:w="1"/><text x="20.8619%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6119%" y="517" width="0.0805%" height="15" fill="rgb(224,154,1)" fg:x="256" fg:w="1"/><text x="20.8619%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="20.6924%" y="645" width="0.1610%" height="15" fill="rgb(248,135,32)" fg:x="257" fg:w="2"/><text x="20.9424%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.7729%" y="629" width="0.0805%" height="15" fill="rgb(253,129,38)" fg:x="258" fg:w="1"/><text x="21.0229%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9340%" y="613" width="0.0805%" height="15" fill="rgb(214,110,11)" fg:x="260" fg:w="1"/><text x="21.1840%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.0145%" y="613" width="0.2415%" height="15" fill="rgb(246,150,22)" fg:x="261" fg:w="3"/><text x="21.2645%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1755%" y="597" width="0.0805%" height="15" fill="rgb(219,170,39)" fg:x="263" fg:w="1"/><text x="21.4255%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="21.2560%" y="613" width="0.0805%" height="15" fill="rgb(221,143,52)" fg:x="264" fg:w="1"/><text x="21.5060%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2560%" y="597" width="0.0805%" height="15" fill="rgb(237,122,11)" fg:x="264" fg:w="1"/><text x="21.5060%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.2560%" y="581" width="0.0805%" height="15" fill="rgb(217,114,13)" fg:x="264" fg:w="1"/><text x="21.5060%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.4171%" y="517" width="0.0805%" height="15" fill="rgb(218,184,28)" fg:x="266" fg:w="1"/><text x="21.6671%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.4171%" y="501" width="0.0805%" height="15" fill="rgb(237,33,22)" fg:x="266" fg:w="1"/><text x="21.6671%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4171%" y="485" width="0.0805%" height="15" fill="rgb(224,56,42)" fg:x="266" fg:w="1"/><text x="21.6671%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="21.4171%" y="565" width="0.1610%" height="15" fill="rgb(216,138,53)" fg:x="266" fg:w="2"/><text x="21.6671%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="21.4171%" y="549" width="0.1610%" height="15" fill="rgb(233,229,40)" fg:x="266" fg:w="2"/><text x="21.6671%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="21.4171%" y="533" width="0.1610%" height="15" fill="rgb(252,105,0)" fg:x="266" fg:w="2"/><text x="21.6671%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4976%" y="517" width="0.0805%" height="15" fill="rgb(212,75,24)" fg:x="267" fg:w="1"/><text x="21.7476%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.6586%" y="549" width="0.0805%" height="15" fill="rgb(235,168,50)" fg:x="269" fg:w="1"/><text x="21.9086%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="22.1417%" y="453" width="0.1610%" height="15" fill="rgb(247,204,12)" fg:x="275" fg:w="2"/><text x="22.3917%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.2222%" y="437" width="0.0805%" height="15" fill="rgb(250,203,27)" fg:x="276" fg:w="1"/><text x="22.4722%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.2222%" y="421" width="0.0805%" height="15" fill="rgb(221,215,2)" fg:x="276" fg:w="1"/><text x="22.4722%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.2222%" y="405" width="0.0805%" height="15" fill="rgb(242,163,47)" fg:x="276" fg:w="1"/><text x="22.4722%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="21.9002%" y="517" width="0.4831%" height="15" fill="rgb(237,136,50)" fg:x="272" fg:w="6"/><text x="22.1502%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="21.9807%" y="501" width="0.4026%" height="15" fill="rgb(217,201,47)" fg:x="273" fg:w="5"/><text x="22.2307%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="22.0612%" y="485" width="0.3221%" height="15" fill="rgb(212,38,47)" fg:x="274" fg:w="4"/><text x="22.3112%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="22.1417%" y="469" width="0.2415%" height="15" fill="rgb(254,113,41)" fg:x="275" fg:w="3"/><text x="22.3917%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3027%" y="453" width="0.0805%" height="15" fill="rgb(236,7,22)" fg:x="277" fg:w="1"/><text x="22.5527%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.21%)</title><rect x="21.3366%" y="581" width="1.2077%" height="15" fill="rgb(235,81,25)" fg:x="265" fg:w="15"/><text x="21.5866%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.97%)</title><rect x="21.5781%" y="565" width="0.9662%" height="15" fill="rgb(216,41,31)" fg:x="268" fg:w="12"/><text x="21.8281%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="21.7391%" y="549" width="0.8052%" height="15" fill="rgb(249,219,15)" fg:x="270" fg:w="10"/><text x="21.9891%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="21.7391%" y="533" width="0.8052%" height="15" fill="rgb(248,201,3)" fg:x="270" fg:w="10"/><text x="21.9891%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.3833%" y="517" width="0.1610%" height="15" fill="rgb(249,141,18)" fg:x="278" fg:w="2"/><text x="22.6333%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.37%)</title><rect x="21.3366%" y="597" width="1.3688%" height="15" fill="rgb(222,32,39)" fg:x="265" fg:w="17"/><text x="21.5866%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="22.5443%" y="581" width="0.1610%" height="15" fill="rgb(237,139,51)" fg:x="280" fg:w="2"/><text x="22.7943%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.6248%" y="565" width="0.0805%" height="15" fill="rgb(218,210,4)" fg:x="281" fg:w="1"/><text x="22.8748%" y="575.50"></text></g><g><title>engine::session::Session::flush (79 samples, 6.36%)</title><rect x="16.4251%" y="757" width="6.3607%" height="15" fill="rgb(217,199,13)" fg:x="204" fg:w="79"/><text x="16.6751%" y="767.50">engine::..</text></g><g><title>engine::session::Session::save_changes (76 samples, 6.12%)</title><rect x="16.6667%" y="741" width="6.1192%" height="15" fill="rgb(222,118,25)" fg:x="207" fg:w="76"/><text x="16.9167%" y="751.50">engine::..</text></g><g><title>engine::session::state::State::close (74 samples, 5.96%)</title><rect x="16.8277%" y="725" width="5.9581%" height="15" fill="rgb(241,70,28)" fg:x="209" fg:w="74"/><text x="17.0777%" y="735.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (74 samples, 5.96%)</title><rect x="16.8277%" y="709" width="5.9581%" height="15" fill="rgb(205,51,41)" fg:x="209" fg:w="74"/><text x="17.0777%" y="719.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (71 samples, 5.72%)</title><rect x="17.0692%" y="693" width="5.7166%" height="15" fill="rgb(237,165,49)" fg:x="212" fg:w="71"/><text x="17.3192%" y="703.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (71 samples, 5.72%)</title><rect x="17.0692%" y="677" width="5.7166%" height="15" fill="rgb(213,10,51)" fg:x="212" fg:w="71"/><text x="17.3192%" y="687.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (26 samples, 2.09%)</title><rect x="20.6924%" y="661" width="2.0934%" height="15" fill="rgb(245,89,32)" fg:x="257" fg:w="26"/><text x="20.9424%" y="671.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (24 samples, 1.93%)</title><rect x="20.8535%" y="645" width="1.9324%" height="15" fill="rgb(249,81,54)" fg:x="259" fg:w="24"/><text x="21.1035%" y="655.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.93%)</title><rect x="20.8535%" y="629" width="1.9324%" height="15" fill="rgb(223,134,14)" fg:x="259" fg:w="24"/><text x="21.1035%" y="639.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.45%)</title><rect x="21.3366%" y="613" width="1.4493%" height="15" fill="rgb(233,62,37)" fg:x="265" fg:w="18"/><text x="21.5866%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7053%" y="597" width="0.0805%" height="15" fill="rgb(219,117,42)" fg:x="282" fg:w="1"/><text x="22.9553%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7053%" y="581" width="0.0805%" height="15" fill="rgb(248,40,28)" fg:x="282" fg:w="1"/><text x="22.9553%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.7053%" y="565" width="0.0805%" height="15" fill="rgb(246,66,35)" fg:x="282" fg:w="1"/><text x="22.9553%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="22.7858%" y="741" width="0.0805%" height="15" fill="rgb(250,229,22)" fg:x="283" fg:w="1"/><text x="23.0358%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="22.7858%" y="725" width="0.0805%" height="15" fill="rgb(213,89,18)" fg:x="283" fg:w="1"/><text x="23.0358%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="22.7858%" y="757" width="0.1610%" height="15" fill="rgb(213,122,9)" fg:x="283" fg:w="2"/><text x="23.0358%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="22.8663%" y="741" width="0.0805%" height="15" fill="rgb(220,213,48)" fg:x="284" fg:w="1"/><text x="23.1163%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="22.8663%" y="725" width="0.0805%" height="15" fill="rgb(244,109,54)" fg:x="284" fg:w="1"/><text x="23.1163%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.8663%" y="709" width="0.0805%" height="15" fill="rgb(254,104,49)" fg:x="284" fg:w="1"/><text x="23.1163%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.8663%" y="693" width="0.0805%" height="15" fill="rgb(219,28,32)" fg:x="284" fg:w="1"/><text x="23.1163%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.8663%" y="677" width="0.0805%" height="15" fill="rgb(249,153,33)" fg:x="284" fg:w="1"/><text x="23.1163%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.8663%" y="661" width="0.0805%" height="15" fill="rgb(230,116,21)" fg:x="284" fg:w="1"/><text x="23.1163%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="23.1079%" y="725" width="0.1610%" height="15" fill="rgb(247,110,3)" fg:x="287" fg:w="2"/><text x="23.3579%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="23.1079%" y="709" width="0.1610%" height="15" fill="rgb(227,128,3)" fg:x="287" fg:w="2"/><text x="23.3579%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.1884%" y="693" width="0.0805%" height="15" fill="rgb(208,21,1)" fg:x="288" fg:w="1"/><text x="23.4384%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.1884%" y="677" width="0.0805%" height="15" fill="rgb(225,24,20)" fg:x="288" fg:w="1"/><text x="23.4384%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.1884%" y="661" width="0.0805%" height="15" fill="rgb(250,159,24)" fg:x="288" fg:w="1"/><text x="23.4384%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.1884%" y="645" width="0.0805%" height="15" fill="rgb(214,30,53)" fg:x="288" fg:w="1"/><text x="23.4384%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.1884%" y="629" width="0.0805%" height="15" fill="rgb(243,198,11)" fg:x="288" fg:w="1"/><text x="23.4384%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.1884%" y="613" width="0.0805%" height="15" fill="rgb(232,33,1)" fg:x="288" fg:w="1"/><text x="23.4384%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.1884%" y="597" width="0.0805%" height="15" fill="rgb(242,60,11)" fg:x="288" fg:w="1"/><text x="23.4384%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.1884%" y="581" width="0.0805%" height="15" fill="rgb(241,229,34)" fg:x="288" fg:w="1"/><text x="23.4384%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.1884%" y="565" width="0.0805%" height="15" fill="rgb(230,92,51)" fg:x="288" fg:w="1"/><text x="23.4384%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.1884%" y="549" width="0.0805%" height="15" fill="rgb(212,209,8)" fg:x="288" fg:w="1"/><text x="23.4384%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.1884%" y="533" width="0.0805%" height="15" fill="rgb(241,55,35)" fg:x="288" fg:w="1"/><text x="23.4384%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.1884%" y="517" width="0.0805%" height="15" fill="rgb(208,187,52)" fg:x="288" fg:w="1"/><text x="23.4384%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.1884%" y="501" width="0.0805%" height="15" fill="rgb(251,110,17)" fg:x="288" fg:w="1"/><text x="23.4384%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.1884%" y="485" width="0.0805%" height="15" fill="rgb(246,225,54)" fg:x="288" fg:w="1"/><text x="23.4384%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.1884%" y="469" width="0.0805%" height="15" fill="rgb(220,109,6)" fg:x="288" fg:w="1"/><text x="23.4384%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.1884%" y="453" width="0.0805%" height="15" fill="rgb(228,56,50)" fg:x="288" fg:w="1"/><text x="23.4384%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.1884%" y="437" width="0.0805%" height="15" fill="rgb(230,34,30)" fg:x="288" fg:w="1"/><text x="23.4384%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.1884%" y="421" width="0.0805%" height="15" fill="rgb(205,28,42)" fg:x="288" fg:w="1"/><text x="23.4384%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.1884%" y="405" width="0.0805%" height="15" fill="rgb(215,68,0)" fg:x="288" fg:w="1"/><text x="23.4384%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.1884%" y="389" width="0.0805%" height="15" fill="rgb(206,91,47)" fg:x="288" fg:w="1"/><text x="23.4384%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.1884%" y="373" width="0.0805%" height="15" fill="rgb(241,159,43)" fg:x="288" fg:w="1"/><text x="23.4384%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="23.1884%" y="357" width="0.0805%" height="15" fill="rgb(232,191,38)" fg:x="288" fg:w="1"/><text x="23.4384%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.1884%" y="341" width="0.0805%" height="15" fill="rgb(212,180,41)" fg:x="288" fg:w="1"/><text x="23.4384%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="23.1884%" y="325" width="0.0805%" height="15" fill="rgb(236,134,49)" fg:x="288" fg:w="1"/><text x="23.4384%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="23.1884%" y="309" width="0.0805%" height="15" fill="rgb(221,83,26)" fg:x="288" fg:w="1"/><text x="23.4384%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="23.1884%" y="293" width="0.0805%" height="15" fill="rgb(215,87,39)" fg:x="288" fg:w="1"/><text x="23.4384%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.1884%" y="277" width="0.0805%" height="15" fill="rgb(242,28,29)" fg:x="288" fg:w="1"/><text x="23.4384%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.2689%" y="725" width="0.1610%" height="15" fill="rgb(212,219,47)" fg:x="289" fg:w="2"/><text x="23.5189%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.2689%" y="709" width="0.1610%" height="15" fill="rgb(221,35,20)" fg:x="289" fg:w="2"/><text x="23.5189%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.2689%" y="693" width="0.1610%" height="15" fill="rgb(234,144,13)" fg:x="289" fg:w="2"/><text x="23.5189%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.2689%" y="677" width="0.1610%" height="15" fill="rgb(237,41,27)" fg:x="289" fg:w="2"/><text x="23.5189%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.2689%" y="661" width="0.1610%" height="15" fill="rgb(253,175,5)" fg:x="289" fg:w="2"/><text x="23.5189%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3494%" y="645" width="0.0805%" height="15" fill="rgb(235,210,51)" fg:x="290" fg:w="1"/><text x="23.5994%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3494%" y="629" width="0.0805%" height="15" fill="rgb(241,180,35)" fg:x="290" fg:w="1"/><text x="23.5994%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3494%" y="613" width="0.0805%" height="15" fill="rgb(219,45,16)" fg:x="290" fg:w="1"/><text x="23.5994%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.3494%" y="597" width="0.0805%" height="15" fill="rgb(247,212,4)" fg:x="290" fg:w="1"/><text x="23.5994%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.3494%" y="581" width="0.0805%" height="15" fill="rgb(224,211,1)" fg:x="290" fg:w="1"/><text x="23.5994%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.3494%" y="565" width="0.0805%" height="15" fill="rgb(210,193,36)" fg:x="290" fg:w="1"/><text x="23.5994%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3494%" y="549" width="0.0805%" height="15" fill="rgb(215,121,20)" fg:x="290" fg:w="1"/><text x="23.5994%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3494%" y="533" width="0.0805%" height="15" fill="rgb(238,146,2)" fg:x="290" fg:w="1"/><text x="23.5994%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.3494%" y="517" width="0.0805%" height="15" fill="rgb(254,123,45)" fg:x="290" fg:w="1"/><text x="23.5994%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.3494%" y="501" width="0.0805%" height="15" fill="rgb(225,126,11)" fg:x="290" fg:w="1"/><text x="23.5994%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.3494%" y="485" width="0.0805%" height="15" fill="rgb(239,12,5)" fg:x="290" fg:w="1"/><text x="23.5994%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.3494%" y="469" width="0.0805%" height="15" fill="rgb(241,207,14)" fg:x="290" fg:w="1"/><text x="23.5994%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3494%" y="453" width="0.0805%" height="15" fill="rgb(227,134,33)" fg:x="290" fg:w="1"/><text x="23.5994%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="23.4300%" y="677" width="0.0805%" height="15" fill="rgb(221,40,52)" fg:x="291" fg:w="1"/><text x="23.6800%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.4300%" y="661" width="0.0805%" height="15" fill="rgb(206,93,8)" fg:x="291" fg:w="1"/><text x="23.6800%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4300%" y="645" width="0.0805%" height="15" fill="rgb(242,160,22)" fg:x="291" fg:w="1"/><text x="23.6800%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="23.4300%" y="709" width="0.1610%" height="15" fill="rgb(232,204,40)" fg:x="291" fg:w="2"/><text x="23.6800%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.4300%" y="693" width="0.1610%" height="15" fill="rgb(247,210,47)" fg:x="291" fg:w="2"/><text x="23.6800%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5105%" y="677" width="0.0805%" height="15" fill="rgb(211,91,7)" fg:x="292" fg:w="1"/><text x="23.7605%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5105%" y="661" width="0.0805%" height="15" fill="rgb(252,160,34)" fg:x="292" fg:w="1"/><text x="23.7605%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="23.4300%" y="725" width="0.2415%" height="15" fill="rgb(220,34,39)" fg:x="291" fg:w="3"/><text x="23.6800%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.5910%" y="709" width="0.0805%" height="15" fill="rgb(247,49,38)" fg:x="293" fg:w="1"/><text x="23.8410%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="23.5910%" y="693" width="0.0805%" height="15" fill="rgb(228,175,44)" fg:x="293" fg:w="1"/><text x="23.8410%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.5910%" y="677" width="0.0805%" height="15" fill="rgb(218,214,32)" fg:x="293" fg:w="1"/><text x="23.8410%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.5910%" y="661" width="0.0805%" height="15" fill="rgb(213,50,12)" fg:x="293" fg:w="1"/><text x="23.8410%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.5910%" y="645" width="0.0805%" height="15" fill="rgb(219,35,41)" fg:x="293" fg:w="1"/><text x="23.8410%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5910%" y="629" width="0.0805%" height="15" fill="rgb(219,18,38)" fg:x="293" fg:w="1"/><text x="23.8410%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.7520%" y="549" width="0.0805%" height="15" fill="rgb(223,217,6)" fg:x="295" fg:w="1"/><text x="24.0020%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="23.0274%" y="741" width="0.8857%" height="15" fill="rgb(208,193,35)" fg:x="286" fg:w="11"/><text x="23.2774%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="23.6715%" y="725" width="0.2415%" height="15" fill="rgb(254,212,54)" fg:x="294" fg:w="3"/><text x="23.9215%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="23.6715%" y="709" width="0.2415%" height="15" fill="rgb(205,10,2)" fg:x="294" fg:w="3"/><text x="23.9215%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="23.7520%" y="693" width="0.1610%" height="15" fill="rgb(230,133,29)" fg:x="295" fg:w="2"/><text x="24.0020%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="23.7520%" y="677" width="0.1610%" height="15" fill="rgb(226,14,15)" fg:x="295" fg:w="2"/><text x="24.0020%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.7520%" y="661" width="0.1610%" height="15" fill="rgb(226,140,54)" fg:x="295" fg:w="2"/><text x="24.0020%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="23.7520%" y="645" width="0.1610%" height="15" fill="rgb(250,47,41)" fg:x="295" fg:w="2"/><text x="24.0020%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.7520%" y="629" width="0.1610%" height="15" fill="rgb(227,218,41)" fg:x="295" fg:w="2"/><text x="24.0020%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="23.7520%" y="613" width="0.1610%" height="15" fill="rgb(254,183,7)" fg:x="295" fg:w="2"/><text x="24.0020%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.7520%" y="597" width="0.1610%" height="15" fill="rgb(206,84,53)" fg:x="295" fg:w="2"/><text x="24.0020%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="23.7520%" y="581" width="0.1610%" height="15" fill="rgb(213,177,2)" fg:x="295" fg:w="2"/><text x="24.0020%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="23.7520%" y="565" width="0.1610%" height="15" fill="rgb(234,28,29)" fg:x="295" fg:w="2"/><text x="24.0020%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.8325%" y="549" width="0.0805%" height="15" fill="rgb(248,211,38)" fg:x="296" fg:w="1"/><text x="24.0825%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.8325%" y="533" width="0.0805%" height="15" fill="rgb(246,30,0)" fg:x="296" fg:w="1"/><text x="24.0825%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.8325%" y="517" width="0.0805%" height="15" fill="rgb(244,115,24)" fg:x="296" fg:w="1"/><text x="24.0825%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8325%" y="501" width="0.0805%" height="15" fill="rgb(226,193,14)" fg:x="296" fg:w="1"/><text x="24.0825%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8325%" y="485" width="0.0805%" height="15" fill="rgb(211,196,48)" fg:x="296" fg:w="1"/><text x="24.0825%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8325%" y="469" width="0.0805%" height="15" fill="rgb(235,32,20)" fg:x="296" fg:w="1"/><text x="24.0825%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9130%" y="645" width="0.0805%" height="15" fill="rgb(251,151,49)" fg:x="297" fg:w="1"/><text x="24.1630%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9130%" y="629" width="0.0805%" height="15" fill="rgb(254,141,38)" fg:x="297" fg:w="1"/><text x="24.1630%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9130%" y="613" width="0.0805%" height="15" fill="rgb(209,118,44)" fg:x="297" fg:w="1"/><text x="24.1630%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9130%" y="597" width="0.0805%" height="15" fill="rgb(205,81,4)" fg:x="297" fg:w="1"/><text x="24.1630%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.9130%" y="581" width="0.0805%" height="15" fill="rgb(241,25,6)" fg:x="297" fg:w="1"/><text x="24.1630%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.9130%" y="565" width="0.0805%" height="15" fill="rgb(212,179,29)" fg:x="297" fg:w="1"/><text x="24.1630%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.9130%" y="549" width="0.0805%" height="15" fill="rgb(241,40,32)" fg:x="297" fg:w="1"/><text x="24.1630%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.9130%" y="533" width="0.0805%" height="15" fill="rgb(223,35,2)" fg:x="297" fg:w="1"/><text x="24.1630%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.9130%" y="517" width="0.0805%" height="15" fill="rgb(221,125,54)" fg:x="297" fg:w="1"/><text x="24.1630%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.9130%" y="693" width="0.1610%" height="15" fill="rgb(230,5,49)" fg:x="297" fg:w="2"/><text x="24.1630%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.9130%" y="677" width="0.1610%" height="15" fill="rgb(221,157,7)" fg:x="297" fg:w="2"/><text x="24.1630%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.9130%" y="661" width="0.1610%" height="15" fill="rgb(242,163,10)" fg:x="297" fg:w="2"/><text x="24.1630%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9936%" y="645" width="0.0805%" height="15" fill="rgb(232,30,2)" fg:x="298" fg:w="1"/><text x="24.2436%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9936%" y="629" width="0.0805%" height="15" fill="rgb(245,102,40)" fg:x="298" fg:w="1"/><text x="24.2436%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9936%" y="613" width="0.0805%" height="15" fill="rgb(242,10,41)" fg:x="298" fg:w="1"/><text x="24.2436%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9936%" y="597" width="0.0805%" height="15" fill="rgb(236,184,36)" fg:x="298" fg:w="1"/><text x="24.2436%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.9936%" y="581" width="0.0805%" height="15" fill="rgb(247,147,48)" fg:x="298" fg:w="1"/><text x="24.2436%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9936%" y="565" width="0.0805%" height="15" fill="rgb(226,166,2)" fg:x="298" fg:w="1"/><text x="24.2436%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9936%" y="549" width="0.0805%" height="15" fill="rgb(251,196,7)" fg:x="298" fg:w="1"/><text x="24.2436%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9936%" y="533" width="0.0805%" height="15" fill="rgb(241,40,13)" fg:x="298" fg:w="1"/><text x="24.2436%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9936%" y="517" width="0.0805%" height="15" fill="rgb(254,4,12)" fg:x="298" fg:w="1"/><text x="24.2436%" y="527.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="24.0741%" y="677" width="0.0805%" height="15" fill="rgb(244,139,49)" fg:x="299" fg:w="1"/><text x="24.3241%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.0741%" y="661" width="0.0805%" height="15" fill="rgb(227,28,42)" fg:x="299" fg:w="1"/><text x="24.3241%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.0741%" y="645" width="0.0805%" height="15" fill="rgb(231,135,32)" fg:x="299" fg:w="1"/><text x="24.3241%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1546%" y="565" width="0.0805%" height="15" fill="rgb(244,182,3)" fg:x="300" fg:w="1"/><text x="24.4046%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1546%" y="549" width="0.0805%" height="15" fill="rgb(247,46,19)" fg:x="300" fg:w="1"/><text x="24.4046%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.1546%" y="533" width="0.0805%" height="15" fill="rgb(251,179,10)" fg:x="300" fg:w="1"/><text x="24.4046%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.1546%" y="517" width="0.0805%" height="15" fill="rgb(229,222,18)" fg:x="300" fg:w="1"/><text x="24.4046%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.1546%" y="501" width="0.0805%" height="15" fill="rgb(251,107,20)" fg:x="300" fg:w="1"/><text x="24.4046%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1546%" y="485" width="0.0805%" height="15" fill="rgb(233,193,19)" fg:x="300" fg:w="1"/><text x="24.4046%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1546%" y="469" width="0.0805%" height="15" fill="rgb(229,146,53)" fg:x="300" fg:w="1"/><text x="24.4046%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.1546%" y="453" width="0.0805%" height="15" fill="rgb(244,52,11)" fg:x="300" fg:w="1"/><text x="24.4046%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.1546%" y="437" width="0.0805%" height="15" fill="rgb(245,211,46)" fg:x="300" fg:w="1"/><text x="24.4046%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.1546%" y="421" width="0.0805%" height="15" fill="rgb(213,8,31)" fg:x="300" fg:w="1"/><text x="24.4046%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.1546%" y="405" width="0.0805%" height="15" fill="rgb(205,101,39)" fg:x="300" fg:w="1"/><text x="24.4046%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1546%" y="389" width="0.0805%" height="15" fill="rgb(212,157,1)" fg:x="300" fg:w="1"/><text x="24.4046%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.1546%" y="581" width="0.1610%" height="15" fill="rgb(232,30,46)" fg:x="300" fg:w="2"/><text x="24.4046%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.2351%" y="565" width="0.0805%" height="15" fill="rgb(216,201,6)" fg:x="301" fg:w="1"/><text x="24.4851%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.1546%" y="597" width="0.2415%" height="15" fill="rgb(209,18,6)" fg:x="300" fg:w="3"/><text x="24.4046%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3156%" y="581" width="0.0805%" height="15" fill="rgb(219,138,3)" fg:x="302" fg:w="1"/><text x="24.5656%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3156%" y="565" width="0.0805%" height="15" fill="rgb(210,91,46)" fg:x="302" fg:w="1"/><text x="24.5656%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.3156%" y="549" width="0.0805%" height="15" fill="rgb(241,80,44)" fg:x="302" fg:w="1"/><text x="24.5656%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.3156%" y="533" width="0.0805%" height="15" fill="rgb(236,205,36)" fg:x="302" fg:w="1"/><text x="24.5656%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.3156%" y="517" width="0.0805%" height="15" fill="rgb(205,59,37)" fg:x="302" fg:w="1"/><text x="24.5656%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3156%" y="501" width="0.0805%" height="15" fill="rgb(239,166,39)" fg:x="302" fg:w="1"/><text x="24.5656%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3156%" y="485" width="0.0805%" height="15" fill="rgb(239,146,40)" fg:x="302" fg:w="1"/><text x="24.5656%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.3156%" y="469" width="0.0805%" height="15" fill="rgb(231,11,52)" fg:x="302" fg:w="1"/><text x="24.5656%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.3156%" y="453" width="0.0805%" height="15" fill="rgb(253,21,37)" fg:x="302" fg:w="1"/><text x="24.5656%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.3156%" y="437" width="0.0805%" height="15" fill="rgb(224,87,39)" fg:x="302" fg:w="1"/><text x="24.5656%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.3156%" y="421" width="0.0805%" height="15" fill="rgb(249,15,46)" fg:x="302" fg:w="1"/><text x="24.5656%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3156%" y="405" width="0.0805%" height="15" fill="rgb(250,37,51)" fg:x="302" fg:w="1"/><text x="24.5656%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3961%" y="597" width="0.0805%" height="15" fill="rgb(205,185,43)" fg:x="303" fg:w="1"/><text x="24.6461%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3961%" y="581" width="0.0805%" height="15" fill="rgb(206,65,41)" fg:x="303" fg:w="1"/><text x="24.6461%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.3961%" y="565" width="0.0805%" height="15" fill="rgb(236,159,32)" fg:x="303" fg:w="1"/><text x="24.6461%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.3961%" y="549" width="0.0805%" height="15" fill="rgb(228,199,27)" fg:x="303" fg:w="1"/><text x="24.6461%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.3961%" y="533" width="0.0805%" height="15" fill="rgb(212,0,37)" fg:x="303" fg:w="1"/><text x="24.6461%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3961%" y="517" width="0.0805%" height="15" fill="rgb(248,50,11)" fg:x="303" fg:w="1"/><text x="24.6461%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3961%" y="501" width="0.0805%" height="15" fill="rgb(231,164,25)" fg:x="303" fg:w="1"/><text x="24.6461%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.3961%" y="485" width="0.0805%" height="15" fill="rgb(238,38,39)" fg:x="303" fg:w="1"/><text x="24.6461%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.3961%" y="469" width="0.0805%" height="15" fill="rgb(210,15,50)" fg:x="303" fg:w="1"/><text x="24.6461%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.3961%" y="453" width="0.0805%" height="15" fill="rgb(251,126,36)" fg:x="303" fg:w="1"/><text x="24.6461%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.3961%" y="437" width="0.0805%" height="15" fill="rgb(243,59,26)" fg:x="303" fg:w="1"/><text x="24.6461%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3961%" y="421" width="0.0805%" height="15" fill="rgb(215,24,30)" fg:x="303" fg:w="1"/><text x="24.6461%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="24.1546%" y="645" width="0.4026%" height="15" fill="rgb(253,50,51)" fg:x="300" fg:w="5"/><text x="24.4046%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="24.1546%" y="629" width="0.4026%" height="15" fill="rgb(252,2,16)" fg:x="300" fg:w="5"/><text x="24.4046%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="24.1546%" y="613" width="0.4026%" height="15" fill="rgb(209,123,36)" fg:x="300" fg:w="5"/><text x="24.4046%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.4767%" y="597" width="0.0805%" height="15" fill="rgb(245,60,15)" fg:x="304" fg:w="1"/><text x="24.7267%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.5572%" y="645" width="0.0805%" height="15" fill="rgb(246,4,13)" fg:x="305" fg:w="1"/><text x="24.8072%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.5572%" y="629" width="0.0805%" height="15" fill="rgb(210,223,46)" fg:x="305" fg:w="1"/><text x="24.8072%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.5572%" y="613" width="0.0805%" height="15" fill="rgb(248,1,9)" fg:x="305" fg:w="1"/><text x="24.8072%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.5572%" y="597" width="0.0805%" height="15" fill="rgb(254,2,34)" fg:x="305" fg:w="1"/><text x="24.8072%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5572%" y="581" width="0.0805%" height="15" fill="rgb(239,176,1)" fg:x="305" fg:w="1"/><text x="24.8072%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.89%)</title><rect x="23.9130%" y="725" width="0.8857%" height="15" fill="rgb(250,25,32)" fg:x="297" fg:w="11"/><text x="24.1630%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.89%)</title><rect x="23.9130%" y="709" width="0.8857%" height="15" fill="rgb(225,28,39)" fg:x="297" fg:w="11"/><text x="24.1630%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="24.0741%" y="693" width="0.7246%" height="15" fill="rgb(230,166,37)" fg:x="299" fg:w="9"/><text x="24.3241%" y="703.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="24.1546%" y="677" width="0.6441%" height="15" fill="rgb(246,220,4)" fg:x="300" fg:w="8"/><text x="24.4046%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="24.1546%" y="661" width="0.6441%" height="15" fill="rgb(219,119,33)" fg:x="300" fg:w="8"/><text x="24.4046%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.6377%" y="645" width="0.1610%" height="15" fill="rgb(221,207,38)" fg:x="306" fg:w="2"/><text x="24.8877%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.6377%" y="629" width="0.1610%" height="15" fill="rgb(214,153,5)" fg:x="306" fg:w="2"/><text x="24.8877%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7182%" y="613" width="0.0805%" height="15" fill="rgb(223,50,16)" fg:x="307" fg:w="1"/><text x="24.9682%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7182%" y="597" width="0.0805%" height="15" fill="rgb(209,207,12)" fg:x="307" fg:w="1"/><text x="24.9682%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.7182%" y="581" width="0.0805%" height="15" fill="rgb(207,3,46)" fg:x="307" fg:w="1"/><text x="24.9682%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7182%" y="565" width="0.0805%" height="15" fill="rgb(232,45,53)" fg:x="307" fg:w="1"/><text x="24.9682%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="24.7987%" y="725" width="0.1610%" height="15" fill="rgb(206,140,15)" fg:x="308" fg:w="2"/><text x="25.0487%" y="735.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="24.7987%" y="709" width="0.1610%" height="15" fill="rgb(245,66,17)" fg:x="308" fg:w="2"/><text x="25.0487%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.7987%" y="693" width="0.1610%" height="15" fill="rgb(221,25,37)" fg:x="308" fg:w="2"/><text x="25.0487%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="24.7987%" y="677" width="0.1610%" height="15" fill="rgb(215,99,47)" fg:x="308" fg:w="2"/><text x="25.0487%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="24.7987%" y="661" width="0.1610%" height="15" fill="rgb(219,154,44)" fg:x="308" fg:w="2"/><text x="25.0487%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.7987%" y="645" width="0.1610%" height="15" fill="rgb(210,197,36)" fg:x="308" fg:w="2"/><text x="25.0487%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8792%" y="629" width="0.0805%" height="15" fill="rgb(217,137,10)" fg:x="309" fg:w="1"/><text x="25.1292%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.9597%" y="629" width="0.1610%" height="15" fill="rgb(240,216,26)" fg:x="310" fg:w="2"/><text x="25.2097%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.9597%" y="613" width="0.1610%" height="15" fill="rgb(242,76,17)" fg:x="310" fg:w="2"/><text x="25.2097%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.9597%" y="597" width="0.1610%" height="15" fill="rgb(243,142,51)" fg:x="310" fg:w="2"/><text x="25.2097%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.0403%" y="581" width="0.0805%" height="15" fill="rgb(233,109,46)" fg:x="311" fg:w="1"/><text x="25.2903%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0403%" y="565" width="0.0805%" height="15" fill="rgb(252,45,32)" fg:x="311" fg:w="1"/><text x="25.2903%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0403%" y="549" width="0.0805%" height="15" fill="rgb(210,69,52)" fg:x="311" fg:w="1"/><text x="25.2903%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.0403%" y="533" width="0.0805%" height="15" fill="rgb(242,30,2)" fg:x="311" fg:w="1"/><text x="25.2903%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.0403%" y="517" width="0.0805%" height="15" fill="rgb(246,137,1)" fg:x="311" fg:w="1"/><text x="25.2903%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.0403%" y="501" width="0.0805%" height="15" fill="rgb(221,205,25)" fg:x="311" fg:w="1"/><text x="25.2903%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0403%" y="485" width="0.0805%" height="15" fill="rgb(224,44,43)" fg:x="311" fg:w="1"/><text x="25.2903%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0403%" y="469" width="0.0805%" height="15" fill="rgb(209,81,13)" fg:x="311" fg:w="1"/><text x="25.2903%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.0403%" y="453" width="0.0805%" height="15" fill="rgb(227,88,4)" fg:x="311" fg:w="1"/><text x="25.2903%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.0403%" y="437" width="0.0805%" height="15" fill="rgb(228,118,49)" fg:x="311" fg:w="1"/><text x="25.2903%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.0403%" y="421" width="0.0805%" height="15" fill="rgb(225,215,27)" fg:x="311" fg:w="1"/><text x="25.2903%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.0403%" y="405" width="0.0805%" height="15" fill="rgb(235,226,1)" fg:x="311" fg:w="1"/><text x="25.2903%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0403%" y="389" width="0.0805%" height="15" fill="rgb(205,107,17)" fg:x="311" fg:w="1"/><text x="25.2903%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="24.9597%" y="677" width="0.3221%" height="15" fill="rgb(247,85,8)" fg:x="310" fg:w="4"/><text x="25.2097%" y="687.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="24.9597%" y="661" width="0.3221%" height="15" fill="rgb(230,220,20)" fg:x="310" fg:w="4"/><text x="25.2097%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="24.9597%" y="645" width="0.3221%" height="15" fill="rgb(237,22,6)" fg:x="310" fg:w="4"/><text x="25.2097%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.1208%" y="629" width="0.1610%" height="15" fill="rgb(253,39,1)" fg:x="312" fg:w="2"/><text x="25.3708%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.1208%" y="613" width="0.1610%" height="15" fill="rgb(251,206,50)" fg:x="312" fg:w="2"/><text x="25.3708%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2013%" y="597" width="0.0805%" height="15" fill="rgb(239,162,11)" fg:x="313" fg:w="1"/><text x="25.4513%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2013%" y="581" width="0.0805%" height="15" fill="rgb(234,164,6)" fg:x="313" fg:w="1"/><text x="25.4513%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.2013%" y="565" width="0.0805%" height="15" fill="rgb(238,112,10)" fg:x="313" fg:w="1"/><text x="25.4513%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2013%" y="549" width="0.0805%" height="15" fill="rgb(232,78,29)" fg:x="313" fg:w="1"/><text x="25.4513%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.2013%" y="533" width="0.0805%" height="15" fill="rgb(232,20,13)" fg:x="313" fg:w="1"/><text x="25.4513%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.2818%" y="629" width="0.1610%" height="15" fill="rgb(222,175,9)" fg:x="314" fg:w="2"/><text x="25.5318%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.2818%" y="613" width="0.1610%" height="15" fill="rgb(233,61,14)" fg:x="314" fg:w="2"/><text x="25.5318%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.2818%" y="597" width="0.1610%" height="15" fill="rgb(224,152,29)" fg:x="314" fg:w="2"/><text x="25.5318%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.2818%" y="581" width="0.1610%" height="15" fill="rgb(232,26,6)" fg:x="314" fg:w="2"/><text x="25.5318%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3623%" y="565" width="0.0805%" height="15" fill="rgb(210,116,11)" fg:x="315" fg:w="1"/><text x="25.6123%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.3623%" y="549" width="0.0805%" height="15" fill="rgb(238,213,15)" fg:x="315" fg:w="1"/><text x="25.6123%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="24.9597%" y="709" width="0.5636%" height="15" fill="rgb(236,177,32)" fg:x="310" fg:w="7"/><text x="25.2097%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="24.9597%" y="693" width="0.5636%" height="15" fill="rgb(230,36,43)" fg:x="310" fg:w="7"/><text x="25.2097%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="25.2818%" y="677" width="0.2415%" height="15" fill="rgb(212,76,23)" fg:x="314" fg:w="3"/><text x="25.5318%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="25.2818%" y="661" width="0.2415%" height="15" fill="rgb(225,168,24)" fg:x="314" fg:w="3"/><text x="25.5318%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.2818%" y="645" width="0.2415%" height="15" fill="rgb(206,40,44)" fg:x="314" fg:w="3"/><text x="25.5318%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4428%" y="629" width="0.0805%" height="15" fill="rgb(251,213,6)" fg:x="316" fg:w="1"/><text x="25.6928%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4428%" y="613" width="0.0805%" height="15" fill="rgb(220,7,47)" fg:x="316" fg:w="1"/><text x="25.6928%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4428%" y="597" width="0.0805%" height="15" fill="rgb(254,130,53)" fg:x="316" fg:w="1"/><text x="25.6928%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4428%" y="581" width="0.0805%" height="15" fill="rgb(240,2,46)" fg:x="316" fg:w="1"/><text x="25.6928%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.4428%" y="565" width="0.0805%" height="15" fill="rgb(252,144,40)" fg:x="316" fg:w="1"/><text x="25.6928%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4428%" y="549" width="0.0805%" height="15" fill="rgb(226,23,10)" fg:x="316" fg:w="1"/><text x="25.6928%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4428%" y="533" width="0.0805%" height="15" fill="rgb(212,204,35)" fg:x="316" fg:w="1"/><text x="25.6928%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="25.6039%" y="677" width="0.0805%" height="15" fill="rgb(218,201,15)" fg:x="318" fg:w="1"/><text x="25.8539%" y="687.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.81%)</title><rect x="24.9597%" y="725" width="0.8052%" height="15" fill="rgb(224,197,5)" fg:x="310" fg:w="10"/><text x="25.2097%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="25.5233%" y="709" width="0.2415%" height="15" fill="rgb(224,185,18)" fg:x="317" fg:w="3"/><text x="25.7733%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.5233%" y="693" width="0.2415%" height="15" fill="rgb(251,71,45)" fg:x="317" fg:w="3"/><text x="25.7733%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="25.6844%" y="677" width="0.0805%" height="15" fill="rgb(216,74,24)" fg:x="319" fg:w="1"/><text x="25.9344%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="25.6844%" y="661" width="0.0805%" height="15" fill="rgb(250,36,51)" fg:x="319" fg:w="1"/><text x="25.9344%" y="671.50"></text></g><g><title>kernel::model::base::When::to_utc_time (1 samples, 0.08%)</title><rect x="25.6844%" y="645" width="0.0805%" height="15" fill="rgb(209,224,28)" fg:x="319" fg:w="1"/><text x="25.9344%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (36 samples, 2.90%)</title><rect x="22.9469%" y="757" width="2.8986%" height="15" fill="rgb(228,5,10)" fg:x="285" fg:w="36"/><text x="23.1969%" y="767.50">pl..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.93%)</title><rect x="23.9130%" y="741" width="1.9324%" height="15" fill="rgb(250,57,40)" fg:x="297" fg:w="24"/><text x="24.1630%" y="751.50">p..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="25.7649%" y="725" width="0.0805%" height="15" fill="rgb(228,194,41)" fg:x="320" fg:w="1"/><text x="26.0149%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.7649%" y="709" width="0.0805%" height="15" fill="rgb(206,68,23)" fg:x="320" fg:w="1"/><text x="26.0149%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.8454%" y="677" width="0.0805%" height="15" fill="rgb(230,33,29)" fg:x="321" fg:w="1"/><text x="26.0954%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.8454%" y="661" width="0.0805%" height="15" fill="rgb(210,39,32)" fg:x="321" fg:w="1"/><text x="26.0954%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9259%" y="581" width="0.0805%" height="15" fill="rgb(236,89,23)" fg:x="322" fg:w="1"/><text x="26.1759%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9259%" y="565" width="0.0805%" height="15" fill="rgb(218,52,52)" fg:x="322" fg:w="1"/><text x="26.1759%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.9259%" y="549" width="0.0805%" height="15" fill="rgb(235,154,5)" fg:x="322" fg:w="1"/><text x="26.1759%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.9259%" y="613" width="0.1610%" height="15" fill="rgb(223,168,9)" fg:x="322" fg:w="2"/><text x="26.1759%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.9259%" y="597" width="0.1610%" height="15" fill="rgb(220,8,33)" fg:x="322" fg:w="2"/><text x="26.1759%" y="607.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="26.0064%" y="581" width="0.0805%" height="15" fill="rgb(216,176,3)" fg:x="323" fg:w="1"/><text x="26.2564%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="25.8454%" y="757" width="0.3221%" height="15" fill="rgb(254,150,22)" fg:x="321" fg:w="4"/><text x="26.0954%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="25.8454%" y="741" width="0.3221%" height="15" fill="rgb(231,61,53)" fg:x="321" fg:w="4"/><text x="26.0954%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="25.8454%" y="725" width="0.3221%" height="15" fill="rgb(249,177,41)" fg:x="321" fg:w="4"/><text x="26.0954%" y="735.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="25.8454%" y="709" width="0.3221%" height="15" fill="rgb(221,122,7)" fg:x="321" fg:w="4"/><text x="26.0954%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="25.8454%" y="693" width="0.3221%" height="15" fill="rgb(215,115,7)" fg:x="321" fg:w="4"/><text x="26.0954%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="25.9259%" y="677" width="0.2415%" height="15" fill="rgb(218,108,33)" fg:x="322" fg:w="3"/><text x="26.1759%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="25.9259%" y="661" width="0.2415%" height="15" fill="rgb(221,205,39)" fg:x="322" fg:w="3"/><text x="26.1759%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="25.9259%" y="645" width="0.2415%" height="15" fill="rgb(220,171,18)" fg:x="322" fg:w="3"/><text x="26.1759%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="25.9259%" y="629" width="0.2415%" height="15" fill="rgb(236,188,29)" fg:x="322" fg:w="3"/><text x="26.1759%" y="639.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="26.0870%" y="613" width="0.0805%" height="15" fill="rgb(239,29,5)" fg:x="324" fg:w="1"/><text x="26.3370%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="26.2480%" y="709" width="0.0805%" height="15" fill="rgb(236,114,44)" fg:x="326" fg:w="1"/><text x="26.4980%" y="719.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="26.2480%" y="693" width="0.0805%" height="15" fill="rgb(239,214,48)" fg:x="326" fg:w="1"/><text x="26.4980%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.2480%" y="677" width="0.0805%" height="15" fill="rgb(241,56,8)" fg:x="326" fg:w="1"/><text x="26.4980%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.2480%" y="661" width="0.0805%" height="15" fill="rgb(228,201,0)" fg:x="326" fg:w="1"/><text x="26.4980%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.2480%" y="645" width="0.0805%" height="15" fill="rgb(226,219,34)" fg:x="326" fg:w="1"/><text x="26.4980%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.2480%" y="629" width="0.0805%" height="15" fill="rgb(209,204,54)" fg:x="326" fg:w="1"/><text x="26.4980%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.2480%" y="613" width="0.0805%" height="15" fill="rgb(251,160,17)" fg:x="326" fg:w="1"/><text x="26.4980%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.2480%" y="597" width="0.0805%" height="15" fill="rgb(235,15,25)" fg:x="326" fg:w="1"/><text x="26.4980%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.2480%" y="581" width="0.0805%" height="15" fill="rgb(216,209,28)" fg:x="326" fg:w="1"/><text x="26.4980%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.2480%" y="565" width="0.0805%" height="15" fill="rgb(248,123,21)" fg:x="326" fg:w="1"/><text x="26.4980%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.3285%" y="517" width="0.0805%" height="15" fill="rgb(226,138,44)" fg:x="327" fg:w="1"/><text x="26.5785%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.3285%" y="501" width="0.0805%" height="15" fill="rgb(211,104,54)" fg:x="327" fg:w="1"/><text x="26.5785%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="26.3285%" y="485" width="0.0805%" height="15" fill="rgb(241,198,15)" fg:x="327" fg:w="1"/><text x="26.5785%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="26.3285%" y="469" width="0.0805%" height="15" fill="rgb(227,155,54)" fg:x="327" fg:w="1"/><text x="26.5785%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="26.3285%" y="453" width="0.0805%" height="15" fill="rgb(225,131,31)" fg:x="327" fg:w="1"/><text x="26.5785%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="26.3285%" y="437" width="0.0805%" height="15" fill="rgb(242,40,17)" fg:x="327" fg:w="1"/><text x="26.5785%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.3285%" y="421" width="0.0805%" height="15" fill="rgb(254,57,35)" fg:x="327" fg:w="1"/><text x="26.5785%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.3285%" y="405" width="0.0805%" height="15" fill="rgb(240,64,32)" fg:x="327" fg:w="1"/><text x="26.5785%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.3285%" y="389" width="0.0805%" height="15" fill="rgb(251,136,26)" fg:x="327" fg:w="1"/><text x="26.5785%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="26.3285%" y="373" width="0.0805%" height="15" fill="rgb(208,60,54)" fg:x="327" fg:w="1"/><text x="26.5785%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.3285%" y="357" width="0.0805%" height="15" fill="rgb(220,13,12)" fg:x="327" fg:w="1"/><text x="26.5785%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3285%" y="341" width="0.0805%" height="15" fill="rgb(213,149,1)" fg:x="327" fg:w="1"/><text x="26.5785%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="26.2480%" y="725" width="0.2415%" height="15" fill="rgb(212,191,39)" fg:x="326" fg:w="3"/><text x="26.4980%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="26.3285%" y="709" width="0.1610%" height="15" fill="rgb(215,221,42)" fg:x="327" fg:w="2"/><text x="26.5785%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="26.3285%" y="693" width="0.1610%" height="15" fill="rgb(244,79,23)" fg:x="327" fg:w="2"/><text x="26.5785%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="26.3285%" y="677" width="0.1610%" height="15" fill="rgb(247,17,29)" fg:x="327" fg:w="2"/><text x="26.5785%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="26.3285%" y="661" width="0.1610%" height="15" fill="rgb(251,221,21)" fg:x="327" fg:w="2"/><text x="26.5785%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="26.3285%" y="645" width="0.1610%" height="15" fill="rgb(207,202,34)" fg:x="327" fg:w="2"/><text x="26.5785%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="26.3285%" y="629" width="0.1610%" height="15" fill="rgb(217,4,34)" fg:x="327" fg:w="2"/><text x="26.5785%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="26.3285%" y="613" width="0.1610%" height="15" fill="rgb(253,17,16)" fg:x="327" fg:w="2"/><text x="26.5785%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="26.3285%" y="597" width="0.1610%" height="15" fill="rgb(223,91,48)" fg:x="327" fg:w="2"/><text x="26.5785%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="26.3285%" y="581" width="0.1610%" height="15" fill="rgb(244,191,22)" fg:x="327" fg:w="2"/><text x="26.5785%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="26.3285%" y="565" width="0.1610%" height="15" fill="rgb(211,107,14)" fg:x="327" fg:w="2"/><text x="26.5785%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="26.3285%" y="549" width="0.1610%" height="15" fill="rgb(232,81,23)" fg:x="327" fg:w="2"/><text x="26.5785%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="26.3285%" y="533" width="0.1610%" height="15" fill="rgb(237,126,14)" fg:x="327" fg:w="2"/><text x="26.5785%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.4090%" y="517" width="0.0805%" height="15" fill="rgb(230,65,39)" fg:x="328" fg:w="1"/><text x="26.6590%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.4090%" y="501" width="0.0805%" height="15" fill="rgb(208,106,41)" fg:x="328" fg:w="1"/><text x="26.6590%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.4090%" y="485" width="0.0805%" height="15" fill="rgb(206,125,25)" fg:x="328" fg:w="1"/><text x="26.6590%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="26.4090%" y="469" width="0.0805%" height="15" fill="rgb(250,24,29)" fg:x="328" fg:w="1"/><text x="26.6590%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="26.4090%" y="453" width="0.0805%" height="15" fill="rgb(226,49,32)" fg:x="328" fg:w="1"/><text x="26.6590%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="26.4090%" y="437" width="0.0805%" height="15" fill="rgb(217,110,16)" fg:x="328" fg:w="1"/><text x="26.6590%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="26.4090%" y="421" width="0.0805%" height="15" fill="rgb(252,16,53)" fg:x="328" fg:w="1"/><text x="26.6590%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.4090%" y="405" width="0.0805%" height="15" fill="rgb(238,163,11)" fg:x="328" fg:w="1"/><text x="26.6590%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.4090%" y="389" width="0.0805%" height="15" fill="rgb(206,210,1)" fg:x="328" fg:w="1"/><text x="26.6590%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.4090%" y="373" width="0.0805%" height="15" fill="rgb(229,8,25)" fg:x="328" fg:w="1"/><text x="26.6590%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="26.4090%" y="357" width="0.0805%" height="15" fill="rgb(247,155,23)" fg:x="328" fg:w="1"/><text x="26.6590%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.4090%" y="341" width="0.0805%" height="15" fill="rgb(207,26,7)" fg:x="328" fg:w="1"/><text x="26.6590%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="26.4090%" y="325" width="0.0805%" height="15" fill="rgb(215,179,12)" fg:x="328" fg:w="1"/><text x="26.6590%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="26.4090%" y="309" width="0.0805%" height="15" fill="rgb(238,208,11)" fg:x="328" fg:w="1"/><text x="26.6590%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="26.4090%" y="293" width="0.0805%" height="15" fill="rgb(238,102,42)" fg:x="328" fg:w="1"/><text x="26.6590%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.4090%" y="277" width="0.0805%" height="15" fill="rgb(239,35,9)" fg:x="328" fg:w="1"/><text x="26.6590%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="26.4895%" y="709" width="0.0805%" height="15" fill="rgb(244,182,30)" fg:x="329" fg:w="1"/><text x="26.7395%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.4895%" y="693" width="0.0805%" height="15" fill="rgb(232,181,23)" fg:x="329" fg:w="1"/><text x="26.7395%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5700%" y="677" width="0.1610%" height="15" fill="rgb(242,154,29)" fg:x="330" fg:w="2"/><text x="26.8200%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5700%" y="661" width="0.1610%" height="15" fill="rgb(219,23,2)" fg:x="330" fg:w="2"/><text x="26.8200%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5700%" y="645" width="0.1610%" height="15" fill="rgb(234,94,43)" fg:x="330" fg:w="2"/><text x="26.8200%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.5700%" y="629" width="0.1610%" height="15" fill="rgb(223,55,45)" fg:x="330" fg:w="2"/><text x="26.8200%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.5700%" y="613" width="0.1610%" height="15" fill="rgb(241,215,54)" fg:x="330" fg:w="2"/><text x="26.8200%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.5700%" y="597" width="0.1610%" height="15" fill="rgb(247,63,53)" fg:x="330" fg:w="2"/><text x="26.8200%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="26.5700%" y="581" width="0.1610%" height="15" fill="rgb(220,166,7)" fg:x="330" fg:w="2"/><text x="26.8200%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="26.5700%" y="565" width="0.1610%" height="15" fill="rgb(248,53,45)" fg:x="330" fg:w="2"/><text x="26.8200%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="26.5700%" y="549" width="0.1610%" height="15" fill="rgb(224,207,20)" fg:x="330" fg:w="2"/><text x="26.8200%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="26.5700%" y="533" width="0.1610%" height="15" fill="rgb(244,185,11)" fg:x="330" fg:w="2"/><text x="26.8200%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="26.5700%" y="517" width="0.1610%" height="15" fill="rgb(230,13,42)" fg:x="330" fg:w="2"/><text x="26.8200%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="26.5700%" y="501" width="0.1610%" height="15" fill="rgb(243,191,18)" fg:x="330" fg:w="2"/><text x="26.8200%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="26.5700%" y="485" width="0.1610%" height="15" fill="rgb(249,135,15)" fg:x="330" fg:w="2"/><text x="26.8200%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="26.5700%" y="469" width="0.1610%" height="15" fill="rgb(229,26,35)" fg:x="330" fg:w="2"/><text x="26.8200%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="26.5700%" y="453" width="0.1610%" height="15" fill="rgb(216,191,16)" fg:x="330" fg:w="2"/><text x="26.8200%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.5700%" y="437" width="0.1610%" height="15" fill="rgb(242,18,7)" fg:x="330" fg:w="2"/><text x="26.8200%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="26.4895%" y="725" width="0.3221%" height="15" fill="rgb(205,128,17)" fg:x="329" fg:w="4"/><text x="26.7395%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="26.5700%" y="709" width="0.2415%" height="15" fill="rgb(229,199,44)" fg:x="330" fg:w="3"/><text x="26.8200%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="26.5700%" y="693" width="0.2415%" height="15" fill="rgb(234,222,3)" fg:x="330" fg:w="3"/><text x="26.8200%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.7311%" y="677" width="0.0805%" height="15" fill="rgb(220,170,20)" fg:x="332" fg:w="1"/><text x="26.9811%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.7311%" y="661" width="0.0805%" height="15" fill="rgb(207,138,8)" fg:x="332" fg:w="1"/><text x="26.9811%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.7311%" y="645" width="0.0805%" height="15" fill="rgb(244,130,36)" fg:x="332" fg:w="1"/><text x="26.9811%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.7311%" y="629" width="0.0805%" height="15" fill="rgb(207,197,52)" fg:x="332" fg:w="1"/><text x="26.9811%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.7311%" y="613" width="0.0805%" height="15" fill="rgb(206,9,21)" fg:x="332" fg:w="1"/><text x="26.9811%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.7311%" y="597" width="0.0805%" height="15" fill="rgb(250,15,47)" fg:x="332" fg:w="1"/><text x="26.9811%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.7311%" y="581" width="0.0805%" height="15" fill="rgb(235,202,14)" fg:x="332" fg:w="1"/><text x="26.9811%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.7311%" y="565" width="0.0805%" height="15" fill="rgb(211,180,47)" fg:x="332" fg:w="1"/><text x="26.9811%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.8116%" y="677" width="0.1610%" height="15" fill="rgb(209,61,11)" fg:x="333" fg:w="2"/><text x="27.0616%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.8116%" y="661" width="0.1610%" height="15" fill="rgb(243,197,29)" fg:x="333" fg:w="2"/><text x="27.0616%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.8921%" y="645" width="0.0805%" height="15" fill="rgb(216,185,16)" fg:x="334" fg:w="1"/><text x="27.1421%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.8921%" y="629" width="0.0805%" height="15" fill="rgb(248,5,15)" fg:x="334" fg:w="1"/><text x="27.1421%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.8921%" y="613" width="0.0805%" height="15" fill="rgb(240,39,41)" fg:x="334" fg:w="1"/><text x="27.1421%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.9726%" y="565" width="0.0805%" height="15" fill="rgb(224,220,43)" fg:x="335" fg:w="1"/><text x="27.2226%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.9726%" y="549" width="0.0805%" height="15" fill="rgb(215,21,24)" fg:x="335" fg:w="1"/><text x="27.2226%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.9726%" y="533" width="0.0805%" height="15" fill="rgb(220,102,8)" fg:x="335" fg:w="1"/><text x="27.2226%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.9726%" y="517" width="0.0805%" height="15" fill="rgb(225,185,10)" fg:x="335" fg:w="1"/><text x="27.2226%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.9726%" y="501" width="0.0805%" height="15" fill="rgb(212,108,24)" fg:x="335" fg:w="1"/><text x="27.2226%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.9726%" y="485" width="0.0805%" height="15" fill="rgb(237,27,0)" fg:x="335" fg:w="1"/><text x="27.2226%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.9726%" y="469" width="0.0805%" height="15" fill="rgb(212,106,38)" fg:x="335" fg:w="1"/><text x="27.2226%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.9726%" y="453" width="0.0805%" height="15" fill="rgb(210,125,30)" fg:x="335" fg:w="1"/><text x="27.2226%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.9726%" y="437" width="0.0805%" height="15" fill="rgb(215,219,1)" fg:x="335" fg:w="1"/><text x="27.2226%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.9726%" y="421" width="0.0805%" height="15" fill="rgb(223,10,12)" fg:x="335" fg:w="1"/><text x="27.2226%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.9726%" y="405" width="0.0805%" height="15" fill="rgb(245,40,34)" fg:x="335" fg:w="1"/><text x="27.2226%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9726%" y="389" width="0.0805%" height="15" fill="rgb(211,185,19)" fg:x="335" fg:w="1"/><text x="27.2226%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.9726%" y="645" width="0.1610%" height="15" fill="rgb(243,190,43)" fg:x="335" fg:w="2"/><text x="27.2226%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.9726%" y="629" width="0.1610%" height="15" fill="rgb(232,208,29)" fg:x="335" fg:w="2"/><text x="27.2226%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.9726%" y="613" width="0.1610%" height="15" fill="rgb(234,134,27)" fg:x="335" fg:w="2"/><text x="27.2226%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.9726%" y="597" width="0.1610%" height="15" fill="rgb(225,41,29)" fg:x="335" fg:w="2"/><text x="27.2226%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.9726%" y="581" width="0.1610%" height="15" fill="rgb(241,214,44)" fg:x="335" fg:w="2"/><text x="27.2226%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0531%" y="565" width="0.0805%" height="15" fill="rgb(205,219,41)" fg:x="336" fg:w="1"/><text x="27.3031%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.1337%" y="565" width="0.0805%" height="15" fill="rgb(226,15,26)" fg:x="337" fg:w="1"/><text x="27.3837%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="26.2480%" y="741" width="1.0467%" height="15" fill="rgb(210,83,41)" fg:x="326" fg:w="13"/><text x="26.4980%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="26.8116%" y="725" width="0.4831%" height="15" fill="rgb(247,9,39)" fg:x="333" fg:w="6"/><text x="27.0616%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="26.8116%" y="709" width="0.4831%" height="15" fill="rgb(209,37,30)" fg:x="333" fg:w="6"/><text x="27.0616%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="26.8116%" y="693" width="0.4831%" height="15" fill="rgb(248,170,46)" fg:x="333" fg:w="6"/><text x="27.0616%" y="703.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="26.9726%" y="677" width="0.3221%" height="15" fill="rgb(237,129,44)" fg:x="335" fg:w="4"/><text x="27.2226%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="26.9726%" y="661" width="0.3221%" height="15" fill="rgb(225,117,51)" fg:x="335" fg:w="4"/><text x="27.2226%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="27.1337%" y="645" width="0.1610%" height="15" fill="rgb(212,165,2)" fg:x="337" fg:w="2"/><text x="27.3837%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.1337%" y="629" width="0.1610%" height="15" fill="rgb(213,53,45)" fg:x="337" fg:w="2"/><text x="27.3837%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="27.1337%" y="613" width="0.1610%" height="15" fill="rgb(220,148,3)" fg:x="337" fg:w="2"/><text x="27.3837%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.1337%" y="597" width="0.1610%" height="15" fill="rgb(228,37,29)" fg:x="337" fg:w="2"/><text x="27.3837%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="27.1337%" y="581" width="0.1610%" height="15" fill="rgb(209,76,29)" fg:x="337" fg:w="2"/><text x="27.3837%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="27.2142%" y="565" width="0.0805%" height="15" fill="rgb(215,90,5)" fg:x="338" fg:w="1"/><text x="27.4642%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.2142%" y="549" width="0.0805%" height="15" fill="rgb(227,207,32)" fg:x="338" fg:w="1"/><text x="27.4642%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="27.2142%" y="533" width="0.0805%" height="15" fill="rgb(251,218,44)" fg:x="338" fg:w="1"/><text x="27.4642%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.2142%" y="517" width="0.0805%" height="15" fill="rgb(211,44,16)" fg:x="338" fg:w="1"/><text x="27.4642%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.2947%" y="677" width="0.0805%" height="15" fill="rgb(242,170,37)" fg:x="339" fg:w="1"/><text x="27.5447%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="27.2947%" y="693" width="0.1610%" height="15" fill="rgb(205,181,22)" fg:x="339" fg:w="2"/><text x="27.5447%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.3752%" y="677" width="0.0805%" height="15" fill="rgb(228,130,19)" fg:x="340" fg:w="1"/><text x="27.6252%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.3752%" y="661" width="0.0805%" height="15" fill="rgb(228,9,15)" fg:x="340" fg:w="1"/><text x="27.6252%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.3752%" y="645" width="0.0805%" height="15" fill="rgb(219,66,48)" fg:x="340" fg:w="1"/><text x="27.6252%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.3752%" y="629" width="0.0805%" height="15" fill="rgb(234,203,10)" fg:x="340" fg:w="1"/><text x="27.6252%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.3752%" y="613" width="0.0805%" height="15" fill="rgb(219,209,1)" fg:x="340" fg:w="1"/><text x="27.6252%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.3752%" y="597" width="0.0805%" height="15" fill="rgb(206,167,9)" fg:x="340" fg:w="1"/><text x="27.6252%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.3752%" y="581" width="0.0805%" height="15" fill="rgb(210,11,39)" fg:x="340" fg:w="1"/><text x="27.6252%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.3752%" y="565" width="0.0805%" height="15" fill="rgb(251,90,47)" fg:x="340" fg:w="1"/><text x="27.6252%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.4557%" y="645" width="0.0805%" height="15" fill="rgb(237,7,4)" fg:x="341" fg:w="1"/><text x="27.7057%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.4557%" y="629" width="0.0805%" height="15" fill="rgb(232,205,47)" fg:x="341" fg:w="1"/><text x="27.7057%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.4557%" y="613" width="0.0805%" height="15" fill="rgb(215,86,48)" fg:x="341" fg:w="1"/><text x="27.7057%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4557%" y="597" width="0.0805%" height="15" fill="rgb(232,14,47)" fg:x="341" fg:w="1"/><text x="27.7057%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="27.2947%" y="725" width="0.3221%" height="15" fill="rgb(240,28,46)" fg:x="339" fg:w="4"/><text x="27.5447%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="27.2947%" y="709" width="0.3221%" height="15" fill="rgb(224,85,5)" fg:x="339" fg:w="4"/><text x="27.5447%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="27.4557%" y="693" width="0.1610%" height="15" fill="rgb(219,34,25)" fg:x="341" fg:w="2"/><text x="27.7057%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="27.4557%" y="677" width="0.1610%" height="15" fill="rgb(247,137,45)" fg:x="341" fg:w="2"/><text x="27.7057%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.4557%" y="661" width="0.1610%" height="15" fill="rgb(237,121,47)" fg:x="341" fg:w="2"/><text x="27.7057%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.5362%" y="645" width="0.0805%" height="15" fill="rgb(247,148,27)" fg:x="342" fg:w="1"/><text x="27.7862%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.5362%" y="629" width="0.0805%" height="15" fill="rgb(220,44,0)" fg:x="342" fg:w="1"/><text x="27.7862%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.5362%" y="613" width="0.0805%" height="15" fill="rgb(236,61,29)" fg:x="342" fg:w="1"/><text x="27.7862%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.5362%" y="597" width="0.0805%" height="15" fill="rgb(244,180,35)" fg:x="342" fg:w="1"/><text x="27.7862%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.5362%" y="581" width="0.0805%" height="15" fill="rgb(242,14,54)" fg:x="342" fg:w="1"/><text x="27.7862%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.5362%" y="565" width="0.0805%" height="15" fill="rgb(206,24,45)" fg:x="342" fg:w="1"/><text x="27.7862%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.5362%" y="549" width="0.0805%" height="15" fill="rgb(215,211,6)" fg:x="342" fg:w="1"/><text x="27.7862%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.5362%" y="533" width="0.0805%" height="15" fill="rgb(207,56,2)" fg:x="342" fg:w="1"/><text x="27.7862%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.5362%" y="517" width="0.0805%" height="15" fill="rgb(220,135,9)" fg:x="342" fg:w="1"/><text x="27.7862%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.5362%" y="501" width="0.0805%" height="15" fill="rgb(214,145,52)" fg:x="342" fg:w="1"/><text x="27.7862%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="27.5362%" y="485" width="0.0805%" height="15" fill="rgb(241,83,53)" fg:x="342" fg:w="1"/><text x="27.7862%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="27.5362%" y="469" width="0.0805%" height="15" fill="rgb(222,66,13)" fg:x="342" fg:w="1"/><text x="27.7862%" y="479.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="27.5362%" y="453" width="0.0805%" height="15" fill="rgb(239,164,54)" fg:x="342" fg:w="1"/><text x="27.7862%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="27.6167%" y="565" width="0.0805%" height="15" fill="rgb(216,189,13)" fg:x="343" fg:w="1"/><text x="27.8667%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.6167%" y="549" width="0.0805%" height="15" fill="rgb(228,212,51)" fg:x="343" fg:w="1"/><text x="27.8667%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.6973%" y="533" width="0.0805%" height="15" fill="rgb(207,190,21)" fg:x="344" fg:w="1"/><text x="27.9473%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.6973%" y="517" width="0.0805%" height="15" fill="rgb(245,28,35)" fg:x="344" fg:w="1"/><text x="27.9473%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="27.6167%" y="677" width="0.2415%" height="15" fill="rgb(239,23,40)" fg:x="343" fg:w="3"/><text x="27.8667%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="27.6167%" y="661" width="0.2415%" height="15" fill="rgb(242,10,51)" fg:x="343" fg:w="3"/><text x="27.8667%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.6167%" y="645" width="0.2415%" height="15" fill="rgb(207,186,5)" fg:x="343" fg:w="3"/><text x="27.8667%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.6167%" y="629" width="0.2415%" height="15" fill="rgb(242,21,16)" fg:x="343" fg:w="3"/><text x="27.8667%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.6167%" y="613" width="0.2415%" height="15" fill="rgb(237,0,53)" fg:x="343" fg:w="3"/><text x="27.8667%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.6167%" y="597" width="0.2415%" height="15" fill="rgb(215,8,52)" fg:x="343" fg:w="3"/><text x="27.8667%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.6167%" y="581" width="0.2415%" height="15" fill="rgb(248,62,44)" fg:x="343" fg:w="3"/><text x="27.8667%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="27.6973%" y="565" width="0.1610%" height="15" fill="rgb(224,83,15)" fg:x="344" fg:w="2"/><text x="27.9473%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.6973%" y="549" width="0.1610%" height="15" fill="rgb(249,100,46)" fg:x="344" fg:w="2"/><text x="27.9473%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.7778%" y="533" width="0.0805%" height="15" fill="rgb(213,35,48)" fg:x="345" fg:w="1"/><text x="28.0278%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.7778%" y="517" width="0.0805%" height="15" fill="rgb(251,2,13)" fg:x="345" fg:w="1"/><text x="28.0278%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.7778%" y="501" width="0.0805%" height="15" fill="rgb(212,132,21)" fg:x="345" fg:w="1"/><text x="28.0278%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (172 samples, 13.85%)</title><rect x="14.0902%" y="773" width="13.8486%" height="15" fill="rgb(247,17,21)" fg:x="175" fg:w="172"/><text x="14.3402%" y="783.50">plugins_core::build::..</text></g><g><title>plugins_core::build::Build::occupying (22 samples, 1.77%)</title><rect x="26.1675%" y="757" width="1.7713%" height="15" fill="rgb(220,177,38)" fg:x="325" fg:w="22"/><text x="26.4175%" y="767.50">p..</text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="27.2947%" y="741" width="0.6441%" height="15" fill="rgb(233,219,21)" fg:x="339" fg:w="8"/><text x="27.5447%" y="751.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="27.6167%" y="725" width="0.3221%" height="15" fill="rgb(246,17,7)" fg:x="343" fg:w="4"/><text x="27.8667%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="27.6167%" y="709" width="0.3221%" height="15" fill="rgb(212,4,22)" fg:x="343" fg:w="4"/><text x="27.8667%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="27.6167%" y="693" width="0.3221%" height="15" fill="rgb(243,85,21)" fg:x="343" fg:w="4"/><text x="27.8667%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="27.8583%" y="677" width="0.0805%" height="15" fill="rgb(232,218,2)" fg:x="346" fg:w="1"/><text x="28.1083%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.8583%" y="661" width="0.0805%" height="15" fill="rgb(253,168,47)" fg:x="346" fg:w="1"/><text x="28.1083%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.8583%" y="645" width="0.0805%" height="15" fill="rgb(238,101,25)" fg:x="346" fg:w="1"/><text x="28.1083%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8583%" y="629" width="0.0805%" height="15" fill="rgb(251,86,12)" fg:x="346" fg:w="1"/><text x="28.1083%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8583%" y="613" width="0.0805%" height="15" fill="rgb(241,112,44)" fg:x="346" fg:w="1"/><text x="28.1083%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8583%" y="597" width="0.0805%" height="15" fill="rgb(224,28,25)" fg:x="346" fg:w="1"/><text x="28.1083%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="27.9388%" y="741" width="0.0805%" height="15" fill="rgb(209,201,1)" fg:x="347" fg:w="1"/><text x="28.1888%" y="751.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="27.9388%" y="773" width="0.1610%" height="15" fill="rgb(231,30,22)" fg:x="347" fg:w="2"/><text x="28.1888%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="27.9388%" y="757" width="0.1610%" height="15" fill="rgb(247,96,31)" fg:x="347" fg:w="2"/><text x="28.1888%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="28.0193%" y="741" width="0.0805%" height="15" fill="rgb(251,100,12)" fg:x="348" fg:w="1"/><text x="28.2693%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="28.0193%" y="725" width="0.0805%" height="15" fill="rgb(224,174,7)" fg:x="348" fg:w="1"/><text x="28.2693%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="28.0193%" y="709" width="0.0805%" height="15" fill="rgb(231,168,19)" fg:x="348" fg:w="1"/><text x="28.2693%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.0193%" y="693" width="0.0805%" height="15" fill="rgb(226,85,5)" fg:x="348" fg:w="1"/><text x="28.2693%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.0193%" y="677" width="0.0805%" height="15" fill="rgb(210,215,5)" fg:x="348" fg:w="1"/><text x="28.2693%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.0193%" y="661" width="0.0805%" height="15" fill="rgb(233,70,8)" fg:x="348" fg:w="1"/><text x="28.2693%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.0193%" y="645" width="0.0805%" height="15" fill="rgb(229,109,53)" fg:x="348" fg:w="1"/><text x="28.2693%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.0193%" y="629" width="0.0805%" height="15" fill="rgb(213,125,35)" fg:x="348" fg:w="1"/><text x="28.2693%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.0193%" y="613" width="0.0805%" height="15" fill="rgb(215,12,48)" fg:x="348" fg:w="1"/><text x="28.2693%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.0193%" y="597" width="0.0805%" height="15" fill="rgb(207,12,38)" fg:x="348" fg:w="1"/><text x="28.2693%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.0193%" y="581" width="0.0805%" height="15" fill="rgb(216,229,2)" fg:x="348" fg:w="1"/><text x="28.2693%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.0193%" y="565" width="0.0805%" height="15" fill="rgb(229,209,31)" fg:x="348" fg:w="1"/><text x="28.2693%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.0193%" y="549" width="0.0805%" height="15" fill="rgb(239,57,22)" fg:x="348" fg:w="1"/><text x="28.2693%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.0193%" y="533" width="0.0805%" height="15" fill="rgb(239,119,54)" fg:x="348" fg:w="1"/><text x="28.2693%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.0193%" y="517" width="0.0805%" height="15" fill="rgb(231,80,45)" fg:x="348" fg:w="1"/><text x="28.2693%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.0193%" y="501" width="0.0805%" height="15" fill="rgb(219,138,19)" fg:x="348" fg:w="1"/><text x="28.2693%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.0193%" y="485" width="0.0805%" height="15" fill="rgb(216,53,26)" fg:x="348" fg:w="1"/><text x="28.2693%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="28.1804%" y="725" width="0.0805%" height="15" fill="rgb(224,30,16)" fg:x="350" fg:w="1"/><text x="28.4304%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="28.1804%" y="709" width="0.0805%" height="15" fill="rgb(224,151,24)" fg:x="350" fg:w="1"/><text x="28.4304%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1804%" y="693" width="0.0805%" height="15" fill="rgb(236,75,7)" fg:x="350" fg:w="1"/><text x="28.4304%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="28.2609%" y="709" width="0.0805%" height="15" fill="rgb(248,106,42)" fg:x="351" fg:w="1"/><text x="28.5109%" y="719.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="28.2609%" y="693" width="0.0805%" height="15" fill="rgb(222,217,11)" fg:x="351" fg:w="1"/><text x="28.5109%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="28.2609%" y="725" width="0.1610%" height="15" fill="rgb(234,143,31)" fg:x="351" fg:w="2"/><text x="28.5109%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.3414%" y="709" width="0.0805%" height="15" fill="rgb(237,148,28)" fg:x="352" fg:w="1"/><text x="28.5914%" y="719.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="28.3414%" y="693" width="0.0805%" height="15" fill="rgb(241,151,6)" fg:x="352" fg:w="1"/><text x="28.5914%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.3414%" y="677" width="0.0805%" height="15" fill="rgb(226,55,18)" fg:x="352" fg:w="1"/><text x="28.5914%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="28.3414%" y="661" width="0.0805%" height="15" fill="rgb(226,196,6)" fg:x="352" fg:w="1"/><text x="28.5914%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.3414%" y="645" width="0.0805%" height="15" fill="rgb(251,228,11)" fg:x="352" fg:w="1"/><text x="28.5914%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="28.3414%" y="629" width="0.0805%" height="15" fill="rgb(219,197,15)" fg:x="352" fg:w="1"/><text x="28.5914%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5024%" y="645" width="0.0805%" height="15" fill="rgb(243,105,44)" fg:x="354" fg:w="1"/><text x="28.7524%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.5024%" y="629" width="0.0805%" height="15" fill="rgb(205,183,40)" fg:x="354" fg:w="1"/><text x="28.7524%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.5829%" y="565" width="0.0805%" height="15" fill="rgb(232,138,46)" fg:x="355" fg:w="1"/><text x="28.8329%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="28.4219%" y="693" width="0.3221%" height="15" fill="rgb(234,161,14)" fg:x="353" fg:w="4"/><text x="28.6719%" y="703.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="28.4219%" y="677" width="0.3221%" height="15" fill="rgb(238,211,18)" fg:x="353" fg:w="4"/><text x="28.6719%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="28.5024%" y="661" width="0.2415%" height="15" fill="rgb(217,130,2)" fg:x="354" fg:w="3"/><text x="28.7524%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="28.5829%" y="645" width="0.1610%" height="15" fill="rgb(251,17,29)" fg:x="355" fg:w="2"/><text x="28.8329%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="28.5829%" y="629" width="0.1610%" height="15" fill="rgb(243,18,0)" fg:x="355" fg:w="2"/><text x="28.8329%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="28.5829%" y="613" width="0.1610%" height="15" fill="rgb(227,220,45)" fg:x="355" fg:w="2"/><text x="28.8329%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="28.5829%" y="597" width="0.1610%" height="15" fill="rgb(212,34,2)" fg:x="355" fg:w="2"/><text x="28.8329%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="28.5829%" y="581" width="0.1610%" height="15" fill="rgb(236,23,8)" fg:x="355" fg:w="2"/><text x="28.8329%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="28.6634%" y="565" width="0.0805%" height="15" fill="rgb(210,113,39)" fg:x="356" fg:w="1"/><text x="28.9134%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="28.6634%" y="549" width="0.0805%" height="15" fill="rgb(243,123,48)" fg:x="356" fg:w="1"/><text x="28.9134%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="28.6634%" y="533" width="0.0805%" height="15" fill="rgb(223,175,36)" fg:x="356" fg:w="1"/><text x="28.9134%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.6634%" y="517" width="0.0805%" height="15" fill="rgb(226,100,30)" fg:x="356" fg:w="1"/><text x="28.9134%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="28.0998%" y="741" width="0.7246%" height="15" fill="rgb(221,225,39)" fg:x="349" fg:w="9"/><text x="28.3498%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="28.4219%" y="725" width="0.4026%" height="15" fill="rgb(224,222,42)" fg:x="353" fg:w="5"/><text x="28.6719%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="28.4219%" y="709" width="0.4026%" height="15" fill="rgb(221,53,1)" fg:x="353" fg:w="5"/><text x="28.6719%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="28.7440%" y="693" width="0.0805%" height="15" fill="rgb(216,187,48)" fg:x="357" fg:w="1"/><text x="28.9940%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.7440%" y="677" width="0.0805%" height="15" fill="rgb(220,108,2)" fg:x="357" fg:w="1"/><text x="28.9940%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.7440%" y="661" width="0.0805%" height="15" fill="rgb(216,13,42)" fg:x="357" fg:w="1"/><text x="28.9940%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.7440%" y="645" width="0.0805%" height="15" fill="rgb(205,14,29)" fg:x="357" fg:w="1"/><text x="28.9940%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.7440%" y="629" width="0.0805%" height="15" fill="rgb(217,168,30)" fg:x="357" fg:w="1"/><text x="28.9940%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.7440%" y="613" width="0.0805%" height="15" fill="rgb(246,173,54)" fg:x="357" fg:w="1"/><text x="28.9940%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.7440%" y="597" width="0.0805%" height="15" fill="rgb(227,177,11)" fg:x="357" fg:w="1"/><text x="28.9940%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.7440%" y="581" width="0.0805%" height="15" fill="rgb(223,215,51)" fg:x="357" fg:w="1"/><text x="28.9940%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.7440%" y="565" width="0.0805%" height="15" fill="rgb(253,4,17)" fg:x="357" fg:w="1"/><text x="28.9940%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.7440%" y="549" width="0.0805%" height="15" fill="rgb(206,150,43)" fg:x="357" fg:w="1"/><text x="28.9940%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.7440%" y="533" width="0.0805%" height="15" fill="rgb(241,100,52)" fg:x="357" fg:w="1"/><text x="28.9940%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.7440%" y="517" width="0.0805%" height="15" fill="rgb(234,120,21)" fg:x="357" fg:w="1"/><text x="28.9940%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.7440%" y="501" width="0.0805%" height="15" fill="rgb(231,60,11)" fg:x="357" fg:w="1"/><text x="28.9940%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="28.8245%" y="741" width="0.1610%" height="15" fill="rgb(247,77,50)" fg:x="358" fg:w="2"/><text x="29.0745%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="28.9050%" y="725" width="0.0805%" height="15" fill="rgb(251,199,54)" fg:x="359" fg:w="1"/><text x="29.1550%" y="735.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="28.9050%" y="709" width="0.0805%" height="15" fill="rgb(212,120,38)" fg:x="359" fg:w="1"/><text x="29.1550%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="28.9050%" y="693" width="0.0805%" height="15" fill="rgb(250,161,37)" fg:x="359" fg:w="1"/><text x="29.1550%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.9050%" y="677" width="0.0805%" height="15" fill="rgb(232,158,45)" fg:x="359" fg:w="1"/><text x="29.1550%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.9050%" y="661" width="0.0805%" height="15" fill="rgb(233,114,2)" fg:x="359" fg:w="1"/><text x="29.1550%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.9050%" y="645" width="0.0805%" height="15" fill="rgb(248,139,0)" fg:x="359" fg:w="1"/><text x="29.1550%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.9050%" y="629" width="0.0805%" height="15" fill="rgb(222,164,18)" fg:x="359" fg:w="1"/><text x="29.1550%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="28.9050%" y="613" width="0.0805%" height="15" fill="rgb(221,140,42)" fg:x="359" fg:w="1"/><text x="29.1550%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="28.9050%" y="597" width="0.0805%" height="15" fill="rgb(209,186,11)" fg:x="359" fg:w="1"/><text x="29.1550%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="28.9050%" y="581" width="0.0805%" height="15" fill="rgb(254,212,38)" fg:x="359" fg:w="1"/><text x="29.1550%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="28.9050%" y="565" width="0.0805%" height="15" fill="rgb(219,156,31)" fg:x="359" fg:w="1"/><text x="29.1550%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="28.9050%" y="549" width="0.0805%" height="15" fill="rgb(222,148,42)" fg:x="359" fg:w="1"/><text x="29.1550%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (12 samples, 0.97%)</title><rect x="28.0998%" y="773" width="0.9662%" height="15" fill="rgb(225,65,5)" fg:x="349" fg:w="12"/><text x="28.3498%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (12 samples, 0.97%)</title><rect x="28.0998%" y="757" width="0.9662%" height="15" fill="rgb(235,28,12)" fg:x="349" fg:w="12"/><text x="28.3498%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="28.9855%" y="741" width="0.0805%" height="15" fill="rgb(245,58,4)" fg:x="360" fg:w="1"/><text x="29.2355%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="28.9855%" y="725" width="0.0805%" height="15" fill="rgb(235,118,5)" fg:x="360" fg:w="1"/><text x="29.2355%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="28.9855%" y="709" width="0.0805%" height="15" fill="rgb(253,196,3)" fg:x="360" fg:w="1"/><text x="29.2355%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.9855%" y="693" width="0.0805%" height="15" fill="rgb(238,90,28)" fg:x="360" fg:w="1"/><text x="29.2355%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="28.9855%" y="677" width="0.0805%" height="15" fill="rgb(254,227,4)" fg:x="360" fg:w="1"/><text x="29.2355%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.9855%" y="661" width="0.0805%" height="15" fill="rgb(237,114,35)" fg:x="360" fg:w="1"/><text x="29.2355%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="28.9855%" y="645" width="0.0805%" height="15" fill="rgb(221,147,29)" fg:x="360" fg:w="1"/><text x="29.2355%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.9855%" y="629" width="0.0805%" height="15" fill="rgb(216,201,17)" fg:x="360" fg:w="1"/><text x="29.2355%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="28.9855%" y="613" width="0.0805%" height="15" fill="rgb(251,46,50)" fg:x="360" fg:w="1"/><text x="29.2355%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="28.9855%" y="597" width="0.0805%" height="15" fill="rgb(216,143,48)" fg:x="360" fg:w="1"/><text x="29.2355%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.9855%" y="581" width="0.0805%" height="15" fill="rgb(224,62,51)" fg:x="360" fg:w="1"/><text x="29.2355%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0660%" y="693" width="0.0805%" height="15" fill="rgb(232,152,20)" fg:x="361" fg:w="1"/><text x="29.3160%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0660%" y="677" width="0.0805%" height="15" fill="rgb(233,194,7)" fg:x="361" fg:w="1"/><text x="29.3160%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0660%" y="661" width="0.0805%" height="15" fill="rgb(207,33,22)" fg:x="361" fg:w="1"/><text x="29.3160%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0660%" y="645" width="0.0805%" height="15" fill="rgb(226,54,34)" fg:x="361" fg:w="1"/><text x="29.3160%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0660%" y="629" width="0.0805%" height="15" fill="rgb(227,161,47)" fg:x="361" fg:w="1"/><text x="29.3160%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.0660%" y="613" width="0.0805%" height="15" fill="rgb(218,58,37)" fg:x="361" fg:w="1"/><text x="29.3160%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.0660%" y="741" width="0.1610%" height="15" fill="rgb(208,173,18)" fg:x="361" fg:w="2"/><text x="29.3160%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.0660%" y="725" width="0.1610%" height="15" fill="rgb(230,159,11)" fg:x="361" fg:w="2"/><text x="29.3160%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.0660%" y="709" width="0.1610%" height="15" fill="rgb(238,90,51)" fg:x="361" fg:w="2"/><text x="29.3160%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.1465%" y="693" width="0.0805%" height="15" fill="rgb(225,97,36)" fg:x="362" fg:w="1"/><text x="29.3965%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.1465%" y="677" width="0.0805%" height="15" fill="rgb(211,205,42)" fg:x="362" fg:w="1"/><text x="29.3965%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.1465%" y="661" width="0.0805%" height="15" fill="rgb(219,152,7)" fg:x="362" fg:w="1"/><text x="29.3965%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.1465%" y="645" width="0.0805%" height="15" fill="rgb(222,79,10)" fg:x="362" fg:w="1"/><text x="29.3965%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.1465%" y="629" width="0.0805%" height="15" fill="rgb(242,13,11)" fg:x="362" fg:w="1"/><text x="29.3965%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.1465%" y="613" width="0.0805%" height="15" fill="rgb(231,143,41)" fg:x="362" fg:w="1"/><text x="29.3965%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="29.1465%" y="597" width="0.0805%" height="15" fill="rgb(222,147,19)" fg:x="362" fg:w="1"/><text x="29.3965%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="29.2271%" y="709" width="0.0805%" height="15" fill="rgb(235,5,39)" fg:x="363" fg:w="1"/><text x="29.4771%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="29.2271%" y="693" width="0.0805%" height="15" fill="rgb(246,155,51)" fg:x="363" fg:w="1"/><text x="29.4771%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.2271%" y="677" width="0.0805%" height="15" fill="rgb(218,157,4)" fg:x="363" fg:w="1"/><text x="29.4771%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="29.2271%" y="661" width="0.0805%" height="15" fill="rgb(226,184,4)" fg:x="363" fg:w="1"/><text x="29.4771%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.2271%" y="645" width="0.0805%" height="15" fill="rgb(210,103,26)" fg:x="363" fg:w="1"/><text x="29.4771%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="29.2271%" y="629" width="0.0805%" height="15" fill="rgb(228,23,31)" fg:x="363" fg:w="1"/><text x="29.4771%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.2271%" y="613" width="0.0805%" height="15" fill="rgb(205,176,34)" fg:x="363" fg:w="1"/><text x="29.4771%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="29.2271%" y="597" width="0.0805%" height="15" fill="rgb(246,213,37)" fg:x="363" fg:w="1"/><text x="29.4771%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.2271%" y="581" width="0.0805%" height="15" fill="rgb(213,52,45)" fg:x="363" fg:w="1"/><text x="29.4771%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="29.2271%" y="725" width="0.1610%" height="15" fill="rgb(249,9,52)" fg:x="363" fg:w="2"/><text x="29.4771%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="29.3076%" y="709" width="0.0805%" height="15" fill="rgb(205,97,16)" fg:x="364" fg:w="1"/><text x="29.5576%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.3076%" y="693" width="0.0805%" height="15" fill="rgb(214,11,46)" fg:x="364" fg:w="1"/><text x="29.5576%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.3076%" y="677" width="0.0805%" height="15" fill="rgb(221,66,18)" fg:x="364" fg:w="1"/><text x="29.5576%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.3076%" y="661" width="0.0805%" height="15" fill="rgb(213,49,1)" fg:x="364" fg:w="1"/><text x="29.5576%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.3076%" y="645" width="0.0805%" height="15" fill="rgb(232,75,51)" fg:x="364" fg:w="1"/><text x="29.5576%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.3076%" y="629" width="0.0805%" height="15" fill="rgb(208,218,40)" fg:x="364" fg:w="1"/><text x="29.5576%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.3076%" y="613" width="0.0805%" height="15" fill="rgb(206,144,50)" fg:x="364" fg:w="1"/><text x="29.5576%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.3076%" y="597" width="0.0805%" height="15" fill="rgb(216,9,51)" fg:x="364" fg:w="1"/><text x="29.5576%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.3076%" y="581" width="0.0805%" height="15" fill="rgb(226,6,53)" fg:x="364" fg:w="1"/><text x="29.5576%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.3076%" y="565" width="0.0805%" height="15" fill="rgb(216,9,50)" fg:x="364" fg:w="1"/><text x="29.5576%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.3076%" y="549" width="0.0805%" height="15" fill="rgb(214,101,31)" fg:x="364" fg:w="1"/><text x="29.5576%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.3076%" y="533" width="0.0805%" height="15" fill="rgb(247,85,17)" fg:x="364" fg:w="1"/><text x="29.5576%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.3076%" y="517" width="0.0805%" height="15" fill="rgb(248,138,25)" fg:x="364" fg:w="1"/><text x="29.5576%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="29.0660%" y="757" width="0.4026%" height="15" fill="rgb(225,146,20)" fg:x="361" fg:w="5"/><text x="29.3160%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="29.2271%" y="741" width="0.2415%" height="15" fill="rgb(224,184,17)" fg:x="363" fg:w="3"/><text x="29.4771%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="29.3881%" y="725" width="0.0805%" height="15" fill="rgb(231,10,20)" fg:x="365" fg:w="1"/><text x="29.6381%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.3881%" y="709" width="0.0805%" height="15" fill="rgb(210,93,37)" fg:x="365" fg:w="1"/><text x="29.6381%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.3881%" y="693" width="0.0805%" height="15" fill="rgb(226,84,42)" fg:x="365" fg:w="1"/><text x="29.6381%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="29.3881%" y="677" width="0.0805%" height="15" fill="rgb(253,192,7)" fg:x="365" fg:w="1"/><text x="29.6381%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="29.4686%" y="709" width="0.0805%" height="15" fill="rgb(214,107,27)" fg:x="366" fg:w="1"/><text x="29.7186%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.4686%" y="693" width="0.0805%" height="15" fill="rgb(238,146,21)" fg:x="366" fg:w="1"/><text x="29.7186%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.6296%" y="693" width="0.1610%" height="15" fill="rgb(209,136,30)" fg:x="368" fg:w="2"/><text x="29.8796%" y="703.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.6296%" y="677" width="0.1610%" height="15" fill="rgb(226,60,22)" fg:x="368" fg:w="2"/><text x="29.8796%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="29.4686%" y="757" width="0.4026%" height="15" fill="rgb(243,92,26)" fg:x="366" fg:w="5"/><text x="29.7186%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="29.4686%" y="741" width="0.4026%" height="15" fill="rgb(211,85,33)" fg:x="366" fg:w="5"/><text x="29.7186%" y="751.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="29.4686%" y="725" width="0.4026%" height="15" fill="rgb(243,187,44)" fg:x="366" fg:w="5"/><text x="29.7186%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="29.5491%" y="709" width="0.3221%" height="15" fill="rgb(251,172,23)" fg:x="367" fg:w="4"/><text x="29.7991%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.7907%" y="693" width="0.0805%" height="15" fill="rgb(254,162,50)" fg:x="370" fg:w="1"/><text x="30.0407%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.7907%" y="677" width="0.0805%" height="15" fill="rgb(239,14,53)" fg:x="370" fg:w="1"/><text x="30.0407%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.7907%" y="661" width="0.0805%" height="15" fill="rgb(242,208,8)" fg:x="370" fg:w="1"/><text x="30.0407%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.7907%" y="645" width="0.0805%" height="15" fill="rgb(225,61,41)" fg:x="370" fg:w="1"/><text x="30.0407%" y="655.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="29.8712%" y="725" width="0.1610%" height="15" fill="rgb(219,154,6)" fg:x="371" fg:w="2"/><text x="30.1212%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.9517%" y="709" width="0.0805%" height="15" fill="rgb(227,223,44)" fg:x="372" fg:w="1"/><text x="30.2017%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.9517%" y="693" width="0.0805%" height="15" fill="rgb(220,188,6)" fg:x="372" fg:w="1"/><text x="30.2017%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (4 samples, 0.32%)</title><rect x="29.8712%" y="741" width="0.3221%" height="15" fill="rgb(216,65,22)" fg:x="371" fg:w="4"/><text x="30.1212%" y="751.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="30.0322%" y="725" width="0.1610%" height="15" fill="rgb(236,66,46)" fg:x="373" fg:w="2"/><text x="30.2822%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="30.0322%" y="709" width="0.1610%" height="15" fill="rgb(211,150,52)" fg:x="373" fg:w="2"/><text x="30.2822%" y="719.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (321 samples, 25.85%)</title><rect x="4.4283%" y="789" width="25.8454%" height="15" fill="rgb(253,89,19)" fg:x="55" fg:w="321"/><text x="4.6783%" y="799.50">&lt;tests::HoldingKeyInVessel as tests::Worl..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (15 samples, 1.21%)</title><rect x="29.0660%" y="773" width="1.2077%" height="15" fill="rgb(245,4,1)" fg:x="361" fg:w="15"/><text x="29.3160%" y="783.50"></text></g><g><title>plugins_core::build::Build::new_world (5 samples, 0.40%)</title><rect x="29.8712%" y="757" width="0.4026%" height="15" fill="rgb(230,109,16)" fg:x="371" fg:w="5"/><text x="30.1212%" y="767.50"></text></g><g><title>kernel::model::entity::build_entity (1 samples, 0.08%)</title><rect x="30.1932%" y="741" width="0.0805%" height="15" fill="rgb(213,7,47)" fg:x="375" fg:w="1"/><text x="30.4432%" y="751.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="30.1932%" y="725" width="0.0805%" height="15" fill="rgb(242,148,14)" fg:x="375" fg:w="1"/><text x="30.4432%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="30.4348%" y="773" width="0.1610%" height="15" fill="rgb(238,51,34)" fg:x="378" fg:w="2"/><text x="30.6848%" y="783.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="30.5153%" y="757" width="0.0805%" height="15" fill="rgb(222,49,22)" fg:x="379" fg:w="1"/><text x="30.7653%" y="767.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="30.5153%" y="741" width="0.0805%" height="15" fill="rgb(237,102,50)" fg:x="379" fg:w="1"/><text x="30.7653%" y="751.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.5153%" y="725" width="0.0805%" height="15" fill="rgb(237,195,8)" fg:x="379" fg:w="1"/><text x="30.7653%" y="735.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="30.5958%" y="773" width="0.0805%" height="15" fill="rgb(245,60,18)" fg:x="380" fg:w="1"/><text x="30.8458%" y="783.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="30.5958%" y="757" width="0.0805%" height="15" fill="rgb(253,74,32)" fg:x="380" fg:w="1"/><text x="30.8458%" y="767.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="30.5958%" y="741" width="0.0805%" height="15" fill="rgb(240,91,39)" fg:x="380" fg:w="1"/><text x="30.8458%" y="751.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="30.5958%" y="725" width="0.0805%" height="15" fill="rgb(221,162,34)" fg:x="380" fg:w="1"/><text x="30.8458%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="30.5958%" y="709" width="0.0805%" height="15" fill="rgb(223,32,2)" fg:x="380" fg:w="1"/><text x="30.8458%" y="719.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="30.5958%" y="693" width="0.0805%" height="15" fill="rgb(245,220,46)" fg:x="380" fg:w="1"/><text x="30.8458%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="30.5958%" y="677" width="0.0805%" height="15" fill="rgb(216,38,33)" fg:x="380" fg:w="1"/><text x="30.8458%" y="687.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="30.5958%" y="661" width="0.0805%" height="15" fill="rgb(210,123,14)" fg:x="380" fg:w="1"/><text x="30.8458%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="30.7568%" y="725" width="0.2415%" height="15" fill="rgb(214,38,47)" fg:x="382" fg:w="3"/><text x="31.0068%" y="735.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="30.8374%" y="709" width="0.1610%" height="15" fill="rgb(244,180,16)" fg:x="383" fg:w="2"/><text x="31.0874%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="30.6763%" y="741" width="0.4026%" height="15" fill="rgb(252,21,32)" fg:x="381" fg:w="5"/><text x="30.9263%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="30.9984%" y="725" width="0.0805%" height="15" fill="rgb(245,218,31)" fg:x="385" fg:w="1"/><text x="31.2484%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.9984%" y="709" width="0.0805%" height="15" fill="rgb(247,81,18)" fg:x="385" fg:w="1"/><text x="31.2484%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.9984%" y="693" width="0.0805%" height="15" fill="rgb(220,151,1)" fg:x="385" fg:w="1"/><text x="31.2484%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.9984%" y="677" width="0.0805%" height="15" fill="rgb(211,157,11)" fg:x="385" fg:w="1"/><text x="31.2484%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.9984%" y="661" width="0.0805%" height="15" fill="rgb(239,46,30)" fg:x="385" fg:w="1"/><text x="31.2484%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.9984%" y="645" width="0.0805%" height="15" fill="rgb(236,144,43)" fg:x="385" fg:w="1"/><text x="31.2484%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.9984%" y="629" width="0.0805%" height="15" fill="rgb(206,71,45)" fg:x="385" fg:w="1"/><text x="31.2484%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.9984%" y="613" width="0.0805%" height="15" fill="rgb(240,85,31)" fg:x="385" fg:w="1"/><text x="31.2484%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.9984%" y="597" width="0.0805%" height="15" fill="rgb(221,43,52)" fg:x="385" fg:w="1"/><text x="31.2484%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.9984%" y="581" width="0.0805%" height="15" fill="rgb(243,106,22)" fg:x="385" fg:w="1"/><text x="31.2484%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.9984%" y="565" width="0.0805%" height="15" fill="rgb(209,138,38)" fg:x="385" fg:w="1"/><text x="31.2484%" y="575.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="31.0789%" y="741" width="0.0805%" height="15" fill="rgb(216,63,40)" fg:x="386" fg:w="1"/><text x="31.3289%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="31.1594%" y="725" width="0.0805%" height="15" fill="rgb(206,115,21)" fg:x="387" fg:w="1"/><text x="31.4094%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1594%" y="709" width="0.0805%" height="15" fill="rgb(235,53,44)" fg:x="387" fg:w="1"/><text x="31.4094%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.3205%" y="661" width="0.0805%" height="15" fill="rgb(244,160,14)" fg:x="389" fg:w="1"/><text x="31.5705%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="31.3205%" y="693" width="0.2415%" height="15" fill="rgb(223,16,19)" fg:x="389" fg:w="3"/><text x="31.5705%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="31.3205%" y="677" width="0.2415%" height="15" fill="rgb(242,63,42)" fg:x="389" fg:w="3"/><text x="31.5705%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.4010%" y="661" width="0.1610%" height="15" fill="rgb(209,66,49)" fg:x="390" fg:w="2"/><text x="31.6510%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.4010%" y="645" width="0.1610%" height="15" fill="rgb(207,126,46)" fg:x="390" fg:w="2"/><text x="31.6510%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.4815%" y="629" width="0.0805%" height="15" fill="rgb(218,160,41)" fg:x="391" fg:w="1"/><text x="31.7315%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.4815%" y="613" width="0.0805%" height="15" fill="rgb(234,125,46)" fg:x="391" fg:w="1"/><text x="31.7315%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.4815%" y="597" width="0.0805%" height="15" fill="rgb(205,66,36)" fg:x="391" fg:w="1"/><text x="31.7315%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.4815%" y="581" width="0.0805%" height="15" fill="rgb(220,135,16)" fg:x="391" fg:w="1"/><text x="31.7315%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.4815%" y="565" width="0.0805%" height="15" fill="rgb(214,217,54)" fg:x="391" fg:w="1"/><text x="31.7315%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4815%" y="549" width="0.0805%" height="15" fill="rgb(206,30,9)" fg:x="391" fg:w="1"/><text x="31.7315%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4815%" y="533" width="0.0805%" height="15" fill="rgb(207,196,5)" fg:x="391" fg:w="1"/><text x="31.7315%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.4815%" y="517" width="0.0805%" height="15" fill="rgb(227,116,12)" fg:x="391" fg:w="1"/><text x="31.7315%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.4815%" y="501" width="0.0805%" height="15" fill="rgb(235,227,13)" fg:x="391" fg:w="1"/><text x="31.7315%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.4815%" y="485" width="0.0805%" height="15" fill="rgb(238,212,29)" fg:x="391" fg:w="1"/><text x="31.7315%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.4815%" y="469" width="0.0805%" height="15" fill="rgb(230,152,17)" fg:x="391" fg:w="1"/><text x="31.7315%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4815%" y="453" width="0.0805%" height="15" fill="rgb(220,197,1)" fg:x="391" fg:w="1"/><text x="31.7315%" y="463.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="31.5620%" y="693" width="0.0805%" height="15" fill="rgb(229,227,40)" fg:x="392" fg:w="1"/><text x="31.8120%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="31.6425%" y="693" width="0.0805%" height="15" fill="rgb(227,179,16)" fg:x="393" fg:w="1"/><text x="31.8925%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="31.8035%" y="661" width="0.0805%" height="15" fill="rgb(246,116,44)" fg:x="395" fg:w="1"/><text x="32.0535%" y="671.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="31.8035%" y="645" width="0.0805%" height="15" fill="rgb(205,191,4)" fg:x="395" fg:w="1"/><text x="32.0535%" y="655.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="31.8035%" y="629" width="0.0805%" height="15" fill="rgb(245,69,19)" fg:x="395" fg:w="1"/><text x="32.0535%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.8035%" y="613" width="0.0805%" height="15" fill="rgb(230,29,26)" fg:x="395" fg:w="1"/><text x="32.0535%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.8035%" y="597" width="0.0805%" height="15" fill="rgb(239,192,26)" fg:x="395" fg:w="1"/><text x="32.0535%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.8035%" y="581" width="0.0805%" height="15" fill="rgb(219,92,16)" fg:x="395" fg:w="1"/><text x="32.0535%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.8035%" y="565" width="0.0805%" height="15" fill="rgb(246,147,43)" fg:x="395" fg:w="1"/><text x="32.0535%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (16 samples, 1.29%)</title><rect x="30.6763%" y="757" width="1.2882%" height="15" fill="rgb(222,147,11)" fg:x="381" fg:w="16"/><text x="30.9263%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (10 samples, 0.81%)</title><rect x="31.1594%" y="741" width="0.8052%" height="15" fill="rgb(243,71,8)" fg:x="387" fg:w="10"/><text x="31.4094%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="31.2399%" y="725" width="0.7246%" height="15" fill="rgb(250,36,12)" fg:x="388" fg:w="9"/><text x="31.4899%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="31.2399%" y="709" width="0.7246%" height="15" fill="rgb(207,168,14)" fg:x="388" fg:w="9"/><text x="31.4899%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="31.7230%" y="693" width="0.2415%" height="15" fill="rgb(254,210,51)" fg:x="394" fg:w="3"/><text x="31.9730%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.7230%" y="677" width="0.2415%" height="15" fill="rgb(236,152,38)" fg:x="394" fg:w="3"/><text x="31.9730%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.8841%" y="661" width="0.0805%" height="15" fill="rgb(240,164,36)" fg:x="396" fg:w="1"/><text x="32.1341%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.8841%" y="645" width="0.0805%" height="15" fill="rgb(210,171,36)" fg:x="396" fg:w="1"/><text x="32.1341%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.9646%" y="757" width="0.0805%" height="15" fill="rgb(254,156,34)" fg:x="397" fg:w="1"/><text x="32.2146%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="32.0451%" y="757" width="0.0805%" height="15" fill="rgb(216,204,23)" fg:x="398" fg:w="1"/><text x="32.2951%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="32.0451%" y="741" width="0.0805%" height="15" fill="rgb(230,75,38)" fg:x="398" fg:w="1"/><text x="32.2951%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.0451%" y="725" width="0.0805%" height="15" fill="rgb(248,197,25)" fg:x="398" fg:w="1"/><text x="32.2951%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2866%" y="517" width="0.0805%" height="15" fill="rgb(234,121,26)" fg:x="401" fg:w="1"/><text x="32.5366%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="32.2061%" y="709" width="0.2415%" height="15" fill="rgb(220,41,36)" fg:x="400" fg:w="3"/><text x="32.4561%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.2866%" y="693" width="0.1610%" height="15" fill="rgb(227,33,32)" fg:x="401" fg:w="2"/><text x="32.5366%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.2866%" y="677" width="0.1610%" height="15" fill="rgb(208,214,54)" fg:x="401" fg:w="2"/><text x="32.5366%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="32.2866%" y="661" width="0.1610%" height="15" fill="rgb(205,37,38)" fg:x="401" fg:w="2"/><text x="32.5366%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="32.2866%" y="645" width="0.1610%" height="15" fill="rgb(252,2,0)" fg:x="401" fg:w="2"/><text x="32.5366%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="32.2866%" y="629" width="0.1610%" height="15" fill="rgb(212,171,10)" fg:x="401" fg:w="2"/><text x="32.5366%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.2866%" y="613" width="0.1610%" height="15" fill="rgb(239,35,46)" fg:x="401" fg:w="2"/><text x="32.5366%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.2866%" y="597" width="0.1610%" height="15" fill="rgb(209,34,42)" fg:x="401" fg:w="2"/><text x="32.5366%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="32.2866%" y="581" width="0.1610%" height="15" fill="rgb(237,9,4)" fg:x="401" fg:w="2"/><text x="32.5366%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="32.2866%" y="565" width="0.1610%" height="15" fill="rgb(254,55,38)" fg:x="401" fg:w="2"/><text x="32.5366%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="32.2866%" y="549" width="0.1610%" height="15" fill="rgb(222,95,29)" fg:x="401" fg:w="2"/><text x="32.5366%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="32.2866%" y="533" width="0.1610%" height="15" fill="rgb(241,218,37)" fg:x="401" fg:w="2"/><text x="32.5366%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="32.3671%" y="517" width="0.0805%" height="15" fill="rgb(225,89,28)" fg:x="402" fg:w="1"/><text x="32.6171%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="32.3671%" y="501" width="0.0805%" height="15" fill="rgb(231,17,25)" fg:x="402" fg:w="1"/><text x="32.6171%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="32.2061%" y="741" width="0.3221%" height="15" fill="rgb(206,216,48)" fg:x="400" fg:w="4"/><text x="32.4561%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="32.2061%" y="725" width="0.3221%" height="15" fill="rgb(247,190,28)" fg:x="400" fg:w="4"/><text x="32.4561%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.4477%" y="709" width="0.0805%" height="15" fill="rgb(216,196,12)" fg:x="403" fg:w="1"/><text x="32.6977%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="32.6892%" y="709" width="0.0805%" height="15" fill="rgb(232,114,19)" fg:x="406" fg:w="1"/><text x="32.9392%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="32.6892%" y="693" width="0.0805%" height="15" fill="rgb(240,60,14)" fg:x="406" fg:w="1"/><text x="32.9392%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.6892%" y="677" width="0.0805%" height="15" fill="rgb(250,108,9)" fg:x="406" fg:w="1"/><text x="32.9392%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.6892%" y="661" width="0.0805%" height="15" fill="rgb(227,228,21)" fg:x="406" fg:w="1"/><text x="32.9392%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.7697%" y="693" width="0.0805%" height="15" fill="rgb(254,16,52)" fg:x="407" fg:w="1"/><text x="33.0197%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="32.8502%" y="693" width="0.2415%" height="15" fill="rgb(222,58,2)" fg:x="408" fg:w="3"/><text x="33.1002%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="32.8502%" y="677" width="0.2415%" height="15" fill="rgb(253,68,14)" fg:x="408" fg:w="3"/><text x="33.1002%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="32.8502%" y="661" width="0.2415%" height="15" fill="rgb(226,96,17)" fg:x="408" fg:w="3"/><text x="33.1002%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="33.0113%" y="645" width="0.0805%" height="15" fill="rgb(227,199,2)" fg:x="410" fg:w="1"/><text x="33.2613%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.0113%" y="629" width="0.0805%" height="15" fill="rgb(228,227,48)" fg:x="410" fg:w="1"/><text x="33.2613%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="33.1723%" y="677" width="0.4831%" height="15" fill="rgb(249,183,0)" fg:x="412" fg:w="6"/><text x="33.4223%" y="687.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="33.2528%" y="661" width="0.4026%" height="15" fill="rgb(250,89,38)" fg:x="413" fg:w="5"/><text x="33.5028%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="33.4138%" y="645" width="0.2415%" height="15" fill="rgb(240,227,8)" fg:x="415" fg:w="3"/><text x="33.6638%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="33.4944%" y="629" width="0.1610%" height="15" fill="rgb(242,197,35)" fg:x="416" fg:w="2"/><text x="33.7444%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.6554%" y="661" width="0.0805%" height="15" fill="rgb(224,37,41)" fg:x="418" fg:w="1"/><text x="33.9054%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.7359%" y="629" width="0.0805%" height="15" fill="rgb(236,127,7)" fg:x="419" fg:w="1"/><text x="33.9859%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="33.8164%" y="629" width="0.3221%" height="15" fill="rgb(230,62,52)" fg:x="420" fg:w="4"/><text x="34.0664%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="33.8969%" y="613" width="0.2415%" height="15" fill="rgb(235,114,23)" fg:x="421" fg:w="3"/><text x="34.1469%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="33.9775%" y="597" width="0.1610%" height="15" fill="rgb(211,55,40)" fg:x="422" fg:w="2"/><text x="34.2275%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="33.9775%" y="581" width="0.1610%" height="15" fill="rgb(228,123,1)" fg:x="422" fg:w="2"/><text x="34.2275%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.0580%" y="565" width="0.0805%" height="15" fill="rgb(244,208,8)" fg:x="423" fg:w="1"/><text x="34.3080%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.0580%" y="549" width="0.0805%" height="15" fill="rgb(237,118,14)" fg:x="423" fg:w="1"/><text x="34.3080%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.0580%" y="533" width="0.0805%" height="15" fill="rgb(219,170,13)" fg:x="423" fg:w="1"/><text x="34.3080%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="34.1385%" y="613" width="0.1610%" height="15" fill="rgb(212,39,43)" fg:x="424" fg:w="2"/><text x="34.3885%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="33.7359%" y="661" width="0.6441%" height="15" fill="rgb(244,191,2)" fg:x="419" fg:w="8"/><text x="33.9859%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="33.7359%" y="645" width="0.6441%" height="15" fill="rgb(219,201,46)" fg:x="419" fg:w="8"/><text x="33.9859%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="34.1385%" y="629" width="0.2415%" height="15" fill="rgb(218,82,7)" fg:x="424" fg:w="3"/><text x="34.3885%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.2995%" y="613" width="0.0805%" height="15" fill="rgb(208,192,8)" fg:x="426" fg:w="1"/><text x="34.5495%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="34.3800%" y="661" width="0.2415%" height="15" fill="rgb(244,54,32)" fg:x="427" fg:w="3"/><text x="34.6300%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.4605%" y="645" width="0.1610%" height="15" fill="rgb(240,43,52)" fg:x="428" fg:w="2"/><text x="34.7105%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.5411%" y="629" width="0.0805%" height="15" fill="rgb(233,134,29)" fg:x="429" fg:w="1"/><text x="34.7911%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.6216%" y="645" width="0.0805%" height="15" fill="rgb(236,128,10)" fg:x="430" fg:w="1"/><text x="34.8716%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="34.7021%" y="645" width="0.0805%" height="15" fill="rgb(207,46,54)" fg:x="431" fg:w="1"/><text x="34.9521%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="34.8631%" y="629" width="0.1610%" height="15" fill="rgb(248,140,35)" fg:x="433" fg:w="2"/><text x="35.1131%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.8631%" y="613" width="0.1610%" height="15" fill="rgb(241,103,35)" fg:x="433" fg:w="2"/><text x="35.1131%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="34.8631%" y="597" width="0.1610%" height="15" fill="rgb(223,19,48)" fg:x="433" fg:w="2"/><text x="35.1131%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="35.0242%" y="613" width="0.3221%" height="15" fill="rgb(238,177,46)" fg:x="435" fg:w="4"/><text x="35.2742%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="35.1047%" y="597" width="0.2415%" height="15" fill="rgb(213,102,15)" fg:x="436" fg:w="3"/><text x="35.3547%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.1852%" y="581" width="0.1610%" height="15" fill="rgb(254,135,52)" fg:x="437" fg:w="2"/><text x="35.4352%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.2657%" y="565" width="0.0805%" height="15" fill="rgb(240,59,6)" fg:x="438" fg:w="1"/><text x="35.5157%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="35.3462%" y="597" width="0.0805%" height="15" fill="rgb(207,226,5)" fg:x="439" fg:w="1"/><text x="35.5962%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.3462%" y="581" width="0.0805%" height="15" fill="rgb(208,167,17)" fg:x="439" fg:w="1"/><text x="35.5962%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.3462%" y="565" width="0.0805%" height="15" fill="rgb(254,94,10)" fg:x="439" fg:w="1"/><text x="35.5962%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.3462%" y="549" width="0.0805%" height="15" fill="rgb(229,33,11)" fg:x="439" fg:w="1"/><text x="35.5962%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="35.4267%" y="597" width="0.0805%" height="15" fill="rgb(249,145,48)" fg:x="440" fg:w="1"/><text x="35.6767%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="35.3462%" y="613" width="0.2415%" height="15" fill="rgb(253,68,54)" fg:x="439" fg:w="3"/><text x="35.5962%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.5072%" y="597" width="0.0805%" height="15" fill="rgb(223,27,42)" fg:x="441" fg:w="1"/><text x="35.7572%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="34.7826%" y="645" width="1.2077%" height="15" fill="rgb(235,123,13)" fg:x="432" fg:w="15"/><text x="35.0326%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="35.0242%" y="629" width="0.9662%" height="15" fill="rgb(244,154,7)" fg:x="435" fg:w="12"/><text x="35.2742%" y="639.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="35.5878%" y="613" width="0.4026%" height="15" fill="rgb(214,30,25)" fg:x="442" fg:w="5"/><text x="35.8378%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="35.5878%" y="597" width="0.4026%" height="15" fill="rgb(252,189,13)" fg:x="442" fg:w="5"/><text x="35.8378%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="35.5878%" y="581" width="0.4026%" height="15" fill="rgb(234,27,40)" fg:x="442" fg:w="5"/><text x="35.8378%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="35.6683%" y="565" width="0.3221%" height="15" fill="rgb(252,199,25)" fg:x="443" fg:w="4"/><text x="35.9183%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="35.6683%" y="549" width="0.3221%" height="15" fill="rgb(234,207,20)" fg:x="443" fg:w="4"/><text x="35.9183%" y="559.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="35.6683%" y="533" width="0.3221%" height="15" fill="rgb(244,220,10)" fg:x="443" fg:w="4"/><text x="35.9183%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.69%)</title><rect x="34.6216%" y="661" width="1.6908%" height="15" fill="rgb(247,68,23)" fg:x="430" fg:w="21"/><text x="34.8716%" y="671.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="35.9903%" y="645" width="0.3221%" height="15" fill="rgb(254,61,4)" fg:x="447" fg:w="4"/><text x="36.2403%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="36.0709%" y="629" width="0.2415%" height="15" fill="rgb(245,208,35)" fg:x="448" fg:w="3"/><text x="36.3209%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="36.0709%" y="613" width="0.2415%" height="15" fill="rgb(235,90,11)" fg:x="448" fg:w="3"/><text x="36.3209%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.74%)</title><rect x="33.6554%" y="677" width="2.7375%" height="15" fill="rgb(239,139,43)" fg:x="418" fg:w="34"/><text x="33.9054%" y="687.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.3124%" y="661" width="0.0805%" height="15" fill="rgb(209,187,9)" fg:x="451" fg:w="1"/><text x="36.5624%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (50 samples, 4.03%)</title><rect x="32.7697%" y="709" width="4.0258%" height="15" fill="rgb(241,30,6)" fg:x="407" fg:w="50"/><text x="33.0197%" y="719.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (46 samples, 3.70%)</title><rect x="33.0918%" y="693" width="3.7037%" height="15" fill="rgb(216,104,1)" fg:x="411" fg:w="46"/><text x="33.3418%" y="703.50">serd..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="36.3929%" y="677" width="0.4026%" height="15" fill="rgb(238,55,39)" fg:x="452" fg:w="5"/><text x="36.6429%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="36.3929%" y="661" width="0.4026%" height="15" fill="rgb(226,151,41)" fg:x="452" fg:w="5"/><text x="36.6429%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="36.3929%" y="645" width="0.4026%" height="15" fill="rgb(228,73,40)" fg:x="452" fg:w="5"/><text x="36.6429%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="36.6345%" y="629" width="0.1610%" height="15" fill="rgb(215,81,0)" fg:x="455" fg:w="2"/><text x="36.8845%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.7150%" y="613" width="0.0805%" height="15" fill="rgb(209,52,39)" fg:x="456" fg:w="1"/><text x="36.9650%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="36.7150%" y="597" width="0.0805%" height="15" fill="rgb(221,127,5)" fg:x="456" fg:w="1"/><text x="36.9650%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.7955%" y="677" width="0.0805%" height="15" fill="rgb(213,215,6)" fg:x="457" fg:w="1"/><text x="37.0455%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.7955%" y="661" width="0.0805%" height="15" fill="rgb(214,118,13)" fg:x="457" fg:w="1"/><text x="37.0455%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.9565%" y="661" width="0.0805%" height="15" fill="rgb(207,205,41)" fg:x="459" fg:w="1"/><text x="37.2065%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.0370%" y="661" width="0.0805%" height="15" fill="rgb(218,208,45)" fg:x="460" fg:w="1"/><text x="37.2870%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.0370%" y="645" width="0.0805%" height="15" fill="rgb(244,81,54)" fg:x="460" fg:w="1"/><text x="37.2870%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.1176%" y="645" width="0.0805%" height="15" fill="rgb(244,175,1)" fg:x="461" fg:w="1"/><text x="37.3676%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1176%" y="629" width="0.0805%" height="15" fill="rgb(232,128,28)" fg:x="461" fg:w="1"/><text x="37.3676%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1981%" y="629" width="0.0805%" height="15" fill="rgb(234,83,13)" fg:x="462" fg:w="1"/><text x="37.4481%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="37.2786%" y="629" width="0.2415%" height="15" fill="rgb(233,222,35)" fg:x="463" fg:w="3"/><text x="37.5286%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="37.3591%" y="613" width="0.1610%" height="15" fill="rgb(244,204,21)" fg:x="464" fg:w="2"/><text x="37.6091%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.3591%" y="597" width="0.1610%" height="15" fill="rgb(225,121,40)" fg:x="464" fg:w="2"/><text x="37.6091%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6006%" y="613" width="0.0805%" height="15" fill="rgb(231,89,18)" fg:x="467" fg:w="1"/><text x="37.8506%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6812%" y="597" width="0.0805%" height="15" fill="rgb(205,41,50)" fg:x="468" fg:w="1"/><text x="37.9312%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.7617%" y="597" width="0.0805%" height="15" fill="rgb(254,25,22)" fg:x="469" fg:w="1"/><text x="38.0117%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="36.7955%" y="709" width="1.1272%" height="15" fill="rgb(208,44,21)" fg:x="457" fg:w="14"/><text x="37.0455%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.13%)</title><rect x="36.7955%" y="693" width="1.1272%" height="15" fill="rgb(237,59,53)" fg:x="457" fg:w="14"/><text x="37.0455%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="36.8760%" y="677" width="1.0467%" height="15" fill="rgb(233,24,36)" fg:x="458" fg:w="13"/><text x="37.1260%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="37.1176%" y="661" width="0.8052%" height="15" fill="rgb(216,92,41)" fg:x="461" fg:w="10"/><text x="37.3676%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="37.1981%" y="645" width="0.7246%" height="15" fill="rgb(225,158,49)" fg:x="462" fg:w="9"/><text x="37.4481%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="37.5201%" y="629" width="0.4026%" height="15" fill="rgb(244,11,16)" fg:x="466" fg:w="5"/><text x="37.7701%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="37.6812%" y="613" width="0.2415%" height="15" fill="rgb(208,215,38)" fg:x="468" fg:w="3"/><text x="37.9312%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.8422%" y="597" width="0.0805%" height="15" fill="rgb(250,69,53)" fg:x="470" fg:w="1"/><text x="38.0922%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.8422%" y="581" width="0.0805%" height="15" fill="rgb(240,187,52)" fg:x="470" fg:w="1"/><text x="38.0922%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.8422%" y="565" width="0.0805%" height="15" fill="rgb(235,22,25)" fg:x="470" fg:w="1"/><text x="38.0922%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.0837%" y="645" width="0.1610%" height="15" fill="rgb(213,173,22)" fg:x="473" fg:w="2"/><text x="38.3337%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.2448%" y="645" width="0.0805%" height="15" fill="rgb(218,47,0)" fg:x="475" fg:w="1"/><text x="38.4948%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="38.3253%" y="629" width="0.1610%" height="15" fill="rgb(254,157,11)" fg:x="476" fg:w="2"/><text x="38.5753%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5668%" y="613" width="0.0805%" height="15" fill="rgb(233,154,6)" fg:x="479" fg:w="1"/><text x="38.8168%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.6473%" y="613" width="0.0805%" height="15" fill="rgb(233,207,47)" fg:x="480" fg:w="1"/><text x="38.8973%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.6473%" y="597" width="0.0805%" height="15" fill="rgb(249,128,18)" fg:x="480" fg:w="1"/><text x="38.8973%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.8084%" y="597" width="0.0805%" height="15" fill="rgb(211,27,42)" fg:x="482" fg:w="1"/><text x="39.0584%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8084%" y="581" width="0.0805%" height="15" fill="rgb(240,163,26)" fg:x="482" fg:w="1"/><text x="39.0584%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8889%" y="565" width="0.0805%" height="15" fill="rgb(232,118,46)" fg:x="483" fg:w="1"/><text x="39.1389%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="38.8889%" y="597" width="0.1610%" height="15" fill="rgb(238,158,34)" fg:x="483" fg:w="2"/><text x="39.1389%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="38.8889%" y="581" width="0.1610%" height="15" fill="rgb(254,99,45)" fg:x="483" fg:w="2"/><text x="39.1389%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.9694%" y="565" width="0.0805%" height="15" fill="rgb(247,205,20)" fg:x="484" fg:w="1"/><text x="39.2194%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="38.0837%" y="677" width="1.1272%" height="15" fill="rgb(240,20,41)" fg:x="473" fg:w="14"/><text x="38.3337%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.13%)</title><rect x="38.0837%" y="661" width="1.1272%" height="15" fill="rgb(231,22,43)" fg:x="473" fg:w="14"/><text x="38.3337%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="38.3253%" y="645" width="0.8857%" height="15" fill="rgb(207,86,33)" fg:x="476" fg:w="11"/><text x="38.5753%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="38.4863%" y="629" width="0.7246%" height="15" fill="rgb(231,148,5)" fg:x="478" fg:w="9"/><text x="38.7363%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="38.7279%" y="613" width="0.4831%" height="15" fill="rgb(253,77,28)" fg:x="481" fg:w="6"/><text x="38.9779%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.0499%" y="597" width="0.1610%" height="15" fill="rgb(253,227,9)" fg:x="485" fg:w="2"/><text x="39.2999%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1304%" y="581" width="0.0805%" height="15" fill="rgb(235,4,18)" fg:x="486" fg:w="1"/><text x="39.3804%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1304%" y="565" width="0.0805%" height="15" fill="rgb(205,206,45)" fg:x="486" fg:w="1"/><text x="39.3804%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1304%" y="549" width="0.0805%" height="15" fill="rgb(252,34,0)" fg:x="486" fg:w="1"/><text x="39.3804%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="39.2915%" y="613" width="0.0805%" height="15" fill="rgb(213,56,7)" fg:x="488" fg:w="1"/><text x="39.5415%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="39.2915%" y="597" width="0.0805%" height="15" fill="rgb(227,74,29)" fg:x="488" fg:w="1"/><text x="39.5415%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.2915%" y="581" width="0.0805%" height="15" fill="rgb(221,32,48)" fg:x="488" fg:w="1"/><text x="39.5415%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="39.2110%" y="661" width="0.3221%" height="15" fill="rgb(230,205,25)" fg:x="487" fg:w="4"/><text x="39.4610%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="39.2110%" y="645" width="0.3221%" height="15" fill="rgb(215,110,9)" fg:x="487" fg:w="4"/><text x="39.4610%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="39.2915%" y="629" width="0.2415%" height="15" fill="rgb(245,220,47)" fg:x="488" fg:w="3"/><text x="39.5415%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="39.3720%" y="613" width="0.1610%" height="15" fill="rgb(224,117,5)" fg:x="489" fg:w="2"/><text x="39.6220%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="39.5330%" y="661" width="0.0805%" height="15" fill="rgb(242,208,25)" fg:x="491" fg:w="1"/><text x="39.7830%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.6135%" y="661" width="0.0805%" height="15" fill="rgb(226,12,37)" fg:x="492" fg:w="1"/><text x="39.8635%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6940%" y="661" width="0.0805%" height="15" fill="rgb(224,221,22)" fg:x="493" fg:w="1"/><text x="39.9440%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6940%" y="645" width="0.0805%" height="15" fill="rgb(239,38,44)" fg:x="493" fg:w="1"/><text x="39.9440%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.6940%" y="629" width="0.0805%" height="15" fill="rgb(218,25,46)" fg:x="493" fg:w="1"/><text x="39.9440%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.6940%" y="613" width="0.0805%" height="15" fill="rgb(206,137,51)" fg:x="493" fg:w="1"/><text x="39.9440%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.6940%" y="597" width="0.0805%" height="15" fill="rgb(233,174,3)" fg:x="493" fg:w="1"/><text x="39.9440%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6940%" y="581" width="0.0805%" height="15" fill="rgb(207,224,43)" fg:x="493" fg:w="1"/><text x="39.9440%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6940%" y="565" width="0.0805%" height="15" fill="rgb(230,46,27)" fg:x="493" fg:w="1"/><text x="39.9440%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.6940%" y="549" width="0.0805%" height="15" fill="rgb(251,215,32)" fg:x="493" fg:w="1"/><text x="39.9440%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.6940%" y="533" width="0.0805%" height="15" fill="rgb(244,219,19)" fg:x="493" fg:w="1"/><text x="39.9440%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.6940%" y="517" width="0.0805%" height="15" fill="rgb(242,125,36)" fg:x="493" fg:w="1"/><text x="39.9440%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.6940%" y="501" width="0.0805%" height="15" fill="rgb(251,211,12)" fg:x="493" fg:w="1"/><text x="39.9440%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.6940%" y="485" width="0.0805%" height="15" fill="rgb(209,179,33)" fg:x="493" fg:w="1"/><text x="39.9440%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="39.7746%" y="645" width="0.0805%" height="15" fill="rgb(205,161,48)" fg:x="494" fg:w="1"/><text x="40.0246%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="39.8551%" y="645" width="0.0805%" height="15" fill="rgb(241,139,8)" fg:x="495" fg:w="1"/><text x="40.1051%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9356%" y="645" width="0.0805%" height="15" fill="rgb(246,159,53)" fg:x="496" fg:w="1"/><text x="40.1856%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="40.0161%" y="645" width="0.1610%" height="15" fill="rgb(212,62,27)" fg:x="497" fg:w="2"/><text x="40.2661%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.0161%" y="629" width="0.1610%" height="15" fill="rgb(216,168,18)" fg:x="497" fg:w="2"/><text x="40.2661%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.0161%" y="613" width="0.1610%" height="15" fill="rgb(228,136,50)" fg:x="497" fg:w="2"/><text x="40.2661%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="40.0161%" y="597" width="0.1610%" height="15" fill="rgb(237,19,45)" fg:x="497" fg:w="2"/><text x="40.2661%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="40.0161%" y="581" width="0.1610%" height="15" fill="rgb(249,150,28)" fg:x="497" fg:w="2"/><text x="40.2661%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="40.0161%" y="565" width="0.1610%" height="15" fill="rgb(236,179,39)" fg:x="497" fg:w="2"/><text x="40.2661%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.0161%" y="549" width="0.1610%" height="15" fill="rgb(250,113,27)" fg:x="497" fg:w="2"/><text x="40.2661%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.0161%" y="533" width="0.1610%" height="15" fill="rgb(223,13,14)" fg:x="497" fg:w="2"/><text x="40.2661%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="40.0161%" y="517" width="0.1610%" height="15" fill="rgb(226,68,24)" fg:x="497" fg:w="2"/><text x="40.2661%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="40.0161%" y="501" width="0.1610%" height="15" fill="rgb(239,40,50)" fg:x="497" fg:w="2"/><text x="40.2661%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="40.0161%" y="485" width="0.1610%" height="15" fill="rgb(209,187,0)" fg:x="497" fg:w="2"/><text x="40.2661%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="40.0161%" y="469" width="0.1610%" height="15" fill="rgb(240,61,8)" fg:x="497" fg:w="2"/><text x="40.2661%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.0161%" y="453" width="0.1610%" height="15" fill="rgb(236,137,5)" fg:x="497" fg:w="2"/><text x="40.2661%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.1771%" y="645" width="0.0805%" height="15" fill="rgb(247,214,21)" fg:x="499" fg:w="1"/><text x="40.4271%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1771%" y="629" width="0.0805%" height="15" fill="rgb(244,115,25)" fg:x="499" fg:w="1"/><text x="40.4271%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.2576%" y="629" width="0.0805%" height="15" fill="rgb(230,58,38)" fg:x="500" fg:w="1"/><text x="40.5076%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="40.2576%" y="613" width="0.0805%" height="15" fill="rgb(206,122,6)" fg:x="500" fg:w="1"/><text x="40.5076%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.2576%" y="597" width="0.0805%" height="15" fill="rgb(217,135,53)" fg:x="500" fg:w="1"/><text x="40.5076%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.2576%" y="581" width="0.0805%" height="15" fill="rgb(225,120,8)" fg:x="500" fg:w="1"/><text x="40.5076%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.3382%" y="629" width="0.0805%" height="15" fill="rgb(226,3,30)" fg:x="501" fg:w="1"/><text x="40.5882%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="40.4187%" y="629" width="0.2415%" height="15" fill="rgb(214,159,38)" fg:x="502" fg:w="3"/><text x="40.6687%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="40.4187%" y="613" width="0.2415%" height="15" fill="rgb(242,182,47)" fg:x="502" fg:w="3"/><text x="40.6687%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="40.7407%" y="597" width="0.0805%" height="15" fill="rgb(245,202,26)" fg:x="506" fg:w="1"/><text x="40.9907%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::intersection (1 samples, 0.08%)</title><rect x="40.8213%" y="597" width="0.0805%" height="15" fill="rgb(226,163,3)" fg:x="507" fg:w="1"/><text x="41.0713%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (37 samples, 2.98%)</title><rect x="38.0032%" y="693" width="2.9791%" height="15" fill="rgb(219,4,4)" fg:x="472" fg:w="37"/><text x="38.2532%" y="703.50">&lt;ke..</text></g><g><title>treediff::diff::diff (22 samples, 1.77%)</title><rect x="39.2110%" y="677" width="1.7713%" height="15" fill="rgb(223,85,4)" fg:x="487" fg:w="22"/><text x="39.4610%" y="687.50">t..</text></g><g><title>treediff::diff::diff (15 samples, 1.21%)</title><rect x="39.7746%" y="661" width="1.2077%" height="15" fill="rgb(242,170,11)" fg:x="494" fg:w="15"/><text x="40.0246%" y="671.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="40.2576%" y="645" width="0.7246%" height="15" fill="rgb(221,97,42)" fg:x="500" fg:w="9"/><text x="40.5076%" y="655.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="40.6602%" y="629" width="0.3221%" height="15" fill="rgb(231,206,45)" fg:x="505" fg:w="4"/><text x="40.9102%" y="639.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="40.6602%" y="613" width="0.3221%" height="15" fill="rgb(216,23,48)" fg:x="505" fg:w="4"/><text x="40.9102%" y="623.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="40.9018%" y="597" width="0.0805%" height="15" fill="rgb(225,49,9)" fg:x="508" fg:w="1"/><text x="41.1518%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9018%" y="581" width="0.0805%" height="15" fill="rgb(247,24,47)" fg:x="508" fg:w="1"/><text x="41.1518%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="40.9823%" y="677" width="0.0805%" height="15" fill="rgb(253,145,10)" fg:x="509" fg:w="1"/><text x="41.2323%" y="687.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="41.3043%" y="661" width="0.3221%" height="15" fill="rgb(206,62,10)" fg:x="513" fg:w="4"/><text x="41.5543%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="41.6264%" y="661" width="0.3221%" height="15" fill="rgb(224,159,31)" fg:x="517" fg:w="4"/><text x="41.8764%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.8680%" y="645" width="0.0805%" height="15" fill="rgb(234,184,15)" fg:x="520" fg:w="1"/><text x="42.1180%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8680%" y="629" width="0.0805%" height="15" fill="rgb(237,101,1)" fg:x="520" fg:w="1"/><text x="42.1180%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="41.9485%" y="661" width="0.3221%" height="15" fill="rgb(211,99,29)" fg:x="521" fg:w="4"/><text x="42.1985%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="42.0290%" y="645" width="0.2415%" height="15" fill="rgb(250,167,3)" fg:x="522" fg:w="3"/><text x="42.2790%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1900%" y="629" width="0.0805%" height="15" fill="rgb(225,58,6)" fg:x="524" fg:w="1"/><text x="42.4400%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.6731%" y="565" width="0.1610%" height="15" fill="rgb(251,161,21)" fg:x="530" fg:w="2"/><text x="42.9231%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7536%" y="549" width="0.0805%" height="15" fill="rgb(253,203,35)" fg:x="531" fg:w="1"/><text x="43.0036%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7536%" y="533" width="0.0805%" height="15" fill="rgb(214,220,52)" fg:x="531" fg:w="1"/><text x="43.0036%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="42.5121%" y="613" width="0.4026%" height="15" fill="rgb(235,216,33)" fg:x="528" fg:w="5"/><text x="42.7621%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="42.5121%" y="597" width="0.4026%" height="15" fill="rgb(231,79,26)" fg:x="528" fg:w="5"/><text x="42.7621%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="42.5926%" y="581" width="0.3221%" height="15" fill="rgb(244,218,10)" fg:x="529" fg:w="4"/><text x="42.8426%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="42.8341%" y="565" width="0.0805%" height="15" fill="rgb(238,15,9)" fg:x="532" fg:w="1"/><text x="43.0841%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.3172%" y="549" width="0.0805%" height="15" fill="rgb(235,112,15)" fg:x="538" fg:w="1"/><text x="43.5672%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.3172%" y="581" width="0.1610%" height="15" fill="rgb(239,126,18)" fg:x="538" fg:w="2"/><text x="43.5672%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.3172%" y="565" width="0.1610%" height="15" fill="rgb(253,171,19)" fg:x="538" fg:w="2"/><text x="43.5672%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="43.3977%" y="549" width="0.0805%" height="15" fill="rgb(237,218,25)" fg:x="539" fg:w="1"/><text x="43.6477%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="43.3977%" y="533" width="0.0805%" height="15" fill="rgb(213,88,46)" fg:x="539" fg:w="1"/><text x="43.6477%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.5250%" y="485" width="0.0805%" height="15" fill="rgb(222,124,54)" fg:x="553" fg:w="1"/><text x="44.7750%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="44.4444%" y="517" width="0.3221%" height="15" fill="rgb(209,206,42)" fg:x="552" fg:w="4"/><text x="44.6944%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.5250%" y="501" width="0.2415%" height="15" fill="rgb(219,25,49)" fg:x="553" fg:w="3"/><text x="44.7750%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="44.6055%" y="485" width="0.1610%" height="15" fill="rgb(228,207,53)" fg:x="554" fg:w="2"/><text x="44.8555%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (51 samples, 4.11%)</title><rect x="40.9823%" y="693" width="4.1063%" height="15" fill="rgb(224,3,4)" fg:x="509" fg:w="51"/><text x="41.2323%" y="703.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (50 samples, 4.03%)</title><rect x="41.0628%" y="677" width="4.0258%" height="15" fill="rgb(254,206,26)" fg:x="510" fg:w="50"/><text x="41.3128%" y="687.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (35 samples, 2.82%)</title><rect x="42.2705%" y="661" width="2.8180%" height="15" fill="rgb(209,4,26)" fg:x="525" fg:w="35"/><text x="42.5205%" y="671.50">se..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 2.66%)</title><rect x="42.4316%" y="645" width="2.6570%" height="15" fill="rgb(243,193,32)" fg:x="527" fg:w="33"/><text x="42.6816%" y="655.50">&lt;s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (33 samples, 2.66%)</title><rect x="42.4316%" y="629" width="2.6570%" height="15" fill="rgb(225,150,36)" fg:x="527" fg:w="33"/><text x="42.6816%" y="639.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (27 samples, 2.17%)</title><rect x="42.9147%" y="613" width="2.1739%" height="15" fill="rgb(225,131,26)" fg:x="533" fg:w="27"/><text x="43.1647%" y="623.50">s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 1.77%)</title><rect x="43.3172%" y="597" width="1.7713%" height="15" fill="rgb(236,126,12)" fg:x="538" fg:w="22"/><text x="43.5672%" y="607.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.61%)</title><rect x="43.4783%" y="581" width="1.6103%" height="15" fill="rgb(238,167,44)" fg:x="540" fg:w="20"/><text x="43.7283%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.45%)</title><rect x="43.6393%" y="565" width="1.4493%" height="15" fill="rgb(238,153,31)" fg:x="542" fg:w="18"/><text x="43.8893%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.21%)</title><rect x="43.8808%" y="549" width="1.2077%" height="15" fill="rgb(254,41,51)" fg:x="545" fg:w="15"/><text x="44.1308%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="44.1224%" y="533" width="0.9662%" height="15" fill="rgb(224,100,52)" fg:x="548" fg:w="12"/><text x="44.3724%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="44.7665%" y="517" width="0.3221%" height="15" fill="rgb(246,226,38)" fg:x="556" fg:w="4"/><text x="45.0165%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="44.8470%" y="501" width="0.2415%" height="15" fill="rgb(252,21,43)" fg:x="557" fg:w="3"/><text x="45.0970%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.8470%" y="485" width="0.2415%" height="15" fill="rgb(250,44,8)" fg:x="557" fg:w="3"/><text x="45.0970%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.8470%" y="469" width="0.2415%" height="15" fill="rgb(224,200,45)" fg:x="557" fg:w="3"/><text x="45.0970%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="44.8470%" y="453" width="0.2415%" height="15" fill="rgb(208,75,52)" fg:x="557" fg:w="3"/><text x="45.0970%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="45.4911%" y="549" width="0.1610%" height="15" fill="rgb(213,167,20)" fg:x="565" fg:w="2"/><text x="45.7411%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.4911%" y="533" width="0.1610%" height="15" fill="rgb(236,163,42)" fg:x="565" fg:w="2"/><text x="45.7411%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.5717%" y="517" width="0.0805%" height="15" fill="rgb(210,98,31)" fg:x="566" fg:w="1"/><text x="45.8217%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.7327%" y="421" width="0.0805%" height="15" fill="rgb(246,166,15)" fg:x="568" fg:w="1"/><text x="45.9827%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="45.7327%" y="437" width="0.1610%" height="15" fill="rgb(214,114,7)" fg:x="568" fg:w="2"/><text x="45.9827%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8132%" y="421" width="0.0805%" height="15" fill="rgb(217,202,34)" fg:x="569" fg:w="1"/><text x="46.0632%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="45.7327%" y="469" width="0.2415%" height="15" fill="rgb(227,226,29)" fg:x="568" fg:w="3"/><text x="45.9827%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="45.7327%" y="453" width="0.2415%" height="15" fill="rgb(254,65,44)" fg:x="568" fg:w="3"/><text x="45.9827%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.8937%" y="437" width="0.0805%" height="15" fill="rgb(213,150,32)" fg:x="570" fg:w="1"/><text x="46.1437%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.8937%" y="421" width="0.0805%" height="15" fill="rgb(208,86,46)" fg:x="570" fg:w="1"/><text x="46.1437%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8937%" y="405" width="0.0805%" height="15" fill="rgb(222,75,3)" fg:x="570" fg:w="1"/><text x="46.1437%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="45.6522%" y="533" width="0.4831%" height="15" fill="rgb(225,213,9)" fg:x="567" fg:w="6"/><text x="45.9022%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="45.6522%" y="517" width="0.4831%" height="15" fill="rgb(209,199,10)" fg:x="567" fg:w="6"/><text x="45.9022%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="45.6522%" y="501" width="0.4831%" height="15" fill="rgb(213,18,17)" fg:x="567" fg:w="6"/><text x="45.9022%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="45.7327%" y="485" width="0.4026%" height="15" fill="rgb(243,79,44)" fg:x="568" fg:w="5"/><text x="45.9827%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.9742%" y="469" width="0.1610%" height="15" fill="rgb(226,20,5)" fg:x="571" fg:w="2"/><text x="46.2242%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.9742%" y="453" width="0.1610%" height="15" fill="rgb(217,52,31)" fg:x="571" fg:w="2"/><text x="46.2242%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.0548%" y="437" width="0.0805%" height="15" fill="rgb(229,42,7)" fg:x="572" fg:w="1"/><text x="46.3048%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="45.6522%" y="549" width="0.6441%" height="15" fill="rgb(206,118,29)" fg:x="567" fg:w="8"/><text x="45.9022%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.1353%" y="533" width="0.1610%" height="15" fill="rgb(248,132,44)" fg:x="573" fg:w="2"/><text x="46.3853%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2158%" y="517" width="0.0805%" height="15" fill="rgb(231,56,33)" fg:x="574" fg:w="1"/><text x="46.4658%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2158%" y="501" width="0.0805%" height="15" fill="rgb(208,31,11)" fg:x="574" fg:w="1"/><text x="46.4658%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="45.4106%" y="565" width="0.9662%" height="15" fill="rgb(216,56,33)" fg:x="564" fg:w="12"/><text x="45.6606%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="46.2963%" y="549" width="0.0805%" height="15" fill="rgb(213,100,0)" fg:x="575" fg:w="1"/><text x="46.5463%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.2963%" y="533" width="0.0805%" height="15" fill="rgb(236,166,18)" fg:x="575" fg:w="1"/><text x="46.5463%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2963%" y="517" width="0.0805%" height="15" fill="rgb(251,132,12)" fg:x="575" fg:w="1"/><text x="46.5463%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="46.3768%" y="565" width="0.1610%" height="15" fill="rgb(216,117,7)" fg:x="576" fg:w="2"/><text x="46.6268%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.4573%" y="549" width="0.0805%" height="15" fill="rgb(243,184,8)" fg:x="577" fg:w="1"/><text x="46.7073%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.61%)</title><rect x="45.2496%" y="597" width="1.6103%" height="15" fill="rgb(212,91,32)" fg:x="562" fg:w="20"/><text x="45.4996%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.53%)</title><rect x="45.3301%" y="581" width="1.5298%" height="15" fill="rgb(224,147,15)" fg:x="563" fg:w="19"/><text x="45.5801%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.5378%" y="565" width="0.3221%" height="15" fill="rgb(228,84,10)" fg:x="578" fg:w="4"/><text x="46.7878%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.5378%" y="549" width="0.3221%" height="15" fill="rgb(221,161,22)" fg:x="578" fg:w="4"/><text x="46.7878%" y="559.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="46.5378%" y="533" width="0.3221%" height="15" fill="rgb(250,132,20)" fg:x="578" fg:w="4"/><text x="46.7878%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.8599%" y="597" width="0.0805%" height="15" fill="rgb(209,161,12)" fg:x="582" fg:w="1"/><text x="47.1099%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (24 samples, 1.93%)</title><rect x="45.1691%" y="629" width="1.9324%" height="15" fill="rgb(232,142,42)" fg:x="561" fg:w="24"/><text x="45.4191%" y="639.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24 samples, 1.93%)</title><rect x="45.1691%" y="613" width="1.9324%" height="15" fill="rgb(240,228,27)" fg:x="561" fg:w="24"/><text x="45.4191%" y="623.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.9404%" y="597" width="0.1610%" height="15" fill="rgb(243,0,31)" fg:x="583" fg:w="2"/><text x="47.1904%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.9404%" y="581" width="0.1610%" height="15" fill="rgb(237,100,15)" fg:x="583" fg:w="2"/><text x="47.1904%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.9404%" y="565" width="0.1610%" height="15" fill="rgb(230,26,48)" fg:x="583" fg:w="2"/><text x="47.1904%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.1014%" y="613" width="0.0805%" height="15" fill="rgb(215,7,13)" fg:x="585" fg:w="1"/><text x="47.3514%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.1014%" y="629" width="0.1610%" height="15" fill="rgb(227,172,5)" fg:x="585" fg:w="2"/><text x="47.3514%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1820%" y="613" width="0.0805%" height="15" fill="rgb(248,206,14)" fg:x="586" fg:w="1"/><text x="47.4320%" y="623.50"></text></g><g><title>engine::session::Session::close (213 samples, 17.15%)</title><rect x="30.2738%" y="789" width="17.1498%" height="15" fill="rgb(231,62,54)" fg:x="376" fg:w="213"/><text x="30.5238%" y="799.50">engine::session::Session::c..</text></g><g><title>engine::session::state::State::close (208 samples, 16.75%)</title><rect x="30.6763%" y="773" width="16.7472%" height="15" fill="rgb(222,136,26)" fg:x="381" fg:w="208"/><text x="30.9263%" y="783.50">engine::session::state::St..</text></g><g><title>engine::session::state::State::flush_entities (190 samples, 15.30%)</title><rect x="32.1256%" y="757" width="15.2979%" height="15" fill="rgb(211,115,42)" fg:x="399" fg:w="190"/><text x="32.3756%" y="767.50">engine::session::state:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (185 samples, 14.90%)</title><rect x="32.5282%" y="741" width="14.8953%" height="15" fill="rgb(234,5,17)" fg:x="404" fg:w="185"/><text x="32.7782%" y="751.50">engine::session::intern..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (185 samples, 14.90%)</title><rect x="32.5282%" y="725" width="14.8953%" height="15" fill="rgb(233,67,14)" fg:x="404" fg:w="185"/><text x="32.7782%" y="735.50">engine::session::state:..</text></g><g><title>kernel::model::any_entity_changes (118 samples, 9.50%)</title><rect x="37.9227%" y="709" width="9.5008%" height="15" fill="rgb(225,133,51)" fg:x="471" fg:w="118"/><text x="38.1727%" y="719.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (29 samples, 2.33%)</title><rect x="45.0886%" y="693" width="2.3349%" height="15" fill="rgb(206,107,40)" fg:x="560" fg:w="29"/><text x="45.3386%" y="703.50">s..</text></g><g><title>serde_json::de::from_trait (29 samples, 2.33%)</title><rect x="45.0886%" y="677" width="2.3349%" height="15" fill="rgb(210,56,9)" fg:x="560" fg:w="29"/><text x="45.3386%" y="687.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.33%)</title><rect x="45.0886%" y="661" width="2.3349%" height="15" fill="rgb(222,204,4)" fg:x="560" fg:w="29"/><text x="45.3386%" y="671.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.33%)</title><rect x="45.0886%" y="645" width="2.3349%" height="15" fill="rgb(210,168,3)" fg:x="560" fg:w="29"/><text x="45.3386%" y="655.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.2625%" y="629" width="0.1610%" height="15" fill="rgb(246,183,26)" fg:x="587" fg:w="2"/><text x="47.5125%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3430%" y="613" width="0.0805%" height="15" fill="rgb(228,27,31)" fg:x="588" fg:w="1"/><text x="47.5930%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.5845%" y="725" width="0.0805%" height="15" fill="rgb(206,8,2)" fg:x="591" fg:w="1"/><text x="47.8345%" y="735.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.7456%" y="693" width="0.1610%" height="15" fill="rgb(251,229,16)" fg:x="593" fg:w="2"/><text x="47.9956%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.7456%" y="677" width="0.1610%" height="15" fill="rgb(208,84,44)" fg:x="593" fg:w="2"/><text x="47.9956%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.7456%" y="661" width="0.1610%" height="15" fill="rgb(221,228,13)" fg:x="593" fg:w="2"/><text x="47.9956%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="47.7456%" y="645" width="0.1610%" height="15" fill="rgb(248,42,47)" fg:x="593" fg:w="2"/><text x="47.9956%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="47.7456%" y="629" width="0.1610%" height="15" fill="rgb(222,124,41)" fg:x="593" fg:w="2"/><text x="47.9956%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="47.7456%" y="613" width="0.1610%" height="15" fill="rgb(244,191,35)" fg:x="593" fg:w="2"/><text x="47.9956%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="47.7456%" y="597" width="0.1610%" height="15" fill="rgb(222,223,54)" fg:x="593" fg:w="2"/><text x="47.9956%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="47.7456%" y="581" width="0.1610%" height="15" fill="rgb(248,178,42)" fg:x="593" fg:w="2"/><text x="47.9956%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="47.7456%" y="565" width="0.1610%" height="15" fill="rgb(238,21,24)" fg:x="593" fg:w="2"/><text x="47.9956%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="47.7456%" y="549" width="0.1610%" height="15" fill="rgb(227,134,7)" fg:x="593" fg:w="2"/><text x="47.9956%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="47.7456%" y="533" width="0.1610%" height="15" fill="rgb(205,191,1)" fg:x="593" fg:w="2"/><text x="47.9956%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="47.7456%" y="517" width="0.1610%" height="15" fill="rgb(222,166,30)" fg:x="593" fg:w="2"/><text x="47.9956%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.7456%" y="501" width="0.1610%" height="15" fill="rgb(229,94,26)" fg:x="593" fg:w="2"/><text x="47.9956%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="47.9871%" y="677" width="0.1610%" height="15" fill="rgb(246,97,2)" fg:x="596" fg:w="2"/><text x="48.2371%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.3092%" y="517" width="0.0805%" height="15" fill="rgb(252,112,53)" fg:x="600" fg:w="1"/><text x="48.5592%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.3092%" y="501" width="0.0805%" height="15" fill="rgb(225,52,38)" fg:x="600" fg:w="1"/><text x="48.5592%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.3092%" y="485" width="0.0805%" height="15" fill="rgb(215,203,24)" fg:x="600" fg:w="1"/><text x="48.5592%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.3092%" y="469" width="0.0805%" height="15" fill="rgb(210,122,52)" fg:x="600" fg:w="1"/><text x="48.5592%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3897%" y="517" width="0.0805%" height="15" fill="rgb(209,161,44)" fg:x="601" fg:w="1"/><text x="48.6397%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.4702%" y="421" width="0.0805%" height="15" fill="rgb(221,97,16)" fg:x="602" fg:w="1"/><text x="48.7202%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="48.3092%" y="565" width="0.3221%" height="15" fill="rgb(209,87,13)" fg:x="600" fg:w="4"/><text x="48.5592%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="48.3092%" y="549" width="0.3221%" height="15" fill="rgb(242,1,21)" fg:x="600" fg:w="4"/><text x="48.5592%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="48.3092%" y="533" width="0.3221%" height="15" fill="rgb(251,170,41)" fg:x="600" fg:w="4"/><text x="48.5592%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.4702%" y="517" width="0.1610%" height="15" fill="rgb(227,201,10)" fg:x="602" fg:w="2"/><text x="48.7202%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.4702%" y="501" width="0.1610%" height="15" fill="rgb(231,100,29)" fg:x="602" fg:w="2"/><text x="48.7202%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.4702%" y="485" width="0.1610%" height="15" fill="rgb(226,31,35)" fg:x="602" fg:w="2"/><text x="48.7202%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.4702%" y="469" width="0.1610%" height="15" fill="rgb(254,99,26)" fg:x="602" fg:w="2"/><text x="48.7202%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="48.4702%" y="453" width="0.1610%" height="15" fill="rgb(217,228,17)" fg:x="602" fg:w="2"/><text x="48.7202%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.4702%" y="437" width="0.1610%" height="15" fill="rgb(226,132,8)" fg:x="602" fg:w="2"/><text x="48.7202%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.5507%" y="421" width="0.0805%" height="15" fill="rgb(220,202,47)" fg:x="603" fg:w="1"/><text x="48.8007%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.5507%" y="405" width="0.0805%" height="15" fill="rgb(245,194,10)" fg:x="603" fg:w="1"/><text x="48.8007%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="48.3092%" y="597" width="0.4026%" height="15" fill="rgb(225,44,52)" fg:x="600" fg:w="5"/><text x="48.5592%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="48.3092%" y="581" width="0.4026%" height="15" fill="rgb(235,10,4)" fg:x="600" fg:w="5"/><text x="48.5592%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="48.6312%" y="565" width="0.0805%" height="15" fill="rgb(244,32,23)" fg:x="604" fg:w="1"/><text x="48.8812%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="48.6312%" y="549" width="0.0805%" height="15" fill="rgb(210,115,0)" fg:x="604" fg:w="1"/><text x="48.8812%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.6312%" y="533" width="0.0805%" height="15" fill="rgb(246,72,16)" fg:x="604" fg:w="1"/><text x="48.8812%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.6312%" y="517" width="0.0805%" height="15" fill="rgb(223,32,10)" fg:x="604" fg:w="1"/><text x="48.8812%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6312%" y="501" width="0.0805%" height="15" fill="rgb(223,97,52)" fg:x="604" fg:w="1"/><text x="48.8812%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.6312%" y="485" width="0.0805%" height="15" fill="rgb(238,69,38)" fg:x="604" fg:w="1"/><text x="48.8812%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6312%" y="469" width="0.0805%" height="15" fill="rgb(226,61,1)" fg:x="604" fg:w="1"/><text x="48.8812%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.6312%" y="453" width="0.0805%" height="15" fill="rgb(244,56,14)" fg:x="604" fg:w="1"/><text x="48.8812%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6312%" y="437" width="0.0805%" height="15" fill="rgb(242,164,18)" fg:x="604" fg:w="1"/><text x="48.8812%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.6312%" y="421" width="0.0805%" height="15" fill="rgb(217,130,28)" fg:x="604" fg:w="1"/><text x="48.8812%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6312%" y="405" width="0.0805%" height="15" fill="rgb(218,118,52)" fg:x="604" fg:w="1"/><text x="48.8812%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.6312%" y="389" width="0.0805%" height="15" fill="rgb(251,112,38)" fg:x="604" fg:w="1"/><text x="48.8812%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6312%" y="373" width="0.0805%" height="15" fill="rgb(239,14,50)" fg:x="604" fg:w="1"/><text x="48.8812%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.6312%" y="357" width="0.0805%" height="15" fill="rgb(228,141,54)" fg:x="604" fg:w="1"/><text x="48.8812%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.6312%" y="341" width="0.0805%" height="15" fill="rgb(236,128,15)" fg:x="604" fg:w="1"/><text x="48.8812%" y="351.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="48.7118%" y="581" width="0.0805%" height="15" fill="rgb(206,140,54)" fg:x="605" fg:w="1"/><text x="48.9618%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.7118%" y="565" width="0.0805%" height="15" fill="rgb(240,0,44)" fg:x="605" fg:w="1"/><text x="48.9618%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.7118%" y="549" width="0.0805%" height="15" fill="rgb(243,207,23)" fg:x="605" fg:w="1"/><text x="48.9618%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.7118%" y="533" width="0.0805%" height="15" fill="rgb(247,202,1)" fg:x="605" fg:w="1"/><text x="48.9618%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.7118%" y="517" width="0.0805%" height="15" fill="rgb(239,83,27)" fg:x="605" fg:w="1"/><text x="48.9618%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.7118%" y="501" width="0.0805%" height="15" fill="rgb(219,205,7)" fg:x="605" fg:w="1"/><text x="48.9618%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.7118%" y="485" width="0.0805%" height="15" fill="rgb(249,184,22)" fg:x="605" fg:w="1"/><text x="48.9618%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="48.9533%" y="501" width="0.2415%" height="15" fill="rgb(230,150,14)" fg:x="608" fg:w="3"/><text x="49.2033%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="48.9533%" y="485" width="0.2415%" height="15" fill="rgb(240,118,34)" fg:x="608" fg:w="3"/><text x="49.2033%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="48.9533%" y="469" width="0.2415%" height="15" fill="rgb(227,162,21)" fg:x="608" fg:w="3"/><text x="49.2033%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="48.9533%" y="453" width="0.2415%" height="15" fill="rgb(219,14,9)" fg:x="608" fg:w="3"/><text x="49.2033%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="48.9533%" y="437" width="0.2415%" height="15" fill="rgb(223,226,16)" fg:x="608" fg:w="3"/><text x="49.2033%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="48.9533%" y="421" width="0.2415%" height="15" fill="rgb(246,161,37)" fg:x="608" fg:w="3"/><text x="49.2033%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="48.9533%" y="405" width="0.2415%" height="15" fill="rgb(205,221,43)" fg:x="608" fg:w="3"/><text x="49.2033%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.0338%" y="389" width="0.1610%" height="15" fill="rgb(228,216,26)" fg:x="609" fg:w="2"/><text x="49.2838%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.1948%" y="501" width="0.0805%" height="15" fill="rgb(251,33,17)" fg:x="611" fg:w="1"/><text x="49.4448%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="49.1948%" y="485" width="0.0805%" height="15" fill="rgb(246,126,36)" fg:x="611" fg:w="1"/><text x="49.4448%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1948%" y="469" width="0.0805%" height="15" fill="rgb(217,160,24)" fg:x="611" fg:w="1"/><text x="49.4448%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="49.3559%" y="453" width="0.0805%" height="15" fill="rgb(211,64,12)" fg:x="613" fg:w="1"/><text x="49.6059%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="49.3559%" y="437" width="0.0805%" height="15" fill="rgb(238,47,36)" fg:x="613" fg:w="1"/><text x="49.6059%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (10 samples, 0.81%)</title><rect x="48.7118%" y="597" width="0.8052%" height="15" fill="rgb(210,157,42)" fg:x="605" fg:w="10"/><text x="48.9618%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="48.7923%" y="581" width="0.7246%" height="15" fill="rgb(242,84,39)" fg:x="606" fg:w="9"/><text x="49.0423%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="48.7923%" y="565" width="0.7246%" height="15" fill="rgb(207,65,41)" fg:x="606" fg:w="9"/><text x="49.0423%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="48.8728%" y="549" width="0.6441%" height="15" fill="rgb(246,97,27)" fg:x="607" fg:w="8"/><text x="49.1228%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="48.8728%" y="533" width="0.6441%" height="15" fill="rgb(229,9,43)" fg:x="607" fg:w="8"/><text x="49.1228%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="48.9533%" y="517" width="0.5636%" height="15" fill="rgb(211,82,44)" fg:x="608" fg:w="7"/><text x="49.2033%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.2754%" y="501" width="0.2415%" height="15" fill="rgb(253,45,54)" fg:x="612" fg:w="3"/><text x="49.5254%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="49.2754%" y="485" width="0.2415%" height="15" fill="rgb(235,94,32)" fg:x="612" fg:w="3"/><text x="49.5254%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="49.3559%" y="469" width="0.1610%" height="15" fill="rgb(252,143,1)" fg:x="613" fg:w="2"/><text x="49.6059%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4364%" y="453" width="0.0805%" height="15" fill="rgb(239,164,4)" fg:x="614" fg:w="1"/><text x="49.6864%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.4364%" y="437" width="0.0805%" height="15" fill="rgb(222,25,39)" fg:x="614" fg:w="1"/><text x="49.6864%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="49.5169%" y="581" width="0.0805%" height="15" fill="rgb(234,175,9)" fg:x="615" fg:w="1"/><text x="49.7669%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.5974%" y="453" width="0.0805%" height="15" fill="rgb(247,200,41)" fg:x="616" fg:w="1"/><text x="49.8474%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (18 samples, 1.45%)</title><rect x="48.3092%" y="645" width="1.4493%" height="15" fill="rgb(245,101,27)" fg:x="600" fg:w="18"/><text x="48.5592%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.45%)</title><rect x="48.3092%" y="629" width="1.4493%" height="15" fill="rgb(221,29,7)" fg:x="600" fg:w="18"/><text x="48.5592%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.45%)</title><rect x="48.3092%" y="613" width="1.4493%" height="15" fill="rgb(240,184,10)" fg:x="600" fg:w="18"/><text x="48.5592%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="49.5169%" y="597" width="0.2415%" height="15" fill="rgb(251,85,15)" fg:x="615" fg:w="3"/><text x="49.7669%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="49.5974%" y="581" width="0.1610%" height="15" fill="rgb(252,84,16)" fg:x="616" fg:w="2"/><text x="49.8474%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="49.5974%" y="565" width="0.1610%" height="15" fill="rgb(233,136,6)" fg:x="616" fg:w="2"/><text x="49.8474%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.5974%" y="549" width="0.1610%" height="15" fill="rgb(226,169,30)" fg:x="616" fg:w="2"/><text x="49.8474%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.5974%" y="533" width="0.1610%" height="15" fill="rgb(241,83,18)" fg:x="616" fg:w="2"/><text x="49.8474%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.5974%" y="517" width="0.1610%" height="15" fill="rgb(239,151,5)" fg:x="616" fg:w="2"/><text x="49.8474%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.5974%" y="501" width="0.1610%" height="15" fill="rgb(238,56,13)" fg:x="616" fg:w="2"/><text x="49.8474%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="49.5974%" y="485" width="0.1610%" height="15" fill="rgb(224,100,0)" fg:x="616" fg:w="2"/><text x="49.8474%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.5974%" y="469" width="0.1610%" height="15" fill="rgb(231,168,26)" fg:x="616" fg:w="2"/><text x="49.8474%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.6779%" y="453" width="0.0805%" height="15" fill="rgb(238,110,3)" fg:x="617" fg:w="1"/><text x="49.9279%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.6779%" y="437" width="0.0805%" height="15" fill="rgb(216,190,1)" fg:x="617" fg:w="1"/><text x="49.9279%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.6779%" y="421" width="0.0805%" height="15" fill="rgb(208,130,52)" fg:x="617" fg:w="1"/><text x="49.9279%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.6779%" y="405" width="0.0805%" height="15" fill="rgb(233,74,12)" fg:x="617" fg:w="1"/><text x="49.9279%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="49.6779%" y="389" width="0.0805%" height="15" fill="rgb(248,12,15)" fg:x="617" fg:w="1"/><text x="49.9279%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="49.6779%" y="373" width="0.0805%" height="15" fill="rgb(228,18,29)" fg:x="617" fg:w="1"/><text x="49.9279%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="49.6779%" y="357" width="0.0805%" height="15" fill="rgb(206,153,11)" fg:x="617" fg:w="1"/><text x="49.9279%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.7585%" y="645" width="0.0805%" height="15" fill="rgb(216,50,30)" fg:x="618" fg:w="1"/><text x="50.0085%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.7585%" y="629" width="0.0805%" height="15" fill="rgb(217,20,39)" fg:x="618" fg:w="1"/><text x="50.0085%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (26 samples, 2.09%)</title><rect x="47.9066%" y="693" width="2.0934%" height="15" fill="rgb(232,130,46)" fg:x="595" fg:w="26"/><text x="48.1566%" y="703.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (23 samples, 1.85%)</title><rect x="48.1481%" y="677" width="1.8519%" height="15" fill="rgb(233,141,43)" fg:x="598" fg:w="23"/><text x="48.3981%" y="687.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (22 samples, 1.77%)</title><rect x="48.2287%" y="661" width="1.7713%" height="15" fill="rgb(240,64,34)" fg:x="599" fg:w="22"/><text x="48.4787%" y="671.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.8390%" y="645" width="0.1610%" height="15" fill="rgb(230,28,31)" fg:x="619" fg:w="2"/><text x="50.0890%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.8390%" y="629" width="0.1610%" height="15" fill="rgb(223,56,30)" fg:x="619" fg:w="2"/><text x="50.0890%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9195%" y="613" width="0.0805%" height="15" fill="rgb(248,134,16)" fg:x="620" fg:w="1"/><text x="50.1695%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9195%" y="597" width="0.0805%" height="15" fill="rgb(206,202,4)" fg:x="620" fg:w="1"/><text x="50.1695%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.9195%" y="581" width="0.0805%" height="15" fill="rgb(219,116,48)" fg:x="620" fg:w="1"/><text x="50.1695%" y="591.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (30 samples, 2.42%)</title><rect x="47.7456%" y="709" width="2.4155%" height="15" fill="rgb(224,122,46)" fg:x="593" fg:w="30"/><text x="47.9956%" y="719.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="50.0000%" y="693" width="0.1610%" height="15" fill="rgb(219,114,47)" fg:x="621" fg:w="2"/><text x="50.2500%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="50.0000%" y="677" width="0.1610%" height="15" fill="rgb(244,60,44)" fg:x="621" fg:w="2"/><text x="50.2500%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="50.0000%" y="661" width="0.1610%" height="15" fill="rgb(243,226,25)" fg:x="621" fg:w="2"/><text x="50.2500%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="50.0000%" y="645" width="0.1610%" height="15" fill="rgb(243,101,52)" fg:x="621" fg:w="2"/><text x="50.2500%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="50.0000%" y="629" width="0.1610%" height="15" fill="rgb(207,69,25)" fg:x="621" fg:w="2"/><text x="50.2500%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.0000%" y="613" width="0.1610%" height="15" fill="rgb(222,204,53)" fg:x="621" fg:w="2"/><text x="50.2500%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.0000%" y="597" width="0.1610%" height="15" fill="rgb(234,84,49)" fg:x="621" fg:w="2"/><text x="50.2500%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.0000%" y="581" width="0.1610%" height="15" fill="rgb(233,77,41)" fg:x="621" fg:w="2"/><text x="50.2500%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="50.0000%" y="565" width="0.1610%" height="15" fill="rgb(221,200,42)" fg:x="621" fg:w="2"/><text x="50.2500%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="50.0000%" y="549" width="0.1610%" height="15" fill="rgb(221,29,35)" fg:x="621" fg:w="2"/><text x="50.2500%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="50.0000%" y="533" width="0.1610%" height="15" fill="rgb(221,71,22)" fg:x="621" fg:w="2"/><text x="50.2500%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.0000%" y="517" width="0.1610%" height="15" fill="rgb(216,162,23)" fg:x="621" fg:w="2"/><text x="50.2500%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.0000%" y="501" width="0.1610%" height="15" fill="rgb(248,32,48)" fg:x="621" fg:w="2"/><text x="50.2500%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="50.0000%" y="485" width="0.1610%" height="15" fill="rgb(241,156,30)" fg:x="621" fg:w="2"/><text x="50.2500%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="50.0000%" y="469" width="0.1610%" height="15" fill="rgb(237,196,46)" fg:x="621" fg:w="2"/><text x="50.2500%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="50.0000%" y="453" width="0.1610%" height="15" fill="rgb(216,2,6)" fg:x="621" fg:w="2"/><text x="50.2500%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="50.0000%" y="437" width="0.1610%" height="15" fill="rgb(214,47,16)" fg:x="621" fg:w="2"/><text x="50.2500%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.0000%" y="421" width="0.1610%" height="15" fill="rgb(240,123,13)" fg:x="621" fg:w="2"/><text x="50.2500%" y="431.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1610%" y="709" width="0.0805%" height="15" fill="rgb(206,47,48)" fg:x="623" fg:w="1"/><text x="50.4110%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1610%" y="693" width="0.0805%" height="15" fill="rgb(252,88,27)" fg:x="623" fg:w="1"/><text x="50.4110%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1610%" y="677" width="0.0805%" height="15" fill="rgb(218,105,30)" fg:x="623" fg:w="1"/><text x="50.4110%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.1610%" y="661" width="0.0805%" height="15" fill="rgb(227,52,46)" fg:x="623" fg:w="1"/><text x="50.4110%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.1610%" y="645" width="0.0805%" height="15" fill="rgb(222,190,21)" fg:x="623" fg:w="1"/><text x="50.4110%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.1610%" y="629" width="0.0805%" height="15" fill="rgb(205,86,20)" fg:x="623" fg:w="1"/><text x="50.4110%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1610%" y="613" width="0.0805%" height="15" fill="rgb(233,45,1)" fg:x="623" fg:w="1"/><text x="50.4110%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1610%" y="597" width="0.0805%" height="15" fill="rgb(208,39,6)" fg:x="623" fg:w="1"/><text x="50.4110%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.1610%" y="581" width="0.0805%" height="15" fill="rgb(211,178,22)" fg:x="623" fg:w="1"/><text x="50.4110%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.1610%" y="565" width="0.0805%" height="15" fill="rgb(227,112,23)" fg:x="623" fg:w="1"/><text x="50.4110%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.1610%" y="549" width="0.0805%" height="15" fill="rgb(214,41,4)" fg:x="623" fg:w="1"/><text x="50.4110%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.1610%" y="533" width="0.0805%" height="15" fill="rgb(219,144,46)" fg:x="623" fg:w="1"/><text x="50.4110%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1610%" y="517" width="0.0805%" height="15" fill="rgb(253,176,50)" fg:x="623" fg:w="1"/><text x="50.4110%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="50.2415%" y="709" width="0.1610%" height="15" fill="rgb(206,123,1)" fg:x="624" fg:w="2"/><text x="50.4915%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="50.2415%" y="693" width="0.1610%" height="15" fill="rgb(250,111,32)" fg:x="624" fg:w="2"/><text x="50.4915%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.2415%" y="677" width="0.1610%" height="15" fill="rgb(229,17,49)" fg:x="624" fg:w="2"/><text x="50.4915%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.4831%" y="437" width="0.0805%" height="15" fill="rgb(250,123,19)" fg:x="627" fg:w="1"/><text x="50.7331%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4831%" y="421" width="0.0805%" height="15" fill="rgb(220,124,20)" fg:x="627" fg:w="1"/><text x="50.7331%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="50.4026%" y="469" width="0.2415%" height="15" fill="rgb(242,85,25)" fg:x="626" fg:w="3"/><text x="50.6526%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="50.4026%" y="453" width="0.2415%" height="15" fill="rgb(245,217,7)" fg:x="626" fg:w="3"/><text x="50.6526%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.5636%" y="437" width="0.0805%" height="15" fill="rgb(242,50,25)" fg:x="628" fg:w="1"/><text x="50.8136%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.5636%" y="421" width="0.0805%" height="15" fill="rgb(251,210,24)" fg:x="628" fg:w="1"/><text x="50.8136%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.5636%" y="405" width="0.0805%" height="15" fill="rgb(238,24,8)" fg:x="628" fg:w="1"/><text x="50.8136%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.5636%" y="389" width="0.0805%" height="15" fill="rgb(211,96,19)" fg:x="628" fg:w="1"/><text x="50.8136%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.5636%" y="373" width="0.0805%" height="15" fill="rgb(222,186,12)" fg:x="628" fg:w="1"/><text x="50.8136%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.5636%" y="357" width="0.0805%" height="15" fill="rgb(212,70,49)" fg:x="628" fg:w="1"/><text x="50.8136%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.5636%" y="341" width="0.0805%" height="15" fill="rgb(238,69,49)" fg:x="628" fg:w="1"/><text x="50.8136%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.5636%" y="325" width="0.0805%" height="15" fill="rgb(225,13,3)" fg:x="628" fg:w="1"/><text x="50.8136%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.5636%" y="309" width="0.0805%" height="15" fill="rgb(229,188,14)" fg:x="628" fg:w="1"/><text x="50.8136%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.5636%" y="293" width="0.0805%" height="15" fill="rgb(218,58,16)" fg:x="628" fg:w="1"/><text x="50.8136%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.5636%" y="277" width="0.0805%" height="15" fill="rgb(206,213,49)" fg:x="628" fg:w="1"/><text x="50.8136%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.5636%" y="261" width="0.0805%" height="15" fill="rgb(225,152,48)" fg:x="628" fg:w="1"/><text x="50.8136%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.4026%" y="501" width="0.3221%" height="15" fill="rgb(216,103,42)" fg:x="626" fg:w="4"/><text x="50.6526%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.4026%" y="485" width="0.3221%" height="15" fill="rgb(212,214,39)" fg:x="626" fg:w="4"/><text x="50.6526%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.6441%" y="469" width="0.0805%" height="15" fill="rgb(249,52,41)" fg:x="629" fg:w="1"/><text x="50.8941%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.7246%" y="501" width="0.0805%" height="15" fill="rgb(212,173,53)" fg:x="630" fg:w="1"/><text x="50.9746%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.8052%" y="405" width="0.0805%" height="15" fill="rgb(232,222,21)" fg:x="631" fg:w="1"/><text x="51.0552%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (7 samples, 0.56%)</title><rect x="50.4026%" y="549" width="0.5636%" height="15" fill="rgb(206,228,31)" fg:x="626" fg:w="7"/><text x="50.6526%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="50.4026%" y="533" width="0.5636%" height="15" fill="rgb(231,121,16)" fg:x="626" fg:w="7"/><text x="50.6526%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="50.4026%" y="517" width="0.5636%" height="15" fill="rgb(241,3,23)" fg:x="626" fg:w="7"/><text x="50.6526%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.8052%" y="501" width="0.1610%" height="15" fill="rgb(220,68,37)" fg:x="631" fg:w="2"/><text x="51.0552%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.8052%" y="485" width="0.1610%" height="15" fill="rgb(212,23,49)" fg:x="631" fg:w="2"/><text x="51.0552%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.8052%" y="469" width="0.1610%" height="15" fill="rgb(231,38,8)" fg:x="631" fg:w="2"/><text x="51.0552%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.8052%" y="453" width="0.1610%" height="15" fill="rgb(222,137,29)" fg:x="631" fg:w="2"/><text x="51.0552%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="50.8052%" y="437" width="0.1610%" height="15" fill="rgb(239,8,6)" fg:x="631" fg:w="2"/><text x="51.0552%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.8052%" y="421" width="0.1610%" height="15" fill="rgb(224,142,47)" fg:x="631" fg:w="2"/><text x="51.0552%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.8857%" y="405" width="0.0805%" height="15" fill="rgb(226,67,29)" fg:x="632" fg:w="1"/><text x="51.1357%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.8857%" y="389" width="0.0805%" height="15" fill="rgb(212,144,29)" fg:x="632" fg:w="1"/><text x="51.1357%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9662%" y="501" width="0.0805%" height="15" fill="rgb(252,2,51)" fg:x="633" fg:w="1"/><text x="51.2162%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9662%" y="485" width="0.0805%" height="15" fill="rgb(246,103,52)" fg:x="633" fg:w="1"/><text x="51.2162%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9662%" y="469" width="0.0805%" height="15" fill="rgb(229,229,35)" fg:x="633" fg:w="1"/><text x="51.2162%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9662%" y="453" width="0.0805%" height="15" fill="rgb(209,83,15)" fg:x="633" fg:w="1"/><text x="51.2162%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.9662%" y="437" width="0.0805%" height="15" fill="rgb(218,54,16)" fg:x="633" fg:w="1"/><text x="51.2162%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (9 samples, 0.72%)</title><rect x="50.4026%" y="565" width="0.7246%" height="15" fill="rgb(205,2,26)" fg:x="626" fg:w="9"/><text x="50.6526%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="50.9662%" y="549" width="0.1610%" height="15" fill="rgb(248,180,0)" fg:x="633" fg:w="2"/><text x="51.2162%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="50.9662%" y="533" width="0.1610%" height="15" fill="rgb(231,136,16)" fg:x="633" fg:w="2"/><text x="51.2162%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="50.9662%" y="517" width="0.1610%" height="15" fill="rgb(215,90,4)" fg:x="633" fg:w="2"/><text x="51.2162%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.0467%" y="501" width="0.0805%" height="15" fill="rgb(251,131,3)" fg:x="634" fg:w="1"/><text x="51.2967%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.0467%" y="485" width="0.0805%" height="15" fill="rgb(244,47,21)" fg:x="634" fg:w="1"/><text x="51.2967%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.0467%" y="469" width="0.0805%" height="15" fill="rgb(231,115,9)" fg:x="634" fg:w="1"/><text x="51.2967%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.0467%" y="453" width="0.0805%" height="15" fill="rgb(241,119,20)" fg:x="634" fg:w="1"/><text x="51.2967%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.0467%" y="437" width="0.0805%" height="15" fill="rgb(224,99,0)" fg:x="634" fg:w="1"/><text x="51.2967%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.0467%" y="421" width="0.0805%" height="15" fill="rgb(219,213,18)" fg:x="634" fg:w="1"/><text x="51.2967%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.0467%" y="405" width="0.0805%" height="15" fill="rgb(209,71,34)" fg:x="634" fg:w="1"/><text x="51.2967%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="51.1272%" y="533" width="0.0805%" height="15" fill="rgb(245,203,20)" fg:x="635" fg:w="1"/><text x="51.3772%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.1272%" y="517" width="0.0805%" height="15" fill="rgb(221,44,20)" fg:x="635" fg:w="1"/><text x="51.3772%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.2077%" y="517" width="0.1610%" height="15" fill="rgb(229,97,0)" fg:x="636" fg:w="2"/><text x="51.4577%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.2077%" y="501" width="0.1610%" height="15" fill="rgb(206,56,49)" fg:x="636" fg:w="2"/><text x="51.4577%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.2077%" y="485" width="0.1610%" height="15" fill="rgb(208,216,41)" fg:x="636" fg:w="2"/><text x="51.4577%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2882%" y="469" width="0.0805%" height="15" fill="rgb(231,31,6)" fg:x="637" fg:w="1"/><text x="51.5382%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.2882%" y="453" width="0.0805%" height="15" fill="rgb(239,88,23)" fg:x="637" fg:w="1"/><text x="51.5382%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.2882%" y="437" width="0.0805%" height="15" fill="rgb(227,111,45)" fg:x="637" fg:w="1"/><text x="51.5382%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.2882%" y="421" width="0.0805%" height="15" fill="rgb(207,167,18)" fg:x="637" fg:w="1"/><text x="51.5382%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2882%" y="405" width="0.0805%" height="15" fill="rgb(253,127,17)" fg:x="637" fg:w="1"/><text x="51.5382%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2882%" y="389" width="0.0805%" height="15" fill="rgb(211,229,9)" fg:x="637" fg:w="1"/><text x="51.5382%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.2882%" y="373" width="0.0805%" height="15" fill="rgb(249,25,14)" fg:x="637" fg:w="1"/><text x="51.5382%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.2882%" y="357" width="0.0805%" height="15" fill="rgb(237,177,4)" fg:x="637" fg:w="1"/><text x="51.5382%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.2882%" y="341" width="0.0805%" height="15" fill="rgb(248,163,50)" fg:x="637" fg:w="1"/><text x="51.5382%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.2882%" y="325" width="0.0805%" height="15" fill="rgb(246,67,42)" fg:x="637" fg:w="1"/><text x="51.5382%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2882%" y="309" width="0.0805%" height="15" fill="rgb(228,136,45)" fg:x="637" fg:w="1"/><text x="51.5382%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="51.3688%" y="517" width="0.4026%" height="15" fill="rgb(218,93,4)" fg:x="638" fg:w="5"/><text x="51.6188%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="51.3688%" y="501" width="0.4026%" height="15" fill="rgb(209,82,29)" fg:x="638" fg:w="5"/><text x="51.6188%" y="511.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="51.3688%" y="485" width="0.4026%" height="15" fill="rgb(213,219,38)" fg:x="638" fg:w="5"/><text x="51.6188%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="51.7713%" y="517" width="0.2415%" height="15" fill="rgb(233,212,17)" fg:x="643" fg:w="3"/><text x="52.0213%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.9324%" y="501" width="0.0805%" height="15" fill="rgb(225,65,3)" fg:x="645" fg:w="1"/><text x="52.1824%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="52.0934%" y="501" width="0.1610%" height="15" fill="rgb(226,25,1)" fg:x="647" fg:w="2"/><text x="52.3434%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="52.0934%" y="485" width="0.1610%" height="15" fill="rgb(229,83,27)" fg:x="647" fg:w="2"/><text x="52.3434%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="52.1739%" y="469" width="0.0805%" height="15" fill="rgb(245,80,47)" fg:x="648" fg:w="1"/><text x="52.4239%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="52.1739%" y="453" width="0.0805%" height="15" fill="rgb(213,79,27)" fg:x="648" fg:w="1"/><text x="52.4239%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="437" width="0.0805%" height="15" fill="rgb(232,38,28)" fg:x="648" fg:w="1"/><text x="52.4239%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.1739%" y="421" width="0.0805%" height="15" fill="rgb(253,63,39)" fg:x="648" fg:w="1"/><text x="52.4239%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="405" width="0.0805%" height="15" fill="rgb(222,204,17)" fg:x="648" fg:w="1"/><text x="52.4239%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="389" width="0.0805%" height="15" fill="rgb(254,135,49)" fg:x="648" fg:w="1"/><text x="52.4239%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="373" width="0.0805%" height="15" fill="rgb(226,203,24)" fg:x="648" fg:w="1"/><text x="52.4239%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.1739%" y="357" width="0.0805%" height="15" fill="rgb(225,2,17)" fg:x="648" fg:w="1"/><text x="52.4239%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="341" width="0.0805%" height="15" fill="rgb(234,135,43)" fg:x="648" fg:w="1"/><text x="52.4239%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="325" width="0.0805%" height="15" fill="rgb(224,14,46)" fg:x="648" fg:w="1"/><text x="52.4239%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.1739%" y="309" width="0.0805%" height="15" fill="rgb(206,42,0)" fg:x="648" fg:w="1"/><text x="52.4239%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.1739%" y="293" width="0.0805%" height="15" fill="rgb(244,38,23)" fg:x="648" fg:w="1"/><text x="52.4239%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="52.2544%" y="501" width="0.0805%" height="15" fill="rgb(230,25,21)" fg:x="649" fg:w="1"/><text x="52.5044%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2544%" y="485" width="0.0805%" height="15" fill="rgb(252,217,28)" fg:x="649" fg:w="1"/><text x="52.5044%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3349%" y="437" width="0.0805%" height="15" fill="rgb(251,4,49)" fg:x="650" fg:w="1"/><text x="52.5849%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3349%" y="421" width="0.0805%" height="15" fill="rgb(217,126,31)" fg:x="650" fg:w="1"/><text x="52.5849%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.3349%" y="405" width="0.0805%" height="15" fill="rgb(242,181,33)" fg:x="650" fg:w="1"/><text x="52.5849%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.3349%" y="389" width="0.0805%" height="15" fill="rgb(241,108,6)" fg:x="650" fg:w="1"/><text x="52.5849%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.3349%" y="373" width="0.0805%" height="15" fill="rgb(238,87,39)" fg:x="650" fg:w="1"/><text x="52.5849%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.3349%" y="357" width="0.0805%" height="15" fill="rgb(244,101,49)" fg:x="650" fg:w="1"/><text x="52.5849%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.3349%" y="341" width="0.0805%" height="15" fill="rgb(211,43,42)" fg:x="650" fg:w="1"/><text x="52.5849%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.3349%" y="325" width="0.0805%" height="15" fill="rgb(210,93,2)" fg:x="650" fg:w="1"/><text x="52.5849%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.3349%" y="309" width="0.0805%" height="15" fill="rgb(242,149,32)" fg:x="650" fg:w="1"/><text x="52.5849%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.3349%" y="293" width="0.0805%" height="15" fill="rgb(228,1,6)" fg:x="650" fg:w="1"/><text x="52.5849%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.3349%" y="277" width="0.0805%" height="15" fill="rgb(221,0,20)" fg:x="650" fg:w="1"/><text x="52.5849%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3349%" y="261" width="0.0805%" height="15" fill="rgb(230,39,32)" fg:x="650" fg:w="1"/><text x="52.5849%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.3349%" y="469" width="0.1610%" height="15" fill="rgb(240,89,38)" fg:x="650" fg:w="2"/><text x="52.5849%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.3349%" y="453" width="0.1610%" height="15" fill="rgb(208,221,23)" fg:x="650" fg:w="2"/><text x="52.5849%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4155%" y="437" width="0.0805%" height="15" fill="rgb(220,145,29)" fg:x="651" fg:w="1"/><text x="52.6655%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="52.6570%" y="325" width="0.0805%" height="15" fill="rgb(219,146,23)" fg:x="654" fg:w="1"/><text x="52.9070%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="52.6570%" y="309" width="0.0805%" height="15" fill="rgb(244,114,49)" fg:x="654" fg:w="1"/><text x="52.9070%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.6570%" y="293" width="0.0805%" height="15" fill="rgb(221,17,10)" fg:x="654" fg:w="1"/><text x="52.9070%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.6570%" y="277" width="0.0805%" height="15" fill="rgb(228,133,21)" fg:x="654" fg:w="1"/><text x="52.9070%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.6570%" y="261" width="0.0805%" height="15" fill="rgb(218,81,30)" fg:x="654" fg:w="1"/><text x="52.9070%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.6570%" y="245" width="0.0805%" height="15" fill="rgb(240,29,36)" fg:x="654" fg:w="1"/><text x="52.9070%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.6570%" y="229" width="0.0805%" height="15" fill="rgb(246,0,36)" fg:x="654" fg:w="1"/><text x="52.9070%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="52.5765%" y="357" width="0.2415%" height="15" fill="rgb(217,79,8)" fg:x="653" fg:w="3"/><text x="52.8265%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="52.6570%" y="341" width="0.1610%" height="15" fill="rgb(229,124,44)" fg:x="654" fg:w="2"/><text x="52.9070%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="52.7375%" y="325" width="0.0805%" height="15" fill="rgb(210,187,22)" fg:x="655" fg:w="1"/><text x="52.9875%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="52.7375%" y="309" width="0.0805%" height="15" fill="rgb(212,115,40)" fg:x="655" fg:w="1"/><text x="52.9875%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.7375%" y="293" width="0.0805%" height="15" fill="rgb(210,2,54)" fg:x="655" fg:w="1"/><text x="52.9875%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.7375%" y="277" width="0.0805%" height="15" fill="rgb(227,168,43)" fg:x="655" fg:w="1"/><text x="52.9875%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7375%" y="261" width="0.0805%" height="15" fill="rgb(249,92,8)" fg:x="655" fg:w="1"/><text x="52.9875%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.7375%" y="245" width="0.0805%" height="15" fill="rgb(239,111,35)" fg:x="655" fg:w="1"/><text x="52.9875%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7375%" y="229" width="0.0805%" height="15" fill="rgb(230,126,13)" fg:x="655" fg:w="1"/><text x="52.9875%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.7375%" y="213" width="0.0805%" height="15" fill="rgb(243,116,33)" fg:x="655" fg:w="1"/><text x="52.9875%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7375%" y="197" width="0.0805%" height="15" fill="rgb(246,103,21)" fg:x="655" fg:w="1"/><text x="52.9875%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.7375%" y="181" width="0.0805%" height="15" fill="rgb(237,53,26)" fg:x="655" fg:w="1"/><text x="52.9875%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7375%" y="165" width="0.0805%" height="15" fill="rgb(213,121,15)" fg:x="655" fg:w="1"/><text x="52.9875%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.7375%" y="149" width="0.0805%" height="15" fill="rgb(251,83,35)" fg:x="655" fg:w="1"/><text x="52.9875%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7375%" y="133" width="0.0805%" height="15" fill="rgb(222,79,8)" fg:x="655" fg:w="1"/><text x="52.9875%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.7375%" y="117" width="0.0805%" height="15" fill="rgb(217,74,36)" fg:x="655" fg:w="1"/><text x="52.9875%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.7375%" y="101" width="0.0805%" height="15" fill="rgb(221,14,30)" fg:x="655" fg:w="1"/><text x="52.9875%" y="111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="52.9791%" y="261" width="0.1610%" height="15" fill="rgb(216,221,5)" fg:x="658" fg:w="2"/><text x="53.2291%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="52.9791%" y="245" width="0.1610%" height="15" fill="rgb(236,118,16)" fg:x="658" fg:w="2"/><text x="53.2291%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.1401%" y="245" width="0.0805%" height="15" fill="rgb(243,91,43)" fg:x="660" fg:w="1"/><text x="53.3901%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.2206%" y="229" width="0.0805%" height="15" fill="rgb(231,110,7)" fg:x="661" fg:w="1"/><text x="53.4706%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.2206%" y="213" width="0.0805%" height="15" fill="rgb(217,80,6)" fg:x="661" fg:w="1"/><text x="53.4706%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3011%" y="229" width="0.0805%" height="15" fill="rgb(251,116,7)" fg:x="662" fg:w="1"/><text x="53.5511%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3011%" y="213" width="0.0805%" height="15" fill="rgb(236,70,22)" fg:x="662" fg:w="1"/><text x="53.5511%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.3011%" y="197" width="0.0805%" height="15" fill="rgb(245,13,10)" fg:x="662" fg:w="1"/><text x="53.5511%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="53.4622%" y="181" width="0.2415%" height="15" fill="rgb(233,146,34)" fg:x="664" fg:w="3"/><text x="53.7122%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="53.4622%" y="165" width="0.2415%" height="15" fill="rgb(241,196,34)" fg:x="664" fg:w="3"/><text x="53.7122%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="53.4622%" y="149" width="0.2415%" height="15" fill="rgb(207,150,20)" fg:x="664" fg:w="3"/><text x="53.7122%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="53.4622%" y="133" width="0.2415%" height="15" fill="rgb(251,27,52)" fg:x="664" fg:w="3"/><text x="53.7122%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="53.4622%" y="117" width="0.2415%" height="15" fill="rgb(221,76,2)" fg:x="664" fg:w="3"/><text x="53.7122%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.6232%" y="101" width="0.0805%" height="15" fill="rgb(242,94,41)" fg:x="666" fg:w="1"/><text x="53.8732%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.6232%" y="85" width="0.0805%" height="15" fill="rgb(245,9,8)" fg:x="666" fg:w="1"/><text x="53.8732%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6232%" y="69" width="0.0805%" height="15" fill="rgb(236,139,26)" fg:x="666" fg:w="1"/><text x="53.8732%" y="79.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="53.3816%" y="213" width="0.4026%" height="15" fill="rgb(249,11,18)" fg:x="663" fg:w="5"/><text x="53.6316%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="53.4622%" y="197" width="0.3221%" height="15" fill="rgb(206,175,35)" fg:x="664" fg:w="4"/><text x="53.7122%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7037%" y="181" width="0.0805%" height="15" fill="rgb(231,3,46)" fg:x="667" fg:w="1"/><text x="53.9537%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="52.9791%" y="277" width="0.8857%" height="15" fill="rgb(243,27,8)" fg:x="658" fg:w="11"/><text x="53.2291%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="53.1401%" y="261" width="0.7246%" height="15" fill="rgb(223,53,13)" fg:x="660" fg:w="9"/><text x="53.3901%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="53.2206%" y="245" width="0.6441%" height="15" fill="rgb(248,68,15)" fg:x="661" fg:w="8"/><text x="53.4706%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="53.3816%" y="229" width="0.4831%" height="15" fill="rgb(216,61,26)" fg:x="663" fg:w="6"/><text x="53.6316%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.7842%" y="213" width="0.0805%" height="15" fill="rgb(213,201,24)" fg:x="668" fg:w="1"/><text x="54.0342%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.7842%" y="197" width="0.0805%" height="15" fill="rgb(214,20,17)" fg:x="668" fg:w="1"/><text x="54.0342%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.7842%" y="181" width="0.0805%" height="15" fill="rgb(206,21,46)" fg:x="668" fg:w="1"/><text x="54.0342%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7842%" y="165" width="0.0805%" height="15" fill="rgb(234,222,24)" fg:x="668" fg:w="1"/><text x="54.0342%" y="175.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.13%)</title><rect x="52.8180%" y="341" width="1.1272%" height="15" fill="rgb(221,25,26)" fg:x="656" fg:w="14"/><text x="53.0680%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.05%)</title><rect x="52.8986%" y="325" width="1.0467%" height="15" fill="rgb(241,148,26)" fg:x="657" fg:w="13"/><text x="53.1486%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="52.8986%" y="309" width="1.0467%" height="15" fill="rgb(248,119,35)" fg:x="657" fg:w="13"/><text x="53.1486%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.05%)</title><rect x="52.8986%" y="293" width="1.0467%" height="15" fill="rgb(239,126,23)" fg:x="657" fg:w="13"/><text x="53.1486%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8647%" y="277" width="0.0805%" height="15" fill="rgb(247,120,25)" fg:x="669" fg:w="1"/><text x="54.1147%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.1868%" y="309" width="0.0805%" height="15" fill="rgb(220,93,32)" fg:x="673" fg:w="1"/><text x="54.4368%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.1868%" y="293" width="0.0805%" height="15" fill="rgb(236,46,26)" fg:x="673" fg:w="1"/><text x="54.4368%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2673%" y="309" width="0.0805%" height="15" fill="rgb(229,20,45)" fg:x="674" fg:w="1"/><text x="54.5173%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3478%" y="277" width="0.0805%" height="15" fill="rgb(225,168,41)" fg:x="675" fg:w="1"/><text x="54.5978%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3478%" y="261" width="0.0805%" height="15" fill="rgb(253,123,20)" fg:x="675" fg:w="1"/><text x="54.5978%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.4283%" y="197" width="0.0805%" height="15" fill="rgb(244,17,29)" fg:x="676" fg:w="1"/><text x="54.6783%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.4283%" y="181" width="0.0805%" height="15" fill="rgb(242,196,24)" fg:x="676" fg:w="1"/><text x="54.6783%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.4283%" y="165" width="0.0805%" height="15" fill="rgb(210,113,45)" fg:x="676" fg:w="1"/><text x="54.6783%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.4283%" y="149" width="0.0805%" height="15" fill="rgb(205,129,3)" fg:x="676" fg:w="1"/><text x="54.6783%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="54.4283%" y="229" width="0.2415%" height="15" fill="rgb(232,74,10)" fg:x="676" fg:w="3"/><text x="54.6783%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.4283%" y="213" width="0.2415%" height="15" fill="rgb(251,63,43)" fg:x="676" fg:w="3"/><text x="54.6783%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="54.5089%" y="197" width="0.1610%" height="15" fill="rgb(228,215,15)" fg:x="677" fg:w="2"/><text x="54.7589%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="54.4283%" y="261" width="0.3221%" height="15" fill="rgb(233,179,38)" fg:x="676" fg:w="4"/><text x="54.6783%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="54.4283%" y="245" width="0.3221%" height="15" fill="rgb(227,187,9)" fg:x="676" fg:w="4"/><text x="54.6783%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="54.6699%" y="229" width="0.0805%" height="15" fill="rgb(231,89,27)" fg:x="679" fg:w="1"/><text x="54.9199%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.7504%" y="213" width="0.0805%" height="15" fill="rgb(225,117,1)" fg:x="680" fg:w="1"/><text x="55.0004%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="54.7504%" y="261" width="0.1610%" height="15" fill="rgb(239,120,49)" fg:x="680" fg:w="2"/><text x="55.0004%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="54.7504%" y="245" width="0.1610%" height="15" fill="rgb(236,137,37)" fg:x="680" fg:w="2"/><text x="55.0004%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="54.7504%" y="229" width="0.1610%" height="15" fill="rgb(239,73,42)" fg:x="680" fg:w="2"/><text x="55.0004%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.8309%" y="213" width="0.0805%" height="15" fill="rgb(207,169,6)" fg:x="681" fg:w="1"/><text x="55.0809%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.8309%" y="197" width="0.0805%" height="15" fill="rgb(228,171,10)" fg:x="681" fg:w="1"/><text x="55.0809%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.8309%" y="181" width="0.0805%" height="15" fill="rgb(217,228,47)" fg:x="681" fg:w="1"/><text x="55.0809%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.9114%" y="229" width="0.0805%" height="15" fill="rgb(227,116,17)" fg:x="682" fg:w="1"/><text x="55.1614%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.9919%" y="181" width="0.1610%" height="15" fill="rgb(245,128,36)" fg:x="683" fg:w="2"/><text x="55.2419%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.0725%" y="165" width="0.0805%" height="15" fill="rgb(221,139,3)" fg:x="684" fg:w="1"/><text x="55.3225%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.0725%" y="149" width="0.0805%" height="15" fill="rgb(207,59,54)" fg:x="684" fg:w="1"/><text x="55.3225%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.97%)</title><rect x="54.3478%" y="309" width="0.9662%" height="15" fill="rgb(231,129,12)" fg:x="675" fg:w="12"/><text x="54.5978%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="54.3478%" y="293" width="0.9662%" height="15" fill="rgb(235,49,17)" fg:x="675" fg:w="12"/><text x="54.5978%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.89%)</title><rect x="54.4283%" y="277" width="0.8857%" height="15" fill="rgb(229,175,11)" fg:x="676" fg:w="11"/><text x="54.6783%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="54.9114%" y="261" width="0.4026%" height="15" fill="rgb(206,187,30)" fg:x="682" fg:w="5"/><text x="55.1614%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="54.9114%" y="245" width="0.4026%" height="15" fill="rgb(214,39,19)" fg:x="682" fg:w="5"/><text x="55.1614%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="54.9919%" y="229" width="0.3221%" height="15" fill="rgb(243,92,46)" fg:x="683" fg:w="4"/><text x="55.2419%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="54.9919%" y="213" width="0.3221%" height="15" fill="rgb(240,125,36)" fg:x="683" fg:w="4"/><text x="55.2419%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="54.9919%" y="197" width="0.3221%" height="15" fill="rgb(217,193,45)" fg:x="683" fg:w="4"/><text x="55.2419%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="55.1530%" y="181" width="0.1610%" height="15" fill="rgb(230,127,16)" fg:x="685" fg:w="2"/><text x="55.4030%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2335%" y="165" width="0.0805%" height="15" fill="rgb(208,161,0)" fg:x="686" fg:w="1"/><text x="55.4835%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.2335%" y="149" width="0.0805%" height="15" fill="rgb(251,69,39)" fg:x="686" fg:w="1"/><text x="55.4835%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="55.2335%" y="133" width="0.0805%" height="15" fill="rgb(229,86,22)" fg:x="686" fg:w="1"/><text x="55.4835%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2335%" y="117" width="0.0805%" height="15" fill="rgb(223,67,43)" fg:x="686" fg:w="1"/><text x="55.4835%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.2335%" y="101" width="0.0805%" height="15" fill="rgb(254,80,31)" fg:x="686" fg:w="1"/><text x="55.4835%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="55.2335%" y="85" width="0.0805%" height="15" fill="rgb(225,149,52)" fg:x="686" fg:w="1"/><text x="55.4835%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (33 samples, 2.66%)</title><rect x="52.8180%" y="357" width="2.6570%" height="15" fill="rgb(214,169,18)" fg:x="656" fg:w="33"/><text x="53.0680%" y="367.50">&lt;k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (19 samples, 1.53%)</title><rect x="53.9452%" y="341" width="1.5298%" height="15" fill="rgb(236,224,43)" fg:x="670" fg:w="19"/><text x="54.1952%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (18 samples, 1.45%)</title><rect x="54.0258%" y="325" width="1.4493%" height="15" fill="rgb(251,125,34)" fg:x="671" fg:w="18"/><text x="54.2758%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.3140%" y="309" width="0.1610%" height="15" fill="rgb(224,39,44)" fg:x="687" fg:w="2"/><text x="55.5640%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.3140%" y="293" width="0.1610%" height="15" fill="rgb(206,111,46)" fg:x="687" fg:w="2"/><text x="55.5640%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="55.3945%" y="277" width="0.0805%" height="15" fill="rgb(227,147,50)" fg:x="688" fg:w="1"/><text x="55.6445%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="55.3945%" y="261" width="0.0805%" height="15" fill="rgb(239,144,36)" fg:x="688" fg:w="1"/><text x="55.6445%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.6361%" y="213" width="0.0805%" height="15" fill="rgb(216,17,19)" fg:x="691" fg:w="1"/><text x="55.8861%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.6361%" y="197" width="0.0805%" height="15" fill="rgb(211,192,29)" fg:x="691" fg:w="1"/><text x="55.8861%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="55.4750%" y="357" width="0.3221%" height="15" fill="rgb(238,195,20)" fg:x="689" fg:w="4"/><text x="55.7250%" y="367.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="55.4750%" y="341" width="0.3221%" height="15" fill="rgb(213,210,42)" fg:x="689" fg:w="4"/><text x="55.7250%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="55.4750%" y="325" width="0.3221%" height="15" fill="rgb(244,4,49)" fg:x="689" fg:w="4"/><text x="55.7250%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="55.5556%" y="309" width="0.2415%" height="15" fill="rgb(254,106,42)" fg:x="690" fg:w="3"/><text x="55.8056%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.5556%" y="293" width="0.2415%" height="15" fill="rgb(222,182,12)" fg:x="690" fg:w="3"/><text x="55.8056%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.6361%" y="277" width="0.1610%" height="15" fill="rgb(228,160,15)" fg:x="691" fg:w="2"/><text x="55.8861%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.6361%" y="261" width="0.1610%" height="15" fill="rgb(243,149,43)" fg:x="691" fg:w="2"/><text x="55.8861%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="55.6361%" y="245" width="0.1610%" height="15" fill="rgb(245,150,32)" fg:x="691" fg:w="2"/><text x="55.8861%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.6361%" y="229" width="0.1610%" height="15" fill="rgb(205,43,19)" fg:x="691" fg:w="2"/><text x="55.8861%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.7166%" y="213" width="0.0805%" height="15" fill="rgb(249,189,35)" fg:x="692" fg:w="1"/><text x="55.9666%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.7166%" y="197" width="0.0805%" height="15" fill="rgb(223,9,0)" fg:x="692" fg:w="1"/><text x="55.9666%" y="207.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="55.7166%" y="181" width="0.0805%" height="15" fill="rgb(213,142,45)" fg:x="692" fg:w="1"/><text x="55.9666%" y="191.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="55.7971%" y="293" width="0.5636%" height="15" fill="rgb(208,148,2)" fg:x="693" fg:w="7"/><text x="56.0471%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (49 samples, 3.95%)</title><rect x="52.4960%" y="389" width="3.9452%" height="15" fill="rgb(207,191,42)" fg:x="652" fg:w="49"/><text x="52.7460%" y="399.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (49 samples, 3.95%)</title><rect x="52.4960%" y="373" width="3.9452%" height="15" fill="rgb(215,218,38)" fg:x="652" fg:w="49"/><text x="52.7460%" y="383.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (8 samples, 0.64%)</title><rect x="55.7971%" y="357" width="0.6441%" height="15" fill="rgb(223,195,24)" fg:x="693" fg:w="8"/><text x="56.0471%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="55.7971%" y="341" width="0.6441%" height="15" fill="rgb(254,60,30)" fg:x="693" fg:w="8"/><text x="56.0471%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.64%)</title><rect x="55.7971%" y="325" width="0.6441%" height="15" fill="rgb(223,2,9)" fg:x="693" fg:w="8"/><text x="56.0471%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.64%)</title><rect x="55.7971%" y="309" width="0.6441%" height="15" fill="rgb(253,134,46)" fg:x="693" fg:w="8"/><text x="56.0471%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.3607%" y="293" width="0.0805%" height="15" fill="rgb(206,209,20)" fg:x="700" fg:w="1"/><text x="56.6107%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (50 samples, 4.03%)</title><rect x="52.4960%" y="469" width="4.0258%" height="15" fill="rgb(253,104,42)" fg:x="652" fg:w="50"/><text x="52.7460%" y="479.50">&lt;plu..</text></g><g><title>core::iter::adapters::try_process (50 samples, 4.03%)</title><rect x="52.4960%" y="453" width="4.0258%" height="15" fill="rgb(223,47,23)" fg:x="652" fg:w="50"/><text x="52.7460%" y="463.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 4.03%)</title><rect x="52.4960%" y="437" width="4.0258%" height="15" fill="rgb(247,148,44)" fg:x="652" fg:w="50"/><text x="52.7460%" y="447.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 4.03%)</title><rect x="52.4960%" y="421" width="4.0258%" height="15" fill="rgb(221,224,16)" fg:x="652" fg:w="50"/><text x="52.7460%" y="431.50">&lt;cor..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (50 samples, 4.03%)</title><rect x="52.4960%" y="405" width="4.0258%" height="15" fill="rgb(252,103,29)" fg:x="652" fg:w="50"/><text x="52.7460%" y="415.50">&lt;eng..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="56.4412%" y="389" width="0.0805%" height="15" fill="rgb(244,185,34)" fg:x="701" fg:w="1"/><text x="56.6912%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4412%" y="373" width="0.0805%" height="15" fill="rgb(218,18,50)" fg:x="701" fg:w="1"/><text x="56.6912%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4412%" y="357" width="0.0805%" height="15" fill="rgb(234,105,8)" fg:x="701" fg:w="1"/><text x="56.6912%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.4412%" y="341" width="0.0805%" height="15" fill="rgb(249,51,19)" fg:x="701" fg:w="1"/><text x="56.6912%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.4412%" y="325" width="0.0805%" height="15" fill="rgb(233,132,7)" fg:x="701" fg:w="1"/><text x="56.6912%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.4412%" y="309" width="0.0805%" height="15" fill="rgb(229,181,43)" fg:x="701" fg:w="1"/><text x="56.6912%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4412%" y="293" width="0.0805%" height="15" fill="rgb(223,20,7)" fg:x="701" fg:w="1"/><text x="56.6912%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4412%" y="277" width="0.0805%" height="15" fill="rgb(245,13,34)" fg:x="701" fg:w="1"/><text x="56.6912%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.4412%" y="261" width="0.0805%" height="15" fill="rgb(242,0,53)" fg:x="701" fg:w="1"/><text x="56.6912%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.4412%" y="245" width="0.0805%" height="15" fill="rgb(233,115,19)" fg:x="701" fg:w="1"/><text x="56.6912%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.4412%" y="229" width="0.0805%" height="15" fill="rgb(216,170,26)" fg:x="701" fg:w="1"/><text x="56.6912%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.4412%" y="213" width="0.0805%" height="15" fill="rgb(233,13,0)" fg:x="701" fg:w="1"/><text x="56.6912%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4412%" y="197" width="0.0805%" height="15" fill="rgb(228,79,21)" fg:x="701" fg:w="1"/><text x="56.6912%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.6023%" y="437" width="0.0805%" height="15" fill="rgb(244,17,41)" fg:x="703" fg:w="1"/><text x="56.8523%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (71 samples, 5.72%)</title><rect x="51.2077%" y="533" width="5.7166%" height="15" fill="rgb(253,152,11)" fg:x="636" fg:w="71"/><text x="51.4577%" y="543.50">plugins..</text></g><g><title>plugins_core::tools::contained_by (61 samples, 4.91%)</title><rect x="52.0129%" y="517" width="4.9114%" height="15" fill="rgb(254,94,47)" fg:x="646" fg:w="61"/><text x="52.2629%" y="527.50">plugin..</text></g><g><title>kernel::model::entry::Entry::scope (57 samples, 4.59%)</title><rect x="52.3349%" y="501" width="4.5894%" height="15" fill="rgb(239,66,43)" fg:x="650" fg:w="57"/><text x="52.5849%" y="511.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (57 samples, 4.59%)</title><rect x="52.3349%" y="485" width="4.5894%" height="15" fill="rgb(251,25,22)" fg:x="650" fg:w="57"/><text x="52.5849%" y="495.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="56.5217%" y="469" width="0.4026%" height="15" fill="rgb(227,65,46)" fg:x="702" fg:w="5"/><text x="56.7717%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="56.5217%" y="453" width="0.4026%" height="15" fill="rgb(240,180,32)" fg:x="702" fg:w="5"/><text x="56.7717%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="56.6828%" y="437" width="0.2415%" height="15" fill="rgb(242,11,35)" fg:x="704" fg:w="3"/><text x="56.9328%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="56.6828%" y="421" width="0.2415%" height="15" fill="rgb(221,41,49)" fg:x="704" fg:w="3"/><text x="56.9328%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="56.7633%" y="405" width="0.1610%" height="15" fill="rgb(253,80,52)" fg:x="705" fg:w="2"/><text x="57.0133%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.7633%" y="389" width="0.1610%" height="15" fill="rgb(232,152,28)" fg:x="705" fg:w="2"/><text x="57.0133%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.7633%" y="373" width="0.1610%" height="15" fill="rgb(219,110,12)" fg:x="705" fg:w="2"/><text x="57.0133%" y="383.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="56.8438%" y="357" width="0.0805%" height="15" fill="rgb(218,98,43)" fg:x="706" fg:w="1"/><text x="57.0938%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.9243%" y="517" width="0.2415%" height="15" fill="rgb(253,96,49)" fg:x="707" fg:w="3"/><text x="57.1743%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.9243%" y="501" width="0.2415%" height="15" fill="rgb(238,132,17)" fg:x="707" fg:w="3"/><text x="57.1743%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.9243%" y="485" width="0.2415%" height="15" fill="rgb(208,82,25)" fg:x="707" fg:w="3"/><text x="57.1743%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.0048%" y="469" width="0.1610%" height="15" fill="rgb(237,77,13)" fg:x="708" fg:w="2"/><text x="57.2548%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.0048%" y="453" width="0.1610%" height="15" fill="rgb(230,6,11)" fg:x="708" fg:w="2"/><text x="57.2548%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.0048%" y="437" width="0.1610%" height="15" fill="rgb(207,29,48)" fg:x="708" fg:w="2"/><text x="57.2548%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.0048%" y="421" width="0.1610%" height="15" fill="rgb(247,105,22)" fg:x="708" fg:w="2"/><text x="57.2548%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.0048%" y="405" width="0.1610%" height="15" fill="rgb(223,114,44)" fg:x="708" fg:w="2"/><text x="57.2548%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.0048%" y="389" width="0.1610%" height="15" fill="rgb(242,3,46)" fg:x="708" fg:w="2"/><text x="57.2548%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.0048%" y="373" width="0.1610%" height="15" fill="rgb(243,197,8)" fg:x="708" fg:w="2"/><text x="57.2548%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.0048%" y="357" width="0.1610%" height="15" fill="rgb(238,171,27)" fg:x="708" fg:w="2"/><text x="57.2548%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.0048%" y="341" width="0.1610%" height="15" fill="rgb(254,144,27)" fg:x="708" fg:w="2"/><text x="57.2548%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.0048%" y="325" width="0.1610%" height="15" fill="rgb(216,203,36)" fg:x="708" fg:w="2"/><text x="57.2548%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.0048%" y="309" width="0.1610%" height="15" fill="rgb(247,27,26)" fg:x="708" fg:w="2"/><text x="57.2548%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="57.1659%" y="517" width="0.0805%" height="15" fill="rgb(234,180,24)" fg:x="710" fg:w="1"/><text x="57.4159%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.1659%" y="501" width="0.0805%" height="15" fill="rgb(221,50,43)" fg:x="710" fg:w="1"/><text x="57.4159%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="57.2464%" y="453" width="0.0805%" height="15" fill="rgb(236,50,6)" fg:x="711" fg:w="1"/><text x="57.4964%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.3269%" y="373" width="0.0805%" height="15" fill="rgb(245,172,32)" fg:x="712" fg:w="1"/><text x="57.5769%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3269%" y="357" width="0.0805%" height="15" fill="rgb(207,54,46)" fg:x="712" fg:w="1"/><text x="57.5769%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3269%" y="341" width="0.0805%" height="15" fill="rgb(218,67,44)" fg:x="712" fg:w="1"/><text x="57.5769%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.3269%" y="325" width="0.0805%" height="15" fill="rgb(208,152,22)" fg:x="712" fg:w="1"/><text x="57.5769%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.3269%" y="309" width="0.0805%" height="15" fill="rgb(243,177,0)" fg:x="712" fg:w="1"/><text x="57.5769%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.3269%" y="293" width="0.0805%" height="15" fill="rgb(212,75,12)" fg:x="712" fg:w="1"/><text x="57.5769%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3269%" y="277" width="0.0805%" height="15" fill="rgb(212,129,29)" fg:x="712" fg:w="1"/><text x="57.5769%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3269%" y="261" width="0.0805%" height="15" fill="rgb(241,229,35)" fg:x="712" fg:w="1"/><text x="57.5769%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.3269%" y="421" width="0.1610%" height="15" fill="rgb(232,49,32)" fg:x="712" fg:w="2"/><text x="57.5769%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.3269%" y="405" width="0.1610%" height="15" fill="rgb(243,119,48)" fg:x="712" fg:w="2"/><text x="57.5769%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.3269%" y="389" width="0.1610%" height="15" fill="rgb(212,205,30)" fg:x="712" fg:w="2"/><text x="57.5769%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4074%" y="373" width="0.0805%" height="15" fill="rgb(218,175,42)" fg:x="713" fg:w="1"/><text x="57.6574%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4074%" y="357" width="0.0805%" height="15" fill="rgb(230,156,27)" fg:x="713" fg:w="1"/><text x="57.6574%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.4074%" y="341" width="0.0805%" height="15" fill="rgb(254,32,43)" fg:x="713" fg:w="1"/><text x="57.6574%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.4074%" y="325" width="0.0805%" height="15" fill="rgb(246,89,34)" fg:x="713" fg:w="1"/><text x="57.6574%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.4074%" y="309" width="0.0805%" height="15" fill="rgb(247,162,17)" fg:x="713" fg:w="1"/><text x="57.6574%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.4074%" y="293" width="0.0805%" height="15" fill="rgb(219,71,37)" fg:x="713" fg:w="1"/><text x="57.6574%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.4074%" y="277" width="0.0805%" height="15" fill="rgb(210,184,7)" fg:x="713" fg:w="1"/><text x="57.6574%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.4074%" y="261" width="0.0805%" height="15" fill="rgb(245,16,32)" fg:x="713" fg:w="1"/><text x="57.6574%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.4074%" y="245" width="0.0805%" height="15" fill="rgb(209,62,7)" fg:x="713" fg:w="1"/><text x="57.6574%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.4074%" y="229" width="0.0805%" height="15" fill="rgb(215,16,15)" fg:x="713" fg:w="1"/><text x="57.6574%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.4074%" y="213" width="0.0805%" height="15" fill="rgb(223,60,14)" fg:x="713" fg:w="1"/><text x="57.6574%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4074%" y="197" width="0.0805%" height="15" fill="rgb(244,134,12)" fg:x="713" fg:w="1"/><text x="57.6574%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.4879%" y="421" width="0.0805%" height="15" fill="rgb(224,3,41)" fg:x="714" fg:w="1"/><text x="57.7379%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.6490%" y="293" width="0.0805%" height="15" fill="rgb(213,84,2)" fg:x="716" fg:w="1"/><text x="57.8990%" y="303.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (11 samples, 0.89%)</title><rect x="56.9243%" y="533" width="0.8857%" height="15" fill="rgb(213,216,27)" fg:x="707" fg:w="11"/><text x="57.1743%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (7 samples, 0.56%)</title><rect x="57.2464%" y="517" width="0.5636%" height="15" fill="rgb(218,76,35)" fg:x="711" fg:w="7"/><text x="57.4964%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (7 samples, 0.56%)</title><rect x="57.2464%" y="501" width="0.5636%" height="15" fill="rgb(253,89,24)" fg:x="711" fg:w="7"/><text x="57.4964%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::name (7 samples, 0.56%)</title><rect x="57.2464%" y="485" width="0.5636%" height="15" fill="rgb(217,188,40)" fg:x="711" fg:w="7"/><text x="57.4964%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="57.2464%" y="469" width="0.5636%" height="15" fill="rgb(237,79,38)" fg:x="711" fg:w="7"/><text x="57.4964%" y="479.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="57.3269%" y="453" width="0.4831%" height="15" fill="rgb(215,116,13)" fg:x="712" fg:w="6"/><text x="57.5769%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="57.3269%" y="437" width="0.4831%" height="15" fill="rgb(249,66,35)" fg:x="712" fg:w="6"/><text x="57.5769%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.5684%" y="421" width="0.2415%" height="15" fill="rgb(253,86,18)" fg:x="715" fg:w="3"/><text x="57.8184%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.5684%" y="405" width="0.2415%" height="15" fill="rgb(209,175,36)" fg:x="715" fg:w="3"/><text x="57.8184%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.5684%" y="389" width="0.2415%" height="15" fill="rgb(253,149,3)" fg:x="715" fg:w="3"/><text x="57.8184%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.5684%" y="373" width="0.2415%" height="15" fill="rgb(242,124,49)" fg:x="715" fg:w="3"/><text x="57.8184%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="57.6490%" y="357" width="0.1610%" height="15" fill="rgb(219,171,24)" fg:x="716" fg:w="2"/><text x="57.8990%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.6490%" y="341" width="0.1610%" height="15" fill="rgb(216,121,30)" fg:x="716" fg:w="2"/><text x="57.8990%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.6490%" y="325" width="0.1610%" height="15" fill="rgb(234,165,21)" fg:x="716" fg:w="2"/><text x="57.8990%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.6490%" y="309" width="0.1610%" height="15" fill="rgb(234,103,40)" fg:x="716" fg:w="2"/><text x="57.8990%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.7295%" y="293" width="0.0805%" height="15" fill="rgb(250,137,24)" fg:x="717" fg:w="1"/><text x="57.9795%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.7295%" y="277" width="0.0805%" height="15" fill="rgb(253,22,21)" fg:x="717" fg:w="1"/><text x="57.9795%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="57.7295%" y="261" width="0.0805%" height="15" fill="rgb(243,22,5)" fg:x="717" fg:w="1"/><text x="57.9795%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (84 samples, 6.76%)</title><rect x="51.1272%" y="565" width="6.7633%" height="15" fill="rgb(212,56,7)" fg:x="635" fg:w="84"/><text x="51.3772%" y="575.50">&lt;engine::..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (84 samples, 6.76%)</title><rect x="51.1272%" y="549" width="6.7633%" height="15" fill="rgb(223,190,49)" fg:x="635" fg:w="84"/><text x="51.3772%" y="559.50">&lt;plugins_..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="57.8100%" y="533" width="0.0805%" height="15" fill="rgb(221,110,35)" fg:x="718" fg:w="1"/><text x="58.0600%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="57.8905%" y="517" width="0.1610%" height="15" fill="rgb(212,113,34)" fg:x="719" fg:w="2"/><text x="58.1405%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="57.8905%" y="501" width="0.1610%" height="15" fill="rgb(216,125,47)" fg:x="719" fg:w="2"/><text x="58.1405%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="57.9710%" y="485" width="0.0805%" height="15" fill="rgb(251,112,19)" fg:x="720" fg:w="1"/><text x="58.2210%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.0515%" y="485" width="0.0805%" height="15" fill="rgb(254,200,41)" fg:x="721" fg:w="1"/><text x="58.3015%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.0515%" y="469" width="0.0805%" height="15" fill="rgb(225,17,42)" fg:x="721" fg:w="1"/><text x="58.3015%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.0515%" y="453" width="0.0805%" height="15" fill="rgb(208,105,35)" fg:x="721" fg:w="1"/><text x="58.3015%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.0515%" y="437" width="0.0805%" height="15" fill="rgb(210,125,51)" fg:x="721" fg:w="1"/><text x="58.3015%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.1320%" y="485" width="0.0805%" height="15" fill="rgb(227,213,18)" fg:x="722" fg:w="1"/><text x="58.3820%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.1320%" y="469" width="0.0805%" height="15" fill="rgb(221,174,32)" fg:x="722" fg:w="1"/><text x="58.3820%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.1320%" y="453" width="0.0805%" height="15" fill="rgb(234,23,1)" fg:x="722" fg:w="1"/><text x="58.3820%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.1320%" y="437" width="0.0805%" height="15" fill="rgb(209,65,17)" fg:x="722" fg:w="1"/><text x="58.3820%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.1320%" y="421" width="0.0805%" height="15" fill="rgb(206,224,31)" fg:x="722" fg:w="1"/><text x="58.3820%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1320%" y="405" width="0.0805%" height="15" fill="rgb(230,20,38)" fg:x="722" fg:w="1"/><text x="58.3820%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="58.2126%" y="485" width="0.0805%" height="15" fill="rgb(211,9,41)" fg:x="723" fg:w="1"/><text x="58.4626%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="57.8905%" y="533" width="0.6441%" height="15" fill="rgb(233,214,4)" fg:x="719" fg:w="8"/><text x="58.1405%" y="543.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="58.0515%" y="517" width="0.4831%" height="15" fill="rgb(225,60,54)" fg:x="721" fg:w="6"/><text x="58.3015%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="58.0515%" y="501" width="0.4831%" height="15" fill="rgb(206,228,35)" fg:x="721" fg:w="6"/><text x="58.3015%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.2931%" y="485" width="0.2415%" height="15" fill="rgb(212,178,50)" fg:x="724" fg:w="3"/><text x="58.5431%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.2931%" y="469" width="0.2415%" height="15" fill="rgb(206,192,33)" fg:x="724" fg:w="3"/><text x="58.5431%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.2931%" y="453" width="0.2415%" height="15" fill="rgb(238,210,1)" fg:x="724" fg:w="3"/><text x="58.5431%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.2931%" y="437" width="0.2415%" height="15" fill="rgb(205,65,52)" fg:x="724" fg:w="3"/><text x="58.5431%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="58.2931%" y="421" width="0.2415%" height="15" fill="rgb(237,204,51)" fg:x="724" fg:w="3"/><text x="58.5431%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.2931%" y="405" width="0.2415%" height="15" fill="rgb(213,119,51)" fg:x="724" fg:w="3"/><text x="58.5431%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.2931%" y="389" width="0.2415%" height="15" fill="rgb(244,156,37)" fg:x="724" fg:w="3"/><text x="58.5431%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.2931%" y="373" width="0.2415%" height="15" fill="rgb(249,96,18)" fg:x="724" fg:w="3"/><text x="58.5431%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.4541%" y="357" width="0.0805%" height="15" fill="rgb(231,65,11)" fg:x="726" fg:w="1"/><text x="58.7041%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4541%" y="341" width="0.0805%" height="15" fill="rgb(240,187,2)" fg:x="726" fg:w="1"/><text x="58.7041%" y="351.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="58.4541%" y="325" width="0.0805%" height="15" fill="rgb(242,121,39)" fg:x="726" fg:w="1"/><text x="58.7041%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.6151%" y="485" width="0.2415%" height="15" fill="rgb(233,205,18)" fg:x="728" fg:w="3"/><text x="58.8651%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.6151%" y="469" width="0.2415%" height="15" fill="rgb(219,67,33)" fg:x="728" fg:w="3"/><text x="58.8651%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.6151%" y="453" width="0.2415%" height="15" fill="rgb(227,84,12)" fg:x="728" fg:w="3"/><text x="58.8651%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.6957%" y="437" width="0.1610%" height="15" fill="rgb(227,42,52)" fg:x="729" fg:w="2"/><text x="58.9457%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7762%" y="421" width="0.0805%" height="15" fill="rgb(231,27,28)" fg:x="730" fg:w="1"/><text x="59.0262%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7762%" y="405" width="0.0805%" height="15" fill="rgb(238,42,2)" fg:x="730" fg:w="1"/><text x="59.0262%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.8567%" y="485" width="0.0805%" height="15" fill="rgb(215,15,9)" fg:x="731" fg:w="1"/><text x="59.1067%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.9372%" y="485" width="0.0805%" height="15" fill="rgb(205,195,15)" fg:x="732" fg:w="1"/><text x="59.1872%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.9372%" y="469" width="0.0805%" height="15" fill="rgb(233,143,2)" fg:x="732" fg:w="1"/><text x="59.1872%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.9372%" y="453" width="0.0805%" height="15" fill="rgb(207,108,8)" fg:x="732" fg:w="1"/><text x="59.1872%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.0177%" y="389" width="0.0805%" height="15" fill="rgb(214,53,21)" fg:x="733" fg:w="1"/><text x="59.2677%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.0177%" y="373" width="0.0805%" height="15" fill="rgb(238,212,36)" fg:x="733" fg:w="1"/><text x="59.2677%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (16 samples, 1.29%)</title><rect x="57.8905%" y="565" width="1.2882%" height="15" fill="rgb(218,151,47)" fg:x="719" fg:w="16"/><text x="58.1405%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (16 samples, 1.29%)</title><rect x="57.8905%" y="549" width="1.2882%" height="15" fill="rgb(245,160,3)" fg:x="719" fg:w="16"/><text x="58.1405%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="58.5346%" y="533" width="0.6441%" height="15" fill="rgb(238,106,19)" fg:x="727" fg:w="8"/><text x="58.7846%" y="543.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="58.5346%" y="517" width="0.6441%" height="15" fill="rgb(207,206,9)" fg:x="727" fg:w="8"/><text x="58.7846%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="58.5346%" y="501" width="0.6441%" height="15" fill="rgb(254,40,10)" fg:x="727" fg:w="8"/><text x="58.7846%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.0177%" y="485" width="0.1610%" height="15" fill="rgb(245,81,8)" fg:x="733" fg:w="2"/><text x="59.2677%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.0177%" y="469" width="0.1610%" height="15" fill="rgb(214,119,17)" fg:x="733" fg:w="2"/><text x="59.2677%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.0177%" y="453" width="0.1610%" height="15" fill="rgb(245,100,39)" fg:x="733" fg:w="2"/><text x="59.2677%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.0177%" y="437" width="0.1610%" height="15" fill="rgb(243,105,16)" fg:x="733" fg:w="2"/><text x="59.2677%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="59.0177%" y="421" width="0.1610%" height="15" fill="rgb(214,53,2)" fg:x="733" fg:w="2"/><text x="59.2677%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.0177%" y="405" width="0.1610%" height="15" fill="rgb(251,54,50)" fg:x="733" fg:w="2"/><text x="59.2677%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.0982%" y="389" width="0.0805%" height="15" fill="rgb(244,121,37)" fg:x="734" fg:w="1"/><text x="59.3482%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0982%" y="373" width="0.0805%" height="15" fill="rgb(236,158,39)" fg:x="734" fg:w="1"/><text x="59.3482%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.0982%" y="357" width="0.0805%" height="15" fill="rgb(226,25,37)" fg:x="734" fg:w="1"/><text x="59.3482%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0982%" y="341" width="0.0805%" height="15" fill="rgb(222,71,46)" fg:x="734" fg:w="1"/><text x="59.3482%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.0982%" y="325" width="0.0805%" height="15" fill="rgb(209,27,29)" fg:x="734" fg:w="1"/><text x="59.3482%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.0982%" y="309" width="0.0805%" height="15" fill="rgb(210,196,17)" fg:x="734" fg:w="1"/><text x="59.3482%" y="319.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="59.1787%" y="565" width="0.1610%" height="15" fill="rgb(236,76,23)" fg:x="735" fg:w="2"/><text x="59.4287%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.1787%" y="549" width="0.1610%" height="15" fill="rgb(214,33,32)" fg:x="735" fg:w="2"/><text x="59.4287%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2593%" y="533" width="0.0805%" height="15" fill="rgb(243,16,26)" fg:x="736" fg:w="1"/><text x="59.5093%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2593%" y="517" width="0.0805%" height="15" fill="rgb(241,30,48)" fg:x="736" fg:w="1"/><text x="59.5093%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2593%" y="501" width="0.0805%" height="15" fill="rgb(241,106,1)" fg:x="736" fg:w="1"/><text x="59.5093%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2593%" y="485" width="0.0805%" height="15" fill="rgb(230,62,29)" fg:x="736" fg:w="1"/><text x="59.5093%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2593%" y="469" width="0.0805%" height="15" fill="rgb(207,166,53)" fg:x="736" fg:w="1"/><text x="59.5093%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.2593%" y="453" width="0.0805%" height="15" fill="rgb(244,54,13)" fg:x="736" fg:w="1"/><text x="59.5093%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.2593%" y="437" width="0.0805%" height="15" fill="rgb(205,144,19)" fg:x="736" fg:w="1"/><text x="59.5093%" y="447.50"></text></g><g><title>plugins_core::library::actions::reply_done (5 samples, 0.40%)</title><rect x="59.3398%" y="565" width="0.4026%" height="15" fill="rgb(225,165,45)" fg:x="737" fg:w="5"/><text x="59.5898%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (5 samples, 0.40%)</title><rect x="59.3398%" y="549" width="0.4026%" height="15" fill="rgb(220,140,6)" fg:x="737" fg:w="5"/><text x="59.5898%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (5 samples, 0.40%)</title><rect x="59.3398%" y="533" width="0.4026%" height="15" fill="rgb(234,69,14)" fg:x="737" fg:w="5"/><text x="59.5898%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (5 samples, 0.40%)</title><rect x="59.3398%" y="517" width="0.4026%" height="15" fill="rgb(243,24,33)" fg:x="737" fg:w="5"/><text x="59.5898%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="59.4203%" y="501" width="0.3221%" height="15" fill="rgb(253,100,43)" fg:x="738" fg:w="4"/><text x="59.6703%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="59.4203%" y="485" width="0.3221%" height="15" fill="rgb(221,168,15)" fg:x="738" fg:w="4"/><text x="59.6703%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="59.5008%" y="469" width="0.2415%" height="15" fill="rgb(237,15,11)" fg:x="739" fg:w="3"/><text x="59.7508%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="59.5008%" y="453" width="0.2415%" height="15" fill="rgb(229,207,40)" fg:x="739" fg:w="3"/><text x="59.7508%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="59.5813%" y="437" width="0.1610%" height="15" fill="rgb(246,125,48)" fg:x="740" fg:w="2"/><text x="59.8313%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="59.6618%" y="421" width="0.0805%" height="15" fill="rgb(231,65,10)" fg:x="741" fg:w="1"/><text x="59.9118%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="59.6618%" y="405" width="0.0805%" height="15" fill="rgb(222,152,40)" fg:x="741" fg:w="1"/><text x="59.9118%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="59.6618%" y="389" width="0.0805%" height="15" fill="rgb(214,12,30)" fg:x="741" fg:w="1"/><text x="59.9118%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="59.6618%" y="373" width="0.0805%" height="15" fill="rgb(239,80,41)" fg:x="741" fg:w="1"/><text x="59.9118%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.6618%" y="357" width="0.0805%" height="15" fill="rgb(206,175,27)" fg:x="741" fg:w="1"/><text x="59.9118%" y="367.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.7424%" y="549" width="0.1610%" height="15" fill="rgb(222,43,39)" fg:x="742" fg:w="2"/><text x="59.9924%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.7424%" y="533" width="0.1610%" height="15" fill="rgb(243,47,50)" fg:x="742" fg:w="2"/><text x="59.9924%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.7424%" y="517" width="0.1610%" height="15" fill="rgb(243,61,21)" fg:x="742" fg:w="2"/><text x="59.9924%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.7424%" y="501" width="0.1610%" height="15" fill="rgb(208,172,5)" fg:x="742" fg:w="2"/><text x="59.9924%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.7424%" y="485" width="0.1610%" height="15" fill="rgb(219,24,25)" fg:x="742" fg:w="2"/><text x="59.9924%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.7424%" y="469" width="0.1610%" height="15" fill="rgb(235,42,41)" fg:x="742" fg:w="2"/><text x="59.9924%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.7424%" y="453" width="0.1610%" height="15" fill="rgb(226,190,24)" fg:x="742" fg:w="2"/><text x="59.9924%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.7424%" y="437" width="0.1610%" height="15" fill="rgb(216,55,27)" fg:x="742" fg:w="2"/><text x="59.9924%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.7424%" y="421" width="0.1610%" height="15" fill="rgb(231,77,14)" fg:x="742" fg:w="2"/><text x="59.9924%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="59.7424%" y="405" width="0.1610%" height="15" fill="rgb(208,108,34)" fg:x="742" fg:w="2"/><text x="59.9924%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="59.7424%" y="389" width="0.1610%" height="15" fill="rgb(228,183,52)" fg:x="742" fg:w="2"/><text x="59.9924%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="59.7424%" y="373" width="0.1610%" height="15" fill="rgb(224,152,1)" fg:x="742" fg:w="2"/><text x="59.9924%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.7424%" y="357" width="0.1610%" height="15" fill="rgb(246,115,8)" fg:x="742" fg:w="2"/><text x="59.9924%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="59.9034%" y="549" width="0.0805%" height="15" fill="rgb(211,76,13)" fg:x="744" fg:w="1"/><text x="60.1534%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="59.9034%" y="533" width="0.0805%" height="15" fill="rgb(233,214,49)" fg:x="744" fg:w="1"/><text x="60.1534%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.9034%" y="517" width="0.0805%" height="15" fill="rgb(223,44,51)" fg:x="744" fg:w="1"/><text x="60.1534%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="59.9839%" y="549" width="0.1610%" height="15" fill="rgb(225,111,51)" fg:x="745" fg:w="2"/><text x="60.2339%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="60.0644%" y="533" width="0.0805%" height="15" fill="rgb(231,185,26)" fg:x="746" fg:w="1"/><text x="60.3144%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="60.1449%" y="517" width="0.1610%" height="15" fill="rgb(233,111,30)" fg:x="747" fg:w="2"/><text x="60.3949%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="60.1449%" y="501" width="0.1610%" height="15" fill="rgb(250,1,47)" fg:x="747" fg:w="2"/><text x="60.3949%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.1449%" y="485" width="0.1610%" height="15" fill="rgb(254,210,3)" fg:x="747" fg:w="2"/><text x="60.3949%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2254%" y="469" width="0.0805%" height="15" fill="rgb(234,14,22)" fg:x="748" fg:w="1"/><text x="60.4754%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2254%" y="453" width="0.0805%" height="15" fill="rgb(221,117,4)" fg:x="748" fg:w="1"/><text x="60.4754%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2254%" y="437" width="0.0805%" height="15" fill="rgb(251,147,27)" fg:x="748" fg:w="1"/><text x="60.4754%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2254%" y="421" width="0.0805%" height="15" fill="rgb(226,52,11)" fg:x="748" fg:w="1"/><text x="60.4754%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.2254%" y="405" width="0.0805%" height="15" fill="rgb(229,222,5)" fg:x="748" fg:w="1"/><text x="60.4754%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3060%" y="421" width="0.0805%" height="15" fill="rgb(232,76,2)" fg:x="749" fg:w="1"/><text x="60.5560%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="60.1449%" y="549" width="0.3221%" height="15" fill="rgb(242,108,2)" fg:x="747" fg:w="4"/><text x="60.3949%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="60.1449%" y="533" width="0.3221%" height="15" fill="rgb(213,165,6)" fg:x="747" fg:w="4"/><text x="60.3949%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="60.3060%" y="517" width="0.1610%" height="15" fill="rgb(222,24,42)" fg:x="749" fg:w="2"/><text x="60.5560%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="60.3060%" y="501" width="0.1610%" height="15" fill="rgb(242,170,24)" fg:x="749" fg:w="2"/><text x="60.5560%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.3060%" y="485" width="0.1610%" height="15" fill="rgb(209,110,40)" fg:x="749" fg:w="2"/><text x="60.5560%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.3060%" y="469" width="0.1610%" height="15" fill="rgb(233,146,36)" fg:x="749" fg:w="2"/><text x="60.5560%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.3060%" y="453" width="0.1610%" height="15" fill="rgb(229,33,32)" fg:x="749" fg:w="2"/><text x="60.5560%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.3060%" y="437" width="0.1610%" height="15" fill="rgb(225,55,34)" fg:x="749" fg:w="2"/><text x="60.5560%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3865%" y="421" width="0.0805%" height="15" fill="rgb(217,32,50)" fg:x="750" fg:w="1"/><text x="60.6365%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3865%" y="405" width="0.0805%" height="15" fill="rgb(206,110,53)" fg:x="750" fg:w="1"/><text x="60.6365%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.3865%" y="389" width="0.0805%" height="15" fill="rgb(247,25,10)" fg:x="750" fg:w="1"/><text x="60.6365%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.3865%" y="373" width="0.0805%" height="15" fill="rgb(226,67,48)" fg:x="750" fg:w="1"/><text x="60.6365%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.3865%" y="357" width="0.0805%" height="15" fill="rgb(239,73,28)" fg:x="750" fg:w="1"/><text x="60.6365%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3865%" y="341" width="0.0805%" height="15" fill="rgb(234,200,41)" fg:x="750" fg:w="1"/><text x="60.6365%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3865%" y="325" width="0.0805%" height="15" fill="rgb(233,76,35)" fg:x="750" fg:w="1"/><text x="60.6365%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.3865%" y="309" width="0.0805%" height="15" fill="rgb(238,166,31)" fg:x="750" fg:w="1"/><text x="60.6365%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.3865%" y="293" width="0.0805%" height="15" fill="rgb(219,218,51)" fg:x="750" fg:w="1"/><text x="60.6365%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.3865%" y="277" width="0.0805%" height="15" fill="rgb(221,82,53)" fg:x="750" fg:w="1"/><text x="60.6365%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.3865%" y="261" width="0.0805%" height="15" fill="rgb(218,179,13)" fg:x="750" fg:w="1"/><text x="60.6365%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3865%" y="245" width="0.0805%" height="15" fill="rgb(210,53,38)" fg:x="750" fg:w="1"/><text x="60.6365%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="60.4670%" y="517" width="0.0805%" height="15" fill="rgb(214,167,31)" fg:x="751" fg:w="1"/><text x="60.7170%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="60.4670%" y="501" width="0.0805%" height="15" fill="rgb(223,26,5)" fg:x="751" fg:w="1"/><text x="60.7170%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="60.4670%" y="485" width="0.0805%" height="15" fill="rgb(218,95,23)" fg:x="751" fg:w="1"/><text x="60.7170%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="60.4670%" y="469" width="0.0805%" height="15" fill="rgb(248,205,45)" fg:x="751" fg:w="1"/><text x="60.7170%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="60.4670%" y="453" width="0.0805%" height="15" fill="rgb(211,76,6)" fg:x="751" fg:w="1"/><text x="60.7170%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="60.4670%" y="437" width="0.0805%" height="15" fill="rgb(250,176,29)" fg:x="751" fg:w="1"/><text x="60.7170%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="60.4670%" y="549" width="0.1610%" height="15" fill="rgb(240,107,31)" fg:x="751" fg:w="2"/><text x="60.7170%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.4670%" y="533" width="0.1610%" height="15" fill="rgb(229,215,17)" fg:x="751" fg:w="2"/><text x="60.7170%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.5475%" y="517" width="0.0805%" height="15" fill="rgb(240,79,8)" fg:x="752" fg:w="1"/><text x="60.7975%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5475%" y="501" width="0.0805%" height="15" fill="rgb(243,110,48)" fg:x="752" fg:w="1"/><text x="60.7975%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7085%" y="517" width="0.0805%" height="15" fill="rgb(236,201,9)" fg:x="754" fg:w="1"/><text x="60.9585%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7085%" y="501" width="0.0805%" height="15" fill="rgb(220,87,26)" fg:x="754" fg:w="1"/><text x="60.9585%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.7890%" y="485" width="0.0805%" height="15" fill="rgb(212,118,27)" fg:x="755" fg:w="1"/><text x="61.0390%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.8696%" y="437" width="0.0805%" height="15" fill="rgb(244,178,50)" fg:x="756" fg:w="1"/><text x="61.1196%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="60.7890%" y="517" width="0.2415%" height="15" fill="rgb(215,204,7)" fg:x="755" fg:w="3"/><text x="61.0390%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="60.7890%" y="501" width="0.2415%" height="15" fill="rgb(214,122,43)" fg:x="755" fg:w="3"/><text x="61.0390%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="60.8696%" y="485" width="0.1610%" height="15" fill="rgb(251,178,26)" fg:x="756" fg:w="2"/><text x="61.1196%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="60.8696%" y="469" width="0.1610%" height="15" fill="rgb(210,7,35)" fg:x="756" fg:w="2"/><text x="61.1196%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="60.8696%" y="453" width="0.1610%" height="15" fill="rgb(227,164,54)" fg:x="756" fg:w="2"/><text x="61.1196%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.9501%" y="437" width="0.0805%" height="15" fill="rgb(205,18,34)" fg:x="757" fg:w="1"/><text x="61.2001%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.9501%" y="421" width="0.0805%" height="15" fill="rgb(239,50,19)" fg:x="757" fg:w="1"/><text x="61.2001%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0306%" y="485" width="0.0805%" height="15" fill="rgb(224,85,6)" fg:x="758" fg:w="1"/><text x="61.2806%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.64%)</title><rect x="60.6280%" y="549" width="0.6441%" height="15" fill="rgb(252,167,34)" fg:x="753" fg:w="8"/><text x="60.8780%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.64%)</title><rect x="60.6280%" y="533" width="0.6441%" height="15" fill="rgb(243,180,35)" fg:x="753" fg:w="8"/><text x="60.8780%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="61.0306%" y="517" width="0.2415%" height="15" fill="rgb(213,214,53)" fg:x="758" fg:w="3"/><text x="61.2806%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="61.0306%" y="501" width="0.2415%" height="15" fill="rgb(244,39,37)" fg:x="758" fg:w="3"/><text x="61.2806%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="61.1111%" y="485" width="0.1610%" height="15" fill="rgb(215,141,14)" fg:x="759" fg:w="2"/><text x="61.3611%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="61.1111%" y="469" width="0.1610%" height="15" fill="rgb(210,2,42)" fg:x="759" fg:w="2"/><text x="61.3611%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="61.1111%" y="453" width="0.1610%" height="15" fill="rgb(252,189,47)" fg:x="759" fg:w="2"/><text x="61.3611%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.1111%" y="437" width="0.1610%" height="15" fill="rgb(222,154,47)" fg:x="759" fg:w="2"/><text x="61.3611%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1916%" y="421" width="0.0805%" height="15" fill="rgb(228,20,37)" fg:x="760" fg:w="1"/><text x="61.4416%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="61.1916%" y="405" width="0.0805%" height="15" fill="rgb(236,17,4)" fg:x="760" fg:w="1"/><text x="61.4416%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3527%" y="485" width="0.0805%" height="15" fill="rgb(222,211,31)" fg:x="762" fg:w="1"/><text x="61.6027%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4332%" y="453" width="0.0805%" height="15" fill="rgb(218,134,25)" fg:x="763" fg:w="1"/><text x="61.6832%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4332%" y="437" width="0.0805%" height="15" fill="rgb(218,97,43)" fg:x="763" fg:w="1"/><text x="61.6832%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4332%" y="421" width="0.0805%" height="15" fill="rgb(234,163,32)" fg:x="763" fg:w="1"/><text x="61.6832%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4332%" y="405" width="0.0805%" height="15" fill="rgb(251,171,42)" fg:x="763" fg:w="1"/><text x="61.6832%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4332%" y="389" width="0.0805%" height="15" fill="rgb(223,104,12)" fg:x="763" fg:w="1"/><text x="61.6832%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4332%" y="373" width="0.0805%" height="15" fill="rgb(225,29,49)" fg:x="763" fg:w="1"/><text x="61.6832%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.4332%" y="357" width="0.0805%" height="15" fill="rgb(253,77,7)" fg:x="763" fg:w="1"/><text x="61.6832%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.4332%" y="341" width="0.0805%" height="15" fill="rgb(213,81,26)" fg:x="763" fg:w="1"/><text x="61.6832%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4332%" y="325" width="0.0805%" height="15" fill="rgb(246,126,6)" fg:x="763" fg:w="1"/><text x="61.6832%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4332%" y="309" width="0.0805%" height="15" fill="rgb(232,186,21)" fg:x="763" fg:w="1"/><text x="61.6832%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4332%" y="293" width="0.0805%" height="15" fill="rgb(215,126,18)" fg:x="763" fg:w="1"/><text x="61.6832%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.4332%" y="277" width="0.0805%" height="15" fill="rgb(210,47,5)" fg:x="763" fg:w="1"/><text x="61.6832%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.4332%" y="261" width="0.0805%" height="15" fill="rgb(240,70,6)" fg:x="763" fg:w="1"/><text x="61.6832%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.4332%" y="245" width="0.0805%" height="15" fill="rgb(230,99,49)" fg:x="763" fg:w="1"/><text x="61.6832%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.4332%" y="229" width="0.0805%" height="15" fill="rgb(212,57,36)" fg:x="763" fg:w="1"/><text x="61.6832%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4332%" y="213" width="0.0805%" height="15" fill="rgb(243,14,50)" fg:x="763" fg:w="1"/><text x="61.6832%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.5137%" y="405" width="0.0805%" height="15" fill="rgb(240,2,53)" fg:x="764" fg:w="1"/><text x="61.7637%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5137%" y="389" width="0.0805%" height="15" fill="rgb(208,47,53)" fg:x="764" fg:w="1"/><text x="61.7637%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="61.5137%" y="453" width="0.1610%" height="15" fill="rgb(235,186,39)" fg:x="764" fg:w="2"/><text x="61.7637%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="61.5137%" y="437" width="0.1610%" height="15" fill="rgb(212,35,47)" fg:x="764" fg:w="2"/><text x="61.7637%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="61.5137%" y="421" width="0.1610%" height="15" fill="rgb(248,59,37)" fg:x="764" fg:w="2"/><text x="61.7637%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.5942%" y="405" width="0.0805%" height="15" fill="rgb(223,186,16)" fg:x="765" fg:w="1"/><text x="61.8442%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.5942%" y="389" width="0.0805%" height="15" fill="rgb(215,106,35)" fg:x="765" fg:w="1"/><text x="61.8442%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.5942%" y="373" width="0.0805%" height="15" fill="rgb(217,141,29)" fg:x="765" fg:w="1"/><text x="61.8442%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.5942%" y="357" width="0.0805%" height="15" fill="rgb(221,227,46)" fg:x="765" fg:w="1"/><text x="61.8442%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.7552%" y="357" width="0.0805%" height="15" fill="rgb(212,36,41)" fg:x="767" fg:w="1"/><text x="62.0052%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="61.3527%" y="501" width="0.5636%" height="15" fill="rgb(222,35,11)" fg:x="762" fg:w="7"/><text x="61.6027%" y="511.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="61.4332%" y="485" width="0.4831%" height="15" fill="rgb(232,165,33)" fg:x="763" fg:w="6"/><text x="61.6832%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="61.4332%" y="469" width="0.4831%" height="15" fill="rgb(211,38,20)" fg:x="763" fg:w="6"/><text x="61.6832%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.6747%" y="453" width="0.2415%" height="15" fill="rgb(230,7,36)" fg:x="766" fg:w="3"/><text x="61.9247%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.6747%" y="437" width="0.2415%" height="15" fill="rgb(213,128,35)" fg:x="766" fg:w="3"/><text x="61.9247%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.6747%" y="421" width="0.2415%" height="15" fill="rgb(218,11,14)" fg:x="766" fg:w="3"/><text x="61.9247%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.6747%" y="405" width="0.2415%" height="15" fill="rgb(249,105,7)" fg:x="766" fg:w="3"/><text x="61.9247%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="61.7552%" y="389" width="0.1610%" height="15" fill="rgb(226,125,21)" fg:x="767" fg:w="2"/><text x="62.0052%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.7552%" y="373" width="0.1610%" height="15" fill="rgb(239,90,47)" fg:x="767" fg:w="2"/><text x="62.0052%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.8357%" y="357" width="0.0805%" height="15" fill="rgb(226,19,1)" fg:x="768" fg:w="1"/><text x="62.0857%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.8357%" y="341" width="0.0805%" height="15" fill="rgb(205,117,40)" fg:x="768" fg:w="1"/><text x="62.0857%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.8357%" y="325" width="0.0805%" height="15" fill="rgb(234,6,54)" fg:x="768" fg:w="1"/><text x="62.0857%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.8357%" y="309" width="0.0805%" height="15" fill="rgb(239,73,32)" fg:x="768" fg:w="1"/><text x="62.0857%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.8357%" y="293" width="0.0805%" height="15" fill="rgb(226,197,12)" fg:x="768" fg:w="1"/><text x="62.0857%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.0773%" y="389" width="0.0805%" height="15" fill="rgb(226,53,42)" fg:x="771" fg:w="1"/><text x="62.3273%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.0773%" y="421" width="0.1610%" height="15" fill="rgb(234,99,30)" fg:x="771" fg:w="2"/><text x="62.3273%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.0773%" y="405" width="0.1610%" height="15" fill="rgb(237,175,49)" fg:x="771" fg:w="2"/><text x="62.3273%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1578%" y="389" width="0.0805%" height="15" fill="rgb(228,75,42)" fg:x="772" fg:w="1"/><text x="62.4078%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1578%" y="373" width="0.0805%" height="15" fill="rgb(223,162,48)" fg:x="772" fg:w="1"/><text x="62.4078%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.1578%" y="357" width="0.0805%" height="15" fill="rgb(221,192,29)" fg:x="772" fg:w="1"/><text x="62.4078%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.1578%" y="341" width="0.0805%" height="15" fill="rgb(249,150,41)" fg:x="772" fg:w="1"/><text x="62.4078%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.1578%" y="325" width="0.0805%" height="15" fill="rgb(243,107,34)" fg:x="772" fg:w="1"/><text x="62.4078%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1578%" y="309" width="0.0805%" height="15" fill="rgb(214,227,11)" fg:x="772" fg:w="1"/><text x="62.4078%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1578%" y="293" width="0.0805%" height="15" fill="rgb(209,37,13)" fg:x="772" fg:w="1"/><text x="62.4078%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.1578%" y="277" width="0.0805%" height="15" fill="rgb(249,124,20)" fg:x="772" fg:w="1"/><text x="62.4078%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.1578%" y="261" width="0.0805%" height="15" fill="rgb(228,28,2)" fg:x="772" fg:w="1"/><text x="62.4078%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.1578%" y="245" width="0.0805%" height="15" fill="rgb(244,55,1)" fg:x="772" fg:w="1"/><text x="62.4078%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.1578%" y="229" width="0.0805%" height="15" fill="rgb(216,26,19)" fg:x="772" fg:w="1"/><text x="62.4078%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1578%" y="213" width="0.0805%" height="15" fill="rgb(209,162,10)" fg:x="772" fg:w="1"/><text x="62.4078%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="61.9968%" y="453" width="0.3221%" height="15" fill="rgb(235,168,42)" fg:x="770" fg:w="4"/><text x="62.2468%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="61.9968%" y="437" width="0.3221%" height="15" fill="rgb(240,24,14)" fg:x="770" fg:w="4"/><text x="62.2468%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2383%" y="421" width="0.0805%" height="15" fill="rgb(224,107,11)" fg:x="773" fg:w="1"/><text x="62.4883%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.05%)</title><rect x="61.3527%" y="533" width="1.0467%" height="15" fill="rgb(226,48,4)" fg:x="762" fg:w="13"/><text x="61.6027%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.05%)</title><rect x="61.3527%" y="517" width="1.0467%" height="15" fill="rgb(254,31,21)" fg:x="762" fg:w="13"/><text x="61.6027%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="61.9163%" y="501" width="0.4831%" height="15" fill="rgb(205,156,19)" fg:x="769" fg:w="6"/><text x="62.1663%" y="511.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="61.9163%" y="485" width="0.4831%" height="15" fill="rgb(216,73,31)" fg:x="769" fg:w="6"/><text x="62.1663%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="61.9163%" y="469" width="0.4831%" height="15" fill="rgb(237,88,35)" fg:x="769" fg:w="6"/><text x="62.1663%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.3188%" y="453" width="0.0805%" height="15" fill="rgb(254,79,48)" fg:x="774" fg:w="1"/><text x="62.5688%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3188%" y="437" width="0.0805%" height="15" fill="rgb(211,66,36)" fg:x="774" fg:w="1"/><text x="62.5688%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.3188%" y="421" width="0.0805%" height="15" fill="rgb(222,13,1)" fg:x="774" fg:w="1"/><text x="62.5688%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3188%" y="405" width="0.0805%" height="15" fill="rgb(221,216,41)" fg:x="774" fg:w="1"/><text x="62.5688%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.3188%" y="389" width="0.0805%" height="15" fill="rgb(220,10,17)" fg:x="774" fg:w="1"/><text x="62.5688%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3188%" y="373" width="0.0805%" height="15" fill="rgb(242,43,35)" fg:x="774" fg:w="1"/><text x="62.5688%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.3188%" y="357" width="0.0805%" height="15" fill="rgb(216,182,18)" fg:x="774" fg:w="1"/><text x="62.5688%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3188%" y="341" width="0.0805%" height="15" fill="rgb(246,217,36)" fg:x="774" fg:w="1"/><text x="62.5688%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.3188%" y="325" width="0.0805%" height="15" fill="rgb(208,107,8)" fg:x="774" fg:w="1"/><text x="62.5688%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3188%" y="309" width="0.0805%" height="15" fill="rgb(208,189,15)" fg:x="774" fg:w="1"/><text x="62.5688%" y="319.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (15 samples, 1.21%)</title><rect x="61.2721%" y="549" width="1.2077%" height="15" fill="rgb(211,70,9)" fg:x="761" fg:w="15"/><text x="61.5221%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="62.3994%" y="533" width="0.0805%" height="15" fill="rgb(217,95,34)" fg:x="775" fg:w="1"/><text x="62.6494%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.3994%" y="517" width="0.0805%" height="15" fill="rgb(240,223,2)" fg:x="775" fg:w="1"/><text x="62.6494%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.3994%" y="501" width="0.0805%" height="15" fill="rgb(231,18,6)" fg:x="775" fg:w="1"/><text x="62.6494%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::key (1 samples, 0.08%)</title><rect x="62.5604%" y="533" width="0.0805%" height="15" fill="rgb(254,44,46)" fg:x="777" fg:w="1"/><text x="62.8104%" y="543.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="62.4799%" y="549" width="0.2415%" height="15" fill="rgb(223,222,46)" fg:x="776" fg:w="3"/><text x="62.7299%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="62.6409%" y="533" width="0.0805%" height="15" fill="rgb(229,163,13)" fg:x="778" fg:w="1"/><text x="62.8909%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.6409%" y="517" width="0.0805%" height="15" fill="rgb(220,208,13)" fg:x="778" fg:w="1"/><text x="62.8909%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="62.7214%" y="533" width="0.0805%" height="15" fill="rgb(244,28,53)" fg:x="779" fg:w="1"/><text x="62.9714%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="62.7214%" y="517" width="0.0805%" height="15" fill="rgb(243,138,0)" fg:x="779" fg:w="1"/><text x="62.9714%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7214%" y="501" width="0.0805%" height="15" fill="rgb(209,90,49)" fg:x="779" fg:w="1"/><text x="62.9714%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="62.8019%" y="533" width="0.2415%" height="15" fill="rgb(247,114,18)" fg:x="780" fg:w="3"/><text x="63.0519%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="62.8019%" y="517" width="0.2415%" height="15" fill="rgb(221,14,46)" fg:x="780" fg:w="3"/><text x="63.0519%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.8824%" y="501" width="0.1610%" height="15" fill="rgb(215,29,23)" fg:x="781" fg:w="2"/><text x="63.1324%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.8824%" y="485" width="0.1610%" height="15" fill="rgb(241,37,25)" fg:x="781" fg:w="2"/><text x="63.1324%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.8824%" y="469" width="0.1610%" height="15" fill="rgb(225,17,22)" fg:x="781" fg:w="2"/><text x="63.1324%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9630%" y="453" width="0.0805%" height="15" fill="rgb(241,182,7)" fg:x="782" fg:w="1"/><text x="63.2130%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9630%" y="437" width="0.0805%" height="15" fill="rgb(248,125,10)" fg:x="782" fg:w="1"/><text x="63.2130%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.9630%" y="421" width="0.0805%" height="15" fill="rgb(250,3,37)" fg:x="782" fg:w="1"/><text x="63.2130%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.9630%" y="405" width="0.0805%" height="15" fill="rgb(237,102,7)" fg:x="782" fg:w="1"/><text x="63.2130%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.9630%" y="389" width="0.0805%" height="15" fill="rgb(235,5,5)" fg:x="782" fg:w="1"/><text x="63.2130%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.9630%" y="373" width="0.0805%" height="15" fill="rgb(249,147,38)" fg:x="782" fg:w="1"/><text x="63.2130%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.9630%" y="357" width="0.0805%" height="15" fill="rgb(221,25,18)" fg:x="782" fg:w="1"/><text x="63.2130%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.9630%" y="341" width="0.0805%" height="15" fill="rgb(211,88,9)" fg:x="782" fg:w="1"/><text x="63.2130%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.9630%" y="325" width="0.0805%" height="15" fill="rgb(219,62,54)" fg:x="782" fg:w="1"/><text x="63.2130%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.9630%" y="309" width="0.0805%" height="15" fill="rgb(243,133,46)" fg:x="782" fg:w="1"/><text x="63.2130%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.9630%" y="293" width="0.0805%" height="15" fill="rgb(214,168,53)" fg:x="782" fg:w="1"/><text x="63.2130%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.9630%" y="277" width="0.0805%" height="15" fill="rgb(250,58,7)" fg:x="782" fg:w="1"/><text x="63.2130%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.1240%" y="517" width="0.0805%" height="15" fill="rgb(249,131,5)" fg:x="784" fg:w="1"/><text x="63.3740%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.1240%" y="501" width="0.0805%" height="15" fill="rgb(234,40,44)" fg:x="784" fg:w="1"/><text x="63.3740%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1240%" y="485" width="0.0805%" height="15" fill="rgb(225,188,42)" fg:x="784" fg:w="1"/><text x="63.3740%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (161 samples, 12.96%)</title><rect x="50.4026%" y="581" width="12.9630%" height="15" fill="rgb(218,201,51)" fg:x="626" fg:w="161"/><text x="50.6526%" y="591.50">&lt;plugins_core::carr..</text></g><g><title>plugins_core::location::change_location (45 samples, 3.62%)</title><rect x="59.7424%" y="565" width="3.6232%" height="15" fill="rgb(214,209,38)" fg:x="742" fg:w="45"/><text x="59.9924%" y="575.50">plug..</text></g><g><title>plugins_core::location::Location::set (8 samples, 0.64%)</title><rect x="62.7214%" y="549" width="0.6441%" height="15" fill="rgb(217,0,20)" fg:x="779" fg:w="8"/><text x="62.9714%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="63.0435%" y="533" width="0.3221%" height="15" fill="rgb(248,183,46)" fg:x="783" fg:w="4"/><text x="63.2935%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="63.2045%" y="517" width="0.1610%" height="15" fill="rgb(208,99,41)" fg:x="785" fg:w="2"/><text x="63.4545%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="63.2850%" y="501" width="0.0805%" height="15" fill="rgb(210,189,49)" fg:x="786" fg:w="1"/><text x="63.5350%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="63.2850%" y="485" width="0.0805%" height="15" fill="rgb(239,191,42)" fg:x="786" fg:w="1"/><text x="63.5350%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="63.2850%" y="469" width="0.0805%" height="15" fill="rgb(240,138,26)" fg:x="786" fg:w="1"/><text x="63.5350%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.2850%" y="453" width="0.0805%" height="15" fill="rgb(234,45,22)" fg:x="786" fg:w="1"/><text x="63.5350%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="63.5266%" y="533" width="0.0805%" height="15" fill="rgb(228,43,35)" fg:x="789" fg:w="1"/><text x="63.7766%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.5266%" y="517" width="0.0805%" height="15" fill="rgb(215,201,54)" fg:x="789" fg:w="1"/><text x="63.7766%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (3 samples, 0.24%)</title><rect x="63.5266%" y="549" width="0.2415%" height="15" fill="rgb(209,60,31)" fg:x="789" fg:w="3"/><text x="63.7766%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="63.6071%" y="533" width="0.1610%" height="15" fill="rgb(232,66,12)" fg:x="790" fg:w="2"/><text x="63.8571%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="63.6071%" y="517" width="0.1610%" height="15" fill="rgb(244,78,24)" fg:x="790" fg:w="2"/><text x="63.8571%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.6071%" y="501" width="0.1610%" height="15" fill="rgb(249,65,27)" fg:x="790" fg:w="2"/><text x="63.8571%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.6071%" y="485" width="0.1610%" height="15" fill="rgb(208,218,19)" fg:x="790" fg:w="2"/><text x="63.8571%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.6071%" y="469" width="0.1610%" height="15" fill="rgb(212,181,38)" fg:x="790" fg:w="2"/><text x="63.8571%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.6071%" y="453" width="0.1610%" height="15" fill="rgb(207,118,40)" fg:x="790" fg:w="2"/><text x="63.8571%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.6876%" y="437" width="0.0805%" height="15" fill="rgb(207,126,20)" fg:x="791" fg:w="1"/><text x="63.9376%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6876%" y="421" width="0.0805%" height="15" fill="rgb(232,15,46)" fg:x="791" fg:w="1"/><text x="63.9376%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.6876%" y="405" width="0.0805%" height="15" fill="rgb(254,33,30)" fg:x="791" fg:w="1"/><text x="63.9376%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6876%" y="389" width="0.0805%" height="15" fill="rgb(233,92,20)" fg:x="791" fg:w="1"/><text x="63.9376%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.6876%" y="373" width="0.0805%" height="15" fill="rgb(225,195,54)" fg:x="791" fg:w="1"/><text x="63.9376%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7681%" y="533" width="0.0805%" height="15" fill="rgb(208,196,7)" fg:x="792" fg:w="1"/><text x="64.0181%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.8486%" y="453" width="0.0805%" height="15" fill="rgb(253,19,35)" fg:x="793" fg:w="1"/><text x="64.0986%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.8486%" y="501" width="0.1610%" height="15" fill="rgb(228,180,1)" fg:x="793" fg:w="2"/><text x="64.0986%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.8486%" y="485" width="0.1610%" height="15" fill="rgb(248,35,18)" fg:x="793" fg:w="2"/><text x="64.0986%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.8486%" y="469" width="0.1610%" height="15" fill="rgb(220,34,8)" fg:x="793" fg:w="2"/><text x="64.0986%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9291%" y="453" width="0.0805%" height="15" fill="rgb(219,223,17)" fg:x="794" fg:w="1"/><text x="64.1791%" y="463.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (9 samples, 0.72%)</title><rect x="63.4461%" y="565" width="0.7246%" height="15" fill="rgb(223,183,15)" fg:x="788" fg:w="9"/><text x="63.6961%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="63.7681%" y="549" width="0.4026%" height="15" fill="rgb(253,184,45)" fg:x="792" fg:w="5"/><text x="64.0181%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="63.8486%" y="533" width="0.3221%" height="15" fill="rgb(207,97,29)" fg:x="793" fg:w="4"/><text x="64.0986%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="63.8486%" y="517" width="0.3221%" height="15" fill="rgb(250,170,27)" fg:x="793" fg:w="4"/><text x="64.0986%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.0097%" y="501" width="0.1610%" height="15" fill="rgb(206,178,17)" fg:x="795" fg:w="2"/><text x="64.2597%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.0097%" y="485" width="0.1610%" height="15" fill="rgb(213,92,46)" fg:x="795" fg:w="2"/><text x="64.2597%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.0902%" y="469" width="0.0805%" height="15" fill="rgb(223,114,30)" fg:x="796" fg:w="1"/><text x="64.3402%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.0902%" y="453" width="0.0805%" height="15" fill="rgb(207,228,9)" fg:x="796" fg:w="1"/><text x="64.3402%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="64.0902%" y="437" width="0.0805%" height="15" fill="rgb(205,70,25)" fg:x="796" fg:w="1"/><text x="64.3402%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.0902%" y="421" width="0.0805%" height="15" fill="rgb(252,45,30)" fg:x="796" fg:w="1"/><text x="64.3402%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="64.1707%" y="533" width="0.0805%" height="15" fill="rgb(219,185,54)" fg:x="797" fg:w="1"/><text x="64.4207%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="64.1707%" y="517" width="0.0805%" height="15" fill="rgb(219,208,54)" fg:x="797" fg:w="1"/><text x="64.4207%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.1707%" y="501" width="0.0805%" height="15" fill="rgb(207,164,54)" fg:x="797" fg:w="1"/><text x="64.4207%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="64.4928%" y="517" width="0.2415%" height="15" fill="rgb(240,155,22)" fg:x="801" fg:w="3"/><text x="64.7428%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.5733%" y="501" width="0.1610%" height="15" fill="rgb(217,127,14)" fg:x="802" fg:w="2"/><text x="64.8233%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.5733%" y="485" width="0.1610%" height="15" fill="rgb(232,179,42)" fg:x="802" fg:w="2"/><text x="64.8233%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.5733%" y="469" width="0.1610%" height="15" fill="rgb(247,55,45)" fg:x="802" fg:w="2"/><text x="64.8233%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.5733%" y="453" width="0.1610%" height="15" fill="rgb(217,11,18)" fg:x="802" fg:w="2"/><text x="64.8233%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.5733%" y="437" width="0.1610%" height="15" fill="rgb(227,127,4)" fg:x="802" fg:w="2"/><text x="64.8233%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.5733%" y="421" width="0.1610%" height="15" fill="rgb(217,97,45)" fg:x="802" fg:w="2"/><text x="64.8233%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.5733%" y="405" width="0.1610%" height="15" fill="rgb(250,135,20)" fg:x="802" fg:w="2"/><text x="64.8233%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.5733%" y="389" width="0.1610%" height="15" fill="rgb(224,213,26)" fg:x="802" fg:w="2"/><text x="64.8233%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.5733%" y="373" width="0.1610%" height="15" fill="rgb(237,86,25)" fg:x="802" fg:w="2"/><text x="64.8233%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.5733%" y="357" width="0.1610%" height="15" fill="rgb(251,105,18)" fg:x="802" fg:w="2"/><text x="64.8233%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.5733%" y="341" width="0.1610%" height="15" fill="rgb(246,124,25)" fg:x="802" fg:w="2"/><text x="64.8233%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.5733%" y="325" width="0.1610%" height="15" fill="rgb(210,90,3)" fg:x="802" fg:w="2"/><text x="64.8233%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.5733%" y="309" width="0.1610%" height="15" fill="rgb(249,40,31)" fg:x="802" fg:w="2"/><text x="64.8233%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="64.7343%" y="501" width="0.0805%" height="15" fill="rgb(231,228,1)" fg:x="804" fg:w="1"/><text x="64.9843%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="64.7343%" y="485" width="0.0805%" height="15" fill="rgb(242,25,49)" fg:x="804" fg:w="1"/><text x="64.9843%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="64.7343%" y="469" width="0.0805%" height="15" fill="rgb(224,142,22)" fg:x="804" fg:w="1"/><text x="64.9843%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="64.7343%" y="453" width="0.0805%" height="15" fill="rgb(228,106,29)" fg:x="804" fg:w="1"/><text x="64.9843%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="64.7343%" y="437" width="0.0805%" height="15" fill="rgb(207,2,15)" fg:x="804" fg:w="1"/><text x="64.9843%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.7343%" y="421" width="0.0805%" height="15" fill="rgb(231,43,37)" fg:x="804" fg:w="1"/><text x="64.9843%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="64.7343%" y="405" width="0.0805%" height="15" fill="rgb(245,193,12)" fg:x="804" fg:w="1"/><text x="64.9843%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="64.7343%" y="389" width="0.0805%" height="15" fill="rgb(246,9,49)" fg:x="804" fg:w="1"/><text x="64.9843%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="64.7343%" y="373" width="0.0805%" height="15" fill="rgb(218,50,36)" fg:x="804" fg:w="1"/><text x="64.9843%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.7343%" y="357" width="0.0805%" height="15" fill="rgb(225,206,16)" fg:x="804" fg:w="1"/><text x="64.9843%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="64.7343%" y="341" width="0.0805%" height="15" fill="rgb(242,52,5)" fg:x="804" fg:w="1"/><text x="64.9843%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="64.7343%" y="325" width="0.0805%" height="15" fill="rgb(217,158,11)" fg:x="804" fg:w="1"/><text x="64.9843%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="64.7343%" y="309" width="0.0805%" height="15" fill="rgb(242,144,22)" fg:x="804" fg:w="1"/><text x="64.9843%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.7343%" y="293" width="0.0805%" height="15" fill="rgb(236,191,3)" fg:x="804" fg:w="1"/><text x="64.9843%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.7343%" y="277" width="0.0805%" height="15" fill="rgb(241,22,19)" fg:x="804" fg:w="1"/><text x="64.9843%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.7343%" y="261" width="0.0805%" height="15" fill="rgb(205,217,44)" fg:x="804" fg:w="1"/><text x="64.9843%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="64.7343%" y="245" width="0.0805%" height="15" fill="rgb(231,53,3)" fg:x="804" fg:w="1"/><text x="64.9843%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="64.7343%" y="229" width="0.0805%" height="15" fill="rgb(207,13,22)" fg:x="804" fg:w="1"/><text x="64.9843%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="64.7343%" y="213" width="0.0805%" height="15" fill="rgb(234,62,29)" fg:x="804" fg:w="1"/><text x="64.9843%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="64.7343%" y="197" width="0.0805%" height="15" fill="rgb(226,175,44)" fg:x="804" fg:w="1"/><text x="64.9843%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.7343%" y="181" width="0.0805%" height="15" fill="rgb(239,177,6)" fg:x="804" fg:w="1"/><text x="64.9843%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.7343%" y="165" width="0.0805%" height="15" fill="rgb(249,125,15)" fg:x="804" fg:w="1"/><text x="64.9843%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="64.7343%" y="149" width="0.0805%" height="15" fill="rgb(210,201,5)" fg:x="804" fg:w="1"/><text x="64.9843%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="64.7343%" y="133" width="0.0805%" height="15" fill="rgb(210,14,6)" fg:x="804" fg:w="1"/><text x="64.9843%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.7343%" y="117" width="0.0805%" height="15" fill="rgb(239,141,15)" fg:x="804" fg:w="1"/><text x="64.9843%" y="127.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="64.7343%" y="101" width="0.0805%" height="15" fill="rgb(235,75,9)" fg:x="804" fg:w="1"/><text x="64.9843%" y="111.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="64.8148%" y="469" width="0.0805%" height="15" fill="rgb(246,122,37)" fg:x="805" fg:w="1"/><text x="65.0648%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="64.8148%" y="453" width="0.0805%" height="15" fill="rgb(235,75,52)" fg:x="805" fg:w="1"/><text x="65.0648%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="64.8148%" y="437" width="0.0805%" height="15" fill="rgb(235,179,12)" fg:x="805" fg:w="1"/><text x="65.0648%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="64.8148%" y="421" width="0.0805%" height="15" fill="rgb(223,20,9)" fg:x="805" fg:w="1"/><text x="65.0648%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="64.8148%" y="405" width="0.0805%" height="15" fill="rgb(223,75,22)" fg:x="805" fg:w="1"/><text x="65.0648%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="64.8148%" y="389" width="0.0805%" height="15" fill="rgb(248,148,18)" fg:x="805" fg:w="1"/><text x="65.0648%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="64.8148%" y="373" width="0.0805%" height="15" fill="rgb(225,103,8)" fg:x="805" fg:w="1"/><text x="65.0648%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8148%" y="357" width="0.0805%" height="15" fill="rgb(237,168,17)" fg:x="805" fg:w="1"/><text x="65.0648%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8148%" y="341" width="0.0805%" height="15" fill="rgb(215,192,38)" fg:x="805" fg:w="1"/><text x="65.0648%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8148%" y="325" width="0.0805%" height="15" fill="rgb(237,69,28)" fg:x="805" fg:w="1"/><text x="65.0648%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.8148%" y="309" width="0.0805%" height="15" fill="rgb(254,167,32)" fg:x="805" fg:w="1"/><text x="65.0648%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.8148%" y="293" width="0.0805%" height="15" fill="rgb(250,81,30)" fg:x="805" fg:w="1"/><text x="65.0648%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.8148%" y="277" width="0.0805%" height="15" fill="rgb(240,68,52)" fg:x="805" fg:w="1"/><text x="65.0648%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.8148%" y="261" width="0.0805%" height="15" fill="rgb(205,97,42)" fg:x="805" fg:w="1"/><text x="65.0648%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.8148%" y="245" width="0.0805%" height="15" fill="rgb(217,10,22)" fg:x="805" fg:w="1"/><text x="65.0648%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.8148%" y="229" width="0.0805%" height="15" fill="rgb(216,21,26)" fg:x="805" fg:w="1"/><text x="65.0648%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.8148%" y="213" width="0.0805%" height="15" fill="rgb(239,0,36)" fg:x="805" fg:w="1"/><text x="65.0648%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.8148%" y="197" width="0.0805%" height="15" fill="rgb(216,162,28)" fg:x="805" fg:w="1"/><text x="65.0648%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.8148%" y="181" width="0.0805%" height="15" fill="rgb(246,22,39)" fg:x="805" fg:w="1"/><text x="65.0648%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8148%" y="165" width="0.0805%" height="15" fill="rgb(222,84,49)" fg:x="805" fg:w="1"/><text x="65.0648%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="64.8953%" y="469" width="0.2415%" height="15" fill="rgb(250,38,34)" fg:x="806" fg:w="3"/><text x="65.1453%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="64.9758%" y="453" width="0.1610%" height="15" fill="rgb(236,0,38)" fg:x="807" fg:w="2"/><text x="65.2258%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.9758%" y="437" width="0.1610%" height="15" fill="rgb(237,205,54)" fg:x="807" fg:w="2"/><text x="65.2258%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="64.9758%" y="421" width="0.1610%" height="15" fill="rgb(221,80,35)" fg:x="807" fg:w="2"/><text x="65.2258%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="64.9758%" y="405" width="0.1610%" height="15" fill="rgb(237,204,22)" fg:x="807" fg:w="2"/><text x="65.2258%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.0564%" y="389" width="0.0805%" height="15" fill="rgb(213,108,15)" fg:x="808" fg:w="1"/><text x="65.3064%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (12 samples, 0.97%)</title><rect x="64.2512%" y="533" width="0.9662%" height="15" fill="rgb(251,187,9)" fg:x="798" fg:w="12"/><text x="64.5012%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (6 samples, 0.48%)</title><rect x="64.7343%" y="517" width="0.4831%" height="15" fill="rgb(250,61,9)" fg:x="804" fg:w="6"/><text x="64.9843%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="64.8148%" y="501" width="0.4026%" height="15" fill="rgb(230,131,33)" fg:x="805" fg:w="5"/><text x="65.0648%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="64.8148%" y="485" width="0.4026%" height="15" fill="rgb(239,117,11)" fg:x="805" fg:w="5"/><text x="65.0648%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.1369%" y="469" width="0.0805%" height="15" fill="rgb(222,112,44)" fg:x="809" fg:w="1"/><text x="65.3869%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.1369%" y="453" width="0.0805%" height="15" fill="rgb(251,33,25)" fg:x="809" fg:w="1"/><text x="65.3869%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="65.1369%" y="437" width="0.0805%" height="15" fill="rgb(208,171,34)" fg:x="809" fg:w="1"/><text x="65.3869%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="65.1369%" y="421" width="0.0805%" height="15" fill="rgb(250,166,54)" fg:x="809" fg:w="1"/><text x="65.3869%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="65.1369%" y="405" width="0.0805%" height="15" fill="rgb(212,148,2)" fg:x="809" fg:w="1"/><text x="65.3869%" y="415.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.2174%" y="517" width="0.0805%" height="15" fill="rgb(224,92,39)" fg:x="810" fg:w="1"/><text x="65.4674%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.2174%" y="501" width="0.0805%" height="15" fill="rgb(250,28,16)" fg:x="810" fg:w="1"/><text x="65.4674%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.2174%" y="485" width="0.0805%" height="15" fill="rgb(227,128,26)" fg:x="810" fg:w="1"/><text x="65.4674%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.2174%" y="469" width="0.0805%" height="15" fill="rgb(248,66,7)" fg:x="810" fg:w="1"/><text x="65.4674%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.2174%" y="453" width="0.0805%" height="15" fill="rgb(215,124,51)" fg:x="810" fg:w="1"/><text x="65.4674%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.2174%" y="437" width="0.0805%" height="15" fill="rgb(207,91,1)" fg:x="810" fg:w="1"/><text x="65.4674%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.2174%" y="421" width="0.0805%" height="15" fill="rgb(217,207,38)" fg:x="810" fg:w="1"/><text x="65.4674%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.2174%" y="405" width="0.0805%" height="15" fill="rgb(240,118,9)" fg:x="810" fg:w="1"/><text x="65.4674%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5395%" y="437" width="0.0805%" height="15" fill="rgb(224,147,4)" fg:x="814" fg:w="1"/><text x="65.7895%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5395%" y="421" width="0.0805%" height="15" fill="rgb(205,105,13)" fg:x="814" fg:w="1"/><text x="65.7895%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5395%" y="405" width="0.0805%" height="15" fill="rgb(251,78,39)" fg:x="814" fg:w="1"/><text x="65.7895%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5395%" y="389" width="0.0805%" height="15" fill="rgb(225,60,44)" fg:x="814" fg:w="1"/><text x="65.7895%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.6200%" y="437" width="0.0805%" height="15" fill="rgb(221,228,40)" fg:x="815" fg:w="1"/><text x="65.8700%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::name (5 samples, 0.40%)</title><rect x="65.3784%" y="501" width="0.4026%" height="15" fill="rgb(215,104,30)" fg:x="812" fg:w="5"/><text x="65.6284%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="65.3784%" y="485" width="0.4026%" height="15" fill="rgb(206,183,3)" fg:x="812" fg:w="5"/><text x="65.6284%" y="495.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="65.4589%" y="469" width="0.3221%" height="15" fill="rgb(236,199,25)" fg:x="813" fg:w="4"/><text x="65.7089%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="65.4589%" y="453" width="0.3221%" height="15" fill="rgb(230,107,29)" fg:x="813" fg:w="4"/><text x="65.7089%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.7005%" y="437" width="0.0805%" height="15" fill="rgb(216,12,37)" fg:x="816" fg:w="1"/><text x="65.9505%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7005%" y="421" width="0.0805%" height="15" fill="rgb(238,165,28)" fg:x="816" fg:w="1"/><text x="65.9505%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.7005%" y="405" width="0.0805%" height="15" fill="rgb(226,173,5)" fg:x="816" fg:w="1"/><text x="65.9505%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7005%" y="389" width="0.0805%" height="15" fill="rgb(229,9,37)" fg:x="816" fg:w="1"/><text x="65.9505%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.7005%" y="373" width="0.0805%" height="15" fill="rgb(252,194,43)" fg:x="816" fg:w="1"/><text x="65.9505%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7005%" y="357" width="0.0805%" height="15" fill="rgb(215,58,45)" fg:x="816" fg:w="1"/><text x="65.9505%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.7005%" y="341" width="0.0805%" height="15" fill="rgb(218,34,51)" fg:x="816" fg:w="1"/><text x="65.9505%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.7005%" y="325" width="0.0805%" height="15" fill="rgb(230,104,27)" fg:x="816" fg:w="1"/><text x="65.9505%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (8 samples, 0.64%)</title><rect x="65.2174%" y="533" width="0.6441%" height="15" fill="rgb(250,9,6)" fg:x="810" fg:w="8"/><text x="65.4674%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (7 samples, 0.56%)</title><rect x="65.2979%" y="517" width="0.5636%" height="15" fill="rgb(245,10,16)" fg:x="811" fg:w="7"/><text x="65.5479%" y="527.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="65.7810%" y="501" width="0.0805%" height="15" fill="rgb(227,182,27)" fg:x="817" fg:w="1"/><text x="66.0310%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="65.7810%" y="485" width="0.0805%" height="15" fill="rgb(225,91,37)" fg:x="817" fg:w="1"/><text x="66.0310%" y="495.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.08%)</title><rect x="65.7810%" y="469" width="0.0805%" height="15" fill="rgb(240,16,41)" fg:x="817" fg:w="1"/><text x="66.0310%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="65.7810%" y="453" width="0.0805%" height="15" fill="rgb(214,108,54)" fg:x="817" fg:w="1"/><text x="66.0310%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7810%" y="437" width="0.0805%" height="15" fill="rgb(253,65,28)" fg:x="817" fg:w="1"/><text x="66.0310%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7810%" y="421" width="0.0805%" height="15" fill="rgb(246,105,4)" fg:x="817" fg:w="1"/><text x="66.0310%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.7810%" y="405" width="0.0805%" height="15" fill="rgb(223,163,37)" fg:x="817" fg:w="1"/><text x="66.0310%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.7810%" y="389" width="0.0805%" height="15" fill="rgb(206,202,31)" fg:x="817" fg:w="1"/><text x="66.0310%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.7810%" y="373" width="0.0805%" height="15" fill="rgb(241,202,54)" fg:x="817" fg:w="1"/><text x="66.0310%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.7810%" y="357" width="0.0805%" height="15" fill="rgb(220,22,45)" fg:x="817" fg:w="1"/><text x="66.0310%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7810%" y="341" width="0.0805%" height="15" fill="rgb(234,215,40)" fg:x="817" fg:w="1"/><text x="66.0310%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (22 samples, 1.77%)</title><rect x="64.1707%" y="565" width="1.7713%" height="15" fill="rgb(220,3,5)" fg:x="797" fg:w="22"/><text x="64.4207%" y="575.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (22 samples, 1.77%)</title><rect x="64.1707%" y="549" width="1.7713%" height="15" fill="rgb(210,8,15)" fg:x="797" fg:w="22"/><text x="64.4207%" y="559.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="65.8615%" y="533" width="0.0805%" height="15" fill="rgb(218,113,45)" fg:x="818" fg:w="1"/><text x="66.1115%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8615%" y="517" width="0.0805%" height="15" fill="rgb(249,208,10)" fg:x="818" fg:w="1"/><text x="66.1115%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8615%" y="501" width="0.0805%" height="15" fill="rgb(250,145,17)" fg:x="818" fg:w="1"/><text x="66.1115%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8615%" y="485" width="0.0805%" height="15" fill="rgb(254,24,13)" fg:x="818" fg:w="1"/><text x="66.1115%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.8615%" y="469" width="0.0805%" height="15" fill="rgb(244,36,15)" fg:x="818" fg:w="1"/><text x="66.1115%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.8615%" y="453" width="0.0805%" height="15" fill="rgb(228,168,26)" fg:x="818" fg:w="1"/><text x="66.1115%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.8615%" y="437" width="0.0805%" height="15" fill="rgb(214,145,10)" fg:x="818" fg:w="1"/><text x="66.1115%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.8615%" y="421" width="0.0805%" height="15" fill="rgb(232,59,25)" fg:x="818" fg:w="1"/><text x="66.1115%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.8615%" y="405" width="0.0805%" height="15" fill="rgb(254,181,2)" fg:x="818" fg:w="1"/><text x="66.1115%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="65.9420%" y="565" width="0.0805%" height="15" fill="rgb(221,139,49)" fg:x="819" fg:w="1"/><text x="66.1920%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="65.9420%" y="549" width="0.0805%" height="15" fill="rgb(235,84,36)" fg:x="819" fg:w="1"/><text x="66.1920%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1836%" y="485" width="0.0805%" height="15" fill="rgb(254,32,49)" fg:x="822" fg:w="1"/><text x="66.4336%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1836%" y="469" width="0.0805%" height="15" fill="rgb(214,136,49)" fg:x="822" fg:w="1"/><text x="66.4336%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1836%" y="453" width="0.0805%" height="15" fill="rgb(206,113,54)" fg:x="822" fg:w="1"/><text x="66.4336%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1836%" y="437" width="0.0805%" height="15" fill="rgb(226,78,17)" fg:x="822" fg:w="1"/><text x="66.4336%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.2641%" y="453" width="0.0805%" height="15" fill="rgb(249,189,19)" fg:x="823" fg:w="1"/><text x="66.5141%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.3446%" y="389" width="0.0805%" height="15" fill="rgb(211,82,26)" fg:x="824" fg:w="1"/><text x="66.5946%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.3446%" y="373" width="0.0805%" height="15" fill="rgb(206,131,52)" fg:x="824" fg:w="1"/><text x="66.5946%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.3446%" y="357" width="0.0805%" height="15" fill="rgb(223,51,24)" fg:x="824" fg:w="1"/><text x="66.5946%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.4251%" y="357" width="0.0805%" height="15" fill="rgb(235,93,36)" fg:x="825" fg:w="1"/><text x="66.6751%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="66.1031%" y="533" width="0.4831%" height="15" fill="rgb(219,118,14)" fg:x="821" fg:w="6"/><text x="66.3531%" y="543.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="66.1031%" y="517" width="0.4831%" height="15" fill="rgb(240,145,10)" fg:x="821" fg:w="6"/><text x="66.3531%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="66.1031%" y="501" width="0.4831%" height="15" fill="rgb(241,104,15)" fg:x="821" fg:w="6"/><text x="66.3531%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="66.2641%" y="485" width="0.3221%" height="15" fill="rgb(248,117,21)" fg:x="823" fg:w="4"/><text x="66.5141%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="66.2641%" y="469" width="0.3221%" height="15" fill="rgb(250,184,34)" fg:x="823" fg:w="4"/><text x="66.5141%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.3446%" y="453" width="0.2415%" height="15" fill="rgb(218,169,23)" fg:x="824" fg:w="3"/><text x="66.5946%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.3446%" y="437" width="0.2415%" height="15" fill="rgb(214,33,53)" fg:x="824" fg:w="3"/><text x="66.5946%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="66.3446%" y="421" width="0.2415%" height="15" fill="rgb(239,78,4)" fg:x="824" fg:w="3"/><text x="66.5946%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.3446%" y="405" width="0.2415%" height="15" fill="rgb(250,25,23)" fg:x="824" fg:w="3"/><text x="66.5946%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.4251%" y="389" width="0.1610%" height="15" fill="rgb(220,205,51)" fg:x="825" fg:w="2"/><text x="66.6751%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.4251%" y="373" width="0.1610%" height="15" fill="rgb(252,115,2)" fg:x="825" fg:w="2"/><text x="66.6751%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.5056%" y="357" width="0.0805%" height="15" fill="rgb(222,106,48)" fg:x="826" fg:w="1"/><text x="66.7556%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.5056%" y="341" width="0.0805%" height="15" fill="rgb(225,77,33)" fg:x="826" fg:w="1"/><text x="66.7556%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="66.5056%" y="325" width="0.0805%" height="15" fill="rgb(250,135,2)" fg:x="826" fg:w="1"/><text x="66.7556%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="66.5056%" y="309" width="0.0805%" height="15" fill="rgb(221,217,54)" fg:x="826" fg:w="1"/><text x="66.7556%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.5862%" y="453" width="0.0805%" height="15" fill="rgb(233,12,6)" fg:x="827" fg:w="1"/><text x="66.8362%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.7472%" y="389" width="0.0805%" height="15" fill="rgb(251,10,27)" fg:x="829" fg:w="1"/><text x="66.9972%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.8277%" y="357" width="0.0805%" height="15" fill="rgb(214,20,35)" fg:x="830" fg:w="1"/><text x="67.0777%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (12 samples, 0.97%)</title><rect x="66.0225%" y="565" width="0.9662%" height="15" fill="rgb(249,13,18)" fg:x="820" fg:w="12"/><text x="66.2725%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.97%)</title><rect x="66.0225%" y="549" width="0.9662%" height="15" fill="rgb(251,115,18)" fg:x="820" fg:w="12"/><text x="66.2725%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="66.5862%" y="533" width="0.4026%" height="15" fill="rgb(219,91,11)" fg:x="827" fg:w="5"/><text x="66.8362%" y="543.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="66.5862%" y="517" width="0.4026%" height="15" fill="rgb(238,130,14)" fg:x="827" fg:w="5"/><text x="66.8362%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="66.5862%" y="501" width="0.4026%" height="15" fill="rgb(216,197,46)" fg:x="827" fg:w="5"/><text x="66.8362%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="66.5862%" y="485" width="0.4026%" height="15" fill="rgb(239,113,46)" fg:x="827" fg:w="5"/><text x="66.8362%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="66.5862%" y="469" width="0.4026%" height="15" fill="rgb(220,76,52)" fg:x="827" fg:w="5"/><text x="66.8362%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="66.6667%" y="453" width="0.3221%" height="15" fill="rgb(247,167,28)" fg:x="828" fg:w="4"/><text x="66.9167%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="66.6667%" y="437" width="0.3221%" height="15" fill="rgb(228,6,44)" fg:x="828" fg:w="4"/><text x="66.9167%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="66.7472%" y="421" width="0.2415%" height="15" fill="rgb(214,75,23)" fg:x="829" fg:w="3"/><text x="66.9972%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.7472%" y="405" width="0.2415%" height="15" fill="rgb(241,211,28)" fg:x="829" fg:w="3"/><text x="66.9972%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.8277%" y="389" width="0.1610%" height="15" fill="rgb(216,147,39)" fg:x="830" fg:w="2"/><text x="67.0777%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.8277%" y="373" width="0.1610%" height="15" fill="rgb(237,121,45)" fg:x="830" fg:w="2"/><text x="67.0777%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.9082%" y="357" width="0.0805%" height="15" fill="rgb(214,115,15)" fg:x="831" fg:w="1"/><text x="67.1582%" y="367.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="66.9887%" y="565" width="0.1610%" height="15" fill="rgb(253,132,27)" fg:x="832" fg:w="2"/><text x="67.2387%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.9887%" y="549" width="0.1610%" height="15" fill="rgb(222,56,1)" fg:x="832" fg:w="2"/><text x="67.2387%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0692%" y="533" width="0.0805%" height="15" fill="rgb(216,99,46)" fg:x="833" fg:w="1"/><text x="67.3192%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0692%" y="517" width="0.0805%" height="15" fill="rgb(232,1,9)" fg:x="833" fg:w="1"/><text x="67.3192%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.0692%" y="501" width="0.0805%" height="15" fill="rgb(215,41,52)" fg:x="833" fg:w="1"/><text x="67.3192%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.0692%" y="485" width="0.0805%" height="15" fill="rgb(223,107,41)" fg:x="833" fg:w="1"/><text x="67.3192%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.0692%" y="469" width="0.0805%" height="15" fill="rgb(208,151,32)" fg:x="833" fg:w="1"/><text x="67.3192%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0692%" y="453" width="0.0805%" height="15" fill="rgb(229,32,3)" fg:x="833" fg:w="1"/><text x="67.3192%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0692%" y="437" width="0.0805%" height="15" fill="rgb(234,186,36)" fg:x="833" fg:w="1"/><text x="67.3192%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.0692%" y="421" width="0.0805%" height="15" fill="rgb(216,9,5)" fg:x="833" fg:w="1"/><text x="67.3192%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.0692%" y="405" width="0.0805%" height="15" fill="rgb(226,151,21)" fg:x="833" fg:w="1"/><text x="67.3192%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.0692%" y="389" width="0.0805%" height="15" fill="rgb(210,130,28)" fg:x="833" fg:w="1"/><text x="67.3192%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.0692%" y="373" width="0.0805%" height="15" fill="rgb(239,58,31)" fg:x="833" fg:w="1"/><text x="67.3192%" y="383.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="67.0692%" y="357" width="0.0805%" height="15" fill="rgb(213,14,0)" fg:x="833" fg:w="1"/><text x="67.3192%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="67.0692%" y="341" width="0.0805%" height="15" fill="rgb(228,97,38)" fg:x="833" fg:w="1"/><text x="67.3192%" y="351.50"></text></g><g><title>plugins_core::library::actions::reply_done (2 samples, 0.16%)</title><rect x="67.1498%" y="565" width="0.1610%" height="15" fill="rgb(248,9,13)" fg:x="834" fg:w="2"/><text x="67.3998%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (2 samples, 0.16%)</title><rect x="67.1498%" y="549" width="0.1610%" height="15" fill="rgb(233,149,17)" fg:x="834" fg:w="2"/><text x="67.3998%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="67.1498%" y="533" width="0.1610%" height="15" fill="rgb(233,127,53)" fg:x="834" fg:w="2"/><text x="67.3998%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (2 samples, 0.16%)</title><rect x="67.1498%" y="517" width="0.1610%" height="15" fill="rgb(207,120,37)" fg:x="834" fg:w="2"/><text x="67.3998%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="67.1498%" y="501" width="0.1610%" height="15" fill="rgb(210,65,38)" fg:x="834" fg:w="2"/><text x="67.3998%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="67.2303%" y="485" width="0.0805%" height="15" fill="rgb(229,206,39)" fg:x="835" fg:w="1"/><text x="67.4803%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="67.2303%" y="469" width="0.0805%" height="15" fill="rgb(237,11,35)" fg:x="835" fg:w="1"/><text x="67.4803%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="67.2303%" y="453" width="0.0805%" height="15" fill="rgb(237,159,38)" fg:x="835" fg:w="1"/><text x="67.4803%" y="463.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3913%" y="549" width="0.0805%" height="15" fill="rgb(239,79,36)" fg:x="837" fg:w="1"/><text x="67.6413%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3913%" y="533" width="0.0805%" height="15" fill="rgb(231,163,51)" fg:x="837" fg:w="1"/><text x="67.6413%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3913%" y="517" width="0.0805%" height="15" fill="rgb(226,68,29)" fg:x="837" fg:w="1"/><text x="67.6413%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.3913%" y="501" width="0.0805%" height="15" fill="rgb(250,192,3)" fg:x="837" fg:w="1"/><text x="67.6413%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.3913%" y="485" width="0.0805%" height="15" fill="rgb(206,11,13)" fg:x="837" fg:w="1"/><text x="67.6413%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.3913%" y="469" width="0.0805%" height="15" fill="rgb(234,128,26)" fg:x="837" fg:w="1"/><text x="67.6413%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="67.4718%" y="549" width="0.0805%" height="15" fill="rgb(226,134,12)" fg:x="838" fg:w="1"/><text x="67.7218%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4718%" y="533" width="0.0805%" height="15" fill="rgb(240,60,15)" fg:x="838" fg:w="1"/><text x="67.7218%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5523%" y="469" width="0.0805%" height="15" fill="rgb(222,112,11)" fg:x="839" fg:w="1"/><text x="67.8023%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5523%" y="453" width="0.0805%" height="15" fill="rgb(231,207,44)" fg:x="839" fg:w="1"/><text x="67.8023%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5523%" y="437" width="0.0805%" height="15" fill="rgb(250,222,54)" fg:x="839" fg:w="1"/><text x="67.8023%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5523%" y="421" width="0.0805%" height="15" fill="rgb(243,223,15)" fg:x="839" fg:w="1"/><text x="67.8023%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.5523%" y="405" width="0.0805%" height="15" fill="rgb(239,2,5)" fg:x="839" fg:w="1"/><text x="67.8023%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="67.5523%" y="517" width="0.1610%" height="15" fill="rgb(241,83,27)" fg:x="839" fg:w="2"/><text x="67.8023%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="67.5523%" y="501" width="0.1610%" height="15" fill="rgb(223,175,51)" fg:x="839" fg:w="2"/><text x="67.8023%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="67.5523%" y="485" width="0.1610%" height="15" fill="rgb(209,11,47)" fg:x="839" fg:w="2"/><text x="67.8023%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.6329%" y="469" width="0.0805%" height="15" fill="rgb(249,60,43)" fg:x="840" fg:w="1"/><text x="67.8829%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6329%" y="453" width="0.0805%" height="15" fill="rgb(244,84,47)" fg:x="840" fg:w="1"/><text x="67.8829%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="67.7134%" y="501" width="0.0805%" height="15" fill="rgb(241,110,24)" fg:x="841" fg:w="1"/><text x="67.9634%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8744%" y="469" width="0.0805%" height="15" fill="rgb(236,79,1)" fg:x="843" fg:w="1"/><text x="68.1244%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="67.5523%" y="549" width="0.4831%" height="15" fill="rgb(210,152,4)" fg:x="839" fg:w="6"/><text x="67.8023%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="67.5523%" y="533" width="0.4831%" height="15" fill="rgb(218,71,19)" fg:x="839" fg:w="6"/><text x="67.8023%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="67.7134%" y="517" width="0.3221%" height="15" fill="rgb(207,161,51)" fg:x="841" fg:w="4"/><text x="67.9634%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="67.7939%" y="501" width="0.2415%" height="15" fill="rgb(219,84,54)" fg:x="842" fg:w="3"/><text x="68.0439%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="67.7939%" y="485" width="0.2415%" height="15" fill="rgb(243,172,34)" fg:x="842" fg:w="3"/><text x="68.0439%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.9549%" y="469" width="0.0805%" height="15" fill="rgb(233,181,1)" fg:x="844" fg:w="1"/><text x="68.2049%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9549%" y="453" width="0.0805%" height="15" fill="rgb(236,21,18)" fg:x="844" fg:w="1"/><text x="68.2049%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.9549%" y="437" width="0.0805%" height="15" fill="rgb(244,165,15)" fg:x="844" fg:w="1"/><text x="68.2049%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9549%" y="421" width="0.0805%" height="15" fill="rgb(235,75,19)" fg:x="844" fg:w="1"/><text x="68.2049%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.9549%" y="405" width="0.0805%" height="15" fill="rgb(217,229,29)" fg:x="844" fg:w="1"/><text x="68.2049%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9549%" y="389" width="0.0805%" height="15" fill="rgb(250,200,19)" fg:x="844" fg:w="1"/><text x="68.2049%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.9549%" y="373" width="0.0805%" height="15" fill="rgb(218,195,36)" fg:x="844" fg:w="1"/><text x="68.2049%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9549%" y="357" width="0.0805%" height="15" fill="rgb(206,183,32)" fg:x="844" fg:w="1"/><text x="68.2049%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.9549%" y="341" width="0.0805%" height="15" fill="rgb(235,151,53)" fg:x="844" fg:w="1"/><text x="68.2049%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9549%" y="325" width="0.0805%" height="15" fill="rgb(244,120,37)" fg:x="844" fg:w="1"/><text x="68.2049%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.1159%" y="485" width="0.1610%" height="15" fill="rgb(209,96,41)" fg:x="846" fg:w="2"/><text x="68.3659%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.1159%" y="469" width="0.1610%" height="15" fill="rgb(208,229,20)" fg:x="846" fg:w="2"/><text x="68.3659%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="68.1159%" y="453" width="0.1610%" height="15" fill="rgb(208,153,33)" fg:x="846" fg:w="2"/><text x="68.3659%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="68.1159%" y="437" width="0.1610%" height="15" fill="rgb(223,196,8)" fg:x="846" fg:w="2"/><text x="68.3659%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="68.1159%" y="421" width="0.1610%" height="15" fill="rgb(241,75,49)" fg:x="846" fg:w="2"/><text x="68.3659%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="68.1159%" y="405" width="0.1610%" height="15" fill="rgb(212,52,42)" fg:x="846" fg:w="2"/><text x="68.3659%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="68.1159%" y="389" width="0.1610%" height="15" fill="rgb(220,148,43)" fg:x="846" fg:w="2"/><text x="68.3659%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="68.1159%" y="373" width="0.1610%" height="15" fill="rgb(228,88,15)" fg:x="846" fg:w="2"/><text x="68.3659%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="68.1159%" y="357" width="0.1610%" height="15" fill="rgb(213,87,14)" fg:x="846" fg:w="2"/><text x="68.3659%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="68.1159%" y="341" width="0.1610%" height="15" fill="rgb(220,198,31)" fg:x="846" fg:w="2"/><text x="68.3659%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="68.1159%" y="325" width="0.1610%" height="15" fill="rgb(223,165,38)" fg:x="846" fg:w="2"/><text x="68.3659%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.1159%" y="309" width="0.1610%" height="15" fill="rgb(247,56,48)" fg:x="846" fg:w="2"/><text x="68.3659%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="68.1159%" y="517" width="0.3221%" height="15" fill="rgb(222,150,13)" fg:x="846" fg:w="4"/><text x="68.3659%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.1159%" y="501" width="0.3221%" height="15" fill="rgb(218,214,11)" fg:x="846" fg:w="4"/><text x="68.3659%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.2770%" y="485" width="0.1610%" height="15" fill="rgb(246,111,16)" fg:x="848" fg:w="2"/><text x="68.5270%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.2770%" y="469" width="0.1610%" height="15" fill="rgb(250,127,26)" fg:x="848" fg:w="2"/><text x="68.5270%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3575%" y="453" width="0.0805%" height="15" fill="rgb(237,156,23)" fg:x="849" fg:w="1"/><text x="68.6075%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3575%" y="437" width="0.0805%" height="15" fill="rgb(215,143,51)" fg:x="849" fg:w="1"/><text x="68.6075%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.3575%" y="421" width="0.0805%" height="15" fill="rgb(209,119,39)" fg:x="849" fg:w="1"/><text x="68.6075%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.3575%" y="405" width="0.0805%" height="15" fill="rgb(228,181,16)" fg:x="849" fg:w="1"/><text x="68.6075%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.3575%" y="389" width="0.0805%" height="15" fill="rgb(236,113,51)" fg:x="849" fg:w="1"/><text x="68.6075%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3575%" y="373" width="0.0805%" height="15" fill="rgb(223,132,1)" fg:x="849" fg:w="1"/><text x="68.6075%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3575%" y="357" width="0.0805%" height="15" fill="rgb(227,4,54)" fg:x="849" fg:w="1"/><text x="68.6075%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.3575%" y="341" width="0.0805%" height="15" fill="rgb(254,72,52)" fg:x="849" fg:w="1"/><text x="68.6075%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.3575%" y="325" width="0.0805%" height="15" fill="rgb(252,104,52)" fg:x="849" fg:w="1"/><text x="68.6075%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.3575%" y="309" width="0.0805%" height="15" fill="rgb(251,146,26)" fg:x="849" fg:w="1"/><text x="68.6075%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.3575%" y="293" width="0.0805%" height="15" fill="rgb(214,146,19)" fg:x="849" fg:w="1"/><text x="68.6075%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3575%" y="277" width="0.0805%" height="15" fill="rgb(242,222,1)" fg:x="849" fg:w="1"/><text x="68.6075%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="68.4380%" y="517" width="0.0805%" height="15" fill="rgb(220,178,32)" fg:x="850" fg:w="1"/><text x="68.6880%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="68.4380%" y="501" width="0.0805%" height="15" fill="rgb(220,50,48)" fg:x="850" fg:w="1"/><text x="68.6880%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.4380%" y="485" width="0.0805%" height="15" fill="rgb(207,117,22)" fg:x="850" fg:w="1"/><text x="68.6880%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="68.4380%" y="469" width="0.0805%" height="15" fill="rgb(247,195,50)" fg:x="850" fg:w="1"/><text x="68.6880%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="68.4380%" y="453" width="0.0805%" height="15" fill="rgb(206,50,39)" fg:x="850" fg:w="1"/><text x="68.6880%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="68.4380%" y="437" width="0.0805%" height="15" fill="rgb(236,141,29)" fg:x="850" fg:w="1"/><text x="68.6880%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="68.4380%" y="421" width="0.0805%" height="15" fill="rgb(247,18,44)" fg:x="850" fg:w="1"/><text x="68.6880%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5185%" y="485" width="0.0805%" height="15" fill="rgb(243,179,46)" fg:x="851" fg:w="1"/><text x="68.7685%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="68.5185%" y="517" width="0.1610%" height="15" fill="rgb(241,178,53)" fg:x="851" fg:w="2"/><text x="68.7685%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="68.5185%" y="501" width="0.1610%" height="15" fill="rgb(236,100,9)" fg:x="851" fg:w="2"/><text x="68.7685%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.5990%" y="485" width="0.0805%" height="15" fill="rgb(208,180,29)" fg:x="852" fg:w="1"/><text x="68.8490%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="68.5990%" y="469" width="0.0805%" height="15" fill="rgb(241,204,36)" fg:x="852" fg:w="1"/><text x="68.8490%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.5990%" y="453" width="0.0805%" height="15" fill="rgb(248,106,5)" fg:x="852" fg:w="1"/><text x="68.8490%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (10 samples, 0.81%)</title><rect x="68.0354%" y="549" width="0.8052%" height="15" fill="rgb(245,13,49)" fg:x="845" fg:w="10"/><text x="68.2854%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="68.0354%" y="533" width="0.8052%" height="15" fill="rgb(221,209,34)" fg:x="845" fg:w="10"/><text x="68.2854%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.6795%" y="517" width="0.1610%" height="15" fill="rgb(224,83,31)" fg:x="853" fg:w="2"/><text x="68.9295%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.6795%" y="501" width="0.1610%" height="15" fill="rgb(218,63,22)" fg:x="853" fg:w="2"/><text x="68.9295%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="68.6795%" y="485" width="0.1610%" height="15" fill="rgb(214,167,5)" fg:x="853" fg:w="2"/><text x="68.9295%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="68.6795%" y="469" width="0.1610%" height="15" fill="rgb(243,13,0)" fg:x="853" fg:w="2"/><text x="68.9295%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="68.6795%" y="453" width="0.1610%" height="15" fill="rgb(237,20,46)" fg:x="853" fg:w="2"/><text x="68.9295%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.6795%" y="437" width="0.1610%" height="15" fill="rgb(240,94,48)" fg:x="853" fg:w="2"/><text x="68.9295%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.6795%" y="421" width="0.1610%" height="15" fill="rgb(205,160,17)" fg:x="853" fg:w="2"/><text x="68.9295%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="68.6795%" y="405" width="0.1610%" height="15" fill="rgb(234,42,33)" fg:x="853" fg:w="2"/><text x="68.9295%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="68.9211%" y="485" width="0.1610%" height="15" fill="rgb(215,166,5)" fg:x="856" fg:w="2"/><text x="69.1711%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="68.8406%" y="549" width="0.3221%" height="15" fill="rgb(215,9,6)" fg:x="855" fg:w="4"/><text x="69.0906%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="68.8406%" y="533" width="0.3221%" height="15" fill="rgb(212,53,6)" fg:x="855" fg:w="4"/><text x="69.0906%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="68.9211%" y="517" width="0.2415%" height="15" fill="rgb(249,157,19)" fg:x="856" fg:w="3"/><text x="69.1711%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="68.9211%" y="501" width="0.2415%" height="15" fill="rgb(222,212,45)" fg:x="856" fg:w="3"/><text x="69.1711%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.0821%" y="485" width="0.0805%" height="15" fill="rgb(232,155,17)" fg:x="858" fg:w="1"/><text x="69.3321%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="69.0821%" y="469" width="0.0805%" height="15" fill="rgb(212,159,50)" fg:x="858" fg:w="1"/><text x="69.3321%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.0821%" y="453" width="0.0805%" height="15" fill="rgb(247,71,8)" fg:x="858" fg:w="1"/><text x="69.3321%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1626%" y="501" width="0.0805%" height="15" fill="rgb(239,128,29)" fg:x="859" fg:w="1"/><text x="69.4126%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="69.2432%" y="485" width="0.0805%" height="15" fill="rgb(227,117,11)" fg:x="860" fg:w="1"/><text x="69.4932%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2432%" y="469" width="0.0805%" height="15" fill="rgb(247,183,4)" fg:x="860" fg:w="1"/><text x="69.4932%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="69.3237%" y="485" width="0.0805%" height="15" fill="rgb(211,161,41)" fg:x="861" fg:w="1"/><text x="69.5737%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.4042%" y="453" width="0.1610%" height="15" fill="rgb(250,157,52)" fg:x="862" fg:w="2"/><text x="69.6542%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.4042%" y="437" width="0.1610%" height="15" fill="rgb(249,118,26)" fg:x="862" fg:w="2"/><text x="69.6542%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.4042%" y="421" width="0.1610%" height="15" fill="rgb(234,52,37)" fg:x="862" fg:w="2"/><text x="69.6542%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4847%" y="405" width="0.0805%" height="15" fill="rgb(237,188,45)" fg:x="863" fg:w="1"/><text x="69.7347%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4847%" y="389" width="0.0805%" height="15" fill="rgb(241,3,40)" fg:x="863" fg:w="1"/><text x="69.7347%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="69.2432%" y="501" width="0.4026%" height="15" fill="rgb(246,192,7)" fg:x="860" fg:w="5"/><text x="69.4932%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="69.4042%" y="485" width="0.2415%" height="15" fill="rgb(206,168,17)" fg:x="862" fg:w="3"/><text x="69.6542%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="69.4042%" y="469" width="0.2415%" height="15" fill="rgb(208,124,33)" fg:x="862" fg:w="3"/><text x="69.6542%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.5652%" y="453" width="0.0805%" height="15" fill="rgb(226,186,11)" fg:x="864" fg:w="1"/><text x="69.8152%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.5652%" y="437" width="0.0805%" height="15" fill="rgb(218,223,1)" fg:x="864" fg:w="1"/><text x="69.8152%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.5652%" y="421" width="0.0805%" height="15" fill="rgb(254,65,21)" fg:x="864" fg:w="1"/><text x="69.8152%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.5652%" y="405" width="0.0805%" height="15" fill="rgb(239,63,32)" fg:x="864" fg:w="1"/><text x="69.8152%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.5652%" y="389" width="0.0805%" height="15" fill="rgb(219,85,29)" fg:x="864" fg:w="1"/><text x="69.8152%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5652%" y="373" width="0.0805%" height="15" fill="rgb(246,74,32)" fg:x="864" fg:w="1"/><text x="69.8152%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6457%" y="453" width="0.0805%" height="15" fill="rgb(251,20,52)" fg:x="865" fg:w="1"/><text x="69.8957%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6457%" y="437" width="0.0805%" height="15" fill="rgb(222,160,46)" fg:x="865" fg:w="1"/><text x="69.8957%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6457%" y="421" width="0.0805%" height="15" fill="rgb(230,68,24)" fg:x="865" fg:w="1"/><text x="69.8957%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.7262%" y="453" width="0.0805%" height="15" fill="rgb(233,83,32)" fg:x="866" fg:w="1"/><text x="69.9762%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="69.7262%" y="437" width="0.0805%" height="15" fill="rgb(253,79,36)" fg:x="866" fg:w="1"/><text x="69.9762%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8068%" y="389" width="0.0805%" height="15" fill="rgb(224,125,51)" fg:x="867" fg:w="1"/><text x="70.0568%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.8068%" y="453" width="0.1610%" height="15" fill="rgb(254,158,3)" fg:x="867" fg:w="2"/><text x="70.0568%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="69.8068%" y="437" width="0.1610%" height="15" fill="rgb(243,226,3)" fg:x="867" fg:w="2"/><text x="70.0568%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.8068%" y="421" width="0.1610%" height="15" fill="rgb(208,37,10)" fg:x="867" fg:w="2"/><text x="70.0568%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.8068%" y="405" width="0.1610%" height="15" fill="rgb(227,35,6)" fg:x="867" fg:w="2"/><text x="70.0568%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.8873%" y="389" width="0.0805%" height="15" fill="rgb(236,35,38)" fg:x="868" fg:w="1"/><text x="70.1373%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.89%)</title><rect x="69.1626%" y="549" width="0.8857%" height="15" fill="rgb(247,165,26)" fg:x="859" fg:w="11"/><text x="69.4126%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.89%)</title><rect x="69.1626%" y="533" width="0.8857%" height="15" fill="rgb(251,131,20)" fg:x="859" fg:w="11"/><text x="69.4126%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.89%)</title><rect x="69.1626%" y="517" width="0.8857%" height="15" fill="rgb(248,168,52)" fg:x="859" fg:w="11"/><text x="69.4126%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="69.6457%" y="501" width="0.4026%" height="15" fill="rgb(241,220,45)" fg:x="865" fg:w="5"/><text x="69.8957%" y="511.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="69.6457%" y="485" width="0.4026%" height="15" fill="rgb(240,85,44)" fg:x="865" fg:w="5"/><text x="69.8957%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="69.6457%" y="469" width="0.4026%" height="15" fill="rgb(223,69,47)" fg:x="865" fg:w="5"/><text x="69.8957%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.9678%" y="453" width="0.0805%" height="15" fill="rgb(221,209,17)" fg:x="869" fg:w="1"/><text x="70.2178%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9678%" y="437" width="0.0805%" height="15" fill="rgb(224,194,24)" fg:x="869" fg:w="1"/><text x="70.2178%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.9678%" y="421" width="0.0805%" height="15" fill="rgb(249,43,24)" fg:x="869" fg:w="1"/><text x="70.2178%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9678%" y="405" width="0.0805%" height="15" fill="rgb(245,78,29)" fg:x="869" fg:w="1"/><text x="70.2178%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.9678%" y="389" width="0.0805%" height="15" fill="rgb(241,167,34)" fg:x="869" fg:w="1"/><text x="70.2178%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9678%" y="373" width="0.0805%" height="15" fill="rgb(225,91,27)" fg:x="869" fg:w="1"/><text x="70.2178%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.0483%" y="533" width="0.1610%" height="15" fill="rgb(249,82,49)" fg:x="870" fg:w="2"/><text x="70.2983%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.0483%" y="517" width="0.1610%" height="15" fill="rgb(215,90,36)" fg:x="870" fg:w="2"/><text x="70.2983%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="70.0483%" y="501" width="0.1610%" height="15" fill="rgb(209,128,1)" fg:x="870" fg:w="2"/><text x="70.2983%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="70.0483%" y="485" width="0.1610%" height="15" fill="rgb(233,184,1)" fg:x="870" fg:w="2"/><text x="70.2983%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="70.0483%" y="469" width="0.1610%" height="15" fill="rgb(240,59,32)" fg:x="870" fg:w="2"/><text x="70.2983%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.0483%" y="453" width="0.1610%" height="15" fill="rgb(249,163,0)" fg:x="870" fg:w="2"/><text x="70.2983%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.0483%" y="437" width="0.1610%" height="15" fill="rgb(249,220,13)" fg:x="870" fg:w="2"/><text x="70.2983%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="70.0483%" y="421" width="0.1610%" height="15" fill="rgb(235,127,52)" fg:x="870" fg:w="2"/><text x="70.2983%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="70.0483%" y="405" width="0.1610%" height="15" fill="rgb(229,172,26)" fg:x="870" fg:w="2"/><text x="70.2983%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="70.0483%" y="389" width="0.1610%" height="15" fill="rgb(217,37,29)" fg:x="870" fg:w="2"/><text x="70.2983%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="70.0483%" y="373" width="0.1610%" height="15" fill="rgb(208,66,47)" fg:x="870" fg:w="2"/><text x="70.2983%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.0483%" y="357" width="0.1610%" height="15" fill="rgb(221,99,19)" fg:x="870" fg:w="2"/><text x="70.2983%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="70.2093%" y="533" width="0.0805%" height="15" fill="rgb(214,149,49)" fg:x="872" fg:w="1"/><text x="70.4593%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.2093%" y="517" width="0.0805%" height="15" fill="rgb(229,91,37)" fg:x="872" fg:w="1"/><text x="70.4593%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (5 samples, 0.40%)</title><rect x="70.0483%" y="549" width="0.4026%" height="15" fill="rgb(207,159,48)" fg:x="870" fg:w="5"/><text x="70.2983%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="70.2899%" y="533" width="0.1610%" height="15" fill="rgb(209,125,46)" fg:x="873" fg:w="2"/><text x="70.5399%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.2899%" y="517" width="0.1610%" height="15" fill="rgb(211,188,18)" fg:x="873" fg:w="2"/><text x="70.5399%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="70.3704%" y="501" width="0.0805%" height="15" fill="rgb(207,203,34)" fg:x="874" fg:w="1"/><text x="70.6204%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="70.3704%" y="485" width="0.0805%" height="15" fill="rgb(245,182,16)" fg:x="874" fg:w="1"/><text x="70.6204%" y="495.50"></text></g><g><title>kernel::model::base::Identity::new (1 samples, 0.08%)</title><rect x="70.3704%" y="469" width="0.0805%" height="15" fill="rgb(210,66,30)" fg:x="874" fg:w="1"/><text x="70.6204%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="70.4509%" y="533" width="0.0805%" height="15" fill="rgb(230,110,14)" fg:x="875" fg:w="1"/><text x="70.7009%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.4509%" y="517" width="0.0805%" height="15" fill="rgb(242,198,32)" fg:x="875" fg:w="1"/><text x="70.7009%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.4509%" y="501" width="0.0805%" height="15" fill="rgb(213,45,23)" fg:x="875" fg:w="1"/><text x="70.7009%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4509%" y="485" width="0.0805%" height="15" fill="rgb(205,76,9)" fg:x="875" fg:w="1"/><text x="70.7009%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4509%" y="469" width="0.0805%" height="15" fill="rgb(250,200,25)" fg:x="875" fg:w="1"/><text x="70.7009%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (90 samples, 7.25%)</title><rect x="63.3655%" y="581" width="7.2464%" height="15" fill="rgb(221,161,23)" fg:x="787" fg:w="90"/><text x="63.6155%" y="591.50">&lt;plugins_c..</text></g><g><title>plugins_core::location::change_location (41 samples, 3.30%)</title><rect x="67.3108%" y="565" width="3.3011%" height="15" fill="rgb(226,135,48)" fg:x="836" fg:w="41"/><text x="67.5608%" y="575.50">plu..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="70.4509%" y="549" width="0.1610%" height="15" fill="rgb(228,33,6)" fg:x="875" fg:w="2"/><text x="70.7009%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="70.5314%" y="533" width="0.0805%" height="15" fill="rgb(237,224,9)" fg:x="876" fg:w="1"/><text x="70.7814%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="70.5314%" y="517" width="0.0805%" height="15" fill="rgb(251,61,40)" fg:x="876" fg:w="1"/><text x="70.7814%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.5314%" y="501" width="0.0805%" height="15" fill="rgb(220,222,2)" fg:x="876" fg:w="1"/><text x="70.7814%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="70.5314%" y="485" width="0.0805%" height="15" fill="rgb(238,4,8)" fg:x="876" fg:w="1"/><text x="70.7814%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.5314%" y="469" width="0.0805%" height="15" fill="rgb(240,153,3)" fg:x="876" fg:w="1"/><text x="70.7814%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5314%" y="453" width="0.0805%" height="15" fill="rgb(245,29,24)" fg:x="876" fg:w="1"/><text x="70.7814%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5314%" y="437" width="0.0805%" height="15" fill="rgb(231,220,37)" fg:x="876" fg:w="1"/><text x="70.7814%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.5314%" y="421" width="0.0805%" height="15" fill="rgb(245,33,10)" fg:x="876" fg:w="1"/><text x="70.7814%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (288 samples, 23.19%)</title><rect x="47.5040%" y="773" width="23.1884%" height="15" fill="rgb(220,227,43)" fg:x="590" fg:w="288"/><text x="47.7540%" y="783.50">&lt;engine::session::Session as kernel::..</text></g><g><title>kernel::plugins::mw::apply_middleware (287 samples, 23.11%)</title><rect x="47.5845%" y="757" width="23.1079%" height="15" fill="rgb(215,183,54)" fg:x="591" fg:w="287"/><text x="47.8345%" y="767.50">kernel::plugins::mw::apply_middleware</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (287 samples, 23.11%)</title><rect x="47.5845%" y="741" width="23.1079%" height="15" fill="rgb(242,80,26)" fg:x="591" fg:w="287"/><text x="47.8345%" y="751.50">kernel::plugins::mw::MiddlewareNext::..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (286 samples, 23.03%)</title><rect x="47.6651%" y="725" width="23.0274%" height="15" fill="rgb(206,172,49)" fg:x="592" fg:w="286"/><text x="47.9151%" y="735.50">&lt;engine::session::ExpandSurroundingsM..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (252 samples, 20.29%)</title><rect x="50.4026%" y="709" width="20.2899%" height="15" fill="rgb(249,0,10)" fg:x="626" fg:w="252"/><text x="50.6526%" y="719.50">kernel::plugins::mw::MiddlewareN..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (252 samples, 20.29%)</title><rect x="50.4026%" y="693" width="20.2899%" height="15" fill="rgb(246,171,19)" fg:x="626" fg:w="252"/><text x="50.6526%" y="703.50">&lt;plugins_dynlib::DynamicMiddlewa..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (252 samples, 20.29%)</title><rect x="50.4026%" y="677" width="20.2899%" height="15" fill="rgb(236,25,43)" fg:x="626" fg:w="252"/><text x="50.6526%" y="687.50">kernel::plugins::mw::MiddlewareN..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (252 samples, 20.29%)</title><rect x="50.4026%" y="661" width="20.2899%" height="15" fill="rgb(225,146,20)" fg:x="626" fg:w="252"/><text x="50.6526%" y="671.50">core::ops::function::FnOnce::cal..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (252 samples, 20.29%)</title><rect x="50.4026%" y="645" width="20.2899%" height="15" fill="rgb(243,50,39)" fg:x="626" fg:w="252"/><text x="50.6526%" y="655.50">kernel::plugins::mw::MiddlewareN..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (252 samples, 20.29%)</title><rect x="50.4026%" y="629" width="20.2899%" height="15" fill="rgb(239,153,27)" fg:x="626" fg:w="252"/><text x="50.6526%" y="639.50">core::ops::function::FnOnce::cal..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (252 samples, 20.29%)</title><rect x="50.4026%" y="613" width="20.2899%" height="15" fill="rgb(208,164,31)" fg:x="626" fg:w="252"/><text x="50.6526%" y="623.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (252 samples, 20.29%)</title><rect x="50.4026%" y="597" width="20.2899%" height="15" fill="rgb(231,32,38)" fg:x="626" fg:w="252"/><text x="50.6526%" y="607.50">&lt;engine::session::state::State a..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="70.6119%" y="581" width="0.0805%" height="15" fill="rgb(247,158,12)" fg:x="877" fg:w="1"/><text x="70.8619%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="70.6119%" y="565" width="0.0805%" height="15" fill="rgb(254,126,16)" fg:x="877" fg:w="1"/><text x="70.8619%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6119%" y="549" width="0.0805%" height="15" fill="rgb(246,12,32)" fg:x="877" fg:w="1"/><text x="70.8619%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6924%" y="661" width="0.0805%" height="15" fill="rgb(245,190,44)" fg:x="878" fg:w="1"/><text x="70.9424%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6924%" y="645" width="0.0805%" height="15" fill="rgb(253,148,49)" fg:x="878" fg:w="1"/><text x="70.9424%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6924%" y="629" width="0.0805%" height="15" fill="rgb(232,193,44)" fg:x="878" fg:w="1"/><text x="70.9424%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6924%" y="613" width="0.0805%" height="15" fill="rgb(212,67,50)" fg:x="878" fg:w="1"/><text x="70.9424%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6924%" y="597" width="0.0805%" height="15" fill="rgb(235,109,24)" fg:x="878" fg:w="1"/><text x="70.9424%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.6924%" y="581" width="0.0805%" height="15" fill="rgb(242,228,23)" fg:x="878" fg:w="1"/><text x="70.9424%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.6924%" y="565" width="0.0805%" height="15" fill="rgb(232,48,19)" fg:x="878" fg:w="1"/><text x="70.9424%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.6924%" y="549" width="0.0805%" height="15" fill="rgb(221,167,25)" fg:x="878" fg:w="1"/><text x="70.9424%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.6924%" y="533" width="0.0805%" height="15" fill="rgb(220,29,38)" fg:x="878" fg:w="1"/><text x="70.9424%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.6924%" y="517" width="0.0805%" height="15" fill="rgb(245,95,26)" fg:x="878" fg:w="1"/><text x="70.9424%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.6924%" y="501" width="0.0805%" height="15" fill="rgb(227,189,38)" fg:x="878" fg:w="1"/><text x="70.9424%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.6924%" y="485" width="0.0805%" height="15" fill="rgb(231,212,22)" fg:x="878" fg:w="1"/><text x="70.9424%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.6924%" y="469" width="0.0805%" height="15" fill="rgb(246,25,46)" fg:x="878" fg:w="1"/><text x="70.9424%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.6924%" y="453" width="0.0805%" height="15" fill="rgb(218,90,32)" fg:x="878" fg:w="1"/><text x="70.9424%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.6924%" y="437" width="0.0805%" height="15" fill="rgb(207,89,34)" fg:x="878" fg:w="1"/><text x="70.9424%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="70.6924%" y="741" width="0.1610%" height="15" fill="rgb(222,30,54)" fg:x="878" fg:w="2"/><text x="70.9424%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="70.6924%" y="725" width="0.1610%" height="15" fill="rgb(224,229,32)" fg:x="878" fg:w="2"/><text x="70.9424%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="70.6924%" y="709" width="0.1610%" height="15" fill="rgb(209,188,44)" fg:x="878" fg:w="2"/><text x="70.9424%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="70.6924%" y="693" width="0.1610%" height="15" fill="rgb(215,174,23)" fg:x="878" fg:w="2"/><text x="70.9424%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.6924%" y="677" width="0.1610%" height="15" fill="rgb(242,104,18)" fg:x="878" fg:w="2"/><text x="70.9424%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.7729%" y="661" width="0.0805%" height="15" fill="rgb(240,173,53)" fg:x="879" fg:w="1"/><text x="71.0229%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.7729%" y="645" width="0.0805%" height="15" fill="rgb(240,105,45)" fg:x="879" fg:w="1"/><text x="71.0229%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.7729%" y="629" width="0.0805%" height="15" fill="rgb(252,164,29)" fg:x="879" fg:w="1"/><text x="71.0229%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.7729%" y="613" width="0.0805%" height="15" fill="rgb(217,17,6)" fg:x="879" fg:w="1"/><text x="71.0229%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.0145%" y="677" width="0.0805%" height="15" fill="rgb(245,27,23)" fg:x="882" fg:w="1"/><text x="71.2645%" y="687.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="71.0145%" y="661" width="0.0805%" height="15" fill="rgb(239,73,33)" fg:x="882" fg:w="1"/><text x="71.2645%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.0950%" y="677" width="0.0805%" height="15" fill="rgb(209,140,21)" fg:x="883" fg:w="1"/><text x="71.3450%" y="687.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="71.1755%" y="629" width="0.0805%" height="15" fill="rgb(206,36,53)" fg:x="884" fg:w="1"/><text x="71.4255%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.2560%" y="597" width="0.1610%" height="15" fill="rgb(238,134,8)" fg:x="885" fg:w="2"/><text x="71.5060%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.2560%" y="581" width="0.1610%" height="15" fill="rgb(209,3,20)" fg:x="885" fg:w="2"/><text x="71.5060%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.2560%" y="565" width="0.1610%" height="15" fill="rgb(208,101,32)" fg:x="885" fg:w="2"/><text x="71.5060%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.2560%" y="549" width="0.1610%" height="15" fill="rgb(253,56,38)" fg:x="885" fg:w="2"/><text x="71.5060%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.3366%" y="533" width="0.0805%" height="15" fill="rgb(209,85,49)" fg:x="886" fg:w="1"/><text x="71.5866%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.3366%" y="517" width="0.0805%" height="15" fill="rgb(234,177,21)" fg:x="886" fg:w="1"/><text x="71.5866%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.3366%" y="501" width="0.0805%" height="15" fill="rgb(250,4,6)" fg:x="886" fg:w="1"/><text x="71.5866%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.3366%" y="485" width="0.0805%" height="15" fill="rgb(240,153,10)" fg:x="886" fg:w="1"/><text x="71.5866%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="71.3366%" y="469" width="0.0805%" height="15" fill="rgb(205,136,51)" fg:x="886" fg:w="1"/><text x="71.5866%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4171%" y="565" width="0.0805%" height="15" fill="rgb(245,165,50)" fg:x="887" fg:w="1"/><text x="71.6671%" y="575.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="70.8535%" y="725" width="0.7246%" height="15" fill="rgb(211,28,10)" fg:x="880" fg:w="9"/><text x="71.1035%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="70.9340%" y="709" width="0.6441%" height="15" fill="rgb(218,155,54)" fg:x="881" fg:w="8"/><text x="71.1840%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="70.9340%" y="693" width="0.6441%" height="15" fill="rgb(254,214,30)" fg:x="881" fg:w="8"/><text x="71.1840%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="71.1755%" y="677" width="0.4026%" height="15" fill="rgb(248,200,10)" fg:x="884" fg:w="5"/><text x="71.4255%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="71.1755%" y="661" width="0.4026%" height="15" fill="rgb(238,219,45)" fg:x="884" fg:w="5"/><text x="71.4255%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="71.1755%" y="645" width="0.4026%" height="15" fill="rgb(227,35,34)" fg:x="884" fg:w="5"/><text x="71.4255%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="71.2560%" y="629" width="0.3221%" height="15" fill="rgb(214,187,37)" fg:x="885" fg:w="4"/><text x="71.5060%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="71.2560%" y="613" width="0.3221%" height="15" fill="rgb(247,164,44)" fg:x="885" fg:w="4"/><text x="71.5060%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.4171%" y="597" width="0.1610%" height="15" fill="rgb(238,198,10)" fg:x="887" fg:w="2"/><text x="71.6671%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.4171%" y="581" width="0.1610%" height="15" fill="rgb(213,69,8)" fg:x="887" fg:w="2"/><text x="71.6671%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.4976%" y="565" width="0.0805%" height="15" fill="rgb(222,82,16)" fg:x="888" fg:w="1"/><text x="71.7476%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.6586%" y="661" width="0.0805%" height="15" fill="rgb(205,172,30)" fg:x="890" fg:w="1"/><text x="71.9086%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.6586%" y="645" width="0.0805%" height="15" fill="rgb(227,39,8)" fg:x="890" fg:w="1"/><text x="71.9086%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="71.6586%" y="629" width="0.0805%" height="15" fill="rgb(249,10,19)" fg:x="890" fg:w="1"/><text x="71.9086%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.7391%" y="613" width="0.0805%" height="15" fill="rgb(205,158,53)" fg:x="891" fg:w="1"/><text x="71.9891%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.7391%" y="597" width="0.0805%" height="15" fill="rgb(237,229,35)" fg:x="891" fg:w="1"/><text x="71.9891%" y="607.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="71.7391%" y="581" width="0.0805%" height="15" fill="rgb(238,129,14)" fg:x="891" fg:w="1"/><text x="71.9891%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="71.7391%" y="565" width="0.0805%" height="15" fill="rgb(218,217,40)" fg:x="891" fg:w="1"/><text x="71.9891%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.8196%" y="597" width="0.0805%" height="15" fill="rgb(221,187,9)" fg:x="892" fg:w="1"/><text x="72.0696%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.8196%" y="581" width="0.0805%" height="15" fill="rgb(214,108,19)" fg:x="892" fg:w="1"/><text x="72.0696%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.8196%" y="565" width="0.0805%" height="15" fill="rgb(216,86,23)" fg:x="892" fg:w="1"/><text x="72.0696%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="71.8196%" y="549" width="0.0805%" height="15" fill="rgb(209,116,23)" fg:x="892" fg:w="1"/><text x="72.0696%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.8196%" y="533" width="0.0805%" height="15" fill="rgb(222,185,40)" fg:x="892" fg:w="1"/><text x="72.0696%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="71.7391%" y="645" width="0.2415%" height="15" fill="rgb(238,150,2)" fg:x="891" fg:w="3"/><text x="71.9891%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.7391%" y="629" width="0.2415%" height="15" fill="rgb(229,132,47)" fg:x="891" fg:w="3"/><text x="71.9891%" y="639.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="71.8196%" y="613" width="0.1610%" height="15" fill="rgb(231,7,23)" fg:x="892" fg:w="2"/><text x="72.0696%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="71.9002%" y="597" width="0.0805%" height="15" fill="rgb(235,12,37)" fg:x="893" fg:w="1"/><text x="72.1502%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.9002%" y="581" width="0.0805%" height="15" fill="rgb(247,170,51)" fg:x="893" fg:w="1"/><text x="72.1502%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="71.5781%" y="693" width="0.4831%" height="15" fill="rgb(210,62,49)" fg:x="889" fg:w="6"/><text x="71.8281%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="71.5781%" y="677" width="0.4831%" height="15" fill="rgb(248,30,8)" fg:x="889" fg:w="6"/><text x="71.8281%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="71.7391%" y="661" width="0.3221%" height="15" fill="rgb(252,11,2)" fg:x="891" fg:w="4"/><text x="71.9891%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.9807%" y="645" width="0.0805%" height="15" fill="rgb(249,65,4)" fg:x="894" fg:w="1"/><text x="72.2307%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.9807%" y="629" width="0.0805%" height="15" fill="rgb(217,219,7)" fg:x="894" fg:w="1"/><text x="72.2307%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="71.9807%" y="613" width="0.0805%" height="15" fill="rgb(222,186,36)" fg:x="894" fg:w="1"/><text x="72.2307%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.9807%" y="597" width="0.0805%" height="15" fill="rgb(247,184,5)" fg:x="894" fg:w="1"/><text x="72.2307%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.9807%" y="581" width="0.0805%" height="15" fill="rgb(221,108,7)" fg:x="894" fg:w="1"/><text x="72.2307%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.9807%" y="565" width="0.0805%" height="15" fill="rgb(209,208,22)" fg:x="894" fg:w="1"/><text x="72.2307%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.9807%" y="549" width="0.0805%" height="15" fill="rgb(247,106,21)" fg:x="894" fg:w="1"/><text x="72.2307%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.29%)</title><rect x="70.8535%" y="741" width="1.2882%" height="15" fill="rgb(223,2,44)" fg:x="880" fg:w="16"/><text x="71.1035%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="71.5781%" y="725" width="0.5636%" height="15" fill="rgb(208,190,12)" fg:x="889" fg:w="7"/><text x="71.8281%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="71.5781%" y="709" width="0.5636%" height="15" fill="rgb(250,221,0)" fg:x="889" fg:w="7"/><text x="71.8281%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0612%" y="693" width="0.0805%" height="15" fill="rgb(212,210,16)" fg:x="895" fg:w="1"/><text x="72.3112%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0612%" y="677" width="0.0805%" height="15" fill="rgb(212,224,21)" fg:x="895" fg:w="1"/><text x="72.3112%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.0612%" y="661" width="0.0805%" height="15" fill="rgb(206,186,54)" fg:x="895" fg:w="1"/><text x="72.3112%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="72.1417%" y="725" width="0.0805%" height="15" fill="rgb(213,211,25)" fg:x="896" fg:w="1"/><text x="72.3917%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.2222%" y="645" width="0.2415%" height="15" fill="rgb(243,78,36)" fg:x="897" fg:w="3"/><text x="72.4722%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.3027%" y="629" width="0.1610%" height="15" fill="rgb(236,105,24)" fg:x="898" fg:w="2"/><text x="72.5527%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3833%" y="613" width="0.0805%" height="15" fill="rgb(223,46,45)" fg:x="899" fg:w="1"/><text x="72.6333%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.3833%" y="597" width="0.0805%" height="15" fill="rgb(249,65,35)" fg:x="899" fg:w="1"/><text x="72.6333%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.3833%" y="581" width="0.0805%" height="15" fill="rgb(226,122,19)" fg:x="899" fg:w="1"/><text x="72.6333%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.3833%" y="565" width="0.0805%" height="15" fill="rgb(253,17,37)" fg:x="899" fg:w="1"/><text x="72.6333%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.3833%" y="549" width="0.0805%" height="15" fill="rgb(223,138,24)" fg:x="899" fg:w="1"/><text x="72.6333%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.3833%" y="533" width="0.0805%" height="15" fill="rgb(227,89,20)" fg:x="899" fg:w="1"/><text x="72.6333%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.3833%" y="517" width="0.0805%" height="15" fill="rgb(239,140,41)" fg:x="899" fg:w="1"/><text x="72.6333%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.3833%" y="501" width="0.0805%" height="15" fill="rgb(237,29,24)" fg:x="899" fg:w="1"/><text x="72.6333%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.3833%" y="485" width="0.0805%" height="15" fill="rgb(212,123,27)" fg:x="899" fg:w="1"/><text x="72.6333%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.3833%" y="469" width="0.0805%" height="15" fill="rgb(236,173,10)" fg:x="899" fg:w="1"/><text x="72.6333%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3833%" y="453" width="0.0805%" height="15" fill="rgb(244,17,3)" fg:x="899" fg:w="1"/><text x="72.6333%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="72.2222%" y="693" width="0.3221%" height="15" fill="rgb(220,73,21)" fg:x="897" fg:w="4"/><text x="72.4722%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="72.2222%" y="677" width="0.3221%" height="15" fill="rgb(220,187,17)" fg:x="897" fg:w="4"/><text x="72.4722%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="72.2222%" y="661" width="0.3221%" height="15" fill="rgb(236,64,13)" fg:x="897" fg:w="4"/><text x="72.4722%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.4638%" y="645" width="0.0805%" height="15" fill="rgb(214,111,25)" fg:x="900" fg:w="1"/><text x="72.7138%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="72.1417%" y="741" width="0.4831%" height="15" fill="rgb(251,123,0)" fg:x="896" fg:w="6"/><text x="72.3917%" y="751.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="72.2222%" y="725" width="0.4026%" height="15" fill="rgb(210,8,32)" fg:x="897" fg:w="5"/><text x="72.4722%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="72.2222%" y="709" width="0.4026%" height="15" fill="rgb(221,27,44)" fg:x="897" fg:w="5"/><text x="72.4722%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.5443%" y="693" width="0.0805%" height="15" fill="rgb(233,207,54)" fg:x="901" fg:w="1"/><text x="72.7943%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5443%" y="677" width="0.0805%" height="15" fill="rgb(219,217,1)" fg:x="901" fg:w="1"/><text x="72.7943%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.5443%" y="661" width="0.0805%" height="15" fill="rgb(236,150,15)" fg:x="901" fg:w="1"/><text x="72.7943%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5443%" y="645" width="0.0805%" height="15" fill="rgb(244,119,54)" fg:x="901" fg:w="1"/><text x="72.7943%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.5443%" y="629" width="0.0805%" height="15" fill="rgb(218,116,36)" fg:x="901" fg:w="1"/><text x="72.7943%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5443%" y="613" width="0.0805%" height="15" fill="rgb(215,42,32)" fg:x="901" fg:w="1"/><text x="72.7943%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5443%" y="597" width="0.0805%" height="15" fill="rgb(254,87,2)" fg:x="901" fg:w="1"/><text x="72.7943%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (25 samples, 2.01%)</title><rect x="70.6924%" y="773" width="2.0129%" height="15" fill="rgb(241,195,45)" fg:x="878" fg:w="25"/><text x="70.9424%" y="783.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (25 samples, 2.01%)</title><rect x="70.6924%" y="757" width="2.0129%" height="15" fill="rgb(252,11,14)" fg:x="878" fg:w="25"/><text x="70.9424%" y="767.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="72.6248%" y="741" width="0.0805%" height="15" fill="rgb(233,199,43)" fg:x="902" fg:w="1"/><text x="72.8748%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.6248%" y="725" width="0.0805%" height="15" fill="rgb(243,170,27)" fg:x="902" fg:w="1"/><text x="72.8748%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.6248%" y="709" width="0.0805%" height="15" fill="rgb(236,178,54)" fg:x="902" fg:w="1"/><text x="72.8748%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.6248%" y="693" width="0.0805%" height="15" fill="rgb(230,38,12)" fg:x="902" fg:w="1"/><text x="72.8748%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="72.7053%" y="741" width="0.0805%" height="15" fill="rgb(241,44,47)" fg:x="903" fg:w="1"/><text x="72.9553%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.8663%" y="693" width="0.0805%" height="15" fill="rgb(218,99,12)" fg:x="905" fg:w="1"/><text x="73.1163%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.8663%" y="677" width="0.0805%" height="15" fill="rgb(211,48,36)" fg:x="905" fg:w="1"/><text x="73.1163%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.8663%" y="661" width="0.0805%" height="15" fill="rgb(220,81,29)" fg:x="905" fg:w="1"/><text x="73.1163%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8663%" y="645" width="0.0805%" height="15" fill="rgb(232,121,54)" fg:x="905" fg:w="1"/><text x="73.1163%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="72.7858%" y="725" width="0.2415%" height="15" fill="rgb(236,227,37)" fg:x="904" fg:w="3"/><text x="73.0358%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="72.8663%" y="709" width="0.1610%" height="15" fill="rgb(207,43,26)" fg:x="905" fg:w="2"/><text x="73.1163%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="72.9469%" y="693" width="0.0805%" height="15" fill="rgb(224,163,34)" fg:x="906" fg:w="1"/><text x="73.1969%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9469%" y="677" width="0.0805%" height="15" fill="rgb(228,127,11)" fg:x="906" fg:w="1"/><text x="73.1969%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.0274%" y="661" width="0.0805%" height="15" fill="rgb(215,32,51)" fg:x="907" fg:w="1"/><text x="73.2774%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.1079%" y="629" width="0.0805%" height="15" fill="rgb(206,180,37)" fg:x="908" fg:w="1"/><text x="73.3579%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1079%" y="613" width="0.0805%" height="15" fill="rgb(245,217,39)" fg:x="908" fg:w="1"/><text x="73.3579%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1884%" y="597" width="0.0805%" height="15" fill="rgb(237,179,18)" fg:x="909" fg:w="1"/><text x="73.4384%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.2689%" y="533" width="0.0805%" height="15" fill="rgb(248,177,3)" fg:x="910" fg:w="1"/><text x="73.5189%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.2689%" y="517" width="0.0805%" height="15" fill="rgb(208,31,45)" fg:x="910" fg:w="1"/><text x="73.5189%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.2689%" y="501" width="0.0805%" height="15" fill="rgb(231,16,43)" fg:x="910" fg:w="1"/><text x="73.5189%" y="511.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="73.0274%" y="709" width="0.4026%" height="15" fill="rgb(246,12,20)" fg:x="907" fg:w="5"/><text x="73.2774%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="73.0274%" y="693" width="0.4026%" height="15" fill="rgb(214,40,41)" fg:x="907" fg:w="5"/><text x="73.2774%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="73.0274%" y="677" width="0.4026%" height="15" fill="rgb(225,183,42)" fg:x="907" fg:w="5"/><text x="73.2774%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="73.1079%" y="661" width="0.3221%" height="15" fill="rgb(229,88,50)" fg:x="908" fg:w="4"/><text x="73.3579%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="73.1079%" y="645" width="0.3221%" height="15" fill="rgb(247,34,33)" fg:x="908" fg:w="4"/><text x="73.3579%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="73.1884%" y="629" width="0.2415%" height="15" fill="rgb(246,163,52)" fg:x="909" fg:w="3"/><text x="73.4384%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="73.1884%" y="613" width="0.2415%" height="15" fill="rgb(251,13,27)" fg:x="909" fg:w="3"/><text x="73.4384%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="73.2689%" y="597" width="0.1610%" height="15" fill="rgb(218,127,46)" fg:x="910" fg:w="2"/><text x="73.5189%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.2689%" y="581" width="0.1610%" height="15" fill="rgb(215,155,29)" fg:x="910" fg:w="2"/><text x="73.5189%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="73.2689%" y="565" width="0.1610%" height="15" fill="rgb(251,180,13)" fg:x="910" fg:w="2"/><text x="73.5189%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.2689%" y="549" width="0.1610%" height="15" fill="rgb(246,215,19)" fg:x="910" fg:w="2"/><text x="73.5189%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.3494%" y="533" width="0.0805%" height="15" fill="rgb(210,47,28)" fg:x="911" fg:w="1"/><text x="73.5994%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.3494%" y="517" width="0.0805%" height="15" fill="rgb(231,175,40)" fg:x="911" fg:w="1"/><text x="73.5994%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.3494%" y="501" width="0.0805%" height="15" fill="rgb(207,138,24)" fg:x="911" fg:w="1"/><text x="73.5994%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.3494%" y="485" width="0.0805%" height="15" fill="rgb(216,44,38)" fg:x="911" fg:w="1"/><text x="73.5994%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.3494%" y="469" width="0.0805%" height="15" fill="rgb(206,81,53)" fg:x="911" fg:w="1"/><text x="73.5994%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4300%" y="677" width="0.0805%" height="15" fill="rgb(246,139,21)" fg:x="912" fg:w="1"/><text x="73.6800%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.5105%" y="677" width="0.0805%" height="15" fill="rgb(212,163,26)" fg:x="913" fg:w="1"/><text x="73.7605%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.5910%" y="645" width="0.0805%" height="15" fill="rgb(223,82,35)" fg:x="914" fg:w="1"/><text x="73.8410%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.5910%" y="629" width="0.0805%" height="15" fill="rgb(224,76,13)" fg:x="914" fg:w="1"/><text x="73.8410%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="73.5910%" y="613" width="0.0805%" height="15" fill="rgb(240,2,40)" fg:x="914" fg:w="1"/><text x="73.8410%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.6715%" y="629" width="0.1610%" height="15" fill="rgb(232,188,36)" fg:x="915" fg:w="2"/><text x="73.9215%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.7520%" y="613" width="0.0805%" height="15" fill="rgb(249,34,46)" fg:x="916" fg:w="1"/><text x="74.0020%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.7520%" y="597" width="0.0805%" height="15" fill="rgb(226,99,19)" fg:x="916" fg:w="1"/><text x="74.0020%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.7520%" y="581" width="0.0805%" height="15" fill="rgb(207,78,52)" fg:x="916" fg:w="1"/><text x="74.0020%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="73.8325%" y="629" width="0.0805%" height="15" fill="rgb(241,119,8)" fg:x="917" fg:w="1"/><text x="74.0825%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.8325%" y="613" width="0.0805%" height="15" fill="rgb(238,31,9)" fg:x="917" fg:w="1"/><text x="74.0825%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="73.8325%" y="597" width="0.0805%" height="15" fill="rgb(223,165,6)" fg:x="917" fg:w="1"/><text x="74.0825%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="73.8325%" y="581" width="0.0805%" height="15" fill="rgb(227,228,21)" fg:x="917" fg:w="1"/><text x="74.0825%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="73.5910%" y="677" width="0.4026%" height="15" fill="rgb(206,188,51)" fg:x="914" fg:w="5"/><text x="73.8410%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="73.5910%" y="661" width="0.4026%" height="15" fill="rgb(225,207,23)" fg:x="914" fg:w="5"/><text x="73.8410%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="73.6715%" y="645" width="0.3221%" height="15" fill="rgb(232,197,54)" fg:x="915" fg:w="4"/><text x="73.9215%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.9130%" y="629" width="0.0805%" height="15" fill="rgb(229,149,21)" fg:x="918" fg:w="1"/><text x="74.1630%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.9130%" y="613" width="0.0805%" height="15" fill="rgb(209,197,1)" fg:x="918" fg:w="1"/><text x="74.1630%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.9130%" y="597" width="0.0805%" height="15" fill="rgb(227,82,17)" fg:x="918" fg:w="1"/><text x="74.1630%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (13 samples, 1.05%)</title><rect x="73.0274%" y="725" width="1.0467%" height="15" fill="rgb(237,201,43)" fg:x="907" fg:w="13"/><text x="73.2774%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="73.4300%" y="709" width="0.6441%" height="15" fill="rgb(221,91,37)" fg:x="912" fg:w="8"/><text x="73.6800%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="73.4300%" y="693" width="0.6441%" height="15" fill="rgb(239,35,7)" fg:x="912" fg:w="8"/><text x="73.6800%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.9936%" y="677" width="0.0805%" height="15" fill="rgb(234,145,45)" fg:x="919" fg:w="1"/><text x="74.2436%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.9936%" y="661" width="0.0805%" height="15" fill="rgb(214,151,47)" fg:x="919" fg:w="1"/><text x="74.2436%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0741%" y="581" width="0.0805%" height="15" fill="rgb(248,62,54)" fg:x="920" fg:w="1"/><text x="74.3241%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0741%" y="565" width="0.0805%" height="15" fill="rgb(236,99,21)" fg:x="920" fg:w="1"/><text x="74.3241%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.1546%" y="549" width="0.0805%" height="15" fill="rgb(223,94,43)" fg:x="921" fg:w="1"/><text x="74.4046%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (20 samples, 1.61%)</title><rect x="72.7053%" y="757" width="1.6103%" height="15" fill="rgb(214,66,6)" fg:x="903" fg:w="20"/><text x="72.9553%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.53%)</title><rect x="72.7858%" y="741" width="1.5298%" height="15" fill="rgb(231,152,46)" fg:x="904" fg:w="19"/><text x="73.0358%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="74.0741%" y="725" width="0.2415%" height="15" fill="rgb(254,0,48)" fg:x="920" fg:w="3"/><text x="74.3241%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.0741%" y="709" width="0.2415%" height="15" fill="rgb(225,136,42)" fg:x="920" fg:w="3"/><text x="74.3241%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.0741%" y="693" width="0.2415%" height="15" fill="rgb(231,194,28)" fg:x="920" fg:w="3"/><text x="74.3241%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.0741%" y="677" width="0.2415%" height="15" fill="rgb(248,141,22)" fg:x="920" fg:w="3"/><text x="74.3241%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.0741%" y="661" width="0.2415%" height="15" fill="rgb(222,133,1)" fg:x="920" fg:w="3"/><text x="74.3241%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.0741%" y="645" width="0.2415%" height="15" fill="rgb(222,50,8)" fg:x="920" fg:w="3"/><text x="74.3241%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.0741%" y="629" width="0.2415%" height="15" fill="rgb(215,67,27)" fg:x="920" fg:w="3"/><text x="74.3241%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="74.0741%" y="613" width="0.2415%" height="15" fill="rgb(220,102,37)" fg:x="920" fg:w="3"/><text x="74.3241%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.0741%" y="597" width="0.2415%" height="15" fill="rgb(222,64,25)" fg:x="920" fg:w="3"/><text x="74.3241%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.1546%" y="581" width="0.1610%" height="15" fill="rgb(215,40,16)" fg:x="921" fg:w="2"/><text x="74.4046%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.1546%" y="565" width="0.1610%" height="15" fill="rgb(252,171,3)" fg:x="921" fg:w="2"/><text x="74.4046%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.2351%" y="549" width="0.0805%" height="15" fill="rgb(252,199,51)" fg:x="922" fg:w="1"/><text x="74.4851%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.2351%" y="533" width="0.0805%" height="15" fill="rgb(244,42,10)" fg:x="922" fg:w="1"/><text x="74.4851%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.2351%" y="517" width="0.0805%" height="15" fill="rgb(243,169,37)" fg:x="922" fg:w="1"/><text x="74.4851%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.2351%" y="501" width="0.0805%" height="15" fill="rgb(241,140,9)" fg:x="922" fg:w="1"/><text x="74.4851%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (21 samples, 1.69%)</title><rect x="72.7053%" y="773" width="1.6908%" height="15" fill="rgb(241,66,40)" fg:x="903" fg:w="21"/><text x="72.9553%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="74.3156%" y="757" width="0.0805%" height="15" fill="rgb(220,50,41)" fg:x="923" fg:w="1"/><text x="74.5656%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.3156%" y="741" width="0.0805%" height="15" fill="rgb(214,104,9)" fg:x="923" fg:w="1"/><text x="74.5656%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.3156%" y="725" width="0.0805%" height="15" fill="rgb(241,227,25)" fg:x="923" fg:w="1"/><text x="74.5656%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.3156%" y="709" width="0.0805%" height="15" fill="rgb(248,37,46)" fg:x="923" fg:w="1"/><text x="74.5656%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.3156%" y="693" width="0.0805%" height="15" fill="rgb(243,52,43)" fg:x="923" fg:w="1"/><text x="74.5656%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="74.3156%" y="677" width="0.0805%" height="15" fill="rgb(232,122,17)" fg:x="923" fg:w="1"/><text x="74.5656%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.3156%" y="661" width="0.0805%" height="15" fill="rgb(242,15,36)" fg:x="923" fg:w="1"/><text x="74.5656%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.3156%" y="645" width="0.0805%" height="15" fill="rgb(232,63,30)" fg:x="923" fg:w="1"/><text x="74.5656%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.3156%" y="629" width="0.0805%" height="15" fill="rgb(237,86,45)" fg:x="923" fg:w="1"/><text x="74.5656%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="74.3156%" y="613" width="0.0805%" height="15" fill="rgb(245,123,47)" fg:x="923" fg:w="1"/><text x="74.5656%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.3156%" y="597" width="0.0805%" height="15" fill="rgb(252,85,3)" fg:x="923" fg:w="1"/><text x="74.5656%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.3156%" y="581" width="0.0805%" height="15" fill="rgb(249,171,16)" fg:x="923" fg:w="1"/><text x="74.5656%" y="591.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="74.3961%" y="773" width="0.2415%" height="15" fill="rgb(225,146,54)" fg:x="924" fg:w="3"/><text x="74.6461%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="74.3961%" y="757" width="0.2415%" height="15" fill="rgb(213,216,54)" fg:x="924" fg:w="3"/><text x="74.6461%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="74.4767%" y="741" width="0.1610%" height="15" fill="rgb(236,60,6)" fg:x="925" fg:w="2"/><text x="74.7267%" y="751.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="74.4767%" y="725" width="0.1610%" height="15" fill="rgb(227,93,24)" fg:x="925" fg:w="2"/><text x="74.7267%" y="735.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="74.4767%" y="709" width="0.1610%" height="15" fill="rgb(219,41,42)" fg:x="925" fg:w="2"/><text x="74.7267%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="74.4767%" y="693" width="0.1610%" height="15" fill="rgb(229,52,32)" fg:x="925" fg:w="2"/><text x="74.7267%" y="703.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="74.5572%" y="677" width="0.0805%" height="15" fill="rgb(221,33,40)" fg:x="926" fg:w="1"/><text x="74.8072%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="74.6377%" y="773" width="0.1610%" height="15" fill="rgb(216,109,23)" fg:x="927" fg:w="2"/><text x="74.8877%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7987%" y="773" width="0.0805%" height="15" fill="rgb(214,39,24)" fg:x="929" fg:w="1"/><text x="75.0487%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8792%" y="757" width="0.0805%" height="15" fill="rgb(205,36,6)" fg:x="930" fg:w="1"/><text x="75.1292%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8792%" y="741" width="0.0805%" height="15" fill="rgb(222,146,34)" fg:x="930" fg:w="1"/><text x="75.1292%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.8792%" y="725" width="0.0805%" height="15" fill="rgb(214,72,53)" fg:x="930" fg:w="1"/><text x="75.1292%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.8792%" y="709" width="0.0805%" height="15" fill="rgb(250,157,2)" fg:x="930" fg:w="1"/><text x="75.1292%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.8792%" y="693" width="0.0805%" height="15" fill="rgb(248,5,23)" fg:x="930" fg:w="1"/><text x="75.1292%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="74.8792%" y="677" width="0.0805%" height="15" fill="rgb(207,146,36)" fg:x="930" fg:w="1"/><text x="75.1292%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.8792%" y="661" width="0.0805%" height="15" fill="rgb(205,184,43)" fg:x="930" fg:w="1"/><text x="75.1292%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.9597%" y="725" width="0.0805%" height="15" fill="rgb(251,150,46)" fg:x="931" fg:w="1"/><text x="75.2097%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9597%" y="709" width="0.0805%" height="15" fill="rgb(227,224,12)" fg:x="931" fg:w="1"/><text x="75.2097%" y="719.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="74.8792%" y="773" width="0.4026%" height="15" fill="rgb(215,26,26)" fg:x="930" fg:w="5"/><text x="75.1292%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="74.9597%" y="757" width="0.3221%" height="15" fill="rgb(238,180,42)" fg:x="931" fg:w="4"/><text x="75.2097%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="74.9597%" y="741" width="0.3221%" height="15" fill="rgb(218,148,48)" fg:x="931" fg:w="4"/><text x="75.2097%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="75.0403%" y="725" width="0.2415%" height="15" fill="rgb(252,14,36)" fg:x="932" fg:w="3"/><text x="75.2903%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.0403%" y="709" width="0.2415%" height="15" fill="rgb(224,35,37)" fg:x="932" fg:w="3"/><text x="75.2903%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="75.0403%" y="693" width="0.2415%" height="15" fill="rgb(245,177,29)" fg:x="932" fg:w="3"/><text x="75.2903%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.0403%" y="677" width="0.2415%" height="15" fill="rgb(221,149,34)" fg:x="932" fg:w="3"/><text x="75.2903%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.2013%" y="661" width="0.0805%" height="15" fill="rgb(239,115,36)" fg:x="934" fg:w="1"/><text x="75.4513%" y="671.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (347 samples, 27.94%)</title><rect x="47.4235%" y="789" width="27.9388%" height="15" fill="rgb(226,196,40)" fg:x="589" fg:w="347"/><text x="47.6735%" y="799.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="75.2818%" y="773" width="0.0805%" height="15" fill="rgb(209,206,26)" fg:x="935" fg:w="1"/><text x="75.5318%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="75.2818%" y="757" width="0.0805%" height="15" fill="rgb(225,13,33)" fg:x="935" fg:w="1"/><text x="75.5318%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="75.2818%" y="741" width="0.0805%" height="15" fill="rgb(244,126,22)" fg:x="935" fg:w="1"/><text x="75.5318%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.2818%" y="725" width="0.0805%" height="15" fill="rgb(248,213,25)" fg:x="935" fg:w="1"/><text x="75.5318%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.2818%" y="709" width="0.0805%" height="15" fill="rgb(222,94,36)" fg:x="935" fg:w="1"/><text x="75.5318%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="75.2818%" y="693" width="0.0805%" height="15" fill="rgb(212,114,20)" fg:x="935" fg:w="1"/><text x="75.5318%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.2818%" y="677" width="0.0805%" height="15" fill="rgb(213,157,26)" fg:x="935" fg:w="1"/><text x="75.5318%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.2818%" y="661" width="0.0805%" height="15" fill="rgb(211,130,1)" fg:x="935" fg:w="1"/><text x="75.5318%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.2818%" y="645" width="0.0805%" height="15" fill="rgb(212,83,53)" fg:x="935" fg:w="1"/><text x="75.5318%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="75.2818%" y="629" width="0.0805%" height="15" fill="rgb(238,129,10)" fg:x="935" fg:w="1"/><text x="75.5318%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.2818%" y="613" width="0.0805%" height="15" fill="rgb(213,76,2)" fg:x="935" fg:w="1"/><text x="75.5318%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (937 samples, 75.44%)</title><rect x="0.0000%" y="837" width="75.4428%" height="15" fill="rgb(220,189,22)" fg:x="0" fg:w="937"/><text x="0.2500%" y="847.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (937 samples, 75.44%)</title><rect x="0.0000%" y="821" width="75.4428%" height="15" fill="rgb(250,155,31)" fg:x="0" fg:w="937"/><text x="0.2500%" y="831.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (937 samples, 75.44%)</title><rect x="0.0000%" y="805" width="75.4428%" height="15" fill="rgb(218,184,22)" fg:x="0" fg:w="937"/><text x="0.2500%" y="815.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="75.3623%" y="789" width="0.0805%" height="15" fill="rgb(247,117,4)" fg:x="936" fg:w="1"/><text x="75.6123%" y="799.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3623%" y="773" width="0.0805%" height="15" fill="rgb(253,185,37)" fg:x="936" fg:w="1"/><text x="75.6123%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.4428%" y="773" width="0.0805%" height="15" fill="rgb(226,36,44)" fg:x="937" fg:w="1"/><text x="75.6928%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="75.5233%" y="773" width="0.1610%" height="15" fill="rgb(224,7,24)" fg:x="938" fg:w="2"/><text x="75.7733%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="75.5233%" y="757" width="0.1610%" height="15" fill="rgb(239,201,0)" fg:x="938" fg:w="2"/><text x="75.7733%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.6844%" y="645" width="0.0805%" height="15" fill="rgb(218,56,33)" fg:x="940" fg:w="1"/><text x="75.9344%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.7649%" y="629" width="0.0805%" height="15" fill="rgb(210,187,29)" fg:x="941" fg:w="1"/><text x="76.0149%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="75.6844%" y="709" width="0.3221%" height="15" fill="rgb(206,158,49)" fg:x="940" fg:w="4"/><text x="75.9344%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="75.6844%" y="693" width="0.3221%" height="15" fill="rgb(234,36,5)" fg:x="940" fg:w="4"/><text x="75.9344%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="75.6844%" y="677" width="0.3221%" height="15" fill="rgb(239,79,15)" fg:x="940" fg:w="4"/><text x="75.9344%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="75.6844%" y="661" width="0.3221%" height="15" fill="rgb(240,136,17)" fg:x="940" fg:w="4"/><text x="75.9344%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.7649%" y="645" width="0.2415%" height="15" fill="rgb(227,83,12)" fg:x="941" fg:w="3"/><text x="76.0149%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.8454%" y="629" width="0.1610%" height="15" fill="rgb(212,2,8)" fg:x="942" fg:w="2"/><text x="76.0954%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="75.8454%" y="613" width="0.1610%" height="15" fill="rgb(219,144,5)" fg:x="942" fg:w="2"/><text x="76.0954%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.9259%" y="597" width="0.0805%" height="15" fill="rgb(253,204,27)" fg:x="943" fg:w="1"/><text x="76.1759%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="75.6844%" y="725" width="0.4026%" height="15" fill="rgb(228,188,17)" fg:x="940" fg:w="5"/><text x="75.9344%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0064%" y="709" width="0.0805%" height="15" fill="rgb(208,198,33)" fg:x="944" fg:w="1"/><text x="76.2564%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="75.4428%" y="789" width="0.7246%" height="15" fill="rgb(249,153,19)" fg:x="937" fg:w="9"/><text x="75.6928%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (6 samples, 0.48%)</title><rect x="75.6844%" y="773" width="0.4831%" height="15" fill="rgb(222,193,37)" fg:x="940" fg:w="6"/><text x="75.9344%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="75.6844%" y="757" width="0.4831%" height="15" fill="rgb(215,168,16)" fg:x="940" fg:w="6"/><text x="75.9344%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (6 samples, 0.48%)</title><rect x="75.6844%" y="741" width="0.4831%" height="15" fill="rgb(238,69,36)" fg:x="940" fg:w="6"/><text x="75.9344%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0870%" y="725" width="0.0805%" height="15" fill="rgb(227,11,51)" fg:x="945" fg:w="1"/><text x="76.3370%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.1675%" y="725" width="0.0805%" height="15" fill="rgb(214,204,5)" fg:x="946" fg:w="1"/><text x="76.4175%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.1675%" y="709" width="0.0805%" height="15" fill="rgb(242,182,42)" fg:x="946" fg:w="1"/><text x="76.4175%" y="719.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="76.2480%" y="725" width="0.0805%" height="15" fill="rgb(212,208,46)" fg:x="947" fg:w="1"/><text x="76.4980%" y="735.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="76.3285%" y="677" width="0.0805%" height="15" fill="rgb(249,22,49)" fg:x="948" fg:w="1"/><text x="76.5785%" y="687.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="76.4895%" y="613" width="0.0805%" height="15" fill="rgb(226,130,52)" fg:x="950" fg:w="1"/><text x="76.7395%" y="623.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (11 samples, 0.89%)</title><rect x="76.1675%" y="789" width="0.8857%" height="15" fill="rgb(209,156,10)" fg:x="946" fg:w="11"/><text x="76.4175%" y="799.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (11 samples, 0.89%)</title><rect x="76.1675%" y="773" width="0.8857%" height="15" fill="rgb(207,125,47)" fg:x="946" fg:w="11"/><text x="76.4175%" y="783.50"></text></g><g><title>engine::session::Session::new (11 samples, 0.89%)</title><rect x="76.1675%" y="757" width="0.8857%" height="15" fill="rgb(221,117,28)" fg:x="946" fg:w="11"/><text x="76.4175%" y="767.50"></text></g><g><title>engine::session::Session::initialize (11 samples, 0.89%)</title><rect x="76.1675%" y="741" width="0.8857%" height="15" fill="rgb(221,170,12)" fg:x="946" fg:w="11"/><text x="76.4175%" y="751.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (9 samples, 0.72%)</title><rect x="76.3285%" y="725" width="0.7246%" height="15" fill="rgb(241,222,52)" fg:x="948" fg:w="9"/><text x="76.5785%" y="735.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.72%)</title><rect x="76.3285%" y="709" width="0.7246%" height="15" fill="rgb(219,52,6)" fg:x="948" fg:w="9"/><text x="76.5785%" y="719.50"></text></g><g><title>libloading::safe::Library::new (9 samples, 0.72%)</title><rect x="76.3285%" y="693" width="0.7246%" height="15" fill="rgb(226,144,34)" fg:x="948" fg:w="9"/><text x="76.5785%" y="703.50"></text></g><g><title>dlopen (8 samples, 0.64%)</title><rect x="76.4090%" y="677" width="0.6441%" height="15" fill="rgb(231,179,27)" fg:x="949" fg:w="8"/><text x="76.6590%" y="687.50"></text></g><g><title>_dl_catch_error (8 samples, 0.64%)</title><rect x="76.4090%" y="661" width="0.6441%" height="15" fill="rgb(211,178,51)" fg:x="949" fg:w="8"/><text x="76.6590%" y="671.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="76.4090%" y="645" width="0.6441%" height="15" fill="rgb(233,141,5)" fg:x="949" fg:w="8"/><text x="76.6590%" y="655.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="76.4090%" y="629" width="0.6441%" height="15" fill="rgb(214,10,9)" fg:x="949" fg:w="8"/><text x="76.6590%" y="639.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="76.5700%" y="613" width="0.4831%" height="15" fill="rgb(209,0,1)" fg:x="951" fg:w="6"/><text x="76.8200%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="77.0531%" y="773" width="0.0805%" height="15" fill="rgb(207,82,30)" fg:x="957" fg:w="1"/><text x="77.3031%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="77.1337%" y="757" width="0.0805%" height="15" fill="rgb(224,214,13)" fg:x="958" fg:w="1"/><text x="77.3837%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1337%" y="741" width="0.0805%" height="15" fill="rgb(237,84,33)" fg:x="958" fg:w="1"/><text x="77.3837%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.1337%" y="725" width="0.0805%" height="15" fill="rgb(231,25,9)" fg:x="958" fg:w="1"/><text x="77.3837%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.2142%" y="725" width="0.0805%" height="15" fill="rgb(207,51,8)" fg:x="959" fg:w="1"/><text x="77.4642%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="77.2142%" y="709" width="0.0805%" height="15" fill="rgb(234,189,54)" fg:x="959" fg:w="1"/><text x="77.4642%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="77.2142%" y="693" width="0.0805%" height="15" fill="rgb(214,188,52)" fg:x="959" fg:w="1"/><text x="77.4642%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.4557%" y="661" width="0.0805%" height="15" fill="rgb(214,17,11)" fg:x="962" fg:w="1"/><text x="77.7057%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4557%" y="645" width="0.0805%" height="15" fill="rgb(250,31,36)" fg:x="962" fg:w="1"/><text x="77.7057%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.4557%" y="629" width="0.0805%" height="15" fill="rgb(244,57,44)" fg:x="962" fg:w="1"/><text x="77.7057%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="77.4557%" y="613" width="0.0805%" height="15" fill="rgb(209,209,31)" fg:x="962" fg:w="1"/><text x="77.7057%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="77.3752%" y="677" width="0.3221%" height="15" fill="rgb(217,47,5)" fg:x="961" fg:w="4"/><text x="77.6252%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.5362%" y="661" width="0.1610%" height="15" fill="rgb(214,78,42)" fg:x="963" fg:w="2"/><text x="77.7862%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.5362%" y="645" width="0.1610%" height="15" fill="rgb(226,15,23)" fg:x="963" fg:w="2"/><text x="77.7862%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.6167%" y="629" width="0.0805%" height="15" fill="rgb(230,171,7)" fg:x="964" fg:w="1"/><text x="77.8667%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.7778%" y="661" width="0.2415%" height="15" fill="rgb(229,71,9)" fg:x="966" fg:w="3"/><text x="78.0278%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.8583%" y="645" width="0.1610%" height="15" fill="rgb(221,111,31)" fg:x="967" fg:w="2"/><text x="78.1083%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.0193%" y="645" width="0.1610%" height="15" fill="rgb(237,86,50)" fg:x="969" fg:w="2"/><text x="78.2693%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.0193%" y="629" width="0.1610%" height="15" fill="rgb(234,49,32)" fg:x="969" fg:w="2"/><text x="78.2693%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="77.2947%" y="693" width="0.9662%" height="15" fill="rgb(225,144,27)" fg:x="960" fg:w="12"/><text x="77.5447%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="77.6973%" y="677" width="0.5636%" height="15" fill="rgb(225,209,36)" fg:x="965" fg:w="7"/><text x="77.9473%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.0193%" y="661" width="0.2415%" height="15" fill="rgb(218,109,14)" fg:x="969" fg:w="3"/><text x="78.2693%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.1804%" y="645" width="0.0805%" height="15" fill="rgb(238,186,42)" fg:x="971" fg:w="1"/><text x="78.4304%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.1804%" y="629" width="0.0805%" height="15" fill="rgb(236,143,10)" fg:x="971" fg:w="1"/><text x="78.4304%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.1804%" y="613" width="0.0805%" height="15" fill="rgb(205,147,7)" fg:x="971" fg:w="1"/><text x="78.4304%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.1804%" y="597" width="0.0805%" height="15" fill="rgb(245,224,0)" fg:x="971" fg:w="1"/><text x="78.4304%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.1804%" y="581" width="0.0805%" height="15" fill="rgb(213,208,32)" fg:x="971" fg:w="1"/><text x="78.4304%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="78.2609%" y="677" width="0.0805%" height="15" fill="rgb(208,212,4)" fg:x="972" fg:w="1"/><text x="78.5109%" y="687.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="78.2609%" y="661" width="0.0805%" height="15" fill="rgb(236,143,49)" fg:x="972" fg:w="1"/><text x="78.5109%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4219%" y="645" width="0.0805%" height="15" fill="rgb(228,152,33)" fg:x="974" fg:w="1"/><text x="78.6719%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="78.5024%" y="645" width="0.1610%" height="15" fill="rgb(236,132,39)" fg:x="975" fg:w="2"/><text x="78.7524%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="78.5024%" y="629" width="0.1610%" height="15" fill="rgb(228,176,23)" fg:x="975" fg:w="2"/><text x="78.7524%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.7440%" y="597" width="0.0805%" height="15" fill="rgb(229,34,18)" fg:x="978" fg:w="1"/><text x="78.9940%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7440%" y="581" width="0.0805%" height="15" fill="rgb(244,81,37)" fg:x="978" fg:w="1"/><text x="78.9940%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.7440%" y="565" width="0.0805%" height="15" fill="rgb(242,79,32)" fg:x="978" fg:w="1"/><text x="78.9940%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7440%" y="549" width="0.0805%" height="15" fill="rgb(245,15,51)" fg:x="978" fg:w="1"/><text x="78.9940%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7440%" y="533" width="0.0805%" height="15" fill="rgb(209,82,8)" fg:x="978" fg:w="1"/><text x="78.9940%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.8245%" y="565" width="0.0805%" height="15" fill="rgb(248,65,42)" fg:x="979" fg:w="1"/><text x="79.0745%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.8245%" y="549" width="0.0805%" height="15" fill="rgb(216,132,33)" fg:x="979" fg:w="1"/><text x="79.0745%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8245%" y="533" width="0.0805%" height="15" fill="rgb(207,21,32)" fg:x="979" fg:w="1"/><text x="79.0745%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.9050%" y="501" width="0.0805%" height="15" fill="rgb(247,27,22)" fg:x="980" fg:w="1"/><text x="79.1550%" y="511.50"></text></g><g><title>engine::session::Session::flush (24 samples, 1.93%)</title><rect x="77.1337%" y="773" width="1.9324%" height="15" fill="rgb(254,72,41)" fg:x="958" fg:w="24"/><text x="77.3837%" y="783.50">e..</text></g><g><title>engine::session::state::State::close (23 samples, 1.85%)</title><rect x="77.2142%" y="757" width="1.8519%" height="15" fill="rgb(250,6,31)" fg:x="959" fg:w="23"/><text x="77.4642%" y="767.50">e..</text></g><g><title>engine::session::state::State::flush_entities (23 samples, 1.85%)</title><rect x="77.2142%" y="741" width="1.8519%" height="15" fill="rgb(224,124,0)" fg:x="959" fg:w="23"/><text x="77.4642%" y="751.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (22 samples, 1.77%)</title><rect x="77.2947%" y="725" width="1.7713%" height="15" fill="rgb(228,7,24)" fg:x="960" fg:w="22"/><text x="77.5447%" y="735.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (22 samples, 1.77%)</title><rect x="77.2947%" y="709" width="1.7713%" height="15" fill="rgb(250,202,22)" fg:x="960" fg:w="22"/><text x="77.5447%" y="719.50">e..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.81%)</title><rect x="78.2609%" y="693" width="0.8052%" height="15" fill="rgb(214,89,5)" fg:x="972" fg:w="10"/><text x="78.5109%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="78.3414%" y="677" width="0.7246%" height="15" fill="rgb(228,82,34)" fg:x="973" fg:w="9"/><text x="78.5914%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="78.3414%" y="661" width="0.7246%" height="15" fill="rgb(212,164,18)" fg:x="973" fg:w="9"/><text x="78.5914%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="78.6634%" y="645" width="0.4026%" height="15" fill="rgb(210,75,6)" fg:x="977" fg:w="5"/><text x="78.9134%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="78.7440%" y="629" width="0.3221%" height="15" fill="rgb(251,11,45)" fg:x="978" fg:w="4"/><text x="78.9940%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="78.7440%" y="613" width="0.3221%" height="15" fill="rgb(234,105,14)" fg:x="978" fg:w="4"/><text x="78.9940%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="78.8245%" y="597" width="0.2415%" height="15" fill="rgb(220,123,16)" fg:x="979" fg:w="3"/><text x="79.0745%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="78.8245%" y="581" width="0.2415%" height="15" fill="rgb(238,16,42)" fg:x="979" fg:w="3"/><text x="79.0745%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="78.9050%" y="565" width="0.1610%" height="15" fill="rgb(239,101,26)" fg:x="980" fg:w="2"/><text x="79.1550%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="78.9050%" y="549" width="0.1610%" height="15" fill="rgb(228,12,27)" fg:x="980" fg:w="2"/><text x="79.1550%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="78.9050%" y="533" width="0.1610%" height="15" fill="rgb(218,165,53)" fg:x="980" fg:w="2"/><text x="79.1550%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="78.9050%" y="517" width="0.1610%" height="15" fill="rgb(250,44,27)" fg:x="980" fg:w="2"/><text x="79.1550%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.9855%" y="501" width="0.0805%" height="15" fill="rgb(229,69,35)" fg:x="981" fg:w="1"/><text x="79.2355%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.9855%" y="485" width="0.0805%" height="15" fill="rgb(241,38,31)" fg:x="981" fg:w="1"/><text x="79.2355%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.9855%" y="469" width="0.0805%" height="15" fill="rgb(224,152,13)" fg:x="981" fg:w="1"/><text x="79.2355%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.9855%" y="453" width="0.0805%" height="15" fill="rgb(207,225,8)" fg:x="981" fg:w="1"/><text x="79.2355%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.9855%" y="437" width="0.0805%" height="15" fill="rgb(222,135,50)" fg:x="981" fg:w="1"/><text x="79.2355%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.0660%" y="741" width="0.0805%" height="15" fill="rgb(245,39,15)" fg:x="982" fg:w="1"/><text x="79.3160%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.0660%" y="725" width="0.0805%" height="15" fill="rgb(233,22,17)" fg:x="982" fg:w="1"/><text x="79.3160%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.0660%" y="709" width="0.0805%" height="15" fill="rgb(227,152,49)" fg:x="982" fg:w="1"/><text x="79.3160%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.0660%" y="693" width="0.0805%" height="15" fill="rgb(233,162,45)" fg:x="982" fg:w="1"/><text x="79.3160%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.0660%" y="677" width="0.0805%" height="15" fill="rgb(217,44,48)" fg:x="982" fg:w="1"/><text x="79.3160%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.0660%" y="661" width="0.0805%" height="15" fill="rgb(253,41,35)" fg:x="982" fg:w="1"/><text x="79.3160%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.0660%" y="645" width="0.0805%" height="15" fill="rgb(254,32,37)" fg:x="982" fg:w="1"/><text x="79.3160%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.0660%" y="629" width="0.0805%" height="15" fill="rgb(250,9,9)" fg:x="982" fg:w="1"/><text x="79.3160%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.0660%" y="613" width="0.0805%" height="15" fill="rgb(212,37,16)" fg:x="982" fg:w="1"/><text x="79.3160%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.0660%" y="597" width="0.0805%" height="15" fill="rgb(235,142,51)" fg:x="982" fg:w="1"/><text x="79.3160%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.0660%" y="581" width="0.0805%" height="15" fill="rgb(250,225,53)" fg:x="982" fg:w="1"/><text x="79.3160%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="79.1465%" y="725" width="0.0805%" height="15" fill="rgb(207,188,48)" fg:x="983" fg:w="1"/><text x="79.3965%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.1465%" y="709" width="0.0805%" height="15" fill="rgb(222,25,21)" fg:x="983" fg:w="1"/><text x="79.3965%" y="719.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.1465%" y="693" width="0.0805%" height="15" fill="rgb(249,112,5)" fg:x="983" fg:w="1"/><text x="79.3965%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.1465%" y="677" width="0.0805%" height="15" fill="rgb(242,11,22)" fg:x="983" fg:w="1"/><text x="79.3965%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.1465%" y="661" width="0.0805%" height="15" fill="rgb(217,125,14)" fg:x="983" fg:w="1"/><text x="79.3965%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="79.1465%" y="741" width="0.1610%" height="15" fill="rgb(239,92,14)" fg:x="983" fg:w="2"/><text x="79.3965%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.2271%" y="725" width="0.0805%" height="15" fill="rgb(232,145,17)" fg:x="984" fg:w="1"/><text x="79.4771%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.2271%" y="709" width="0.0805%" height="15" fill="rgb(250,158,16)" fg:x="984" fg:w="1"/><text x="79.4771%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.2271%" y="693" width="0.0805%" height="15" fill="rgb(247,30,22)" fg:x="984" fg:w="1"/><text x="79.4771%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.2271%" y="677" width="0.0805%" height="15" fill="rgb(219,215,46)" fg:x="984" fg:w="1"/><text x="79.4771%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.2271%" y="661" width="0.0805%" height="15" fill="rgb(237,40,53)" fg:x="984" fg:w="1"/><text x="79.4771%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.2271%" y="645" width="0.0805%" height="15" fill="rgb(253,207,11)" fg:x="984" fg:w="1"/><text x="79.4771%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.2271%" y="629" width="0.0805%" height="15" fill="rgb(242,16,9)" fg:x="984" fg:w="1"/><text x="79.4771%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.2271%" y="613" width="0.0805%" height="15" fill="rgb(237,94,35)" fg:x="984" fg:w="1"/><text x="79.4771%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.2271%" y="597" width="0.0805%" height="15" fill="rgb(244,145,23)" fg:x="984" fg:w="1"/><text x="79.4771%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.2271%" y="581" width="0.0805%" height="15" fill="rgb(209,93,17)" fg:x="984" fg:w="1"/><text x="79.4771%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.2271%" y="565" width="0.0805%" height="15" fill="rgb(205,201,0)" fg:x="984" fg:w="1"/><text x="79.4771%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.2271%" y="549" width="0.0805%" height="15" fill="rgb(225,198,48)" fg:x="984" fg:w="1"/><text x="79.4771%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.2271%" y="533" width="0.0805%" height="15" fill="rgb(211,131,51)" fg:x="984" fg:w="1"/><text x="79.4771%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.2271%" y="517" width="0.0805%" height="15" fill="rgb(237,196,37)" fg:x="984" fg:w="1"/><text x="79.4771%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3076%" y="661" width="0.0805%" height="15" fill="rgb(218,204,52)" fg:x="985" fg:w="1"/><text x="79.5576%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3076%" y="645" width="0.0805%" height="15" fill="rgb(251,67,25)" fg:x="985" fg:w="1"/><text x="79.5576%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3076%" y="629" width="0.0805%" height="15" fill="rgb(219,87,2)" fg:x="985" fg:w="1"/><text x="79.5576%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3076%" y="613" width="0.0805%" height="15" fill="rgb(224,171,9)" fg:x="985" fg:w="1"/><text x="79.5576%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3076%" y="597" width="0.0805%" height="15" fill="rgb(215,98,45)" fg:x="985" fg:w="1"/><text x="79.5576%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="79.3076%" y="725" width="0.1610%" height="15" fill="rgb(231,48,23)" fg:x="985" fg:w="2"/><text x="79.5576%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="79.3076%" y="709" width="0.1610%" height="15" fill="rgb(233,138,42)" fg:x="985" fg:w="2"/><text x="79.5576%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="79.3076%" y="693" width="0.1610%" height="15" fill="rgb(244,107,0)" fg:x="985" fg:w="2"/><text x="79.5576%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.3076%" y="677" width="0.1610%" height="15" fill="rgb(224,15,0)" fg:x="985" fg:w="2"/><text x="79.5576%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.3881%" y="661" width="0.0805%" height="15" fill="rgb(218,71,35)" fg:x="986" fg:w="1"/><text x="79.6381%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3881%" y="645" width="0.0805%" height="15" fill="rgb(244,32,22)" fg:x="986" fg:w="1"/><text x="79.6381%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.3881%" y="629" width="0.0805%" height="15" fill="rgb(232,209,34)" fg:x="986" fg:w="1"/><text x="79.6381%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3881%" y="613" width="0.0805%" height="15" fill="rgb(232,54,38)" fg:x="986" fg:w="1"/><text x="79.6381%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.3881%" y="597" width="0.0805%" height="15" fill="rgb(208,83,16)" fg:x="986" fg:w="1"/><text x="79.6381%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3881%" y="581" width="0.0805%" height="15" fill="rgb(208,70,33)" fg:x="986" fg:w="1"/><text x="79.6381%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.3881%" y="565" width="0.0805%" height="15" fill="rgb(247,38,12)" fg:x="986" fg:w="1"/><text x="79.6381%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3881%" y="549" width="0.0805%" height="15" fill="rgb(206,34,42)" fg:x="986" fg:w="1"/><text x="79.6381%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="79.0660%" y="757" width="0.4831%" height="15" fill="rgb(226,75,43)" fg:x="982" fg:w="6"/><text x="79.3160%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="79.3076%" y="741" width="0.2415%" height="15" fill="rgb(223,109,12)" fg:x="985" fg:w="3"/><text x="79.5576%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="79.4686%" y="725" width="0.0805%" height="15" fill="rgb(218,53,16)" fg:x="987" fg:w="1"/><text x="79.7186%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.4686%" y="709" width="0.0805%" height="15" fill="rgb(236,44,50)" fg:x="987" fg:w="1"/><text x="79.7186%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.4686%" y="693" width="0.0805%" height="15" fill="rgb(211,163,12)" fg:x="987" fg:w="1"/><text x="79.7186%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="79.4686%" y="677" width="0.0805%" height="15" fill="rgb(230,67,52)" fg:x="987" fg:w="1"/><text x="79.7186%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.4686%" y="661" width="0.0805%" height="15" fill="rgb(224,204,24)" fg:x="987" fg:w="1"/><text x="79.7186%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="79.5491%" y="741" width="0.0805%" height="15" fill="rgb(210,50,27)" fg:x="988" fg:w="1"/><text x="79.7991%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="79.5491%" y="725" width="0.0805%" height="15" fill="rgb(251,202,23)" fg:x="988" fg:w="1"/><text x="79.7991%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.5491%" y="709" width="0.0805%" height="15" fill="rgb(230,210,21)" fg:x="988" fg:w="1"/><text x="79.7991%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.5491%" y="693" width="0.0805%" height="15" fill="rgb(222,72,44)" fg:x="988" fg:w="1"/><text x="79.7991%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.5491%" y="677" width="0.0805%" height="15" fill="rgb(223,182,13)" fg:x="988" fg:w="1"/><text x="79.7991%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6296%" y="629" width="0.0805%" height="15" fill="rgb(228,61,15)" fg:x="989" fg:w="1"/><text x="79.8796%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6296%" y="613" width="0.0805%" height="15" fill="rgb(253,207,22)" fg:x="989" fg:w="1"/><text x="79.8796%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6296%" y="597" width="0.0805%" height="15" fill="rgb(232,10,15)" fg:x="989" fg:w="1"/><text x="79.8796%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6296%" y="581" width="0.0805%" height="15" fill="rgb(227,207,39)" fg:x="989" fg:w="1"/><text x="79.8796%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.6296%" y="565" width="0.0805%" height="15" fill="rgb(228,187,3)" fg:x="989" fg:w="1"/><text x="79.8796%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.6296%" y="549" width="0.0805%" height="15" fill="rgb(246,45,9)" fg:x="989" fg:w="1"/><text x="79.8796%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.6296%" y="533" width="0.0805%" height="15" fill="rgb(249,10,17)" fg:x="989" fg:w="1"/><text x="79.8796%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.6296%" y="517" width="0.0805%" height="15" fill="rgb(251,56,51)" fg:x="989" fg:w="1"/><text x="79.8796%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6296%" y="501" width="0.0805%" height="15" fill="rgb(232,51,36)" fg:x="989" fg:w="1"/><text x="79.8796%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.6296%" y="485" width="0.0805%" height="15" fill="rgb(215,38,28)" fg:x="989" fg:w="1"/><text x="79.8796%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.6296%" y="469" width="0.0805%" height="15" fill="rgb(218,5,35)" fg:x="989" fg:w="1"/><text x="79.8796%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.6296%" y="453" width="0.0805%" height="15" fill="rgb(232,219,8)" fg:x="989" fg:w="1"/><text x="79.8796%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.6296%" y="437" width="0.0805%" height="15" fill="rgb(243,162,8)" fg:x="989" fg:w="1"/><text x="79.8796%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.6296%" y="421" width="0.0805%" height="15" fill="rgb(218,86,32)" fg:x="989" fg:w="1"/><text x="79.8796%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.6296%" y="405" width="0.0805%" height="15" fill="rgb(218,179,51)" fg:x="989" fg:w="1"/><text x="79.8796%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="79.6296%" y="741" width="0.1610%" height="15" fill="rgb(237,42,52)" fg:x="989" fg:w="2"/><text x="79.8796%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="79.6296%" y="725" width="0.1610%" height="15" fill="rgb(229,12,4)" fg:x="989" fg:w="2"/><text x="79.8796%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="79.6296%" y="709" width="0.1610%" height="15" fill="rgb(214,203,2)" fg:x="989" fg:w="2"/><text x="79.8796%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.6296%" y="693" width="0.1610%" height="15" fill="rgb(241,11,44)" fg:x="989" fg:w="2"/><text x="79.8796%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="79.6296%" y="677" width="0.1610%" height="15" fill="rgb(221,106,48)" fg:x="989" fg:w="2"/><text x="79.8796%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.6296%" y="661" width="0.1610%" height="15" fill="rgb(220,220,10)" fg:x="989" fg:w="2"/><text x="79.8796%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="79.6296%" y="645" width="0.1610%" height="15" fill="rgb(228,220,44)" fg:x="989" fg:w="2"/><text x="79.8796%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7101%" y="629" width="0.0805%" height="15" fill="rgb(214,144,45)" fg:x="990" fg:w="1"/><text x="79.9601%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.81%)</title><rect x="79.0660%" y="773" width="0.8052%" height="15" fill="rgb(224,142,28)" fg:x="982" fg:w="10"/><text x="79.3160%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="79.5491%" y="757" width="0.3221%" height="15" fill="rgb(214,79,27)" fg:x="988" fg:w="4"/><text x="79.7991%" y="767.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="79.7907%" y="741" width="0.0805%" height="15" fill="rgb(208,173,30)" fg:x="991" fg:w="1"/><text x="80.0407%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.7907%" y="725" width="0.0805%" height="15" fill="rgb(222,81,9)" fg:x="991" fg:w="1"/><text x="80.0407%" y="735.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="79.7907%" y="709" width="0.0805%" height="15" fill="rgb(217,152,25)" fg:x="991" fg:w="1"/><text x="80.0407%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.7907%" y="693" width="0.0805%" height="15" fill="rgb(248,170,26)" fg:x="991" fg:w="1"/><text x="80.0407%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="79.7907%" y="677" width="0.0805%" height="15" fill="rgb(206,151,5)" fg:x="991" fg:w="1"/><text x="80.0407%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.7907%" y="661" width="0.0805%" height="15" fill="rgb(216,7,52)" fg:x="991" fg:w="1"/><text x="80.0407%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="79.8712%" y="773" width="0.0805%" height="15" fill="rgb(228,27,44)" fg:x="992" fg:w="1"/><text x="80.1212%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="79.8712%" y="757" width="0.0805%" height="15" fill="rgb(208,221,38)" fg:x="992" fg:w="1"/><text x="80.1212%" y="767.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="79.8712%" y="741" width="0.0805%" height="15" fill="rgb(240,59,23)" fg:x="992" fg:w="1"/><text x="80.1212%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.8712%" y="725" width="0.0805%" height="15" fill="rgb(210,127,41)" fg:x="992" fg:w="1"/><text x="80.1212%" y="735.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8712%" y="709" width="0.0805%" height="15" fill="rgb(224,160,3)" fg:x="992" fg:w="1"/><text x="80.1212%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.8712%" y="693" width="0.0805%" height="15" fill="rgb(215,228,26)" fg:x="992" fg:w="1"/><text x="80.1212%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8712%" y="677" width="0.0805%" height="15" fill="rgb(218,107,38)" fg:x="992" fg:w="1"/><text x="80.1212%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.8712%" y="661" width="0.0805%" height="15" fill="rgb(246,159,42)" fg:x="992" fg:w="1"/><text x="80.1212%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8712%" y="645" width="0.0805%" height="15" fill="rgb(251,23,41)" fg:x="992" fg:w="1"/><text x="80.1212%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="79.9517%" y="757" width="0.2415%" height="15" fill="rgb(246,94,53)" fg:x="993" fg:w="3"/><text x="80.2017%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.1127%" y="741" width="0.0805%" height="15" fill="rgb(241,212,46)" fg:x="995" fg:w="1"/><text x="80.3627%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.1127%" y="725" width="0.0805%" height="15" fill="rgb(231,79,30)" fg:x="995" fg:w="1"/><text x="80.3627%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.1127%" y="709" width="0.0805%" height="15" fill="rgb(208,202,21)" fg:x="995" fg:w="1"/><text x="80.3627%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.1127%" y="693" width="0.0805%" height="15" fill="rgb(226,136,22)" fg:x="995" fg:w="1"/><text x="80.3627%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.1127%" y="677" width="0.0805%" height="15" fill="rgb(214,87,0)" fg:x="995" fg:w="1"/><text x="80.3627%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.1127%" y="661" width="0.0805%" height="15" fill="rgb(239,176,44)" fg:x="995" fg:w="1"/><text x="80.3627%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.1127%" y="645" width="0.0805%" height="15" fill="rgb(230,102,31)" fg:x="995" fg:w="1"/><text x="80.3627%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.1127%" y="629" width="0.0805%" height="15" fill="rgb(219,40,19)" fg:x="995" fg:w="1"/><text x="80.3627%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.1127%" y="613" width="0.0805%" height="15" fill="rgb(228,55,4)" fg:x="995" fg:w="1"/><text x="80.3627%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.1127%" y="597" width="0.0805%" height="15" fill="rgb(239,120,21)" fg:x="995" fg:w="1"/><text x="80.3627%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="80.1932%" y="709" width="0.0805%" height="15" fill="rgb(243,136,1)" fg:x="996" fg:w="1"/><text x="80.4432%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="80.1932%" y="693" width="0.0805%" height="15" fill="rgb(237,12,45)" fg:x="996" fg:w="1"/><text x="80.4432%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.1932%" y="677" width="0.0805%" height="15" fill="rgb(245,142,47)" fg:x="996" fg:w="1"/><text x="80.4432%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.1932%" y="661" width="0.0805%" height="15" fill="rgb(237,24,54)" fg:x="996" fg:w="1"/><text x="80.4432%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.1932%" y="645" width="0.0805%" height="15" fill="rgb(234,164,40)" fg:x="996" fg:w="1"/><text x="80.4432%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1932%" y="629" width="0.0805%" height="15" fill="rgb(242,95,12)" fg:x="996" fg:w="1"/><text x="80.4432%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.1932%" y="613" width="0.0805%" height="15" fill="rgb(238,75,28)" fg:x="996" fg:w="1"/><text x="80.4432%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1932%" y="597" width="0.0805%" height="15" fill="rgb(236,4,26)" fg:x="996" fg:w="1"/><text x="80.4432%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1932%" y="581" width="0.0805%" height="15" fill="rgb(252,158,20)" fg:x="996" fg:w="1"/><text x="80.4432%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1932%" y="565" width="0.0805%" height="15" fill="rgb(231,67,31)" fg:x="996" fg:w="1"/><text x="80.4432%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.1932%" y="549" width="0.0805%" height="15" fill="rgb(241,151,13)" fg:x="996" fg:w="1"/><text x="80.4432%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1932%" y="533" width="0.0805%" height="15" fill="rgb(242,25,36)" fg:x="996" fg:w="1"/><text x="80.4432%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="80.2738%" y="677" width="0.0805%" height="15" fill="rgb(205,222,34)" fg:x="997" fg:w="1"/><text x="80.5238%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="80.2738%" y="661" width="0.0805%" height="15" fill="rgb(235,154,26)" fg:x="997" fg:w="1"/><text x="80.5238%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.2738%" y="645" width="0.0805%" height="15" fill="rgb(233,17,9)" fg:x="997" fg:w="1"/><text x="80.5238%" y="655.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.2738%" y="629" width="0.0805%" height="15" fill="rgb(245,113,50)" fg:x="997" fg:w="1"/><text x="80.5238%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.2738%" y="613" width="0.0805%" height="15" fill="rgb(247,105,34)" fg:x="997" fg:w="1"/><text x="80.5238%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.2738%" y="597" width="0.0805%" height="15" fill="rgb(225,50,23)" fg:x="997" fg:w="1"/><text x="80.5238%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.3543%" y="629" width="0.1610%" height="15" fill="rgb(253,189,32)" fg:x="998" fg:w="2"/><text x="80.6043%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.3543%" y="613" width="0.1610%" height="15" fill="rgb(208,159,41)" fg:x="998" fg:w="2"/><text x="80.6043%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="80.3543%" y="597" width="0.1610%" height="15" fill="rgb(222,135,10)" fg:x="998" fg:w="2"/><text x="80.6043%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="80.3543%" y="581" width="0.1610%" height="15" fill="rgb(214,75,20)" fg:x="998" fg:w="2"/><text x="80.6043%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="80.2738%" y="693" width="0.3221%" height="15" fill="rgb(231,65,33)" fg:x="997" fg:w="4"/><text x="80.5238%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="80.3543%" y="677" width="0.2415%" height="15" fill="rgb(251,139,6)" fg:x="998" fg:w="3"/><text x="80.6043%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="80.3543%" y="661" width="0.2415%" height="15" fill="rgb(225,220,53)" fg:x="998" fg:w="3"/><text x="80.6043%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="80.3543%" y="645" width="0.2415%" height="15" fill="rgb(244,73,26)" fg:x="998" fg:w="3"/><text x="80.6043%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="80.5153%" y="629" width="0.0805%" height="15" fill="rgb(244,98,34)" fg:x="1000" fg:w="1"/><text x="80.7653%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="80.5153%" y="613" width="0.0805%" height="15" fill="rgb(211,131,5)" fg:x="1000" fg:w="1"/><text x="80.7653%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5153%" y="597" width="0.0805%" height="15" fill="rgb(238,14,50)" fg:x="1000" fg:w="1"/><text x="80.7653%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5153%" y="581" width="0.0805%" height="15" fill="rgb(206,132,52)" fg:x="1000" fg:w="1"/><text x="80.7653%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5153%" y="565" width="0.0805%" height="15" fill="rgb(228,200,17)" fg:x="1000" fg:w="1"/><text x="80.7653%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5153%" y="549" width="0.0805%" height="15" fill="rgb(209,53,28)" fg:x="1000" fg:w="1"/><text x="80.7653%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5153%" y="533" width="0.0805%" height="15" fill="rgb(240,214,22)" fg:x="1000" fg:w="1"/><text x="80.7653%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="80.5958%" y="677" width="0.0805%" height="15" fill="rgb(213,217,46)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="80.5958%" y="661" width="0.0805%" height="15" fill="rgb(241,159,53)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5958%" y="645" width="0.0805%" height="15" fill="rgb(241,70,32)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="80.6763%" y="677" width="0.0805%" height="15" fill="rgb(233,117,50)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="80.6763%" y="661" width="0.0805%" height="15" fill="rgb(211,114,15)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.6763%" y="645" width="0.0805%" height="15" fill="rgb(254,0,36)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.6763%" y="629" width="0.0805%" height="15" fill="rgb(221,74,12)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.6763%" y="613" width="0.0805%" height="15" fill="rgb(241,221,3)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.6763%" y="597" width="0.0805%" height="15" fill="rgb(252,91,23)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.6763%" y="581" width="0.0805%" height="15" fill="rgb(232,1,25)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.6763%" y="565" width="0.0805%" height="15" fill="rgb(253,145,25)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.6763%" y="549" width="0.0805%" height="15" fill="rgb(226,43,53)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.6763%" y="533" width="0.0805%" height="15" fill="rgb(245,116,39)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.6763%" y="517" width="0.0805%" height="15" fill="rgb(231,205,33)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.6763%" y="501" width="0.0805%" height="15" fill="rgb(238,96,15)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.6763%" y="485" width="0.0805%" height="15" fill="rgb(212,80,14)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.6763%" y="469" width="0.0805%" height="15" fill="rgb(209,118,24)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.6763%" y="453" width="0.0805%" height="15" fill="rgb(234,176,14)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.6763%" y="437" width="0.0805%" height="15" fill="rgb(207,145,21)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.6763%" y="421" width="0.0805%" height="15" fill="rgb(218,58,54)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.6763%" y="405" width="0.0805%" height="15" fill="rgb(229,11,50)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.64%)</title><rect x="80.1932%" y="757" width="0.6441%" height="15" fill="rgb(221,170,33)" fg:x="996" fg:w="8"/><text x="80.4432%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="80.1932%" y="741" width="0.6441%" height="15" fill="rgb(221,121,40)" fg:x="996" fg:w="8"/><text x="80.4432%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="80.1932%" y="725" width="0.6441%" height="15" fill="rgb(214,165,32)" fg:x="996" fg:w="8"/><text x="80.4432%" y="735.50"></text></g><g><title>plugins_core::build::Build::leads_to (7 samples, 0.56%)</title><rect x="80.2738%" y="709" width="0.5636%" height="15" fill="rgb(243,195,30)" fg:x="997" fg:w="7"/><text x="80.5238%" y="719.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.24%)</title><rect x="80.5958%" y="693" width="0.2415%" height="15" fill="rgb(238,0,27)" fg:x="1001" fg:w="3"/><text x="80.8458%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="80.7568%" y="677" width="0.0805%" height="15" fill="rgb(226,0,50)" fg:x="1003" fg:w="1"/><text x="81.0068%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7568%" y="661" width="0.0805%" height="15" fill="rgb(222,93,46)" fg:x="1003" fg:w="1"/><text x="81.0068%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="80.8374%" y="741" width="0.1610%" height="15" fill="rgb(210,34,24)" fg:x="1004" fg:w="2"/><text x="81.0874%" y="751.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="80.9179%" y="725" width="0.0805%" height="15" fill="rgb(217,47,8)" fg:x="1005" fg:w="1"/><text x="81.1679%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9179%" y="709" width="0.0805%" height="15" fill="rgb(217,0,26)" fg:x="1005" fg:w="1"/><text x="81.1679%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.9984%" y="693" width="0.0805%" height="15" fill="rgb(218,228,31)" fg:x="1006" fg:w="1"/><text x="81.2484%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9984%" y="677" width="0.0805%" height="15" fill="rgb(208,101,40)" fg:x="1006" fg:w="1"/><text x="81.2484%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.0789%" y="693" width="0.0805%" height="15" fill="rgb(225,134,0)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="81.0789%" y="677" width="0.0805%" height="15" fill="rgb(241,37,25)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="81.0789%" y="661" width="0.0805%" height="15" fill="rgb(251,149,9)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0789%" y="645" width="0.0805%" height="15" fill="rgb(225,196,54)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0789%" y="629" width="0.0805%" height="15" fill="rgb(240,46,24)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.0789%" y="613" width="0.0805%" height="15" fill="rgb(214,189,4)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.0789%" y="597" width="0.0805%" height="15" fill="rgb(222,3,8)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.0789%" y="581" width="0.0805%" height="15" fill="rgb(250,163,6)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.0789%" y="565" width="0.0805%" height="15" fill="rgb(225,23,45)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.0789%" y="549" width="0.0805%" height="15" fill="rgb(225,177,23)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.0789%" y="533" width="0.0805%" height="15" fill="rgb(253,75,3)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.0789%" y="517" width="0.0805%" height="15" fill="rgb(237,85,4)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.0789%" y="501" width="0.0805%" height="15" fill="rgb(212,23,3)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.0789%" y="485" width="0.0805%" height="15" fill="rgb(250,127,19)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0789%" y="469" width="0.0805%" height="15" fill="rgb(222,82,14)" fg:x="1007" fg:w="1"/><text x="81.3289%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="81.1594%" y="661" width="0.0805%" height="15" fill="rgb(213,63,47)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="81.1594%" y="645" width="0.0805%" height="15" fill="rgb(219,132,41)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.1594%" y="629" width="0.0805%" height="15" fill="rgb(251,205,16)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.1594%" y="613" width="0.0805%" height="15" fill="rgb(239,102,23)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.1594%" y="597" width="0.0805%" height="15" fill="rgb(222,218,4)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.1594%" y="581" width="0.0805%" height="15" fill="rgb(232,91,40)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.2399%" y="629" width="0.0805%" height="15" fill="rgb(238,170,50)" fg:x="1009" fg:w="1"/><text x="81.4899%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.2399%" y="613" width="0.0805%" height="15" fill="rgb(243,52,25)" fg:x="1009" fg:w="1"/><text x="81.4899%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="81.2399%" y="645" width="0.1610%" height="15" fill="rgb(236,151,10)" fg:x="1009" fg:w="2"/><text x="81.4899%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3205%" y="629" width="0.0805%" height="15" fill="rgb(216,123,7)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3205%" y="613" width="0.0805%" height="15" fill="rgb(247,115,15)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.3205%" y="597" width="0.0805%" height="15" fill="rgb(249,65,46)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="81.4010%" y="629" width="0.7246%" height="15" fill="rgb(230,132,24)" fg:x="1011" fg:w="9"/><text x="81.6510%" y="639.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="81.4815%" y="613" width="0.6441%" height="15" fill="rgb(253,115,7)" fg:x="1012" fg:w="8"/><text x="81.7315%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="81.6425%" y="597" width="0.4831%" height="15" fill="rgb(233,23,21)" fg:x="1014" fg:w="6"/><text x="81.8925%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="81.8035%" y="581" width="0.3221%" height="15" fill="rgb(231,203,18)" fg:x="1016" fg:w="4"/><text x="82.0535%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.0451%" y="565" width="0.0805%" height="15" fill="rgb(233,19,15)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.0451%" y="549" width="0.0805%" height="15" fill="rgb(213,12,4)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.0451%" y="533" width="0.0805%" height="15" fill="rgb(221,198,54)" fg:x="1019" fg:w="1"/><text x="82.2951%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.1256%" y="613" width="0.0805%" height="15" fill="rgb(247,189,16)" fg:x="1020" fg:w="1"/><text x="82.3756%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.2061%" y="597" width="0.0805%" height="15" fill="rgb(213,82,46)" fg:x="1021" fg:w="1"/><text x="82.4561%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="82.2061%" y="613" width="0.2415%" height="15" fill="rgb(216,129,40)" fg:x="1021" fg:w="3"/><text x="82.4561%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2866%" y="597" width="0.1610%" height="15" fill="rgb(222,154,45)" fg:x="1022" fg:w="2"/><text x="82.5366%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2866%" y="581" width="0.1610%" height="15" fill="rgb(214,223,41)" fg:x="1022" fg:w="2"/><text x="82.5366%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2866%" y="565" width="0.1610%" height="15" fill="rgb(212,167,3)" fg:x="1022" fg:w="2"/><text x="82.5366%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.3671%" y="549" width="0.0805%" height="15" fill="rgb(219,226,20)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3671%" y="533" width="0.0805%" height="15" fill="rgb(231,29,48)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.3671%" y="517" width="0.0805%" height="15" fill="rgb(224,12,4)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.3671%" y="501" width="0.0805%" height="15" fill="rgb(217,180,30)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.3671%" y="485" width="0.0805%" height="15" fill="rgb(237,137,17)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.3671%" y="469" width="0.0805%" height="15" fill="rgb(252,225,18)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.3671%" y="453" width="0.0805%" height="15" fill="rgb(209,177,11)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="82.1256%" y="629" width="0.4026%" height="15" fill="rgb(214,147,8)" fg:x="1020" fg:w="5"/><text x="82.3756%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.4477%" y="613" width="0.0805%" height="15" fill="rgb(213,225,52)" fg:x="1024" fg:w="1"/><text x="82.6977%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.4477%" y="597" width="0.0805%" height="15" fill="rgb(205,99,43)" fg:x="1024" fg:w="1"/><text x="82.6977%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.4477%" y="581" width="0.0805%" height="15" fill="rgb(248,141,45)" fg:x="1024" fg:w="1"/><text x="82.6977%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="81.4010%" y="645" width="1.2882%" height="15" fill="rgb(233,198,44)" fg:x="1011" fg:w="16"/><text x="81.6510%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.5282%" y="629" width="0.1610%" height="15" fill="rgb(231,176,38)" fg:x="1025" fg:w="2"/><text x="82.7782%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.5282%" y="613" width="0.1610%" height="15" fill="rgb(209,31,1)" fg:x="1025" fg:w="2"/><text x="82.7782%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="82.5282%" y="597" width="0.1610%" height="15" fill="rgb(246,42,27)" fg:x="1025" fg:w="2"/><text x="82.7782%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.6087%" y="581" width="0.0805%" height="15" fill="rgb(244,104,27)" fg:x="1026" fg:w="1"/><text x="82.8587%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.6087%" y="565" width="0.0805%" height="15" fill="rgb(209,14,27)" fg:x="1026" fg:w="1"/><text x="82.8587%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.6087%" y="549" width="0.0805%" height="15" fill="rgb(205,170,50)" fg:x="1026" fg:w="1"/><text x="82.8587%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.53%)</title><rect x="81.2399%" y="661" width="1.5298%" height="15" fill="rgb(241,127,20)" fg:x="1009" fg:w="19"/><text x="81.4899%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.6892%" y="645" width="0.0805%" height="15" fill="rgb(230,72,5)" fg:x="1027" fg:w="1"/><text x="82.9392%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.6892%" y="629" width="0.0805%" height="15" fill="rgb(231,221,3)" fg:x="1027" fg:w="1"/><text x="82.9392%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="82.6892%" y="613" width="0.0805%" height="15" fill="rgb(232,150,49)" fg:x="1027" fg:w="1"/><text x="82.9392%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="82.9308%" y="581" width="0.0805%" height="15" fill="rgb(225,13,46)" fg:x="1030" fg:w="1"/><text x="83.1808%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.9308%" y="565" width="0.0805%" height="15" fill="rgb(236,192,49)" fg:x="1030" fg:w="1"/><text x="83.1808%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9308%" y="549" width="0.0805%" height="15" fill="rgb(242,107,14)" fg:x="1030" fg:w="1"/><text x="83.1808%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="82.7697%" y="661" width="0.3221%" height="15" fill="rgb(251,185,35)" fg:x="1028" fg:w="4"/><text x="83.0197%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="82.7697%" y="645" width="0.3221%" height="15" fill="rgb(212,128,8)" fg:x="1028" fg:w="4"/><text x="83.0197%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="82.7697%" y="629" width="0.3221%" height="15" fill="rgb(215,223,6)" fg:x="1028" fg:w="4"/><text x="83.0197%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.8502%" y="613" width="0.2415%" height="15" fill="rgb(216,23,45)" fg:x="1029" fg:w="3"/><text x="83.1002%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.9308%" y="597" width="0.1610%" height="15" fill="rgb(215,71,45)" fg:x="1030" fg:w="2"/><text x="83.1808%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.0113%" y="581" width="0.0805%" height="15" fill="rgb(224,2,48)" fg:x="1031" fg:w="1"/><text x="83.2613%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.0113%" y="565" width="0.0805%" height="15" fill="rgb(218,48,8)" fg:x="1031" fg:w="1"/><text x="83.2613%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0113%" y="549" width="0.0805%" height="15" fill="rgb(254,37,27)" fg:x="1031" fg:w="1"/><text x="83.2613%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0918%" y="629" width="0.0805%" height="15" fill="rgb(237,112,2)" fg:x="1032" fg:w="1"/><text x="83.3418%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="83.0918%" y="645" width="0.1610%" height="15" fill="rgb(243,64,54)" fg:x="1032" fg:w="2"/><text x="83.3418%" y="655.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="83.1723%" y="629" width="0.0805%" height="15" fill="rgb(211,93,4)" fg:x="1033" fg:w="1"/><text x="83.4223%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="83.1723%" y="613" width="0.0805%" height="15" fill="rgb(249,127,30)" fg:x="1033" fg:w="1"/><text x="83.4223%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.1723%" y="597" width="0.0805%" height="15" fill="rgb(248,76,17)" fg:x="1033" fg:w="1"/><text x="83.4223%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2528%" y="613" width="0.0805%" height="15" fill="rgb(244,153,49)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2528%" y="597" width="0.0805%" height="15" fill="rgb(231,94,34)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2528%" y="581" width="0.0805%" height="15" fill="rgb(253,162,40)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2528%" y="565" width="0.0805%" height="15" fill="rgb(219,194,14)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.2528%" y="549" width="0.0805%" height="15" fill="rgb(226,80,42)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="559.50"></text></g><g><title>engine::session::Session::flush (34 samples, 2.74%)</title><rect x="80.8374%" y="757" width="2.7375%" height="15" fill="rgb(208,108,5)" fg:x="1004" fg:w="34"/><text x="81.0874%" y="767.50">en..</text></g><g><title>engine::session::Session::save_changes (32 samples, 2.58%)</title><rect x="80.9984%" y="741" width="2.5765%" height="15" fill="rgb(209,204,33)" fg:x="1006" fg:w="32"/><text x="81.2484%" y="751.50">en..</text></g><g><title>engine::session::state::State::close (32 samples, 2.58%)</title><rect x="80.9984%" y="725" width="2.5765%" height="15" fill="rgb(232,22,14)" fg:x="1006" fg:w="32"/><text x="81.2484%" y="735.50">en..</text></g><g><title>engine::session::state::State::flush_entities (32 samples, 2.58%)</title><rect x="80.9984%" y="709" width="2.5765%" height="15" fill="rgb(236,139,41)" fg:x="1006" fg:w="32"/><text x="81.2484%" y="719.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (30 samples, 2.42%)</title><rect x="81.1594%" y="693" width="2.4155%" height="15" fill="rgb(220,91,0)" fg:x="1008" fg:w="30"/><text x="81.4094%" y="703.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (30 samples, 2.42%)</title><rect x="81.1594%" y="677" width="2.4155%" height="15" fill="rgb(243,200,48)" fg:x="1008" fg:w="30"/><text x="81.4094%" y="687.50">en..</text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.48%)</title><rect x="83.0918%" y="661" width="0.4831%" height="15" fill="rgb(237,172,41)" fg:x="1032" fg:w="6"/><text x="83.3418%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="83.2528%" y="645" width="0.3221%" height="15" fill="rgb(247,152,34)" fg:x="1034" fg:w="4"/><text x="83.5028%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="83.2528%" y="629" width="0.3221%" height="15" fill="rgb(205,88,40)" fg:x="1034" fg:w="4"/><text x="83.5028%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="83.3333%" y="613" width="0.2415%" height="15" fill="rgb(223,30,13)" fg:x="1035" fg:w="3"/><text x="83.5833%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="83.3333%" y="597" width="0.2415%" height="15" fill="rgb(249,7,18)" fg:x="1035" fg:w="3"/><text x="83.5833%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="83.3333%" y="581" width="0.2415%" height="15" fill="rgb(242,185,6)" fg:x="1035" fg:w="3"/><text x="83.5833%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="83.3333%" y="565" width="0.2415%" height="15" fill="rgb(234,115,47)" fg:x="1035" fg:w="3"/><text x="83.5833%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="83.3333%" y="549" width="0.2415%" height="15" fill="rgb(213,98,2)" fg:x="1035" fg:w="3"/><text x="83.5833%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="83.3333%" y="533" width="0.2415%" height="15" fill="rgb(237,162,23)" fg:x="1035" fg:w="3"/><text x="83.5833%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="83.3333%" y="517" width="0.2415%" height="15" fill="rgb(240,174,26)" fg:x="1035" fg:w="3"/><text x="83.5833%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="83.3333%" y="501" width="0.2415%" height="15" fill="rgb(249,90,45)" fg:x="1035" fg:w="3"/><text x="83.5833%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.4138%" y="485" width="0.1610%" height="15" fill="rgb(212,126,4)" fg:x="1036" fg:w="2"/><text x="83.6638%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4944%" y="469" width="0.0805%" height="15" fill="rgb(236,98,48)" fg:x="1037" fg:w="1"/><text x="83.7444%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5749%" y="613" width="0.0805%" height="15" fill="rgb(250,14,51)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5749%" y="597" width="0.0805%" height="15" fill="rgb(236,2,16)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.5749%" y="581" width="0.0805%" height="15" fill="rgb(250,146,3)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.5749%" y="565" width="0.0805%" height="15" fill="rgb(233,72,0)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.5749%" y="549" width="0.0805%" height="15" fill="rgb(249,172,7)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5749%" y="533" width="0.0805%" height="15" fill="rgb(224,213,17)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5749%" y="517" width="0.0805%" height="15" fill="rgb(221,52,2)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.5749%" y="501" width="0.0805%" height="15" fill="rgb(220,8,41)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.5749%" y="485" width="0.0805%" height="15" fill="rgb(230,207,34)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.5749%" y="469" width="0.0805%" height="15" fill="rgb(240,157,11)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.5749%" y="453" width="0.0805%" height="15" fill="rgb(243,209,15)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5749%" y="437" width="0.0805%" height="15" fill="rgb(251,191,33)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.5749%" y="661" width="0.1610%" height="15" fill="rgb(217,58,8)" fg:x="1038" fg:w="2"/><text x="83.8249%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.5749%" y="645" width="0.1610%" height="15" fill="rgb(210,35,1)" fg:x="1038" fg:w="2"/><text x="83.8249%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.5749%" y="629" width="0.1610%" height="15" fill="rgb(231,62,7)" fg:x="1038" fg:w="2"/><text x="83.8249%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6554%" y="613" width="0.0805%" height="15" fill="rgb(207,73,10)" fg:x="1039" fg:w="1"/><text x="83.9054%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="83.5749%" y="725" width="0.2415%" height="15" fill="rgb(216,178,40)" fg:x="1038" fg:w="3"/><text x="83.8249%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="83.5749%" y="709" width="0.2415%" height="15" fill="rgb(238,220,1)" fg:x="1038" fg:w="3"/><text x="83.8249%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="83.5749%" y="693" width="0.2415%" height="15" fill="rgb(246,169,39)" fg:x="1038" fg:w="3"/><text x="83.8249%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="83.5749%" y="677" width="0.2415%" height="15" fill="rgb(240,186,45)" fg:x="1038" fg:w="3"/><text x="83.8249%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7359%" y="661" width="0.0805%" height="15" fill="rgb(225,14,29)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.8164%" y="725" width="0.0805%" height="15" fill="rgb(243,96,26)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.8164%" y="709" width="0.0805%" height="15" fill="rgb(234,139,10)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8164%" y="693" width="0.0805%" height="15" fill="rgb(235,208,23)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.8969%" y="693" width="0.0805%" height="15" fill="rgb(230,140,47)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.8969%" y="677" width="0.0805%" height="15" fill="rgb(241,227,54)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8969%" y="661" width="0.0805%" height="15" fill="rgb(221,210,40)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8969%" y="645" width="0.0805%" height="15" fill="rgb(207,52,1)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8969%" y="629" width="0.0805%" height="15" fill="rgb(243,147,42)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="83.5749%" y="741" width="0.4831%" height="15" fill="rgb(245,93,7)" fg:x="1038" fg:w="6"/><text x="83.8249%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="83.8969%" y="725" width="0.1610%" height="15" fill="rgb(243,119,13)" fg:x="1042" fg:w="2"/><text x="84.1469%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="83.8969%" y="709" width="0.1610%" height="15" fill="rgb(228,164,28)" fg:x="1042" fg:w="2"/><text x="84.1469%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="83.9775%" y="693" width="0.0805%" height="15" fill="rgb(234,37,39)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0580%" y="629" width="0.0805%" height="15" fill="rgb(246,155,10)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0580%" y="613" width="0.0805%" height="15" fill="rgb(208,140,53)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0580%" y="597" width="0.0805%" height="15" fill="rgb(234,107,29)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0580%" y="581" width="0.0805%" height="15" fill="rgb(217,45,5)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0580%" y="565" width="0.0805%" height="15" fill="rgb(251,168,5)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.0580%" y="549" width="0.0805%" height="15" fill="rgb(242,96,14)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.0580%" y="533" width="0.0805%" height="15" fill="rgb(231,148,6)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.0580%" y="517" width="0.0805%" height="15" fill="rgb(249,100,2)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.0580%" y="501" width="0.0805%" height="15" fill="rgb(212,22,52)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.0580%" y="485" width="0.0805%" height="15" fill="rgb(212,97,14)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.0580%" y="469" width="0.0805%" height="15" fill="rgb(212,24,14)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.0580%" y="453" width="0.0805%" height="15" fill="rgb(239,209,43)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.0580%" y="437" width="0.0805%" height="15" fill="rgb(226,211,38)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.0580%" y="421" width="0.0805%" height="15" fill="rgb(216,118,11)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.0580%" y="405" width="0.0805%" height="15" fill="rgb(223,214,43)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.0580%" y="693" width="0.1610%" height="15" fill="rgb(213,225,15)" fg:x="1044" fg:w="2"/><text x="84.3080%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.0580%" y="677" width="0.1610%" height="15" fill="rgb(233,115,42)" fg:x="1044" fg:w="2"/><text x="84.3080%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.0580%" y="661" width="0.1610%" height="15" fill="rgb(229,93,16)" fg:x="1044" fg:w="2"/><text x="84.3080%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0580%" y="645" width="0.1610%" height="15" fill="rgb(220,114,48)" fg:x="1044" fg:w="2"/><text x="84.3080%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.1385%" y="629" width="0.0805%" height="15" fill="rgb(253,78,24)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.1385%" y="613" width="0.0805%" height="15" fill="rgb(206,29,19)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.1385%" y="597" width="0.0805%" height="15" fill="rgb(220,96,19)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.1385%" y="581" width="0.0805%" height="15" fill="rgb(222,62,18)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.1385%" y="565" width="0.0805%" height="15" fill="rgb(243,4,41)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.1385%" y="549" width="0.0805%" height="15" fill="rgb(232,199,53)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.1385%" y="533" width="0.0805%" height="15" fill="rgb(212,18,26)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.1385%" y="517" width="0.0805%" height="15" fill="rgb(218,30,49)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.1385%" y="501" width="0.0805%" height="15" fill="rgb(250,154,52)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.1385%" y="485" width="0.0805%" height="15" fill="rgb(218,176,16)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.1385%" y="469" width="0.0805%" height="15" fill="rgb(215,61,51)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1385%" y="453" width="0.0805%" height="15" fill="rgb(234,40,53)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.2190%" y="645" width="0.0805%" height="15" fill="rgb(214,142,25)" fg:x="1046" fg:w="1"/><text x="84.4690%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.2190%" y="629" width="0.0805%" height="15" fill="rgb(206,61,7)" fg:x="1046" fg:w="1"/><text x="84.4690%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.2190%" y="613" width="0.0805%" height="15" fill="rgb(245,225,1)" fg:x="1046" fg:w="1"/><text x="84.4690%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="84.0580%" y="725" width="0.3221%" height="15" fill="rgb(224,122,37)" fg:x="1044" fg:w="4"/><text x="84.3080%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="84.0580%" y="709" width="0.3221%" height="15" fill="rgb(209,221,12)" fg:x="1044" fg:w="4"/><text x="84.3080%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.2190%" y="693" width="0.1610%" height="15" fill="rgb(248,70,2)" fg:x="1046" fg:w="2"/><text x="84.4690%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.2190%" y="677" width="0.1610%" height="15" fill="rgb(227,173,19)" fg:x="1046" fg:w="2"/><text x="84.4690%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.2190%" y="661" width="0.1610%" height="15" fill="rgb(228,217,53)" fg:x="1046" fg:w="2"/><text x="84.4690%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2995%" y="645" width="0.0805%" height="15" fill="rgb(248,43,46)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2995%" y="629" width="0.0805%" height="15" fill="rgb(236,202,32)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2995%" y="613" width="0.0805%" height="15" fill="rgb(231,220,0)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2995%" y="597" width="0.0805%" height="15" fill="rgb(235,11,31)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.2995%" y="581" width="0.0805%" height="15" fill="rgb(247,159,37)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2995%" y="565" width="0.0805%" height="15" fill="rgb(246,179,15)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2995%" y="549" width="0.0805%" height="15" fill="rgb(221,193,41)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2995%" y="533" width="0.0805%" height="15" fill="rgb(228,30,1)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2995%" y="517" width="0.0805%" height="15" fill="rgb(233,226,32)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2995%" y="501" width="0.0805%" height="15" fill="rgb(238,110,42)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="84.3800%" y="725" width="0.0805%" height="15" fill="rgb(233,141,16)" fg:x="1048" fg:w="1"/><text x="84.6300%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.3800%" y="709" width="0.0805%" height="15" fill="rgb(212,227,9)" fg:x="1048" fg:w="1"/><text x="84.6300%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="84.3800%" y="693" width="0.0805%" height="15" fill="rgb(247,119,37)" fg:x="1048" fg:w="1"/><text x="84.6300%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.4605%" y="725" width="0.0805%" height="15" fill="rgb(219,101,42)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="735.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4605%" y="709" width="0.0805%" height="15" fill="rgb(252,226,3)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4605%" y="693" width="0.0805%" height="15" fill="rgb(229,50,28)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.4605%" y="677" width="0.0805%" height="15" fill="rgb(249,122,7)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4605%" y="661" width="0.0805%" height="15" fill="rgb(207,101,46)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4605%" y="645" width="0.0805%" height="15" fill="rgb(249,90,48)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4605%" y="629" width="0.0805%" height="15" fill="rgb(231,10,48)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.5411%" y="677" width="0.0805%" height="15" fill="rgb(234,120,19)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.5411%" y="661" width="0.0805%" height="15" fill="rgb(212,221,36)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.5411%" y="645" width="0.0805%" height="15" fill="rgb(230,151,52)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="629" width="0.0805%" height="15" fill="rgb(246,35,38)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="613" width="0.0805%" height="15" fill="rgb(208,110,54)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="597" width="0.0805%" height="15" fill="rgb(250,206,40)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="581" width="0.0805%" height="15" fill="rgb(225,204,22)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="565" width="0.0805%" height="15" fill="rgb(220,29,11)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5411%" y="549" width="0.0805%" height="15" fill="rgb(254,133,9)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.5411%" y="709" width="0.1610%" height="15" fill="rgb(254,178,33)" fg:x="1050" fg:w="2"/><text x="84.7911%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.5411%" y="693" width="0.1610%" height="15" fill="rgb(239,217,37)" fg:x="1050" fg:w="2"/><text x="84.7911%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.6216%" y="677" width="0.0805%" height="15" fill="rgb(210,41,5)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.6216%" y="661" width="0.0805%" height="15" fill="rgb(227,23,47)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.6216%" y="645" width="0.0805%" height="15" fill="rgb(215,18,46)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6216%" y="629" width="0.0805%" height="15" fill="rgb(247,172,0)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6216%" y="613" width="0.0805%" height="15" fill="rgb(254,23,27)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6216%" y="597" width="0.0805%" height="15" fill="rgb(223,61,6)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6216%" y="581" width="0.0805%" height="15" fill="rgb(237,65,24)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.6216%" y="565" width="0.0805%" height="15" fill="rgb(238,133,22)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6216%" y="549" width="0.0805%" height="15" fill="rgb(217,219,5)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6216%" y="533" width="0.0805%" height="15" fill="rgb(254,24,44)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6216%" y="517" width="0.0805%" height="15" fill="rgb(217,136,50)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6216%" y="501" width="0.0805%" height="15" fill="rgb(243,85,15)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6216%" y="485" width="0.0805%" height="15" fill="rgb(224,85,42)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="84.6216%" y="469" width="0.0805%" height="15" fill="rgb(237,142,36)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="84.6216%" y="453" width="0.0805%" height="15" fill="rgb(215,131,52)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="463.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="84.6216%" y="437" width="0.0805%" height="15" fill="rgb(216,124,50)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="447.50"></text></g><g><title>plugins_core::build::Build::holding (15 samples, 1.21%)</title><rect x="83.5749%" y="757" width="1.2077%" height="15" fill="rgb(223,61,20)" fg:x="1038" fg:w="15"/><text x="83.8249%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="84.0580%" y="741" width="0.7246%" height="15" fill="rgb(250,62,47)" fg:x="1044" fg:w="9"/><text x="84.3080%" y="751.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="84.5411%" y="725" width="0.2415%" height="15" fill="rgb(225,180,21)" fg:x="1050" fg:w="3"/><text x="84.7911%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="84.7021%" y="709" width="0.0805%" height="15" fill="rgb(210,89,33)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.7021%" y="693" width="0.0805%" height="15" fill="rgb(205,215,50)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="84.7021%" y="677" width="0.0805%" height="15" fill="rgb(207,191,48)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="84.7021%" y="661" width="0.0805%" height="15" fill="rgb(247,32,5)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="84.7021%" y="645" width="0.0805%" height="15" fill="rgb(210,113,39)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="655.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="84.7021%" y="629" width="0.0805%" height="15" fill="rgb(242,181,23)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="84.7021%" y="613" width="0.0805%" height="15" fill="rgb(215,58,22)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7021%" y="597" width="0.0805%" height="15" fill="rgb(236,31,11)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7021%" y="581" width="0.0805%" height="15" fill="rgb(244,198,15)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.7021%" y="565" width="0.0805%" height="15" fill="rgb(230,142,36)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.7021%" y="549" width="0.0805%" height="15" fill="rgb(219,48,29)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.7021%" y="533" width="0.0805%" height="15" fill="rgb(237,179,43)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.7021%" y="517" width="0.0805%" height="15" fill="rgb(221,67,37)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.7826%" y="725" width="0.0805%" height="15" fill="rgb(222,217,18)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.7826%" y="709" width="0.0805%" height="15" fill="rgb(235,107,38)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.7826%" y="693" width="0.0805%" height="15" fill="rgb(227,110,50)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.7826%" y="677" width="0.0805%" height="15" fill="rgb(224,176,42)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="84.7826%" y="757" width="0.1610%" height="15" fill="rgb(250,34,11)" fg:x="1053" fg:w="2"/><text x="85.0326%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="84.7826%" y="741" width="0.1610%" height="15" fill="rgb(253,107,24)" fg:x="1053" fg:w="2"/><text x="85.0326%" y="751.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="84.8631%" y="725" width="0.0805%" height="15" fill="rgb(213,146,11)" fg:x="1054" fg:w="1"/><text x="85.1131%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.9436%" y="725" width="0.0805%" height="15" fill="rgb(216,88,42)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.9436%" y="709" width="0.0805%" height="15" fill="rgb(231,37,19)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.9436%" y="693" width="0.0805%" height="15" fill="rgb(213,154,5)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9436%" y="677" width="0.0805%" height="15" fill="rgb(234,102,6)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9436%" y="661" width="0.0805%" height="15" fill="rgb(206,125,39)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9436%" y="645" width="0.0805%" height="15" fill="rgb(254,216,50)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9436%" y="629" width="0.0805%" height="15" fill="rgb(205,65,40)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.9436%" y="613" width="0.0805%" height="15" fill="rgb(244,217,7)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9436%" y="597" width="0.0805%" height="15" fill="rgb(220,203,19)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9436%" y="581" width="0.0805%" height="15" fill="rgb(254,124,45)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9436%" y="565" width="0.0805%" height="15" fill="rgb(236,111,39)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9436%" y="549" width="0.0805%" height="15" fill="rgb(243,49,31)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9436%" y="533" width="0.0805%" height="15" fill="rgb(252,80,32)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9436%" y="517" width="0.0805%" height="15" fill="rgb(221,67,33)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.9436%" y="501" width="0.0805%" height="15" fill="rgb(225,12,36)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="84.9436%" y="741" width="0.1610%" height="15" fill="rgb(210,14,38)" fg:x="1055" fg:w="2"/><text x="85.1936%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="85.0242%" y="725" width="0.0805%" height="15" fill="rgb(251,82,7)" fg:x="1056" fg:w="1"/><text x="85.2742%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.0242%" y="709" width="0.0805%" height="15" fill="rgb(253,73,22)" fg:x="1056" fg:w="1"/><text x="85.2742%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.1047%" y="725" width="0.0805%" height="15" fill="rgb(237,31,38)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.1047%" y="709" width="0.0805%" height="15" fill="rgb(234,184,33)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.1047%" y="693" width="0.0805%" height="15" fill="rgb(219,43,13)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.1047%" y="677" width="0.0805%" height="15" fill="rgb(252,139,13)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.1047%" y="661" width="0.0805%" height="15" fill="rgb(229,79,33)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1047%" y="645" width="0.0805%" height="15" fill="rgb(248,8,21)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1047%" y="629" width="0.0805%" height="15" fill="rgb(225,124,31)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1047%" y="613" width="0.0805%" height="15" fill="rgb(248,141,9)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1047%" y="597" width="0.0805%" height="15" fill="rgb(251,223,32)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.1047%" y="581" width="0.0805%" height="15" fill="rgb(251,8,33)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1047%" y="565" width="0.0805%" height="15" fill="rgb(205,95,13)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1047%" y="549" width="0.0805%" height="15" fill="rgb(235,208,38)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1047%" y="533" width="0.0805%" height="15" fill="rgb(222,33,24)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1047%" y="517" width="0.0805%" height="15" fill="rgb(219,97,3)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (67 samples, 5.39%)</title><rect x="79.9517%" y="773" width="5.3945%" height="15" fill="rgb(209,15,37)" fg:x="993" fg:w="67"/><text x="80.2017%" y="783.50">plugins..</text></g><g><title>plugins_core::build::Build::occupying (5 samples, 0.40%)</title><rect x="84.9436%" y="757" width="0.4026%" height="15" fill="rgb(206,100,16)" fg:x="1055" fg:w="5"/><text x="85.1936%" y="767.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="85.1047%" y="741" width="0.2415%" height="15" fill="rgb(208,61,41)" fg:x="1057" fg:w="3"/><text x="85.3547%" y="751.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="85.1852%" y="725" width="0.1610%" height="15" fill="rgb(226,154,13)" fg:x="1058" fg:w="2"/><text x="85.4352%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="85.1852%" y="709" width="0.1610%" height="15" fill="rgb(226,113,19)" fg:x="1058" fg:w="2"/><text x="85.4352%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.2657%" y="693" width="0.0805%" height="15" fill="rgb(209,115,46)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.2657%" y="677" width="0.0805%" height="15" fill="rgb(234,170,38)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.2657%" y="661" width="0.0805%" height="15" fill="rgb(228,23,37)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.2657%" y="645" width="0.0805%" height="15" fill="rgb(243,83,27)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2657%" y="629" width="0.0805%" height="15" fill="rgb(251,121,22)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2657%" y="613" width="0.0805%" height="15" fill="rgb(205,106,26)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="85.3462%" y="773" width="0.0805%" height="15" fill="rgb(251,23,10)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="85.3462%" y="757" width="0.0805%" height="15" fill="rgb(250,218,35)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.3462%" y="741" width="0.0805%" height="15" fill="rgb(211,16,34)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.3462%" y="725" width="0.0805%" height="15" fill="rgb(238,148,30)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.3462%" y="709" width="0.0805%" height="15" fill="rgb(236,171,40)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3462%" y="693" width="0.0805%" height="15" fill="rgb(237,128,15)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3462%" y="677" width="0.0805%" height="15" fill="rgb(222,8,10)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3462%" y="661" width="0.0805%" height="15" fill="rgb(244,223,11)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4267%" y="645" width="0.0805%" height="15" fill="rgb(230,23,54)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4267%" y="629" width="0.0805%" height="15" fill="rgb(206,71,18)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4267%" y="613" width="0.0805%" height="15" fill="rgb(221,190,41)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4267%" y="597" width="0.0805%" height="15" fill="rgb(242,202,19)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4267%" y="581" width="0.0805%" height="15" fill="rgb(242,213,28)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4267%" y="565" width="0.0805%" height="15" fill="rgb(224,77,34)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.4267%" y="549" width="0.0805%" height="15" fill="rgb(231,13,30)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.4267%" y="533" width="0.0805%" height="15" fill="rgb(231,126,46)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.4267%" y="517" width="0.0805%" height="15" fill="rgb(237,50,16)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4267%" y="501" width="0.0805%" height="15" fill="rgb(250,0,53)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4267%" y="485" width="0.0805%" height="15" fill="rgb(206,168,4)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.4267%" y="469" width="0.0805%" height="15" fill="rgb(237,195,30)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.4267%" y="453" width="0.0805%" height="15" fill="rgb(250,185,28)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.4267%" y="437" width="0.0805%" height="15" fill="rgb(236,31,48)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.4267%" y="421" width="0.0805%" height="15" fill="rgb(240,210,1)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4267%" y="405" width="0.0805%" height="15" fill="rgb(211,67,10)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.4267%" y="741" width="0.1610%" height="15" fill="rgb(224,37,37)" fg:x="1061" fg:w="2"/><text x="85.6767%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="85.4267%" y="725" width="0.1610%" height="15" fill="rgb(211,57,29)" fg:x="1061" fg:w="2"/><text x="85.6767%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="85.4267%" y="709" width="0.1610%" height="15" fill="rgb(222,128,38)" fg:x="1061" fg:w="2"/><text x="85.6767%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="85.4267%" y="693" width="0.1610%" height="15" fill="rgb(222,119,2)" fg:x="1061" fg:w="2"/><text x="85.6767%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="85.4267%" y="677" width="0.1610%" height="15" fill="rgb(207,185,13)" fg:x="1061" fg:w="2"/><text x="85.6767%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.4267%" y="661" width="0.1610%" height="15" fill="rgb(234,134,26)" fg:x="1061" fg:w="2"/><text x="85.6767%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5072%" y="645" width="0.0805%" height="15" fill="rgb(236,28,54)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5072%" y="629" width="0.0805%" height="15" fill="rgb(218,4,16)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5072%" y="613" width="0.0805%" height="15" fill="rgb(206,115,32)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5072%" y="597" width="0.0805%" height="15" fill="rgb(221,12,8)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.5072%" y="581" width="0.0805%" height="15" fill="rgb(239,207,6)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5072%" y="565" width="0.0805%" height="15" fill="rgb(217,119,6)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5072%" y="549" width="0.0805%" height="15" fill="rgb(230,27,1)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5072%" y="533" width="0.0805%" height="15" fill="rgb(237,155,1)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5072%" y="517" width="0.0805%" height="15" fill="rgb(248,66,50)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="85.4267%" y="773" width="0.2415%" height="15" fill="rgb(218,66,19)" fg:x="1061" fg:w="3"/><text x="85.6767%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="85.4267%" y="757" width="0.2415%" height="15" fill="rgb(229,19,7)" fg:x="1061" fg:w="3"/><text x="85.6767%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="85.5878%" y="741" width="0.0805%" height="15" fill="rgb(223,65,18)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.5878%" y="725" width="0.0805%" height="15" fill="rgb(216,100,6)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.5878%" y="709" width="0.0805%" height="15" fill="rgb(215,16,2)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.5878%" y="693" width="0.0805%" height="15" fill="rgb(219,20,33)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.5878%" y="677" width="0.0805%" height="15" fill="rgb(215,120,26)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5878%" y="661" width="0.0805%" height="15" fill="rgb(240,175,31)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5878%" y="645" width="0.0805%" height="15" fill="rgb(245,165,43)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5878%" y="629" width="0.0805%" height="15" fill="rgb(228,92,16)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5878%" y="613" width="0.0805%" height="15" fill="rgb(252,37,37)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.5878%" y="597" width="0.0805%" height="15" fill="rgb(220,96,32)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.5878%" y="581" width="0.0805%" height="15" fill="rgb(206,224,2)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.8293%" y="741" width="0.0805%" height="15" fill="rgb(221,63,25)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.8293%" y="725" width="0.0805%" height="15" fill="rgb(244,60,40)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.8293%" y="709" width="0.0805%" height="15" fill="rgb(209,102,13)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8293%" y="693" width="0.0805%" height="15" fill="rgb(216,127,17)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8293%" y="677" width="0.0805%" height="15" fill="rgb(242,182,26)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8293%" y="661" width="0.0805%" height="15" fill="rgb(233,22,19)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8293%" y="645" width="0.0805%" height="15" fill="rgb(238,173,31)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.8293%" y="629" width="0.0805%" height="15" fill="rgb(244,165,10)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8293%" y="613" width="0.0805%" height="15" fill="rgb(251,138,36)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8293%" y="597" width="0.0805%" height="15" fill="rgb(233,2,19)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8293%" y="581" width="0.0805%" height="15" fill="rgb(206,178,31)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8293%" y="565" width="0.0805%" height="15" fill="rgb(223,128,44)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8293%" y="549" width="0.0805%" height="15" fill="rgb(238,24,5)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.8293%" y="533" width="0.0805%" height="15" fill="rgb(217,140,4)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.8293%" y="757" width="0.1610%" height="15" fill="rgb(250,89,54)" fg:x="1066" fg:w="2"/><text x="86.0793%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="85.9098%" y="741" width="0.0805%" height="15" fill="rgb(223,199,30)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="85.9098%" y="725" width="0.0805%" height="15" fill="rgb(220,47,34)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.9098%" y="709" width="0.0805%" height="15" fill="rgb(206,12,44)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.9098%" y="693" width="0.0805%" height="15" fill="rgb(226,159,9)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.9098%" y="677" width="0.0805%" height="15" fill="rgb(224,150,25)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9098%" y="661" width="0.0805%" height="15" fill="rgb(248,214,17)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.9098%" y="645" width="0.0805%" height="15" fill="rgb(208,189,54)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.9098%" y="629" width="0.0805%" height="15" fill="rgb(233,78,33)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9098%" y="613" width="0.0805%" height="15" fill="rgb(244,217,34)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="85.9903%" y="757" width="0.0805%" height="15" fill="rgb(221,41,46)" fg:x="1068" fg:w="1"/><text x="86.2403%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="85.9903%" y="741" width="0.0805%" height="15" fill="rgb(216,152,46)" fg:x="1068" fg:w="1"/><text x="86.2403%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.9903%" y="725" width="0.0805%" height="15" fill="rgb(235,72,49)" fg:x="1068" fg:w="1"/><text x="86.2403%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9903%" y="709" width="0.0805%" height="15" fill="rgb(214,12,0)" fg:x="1068" fg:w="1"/><text x="86.2403%" y="719.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (113 samples, 9.10%)</title><rect x="77.0531%" y="789" width="9.0982%" height="15" fill="rgb(254,8,3)" fg:x="957" fg:w="113"/><text x="77.3031%" y="799.50">&lt;tests::Holdi..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (6 samples, 0.48%)</title><rect x="85.6683%" y="773" width="0.4831%" height="15" fill="rgb(238,167,16)" fg:x="1064" fg:w="6"/><text x="85.9183%" y="783.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="86.0709%" y="757" width="0.0805%" height="15" fill="rgb(236,220,0)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="86.0709%" y="741" width="0.0805%" height="15" fill="rgb(207,8,20)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="751.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="86.0709%" y="725" width="0.0805%" height="15" fill="rgb(236,113,14)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.0709%" y="709" width="0.0805%" height="15" fill="rgb(207,6,6)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.0709%" y="693" width="0.0805%" height="15" fill="rgb(225,92,41)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="86.0709%" y="677" width="0.0805%" height="15" fill="rgb(234,224,18)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.0709%" y="661" width="0.0805%" height="15" fill="rgb(248,195,4)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0709%" y="645" width="0.0805%" height="15" fill="rgb(229,146,7)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0709%" y="629" width="0.0805%" height="15" fill="rgb(249,192,15)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0709%" y="613" width="0.0805%" height="15" fill="rgb(253,77,34)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="86.1514%" y="789" width="0.0805%" height="15" fill="rgb(236,228,3)" fg:x="1070" fg:w="1"/><text x="86.4014%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="86.1514%" y="773" width="0.0805%" height="15" fill="rgb(233,71,16)" fg:x="1070" fg:w="1"/><text x="86.4014%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="86.1514%" y="757" width="0.0805%" height="15" fill="rgb(239,41,1)" fg:x="1070" fg:w="1"/><text x="86.4014%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.1514%" y="741" width="0.0805%" height="15" fill="rgb(214,119,41)" fg:x="1070" fg:w="1"/><text x="86.4014%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1514%" y="725" width="0.0805%" height="15" fill="rgb(213,17,39)" fg:x="1070" fg:w="1"/><text x="86.4014%" y="735.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="86.2319%" y="773" width="0.1610%" height="15" fill="rgb(245,42,20)" fg:x="1071" fg:w="2"/><text x="86.4819%" y="783.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="86.2319%" y="757" width="0.1610%" height="15" fill="rgb(252,18,22)" fg:x="1071" fg:w="2"/><text x="86.4819%" y="767.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="86.2319%" y="741" width="0.1610%" height="15" fill="rgb(219,125,29)" fg:x="1071" fg:w="2"/><text x="86.4819%" y="751.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="86.2319%" y="725" width="0.1610%" height="15" fill="rgb(215,56,47)" fg:x="1071" fg:w="2"/><text x="86.4819%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="86.2319%" y="709" width="0.1610%" height="15" fill="rgb(212,211,43)" fg:x="1071" fg:w="2"/><text x="86.4819%" y="719.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="86.2319%" y="693" width="0.1610%" height="15" fill="rgb(225,24,34)" fg:x="1071" fg:w="2"/><text x="86.4819%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="86.2319%" y="677" width="0.1610%" height="15" fill="rgb(229,104,27)" fg:x="1071" fg:w="2"/><text x="86.4819%" y="687.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="86.2319%" y="661" width="0.1610%" height="15" fill="rgb(208,56,42)" fg:x="1071" fg:w="2"/><text x="86.4819%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="86.3929%" y="741" width="0.0805%" height="15" fill="rgb(210,79,18)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="86.3929%" y="725" width="0.0805%" height="15" fill="rgb(236,125,53)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="86.4734%" y="741" width="0.0805%" height="15" fill="rgb(207,101,52)" fg:x="1074" fg:w="1"/><text x="86.7234%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="86.4734%" y="725" width="0.0805%" height="15" fill="rgb(248,51,10)" fg:x="1074" fg:w="1"/><text x="86.7234%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4734%" y="709" width="0.0805%" height="15" fill="rgb(222,184,26)" fg:x="1074" fg:w="1"/><text x="86.7234%" y="719.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (3 samples, 0.24%)</title><rect x="86.3929%" y="757" width="0.2415%" height="15" fill="rgb(226,13,15)" fg:x="1073" fg:w="3"/><text x="86.6429%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (1 samples, 0.08%)</title><rect x="86.5539%" y="741" width="0.0805%" height="15" fill="rgb(238,108,43)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="86.5539%" y="725" width="0.0805%" height="15" fill="rgb(252,6,18)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.5539%" y="709" width="0.0805%" height="15" fill="rgb(215,206,11)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="719.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="86.5539%" y="693" width="0.0805%" height="15" fill="rgb(243,20,18)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.5539%" y="677" width="0.0805%" height="15" fill="rgb(213,39,51)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="86.5539%" y="661" width="0.0805%" height="15" fill="rgb(225,153,38)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="86.5539%" y="645" width="0.0805%" height="15" fill="rgb(235,8,28)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::has_entity (1 samples, 0.08%)</title><rect x="86.5539%" y="629" width="0.0805%" height="15" fill="rgb(215,0,21)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.7150%" y="677" width="0.0805%" height="15" fill="rgb(205,153,39)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.7150%" y="661" width="0.0805%" height="15" fill="rgb(231,172,8)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.7150%" y="645" width="0.0805%" height="15" fill="rgb(251,142,40)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="86.7150%" y="693" width="0.1610%" height="15" fill="rgb(214,48,45)" fg:x="1077" fg:w="2"/><text x="86.9650%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.7955%" y="677" width="0.0805%" height="15" fill="rgb(231,29,28)" fg:x="1078" fg:w="1"/><text x="87.0455%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.7955%" y="661" width="0.0805%" height="15" fill="rgb(245,57,8)" fg:x="1078" fg:w="1"/><text x="87.0455%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.7955%" y="645" width="0.0805%" height="15" fill="rgb(236,199,39)" fg:x="1078" fg:w="1"/><text x="87.0455%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.0370%" y="677" width="0.0805%" height="15" fill="rgb(208,132,35)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.1176%" y="677" width="0.0805%" height="15" fill="rgb(225,217,34)" fg:x="1082" fg:w="1"/><text x="87.3676%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.1176%" y="661" width="0.0805%" height="15" fill="rgb(252,227,26)" fg:x="1082" fg:w="1"/><text x="87.3676%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.1176%" y="645" width="0.0805%" height="15" fill="rgb(250,228,18)" fg:x="1082" fg:w="1"/><text x="87.3676%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.1176%" y="629" width="0.0805%" height="15" fill="rgb(222,176,49)" fg:x="1082" fg:w="1"/><text x="87.3676%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.1176%" y="613" width="0.0805%" height="15" fill="rgb(212,89,5)" fg:x="1082" fg:w="1"/><text x="87.3676%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.1981%" y="661" width="0.0805%" height="15" fill="rgb(211,131,11)" fg:x="1083" fg:w="1"/><text x="87.4481%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1981%" y="645" width="0.0805%" height="15" fill="rgb(226,185,34)" fg:x="1083" fg:w="1"/><text x="87.4481%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1981%" y="629" width="0.0805%" height="15" fill="rgb(239,228,52)" fg:x="1083" fg:w="1"/><text x="87.4481%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.1981%" y="613" width="0.0805%" height="15" fill="rgb(213,126,26)" fg:x="1083" fg:w="1"/><text x="87.4481%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.2786%" y="645" width="0.0805%" height="15" fill="rgb(248,59,21)" fg:x="1084" fg:w="1"/><text x="87.5286%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.2786%" y="629" width="0.0805%" height="15" fill="rgb(207,10,1)" fg:x="1084" fg:w="1"/><text x="87.5286%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.3591%" y="629" width="0.0805%" height="15" fill="rgb(240,122,43)" fg:x="1085" fg:w="1"/><text x="87.6091%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.5201%" y="613" width="0.0805%" height="15" fill="rgb(250,158,39)" fg:x="1087" fg:w="1"/><text x="87.7701%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.5201%" y="597" width="0.0805%" height="15" fill="rgb(212,108,0)" fg:x="1087" fg:w="1"/><text x="87.7701%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.6006%" y="597" width="0.0805%" height="15" fill="rgb(231,150,38)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.6006%" y="581" width="0.0805%" height="15" fill="rgb(249,154,4)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.6006%" y="565" width="0.0805%" height="15" fill="rgb(219,46,1)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.6006%" y="549" width="0.0805%" height="15" fill="rgb(227,68,4)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.6006%" y="533" width="0.0805%" height="15" fill="rgb(254,224,51)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.6006%" y="517" width="0.0805%" height="15" fill="rgb(220,89,20)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.6006%" y="501" width="0.0805%" height="15" fill="rgb(245,148,36)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="87.6006%" y="613" width="0.1610%" height="15" fill="rgb(216,50,30)" fg:x="1088" fg:w="2"/><text x="87.8506%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.6812%" y="597" width="0.0805%" height="15" fill="rgb(254,186,48)" fg:x="1089" fg:w="1"/><text x="87.9312%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.6812%" y="581" width="0.0805%" height="15" fill="rgb(237,78,54)" fg:x="1089" fg:w="1"/><text x="87.9312%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="87.3591%" y="645" width="0.5636%" height="15" fill="rgb(208,122,28)" fg:x="1085" fg:w="7"/><text x="87.6091%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="87.4396%" y="629" width="0.4831%" height="15" fill="rgb(237,71,0)" fg:x="1086" fg:w="6"/><text x="87.6896%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.7617%" y="613" width="0.1610%" height="15" fill="rgb(241,168,21)" fg:x="1090" fg:w="2"/><text x="88.0117%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.7617%" y="597" width="0.1610%" height="15" fill="rgb(252,223,14)" fg:x="1090" fg:w="2"/><text x="88.0117%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.7617%" y="581" width="0.1610%" height="15" fill="rgb(228,172,14)" fg:x="1090" fg:w="2"/><text x="88.0117%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="87.7617%" y="565" width="0.1610%" height="15" fill="rgb(236,44,24)" fg:x="1090" fg:w="2"/><text x="88.0117%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="87.7617%" y="549" width="0.1610%" height="15" fill="rgb(211,153,1)" fg:x="1090" fg:w="2"/><text x="88.0117%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="87.7617%" y="533" width="0.1610%" height="15" fill="rgb(242,70,19)" fg:x="1090" fg:w="2"/><text x="88.0117%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="87.1981%" y="677" width="0.8052%" height="15" fill="rgb(237,172,13)" fg:x="1083" fg:w="10"/><text x="87.4481%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="87.2786%" y="661" width="0.7246%" height="15" fill="rgb(215,222,51)" fg:x="1084" fg:w="9"/><text x="87.5286%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.9227%" y="645" width="0.0805%" height="15" fill="rgb(227,136,3)" fg:x="1092" fg:w="1"/><text x="88.1727%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.37%)</title><rect x="86.7150%" y="709" width="1.3688%" height="15" fill="rgb(234,107,46)" fg:x="1077" fg:w="17"/><text x="86.9650%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="86.8760%" y="693" width="1.2077%" height="15" fill="rgb(224,56,35)" fg:x="1079" fg:w="15"/><text x="87.1260%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.0032%" y="677" width="0.0805%" height="15" fill="rgb(253,132,31)" fg:x="1093" fg:w="1"/><text x="88.2532%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.0032%" y="661" width="0.0805%" height="15" fill="rgb(249,97,5)" fg:x="1093" fg:w="1"/><text x="88.2532%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.0032%" y="645" width="0.0805%" height="15" fill="rgb(225,135,20)" fg:x="1093" fg:w="1"/><text x="88.2532%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0837%" y="677" width="0.0805%" height="15" fill="rgb(220,48,27)" fg:x="1094" fg:w="1"/><text x="88.3337%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="88.1643%" y="661" width="0.2415%" height="15" fill="rgb(214,91,28)" fg:x="1095" fg:w="3"/><text x="88.4143%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="88.2448%" y="645" width="0.1610%" height="15" fill="rgb(232,51,16)" fg:x="1096" fg:w="2"/><text x="88.4948%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.4058%" y="645" width="0.0805%" height="15" fill="rgb(254,38,15)" fg:x="1098" fg:w="1"/><text x="88.6558%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4058%" y="629" width="0.0805%" height="15" fill="rgb(243,186,4)" fg:x="1098" fg:w="1"/><text x="88.6558%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="88.0837%" y="709" width="0.4831%" height="15" fill="rgb(222,210,21)" fg:x="1094" fg:w="6"/><text x="88.3337%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="88.0837%" y="693" width="0.4831%" height="15" fill="rgb(228,132,3)" fg:x="1094" fg:w="6"/><text x="88.3337%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="88.1643%" y="677" width="0.4026%" height="15" fill="rgb(253,188,15)" fg:x="1095" fg:w="5"/><text x="88.4143%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.4058%" y="661" width="0.1610%" height="15" fill="rgb(216,192,40)" fg:x="1098" fg:w="2"/><text x="88.6558%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.4863%" y="645" width="0.0805%" height="15" fill="rgb(230,126,2)" fg:x="1099" fg:w="1"/><text x="88.7363%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.4863%" y="629" width="0.0805%" height="15" fill="rgb(246,23,15)" fg:x="1099" fg:w="1"/><text x="88.7363%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.4863%" y="613" width="0.0805%" height="15" fill="rgb(250,224,8)" fg:x="1099" fg:w="1"/><text x="88.7363%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.4863%" y="597" width="0.0805%" height="15" fill="rgb(247,226,46)" fg:x="1099" fg:w="1"/><text x="88.7363%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.4863%" y="581" width="0.0805%" height="15" fill="rgb(226,67,43)" fg:x="1099" fg:w="1"/><text x="88.7363%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4863%" y="565" width="0.0805%" height="15" fill="rgb(239,37,7)" fg:x="1099" fg:w="1"/><text x="88.7363%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5668%" y="645" width="0.0805%" height="15" fill="rgb(239,125,3)" fg:x="1100" fg:w="1"/><text x="88.8168%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6473%" y="629" width="0.0805%" height="15" fill="rgb(235,59,37)" fg:x="1101" fg:w="1"/><text x="88.8973%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7279%" y="597" width="0.0805%" height="15" fill="rgb(241,214,47)" fg:x="1102" fg:w="1"/><text x="88.9779%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="88.5668%" y="677" width="0.4026%" height="15" fill="rgb(214,114,51)" fg:x="1100" fg:w="5"/><text x="88.8168%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="88.5668%" y="661" width="0.4026%" height="15" fill="rgb(221,180,19)" fg:x="1100" fg:w="5"/><text x="88.8168%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="88.6473%" y="645" width="0.3221%" height="15" fill="rgb(223,66,32)" fg:x="1101" fg:w="4"/><text x="88.8973%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.7279%" y="629" width="0.2415%" height="15" fill="rgb(218,134,38)" fg:x="1102" fg:w="3"/><text x="88.9779%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.7279%" y="613" width="0.2415%" height="15" fill="rgb(250,83,11)" fg:x="1102" fg:w="3"/><text x="88.9779%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.8084%" y="597" width="0.1610%" height="15" fill="rgb(239,137,18)" fg:x="1103" fg:w="2"/><text x="89.0584%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.8084%" y="581" width="0.1610%" height="15" fill="rgb(242,185,53)" fg:x="1103" fg:w="2"/><text x="89.0584%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8889%" y="565" width="0.0805%" height="15" fill="rgb(244,165,31)" fg:x="1104" fg:w="1"/><text x="89.1389%" y="575.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.64%)</title><rect x="88.5668%" y="693" width="0.6441%" height="15" fill="rgb(223,129,30)" fg:x="1100" fg:w="8"/><text x="88.8168%" y="703.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="88.9694%" y="677" width="0.2415%" height="15" fill="rgb(240,148,35)" fg:x="1105" fg:w="3"/><text x="89.2194%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="88.9694%" y="661" width="0.2415%" height="15" fill="rgb(231,3,24)" fg:x="1105" fg:w="3"/><text x="89.2194%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="88.9694%" y="645" width="0.2415%" height="15" fill="rgb(227,197,42)" fg:x="1105" fg:w="3"/><text x="89.2194%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.1304%" y="629" width="0.0805%" height="15" fill="rgb(251,41,31)" fg:x="1107" fg:w="1"/><text x="89.3804%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="89.2110%" y="677" width="0.0805%" height="15" fill="rgb(207,92,5)" fg:x="1108" fg:w="1"/><text x="89.4610%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2915%" y="661" width="0.0805%" height="15" fill="rgb(236,62,31)" fg:x="1109" fg:w="1"/><text x="89.5415%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="89.3720%" y="661" width="0.1610%" height="15" fill="rgb(248,218,41)" fg:x="1110" fg:w="2"/><text x="89.6220%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.3720%" y="645" width="0.1610%" height="15" fill="rgb(250,128,19)" fg:x="1110" fg:w="2"/><text x="89.6220%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.3720%" y="629" width="0.1610%" height="15" fill="rgb(239,216,33)" fg:x="1110" fg:w="2"/><text x="89.6220%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4525%" y="613" width="0.0805%" height="15" fill="rgb(216,44,26)" fg:x="1111" fg:w="1"/><text x="89.7025%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.5330%" y="629" width="0.0805%" height="15" fill="rgb(207,69,29)" fg:x="1112" fg:w="1"/><text x="89.7830%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.6940%" y="613" width="0.0805%" height="15" fill="rgb(246,182,38)" fg:x="1114" fg:w="1"/><text x="89.9440%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.6940%" y="597" width="0.0805%" height="15" fill="rgb(252,219,28)" fg:x="1114" fg:w="1"/><text x="89.9440%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.6940%" y="581" width="0.0805%" height="15" fill="rgb(209,164,16)" fg:x="1114" fg:w="1"/><text x="89.9440%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.6940%" y="565" width="0.0805%" height="15" fill="rgb(208,49,15)" fg:x="1114" fg:w="1"/><text x="89.9440%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.6940%" y="549" width="0.0805%" height="15" fill="rgb(235,42,45)" fg:x="1114" fg:w="1"/><text x="89.9440%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.9356%" y="581" width="0.0805%" height="15" fill="rgb(246,198,8)" fg:x="1117" fg:w="1"/><text x="90.1856%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.0966%" y="565" width="0.0805%" height="15" fill="rgb(237,205,33)" fg:x="1119" fg:w="1"/><text x="90.3466%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.05%)</title><rect x="89.2110%" y="693" width="1.0467%" height="15" fill="rgb(249,116,21)" fg:x="1108" fg:w="13"/><text x="89.4610%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="89.2915%" y="677" width="0.9662%" height="15" fill="rgb(230,35,49)" fg:x="1109" fg:w="12"/><text x="89.5415%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="89.5330%" y="661" width="0.7246%" height="15" fill="rgb(207,8,52)" fg:x="1112" fg:w="9"/><text x="89.7830%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="89.5330%" y="645" width="0.7246%" height="15" fill="rgb(218,173,0)" fg:x="1112" fg:w="9"/><text x="89.7830%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="89.6135%" y="629" width="0.6441%" height="15" fill="rgb(248,106,34)" fg:x="1113" fg:w="8"/><text x="89.8635%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="89.7746%" y="613" width="0.4831%" height="15" fill="rgb(232,50,11)" fg:x="1115" fg:w="6"/><text x="90.0246%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="89.7746%" y="597" width="0.4831%" height="15" fill="rgb(213,142,18)" fg:x="1115" fg:w="6"/><text x="90.0246%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="90.0161%" y="581" width="0.2415%" height="15" fill="rgb(246,117,38)" fg:x="1118" fg:w="3"/><text x="90.2661%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.1771%" y="565" width="0.0805%" height="15" fill="rgb(218,133,54)" fg:x="1120" fg:w="1"/><text x="90.4271%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1771%" y="549" width="0.0805%" height="15" fill="rgb(216,154,35)" fg:x="1120" fg:w="1"/><text x="90.4271%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.1771%" y="533" width="0.0805%" height="15" fill="rgb(219,175,36)" fg:x="1120" fg:w="1"/><text x="90.4271%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1771%" y="517" width="0.0805%" height="15" fill="rgb(224,0,16)" fg:x="1120" fg:w="1"/><text x="90.4271%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.1771%" y="501" width="0.0805%" height="15" fill="rgb(221,186,40)" fg:x="1120" fg:w="1"/><text x="90.4271%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1771%" y="485" width="0.0805%" height="15" fill="rgb(254,0,31)" fg:x="1120" fg:w="1"/><text x="90.4271%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1771%" y="469" width="0.0805%" height="15" fill="rgb(206,138,52)" fg:x="1120" fg:w="1"/><text x="90.4271%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1771%" y="453" width="0.0805%" height="15" fill="rgb(229,99,30)" fg:x="1120" fg:w="1"/><text x="90.4271%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.2576%" y="469" width="0.0805%" height="15" fill="rgb(205,131,29)" fg:x="1121" fg:w="1"/><text x="90.5076%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.2576%" y="453" width="0.0805%" height="15" fill="rgb(232,114,46)" fg:x="1121" fg:w="1"/><text x="90.5076%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.2576%" y="437" width="0.0805%" height="15" fill="rgb(206,181,31)" fg:x="1121" fg:w="1"/><text x="90.5076%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2576%" y="421" width="0.0805%" height="15" fill="rgb(251,142,12)" fg:x="1121" fg:w="1"/><text x="90.5076%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.2576%" y="565" width="0.1610%" height="15" fill="rgb(252,128,47)" fg:x="1121" fg:w="2"/><text x="90.5076%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.2576%" y="549" width="0.1610%" height="15" fill="rgb(208,51,33)" fg:x="1121" fg:w="2"/><text x="90.5076%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.2576%" y="533" width="0.1610%" height="15" fill="rgb(240,36,11)" fg:x="1121" fg:w="2"/><text x="90.5076%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.2576%" y="517" width="0.1610%" height="15" fill="rgb(245,160,28)" fg:x="1121" fg:w="2"/><text x="90.5076%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.2576%" y="501" width="0.1610%" height="15" fill="rgb(230,37,49)" fg:x="1121" fg:w="2"/><text x="90.5076%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.2576%" y="485" width="0.1610%" height="15" fill="rgb(227,40,34)" fg:x="1121" fg:w="2"/><text x="90.5076%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3382%" y="469" width="0.0805%" height="15" fill="rgb(253,212,23)" fg:x="1122" fg:w="1"/><text x="90.5882%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3382%" y="453" width="0.0805%" height="15" fill="rgb(230,155,36)" fg:x="1122" fg:w="1"/><text x="90.5882%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.3382%" y="437" width="0.0805%" height="15" fill="rgb(221,176,6)" fg:x="1122" fg:w="1"/><text x="90.5882%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="90.2576%" y="629" width="0.2415%" height="15" fill="rgb(207,203,40)" fg:x="1121" fg:w="3"/><text x="90.5076%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.2576%" y="613" width="0.2415%" height="15" fill="rgb(215,88,16)" fg:x="1121" fg:w="3"/><text x="90.5076%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="90.2576%" y="597" width="0.2415%" height="15" fill="rgb(233,52,54)" fg:x="1121" fg:w="3"/><text x="90.5076%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.2576%" y="581" width="0.2415%" height="15" fill="rgb(205,47,52)" fg:x="1121" fg:w="3"/><text x="90.5076%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4187%" y="565" width="0.0805%" height="15" fill="rgb(218,56,43)" fg:x="1123" fg:w="1"/><text x="90.6687%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4187%" y="549" width="0.0805%" height="15" fill="rgb(251,225,48)" fg:x="1123" fg:w="1"/><text x="90.6687%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4187%" y="533" width="0.0805%" height="15" fill="rgb(244,56,1)" fg:x="1123" fg:w="1"/><text x="90.6687%" y="543.50"></text></g><g><title>engine::session::Session::close (54 samples, 4.35%)</title><rect x="86.2319%" y="789" width="4.3478%" height="15" fill="rgb(215,46,3)" fg:x="1071" fg:w="54"/><text x="86.4819%" y="799.50">engin..</text></g><g><title>engine::session::state::State::close (52 samples, 4.19%)</title><rect x="86.3929%" y="773" width="4.1868%" height="15" fill="rgb(252,25,51)" fg:x="1073" fg:w="52"/><text x="86.6429%" y="783.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (49 samples, 3.95%)</title><rect x="86.6345%" y="757" width="3.9452%" height="15" fill="rgb(243,86,25)" fg:x="1076" fg:w="49"/><text x="86.8845%" y="767.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (49 samples, 3.95%)</title><rect x="86.6345%" y="741" width="3.9452%" height="15" fill="rgb(223,57,49)" fg:x="1076" fg:w="49"/><text x="86.8845%" y="751.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (49 samples, 3.95%)</title><rect x="86.6345%" y="725" width="3.9452%" height="15" fill="rgb(226,26,11)" fg:x="1076" fg:w="49"/><text x="86.8845%" y="735.50">engi..</text></g><g><title>kernel::model::any_entity_changes (25 samples, 2.01%)</title><rect x="88.5668%" y="709" width="2.0129%" height="15" fill="rgb(233,166,51)" fg:x="1100" fg:w="25"/><text x="88.8168%" y="719.50">k..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="90.2576%" y="693" width="0.3221%" height="15" fill="rgb(232,145,44)" fg:x="1121" fg:w="4"/><text x="90.5076%" y="703.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="90.2576%" y="677" width="0.3221%" height="15" fill="rgb(246,98,4)" fg:x="1121" fg:w="4"/><text x="90.5076%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="90.2576%" y="661" width="0.3221%" height="15" fill="rgb(223,187,1)" fg:x="1121" fg:w="4"/><text x="90.5076%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="90.2576%" y="645" width="0.3221%" height="15" fill="rgb(245,183,34)" fg:x="1121" fg:w="4"/><text x="90.5076%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4992%" y="629" width="0.0805%" height="15" fill="rgb(223,6,23)" fg:x="1124" fg:w="1"/><text x="90.7492%" y="639.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="90.7407%" y="581" width="0.0805%" height="15" fill="rgb(226,63,21)" fg:x="1127" fg:w="1"/><text x="90.9907%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7407%" y="565" width="0.0805%" height="15" fill="rgb(244,58,43)" fg:x="1127" fg:w="1"/><text x="90.9907%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7407%" y="549" width="0.0805%" height="15" fill="rgb(221,65,27)" fg:x="1127" fg:w="1"/><text x="90.9907%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7407%" y="533" width="0.0805%" height="15" fill="rgb(231,17,48)" fg:x="1127" fg:w="1"/><text x="90.9907%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7407%" y="517" width="0.0805%" height="15" fill="rgb(229,198,23)" fg:x="1127" fg:w="1"/><text x="90.9907%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7407%" y="501" width="0.0805%" height="15" fill="rgb(220,192,38)" fg:x="1127" fg:w="1"/><text x="90.9907%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7407%" y="485" width="0.0805%" height="15" fill="rgb(224,157,12)" fg:x="1127" fg:w="1"/><text x="90.9907%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.7407%" y="469" width="0.0805%" height="15" fill="rgb(210,74,7)" fg:x="1127" fg:w="1"/><text x="90.9907%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.7407%" y="453" width="0.0805%" height="15" fill="rgb(233,184,31)" fg:x="1127" fg:w="1"/><text x="90.9907%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.8213%" y="501" width="0.0805%" height="15" fill="rgb(246,44,22)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.8213%" y="485" width="0.0805%" height="15" fill="rgb(236,102,41)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.8213%" y="469" width="0.0805%" height="15" fill="rgb(245,17,40)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.8213%" y="453" width="0.0805%" height="15" fill="rgb(227,165,9)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.8213%" y="437" width="0.0805%" height="15" fill="rgb(220,123,37)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.8213%" y="421" width="0.0805%" height="15" fill="rgb(239,124,16)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="90.8213%" y="405" width="0.0805%" height="15" fill="rgb(214,215,39)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.8213%" y="389" width="0.0805%" height="15" fill="rgb(224,72,47)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.8213%" y="373" width="0.0805%" height="15" fill="rgb(252,112,7)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="90.8213%" y="357" width="0.0805%" height="15" fill="rgb(228,116,35)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.8213%" y="341" width="0.0805%" height="15" fill="rgb(246,125,25)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8213%" y="325" width="0.0805%" height="15" fill="rgb(230,220,33)" fg:x="1128" fg:w="1"/><text x="91.0713%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="90.8213%" y="549" width="0.2415%" height="15" fill="rgb(220,48,47)" fg:x="1128" fg:w="3"/><text x="91.0713%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="90.8213%" y="533" width="0.2415%" height="15" fill="rgb(240,130,32)" fg:x="1128" fg:w="3"/><text x="91.0713%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.8213%" y="517" width="0.2415%" height="15" fill="rgb(252,97,40)" fg:x="1128" fg:w="3"/><text x="91.0713%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.9018%" y="501" width="0.1610%" height="15" fill="rgb(211,117,15)" fg:x="1129" fg:w="2"/><text x="91.1518%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.9018%" y="485" width="0.1610%" height="15" fill="rgb(223,47,44)" fg:x="1129" fg:w="2"/><text x="91.1518%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="90.9823%" y="469" width="0.0805%" height="15" fill="rgb(239,53,20)" fg:x="1130" fg:w="1"/><text x="91.2323%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="90.9823%" y="453" width="0.0805%" height="15" fill="rgb(242,71,22)" fg:x="1130" fg:w="1"/><text x="91.2323%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="90.9823%" y="437" width="0.0805%" height="15" fill="rgb(244,146,41)" fg:x="1130" fg:w="1"/><text x="91.2323%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9823%" y="421" width="0.0805%" height="15" fill="rgb(206,133,42)" fg:x="1130" fg:w="1"/><text x="91.2323%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9823%" y="405" width="0.0805%" height="15" fill="rgb(220,206,16)" fg:x="1130" fg:w="1"/><text x="91.2323%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.9823%" y="389" width="0.0805%" height="15" fill="rgb(234,5,52)" fg:x="1130" fg:w="1"/><text x="91.2323%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="90.7407%" y="645" width="0.4026%" height="15" fill="rgb(206,81,46)" fg:x="1127" fg:w="5"/><text x="90.9907%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="90.7407%" y="629" width="0.4026%" height="15" fill="rgb(245,111,47)" fg:x="1127" fg:w="5"/><text x="90.9907%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="90.7407%" y="613" width="0.4026%" height="15" fill="rgb(227,198,45)" fg:x="1127" fg:w="5"/><text x="90.9907%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="90.7407%" y="597" width="0.4026%" height="15" fill="rgb(223,141,47)" fg:x="1127" fg:w="5"/><text x="90.9907%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="90.8213%" y="581" width="0.3221%" height="15" fill="rgb(234,124,3)" fg:x="1128" fg:w="4"/><text x="91.0713%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="90.8213%" y="565" width="0.3221%" height="15" fill="rgb(218,189,15)" fg:x="1128" fg:w="4"/><text x="91.0713%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0628%" y="549" width="0.0805%" height="15" fill="rgb(253,91,25)" fg:x="1131" fg:w="1"/><text x="91.3128%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0628%" y="533" width="0.0805%" height="15" fill="rgb(243,103,39)" fg:x="1131" fg:w="1"/><text x="91.3128%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.0628%" y="517" width="0.0805%" height="15" fill="rgb(252,94,6)" fg:x="1131" fg:w="1"/><text x="91.3128%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (6 samples, 0.48%)</title><rect x="90.7407%" y="693" width="0.4831%" height="15" fill="rgb(236,153,18)" fg:x="1127" fg:w="6"/><text x="90.9907%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="90.7407%" y="677" width="0.4831%" height="15" fill="rgb(218,227,22)" fg:x="1127" fg:w="6"/><text x="90.9907%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="90.7407%" y="661" width="0.4831%" height="15" fill="rgb(209,53,33)" fg:x="1127" fg:w="6"/><text x="90.9907%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="91.1433%" y="645" width="0.0805%" height="15" fill="rgb(252,183,3)" fg:x="1132" fg:w="1"/><text x="91.3933%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="91.3043%" y="645" width="0.0805%" height="15" fill="rgb(249,138,54)" fg:x="1134" fg:w="1"/><text x="91.5543%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="91.3043%" y="629" width="0.0805%" height="15" fill="rgb(226,39,3)" fg:x="1134" fg:w="1"/><text x="91.5543%" y="639.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (9 samples, 0.72%)</title><rect x="90.7407%" y="709" width="0.7246%" height="15" fill="rgb(237,129,38)" fg:x="1127" fg:w="9"/><text x="90.9907%" y="719.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="91.2238%" y="693" width="0.2415%" height="15" fill="rgb(218,214,54)" fg:x="1133" fg:w="3"/><text x="91.4738%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="91.3043%" y="677" width="0.1610%" height="15" fill="rgb(228,112,8)" fg:x="1134" fg:w="2"/><text x="91.5543%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="91.3043%" y="661" width="0.1610%" height="15" fill="rgb(219,128,11)" fg:x="1134" fg:w="2"/><text x="91.5543%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="91.3849%" y="645" width="0.0805%" height="15" fill="rgb(240,39,37)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="91.3849%" y="629" width="0.0805%" height="15" fill="rgb(215,199,42)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="613" width="0.0805%" height="15" fill="rgb(248,51,13)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.3849%" y="597" width="0.0805%" height="15" fill="rgb(225,196,0)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="581" width="0.0805%" height="15" fill="rgb(221,31,53)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="565" width="0.0805%" height="15" fill="rgb(211,79,37)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="549" width="0.0805%" height="15" fill="rgb(227,118,20)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.3849%" y="533" width="0.0805%" height="15" fill="rgb(225,142,40)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="517" width="0.0805%" height="15" fill="rgb(208,183,34)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="501" width="0.0805%" height="15" fill="rgb(209,112,52)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="485" width="0.0805%" height="15" fill="rgb(236,9,32)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.3849%" y="469" width="0.0805%" height="15" fill="rgb(208,222,9)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="453" width="0.0805%" height="15" fill="rgb(214,142,24)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="437" width="0.0805%" height="15" fill="rgb(244,48,51)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.3849%" y="421" width="0.0805%" height="15" fill="rgb(253,171,44)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.3849%" y="405" width="0.0805%" height="15" fill="rgb(221,85,21)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.3849%" y="389" width="0.0805%" height="15" fill="rgb(245,40,38)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.3849%" y="373" width="0.0805%" height="15" fill="rgb(220,135,37)" fg:x="1135" fg:w="1"/><text x="91.6349%" y="383.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (1 samples, 0.08%)</title><rect x="91.7069%" y="565" width="0.0805%" height="15" fill="rgb(249,62,46)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.7069%" y="549" width="0.0805%" height="15" fill="rgb(232,81,15)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.7069%" y="533" width="0.0805%" height="15" fill="rgb(244,179,28)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.7069%" y="517" width="0.0805%" height="15" fill="rgb(220,4,32)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.7069%" y="501" width="0.0805%" height="15" fill="rgb(214,116,42)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.7069%" y="485" width="0.0805%" height="15" fill="rgb(226,94,31)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.7069%" y="469" width="0.0805%" height="15" fill="rgb(241,172,26)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.7069%" y="453" width="0.0805%" height="15" fill="rgb(206,38,39)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="91.8680%" y="501" width="0.0805%" height="15" fill="rgb(210,139,19)" fg:x="1141" fg:w="1"/><text x="92.1180%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.9485%" y="469" width="0.1610%" height="15" fill="rgb(220,10,22)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.9485%" y="453" width="0.1610%" height="15" fill="rgb(225,218,36)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.9485%" y="437" width="0.1610%" height="15" fill="rgb(244,50,47)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.9485%" y="421" width="0.1610%" height="15" fill="rgb(247,80,2)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.9485%" y="405" width="0.1610%" height="15" fill="rgb(234,70,38)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.9485%" y="389" width="0.1610%" height="15" fill="rgb(238,170,25)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="91.9485%" y="373" width="0.1610%" height="15" fill="rgb(252,23,6)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="91.9485%" y="357" width="0.1610%" height="15" fill="rgb(209,98,49)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="91.9485%" y="341" width="0.1610%" height="15" fill="rgb(213,29,25)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="91.9485%" y="325" width="0.1610%" height="15" fill="rgb(235,71,32)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="91.9485%" y="309" width="0.1610%" height="15" fill="rgb(227,75,49)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="91.9485%" y="293" width="0.1610%" height="15" fill="rgb(220,19,24)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="91.9485%" y="277" width="0.1610%" height="15" fill="rgb(249,67,15)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="91.9485%" y="261" width="0.1610%" height="15" fill="rgb(233,197,44)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="91.9485%" y="245" width="0.1610%" height="15" fill="rgb(245,206,23)" fg:x="1142" fg:w="2"/><text x="92.1985%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0290%" y="229" width="0.0805%" height="15" fill="rgb(205,164,14)" fg:x="1143" fg:w="1"/><text x="92.2790%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="92.1900%" y="357" width="0.0805%" height="15" fill="rgb(209,57,33)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="92.1900%" y="341" width="0.0805%" height="15" fill="rgb(237,209,41)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.1900%" y="325" width="0.0805%" height="15" fill="rgb(252,93,6)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.1900%" y="309" width="0.0805%" height="15" fill="rgb(218,214,32)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.1900%" y="293" width="0.0805%" height="15" fill="rgb(243,144,9)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.1900%" y="277" width="0.0805%" height="15" fill="rgb(254,62,38)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.1900%" y="261" width="0.0805%" height="15" fill="rgb(247,146,11)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.1900%" y="245" width="0.0805%" height="15" fill="rgb(213,96,14)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.1900%" y="229" width="0.0805%" height="15" fill="rgb(246,102,11)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1900%" y="213" width="0.0805%" height="15" fill="rgb(241,182,16)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1900%" y="197" width="0.0805%" height="15" fill="rgb(225,28,43)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.1900%" y="181" width="0.0805%" height="15" fill="rgb(247,87,15)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.1900%" y="165" width="0.0805%" height="15" fill="rgb(225,211,30)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.1900%" y="149" width="0.0805%" height="15" fill="rgb(223,111,44)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.1900%" y="133" width="0.0805%" height="15" fill="rgb(225,60,10)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.1900%" y="117" width="0.0805%" height="15" fill="rgb(245,196,31)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.1900%" y="101" width="0.0805%" height="15" fill="rgb(238,71,27)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.1900%" y="85" width="0.0805%" height="15" fill="rgb(212,77,40)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.1900%" y="69" width="0.0805%" height="15" fill="rgb(242,14,34)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.1900%" y="53" width="0.0805%" height="15" fill="rgb(227,221,15)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1900%" y="37" width="0.0805%" height="15" fill="rgb(230,80,41)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="47.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.2705%" y="293" width="0.0805%" height="15" fill="rgb(221,65,43)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.2705%" y="277" width="0.0805%" height="15" fill="rgb(250,139,15)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.4316%" y="261" width="0.0805%" height="15" fill="rgb(236,101,33)" fg:x="1148" fg:w="1"/><text x="92.6816%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4316%" y="245" width="0.0805%" height="15" fill="rgb(240,185,7)" fg:x="1148" fg:w="1"/><text x="92.6816%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.5121%" y="197" width="0.0805%" height="15" fill="rgb(230,219,29)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5121%" y="181" width="0.0805%" height="15" fill="rgb(250,208,42)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="191.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="92.2705%" y="341" width="0.4026%" height="15" fill="rgb(231,6,17)" fg:x="1146" fg:w="5"/><text x="92.5205%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="92.2705%" y="325" width="0.4026%" height="15" fill="rgb(250,180,47)" fg:x="1146" fg:w="5"/><text x="92.5205%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="92.2705%" y="309" width="0.4026%" height="15" fill="rgb(218,156,38)" fg:x="1146" fg:w="5"/><text x="92.5205%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.3510%" y="293" width="0.3221%" height="15" fill="rgb(207,13,46)" fg:x="1147" fg:w="4"/><text x="92.6010%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.3510%" y="277" width="0.3221%" height="15" fill="rgb(221,30,24)" fg:x="1147" fg:w="4"/><text x="92.6010%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.5121%" y="261" width="0.1610%" height="15" fill="rgb(239,110,29)" fg:x="1149" fg:w="2"/><text x="92.7621%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.5121%" y="245" width="0.1610%" height="15" fill="rgb(223,212,28)" fg:x="1149" fg:w="2"/><text x="92.7621%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.5121%" y="229" width="0.1610%" height="15" fill="rgb(206,148,43)" fg:x="1149" fg:w="2"/><text x="92.7621%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.5121%" y="213" width="0.1610%" height="15" fill="rgb(227,139,9)" fg:x="1149" fg:w="2"/><text x="92.7621%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5926%" y="197" width="0.0805%" height="15" fill="rgb(244,64,31)" fg:x="1150" fg:w="1"/><text x="92.8426%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.6731%" y="309" width="0.0805%" height="15" fill="rgb(219,45,45)" fg:x="1151" fg:w="1"/><text x="92.9231%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.7536%" y="261" width="0.0805%" height="15" fill="rgb(205,112,40)" fg:x="1152" fg:w="1"/><text x="93.0036%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (8 samples, 0.64%)</title><rect x="92.2705%" y="357" width="0.6441%" height="15" fill="rgb(207,18,46)" fg:x="1146" fg:w="8"/><text x="92.5205%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="92.6731%" y="341" width="0.2415%" height="15" fill="rgb(219,65,15)" fg:x="1151" fg:w="3"/><text x="92.9231%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.6731%" y="325" width="0.2415%" height="15" fill="rgb(248,191,24)" fg:x="1151" fg:w="3"/><text x="92.9231%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="92.7536%" y="309" width="0.1610%" height="15" fill="rgb(251,155,16)" fg:x="1152" fg:w="2"/><text x="93.0036%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7536%" y="293" width="0.1610%" height="15" fill="rgb(249,62,38)" fg:x="1152" fg:w="2"/><text x="93.0036%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.7536%" y="277" width="0.1610%" height="15" fill="rgb(252,214,17)" fg:x="1152" fg:w="2"/><text x="93.0036%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8341%" y="261" width="0.0805%" height="15" fill="rgb(246,215,53)" fg:x="1153" fg:w="1"/><text x="93.0841%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.8341%" y="245" width="0.0805%" height="15" fill="rgb(232,148,8)" fg:x="1153" fg:w="1"/><text x="93.0841%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.8341%" y="229" width="0.0805%" height="15" fill="rgb(221,119,15)" fg:x="1153" fg:w="1"/><text x="93.0841%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="92.8341%" y="213" width="0.0805%" height="15" fill="rgb(239,69,36)" fg:x="1153" fg:w="1"/><text x="93.0841%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="92.8341%" y="197" width="0.0805%" height="15" fill="rgb(247,164,1)" fg:x="1153" fg:w="1"/><text x="93.0841%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8341%" y="181" width="0.0805%" height="15" fill="rgb(216,221,53)" fg:x="1153" fg:w="1"/><text x="93.0841%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9147%" y="309" width="0.0805%" height="15" fill="rgb(249,57,29)" fg:x="1154" fg:w="1"/><text x="93.1647%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9147%" y="293" width="0.0805%" height="15" fill="rgb(227,23,6)" fg:x="1154" fg:w="1"/><text x="93.1647%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9147%" y="277" width="0.0805%" height="15" fill="rgb(213,211,30)" fg:x="1154" fg:w="1"/><text x="93.1647%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="92.9147%" y="357" width="0.1610%" height="15" fill="rgb(254,202,30)" fg:x="1154" fg:w="2"/><text x="93.1647%" y="367.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="92.9147%" y="341" width="0.1610%" height="15" fill="rgb(248,213,0)" fg:x="1154" fg:w="2"/><text x="93.1647%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.9147%" y="325" width="0.1610%" height="15" fill="rgb(248,55,48)" fg:x="1154" fg:w="2"/><text x="93.1647%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.9952%" y="309" width="0.0805%" height="15" fill="rgb(217,221,51)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.9952%" y="293" width="0.0805%" height="15" fill="rgb(233,8,16)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.9952%" y="277" width="0.0805%" height="15" fill="rgb(220,23,39)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.9952%" y="261" width="0.0805%" height="15" fill="rgb(236,20,54)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.9952%" y="245" width="0.0805%" height="15" fill="rgb(213,22,0)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.9952%" y="229" width="0.0805%" height="15" fill="rgb(226,144,21)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9952%" y="213" width="0.0805%" height="15" fill="rgb(240,32,26)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.9952%" y="197" width="0.0805%" height="15" fill="rgb(252,225,52)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="92.9952%" y="181" width="0.0805%" height="15" fill="rgb(227,113,38)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="191.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.13%)</title><rect x="92.1900%" y="373" width="1.1272%" height="15" fill="rgb(246,146,48)" fg:x="1145" fg:w="14"/><text x="92.4400%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="93.0757%" y="357" width="0.2415%" height="15" fill="rgb(229,83,50)" fg:x="1156" fg:w="3"/><text x="93.3257%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="93.0757%" y="341" width="0.2415%" height="15" fill="rgb(248,146,37)" fg:x="1156" fg:w="3"/><text x="93.3257%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="93.0757%" y="325" width="0.2415%" height="15" fill="rgb(230,102,37)" fg:x="1156" fg:w="3"/><text x="93.3257%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="93.0757%" y="309" width="0.2415%" height="15" fill="rgb(226,129,21)" fg:x="1156" fg:w="3"/><text x="93.3257%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="93.0757%" y="293" width="0.2415%" height="15" fill="rgb(241,215,13)" fg:x="1156" fg:w="3"/><text x="93.3257%" y="303.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (21 samples, 1.69%)</title><rect x="91.7874%" y="533" width="1.6908%" height="15" fill="rgb(217,128,6)" fg:x="1140" fg:w="21"/><text x="92.0374%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (20 samples, 1.61%)</title><rect x="91.8680%" y="517" width="1.6103%" height="15" fill="rgb(248,48,54)" fg:x="1141" fg:w="20"/><text x="92.1180%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (19 samples, 1.53%)</title><rect x="91.9485%" y="501" width="1.5298%" height="15" fill="rgb(219,83,38)" fg:x="1142" fg:w="19"/><text x="92.1985%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (19 samples, 1.53%)</title><rect x="91.9485%" y="485" width="1.5298%" height="15" fill="rgb(252,210,52)" fg:x="1142" fg:w="19"/><text x="92.1985%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (17 samples, 1.37%)</title><rect x="92.1095%" y="469" width="1.3688%" height="15" fill="rgb(221,200,4)" fg:x="1144" fg:w="17"/><text x="92.3595%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 1.37%)</title><rect x="92.1095%" y="453" width="1.3688%" height="15" fill="rgb(216,58,11)" fg:x="1144" fg:w="17"/><text x="92.3595%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.37%)</title><rect x="92.1095%" y="437" width="1.3688%" height="15" fill="rgb(213,152,6)" fg:x="1144" fg:w="17"/><text x="92.3595%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 1.37%)</title><rect x="92.1095%" y="421" width="1.3688%" height="15" fill="rgb(209,210,52)" fg:x="1144" fg:w="17"/><text x="92.3595%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (17 samples, 1.37%)</title><rect x="92.1095%" y="405" width="1.3688%" height="15" fill="rgb(216,26,42)" fg:x="1144" fg:w="17"/><text x="92.3595%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.37%)</title><rect x="92.1095%" y="389" width="1.3688%" height="15" fill="rgb(229,8,52)" fg:x="1144" fg:w="17"/><text x="92.3595%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="93.3172%" y="373" width="0.1610%" height="15" fill="rgb(234,11,12)" fg:x="1159" fg:w="2"/><text x="93.5672%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.3977%" y="357" width="0.0805%" height="15" fill="rgb(222,132,34)" fg:x="1160" fg:w="1"/><text x="93.6477%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="93.4783%" y="517" width="0.0805%" height="15" fill="rgb(246,51,18)" fg:x="1161" fg:w="1"/><text x="93.7283%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="93.4783%" y="501" width="0.0805%" height="15" fill="rgb(234,40,7)" fg:x="1161" fg:w="1"/><text x="93.7283%" y="511.50"></text></g><g><title>core::slice::sort::merge_sort (1 samples, 0.08%)</title><rect x="93.5588%" y="517" width="0.0805%" height="15" fill="rgb(240,11,8)" fg:x="1162" fg:w="1"/><text x="93.8088%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="93.4783%" y="533" width="0.2415%" height="15" fill="rgb(218,222,21)" fg:x="1161" fg:w="3"/><text x="93.7283%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="93.6393%" y="517" width="0.0805%" height="15" fill="rgb(238,59,21)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="93.6393%" y="501" width="0.0805%" height="15" fill="rgb(252,128,29)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="93.6393%" y="485" width="0.0805%" height="15" fill="rgb(245,61,34)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.6393%" y="469" width="0.0805%" height="15" fill="rgb(246,36,52)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.6393%" y="453" width="0.0805%" height="15" fill="rgb(243,48,49)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.6393%" y="437" width="0.0805%" height="15" fill="rgb(252,114,15)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6393%" y="421" width="0.0805%" height="15" fill="rgb(243,228,39)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6393%" y="405" width="0.0805%" height="15" fill="rgb(205,143,2)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6393%" y="389" width="0.0805%" height="15" fill="rgb(224,122,19)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.6393%" y="373" width="0.0805%" height="15" fill="rgb(250,66,51)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.6393%" y="357" width="0.0805%" height="15" fill="rgb(224,134,48)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.6393%" y="341" width="0.0805%" height="15" fill="rgb(219,137,43)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6393%" y="325" width="0.0805%" height="15" fill="rgb(207,44,47)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6393%" y="309" width="0.0805%" height="15" fill="rgb(245,216,11)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.6393%" y="293" width="0.0805%" height="15" fill="rgb(236,168,30)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.6393%" y="277" width="0.0805%" height="15" fill="rgb(249,110,10)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.6393%" y="261" width="0.0805%" height="15" fill="rgb(226,10,48)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.6393%" y="245" width="0.0805%" height="15" fill="rgb(243,14,47)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6393%" y="229" width="0.0805%" height="15" fill="rgb(208,184,14)" fg:x="1163" fg:w="1"/><text x="93.8893%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (25 samples, 2.01%)</title><rect x="91.7874%" y="565" width="2.0129%" height="15" fill="rgb(236,198,54)" fg:x="1140" fg:w="25"/><text x="92.0374%" y="575.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (25 samples, 2.01%)</title><rect x="91.7874%" y="549" width="2.0129%" height="15" fill="rgb(241,186,5)" fg:x="1140" fg:w="25"/><text x="92.0374%" y="559.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="93.7198%" y="533" width="0.0805%" height="15" fill="rgb(237,191,37)" fg:x="1164" fg:w="1"/><text x="93.9698%" y="543.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="93.7198%" y="517" width="0.0805%" height="15" fill="rgb(216,223,24)" fg:x="1164" fg:w="1"/><text x="93.9698%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="93.8003%" y="565" width="0.0805%" height="15" fill="rgb(210,29,29)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="93.8003%" y="549" width="0.0805%" height="15" fill="rgb(243,36,45)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.8003%" y="533" width="0.0805%" height="15" fill="rgb(217,109,6)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8808%" y="485" width="0.0805%" height="15" fill="rgb(240,106,11)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8808%" y="469" width="0.0805%" height="15" fill="rgb(230,187,12)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8808%" y="453" width="0.0805%" height="15" fill="rgb(242,88,45)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8808%" y="437" width="0.0805%" height="15" fill="rgb(240,181,21)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8808%" y="421" width="0.0805%" height="15" fill="rgb(252,126,44)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8808%" y="405" width="0.0805%" height="15" fill="rgb(230,157,48)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8808%" y="389" width="0.0805%" height="15" fill="rgb(224,15,2)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.8808%" y="373" width="0.0805%" height="15" fill="rgb(215,1,6)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.8808%" y="357" width="0.0805%" height="15" fill="rgb(210,225,13)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.8808%" y="341" width="0.0805%" height="15" fill="rgb(214,25,30)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8808%" y="325" width="0.0805%" height="15" fill="rgb(254,43,34)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8808%" y="309" width="0.0805%" height="15" fill="rgb(210,6,40)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.8808%" y="293" width="0.0805%" height="15" fill="rgb(251,76,23)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.8808%" y="277" width="0.0805%" height="15" fill="rgb(214,7,14)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.8808%" y="261" width="0.0805%" height="15" fill="rgb(227,100,33)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.8808%" y="245" width="0.0805%" height="15" fill="rgb(211,49,7)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8808%" y="229" width="0.0805%" height="15" fill="rgb(228,223,1)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.9614%" y="485" width="0.0805%" height="15" fill="rgb(245,92,22)" fg:x="1167" fg:w="1"/><text x="94.2114%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="93.9614%" y="469" width="0.0805%" height="15" fill="rgb(232,221,10)" fg:x="1167" fg:w="1"/><text x="94.2114%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="93.8808%" y="533" width="0.2415%" height="15" fill="rgb(252,175,23)" fg:x="1166" fg:w="3"/><text x="94.1308%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="93.8808%" y="517" width="0.2415%" height="15" fill="rgb(234,229,25)" fg:x="1166" fg:w="3"/><text x="94.1308%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.8808%" y="501" width="0.2415%" height="15" fill="rgb(254,127,20)" fg:x="1166" fg:w="3"/><text x="94.1308%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.0419%" y="485" width="0.0805%" height="15" fill="rgb(211,151,37)" fg:x="1168" fg:w="1"/><text x="94.2919%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.0419%" y="469" width="0.0805%" height="15" fill="rgb(226,185,3)" fg:x="1168" fg:w="1"/><text x="94.2919%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.0419%" y="453" width="0.0805%" height="15" fill="rgb(223,38,29)" fg:x="1168" fg:w="1"/><text x="94.2919%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.0419%" y="437" width="0.0805%" height="15" fill="rgb(206,134,22)" fg:x="1168" fg:w="1"/><text x="94.2919%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.0419%" y="421" width="0.0805%" height="15" fill="rgb(243,211,4)" fg:x="1168" fg:w="1"/><text x="94.2919%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.0419%" y="405" width="0.0805%" height="15" fill="rgb(244,214,18)" fg:x="1168" fg:w="1"/><text x="94.2919%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.1224%" y="485" width="0.0805%" height="15" fill="rgb(208,165,52)" fg:x="1169" fg:w="1"/><text x="94.3724%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (5 samples, 0.40%)</title><rect x="93.8808%" y="565" width="0.4026%" height="15" fill="rgb(245,165,39)" fg:x="1166" fg:w="5"/><text x="94.1308%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="93.8808%" y="549" width="0.4026%" height="15" fill="rgb(250,46,43)" fg:x="1166" fg:w="5"/><text x="94.1308%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="94.1224%" y="533" width="0.1610%" height="15" fill="rgb(242,86,47)" fg:x="1169" fg:w="2"/><text x="94.3724%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="94.1224%" y="517" width="0.1610%" height="15" fill="rgb(232,173,5)" fg:x="1169" fg:w="2"/><text x="94.3724%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.1224%" y="501" width="0.1610%" height="15" fill="rgb(208,117,14)" fg:x="1169" fg:w="2"/><text x="94.3724%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.2029%" y="485" width="0.0805%" height="15" fill="rgb(205,144,47)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2029%" y="469" width="0.0805%" height="15" fill="rgb(228,62,6)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.2029%" y="453" width="0.0805%" height="15" fill="rgb(238,32,51)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2029%" y="437" width="0.0805%" height="15" fill="rgb(251,211,21)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.2029%" y="421" width="0.0805%" height="15" fill="rgb(244,43,23)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2029%" y="405" width="0.0805%" height="15" fill="rgb(219,48,27)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.2029%" y="389" width="0.0805%" height="15" fill="rgb(251,72,17)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2029%" y="373" width="0.0805%" height="15" fill="rgb(214,69,49)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="383.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="94.2834%" y="565" width="0.0805%" height="15" fill="rgb(242,96,45)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="94.2834%" y="549" width="0.0805%" height="15" fill="rgb(233,20,50)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="94.2834%" y="533" width="0.0805%" height="15" fill="rgb(247,82,43)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="94.2834%" y="517" width="0.0805%" height="15" fill="rgb(210,97,3)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.2834%" y="501" width="0.0805%" height="15" fill="rgb(217,113,26)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="94.2834%" y="485" width="0.0805%" height="15" fill="rgb(207,166,18)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.2834%" y="469" width="0.0805%" height="15" fill="rgb(205,124,54)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.2834%" y="453" width="0.0805%" height="15" fill="rgb(211,140,29)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.3639%" y="469" width="0.0805%" height="15" fill="rgb(228,83,33)" fg:x="1172" fg:w="1"/><text x="94.6139%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="94.3639%" y="549" width="0.1610%" height="15" fill="rgb(225,217,40)" fg:x="1172" fg:w="2"/><text x="94.6139%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="94.3639%" y="533" width="0.1610%" height="15" fill="rgb(221,229,30)" fg:x="1172" fg:w="2"/><text x="94.6139%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="94.3639%" y="517" width="0.1610%" height="15" fill="rgb(210,1,48)" fg:x="1172" fg:w="2"/><text x="94.6139%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="94.3639%" y="501" width="0.1610%" height="15" fill="rgb(205,53,50)" fg:x="1172" fg:w="2"/><text x="94.6139%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.3639%" y="485" width="0.1610%" height="15" fill="rgb(211,25,54)" fg:x="1172" fg:w="2"/><text x="94.6139%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4444%" y="469" width="0.0805%" height="15" fill="rgb(205,28,13)" fg:x="1173" fg:w="1"/><text x="94.6944%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4444%" y="453" width="0.0805%" height="15" fill="rgb(214,37,48)" fg:x="1173" fg:w="1"/><text x="94.6944%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.6055%" y="533" width="0.0805%" height="15" fill="rgb(226,141,8)" fg:x="1175" fg:w="1"/><text x="94.8555%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="94.5250%" y="549" width="0.3221%" height="15" fill="rgb(206,200,0)" fg:x="1174" fg:w="4"/><text x="94.7750%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.6860%" y="533" width="0.1610%" height="15" fill="rgb(238,152,34)" fg:x="1176" fg:w="2"/><text x="94.9360%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="94.7665%" y="517" width="0.0805%" height="15" fill="rgb(216,72,48)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="94.7665%" y="501" width="0.0805%" height="15" fill="rgb(246,48,2)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.7665%" y="485" width="0.0805%" height="15" fill="rgb(249,59,28)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="94.7665%" y="469" width="0.0805%" height="15" fill="rgb(253,198,14)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="94.7665%" y="453" width="0.0805%" height="15" fill="rgb(225,162,4)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="94.7665%" y="437" width="0.0805%" height="15" fill="rgb(231,126,49)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="94.7665%" y="421" width="0.0805%" height="15" fill="rgb(207,41,3)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7665%" y="405" width="0.0805%" height="15" fill="rgb(212,223,36)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="415.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="94.8470%" y="549" width="0.0805%" height="15" fill="rgb(214,96,38)" fg:x="1178" fg:w="1"/><text x="95.0970%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="94.8470%" y="533" width="0.0805%" height="15" fill="rgb(246,104,47)" fg:x="1178" fg:w="1"/><text x="95.0970%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="94.8470%" y="517" width="0.0805%" height="15" fill="rgb(227,212,36)" fg:x="1178" fg:w="1"/><text x="95.0970%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0081%" y="501" width="0.0805%" height="15" fill="rgb(250,163,41)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0081%" y="485" width="0.0805%" height="15" fill="rgb(250,130,17)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.0081%" y="469" width="0.0805%" height="15" fill="rgb(206,42,32)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.0081%" y="453" width="0.0805%" height="15" fill="rgb(224,95,7)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.0081%" y="437" width="0.0805%" height="15" fill="rgb(242,96,42)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.0081%" y="421" width="0.0805%" height="15" fill="rgb(237,194,4)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.0081%" y="405" width="0.0805%" height="15" fill="rgb(245,142,29)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="94.9275%" y="549" width="0.2415%" height="15" fill="rgb(247,66,43)" fg:x="1179" fg:w="3"/><text x="95.1775%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="94.9275%" y="533" width="0.2415%" height="15" fill="rgb(220,153,30)" fg:x="1179" fg:w="3"/><text x="95.1775%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="95.0081%" y="517" width="0.1610%" height="15" fill="rgb(207,130,54)" fg:x="1180" fg:w="2"/><text x="95.2581%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.0886%" y="501" width="0.0805%" height="15" fill="rgb(242,49,39)" fg:x="1181" fg:w="1"/><text x="95.3386%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.0886%" y="485" width="0.0805%" height="15" fill="rgb(206,227,44)" fg:x="1181" fg:w="1"/><text x="95.3386%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.0886%" y="469" width="0.0805%" height="15" fill="rgb(236,74,29)" fg:x="1181" fg:w="1"/><text x="95.3386%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0886%" y="453" width="0.0805%" height="15" fill="rgb(222,52,23)" fg:x="1181" fg:w="1"/><text x="95.3386%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0886%" y="437" width="0.0805%" height="15" fill="rgb(245,65,4)" fg:x="1181" fg:w="1"/><text x="95.3386%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0886%" y="421" width="0.0805%" height="15" fill="rgb(205,120,32)" fg:x="1181" fg:w="1"/><text x="95.3386%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0886%" y="405" width="0.0805%" height="15" fill="rgb(226,156,21)" fg:x="1181" fg:w="1"/><text x="95.3386%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0886%" y="389" width="0.0805%" height="15" fill="rgb(240,117,11)" fg:x="1181" fg:w="1"/><text x="95.3386%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="95.2496%" y="533" width="0.0805%" height="15" fill="rgb(232,214,36)" fg:x="1183" fg:w="1"/><text x="95.4996%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.2496%" y="517" width="0.0805%" height="15" fill="rgb(252,121,45)" fg:x="1183" fg:w="1"/><text x="95.4996%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2496%" y="501" width="0.0805%" height="15" fill="rgb(250,206,1)" fg:x="1183" fg:w="1"/><text x="95.4996%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2496%" y="485" width="0.0805%" height="15" fill="rgb(213,40,16)" fg:x="1183" fg:w="1"/><text x="95.4996%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (46 samples, 3.70%)</title><rect x="91.7069%" y="581" width="3.7037%" height="15" fill="rgb(222,106,3)" fg:x="1139" fg:w="46"/><text x="91.9569%" y="591.50">&lt;plu..</text></g><g><title>plugins_core::location::change_location (13 samples, 1.05%)</title><rect x="94.3639%" y="565" width="1.0467%" height="15" fill="rgb(238,140,8)" fg:x="1172" fg:w="13"/><text x="94.6139%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="95.1691%" y="549" width="0.2415%" height="15" fill="rgb(217,119,30)" fg:x="1182" fg:w="3"/><text x="95.4191%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="95.3301%" y="533" width="0.0805%" height="15" fill="rgb(228,189,17)" fg:x="1184" fg:w="1"/><text x="95.5801%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="95.3301%" y="517" width="0.0805%" height="15" fill="rgb(243,94,42)" fg:x="1184" fg:w="1"/><text x="95.5801%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.3301%" y="501" width="0.0805%" height="15" fill="rgb(228,105,42)" fg:x="1184" fg:w="1"/><text x="95.5801%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="95.3301%" y="485" width="0.0805%" height="15" fill="rgb(233,19,53)" fg:x="1184" fg:w="1"/><text x="95.5801%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.3301%" y="469" width="0.0805%" height="15" fill="rgb(240,22,26)" fg:x="1184" fg:w="1"/><text x="95.5801%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3301%" y="453" width="0.0805%" height="15" fill="rgb(238,97,34)" fg:x="1184" fg:w="1"/><text x="95.5801%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3301%" y="437" width="0.0805%" height="15" fill="rgb(210,177,8)" fg:x="1184" fg:w="1"/><text x="95.5801%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4106%" y="501" width="0.0805%" height="15" fill="rgb(217,168,6)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4106%" y="485" width="0.0805%" height="15" fill="rgb(223,34,43)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4106%" y="469" width="0.0805%" height="15" fill="rgb(252,123,35)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.4106%" y="453" width="0.0805%" height="15" fill="rgb(243,162,1)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.4106%" y="437" width="0.0805%" height="15" fill="rgb(250,83,22)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.4106%" y="421" width="0.0805%" height="15" fill="rgb(247,184,7)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4106%" y="405" width="0.0805%" height="15" fill="rgb(254,212,7)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4106%" y="389" width="0.0805%" height="15" fill="rgb(249,198,8)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.4106%" y="373" width="0.0805%" height="15" fill="rgb(230,74,12)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.4106%" y="357" width="0.0805%" height="15" fill="rgb(253,174,9)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.4106%" y="341" width="0.0805%" height="15" fill="rgb(222,191,12)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.4106%" y="325" width="0.0805%" height="15" fill="rgb(234,28,43)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4106%" y="309" width="0.0805%" height="15" fill="rgb(232,13,38)" fg:x="1185" fg:w="1"/><text x="95.6606%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (2 samples, 0.16%)</title><rect x="95.4106%" y="549" width="0.1610%" height="15" fill="rgb(239,101,25)" fg:x="1185" fg:w="2"/><text x="95.6606%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.4106%" y="533" width="0.1610%" height="15" fill="rgb(237,214,49)" fg:x="1185" fg:w="2"/><text x="95.6606%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.4106%" y="517" width="0.1610%" height="15" fill="rgb(212,188,4)" fg:x="1185" fg:w="2"/><text x="95.6606%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.4911%" y="501" width="0.0805%" height="15" fill="rgb(208,167,23)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4911%" y="485" width="0.0805%" height="15" fill="rgb(209,179,40)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.4911%" y="469" width="0.0805%" height="15" fill="rgb(233,144,24)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4911%" y="453" width="0.0805%" height="15" fill="rgb(250,4,25)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.4911%" y="437" width="0.0805%" height="15" fill="rgb(236,222,29)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4911%" y="421" width="0.0805%" height="15" fill="rgb(228,152,14)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.4911%" y="405" width="0.0805%" height="15" fill="rgb(240,11,37)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4911%" y="389" width="0.0805%" height="15" fill="rgb(240,96,5)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.4911%" y="373" width="0.0805%" height="15" fill="rgb(242,145,4)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4911%" y="357" width="0.0805%" height="15" fill="rgb(229,118,33)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.4911%" y="341" width="0.0805%" height="15" fill="rgb(213,82,17)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.4911%" y="325" width="0.0805%" height="15" fill="rgb(236,71,53)" fg:x="1186" fg:w="1"/><text x="95.7411%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5717%" y="501" width="0.0805%" height="15" fill="rgb(227,158,19)" fg:x="1187" fg:w="1"/><text x="95.8217%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5717%" y="485" width="0.0805%" height="15" fill="rgb(220,52,31)" fg:x="1187" fg:w="1"/><text x="95.8217%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5717%" y="469" width="0.0805%" height="15" fill="rgb(232,137,27)" fg:x="1187" fg:w="1"/><text x="95.8217%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5717%" y="453" width="0.0805%" height="15" fill="rgb(208,155,6)" fg:x="1187" fg:w="1"/><text x="95.8217%" y="463.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (4 samples, 0.32%)</title><rect x="95.4106%" y="565" width="0.3221%" height="15" fill="rgb(253,212,46)" fg:x="1185" fg:w="4"/><text x="95.6606%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="95.5717%" y="549" width="0.1610%" height="15" fill="rgb(220,55,4)" fg:x="1187" fg:w="2"/><text x="95.8217%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.5717%" y="533" width="0.1610%" height="15" fill="rgb(226,100,5)" fg:x="1187" fg:w="2"/><text x="95.8217%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.5717%" y="517" width="0.1610%" height="15" fill="rgb(247,200,51)" fg:x="1187" fg:w="2"/><text x="95.8217%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6522%" y="501" width="0.0805%" height="15" fill="rgb(220,203,54)" fg:x="1188" fg:w="1"/><text x="95.9022%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6522%" y="485" width="0.0805%" height="15" fill="rgb(230,187,54)" fg:x="1188" fg:w="1"/><text x="95.9022%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6522%" y="469" width="0.0805%" height="15" fill="rgb(225,132,12)" fg:x="1188" fg:w="1"/><text x="95.9022%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6522%" y="453" width="0.0805%" height="15" fill="rgb(205,210,33)" fg:x="1188" fg:w="1"/><text x="95.9022%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7327%" y="517" width="0.0805%" height="15" fill="rgb(238,192,7)" fg:x="1189" fg:w="1"/><text x="95.9827%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="95.7327%" y="533" width="0.2415%" height="15" fill="rgb(245,82,29)" fg:x="1189" fg:w="3"/><text x="95.9827%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="95.8132%" y="517" width="0.1610%" height="15" fill="rgb(234,222,39)" fg:x="1190" fg:w="2"/><text x="96.0632%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="95.8132%" y="501" width="0.1610%" height="15" fill="rgb(231,222,18)" fg:x="1190" fg:w="2"/><text x="96.0632%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="95.9742%" y="517" width="0.0805%" height="15" fill="rgb(216,61,10)" fg:x="1192" fg:w="1"/><text x="96.2242%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.9742%" y="501" width="0.0805%" height="15" fill="rgb(241,116,34)" fg:x="1192" fg:w="1"/><text x="96.2242%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="95.9742%" y="485" width="0.0805%" height="15" fill="rgb(225,32,22)" fg:x="1192" fg:w="1"/><text x="96.2242%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="96.0548%" y="501" width="0.0805%" height="15" fill="rgb(236,35,19)" fg:x="1193" fg:w="1"/><text x="96.3048%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="96.0548%" y="485" width="0.0805%" height="15" fill="rgb(231,198,28)" fg:x="1193" fg:w="1"/><text x="96.3048%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="96.0548%" y="469" width="0.0805%" height="15" fill="rgb(211,215,31)" fg:x="1193" fg:w="1"/><text x="96.3048%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.0548%" y="453" width="0.0805%" height="15" fill="rgb(243,118,23)" fg:x="1193" fg:w="1"/><text x="96.3048%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.1353%" y="469" width="0.1610%" height="15" fill="rgb(228,104,45)" fg:x="1194" fg:w="2"/><text x="96.3853%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2158%" y="453" width="0.0805%" height="15" fill="rgb(216,198,17)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2158%" y="437" width="0.0805%" height="15" fill="rgb(249,39,23)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2158%" y="421" width="0.0805%" height="15" fill="rgb(250,186,54)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.2158%" y="405" width="0.0805%" height="15" fill="rgb(243,110,14)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.2158%" y="389" width="0.0805%" height="15" fill="rgb(236,32,12)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.2158%" y="373" width="0.0805%" height="15" fill="rgb(211,92,33)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.2158%" y="357" width="0.0805%" height="15" fill="rgb(254,154,8)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.2158%" y="341" width="0.0805%" height="15" fill="rgb(241,107,40)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (6 samples, 0.48%)</title><rect x="95.9742%" y="533" width="0.4831%" height="15" fill="rgb(208,24,40)" fg:x="1192" fg:w="6"/><text x="96.2242%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.40%)</title><rect x="96.0548%" y="517" width="0.4026%" height="15" fill="rgb(252,158,9)" fg:x="1193" fg:w="5"/><text x="96.3048%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="96.1353%" y="501" width="0.3221%" height="15" fill="rgb(241,9,28)" fg:x="1194" fg:w="4"/><text x="96.3853%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="96.1353%" y="485" width="0.3221%" height="15" fill="rgb(210,199,32)" fg:x="1194" fg:w="4"/><text x="96.3853%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.2963%" y="469" width="0.1610%" height="15" fill="rgb(228,147,42)" fg:x="1196" fg:w="2"/><text x="96.5463%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.2963%" y="453" width="0.1610%" height="15" fill="rgb(248,202,26)" fg:x="1196" fg:w="2"/><text x="96.5463%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3768%" y="437" width="0.0805%" height="15" fill="rgb(225,67,4)" fg:x="1197" fg:w="1"/><text x="96.6268%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="96.4573%" y="469" width="0.1610%" height="15" fill="rgb(234,87,25)" fg:x="1198" fg:w="2"/><text x="96.7073%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.6184%" y="437" width="0.0805%" height="15" fill="rgb(229,58,0)" fg:x="1200" fg:w="1"/><text x="96.8684%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (13 samples, 1.05%)</title><rect x="95.7327%" y="565" width="1.0467%" height="15" fill="rgb(211,218,3)" fg:x="1189" fg:w="13"/><text x="95.9827%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (13 samples, 1.05%)</title><rect x="95.7327%" y="549" width="1.0467%" height="15" fill="rgb(216,109,54)" fg:x="1189" fg:w="13"/><text x="95.9827%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="96.4573%" y="533" width="0.3221%" height="15" fill="rgb(252,156,40)" fg:x="1198" fg:w="4"/><text x="96.7073%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="96.4573%" y="517" width="0.3221%" height="15" fill="rgb(208,1,12)" fg:x="1198" fg:w="4"/><text x="96.7073%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::name (4 samples, 0.32%)</title><rect x="96.4573%" y="501" width="0.3221%" height="15" fill="rgb(214,179,53)" fg:x="1198" fg:w="4"/><text x="96.7073%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="96.4573%" y="485" width="0.3221%" height="15" fill="rgb(205,173,17)" fg:x="1198" fg:w="4"/><text x="96.7073%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.6184%" y="469" width="0.1610%" height="15" fill="rgb(243,26,15)" fg:x="1200" fg:w="2"/><text x="96.8684%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.6184%" y="453" width="0.1610%" height="15" fill="rgb(231,139,31)" fg:x="1200" fg:w="2"/><text x="96.8684%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6989%" y="437" width="0.0805%" height="15" fill="rgb(208,163,22)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6989%" y="421" width="0.0805%" height="15" fill="rgb(245,84,24)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6989%" y="405" width="0.0805%" height="15" fill="rgb(238,140,36)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6989%" y="389" width="0.0805%" height="15" fill="rgb(218,211,39)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.6989%" y="373" width="0.0805%" height="15" fill="rgb(242,59,29)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6989%" y="357" width="0.0805%" height="15" fill="rgb(245,91,22)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6989%" y="341" width="0.0805%" height="15" fill="rgb(206,13,6)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6989%" y="325" width="0.0805%" height="15" fill="rgb(212,147,32)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.6989%" y="309" width="0.0805%" height="15" fill="rgb(254,64,12)" fg:x="1201" fg:w="1"/><text x="96.9489%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7794%" y="517" width="0.0805%" height="15" fill="rgb(212,104,54)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.9404%" y="485" width="0.1610%" height="15" fill="rgb(254,77,46)" fg:x="1204" fg:w="2"/><text x="97.1904%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.9404%" y="469" width="0.1610%" height="15" fill="rgb(219,55,26)" fg:x="1204" fg:w="2"/><text x="97.1904%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.9404%" y="453" width="0.1610%" height="15" fill="rgb(230,133,21)" fg:x="1204" fg:w="2"/><text x="97.1904%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.9404%" y="437" width="0.1610%" height="15" fill="rgb(247,110,50)" fg:x="1204" fg:w="2"/><text x="97.1904%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.0209%" y="421" width="0.0805%" height="15" fill="rgb(229,31,50)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.0209%" y="405" width="0.0805%" height="15" fill="rgb(250,13,40)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.0209%" y="389" width="0.0805%" height="15" fill="rgb(212,163,14)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.0209%" y="373" width="0.0805%" height="15" fill="rgb(211,190,39)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.0209%" y="357" width="0.0805%" height="15" fill="rgb(245,39,52)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.0209%" y="341" width="0.0805%" height="15" fill="rgb(216,76,3)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.0209%" y="325" width="0.0805%" height="15" fill="rgb(218,225,6)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.0209%" y="309" width="0.0805%" height="15" fill="rgb(215,137,11)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.0209%" y="293" width="0.0805%" height="15" fill="rgb(234,223,14)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.0209%" y="277" width="0.0805%" height="15" fill="rgb(236,24,21)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.0209%" y="261" width="0.0805%" height="15" fill="rgb(208,183,10)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.0209%" y="245" width="0.0805%" height="15" fill="rgb(254,9,3)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.0209%" y="229" width="0.0805%" height="15" fill="rgb(225,112,10)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="239.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (5 samples, 0.40%)</title><rect x="96.7794%" y="565" width="0.4026%" height="15" fill="rgb(232,7,4)" fg:x="1202" fg:w="5"/><text x="97.0294%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="96.7794%" y="549" width="0.4026%" height="15" fill="rgb(241,50,8)" fg:x="1202" fg:w="5"/><text x="97.0294%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="96.7794%" y="533" width="0.4026%" height="15" fill="rgb(209,164,32)" fg:x="1202" fg:w="5"/><text x="97.0294%" y="543.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="96.8599%" y="517" width="0.3221%" height="15" fill="rgb(222,99,11)" fg:x="1203" fg:w="4"/><text x="97.1099%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="96.8599%" y="501" width="0.3221%" height="15" fill="rgb(208,139,8)" fg:x="1203" fg:w="4"/><text x="97.1099%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1014%" y="485" width="0.0805%" height="15" fill="rgb(210,220,31)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1014%" y="469" width="0.0805%" height="15" fill="rgb(253,192,40)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1014%" y="453" width="0.0805%" height="15" fill="rgb(218,174,11)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1014%" y="437" width="0.0805%" height="15" fill="rgb(238,12,0)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.1014%" y="421" width="0.0805%" height="15" fill="rgb(223,87,52)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1014%" y="405" width="0.0805%" height="15" fill="rgb(206,198,52)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1014%" y="389" width="0.0805%" height="15" fill="rgb(239,183,3)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1014%" y="373" width="0.0805%" height="15" fill="rgb(216,111,9)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.1014%" y="357" width="0.0805%" height="15" fill="rgb(221,6,16)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1014%" y="341" width="0.0805%" height="15" fill="rgb(205,110,11)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="351.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="97.1820%" y="565" width="0.0805%" height="15" fill="rgb(210,162,38)" fg:x="1207" fg:w="1"/><text x="97.4320%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="97.2625%" y="549" width="0.0805%" height="15" fill="rgb(235,180,51)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="97.2625%" y="533" width="0.0805%" height="15" fill="rgb(205,214,28)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.2625%" y="517" width="0.0805%" height="15" fill="rgb(211,57,51)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.2625%" y="501" width="0.0805%" height="15" fill="rgb(207,55,41)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.2625%" y="485" width="0.0805%" height="15" fill="rgb(245,45,35)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2625%" y="469" width="0.0805%" height="15" fill="rgb(233,168,39)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2625%" y="453" width="0.0805%" height="15" fill="rgb(216,61,7)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3430%" y="517" width="0.0805%" height="15" fill="rgb(237,109,44)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3430%" y="501" width="0.0805%" height="15" fill="rgb(240,92,7)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3430%" y="485" width="0.0805%" height="15" fill="rgb(252,17,32)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3430%" y="469" width="0.0805%" height="15" fill="rgb(219,85,5)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3430%" y="453" width="0.0805%" height="15" fill="rgb(213,50,52)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3430%" y="437" width="0.0805%" height="15" fill="rgb(239,79,50)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.3430%" y="421" width="0.0805%" height="15" fill="rgb(249,49,7)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.3430%" y="405" width="0.0805%" height="15" fill="rgb(222,126,43)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.3430%" y="389" width="0.0805%" height="15" fill="rgb(230,157,52)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3430%" y="373" width="0.0805%" height="15" fill="rgb(210,66,35)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3430%" y="357" width="0.0805%" height="15" fill="rgb(220,96,16)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.3430%" y="341" width="0.0805%" height="15" fill="rgb(242,43,33)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.3430%" y="325" width="0.0805%" height="15" fill="rgb(248,128,51)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.3430%" y="309" width="0.0805%" height="15" fill="rgb(234,19,35)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.3430%" y="293" width="0.0805%" height="15" fill="rgb(232,120,30)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3430%" y="277" width="0.0805%" height="15" fill="rgb(209,184,13)" fg:x="1209" fg:w="1"/><text x="97.5930%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="97.3430%" y="549" width="0.1610%" height="15" fill="rgb(222,153,0)" fg:x="1209" fg:w="2"/><text x="97.5930%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.3430%" y="533" width="0.1610%" height="15" fill="rgb(251,96,47)" fg:x="1209" fg:w="2"/><text x="97.5930%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="97.4235%" y="517" width="0.0805%" height="15" fill="rgb(253,113,5)" fg:x="1210" fg:w="1"/><text x="97.6735%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.4235%" y="501" width="0.0805%" height="15" fill="rgb(241,96,1)" fg:x="1210" fg:w="1"/><text x="97.6735%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.5040%" y="517" width="0.0805%" height="15" fill="rgb(216,225,1)" fg:x="1211" fg:w="1"/><text x="97.7540%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.5040%" y="501" width="0.0805%" height="15" fill="rgb(227,108,0)" fg:x="1211" fg:w="1"/><text x="97.7540%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.5040%" y="485" width="0.0805%" height="15" fill="rgb(221,29,48)" fg:x="1211" fg:w="1"/><text x="97.7540%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="97.5040%" y="549" width="0.2415%" height="15" fill="rgb(222,55,16)" fg:x="1211" fg:w="3"/><text x="97.7540%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="97.5040%" y="533" width="0.2415%" height="15" fill="rgb(242,210,22)" fg:x="1211" fg:w="3"/><text x="97.7540%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="97.5845%" y="517" width="0.1610%" height="15" fill="rgb(223,142,30)" fg:x="1212" fg:w="2"/><text x="97.8345%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.5845%" y="501" width="0.1610%" height="15" fill="rgb(248,92,51)" fg:x="1212" fg:w="2"/><text x="97.8345%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="97.5845%" y="485" width="0.1610%" height="15" fill="rgb(249,201,12)" fg:x="1212" fg:w="2"/><text x="97.8345%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="97.5845%" y="469" width="0.1610%" height="15" fill="rgb(230,213,39)" fg:x="1212" fg:w="2"/><text x="97.8345%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.5845%" y="453" width="0.1610%" height="15" fill="rgb(232,46,34)" fg:x="1212" fg:w="2"/><text x="97.8345%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6651%" y="437" width="0.0805%" height="15" fill="rgb(226,194,19)" fg:x="1213" fg:w="1"/><text x="97.9151%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="97.7456%" y="549" width="0.0805%" height="15" fill="rgb(254,144,47)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="97.7456%" y="533" width="0.0805%" height="15" fill="rgb(254,168,3)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="97.7456%" y="517" width="0.0805%" height="15" fill="rgb(249,104,32)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.7456%" y="501" width="0.0805%" height="15" fill="rgb(213,143,0)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.7456%" y="485" width="0.0805%" height="15" fill="rgb(211,72,7)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.7456%" y="469" width="0.0805%" height="15" fill="rgb(249,86,4)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7456%" y="453" width="0.0805%" height="15" fill="rgb(252,17,31)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7456%" y="437" width="0.0805%" height="15" fill="rgb(238,169,43)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7456%" y="421" width="0.0805%" height="15" fill="rgb(220,206,52)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7456%" y="405" width="0.0805%" height="15" fill="rgb(214,176,19)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.7456%" y="389" width="0.0805%" height="15" fill="rgb(206,11,39)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7456%" y="373" width="0.0805%" height="15" fill="rgb(234,191,6)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7456%" y="357" width="0.0805%" height="15" fill="rgb(244,46,51)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7456%" y="341" width="0.0805%" height="15" fill="rgb(212,184,35)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="97.8261%" y="533" width="0.0805%" height="15" fill="rgb(217,184,38)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.8261%" y="517" width="0.0805%" height="15" fill="rgb(218,88,44)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8261%" y="501" width="0.0805%" height="15" fill="rgb(241,121,2)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8261%" y="485" width="0.0805%" height="15" fill="rgb(232,92,4)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8261%" y="469" width="0.0805%" height="15" fill="rgb(233,16,51)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8261%" y="453" width="0.0805%" height="15" fill="rgb(205,138,9)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8261%" y="437" width="0.0805%" height="15" fill="rgb(212,133,44)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.8261%" y="421" width="0.0805%" height="15" fill="rgb(247,170,39)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.8261%" y="405" width="0.0805%" height="15" fill="rgb(236,183,8)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.8261%" y="389" width="0.0805%" height="15" fill="rgb(245,194,21)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8261%" y="373" width="0.0805%" height="15" fill="rgb(244,142,33)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8261%" y="357" width="0.0805%" height="15" fill="rgb(237,159,51)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.8261%" y="341" width="0.0805%" height="15" fill="rgb(223,134,40)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.8261%" y="325" width="0.0805%" height="15" fill="rgb(217,227,45)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.8261%" y="309" width="0.0805%" height="15" fill="rgb(205,171,8)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.8261%" y="293" width="0.0805%" height="15" fill="rgb(231,83,23)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8261%" y="277" width="0.0805%" height="15" fill="rgb(226,65,0)" fg:x="1215" fg:w="1"/><text x="98.0761%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9066%" y="517" width="0.0805%" height="15" fill="rgb(218,127,49)" fg:x="1216" fg:w="1"/><text x="98.1566%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.9871%" y="517" width="0.0805%" height="15" fill="rgb(238,61,34)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.9871%" y="501" width="0.0805%" height="15" fill="rgb(228,144,3)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9871%" y="485" width="0.0805%" height="15" fill="rgb(212,155,32)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.9871%" y="469" width="0.0805%" height="15" fill="rgb(219,3,13)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (34 samples, 2.74%)</title><rect x="95.4106%" y="581" width="2.7375%" height="15" fill="rgb(225,41,39)" fg:x="1185" fg:w="34"/><text x="95.6606%" y="591.50">&lt;p..</text></g><g><title>plugins_core::location::change_location (11 samples, 0.89%)</title><rect x="97.2625%" y="565" width="0.8857%" height="15" fill="rgb(236,169,50)" fg:x="1208" fg:w="11"/><text x="97.5125%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="97.8261%" y="549" width="0.3221%" height="15" fill="rgb(253,211,17)" fg:x="1215" fg:w="4"/><text x="98.0761%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="97.9066%" y="533" width="0.2415%" height="15" fill="rgb(219,67,7)" fg:x="1216" fg:w="3"/><text x="98.1566%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="98.0676%" y="517" width="0.0805%" height="15" fill="rgb(236,198,21)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.0676%" y="501" width="0.0805%" height="15" fill="rgb(250,83,24)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="98.0676%" y="485" width="0.0805%" height="15" fill="rgb(249,175,20)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.0676%" y="469" width="0.0805%" height="15" fill="rgb(239,72,36)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.0676%" y="453" width="0.0805%" height="15" fill="rgb(225,33,12)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (94 samples, 7.57%)</title><rect x="90.6602%" y="773" width="7.5684%" height="15" fill="rgb(213,209,10)" fg:x="1126" fg:w="94"/><text x="90.9102%" y="783.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::apply_middleware (94 samples, 7.57%)</title><rect x="90.6602%" y="757" width="7.5684%" height="15" fill="rgb(233,156,7)" fg:x="1126" fg:w="94"/><text x="90.9102%" y="767.50">kernel::pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (94 samples, 7.57%)</title><rect x="90.6602%" y="741" width="7.5684%" height="15" fill="rgb(242,71,8)" fg:x="1126" fg:w="94"/><text x="90.9102%" y="751.50">kernel::pl..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (94 samples, 7.57%)</title><rect x="90.6602%" y="725" width="7.5684%" height="15" fill="rgb(223,170,53)" fg:x="1126" fg:w="94"/><text x="90.9102%" y="735.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (84 samples, 6.76%)</title><rect x="91.4654%" y="709" width="6.7633%" height="15" fill="rgb(252,23,27)" fg:x="1136" fg:w="84"/><text x="91.7154%" y="719.50">kernel::p..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (83 samples, 6.68%)</title><rect x="91.5459%" y="693" width="6.6828%" height="15" fill="rgb(220,23,37)" fg:x="1137" fg:w="83"/><text x="91.7959%" y="703.50">&lt;plugins_..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (82 samples, 6.60%)</title><rect x="91.6264%" y="677" width="6.6023%" height="15" fill="rgb(208,60,20)" fg:x="1138" fg:w="82"/><text x="91.8764%" y="687.50">kernel::p..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (81 samples, 6.52%)</title><rect x="91.7069%" y="661" width="6.5217%" height="15" fill="rgb(246,105,41)" fg:x="1139" fg:w="81"/><text x="91.9569%" y="671.50">core::ops..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (81 samples, 6.52%)</title><rect x="91.7069%" y="645" width="6.5217%" height="15" fill="rgb(229,80,14)" fg:x="1139" fg:w="81"/><text x="91.9569%" y="655.50">kernel::p..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (81 samples, 6.52%)</title><rect x="91.7069%" y="629" width="6.5217%" height="15" fill="rgb(223,226,8)" fg:x="1139" fg:w="81"/><text x="91.9569%" y="639.50">core::ops..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (81 samples, 6.52%)</title><rect x="91.7069%" y="613" width="6.5217%" height="15" fill="rgb(212,227,24)" fg:x="1139" fg:w="81"/><text x="91.9569%" y="623.50">&lt;alloc::b..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (81 samples, 6.52%)</title><rect x="91.7069%" y="597" width="6.5217%" height="15" fill="rgb(234,38,14)" fg:x="1139" fg:w="81"/><text x="91.9569%" y="607.50">&lt;engine::..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.1481%" y="581" width="0.0805%" height="15" fill="rgb(222,86,39)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="98.2287%" y="741" width="0.0805%" height="15" fill="rgb(208,189,2)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="98.2287%" y="725" width="0.0805%" height="15" fill="rgb(229,19,19)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.2287%" y="709" width="0.0805%" height="15" fill="rgb(250,169,51)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.2287%" y="693" width="0.0805%" height="15" fill="rgb(209,182,25)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.2287%" y="677" width="0.0805%" height="15" fill="rgb(240,113,23)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3092%" y="677" width="0.0805%" height="15" fill="rgb(224,93,33)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3092%" y="661" width="0.0805%" height="15" fill="rgb(234,37,17)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.3092%" y="645" width="0.0805%" height="15" fill="rgb(219,199,15)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="655.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.3092%" y="725" width="0.1610%" height="15" fill="rgb(249,190,12)" fg:x="1221" fg:w="2"/><text x="98.5592%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.3092%" y="709" width="0.1610%" height="15" fill="rgb(254,188,20)" fg:x="1221" fg:w="2"/><text x="98.5592%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3092%" y="693" width="0.1610%" height="15" fill="rgb(227,85,36)" fg:x="1221" fg:w="2"/><text x="98.5592%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3897%" y="677" width="0.0805%" height="15" fill="rgb(214,186,36)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3897%" y="661" width="0.0805%" height="15" fill="rgb(207,67,47)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3897%" y="645" width="0.0805%" height="15" fill="rgb(224,140,32)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3897%" y="629" width="0.0805%" height="15" fill="rgb(225,114,12)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3897%" y="613" width="0.0805%" height="15" fill="rgb(209,199,39)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3897%" y="597" width="0.0805%" height="15" fill="rgb(216,181,6)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3897%" y="581" width="0.0805%" height="15" fill="rgb(210,39,50)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.4702%" y="645" width="0.0805%" height="15" fill="rgb(239,154,53)" fg:x="1223" fg:w="1"/><text x="98.7202%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.4702%" y="629" width="0.0805%" height="15" fill="rgb(235,123,22)" fg:x="1223" fg:w="1"/><text x="98.7202%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.4702%" y="613" width="0.0805%" height="15" fill="rgb(243,194,26)" fg:x="1223" fg:w="1"/><text x="98.7202%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="98.3092%" y="741" width="0.4026%" height="15" fill="rgb(245,23,33)" fg:x="1221" fg:w="5"/><text x="98.5592%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.4702%" y="725" width="0.2415%" height="15" fill="rgb(213,191,38)" fg:x="1223" fg:w="3"/><text x="98.7202%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.4702%" y="709" width="0.2415%" height="15" fill="rgb(226,199,18)" fg:x="1223" fg:w="3"/><text x="98.7202%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="98.4702%" y="693" width="0.2415%" height="15" fill="rgb(210,106,30)" fg:x="1223" fg:w="3"/><text x="98.7202%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.4702%" y="677" width="0.2415%" height="15" fill="rgb(219,177,27)" fg:x="1223" fg:w="3"/><text x="98.7202%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4702%" y="661" width="0.2415%" height="15" fill="rgb(215,14,22)" fg:x="1223" fg:w="3"/><text x="98.7202%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5507%" y="645" width="0.1610%" height="15" fill="rgb(240,24,8)" fg:x="1224" fg:w="2"/><text x="98.8007%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5507%" y="629" width="0.1610%" height="15" fill="rgb(220,138,5)" fg:x="1224" fg:w="2"/><text x="98.8007%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.5507%" y="613" width="0.1610%" height="15" fill="rgb(254,39,11)" fg:x="1224" fg:w="2"/><text x="98.8007%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="98.5507%" y="597" width="0.1610%" height="15" fill="rgb(223,92,18)" fg:x="1224" fg:w="2"/><text x="98.8007%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="98.5507%" y="581" width="0.1610%" height="15" fill="rgb(231,216,35)" fg:x="1224" fg:w="2"/><text x="98.8007%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5507%" y="565" width="0.1610%" height="15" fill="rgb(210,197,31)" fg:x="1224" fg:w="2"/><text x="98.8007%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5507%" y="549" width="0.1610%" height="15" fill="rgb(233,78,6)" fg:x="1224" fg:w="2"/><text x="98.8007%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="98.2287%" y="773" width="0.5636%" height="15" fill="rgb(219,192,52)" fg:x="1220" fg:w="7"/><text x="98.4787%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="98.2287%" y="757" width="0.5636%" height="15" fill="rgb(240,140,47)" fg:x="1220" fg:w="7"/><text x="98.4787%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.7118%" y="741" width="0.0805%" height="15" fill="rgb(214,22,41)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.7118%" y="725" width="0.0805%" height="15" fill="rgb(216,28,18)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.7118%" y="709" width="0.0805%" height="15" fill="rgb(219,204,4)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7118%" y="693" width="0.0805%" height="15" fill="rgb(216,98,27)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7118%" y="677" width="0.0805%" height="15" fill="rgb(208,139,37)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7118%" y="661" width="0.0805%" height="15" fill="rgb(241,193,50)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7118%" y="645" width="0.0805%" height="15" fill="rgb(227,24,47)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.7923%" y="741" width="0.0805%" height="15" fill="rgb(212,91,31)" fg:x="1227" fg:w="1"/><text x="99.0423%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="98.8728%" y="725" width="0.0805%" height="15" fill="rgb(253,174,34)" fg:x="1228" fg:w="1"/><text x="99.1228%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="98.8728%" y="709" width="0.0805%" height="15" fill="rgb(219,214,52)" fg:x="1228" fg:w="1"/><text x="99.1228%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.8728%" y="693" width="0.0805%" height="15" fill="rgb(222,221,3)" fg:x="1228" fg:w="1"/><text x="99.1228%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="98.8728%" y="677" width="0.0805%" height="15" fill="rgb(209,130,23)" fg:x="1228" fg:w="1"/><text x="99.1228%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.8728%" y="661" width="0.0805%" height="15" fill="rgb(232,162,43)" fg:x="1228" fg:w="1"/><text x="99.1228%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.9533%" y="629" width="0.0805%" height="15" fill="rgb(245,34,38)" fg:x="1229" fg:w="1"/><text x="99.2033%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9533%" y="613" width="0.0805%" height="15" fill="rgb(226,70,5)" fg:x="1229" fg:w="1"/><text x="99.2033%" y="623.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="98.9533%" y="709" width="0.2415%" height="15" fill="rgb(238,97,25)" fg:x="1229" fg:w="3"/><text x="99.2033%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.9533%" y="693" width="0.2415%" height="15" fill="rgb(246,1,22)" fg:x="1229" fg:w="3"/><text x="99.2033%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.9533%" y="677" width="0.2415%" height="15" fill="rgb(248,180,27)" fg:x="1229" fg:w="3"/><text x="99.2033%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.9533%" y="661" width="0.2415%" height="15" fill="rgb(223,147,15)" fg:x="1229" fg:w="3"/><text x="99.2033%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.9533%" y="645" width="0.2415%" height="15" fill="rgb(220,142,50)" fg:x="1229" fg:w="3"/><text x="99.2033%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.0338%" y="629" width="0.1610%" height="15" fill="rgb(209,24,8)" fg:x="1230" fg:w="2"/><text x="99.2838%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.0338%" y="613" width="0.1610%" height="15" fill="rgb(245,95,15)" fg:x="1230" fg:w="2"/><text x="99.2838%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.0338%" y="597" width="0.1610%" height="15" fill="rgb(254,132,39)" fg:x="1230" fg:w="2"/><text x="99.2838%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.0338%" y="581" width="0.1610%" height="15" fill="rgb(230,135,4)" fg:x="1230" fg:w="2"/><text x="99.2838%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1143%" y="565" width="0.0805%" height="15" fill="rgb(233,65,45)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1143%" y="549" width="0.0805%" height="15" fill="rgb(238,156,12)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.2754%" y="677" width="0.0805%" height="15" fill="rgb(230,14,54)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2754%" y="661" width="0.0805%" height="15" fill="rgb(242,41,37)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2754%" y="645" width="0.0805%" height="15" fill="rgb(231,37,53)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2754%" y="629" width="0.0805%" height="15" fill="rgb(235,181,47)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.2754%" y="613" width="0.0805%" height="15" fill="rgb(253,41,16)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2754%" y="597" width="0.0805%" height="15" fill="rgb(245,44,19)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="98.9533%" y="725" width="0.4831%" height="15" fill="rgb(245,22,46)" fg:x="1229" fg:w="6"/><text x="99.2033%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.1948%" y="709" width="0.2415%" height="15" fill="rgb(207,84,51)" fg:x="1232" fg:w="3"/><text x="99.4448%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.1948%" y="693" width="0.2415%" height="15" fill="rgb(212,36,12)" fg:x="1232" fg:w="3"/><text x="99.4448%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3559%" y="677" width="0.0805%" height="15" fill="rgb(240,188,18)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3559%" y="661" width="0.0805%" height="15" fill="rgb(245,89,47)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="99.4364%" y="725" width="0.2415%" height="15" fill="rgb(216,24,14)" fg:x="1235" fg:w="3"/><text x="99.6864%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="99.4364%" y="709" width="0.2415%" height="15" fill="rgb(217,71,21)" fg:x="1235" fg:w="3"/><text x="99.6864%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.4364%" y="693" width="0.2415%" height="15" fill="rgb(251,142,29)" fg:x="1235" fg:w="3"/><text x="99.6864%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5169%" y="677" width="0.1610%" height="15" fill="rgb(210,29,22)" fg:x="1236" fg:w="2"/><text x="99.7669%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5169%" y="661" width="0.1610%" height="15" fill="rgb(248,174,36)" fg:x="1236" fg:w="2"/><text x="99.7669%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5974%" y="645" width="0.0805%" height="15" fill="rgb(224,111,34)" fg:x="1237" fg:w="1"/><text x="99.8474%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5974%" y="629" width="0.0805%" height="15" fill="rgb(245,177,23)" fg:x="1237" fg:w="1"/><text x="99.8474%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.5974%" y="613" width="0.0805%" height="15" fill="rgb(217,114,53)" fg:x="1237" fg:w="1"/><text x="99.8474%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5974%" y="597" width="0.0805%" height="15" fill="rgb(223,157,10)" fg:x="1237" fg:w="1"/><text x="99.8474%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (12 samples, 0.97%)</title><rect x="98.7923%" y="773" width="0.9662%" height="15" fill="rgb(217,134,44)" fg:x="1227" fg:w="12"/><text x="99.0423%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.97%)</title><rect x="98.7923%" y="757" width="0.9662%" height="15" fill="rgb(222,195,7)" fg:x="1227" fg:w="12"/><text x="99.0423%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.89%)</title><rect x="98.8728%" y="741" width="0.8857%" height="15" fill="rgb(235,153,27)" fg:x="1228" fg:w="11"/><text x="99.1228%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.6779%" y="725" width="0.0805%" height="15" fill="rgb(247,105,14)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6779%" y="709" width="0.0805%" height="15" fill="rgb(250,6,2)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.6779%" y="693" width="0.0805%" height="15" fill="rgb(250,41,38)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.6779%" y="677" width="0.0805%" height="15" fill="rgb(234,127,49)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="687.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7585%" y="741" width="0.0805%" height="15" fill="rgb(242,79,16)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="751.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.7585%" y="725" width="0.0805%" height="15" fill="rgb(236,15,0)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="735.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.7585%" y="709" width="0.0805%" height="15" fill="rgb(217,113,36)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="719.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.7585%" y="773" width="0.1610%" height="15" fill="rgb(239,12,4)" fg:x="1239" fg:w="2"/><text x="100.0085%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="99.7585%" y="757" width="0.1610%" height="15" fill="rgb(236,142,50)" fg:x="1239" fg:w="2"/><text x="100.0085%" y="767.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8390%" y="741" width="0.0805%" height="15" fill="rgb(244,108,52)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="751.50"></text></g><g><title>plugins_core::looking::model::new_area_observation (1 samples, 0.08%)</title><rect x="99.8390%" y="725" width="0.0805%" height="15" fill="rgb(223,79,42)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="735.50"></text></g><g><title>all (1,242 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(245,34,19)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1151.50"></text></g><g><title>simple-20ff020b (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(222,137,30)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1135.50">simple-20ff020b</text></g><g><title>_start (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(213,216,50)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1119.50">_start</text></g><g><title>__libc_start_main (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(206,117,33)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1103.50">__libc_start_main</text></g><g><title>main (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(234,122,47)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1087.50">main</text></g><g><title>std::rt::lang_start_internal (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(226,61,39)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1071.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(229,174,28)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(246,207,11)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(245,212,19)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1023.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,242 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(240,107,51)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1007.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,242 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(238,67,13)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,242 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(250,8,29)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,242 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(227,44,9)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="959.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,242 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(247,128,2)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="943.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,242 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(239,11,50)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="927.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,242 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(241,11,28)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="911.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,242 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(220,15,14)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="895.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,242 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(226,97,9)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="879.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,242 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(240,221,24)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="863.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (305 samples, 24.56%)</title><rect x="75.4428%" y="837" width="24.5572%" height="15" fill="rgb(238,199,31)" fg:x="937" fg:w="305"/><text x="75.6928%" y="847.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (305 samples, 24.56%)</title><rect x="75.4428%" y="821" width="24.5572%" height="15" fill="rgb(222,15,37)" fg:x="937" fg:w="305"/><text x="75.6928%" y="831.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (305 samples, 24.56%)</title><rect x="75.4428%" y="805" width="24.5572%" height="15" fill="rgb(225,66,12)" fg:x="937" fg:w="305"/><text x="75.6928%" y="815.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (117 samples, 9.42%)</title><rect x="90.5797%" y="789" width="9.4203%" height="15" fill="rgb(224,142,38)" fg:x="1125" fg:w="117"/><text x="90.8297%" y="799.50">engine::sessi..</text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.9195%" y="773" width="0.0805%" height="15" fill="rgb(208,206,25)" fg:x="1241" fg:w="1"/><text x="100.1695%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.9195%" y="757" width="0.0805%" height="15" fill="rgb(205,153,20)" fg:x="1241" fg:w="1"/><text x="100.1695%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.9195%" y="741" width="0.0805%" height="15" fill="rgb(206,199,32)" fg:x="1241" fg:w="1"/><text x="100.1695%" y="751.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9195%" y="725" width="0.0805%" height="15" fill="rgb(246,135,31)" fg:x="1241" fg:w="1"/><text x="100.1695%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.9195%" y="709" width="0.0805%" height="15" fill="rgb(208,211,40)" fg:x="1241" fg:w="1"/><text x="100.1695%" y="719.50"></text></g></svg></svg>