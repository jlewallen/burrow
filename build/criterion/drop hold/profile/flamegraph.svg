<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="1258"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.2385%" y="725" width="0.1590%" height="15" fill="rgb(238,190,20)" fg:x="3" fg:w="2"/><text x="0.4885%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.2385%" y="709" width="0.1590%" height="15" fill="rgb(208,11,19)" fg:x="3" fg:w="2"/><text x="0.4885%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3180%" y="693" width="0.0795%" height="15" fill="rgb(239,90,4)" fg:x="4" fg:w="1"/><text x="0.5680%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3975%" y="629" width="0.0795%" height="15" fill="rgb(248,110,3)" fg:x="5" fg:w="1"/><text x="0.6475%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.6359%" y="613" width="0.1590%" height="15" fill="rgb(210,41,30)" fg:x="8" fg:w="2"/><text x="0.8859%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.6359%" y="597" width="0.1590%" height="15" fill="rgb(239,36,8)" fg:x="8" fg:w="2"/><text x="0.8859%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7949%" y="613" width="0.0795%" height="15" fill="rgb(237,201,47)" fg:x="10" fg:w="1"/><text x="1.0449%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7949%" y="597" width="0.0795%" height="15" fill="rgb(224,140,29)" fg:x="10" fg:w="1"/><text x="1.0449%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.8744%" y="597" width="0.2385%" height="15" fill="rgb(231,209,17)" fg:x="11" fg:w="3"/><text x="1.1244%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0334%" y="581" width="0.0795%" height="15" fill="rgb(249,196,1)" fg:x="13" fg:w="1"/><text x="1.2834%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.27%)</title><rect x="0.1590%" y="741" width="1.2719%" height="15" fill="rgb(223,207,51)" fg:x="2" fg:w="16"/><text x="0.4090%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (13 samples, 1.03%)</title><rect x="0.3975%" y="725" width="1.0334%" height="15" fill="rgb(210,14,40)" fg:x="5" fg:w="13"/><text x="0.6475%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.03%)</title><rect x="0.3975%" y="709" width="1.0334%" height="15" fill="rgb(250,20,52)" fg:x="5" fg:w="13"/><text x="0.6475%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (13 samples, 1.03%)</title><rect x="0.3975%" y="693" width="1.0334%" height="15" fill="rgb(241,46,11)" fg:x="5" fg:w="13"/><text x="0.6475%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.03%)</title><rect x="0.3975%" y="677" width="1.0334%" height="15" fill="rgb(219,105,5)" fg:x="5" fg:w="13"/><text x="0.6475%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.03%)</title><rect x="0.3975%" y="661" width="1.0334%" height="15" fill="rgb(252,77,35)" fg:x="5" fg:w="13"/><text x="0.6475%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.03%)</title><rect x="0.3975%" y="645" width="1.0334%" height="15" fill="rgb(243,119,2)" fg:x="5" fg:w="13"/><text x="0.6475%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="0.4769%" y="629" width="0.9539%" height="15" fill="rgb(206,82,28)" fg:x="6" fg:w="12"/><text x="0.7269%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="0.8744%" y="613" width="0.5564%" height="15" fill="rgb(227,120,12)" fg:x="11" fg:w="7"/><text x="1.1244%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="1.1129%" y="597" width="0.3180%" height="15" fill="rgb(229,134,41)" fg:x="14" fg:w="4"/><text x="1.3629%" y="607.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="1.1129%" y="581" width="0.3180%" height="15" fill="rgb(239,96,32)" fg:x="14" fg:w="4"/><text x="1.3629%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4308%" y="645" width="0.0795%" height="15" fill="rgb(225,46,27)" fg:x="18" fg:w="1"/><text x="1.6808%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;libloading::error::Error&gt; (1 samples, 0.08%)</title><rect x="1.5103%" y="645" width="0.0795%" height="15" fill="rgb(215,168,2)" fg:x="19" fg:w="1"/><text x="1.7603%" y="655.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="1.5898%" y="629" width="0.1590%" height="15" fill="rgb(207,170,52)" fg:x="20" fg:w="2"/><text x="1.8398%" y="639.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="1.5898%" y="645" width="0.2385%" height="15" fill="rgb(237,198,36)" fg:x="20" fg:w="3"/><text x="1.8398%" y="655.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="1.7488%" y="629" width="0.0795%" height="15" fill="rgb(213,27,14)" fg:x="22" fg:w="1"/><text x="1.9988%" y="639.50"></text></g><g><title>libloading::safe::Library::new (8 samples, 0.64%)</title><rect x="1.4308%" y="661" width="0.6359%" height="15" fill="rgb(218,77,5)" fg:x="18" fg:w="8"/><text x="1.6808%" y="671.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="1.8283%" y="645" width="0.2385%" height="15" fill="rgb(230,219,39)" fg:x="23" fg:w="3"/><text x="2.0783%" y="655.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="1.8283%" y="629" width="0.2385%" height="15" fill="rgb(245,177,7)" fg:x="23" fg:w="3"/><text x="2.0783%" y="639.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="1.8283%" y="613" width="0.2385%" height="15" fill="rgb(246,44,46)" fg:x="23" fg:w="3"/><text x="2.0783%" y="623.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="1.9078%" y="597" width="0.1590%" height="15" fill="rgb(207,173,15)" fg:x="24" fg:w="2"/><text x="2.1578%" y="607.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="1.9078%" y="581" width="0.1590%" height="15" fill="rgb(245,170,50)" fg:x="24" fg:w="2"/><text x="2.1578%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.72%)</title><rect x="1.4308%" y="677" width="0.7154%" height="15" fill="rgb(233,156,21)" fg:x="18" fg:w="9"/><text x="1.6808%" y="687.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="2.0668%" y="661" width="0.0795%" height="15" fill="rgb(253,146,27)" fg:x="26" fg:w="1"/><text x="2.3168%" y="671.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="2.0668%" y="645" width="0.0795%" height="15" fill="rgb(247,66,29)" fg:x="26" fg:w="1"/><text x="2.3168%" y="655.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="2.0668%" y="629" width="0.0795%" height="15" fill="rgb(218,207,26)" fg:x="26" fg:w="1"/><text x="2.3168%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (10 samples, 0.79%)</title><rect x="1.4308%" y="693" width="0.7949%" height="15" fill="rgb(234,93,26)" fg:x="18" fg:w="10"/><text x="1.6808%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="2.1463%" y="677" width="0.0795%" height="15" fill="rgb(214,75,48)" fg:x="27" fg:w="1"/><text x="2.3963%" y="687.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="2.1463%" y="661" width="0.0795%" height="15" fill="rgb(229,119,22)" fg:x="27" fg:w="1"/><text x="2.3963%" y="671.50"></text></g><g><title>engine::session::Session::initialize (13 samples, 1.03%)</title><rect x="1.4308%" y="709" width="1.0334%" height="15" fill="rgb(226,153,19)" fg:x="18" fg:w="13"/><text x="1.6808%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="2.2258%" y="693" width="0.2385%" height="15" fill="rgb(220,204,36)" fg:x="28" fg:w="3"/><text x="2.4758%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="2.2258%" y="677" width="0.2385%" height="15" fill="rgb(253,181,43)" fg:x="28" fg:w="3"/><text x="2.4758%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="2.2258%" y="661" width="0.2385%" height="15" fill="rgb(211,41,51)" fg:x="28" fg:w="3"/><text x="2.4758%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="2.2258%" y="645" width="0.2385%" height="15" fill="rgb(207,215,0)" fg:x="28" fg:w="3"/><text x="2.4758%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="2.2258%" y="629" width="0.2385%" height="15" fill="rgb(212,153,10)" fg:x="28" fg:w="3"/><text x="2.4758%" y="639.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="2.2258%" y="613" width="0.2385%" height="15" fill="rgb(251,171,36)" fg:x="28" fg:w="3"/><text x="2.4758%" y="623.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (14 samples, 1.11%)</title><rect x="1.4308%" y="741" width="1.1129%" height="15" fill="rgb(225,219,41)" fg:x="18" fg:w="14"/><text x="1.6808%" y="751.50"></text></g><g><title>engine::session::Session::new (14 samples, 1.11%)</title><rect x="1.4308%" y="725" width="1.1129%" height="15" fill="rgb(208,200,1)" fg:x="18" fg:w="14"/><text x="1.6808%" y="735.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="2.4642%" y="709" width="0.0795%" height="15" fill="rgb(206,75,47)" fg:x="31" fg:w="1"/><text x="2.7142%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="2.4642%" y="693" width="0.0795%" height="15" fill="rgb(248,3,16)" fg:x="31" fg:w="1"/><text x="2.7142%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="2.6232%" y="725" width="0.0795%" height="15" fill="rgb(242,157,36)" fg:x="33" fg:w="1"/><text x="2.8732%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6232%" y="709" width="0.0795%" height="15" fill="rgb(215,175,11)" fg:x="33" fg:w="1"/><text x="2.8732%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="2.7027%" y="725" width="0.0795%" height="15" fill="rgb(252,222,22)" fg:x="34" fg:w="1"/><text x="2.9527%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="2.7027%" y="709" width="0.0795%" height="15" fill="rgb(250,121,35)" fg:x="34" fg:w="1"/><text x="2.9527%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="2.7027%" y="693" width="0.0795%" height="15" fill="rgb(233,120,49)" fg:x="34" fg:w="1"/><text x="2.9527%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="2.7822%" y="709" width="0.0795%" height="15" fill="rgb(205,201,14)" fg:x="35" fg:w="1"/><text x="3.0322%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.7822%" y="693" width="0.0795%" height="15" fill="rgb(219,58,45)" fg:x="35" fg:w="1"/><text x="3.0322%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="2.8617%" y="661" width="0.0795%" height="15" fill="rgb(251,65,12)" fg:x="36" fg:w="1"/><text x="3.1117%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.8617%" y="645" width="0.0795%" height="15" fill="rgb(224,47,31)" fg:x="36" fg:w="1"/><text x="3.1117%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.8617%" y="629" width="0.0795%" height="15" fill="rgb(233,74,26)" fg:x="36" fg:w="1"/><text x="3.1117%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="3.0207%" y="613" width="0.0795%" height="15" fill="rgb(231,211,31)" fg:x="38" fg:w="1"/><text x="3.2707%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="3.0207%" y="597" width="0.0795%" height="15" fill="rgb(239,167,5)" fg:x="38" fg:w="1"/><text x="3.2707%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.1002%" y="581" width="0.0795%" height="15" fill="rgb(241,85,0)" fg:x="39" fg:w="1"/><text x="3.3502%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="3.0207%" y="629" width="0.2385%" height="15" fill="rgb(229,130,21)" fg:x="38" fg:w="3"/><text x="3.2707%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="3.1002%" y="613" width="0.1590%" height="15" fill="rgb(254,84,49)" fg:x="39" fg:w="2"/><text x="3.3502%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="3.1002%" y="597" width="0.1590%" height="15" fill="rgb(235,85,21)" fg:x="39" fg:w="2"/><text x="3.3502%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="3.1797%" y="581" width="0.0795%" height="15" fill="rgb(246,128,52)" fg:x="40" fg:w="1"/><text x="3.4297%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.3386%" y="613" width="0.0795%" height="15" fill="rgb(243,114,49)" fg:x="42" fg:w="1"/><text x="3.5886%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="3.4181%" y="613" width="0.3975%" height="15" fill="rgb(240,224,22)" fg:x="43" fg:w="5"/><text x="3.6681%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="3.6566%" y="597" width="0.1590%" height="15" fill="rgb(247,201,52)" fg:x="46" fg:w="2"/><text x="3.9066%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="3.7361%" y="581" width="0.0795%" height="15" fill="rgb(231,70,45)" fg:x="47" fg:w="1"/><text x="3.9861%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="3.8156%" y="565" width="0.0795%" height="15" fill="rgb(217,215,20)" fg:x="48" fg:w="1"/><text x="4.0656%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="3.8156%" y="549" width="0.0795%" height="15" fill="rgb(226,170,30)" fg:x="48" fg:w="1"/><text x="4.0656%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="3.8156%" y="533" width="0.0795%" height="15" fill="rgb(220,190,43)" fg:x="48" fg:w="1"/><text x="4.0656%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.8156%" y="517" width="0.0795%" height="15" fill="rgb(218,20,18)" fg:x="48" fg:w="1"/><text x="4.0656%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="3.8156%" y="597" width="0.1590%" height="15" fill="rgb(245,37,26)" fg:x="48" fg:w="2"/><text x="4.0656%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="3.8156%" y="581" width="0.1590%" height="15" fill="rgb(241,127,29)" fg:x="48" fg:w="2"/><text x="4.0656%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="3.8951%" y="565" width="0.0795%" height="15" fill="rgb(241,33,26)" fg:x="49" fg:w="1"/><text x="4.1451%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.1335%" y="549" width="0.0795%" height="15" fill="rgb(220,106,21)" fg:x="52" fg:w="1"/><text x="4.3835%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="3.9746%" y="597" width="0.3180%" height="15" fill="rgb(225,125,35)" fg:x="50" fg:w="4"/><text x="4.2246%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="4.0541%" y="581" width="0.2385%" height="15" fill="rgb(248,80,22)" fg:x="51" fg:w="3"/><text x="4.3041%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.1335%" y="565" width="0.1590%" height="15" fill="rgb(231,117,39)" fg:x="52" fg:w="2"/><text x="4.3835%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="4.2130%" y="549" width="0.0795%" height="15" fill="rgb(239,183,16)" fg:x="53" fg:w="1"/><text x="4.4630%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.2925%" y="581" width="0.0795%" height="15" fill="rgb(221,61,19)" fg:x="54" fg:w="1"/><text x="4.5425%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.2925%" y="565" width="0.0795%" height="15" fill="rgb(239,196,44)" fg:x="54" fg:w="1"/><text x="4.5425%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.2925%" y="549" width="0.0795%" height="15" fill="rgb(206,113,19)" fg:x="54" fg:w="1"/><text x="4.5425%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.2925%" y="533" width="0.0795%" height="15" fill="rgb(245,114,12)" fg:x="54" fg:w="1"/><text x="4.5425%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.4515%" y="549" width="0.0795%" height="15" fill="rgb(247,89,39)" fg:x="56" fg:w="1"/><text x="4.7015%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.4515%" y="533" width="0.0795%" height="15" fill="rgb(213,85,14)" fg:x="56" fg:w="1"/><text x="4.7015%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.5310%" y="533" width="0.1590%" height="15" fill="rgb(249,206,33)" fg:x="57" fg:w="2"/><text x="4.7810%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.6105%" y="517" width="0.0795%" height="15" fill="rgb(235,167,47)" fg:x="58" fg:w="1"/><text x="4.8605%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.6105%" y="501" width="0.0795%" height="15" fill="rgb(217,177,16)" fg:x="58" fg:w="1"/><text x="4.8605%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.6105%" y="485" width="0.0795%" height="15" fill="rgb(250,228,29)" fg:x="58" fg:w="1"/><text x="4.8605%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="4.5310%" y="549" width="0.2385%" height="15" fill="rgb(216,195,42)" fg:x="57" fg:w="3"/><text x="4.7810%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.6900%" y="533" width="0.0795%" height="15" fill="rgb(232,192,32)" fg:x="59" fg:w="1"/><text x="4.9400%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.6900%" y="517" width="0.0795%" height="15" fill="rgb(211,8,47)" fg:x="59" fg:w="1"/><text x="4.9400%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.6900%" y="501" width="0.0795%" height="15" fill="rgb(251,201,9)" fg:x="59" fg:w="1"/><text x="4.9400%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="4.4515%" y="565" width="0.3975%" height="15" fill="rgb(206,185,47)" fg:x="56" fg:w="5"/><text x="4.7015%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.7695%" y="549" width="0.0795%" height="15" fill="rgb(245,54,32)" fg:x="60" fg:w="1"/><text x="5.0195%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.7695%" y="533" width="0.0795%" height="15" fill="rgb(208,1,8)" fg:x="60" fg:w="1"/><text x="5.0195%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="4.2925%" y="597" width="0.6359%" height="15" fill="rgb(228,57,24)" fg:x="54" fg:w="8"/><text x="4.5425%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="4.3720%" y="581" width="0.5564%" height="15" fill="rgb(251,24,8)" fg:x="55" fg:w="7"/><text x="4.6220%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.8490%" y="565" width="0.0795%" height="15" fill="rgb(236,196,50)" fg:x="61" fg:w="1"/><text x="5.0990%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.8490%" y="549" width="0.0795%" height="15" fill="rgb(246,222,29)" fg:x="61" fg:w="1"/><text x="5.0990%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.27%)</title><rect x="3.8156%" y="613" width="1.2719%" height="15" fill="rgb(211,34,40)" fg:x="48" fg:w="16"/><text x="4.0656%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.9285%" y="597" width="0.1590%" height="15" fill="rgb(210,66,51)" fg:x="62" fg:w="2"/><text x="5.1785%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.9285%" y="581" width="0.1590%" height="15" fill="rgb(250,56,43)" fg:x="62" fg:w="2"/><text x="5.1785%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.31%)</title><rect x="2.9412%" y="645" width="2.3052%" height="15" fill="rgb(240,111,50)" fg:x="37" fg:w="29"/><text x="3.1912%" y="655.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 1.99%)</title><rect x="3.2591%" y="629" width="1.9873%" height="15" fill="rgb(209,117,13)" fg:x="41" fg:w="25"/><text x="3.5091%" y="639.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.0874%" y="613" width="0.1590%" height="15" fill="rgb(232,164,45)" fg:x="64" fg:w="2"/><text x="5.3374%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.1669%" y="597" width="0.0795%" height="15" fill="rgb(205,69,32)" fg:x="65" fg:w="1"/><text x="5.4169%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.3259%" y="613" width="0.0795%" height="15" fill="rgb(240,147,45)" fg:x="67" fg:w="1"/><text x="5.5759%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.4054%" y="613" width="0.0795%" height="15" fill="rgb(221,94,48)" fg:x="68" fg:w="1"/><text x="5.6554%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.4054%" y="597" width="0.0795%" height="15" fill="rgb(249,209,17)" fg:x="68" fg:w="1"/><text x="5.6554%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="5.4849%" y="597" width="0.1590%" height="15" fill="rgb(228,57,28)" fg:x="69" fg:w="2"/><text x="5.7349%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.6439%" y="597" width="0.0795%" height="15" fill="rgb(250,133,26)" fg:x="71" fg:w="1"/><text x="5.8939%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.7234%" y="581" width="0.0795%" height="15" fill="rgb(254,15,16)" fg:x="72" fg:w="1"/><text x="5.9734%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.8824%" y="565" width="0.0795%" height="15" fill="rgb(209,147,42)" fg:x="74" fg:w="1"/><text x="6.1324%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.0413%" y="549" width="0.0795%" height="15" fill="rgb(208,5,29)" fg:x="76" fg:w="1"/><text x="6.2913%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="5.2464%" y="645" width="0.9539%" height="15" fill="rgb(250,73,31)" fg:x="66" fg:w="12"/><text x="5.4964%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.95%)</title><rect x="5.2464%" y="629" width="0.9539%" height="15" fill="rgb(238,45,10)" fg:x="66" fg:w="12"/><text x="5.4964%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="5.4849%" y="613" width="0.7154%" height="15" fill="rgb(214,104,5)" fg:x="69" fg:w="9"/><text x="5.7349%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="5.7234%" y="597" width="0.4769%" height="15" fill="rgb(242,217,19)" fg:x="72" fg:w="6"/><text x="5.9734%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="5.8029%" y="581" width="0.3975%" height="15" fill="rgb(246,113,27)" fg:x="73" fg:w="5"/><text x="6.0529%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="5.9618%" y="565" width="0.2385%" height="15" fill="rgb(221,34,27)" fg:x="75" fg:w="3"/><text x="6.2118%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.1208%" y="549" width="0.0795%" height="15" fill="rgb(246,109,6)" fg:x="77" fg:w="1"/><text x="6.3708%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.1208%" y="533" width="0.0795%" height="15" fill="rgb(217,12,25)" fg:x="77" fg:w="1"/><text x="6.3708%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.1208%" y="517" width="0.0795%" height="15" fill="rgb(250,195,5)" fg:x="77" fg:w="1"/><text x="6.3708%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.3593%" y="597" width="0.0795%" height="15" fill="rgb(244,140,45)" fg:x="80" fg:w="1"/><text x="6.6093%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="6.4388%" y="597" width="0.2385%" height="15" fill="rgb(230,64,14)" fg:x="81" fg:w="3"/><text x="6.6888%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="6.4388%" y="581" width="0.2385%" height="15" fill="rgb(206,27,27)" fg:x="81" fg:w="3"/><text x="6.6888%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="6.5978%" y="565" width="0.0795%" height="15" fill="rgb(230,14,50)" fg:x="83" fg:w="1"/><text x="6.8478%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="6.6773%" y="597" width="0.0795%" height="15" fill="rgb(237,172,14)" fg:x="84" fg:w="1"/><text x="6.9273%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="6.6773%" y="581" width="0.0795%" height="15" fill="rgb(209,25,21)" fg:x="84" fg:w="1"/><text x="6.9273%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="6.7568%" y="597" width="0.1590%" height="15" fill="rgb(248,148,22)" fg:x="85" fg:w="2"/><text x="7.0068%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="6.7568%" y="581" width="0.1590%" height="15" fill="rgb(234,100,22)" fg:x="85" fg:w="2"/><text x="7.0068%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.8362%" y="565" width="0.0795%" height="15" fill="rgb(210,20,30)" fg:x="86" fg:w="1"/><text x="7.0862%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.8362%" y="549" width="0.0795%" height="15" fill="rgb(232,58,0)" fg:x="86" fg:w="1"/><text x="7.0862%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8362%" y="533" width="0.0795%" height="15" fill="rgb(221,68,13)" fg:x="86" fg:w="1"/><text x="7.0862%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.2337%" y="549" width="0.0795%" height="15" fill="rgb(231,194,11)" fg:x="91" fg:w="1"/><text x="7.4837%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.2337%" y="533" width="0.0795%" height="15" fill="rgb(235,51,41)" fg:x="91" fg:w="1"/><text x="7.4837%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.2337%" y="517" width="0.0795%" height="15" fill="rgb(240,50,32)" fg:x="91" fg:w="1"/><text x="7.4837%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.3132%" y="549" width="0.0795%" height="15" fill="rgb(240,185,36)" fg:x="92" fg:w="1"/><text x="7.5632%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3132%" y="533" width="0.0795%" height="15" fill="rgb(211,168,15)" fg:x="92" fg:w="1"/><text x="7.5632%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.3132%" y="517" width="0.0795%" height="15" fill="rgb(221,70,0)" fg:x="92" fg:w="1"/><text x="7.5632%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.3132%" y="501" width="0.0795%" height="15" fill="rgb(205,21,33)" fg:x="92" fg:w="1"/><text x="7.5632%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.3132%" y="485" width="0.0795%" height="15" fill="rgb(225,106,10)" fg:x="92" fg:w="1"/><text x="7.5632%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="7.3132%" y="469" width="0.0795%" height="15" fill="rgb(236,200,50)" fg:x="92" fg:w="1"/><text x="7.5632%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.5517%" y="485" width="0.0795%" height="15" fill="rgb(249,93,23)" fg:x="95" fg:w="1"/><text x="7.8017%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.5517%" y="469" width="0.0795%" height="15" fill="rgb(244,115,35)" fg:x="95" fg:w="1"/><text x="7.8017%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.5517%" y="453" width="0.0795%" height="15" fill="rgb(231,129,47)" fg:x="95" fg:w="1"/><text x="7.8017%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="7.2337%" y="565" width="0.5564%" height="15" fill="rgb(225,160,50)" fg:x="91" fg:w="7"/><text x="7.4837%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="7.3927%" y="549" width="0.3975%" height="15" fill="rgb(218,135,23)" fg:x="93" fg:w="5"/><text x="7.6427%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="7.4722%" y="533" width="0.3180%" height="15" fill="rgb(227,119,14)" fg:x="94" fg:w="4"/><text x="7.7222%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="7.4722%" y="517" width="0.3180%" height="15" fill="rgb(242,138,13)" fg:x="94" fg:w="4"/><text x="7.7222%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="7.5517%" y="501" width="0.2385%" height="15" fill="rgb(215,11,16)" fg:x="95" fg:w="3"/><text x="7.8017%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="7.6312%" y="485" width="0.1590%" height="15" fill="rgb(234,170,50)" fg:x="96" fg:w="2"/><text x="7.8812%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="7.6312%" y="469" width="0.1590%" height="15" fill="rgb(233,34,20)" fg:x="96" fg:w="2"/><text x="7.8812%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="7.7107%" y="453" width="0.0795%" height="15" fill="rgb(237,100,45)" fg:x="97" fg:w="1"/><text x="7.9607%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.7107%" y="437" width="0.0795%" height="15" fill="rgb(231,184,36)" fg:x="97" fg:w="1"/><text x="7.9607%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.7107%" y="421" width="0.0795%" height="15" fill="rgb(252,93,2)" fg:x="97" fg:w="1"/><text x="7.9607%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.7107%" y="405" width="0.0795%" height="15" fill="rgb(248,176,47)" fg:x="97" fg:w="1"/><text x="7.9607%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.7107%" y="389" width="0.0795%" height="15" fill="rgb(249,125,23)" fg:x="97" fg:w="1"/><text x="7.9607%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.79%)</title><rect x="7.0747%" y="581" width="0.7949%" height="15" fill="rgb(239,67,42)" fg:x="89" fg:w="10"/><text x="7.3247%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="7.7901%" y="565" width="0.0795%" height="15" fill="rgb(244,162,4)" fg:x="98" fg:w="1"/><text x="8.0401%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.7901%" y="549" width="0.0795%" height="15" fill="rgb(214,150,38)" fg:x="98" fg:w="1"/><text x="8.0401%" y="559.50"></text></g><g><title>engine::session::Session::flush (65 samples, 5.17%)</title><rect x="2.7822%" y="725" width="5.1669%" height="15" fill="rgb(228,211,28)" fg:x="35" fg:w="65"/><text x="3.0322%" y="735.50">engine..</text></g><g><title>engine::session::state::State::close (64 samples, 5.09%)</title><rect x="2.8617%" y="709" width="5.0874%" height="15" fill="rgb(212,98,48)" fg:x="36" fg:w="64"/><text x="3.1117%" y="719.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (64 samples, 5.09%)</title><rect x="2.8617%" y="693" width="5.0874%" height="15" fill="rgb(213,45,13)" fg:x="36" fg:w="64"/><text x="3.1117%" y="703.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (64 samples, 5.09%)</title><rect x="2.8617%" y="677" width="5.0874%" height="15" fill="rgb(218,35,29)" fg:x="36" fg:w="64"/><text x="3.1117%" y="687.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (63 samples, 5.01%)</title><rect x="2.9412%" y="661" width="5.0079%" height="15" fill="rgb(244,13,3)" fg:x="37" fg:w="63"/><text x="3.1912%" y="671.50">engine..</text></g><g><title>kernel::model::any_entity_changes (22 samples, 1.75%)</title><rect x="6.2003%" y="645" width="1.7488%" height="15" fill="rgb(235,170,19)" fg:x="78" fg:w="22"/><text x="6.4503%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (22 samples, 1.75%)</title><rect x="6.2003%" y="629" width="1.7488%" height="15" fill="rgb(233,193,43)" fg:x="78" fg:w="22"/><text x="6.4503%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.75%)</title><rect x="6.2003%" y="613" width="1.7488%" height="15" fill="rgb(228,223,20)" fg:x="78" fg:w="22"/><text x="6.4503%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.03%)</title><rect x="6.9157%" y="597" width="1.0334%" height="15" fill="rgb(208,85,54)" fg:x="87" fg:w="13"/><text x="7.1657%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.8696%" y="581" width="0.0795%" height="15" fill="rgb(254,14,45)" fg:x="99" fg:w="1"/><text x="8.1196%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.8696%" y="565" width="0.0795%" height="15" fill="rgb(247,99,29)" fg:x="99" fg:w="1"/><text x="8.1196%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.8696%" y="549" width="0.0795%" height="15" fill="rgb(225,180,54)" fg:x="99" fg:w="1"/><text x="8.1196%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="7.9491%" y="677" width="0.0795%" height="15" fill="rgb(239,88,43)" fg:x="100" fg:w="1"/><text x="8.1991%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.9491%" y="661" width="0.0795%" height="15" fill="rgb(209,47,11)" fg:x="100" fg:w="1"/><text x="8.1991%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="7.9491%" y="693" width="0.1590%" height="15" fill="rgb(219,179,23)" fg:x="100" fg:w="2"/><text x="8.1991%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="8.0286%" y="677" width="0.0795%" height="15" fill="rgb(213,183,19)" fg:x="101" fg:w="1"/><text x="8.2786%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.0286%" y="661" width="0.0795%" height="15" fill="rgb(210,11,9)" fg:x="101" fg:w="1"/><text x="8.2786%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0286%" y="645" width="0.0795%" height="15" fill="rgb(239,194,16)" fg:x="101" fg:w="1"/><text x="8.2786%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0286%" y="629" width="0.0795%" height="15" fill="rgb(246,23,50)" fg:x="101" fg:w="1"/><text x="8.2786%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0286%" y="613" width="0.0795%" height="15" fill="rgb(245,10,41)" fg:x="101" fg:w="1"/><text x="8.2786%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.0286%" y="597" width="0.0795%" height="15" fill="rgb(228,43,24)" fg:x="101" fg:w="1"/><text x="8.2786%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="8.1081%" y="677" width="0.1590%" height="15" fill="rgb(220,151,0)" fg:x="102" fg:w="2"/><text x="8.3581%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="8.1081%" y="661" width="0.1590%" height="15" fill="rgb(232,219,10)" fg:x="102" fg:w="2"/><text x="8.3581%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.1876%" y="645" width="0.0795%" height="15" fill="rgb(227,217,48)" fg:x="103" fg:w="1"/><text x="8.4376%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="8.1081%" y="693" width="0.2385%" height="15" fill="rgb(210,66,35)" fg:x="102" fg:w="3"/><text x="8.3581%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="8.2671%" y="677" width="0.0795%" height="15" fill="rgb(254,6,7)" fg:x="104" fg:w="1"/><text x="8.5171%" y="687.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="8.2671%" y="661" width="0.0795%" height="15" fill="rgb(235,222,42)" fg:x="104" fg:w="1"/><text x="8.5171%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.2671%" y="645" width="0.0795%" height="15" fill="rgb(245,126,5)" fg:x="104" fg:w="1"/><text x="8.5171%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2671%" y="629" width="0.0795%" height="15" fill="rgb(215,73,17)" fg:x="104" fg:w="1"/><text x="8.5171%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2671%" y="613" width="0.0795%" height="15" fill="rgb(219,198,52)" fg:x="104" fg:w="1"/><text x="8.5171%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="8.2671%" y="597" width="0.0795%" height="15" fill="rgb(217,159,18)" fg:x="104" fg:w="1"/><text x="8.5171%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="8.3466%" y="677" width="0.0795%" height="15" fill="rgb(212,177,18)" fg:x="105" fg:w="1"/><text x="8.5966%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="8.3466%" y="661" width="0.0795%" height="15" fill="rgb(241,10,11)" fg:x="105" fg:w="1"/><text x="8.5966%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="8.3466%" y="645" width="0.0795%" height="15" fill="rgb(232,114,35)" fg:x="105" fg:w="1"/><text x="8.5966%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="8.3466%" y="629" width="0.0795%" height="15" fill="rgb(238,222,8)" fg:x="105" fg:w="1"/><text x="8.5966%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.3466%" y="613" width="0.0795%" height="15" fill="rgb(251,153,44)" fg:x="105" fg:w="1"/><text x="8.5966%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.79%)</title><rect x="7.9491%" y="709" width="0.7949%" height="15" fill="rgb(210,140,51)" fg:x="100" fg:w="10"/><text x="8.1991%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="8.3466%" y="693" width="0.3975%" height="15" fill="rgb(222,63,0)" fg:x="105" fg:w="5"/><text x="8.5966%" y="703.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="8.4261%" y="677" width="0.3180%" height="15" fill="rgb(240,18,40)" fg:x="106" fg:w="4"/><text x="8.6761%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="8.4261%" y="661" width="0.3180%" height="15" fill="rgb(237,88,16)" fg:x="106" fg:w="4"/><text x="8.6761%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="8.4261%" y="645" width="0.3180%" height="15" fill="rgb(251,117,13)" fg:x="106" fg:w="4"/><text x="8.6761%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="8.4261%" y="629" width="0.3180%" height="15" fill="rgb(251,228,8)" fg:x="106" fg:w="4"/><text x="8.6761%" y="639.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="8.4261%" y="613" width="0.3180%" height="15" fill="rgb(205,107,49)" fg:x="106" fg:w="4"/><text x="8.6761%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.7440%" y="645" width="0.0795%" height="15" fill="rgb(238,72,41)" fg:x="110" fg:w="1"/><text x="8.9940%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8235%" y="613" width="0.0795%" height="15" fill="rgb(248,183,52)" fg:x="111" fg:w="1"/><text x="9.0735%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8235%" y="597" width="0.0795%" height="15" fill="rgb(215,58,20)" fg:x="111" fg:w="1"/><text x="9.0735%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8235%" y="581" width="0.0795%" height="15" fill="rgb(209,49,13)" fg:x="111" fg:w="1"/><text x="9.0735%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.8235%" y="565" width="0.0795%" height="15" fill="rgb(208,113,17)" fg:x="111" fg:w="1"/><text x="9.0735%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="8.7440%" y="693" width="0.2385%" height="15" fill="rgb(208,14,22)" fg:x="110" fg:w="3"/><text x="8.9940%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="8.7440%" y="677" width="0.2385%" height="15" fill="rgb(222,95,2)" fg:x="110" fg:w="3"/><text x="8.9940%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="8.7440%" y="661" width="0.2385%" height="15" fill="rgb(253,180,37)" fg:x="110" fg:w="3"/><text x="8.9940%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="8.8235%" y="645" width="0.1590%" height="15" fill="rgb(250,81,33)" fg:x="111" fg:w="2"/><text x="9.0735%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="8.8235%" y="629" width="0.1590%" height="15" fill="rgb(251,151,41)" fg:x="111" fg:w="2"/><text x="9.0735%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.9030%" y="613" width="0.0795%" height="15" fill="rgb(210,135,17)" fg:x="112" fg:w="1"/><text x="9.1530%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.9030%" y="597" width="0.0795%" height="15" fill="rgb(239,21,29)" fg:x="112" fg:w="1"/><text x="9.1530%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.9030%" y="581" width="0.0795%" height="15" fill="rgb(231,215,16)" fg:x="112" fg:w="1"/><text x="9.1530%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.9030%" y="565" width="0.0795%" height="15" fill="rgb(239,151,54)" fg:x="112" fg:w="1"/><text x="9.1530%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="8.9030%" y="549" width="0.0795%" height="15" fill="rgb(222,122,38)" fg:x="112" fg:w="1"/><text x="9.1530%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.9030%" y="533" width="0.0795%" height="15" fill="rgb(243,128,1)" fg:x="112" fg:w="1"/><text x="9.1530%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="8.9825%" y="693" width="0.0795%" height="15" fill="rgb(225,74,21)" fg:x="113" fg:w="1"/><text x="9.2325%" y="703.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="8.9825%" y="677" width="0.0795%" height="15" fill="rgb(216,210,10)" fg:x="113" fg:w="1"/><text x="9.2325%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.9825%" y="661" width="0.0795%" height="15" fill="rgb(228,76,19)" fg:x="113" fg:w="1"/><text x="9.2325%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="8.9825%" y="645" width="0.0795%" height="15" fill="rgb(236,80,34)" fg:x="113" fg:w="1"/><text x="9.2325%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.9825%" y="629" width="0.0795%" height="15" fill="rgb(225,173,23)" fg:x="113" fg:w="1"/><text x="9.2325%" y="639.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="9.0620%" y="629" width="0.0795%" height="15" fill="rgb(253,38,1)" fg:x="114" fg:w="1"/><text x="9.3120%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="9.0620%" y="613" width="0.0795%" height="15" fill="rgb(206,155,35)" fg:x="114" fg:w="1"/><text x="9.3120%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.1415%" y="533" width="0.0795%" height="15" fill="rgb(254,27,53)" fg:x="115" fg:w="1"/><text x="9.3915%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.1415%" y="517" width="0.0795%" height="15" fill="rgb(225,52,41)" fg:x="115" fg:w="1"/><text x="9.3915%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.1415%" y="581" width="0.1590%" height="15" fill="rgb(244,53,18)" fg:x="115" fg:w="2"/><text x="9.3915%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.1415%" y="565" width="0.1590%" height="15" fill="rgb(254,206,48)" fg:x="115" fg:w="2"/><text x="9.3915%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.1415%" y="549" width="0.1590%" height="15" fill="rgb(236,182,23)" fg:x="115" fg:w="2"/><text x="9.3915%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.2210%" y="533" width="0.0795%" height="15" fill="rgb(236,191,37)" fg:x="116" fg:w="1"/><text x="9.4710%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.2210%" y="517" width="0.0795%" height="15" fill="rgb(245,53,8)" fg:x="116" fg:w="1"/><text x="9.4710%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.2210%" y="501" width="0.0795%" height="15" fill="rgb(245,147,9)" fg:x="116" fg:w="1"/><text x="9.4710%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.2210%" y="485" width="0.0795%" height="15" fill="rgb(218,24,48)" fg:x="116" fg:w="1"/><text x="9.4710%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.2210%" y="469" width="0.0795%" height="15" fill="rgb(254,23,9)" fg:x="116" fg:w="1"/><text x="9.4710%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.2210%" y="453" width="0.0795%" height="15" fill="rgb(244,105,9)" fg:x="116" fg:w="1"/><text x="9.4710%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.2210%" y="437" width="0.0795%" height="15" fill="rgb(212,142,22)" fg:x="116" fg:w="1"/><text x="9.4710%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="9.2210%" y="421" width="0.0795%" height="15" fill="rgb(221,114,49)" fg:x="116" fg:w="1"/><text x="9.4710%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="9.2210%" y="405" width="0.0795%" height="15" fill="rgb(223,210,25)" fg:x="116" fg:w="1"/><text x="9.4710%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="9.2210%" y="389" width="0.0795%" height="15" fill="rgb(235,162,44)" fg:x="116" fg:w="1"/><text x="9.4710%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="9.2210%" y="373" width="0.0795%" height="15" fill="rgb(237,65,45)" fg:x="116" fg:w="1"/><text x="9.4710%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2210%" y="357" width="0.0795%" height="15" fill="rgb(208,79,9)" fg:x="116" fg:w="1"/><text x="9.4710%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="9.1415%" y="597" width="0.2385%" height="15" fill="rgb(215,228,8)" fg:x="115" fg:w="3"/><text x="9.3915%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.3005%" y="581" width="0.0795%" height="15" fill="rgb(205,185,17)" fg:x="117" fg:w="1"/><text x="9.5505%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.3800%" y="533" width="0.0795%" height="15" fill="rgb(213,62,36)" fg:x="118" fg:w="1"/><text x="9.6300%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.3800%" y="517" width="0.0795%" height="15" fill="rgb(209,34,9)" fg:x="118" fg:w="1"/><text x="9.6300%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="9.0620%" y="645" width="0.5564%" height="15" fill="rgb(246,151,27)" fg:x="114" fg:w="7"/><text x="9.3120%" y="655.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="9.1415%" y="629" width="0.4769%" height="15" fill="rgb(218,206,3)" fg:x="115" fg:w="6"/><text x="9.3915%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="9.1415%" y="613" width="0.4769%" height="15" fill="rgb(242,202,1)" fg:x="115" fg:w="6"/><text x="9.3915%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="9.3800%" y="597" width="0.2385%" height="15" fill="rgb(227,185,16)" fg:x="118" fg:w="3"/><text x="9.6300%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="9.3800%" y="581" width="0.2385%" height="15" fill="rgb(241,1,14)" fg:x="118" fg:w="3"/><text x="9.6300%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="9.3800%" y="565" width="0.2385%" height="15" fill="rgb(212,113,25)" fg:x="118" fg:w="3"/><text x="9.6300%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="9.3800%" y="549" width="0.2385%" height="15" fill="rgb(247,37,43)" fg:x="118" fg:w="3"/><text x="9.6300%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="9.4595%" y="533" width="0.1590%" height="15" fill="rgb(226,54,8)" fg:x="119" fg:w="2"/><text x="9.7095%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.4595%" y="517" width="0.1590%" height="15" fill="rgb(251,205,25)" fg:x="119" fg:w="2"/><text x="9.7095%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.4595%" y="501" width="0.1590%" height="15" fill="rgb(246,87,35)" fg:x="119" fg:w="2"/><text x="9.7095%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.4595%" y="485" width="0.1590%" height="15" fill="rgb(251,145,46)" fg:x="119" fg:w="2"/><text x="9.7095%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.5390%" y="469" width="0.0795%" height="15" fill="rgb(210,210,33)" fg:x="120" fg:w="1"/><text x="9.7890%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.5390%" y="453" width="0.0795%" height="15" fill="rgb(221,151,11)" fg:x="120" fg:w="1"/><text x="9.7890%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="9.5390%" y="437" width="0.0795%" height="15" fill="rgb(208,160,28)" fg:x="120" fg:w="1"/><text x="9.7890%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6184%" y="597" width="0.0795%" height="15" fill="rgb(243,69,29)" fg:x="121" fg:w="1"/><text x="9.8684%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6184%" y="581" width="0.0795%" height="15" fill="rgb(224,144,4)" fg:x="121" fg:w="1"/><text x="9.8684%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.6184%" y="565" width="0.0795%" height="15" fill="rgb(211,140,38)" fg:x="121" fg:w="1"/><text x="9.8684%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.6979%" y="565" width="0.0795%" height="15" fill="rgb(252,189,15)" fg:x="122" fg:w="1"/><text x="9.9479%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.6979%" y="549" width="0.0795%" height="15" fill="rgb(251,175,23)" fg:x="122" fg:w="1"/><text x="9.9479%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="9.6979%" y="533" width="0.0795%" height="15" fill="rgb(212,184,11)" fg:x="122" fg:w="1"/><text x="9.9479%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.6979%" y="517" width="0.0795%" height="15" fill="rgb(217,205,6)" fg:x="122" fg:w="1"/><text x="9.9479%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.6979%" y="501" width="0.0795%" height="15" fill="rgb(235,45,45)" fg:x="122" fg:w="1"/><text x="9.9479%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.6979%" y="485" width="0.0795%" height="15" fill="rgb(211,157,53)" fg:x="122" fg:w="1"/><text x="9.9479%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.6979%" y="469" width="0.0795%" height="15" fill="rgb(212,13,8)" fg:x="122" fg:w="1"/><text x="9.9479%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (24 samples, 1.91%)</title><rect x="7.9491%" y="725" width="1.9078%" height="15" fill="rgb(218,80,36)" fg:x="100" fg:w="24"/><text x="8.1991%" y="735.50">p..</text></g><g><title>plugins_core::tools::set_container (14 samples, 1.11%)</title><rect x="8.7440%" y="709" width="1.1129%" height="15" fill="rgb(211,123,43)" fg:x="110" fg:w="14"/><text x="8.9940%" y="719.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.79%)</title><rect x="9.0620%" y="693" width="0.7949%" height="15" fill="rgb(206,165,2)" fg:x="114" fg:w="10"/><text x="9.3120%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.79%)</title><rect x="9.0620%" y="677" width="0.7949%" height="15" fill="rgb(248,63,35)" fg:x="114" fg:w="10"/><text x="9.3120%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.79%)</title><rect x="9.0620%" y="661" width="0.7949%" height="15" fill="rgb(219,133,41)" fg:x="114" fg:w="10"/><text x="9.3120%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="9.6184%" y="645" width="0.2385%" height="15" fill="rgb(206,175,46)" fg:x="121" fg:w="3"/><text x="9.8684%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="9.6184%" y="629" width="0.2385%" height="15" fill="rgb(224,41,35)" fg:x="121" fg:w="3"/><text x="9.8684%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="9.6184%" y="613" width="0.2385%" height="15" fill="rgb(226,113,24)" fg:x="121" fg:w="3"/><text x="9.8684%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.6979%" y="597" width="0.1590%" height="15" fill="rgb(219,51,41)" fg:x="122" fg:w="2"/><text x="9.9479%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.6979%" y="581" width="0.1590%" height="15" fill="rgb(220,145,47)" fg:x="122" fg:w="2"/><text x="9.9479%" y="591.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="9.7774%" y="565" width="0.0795%" height="15" fill="rgb(239,121,47)" fg:x="123" fg:w="1"/><text x="10.0274%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="9.9364%" y="677" width="0.0795%" height="15" fill="rgb(207,60,40)" fg:x="125" fg:w="1"/><text x="10.1864%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="9.9364%" y="661" width="0.0795%" height="15" fill="rgb(224,229,11)" fg:x="125" fg:w="1"/><text x="10.1864%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.9364%" y="645" width="0.0795%" height="15" fill="rgb(252,28,32)" fg:x="125" fg:w="1"/><text x="10.1864%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.9364%" y="629" width="0.0795%" height="15" fill="rgb(207,52,49)" fg:x="125" fg:w="1"/><text x="10.1864%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="9.8569%" y="693" width="0.2385%" height="15" fill="rgb(243,51,50)" fg:x="124" fg:w="3"/><text x="10.1069%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="10.0159%" y="677" width="0.0795%" height="15" fill="rgb(212,92,21)" fg:x="126" fg:w="1"/><text x="10.2659%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="10.0159%" y="661" width="0.0795%" height="15" fill="rgb(230,183,50)" fg:x="126" fg:w="1"/><text x="10.2659%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="10.0159%" y="645" width="0.0795%" height="15" fill="rgb(225,48,9)" fg:x="126" fg:w="1"/><text x="10.2659%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="10.0159%" y="629" width="0.0795%" height="15" fill="rgb(254,44,4)" fg:x="126" fg:w="1"/><text x="10.2659%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.0159%" y="613" width="0.0795%" height="15" fill="rgb(252,128,37)" fg:x="126" fg:w="1"/><text x="10.2659%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="10.0159%" y="597" width="0.0795%" height="15" fill="rgb(227,178,8)" fg:x="126" fg:w="1"/><text x="10.2659%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="10.0159%" y="581" width="0.0795%" height="15" fill="rgb(205,206,32)" fg:x="126" fg:w="1"/><text x="10.2659%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.1749%" y="565" width="0.0795%" height="15" fill="rgb(220,218,22)" fg:x="128" fg:w="1"/><text x="10.4249%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.0954%" y="629" width="0.2385%" height="15" fill="rgb(236,41,28)" fg:x="127" fg:w="3"/><text x="10.3454%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.0954%" y="613" width="0.2385%" height="15" fill="rgb(219,37,7)" fg:x="127" fg:w="3"/><text x="10.3454%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.0954%" y="597" width="0.2385%" height="15" fill="rgb(206,160,15)" fg:x="127" fg:w="3"/><text x="10.3454%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.1749%" y="581" width="0.1590%" height="15" fill="rgb(208,82,21)" fg:x="128" fg:w="2"/><text x="10.4249%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.2544%" y="565" width="0.0795%" height="15" fill="rgb(226,130,25)" fg:x="129" fg:w="1"/><text x="10.5044%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="10.0954%" y="645" width="0.3180%" height="15" fill="rgb(212,72,24)" fg:x="127" fg:w="4"/><text x="10.3454%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.3339%" y="629" width="0.0795%" height="15" fill="rgb(206,28,16)" fg:x="130" fg:w="1"/><text x="10.5839%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="10.0954%" y="693" width="0.3975%" height="15" fill="rgb(249,41,5)" fg:x="127" fg:w="5"/><text x="10.3454%" y="703.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="10.0954%" y="677" width="0.3975%" height="15" fill="rgb(233,96,48)" fg:x="127" fg:w="5"/><text x="10.3454%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="10.0954%" y="661" width="0.3975%" height="15" fill="rgb(240,198,11)" fg:x="127" fg:w="5"/><text x="10.3454%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4134%" y="645" width="0.0795%" height="15" fill="rgb(209,175,35)" fg:x="131" fg:w="1"/><text x="10.6634%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4134%" y="629" width="0.0795%" height="15" fill="rgb(214,40,51)" fg:x="131" fg:w="1"/><text x="10.6634%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4134%" y="613" width="0.0795%" height="15" fill="rgb(252,56,4)" fg:x="131" fg:w="1"/><text x="10.6634%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4134%" y="597" width="0.0795%" height="15" fill="rgb(219,131,5)" fg:x="131" fg:w="1"/><text x="10.6634%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.4134%" y="581" width="0.0795%" height="15" fill="rgb(223,67,53)" fg:x="131" fg:w="1"/><text x="10.6634%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4134%" y="565" width="0.0795%" height="15" fill="rgb(227,154,8)" fg:x="131" fg:w="1"/><text x="10.6634%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4134%" y="549" width="0.0795%" height="15" fill="rgb(216,174,51)" fg:x="131" fg:w="1"/><text x="10.6634%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4134%" y="533" width="0.0795%" height="15" fill="rgb(239,60,34)" fg:x="131" fg:w="1"/><text x="10.6634%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.4928%" y="613" width="0.0795%" height="15" fill="rgb(236,165,48)" fg:x="132" fg:w="1"/><text x="10.7428%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.4928%" y="597" width="0.0795%" height="15" fill="rgb(210,37,26)" fg:x="132" fg:w="1"/><text x="10.7428%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.4928%" y="581" width="0.0795%" height="15" fill="rgb(211,3,17)" fg:x="132" fg:w="1"/><text x="10.7428%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.4928%" y="565" width="0.0795%" height="15" fill="rgb(234,88,49)" fg:x="132" fg:w="1"/><text x="10.7428%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.4928%" y="549" width="0.0795%" height="15" fill="rgb(233,40,17)" fg:x="132" fg:w="1"/><text x="10.7428%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.4928%" y="533" width="0.0795%" height="15" fill="rgb(235,127,31)" fg:x="132" fg:w="1"/><text x="10.7428%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.4928%" y="517" width="0.0795%" height="15" fill="rgb(248,167,17)" fg:x="132" fg:w="1"/><text x="10.7428%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.4928%" y="501" width="0.0795%" height="15" fill="rgb(218,179,8)" fg:x="132" fg:w="1"/><text x="10.7428%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.4928%" y="485" width="0.0795%" height="15" fill="rgb(216,92,14)" fg:x="132" fg:w="1"/><text x="10.7428%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.4928%" y="469" width="0.0795%" height="15" fill="rgb(221,198,46)" fg:x="132" fg:w="1"/><text x="10.7428%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.4928%" y="453" width="0.0795%" height="15" fill="rgb(244,7,25)" fg:x="132" fg:w="1"/><text x="10.7428%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.4928%" y="437" width="0.0795%" height="15" fill="rgb(233,75,6)" fg:x="132" fg:w="1"/><text x="10.7428%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.4928%" y="421" width="0.0795%" height="15" fill="rgb(240,189,41)" fg:x="132" fg:w="1"/><text x="10.7428%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.4928%" y="405" width="0.0795%" height="15" fill="rgb(237,157,21)" fg:x="132" fg:w="1"/><text x="10.7428%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="10.4928%" y="645" width="0.1590%" height="15" fill="rgb(210,136,49)" fg:x="132" fg:w="2"/><text x="10.7428%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.4928%" y="629" width="0.1590%" height="15" fill="rgb(210,68,29)" fg:x="132" fg:w="2"/><text x="10.7428%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.5723%" y="613" width="0.0795%" height="15" fill="rgb(247,207,20)" fg:x="133" fg:w="1"/><text x="10.8223%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5723%" y="597" width="0.0795%" height="15" fill="rgb(224,73,48)" fg:x="133" fg:w="1"/><text x="10.8223%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.5723%" y="581" width="0.0795%" height="15" fill="rgb(215,136,47)" fg:x="133" fg:w="1"/><text x="10.8223%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5723%" y="565" width="0.0795%" height="15" fill="rgb(232,222,16)" fg:x="133" fg:w="1"/><text x="10.8223%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="10.4928%" y="677" width="0.2385%" height="15" fill="rgb(249,202,47)" fg:x="132" fg:w="3"/><text x="10.7428%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="10.4928%" y="661" width="0.2385%" height="15" fill="rgb(236,56,8)" fg:x="132" fg:w="3"/><text x="10.7428%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="10.6518%" y="645" width="0.0795%" height="15" fill="rgb(222,6,3)" fg:x="134" fg:w="1"/><text x="10.9018%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.95%)</title><rect x="9.8569%" y="725" width="0.9539%" height="15" fill="rgb(254,222,28)" fg:x="124" fg:w="12"/><text x="10.1069%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.95%)</title><rect x="9.8569%" y="709" width="0.9539%" height="15" fill="rgb(219,57,23)" fg:x="124" fg:w="12"/><text x="10.1069%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="10.4928%" y="693" width="0.3180%" height="15" fill="rgb(251,106,48)" fg:x="132" fg:w="4"/><text x="10.7428%" y="703.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="10.7313%" y="677" width="0.0795%" height="15" fill="rgb(242,2,23)" fg:x="135" fg:w="1"/><text x="10.9813%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="10.8108%" y="725" width="0.1590%" height="15" fill="rgb(212,109,31)" fg:x="136" fg:w="2"/><text x="11.0608%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="10.8108%" y="709" width="0.1590%" height="15" fill="rgb(241,9,22)" fg:x="136" fg:w="2"/><text x="11.0608%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="10.8903%" y="693" width="0.0795%" height="15" fill="rgb(209,64,27)" fg:x="137" fg:w="1"/><text x="11.1403%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.8903%" y="677" width="0.0795%" height="15" fill="rgb(248,13,44)" fg:x="137" fg:w="1"/><text x="11.1403%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8903%" y="661" width="0.0795%" height="15" fill="rgb(213,86,6)" fg:x="137" fg:w="1"/><text x="11.1403%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.8903%" y="645" width="0.0795%" height="15" fill="rgb(247,11,18)" fg:x="137" fg:w="1"/><text x="11.1403%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8903%" y="629" width="0.0795%" height="15" fill="rgb(252,31,11)" fg:x="137" fg:w="1"/><text x="11.1403%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.8903%" y="613" width="0.0795%" height="15" fill="rgb(215,63,51)" fg:x="137" fg:w="1"/><text x="11.1403%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="10.8903%" y="597" width="0.0795%" height="15" fill="rgb(222,180,4)" fg:x="137" fg:w="1"/><text x="11.1403%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8903%" y="581" width="0.0795%" height="15" fill="rgb(233,4,23)" fg:x="137" fg:w="1"/><text x="11.1403%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.8903%" y="565" width="0.0795%" height="15" fill="rgb(230,116,22)" fg:x="137" fg:w="1"/><text x="11.1403%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8903%" y="549" width="0.0795%" height="15" fill="rgb(222,20,14)" fg:x="137" fg:w="1"/><text x="11.1403%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.8903%" y="533" width="0.0795%" height="15" fill="rgb(210,176,43)" fg:x="137" fg:w="1"/><text x="11.1403%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.8903%" y="517" width="0.0795%" height="15" fill="rgb(219,67,32)" fg:x="137" fg:w="1"/><text x="11.1403%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="10.9698%" y="693" width="0.0795%" height="15" fill="rgb(228,91,39)" fg:x="138" fg:w="1"/><text x="11.2198%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="10.9698%" y="677" width="0.0795%" height="15" fill="rgb(254,63,14)" fg:x="138" fg:w="1"/><text x="11.2198%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.0493%" y="565" width="0.0795%" height="15" fill="rgb(216,171,39)" fg:x="139" fg:w="1"/><text x="11.2993%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.0493%" y="549" width="0.0795%" height="15" fill="rgb(248,68,25)" fg:x="139" fg:w="1"/><text x="11.2993%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.0493%" y="533" width="0.0795%" height="15" fill="rgb(239,63,16)" fg:x="139" fg:w="1"/><text x="11.2993%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.0493%" y="517" width="0.0795%" height="15" fill="rgb(225,111,43)" fg:x="139" fg:w="1"/><text x="11.2993%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.0493%" y="501" width="0.0795%" height="15" fill="rgb(246,165,17)" fg:x="139" fg:w="1"/><text x="11.2993%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.0493%" y="485" width="0.0795%" height="15" fill="rgb(208,124,1)" fg:x="139" fg:w="1"/><text x="11.2993%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.0493%" y="469" width="0.0795%" height="15" fill="rgb(234,147,33)" fg:x="139" fg:w="1"/><text x="11.2993%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.0493%" y="453" width="0.0795%" height="15" fill="rgb(240,86,30)" fg:x="139" fg:w="1"/><text x="11.2993%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.0493%" y="437" width="0.0795%" height="15" fill="rgb(237,34,51)" fg:x="139" fg:w="1"/><text x="11.2993%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.0493%" y="421" width="0.0795%" height="15" fill="rgb(232,131,41)" fg:x="139" fg:w="1"/><text x="11.2993%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.0493%" y="405" width="0.0795%" height="15" fill="rgb(227,129,53)" fg:x="139" fg:w="1"/><text x="11.2993%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0493%" y="389" width="0.0795%" height="15" fill="rgb(230,90,35)" fg:x="139" fg:w="1"/><text x="11.2993%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="10.9698%" y="709" width="0.2385%" height="15" fill="rgb(248,88,27)" fg:x="138" fg:w="3"/><text x="11.2198%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="11.0493%" y="693" width="0.1590%" height="15" fill="rgb(223,18,17)" fg:x="139" fg:w="2"/><text x="11.2993%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="11.0493%" y="677" width="0.1590%" height="15" fill="rgb(241,11,10)" fg:x="139" fg:w="2"/><text x="11.2993%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.0493%" y="661" width="0.1590%" height="15" fill="rgb(232,111,52)" fg:x="139" fg:w="2"/><text x="11.2993%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.0493%" y="645" width="0.1590%" height="15" fill="rgb(228,67,8)" fg:x="139" fg:w="2"/><text x="11.2993%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.0493%" y="629" width="0.1590%" height="15" fill="rgb(251,168,31)" fg:x="139" fg:w="2"/><text x="11.2993%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.0493%" y="613" width="0.1590%" height="15" fill="rgb(249,164,11)" fg:x="139" fg:w="2"/><text x="11.2993%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.0493%" y="597" width="0.1590%" height="15" fill="rgb(239,81,9)" fg:x="139" fg:w="2"/><text x="11.2993%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.0493%" y="581" width="0.1590%" height="15" fill="rgb(222,145,38)" fg:x="139" fg:w="2"/><text x="11.2993%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1288%" y="565" width="0.0795%" height="15" fill="rgb(238,80,54)" fg:x="140" fg:w="1"/><text x="11.3788%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.2083%" y="709" width="0.0795%" height="15" fill="rgb(237,116,16)" fg:x="141" fg:w="1"/><text x="11.4583%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="11.2878%" y="677" width="0.0795%" height="15" fill="rgb(218,135,19)" fg:x="142" fg:w="1"/><text x="11.5378%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.2878%" y="661" width="0.0795%" height="15" fill="rgb(216,207,44)" fg:x="142" fg:w="1"/><text x="11.5378%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="11.2878%" y="709" width="0.1590%" height="15" fill="rgb(226,152,40)" fg:x="142" fg:w="2"/><text x="11.5378%" y="719.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="11.2878%" y="693" width="0.1590%" height="15" fill="rgb(219,98,35)" fg:x="142" fg:w="2"/><text x="11.5378%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.3672%" y="677" width="0.0795%" height="15" fill="rgb(222,136,46)" fg:x="143" fg:w="1"/><text x="11.6172%" y="687.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="11.3672%" y="661" width="0.0795%" height="15" fill="rgb(222,71,8)" fg:x="143" fg:w="1"/><text x="11.6172%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="11.5262%" y="629" width="0.0795%" height="15" fill="rgb(209,89,53)" fg:x="145" fg:w="1"/><text x="11.7762%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="11.5262%" y="613" width="0.0795%" height="15" fill="rgb(210,97,51)" fg:x="145" fg:w="1"/><text x="11.7762%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="11.5262%" y="597" width="0.0795%" height="15" fill="rgb(248,65,21)" fg:x="145" fg:w="1"/><text x="11.7762%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.5262%" y="581" width="0.0795%" height="15" fill="rgb(222,5,31)" fg:x="145" fg:w="1"/><text x="11.7762%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.5262%" y="565" width="0.0795%" height="15" fill="rgb(241,16,30)" fg:x="145" fg:w="1"/><text x="11.7762%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.5262%" y="549" width="0.0795%" height="15" fill="rgb(215,86,30)" fg:x="145" fg:w="1"/><text x="11.7762%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="11.5262%" y="533" width="0.0795%" height="15" fill="rgb(235,26,44)" fg:x="145" fg:w="1"/><text x="11.7762%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5262%" y="517" width="0.0795%" height="15" fill="rgb(228,147,14)" fg:x="145" fg:w="1"/><text x="11.7762%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="11.4467%" y="661" width="0.2385%" height="15" fill="rgb(253,38,50)" fg:x="144" fg:w="3"/><text x="11.6967%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="11.4467%" y="645" width="0.2385%" height="15" fill="rgb(251,151,16)" fg:x="144" fg:w="3"/><text x="11.6967%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.6057%" y="629" width="0.0795%" height="15" fill="rgb(224,64,19)" fg:x="146" fg:w="1"/><text x="11.8557%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.6057%" y="613" width="0.0795%" height="15" fill="rgb(235,214,47)" fg:x="146" fg:w="1"/><text x="11.8557%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.6057%" y="597" width="0.0795%" height="15" fill="rgb(218,15,19)" fg:x="146" fg:w="1"/><text x="11.8557%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6057%" y="581" width="0.0795%" height="15" fill="rgb(247,209,3)" fg:x="146" fg:w="1"/><text x="11.8557%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6057%" y="565" width="0.0795%" height="15" fill="rgb(217,29,2)" fg:x="146" fg:w="1"/><text x="11.8557%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6057%" y="549" width="0.0795%" height="15" fill="rgb(234,9,9)" fg:x="146" fg:w="1"/><text x="11.8557%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6057%" y="533" width="0.0795%" height="15" fill="rgb(207,43,14)" fg:x="146" fg:w="1"/><text x="11.8557%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6057%" y="517" width="0.0795%" height="15" fill="rgb(216,219,36)" fg:x="146" fg:w="1"/><text x="11.8557%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="11.6852%" y="485" width="0.1590%" height="15" fill="rgb(238,12,26)" fg:x="147" fg:w="2"/><text x="11.9352%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="11.6852%" y="469" width="0.1590%" height="15" fill="rgb(226,67,30)" fg:x="147" fg:w="2"/><text x="11.9352%" y="479.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="11.6852%" y="453" width="0.1590%" height="15" fill="rgb(229,154,7)" fg:x="147" fg:w="2"/><text x="11.9352%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="11.6852%" y="437" width="0.1590%" height="15" fill="rgb(249,90,18)" fg:x="147" fg:w="2"/><text x="11.9352%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="11.6852%" y="421" width="0.1590%" height="15" fill="rgb(223,53,15)" fg:x="147" fg:w="2"/><text x="11.9352%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="11.6852%" y="405" width="0.1590%" height="15" fill="rgb(253,86,38)" fg:x="147" fg:w="2"/><text x="11.9352%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="11.6852%" y="389" width="0.1590%" height="15" fill="rgb(222,198,9)" fg:x="147" fg:w="2"/><text x="11.9352%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="11.6852%" y="373" width="0.1590%" height="15" fill="rgb(240,146,25)" fg:x="147" fg:w="2"/><text x="11.9352%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.7647%" y="357" width="0.0795%" height="15" fill="rgb(225,38,10)" fg:x="148" fg:w="1"/><text x="12.0147%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="11.7647%" y="341" width="0.0795%" height="15" fill="rgb(246,93,4)" fg:x="148" fg:w="1"/><text x="12.0147%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.7647%" y="325" width="0.0795%" height="15" fill="rgb(222,55,18)" fg:x="148" fg:w="1"/><text x="12.0147%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7647%" y="309" width="0.0795%" height="15" fill="rgb(233,137,48)" fg:x="148" fg:w="1"/><text x="12.0147%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="11.6852%" y="629" width="0.2385%" height="15" fill="rgb(214,8,54)" fg:x="147" fg:w="3"/><text x="11.9352%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="11.6852%" y="613" width="0.2385%" height="15" fill="rgb(206,75,4)" fg:x="147" fg:w="3"/><text x="11.9352%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="11.6852%" y="597" width="0.2385%" height="15" fill="rgb(238,171,14)" fg:x="147" fg:w="3"/><text x="11.9352%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="11.6852%" y="581" width="0.2385%" height="15" fill="rgb(233,70,41)" fg:x="147" fg:w="3"/><text x="11.9352%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="11.6852%" y="565" width="0.2385%" height="15" fill="rgb(214,68,36)" fg:x="147" fg:w="3"/><text x="11.9352%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="11.6852%" y="549" width="0.2385%" height="15" fill="rgb(223,29,5)" fg:x="147" fg:w="3"/><text x="11.9352%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="11.6852%" y="533" width="0.2385%" height="15" fill="rgb(251,22,40)" fg:x="147" fg:w="3"/><text x="11.9352%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="11.6852%" y="517" width="0.2385%" height="15" fill="rgb(210,67,41)" fg:x="147" fg:w="3"/><text x="11.9352%" y="527.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="11.6852%" y="501" width="0.2385%" height="15" fill="rgb(225,177,31)" fg:x="147" fg:w="3"/><text x="11.9352%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.8442%" y="485" width="0.0795%" height="15" fill="rgb(221,229,11)" fg:x="149" fg:w="1"/><text x="12.0942%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="11.8442%" y="469" width="0.0795%" height="15" fill="rgb(247,172,52)" fg:x="149" fg:w="1"/><text x="12.0942%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.8442%" y="453" width="0.0795%" height="15" fill="rgb(212,73,19)" fg:x="149" fg:w="1"/><text x="12.0942%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.8442%" y="437" width="0.0795%" height="15" fill="rgb(244,7,46)" fg:x="149" fg:w="1"/><text x="12.0942%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.9237%" y="629" width="0.0795%" height="15" fill="rgb(230,113,20)" fg:x="150" fg:w="1"/><text x="12.1737%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.9237%" y="613" width="0.0795%" height="15" fill="rgb(209,97,30)" fg:x="150" fg:w="1"/><text x="12.1737%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.9237%" y="597" width="0.0795%" height="15" fill="rgb(243,89,12)" fg:x="150" fg:w="1"/><text x="12.1737%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9237%" y="581" width="0.0795%" height="15" fill="rgb(228,32,19)" fg:x="150" fg:w="1"/><text x="12.1737%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9237%" y="565" width="0.0795%" height="15" fill="rgb(248,25,17)" fg:x="150" fg:w="1"/><text x="12.1737%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9237%" y="549" width="0.0795%" height="15" fill="rgb(232,161,29)" fg:x="150" fg:w="1"/><text x="12.1737%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9237%" y="533" width="0.0795%" height="15" fill="rgb(251,192,11)" fg:x="150" fg:w="1"/><text x="12.1737%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.9237%" y="517" width="0.0795%" height="15" fill="rgb(240,47,32)" fg:x="150" fg:w="1"/><text x="12.1737%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.9237%" y="501" width="0.0795%" height="15" fill="rgb(250,16,45)" fg:x="150" fg:w="1"/><text x="12.1737%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="12.0032%" y="613" width="0.1590%" height="15" fill="rgb(227,217,42)" fg:x="151" fg:w="2"/><text x="12.2532%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.0032%" y="597" width="0.1590%" height="15" fill="rgb(206,82,54)" fg:x="151" fg:w="2"/><text x="12.2532%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="12.0827%" y="581" width="0.0795%" height="15" fill="rgb(243,145,25)" fg:x="152" fg:w="1"/><text x="12.3327%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.0827%" y="565" width="0.0795%" height="15" fill="rgb(207,166,24)" fg:x="152" fg:w="1"/><text x="12.3327%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.0827%" y="549" width="0.0795%" height="15" fill="rgb(215,191,44)" fg:x="152" fg:w="1"/><text x="12.3327%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0827%" y="533" width="0.0795%" height="15" fill="rgb(234,218,51)" fg:x="152" fg:w="1"/><text x="12.3327%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="12.0032%" y="629" width="0.2385%" height="15" fill="rgb(245,133,21)" fg:x="151" fg:w="3"/><text x="12.2532%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.1622%" y="613" width="0.0795%" height="15" fill="rgb(230,136,45)" fg:x="153" fg:w="1"/><text x="12.4122%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="12.1622%" y="597" width="0.0795%" height="15" fill="rgb(247,63,43)" fg:x="153" fg:w="1"/><text x="12.4122%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1622%" y="581" width="0.0795%" height="15" fill="rgb(254,223,31)" fg:x="153" fg:w="1"/><text x="12.4122%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.1622%" y="565" width="0.0795%" height="15" fill="rgb(236,185,0)" fg:x="153" fg:w="1"/><text x="12.4122%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="12.2417%" y="613" width="0.0795%" height="15" fill="rgb(231,139,46)" fg:x="154" fg:w="1"/><text x="12.4917%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="12.2417%" y="597" width="0.0795%" height="15" fill="rgb(236,147,31)" fg:x="154" fg:w="1"/><text x="12.4917%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="12.2417%" y="581" width="0.0795%" height="15" fill="rgb(225,222,22)" fg:x="154" fg:w="1"/><text x="12.4917%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="11.6852%" y="645" width="0.7154%" height="15" fill="rgb(225,193,14)" fg:x="147" fg:w="9"/><text x="11.9352%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="12.2417%" y="629" width="0.1590%" height="15" fill="rgb(253,193,46)" fg:x="154" fg:w="2"/><text x="12.4917%" y="639.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="12.3211%" y="613" width="0.0795%" height="15" fill="rgb(218,187,39)" fg:x="155" fg:w="1"/><text x="12.5711%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.3211%" y="597" width="0.0795%" height="15" fill="rgb(227,162,48)" fg:x="155" fg:w="1"/><text x="12.5711%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.3211%" y="581" width="0.0795%" height="15" fill="rgb(222,25,5)" fg:x="155" fg:w="1"/><text x="12.5711%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.3211%" y="565" width="0.0795%" height="15" fill="rgb(211,205,16)" fg:x="155" fg:w="1"/><text x="12.5711%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.3211%" y="549" width="0.0795%" height="15" fill="rgb(244,191,2)" fg:x="155" fg:w="1"/><text x="12.5711%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.3211%" y="533" width="0.0795%" height="15" fill="rgb(248,159,12)" fg:x="155" fg:w="1"/><text x="12.5711%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.3211%" y="517" width="0.0795%" height="15" fill="rgb(235,204,17)" fg:x="155" fg:w="1"/><text x="12.5711%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.3211%" y="501" width="0.0795%" height="15" fill="rgb(240,21,27)" fg:x="155" fg:w="1"/><text x="12.5711%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.3211%" y="485" width="0.0795%" height="15" fill="rgb(224,170,31)" fg:x="155" fg:w="1"/><text x="12.5711%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.3211%" y="469" width="0.0795%" height="15" fill="rgb(223,145,32)" fg:x="155" fg:w="1"/><text x="12.5711%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.3211%" y="453" width="0.0795%" height="15" fill="rgb(243,100,5)" fg:x="155" fg:w="1"/><text x="12.5711%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.3211%" y="437" width="0.0795%" height="15" fill="rgb(242,131,51)" fg:x="155" fg:w="1"/><text x="12.5711%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="12.4006%" y="629" width="0.0795%" height="15" fill="rgb(223,156,46)" fg:x="156" fg:w="1"/><text x="12.6506%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.4006%" y="613" width="0.0795%" height="15" fill="rgb(215,10,40)" fg:x="156" fg:w="1"/><text x="12.6506%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4801%" y="549" width="0.0795%" height="15" fill="rgb(233,155,0)" fg:x="157" fg:w="1"/><text x="12.7301%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4801%" y="533" width="0.0795%" height="15" fill="rgb(247,78,6)" fg:x="157" fg:w="1"/><text x="12.7301%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4801%" y="517" width="0.0795%" height="15" fill="rgb(237,217,21)" fg:x="157" fg:w="1"/><text x="12.7301%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4801%" y="501" width="0.0795%" height="15" fill="rgb(212,1,21)" fg:x="157" fg:w="1"/><text x="12.7301%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.4801%" y="597" width="0.1590%" height="15" fill="rgb(213,7,14)" fg:x="157" fg:w="2"/><text x="12.7301%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.4801%" y="581" width="0.1590%" height="15" fill="rgb(225,84,14)" fg:x="157" fg:w="2"/><text x="12.7301%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.4801%" y="565" width="0.1590%" height="15" fill="rgb(239,216,39)" fg:x="157" fg:w="2"/><text x="12.7301%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5596%" y="549" width="0.0795%" height="15" fill="rgb(253,29,23)" fg:x="158" fg:w="1"/><text x="12.8096%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5596%" y="533" width="0.0795%" height="15" fill="rgb(220,167,50)" fg:x="158" fg:w="1"/><text x="12.8096%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5596%" y="517" width="0.0795%" height="15" fill="rgb(232,141,1)" fg:x="158" fg:w="1"/><text x="12.8096%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5596%" y="501" width="0.0795%" height="15" fill="rgb(222,210,1)" fg:x="158" fg:w="1"/><text x="12.8096%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.5596%" y="485" width="0.0795%" height="15" fill="rgb(219,84,10)" fg:x="158" fg:w="1"/><text x="12.8096%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5596%" y="469" width="0.0795%" height="15" fill="rgb(245,188,6)" fg:x="158" fg:w="1"/><text x="12.8096%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5596%" y="453" width="0.0795%" height="15" fill="rgb(252,139,39)" fg:x="158" fg:w="1"/><text x="12.8096%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.5596%" y="437" width="0.0795%" height="15" fill="rgb(218,42,26)" fg:x="158" fg:w="1"/><text x="12.8096%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 1.27%)</title><rect x="11.4467%" y="709" width="1.2719%" height="15" fill="rgb(237,226,51)" fg:x="144" fg:w="16"/><text x="11.6967%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.27%)</title><rect x="11.4467%" y="693" width="1.2719%" height="15" fill="rgb(246,15,17)" fg:x="144" fg:w="16"/><text x="11.6967%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (16 samples, 1.27%)</title><rect x="11.4467%" y="677" width="1.2719%" height="15" fill="rgb(228,170,42)" fg:x="144" fg:w="16"/><text x="11.6967%" y="687.50"></text></g><g><title>plugins_core::build::Build::leads_to (13 samples, 1.03%)</title><rect x="11.6852%" y="661" width="1.0334%" height="15" fill="rgb(248,118,53)" fg:x="147" fg:w="13"/><text x="11.9352%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="12.4006%" y="645" width="0.3180%" height="15" fill="rgb(207,30,10)" fg:x="156" fg:w="4"/><text x="12.6506%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="12.4801%" y="629" width="0.2385%" height="15" fill="rgb(217,104,38)" fg:x="157" fg:w="3"/><text x="12.7301%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="12.4801%" y="613" width="0.2385%" height="15" fill="rgb(211,165,26)" fg:x="157" fg:w="3"/><text x="12.7301%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="12.6391%" y="597" width="0.0795%" height="15" fill="rgb(247,38,9)" fg:x="159" fg:w="1"/><text x="12.8891%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="12.7186%" y="709" width="0.0795%" height="15" fill="rgb(218,187,8)" fg:x="160" fg:w="1"/><text x="12.9686%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="12.7981%" y="677" width="0.1590%" height="15" fill="rgb(247,94,28)" fg:x="161" fg:w="2"/><text x="13.0481%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.9571%" y="677" width="0.1590%" height="15" fill="rgb(218,173,30)" fg:x="163" fg:w="2"/><text x="13.2071%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.9571%" y="661" width="0.1590%" height="15" fill="rgb(245,45,36)" fg:x="163" fg:w="2"/><text x="13.2071%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="12.9571%" y="645" width="0.1590%" height="15" fill="rgb(221,172,44)" fg:x="163" fg:w="2"/><text x="13.2071%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (5 samples, 0.40%)</title><rect x="12.7981%" y="693" width="0.3975%" height="15" fill="rgb(222,45,12)" fg:x="161" fg:w="5"/><text x="13.0481%" y="703.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="13.1161%" y="677" width="0.0795%" height="15" fill="rgb(250,10,22)" fg:x="165" fg:w="1"/><text x="13.3661%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1161%" y="661" width="0.0795%" height="15" fill="rgb(239,27,0)" fg:x="165" fg:w="1"/><text x="13.3661%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="13.1955%" y="645" width="0.0795%" height="15" fill="rgb(223,118,22)" fg:x="166" fg:w="1"/><text x="13.4455%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.1955%" y="629" width="0.0795%" height="15" fill="rgb(251,81,25)" fg:x="166" fg:w="1"/><text x="13.4455%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.1955%" y="613" width="0.0795%" height="15" fill="rgb(237,225,53)" fg:x="166" fg:w="1"/><text x="13.4455%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.1955%" y="597" width="0.0795%" height="15" fill="rgb(237,186,51)" fg:x="166" fg:w="1"/><text x="13.4455%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.2750%" y="597" width="0.0795%" height="15" fill="rgb(247,209,11)" fg:x="167" fg:w="1"/><text x="13.5250%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.2750%" y="581" width="0.0795%" height="15" fill="rgb(223,109,27)" fg:x="167" fg:w="1"/><text x="13.5250%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.2750%" y="565" width="0.0795%" height="15" fill="rgb(246,181,13)" fg:x="167" fg:w="1"/><text x="13.5250%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.2750%" y="549" width="0.0795%" height="15" fill="rgb(234,57,44)" fg:x="167" fg:w="1"/><text x="13.5250%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.2750%" y="533" width="0.0795%" height="15" fill="rgb(211,227,50)" fg:x="167" fg:w="1"/><text x="13.5250%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.2750%" y="517" width="0.0795%" height="15" fill="rgb(254,57,34)" fg:x="167" fg:w="1"/><text x="13.5250%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.2750%" y="501" width="0.0795%" height="15" fill="rgb(227,212,26)" fg:x="167" fg:w="1"/><text x="13.5250%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.2750%" y="485" width="0.0795%" height="15" fill="rgb(244,169,44)" fg:x="167" fg:w="1"/><text x="13.5250%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.2750%" y="469" width="0.0795%" height="15" fill="rgb(236,135,50)" fg:x="167" fg:w="1"/><text x="13.5250%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.2750%" y="453" width="0.0795%" height="15" fill="rgb(241,89,30)" fg:x="167" fg:w="1"/><text x="13.5250%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.2750%" y="437" width="0.0795%" height="15" fill="rgb(206,113,34)" fg:x="167" fg:w="1"/><text x="13.5250%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2750%" y="421" width="0.0795%" height="15" fill="rgb(218,104,52)" fg:x="167" fg:w="1"/><text x="13.5250%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="13.2750%" y="645" width="0.1590%" height="15" fill="rgb(223,82,32)" fg:x="167" fg:w="2"/><text x="13.5250%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="13.2750%" y="629" width="0.1590%" height="15" fill="rgb(249,219,30)" fg:x="167" fg:w="2"/><text x="13.5250%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="13.2750%" y="613" width="0.1590%" height="15" fill="rgb(233,141,21)" fg:x="167" fg:w="2"/><text x="13.5250%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="13.3545%" y="597" width="0.0795%" height="15" fill="rgb(252,87,44)" fg:x="168" fg:w="1"/><text x="13.6045%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.3545%" y="581" width="0.0795%" height="15" fill="rgb(229,48,33)" fg:x="168" fg:w="1"/><text x="13.6045%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5930%" y="613" width="0.0795%" height="15" fill="rgb(229,23,22)" fg:x="171" fg:w="1"/><text x="13.8430%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5930%" y="597" width="0.0795%" height="15" fill="rgb(244,116,16)" fg:x="171" fg:w="1"/><text x="13.8430%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.5930%" y="581" width="0.0795%" height="15" fill="rgb(247,45,10)" fg:x="171" fg:w="1"/><text x="13.8430%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.5930%" y="565" width="0.0795%" height="15" fill="rgb(228,60,29)" fg:x="171" fg:w="1"/><text x="13.8430%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.5930%" y="549" width="0.0795%" height="15" fill="rgb(205,129,15)" fg:x="171" fg:w="1"/><text x="13.8430%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.5930%" y="533" width="0.0795%" height="15" fill="rgb(206,229,4)" fg:x="171" fg:w="1"/><text x="13.8430%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.5930%" y="517" width="0.0795%" height="15" fill="rgb(249,191,30)" fg:x="171" fg:w="1"/><text x="13.8430%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="13.6725%" y="597" width="0.3975%" height="15" fill="rgb(250,84,54)" fg:x="172" fg:w="5"/><text x="13.9225%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="13.6725%" y="581" width="0.3975%" height="15" fill="rgb(207,25,53)" fg:x="172" fg:w="5"/><text x="13.9225%" y="591.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="13.6725%" y="565" width="0.3975%" height="15" fill="rgb(235,40,8)" fg:x="172" fg:w="5"/><text x="13.9225%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="13.7520%" y="549" width="0.3180%" height="15" fill="rgb(226,169,33)" fg:x="173" fg:w="4"/><text x="14.0020%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.9110%" y="533" width="0.1590%" height="15" fill="rgb(238,110,8)" fg:x="175" fg:w="2"/><text x="14.1610%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.1494%" y="581" width="0.0795%" height="15" fill="rgb(251,206,12)" fg:x="178" fg:w="1"/><text x="14.3994%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.1494%" y="565" width="0.0795%" height="15" fill="rgb(248,171,18)" fg:x="178" fg:w="1"/><text x="14.3994%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.1494%" y="549" width="0.0795%" height="15" fill="rgb(213,65,46)" fg:x="178" fg:w="1"/><text x="14.3994%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.1494%" y="533" width="0.0795%" height="15" fill="rgb(211,154,15)" fg:x="178" fg:w="1"/><text x="14.3994%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="14.2289%" y="581" width="0.1590%" height="15" fill="rgb(217,75,43)" fg:x="179" fg:w="2"/><text x="14.4789%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.2289%" y="565" width="0.1590%" height="15" fill="rgb(230,32,33)" fg:x="179" fg:w="2"/><text x="14.4789%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.3084%" y="549" width="0.0795%" height="15" fill="rgb(221,100,16)" fg:x="180" fg:w="1"/><text x="14.5584%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.4674%" y="565" width="0.0795%" height="15" fill="rgb(212,129,47)" fg:x="182" fg:w="1"/><text x="14.7174%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.6264%" y="533" width="0.0795%" height="15" fill="rgb(239,217,47)" fg:x="184" fg:w="1"/><text x="14.8764%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="14.5469%" y="565" width="0.2385%" height="15" fill="rgb(230,84,24)" fg:x="183" fg:w="3"/><text x="14.7969%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="14.5469%" y="549" width="0.2385%" height="15" fill="rgb(214,153,51)" fg:x="183" fg:w="3"/><text x="14.7969%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.7059%" y="533" width="0.0795%" height="15" fill="rgb(231,6,35)" fg:x="185" fg:w="1"/><text x="14.9559%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.7059%" y="517" width="0.0795%" height="15" fill="rgb(229,122,30)" fg:x="185" fg:w="1"/><text x="14.9559%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="14.7059%" y="501" width="0.0795%" height="15" fill="rgb(234,71,10)" fg:x="185" fg:w="1"/><text x="14.9559%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.7854%" y="565" width="0.0795%" height="15" fill="rgb(215,173,26)" fg:x="186" fg:w="1"/><text x="15.0354%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.7854%" y="549" width="0.0795%" height="15" fill="rgb(248,118,52)" fg:x="186" fg:w="1"/><text x="15.0354%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.8649%" y="549" width="0.0795%" height="15" fill="rgb(237,55,46)" fg:x="187" fg:w="1"/><text x="15.1149%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.9444%" y="549" width="0.0795%" height="15" fill="rgb(243,214,43)" fg:x="188" fg:w="1"/><text x="15.1944%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.9444%" y="533" width="0.0795%" height="15" fill="rgb(252,123,30)" fg:x="188" fg:w="1"/><text x="15.1944%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.9444%" y="517" width="0.0795%" height="15" fill="rgb(215,73,39)" fg:x="188" fg:w="1"/><text x="15.1944%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.9444%" y="501" width="0.0795%" height="15" fill="rgb(251,194,29)" fg:x="188" fg:w="1"/><text x="15.1944%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="15.1033%" y="533" width="0.3180%" height="15" fill="rgb(224,58,52)" fg:x="190" fg:w="4"/><text x="15.3533%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.1033%" y="517" width="0.3180%" height="15" fill="rgb(248,106,46)" fg:x="190" fg:w="4"/><text x="15.3533%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.2623%" y="501" width="0.1590%" height="15" fill="rgb(223,80,29)" fg:x="192" fg:w="2"/><text x="15.5123%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.2623%" y="485" width="0.1590%" height="15" fill="rgb(243,137,9)" fg:x="192" fg:w="2"/><text x="15.5123%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="15.2623%" y="469" width="0.1590%" height="15" fill="rgb(235,121,28)" fg:x="192" fg:w="2"/><text x="15.5123%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="15.2623%" y="453" width="0.1590%" height="15" fill="rgb(219,121,41)" fg:x="192" fg:w="2"/><text x="15.5123%" y="463.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="15.2623%" y="437" width="0.1590%" height="15" fill="rgb(251,60,6)" fg:x="192" fg:w="2"/><text x="15.5123%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.4213%" y="517" width="0.1590%" height="15" fill="rgb(208,12,30)" fg:x="194" fg:w="2"/><text x="15.6713%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.5008%" y="501" width="0.0795%" height="15" fill="rgb(207,176,36)" fg:x="195" fg:w="1"/><text x="15.7508%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.6598%" y="501" width="0.0795%" height="15" fill="rgb(211,188,29)" fg:x="197" fg:w="1"/><text x="15.9098%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.6598%" y="485" width="0.0795%" height="15" fill="rgb(220,184,37)" fg:x="197" fg:w="1"/><text x="15.9098%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.6598%" y="469" width="0.0795%" height="15" fill="rgb(239,87,37)" fg:x="197" fg:w="1"/><text x="15.9098%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.6598%" y="453" width="0.0795%" height="15" fill="rgb(232,113,44)" fg:x="197" fg:w="1"/><text x="15.9098%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.7393%" y="501" width="0.0795%" height="15" fill="rgb(246,25,39)" fg:x="198" fg:w="1"/><text x="15.9893%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="15.5803%" y="517" width="0.3180%" height="15" fill="rgb(247,30,13)" fg:x="196" fg:w="4"/><text x="15.8303%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8188%" y="501" width="0.0795%" height="15" fill="rgb(230,176,35)" fg:x="199" fg:w="1"/><text x="16.0688%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="15.4213%" y="533" width="0.5564%" height="15" fill="rgb(222,23,18)" fg:x="194" fg:w="7"/><text x="15.6713%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.8983%" y="517" width="0.0795%" height="15" fill="rgb(234,86,8)" fg:x="200" fg:w="1"/><text x="16.1483%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="14.8649%" y="565" width="1.1924%" height="15" fill="rgb(206,218,47)" fg:x="187" fg:w="15"/><text x="15.1149%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.03%)</title><rect x="15.0238%" y="549" width="1.0334%" height="15" fill="rgb(229,35,31)" fg:x="189" fg:w="13"/><text x="15.2738%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.9777%" y="533" width="0.0795%" height="15" fill="rgb(242,81,7)" fg:x="201" fg:w="1"/><text x="16.2277%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.83%)</title><rect x="14.3879%" y="581" width="1.8283%" height="15" fill="rgb(231,11,35)" fg:x="181" fg:w="23"/><text x="14.6379%" y="591.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.0572%" y="565" width="0.1590%" height="15" fill="rgb(219,218,17)" fg:x="202" fg:w="2"/><text x="16.3072%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.1367%" y="549" width="0.0795%" height="15" fill="rgb(221,83,32)" fg:x="203" fg:w="1"/><text x="16.3867%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.1367%" y="533" width="0.0795%" height="15" fill="rgb(233,49,54)" fg:x="203" fg:w="1"/><text x="16.3867%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.54%)</title><rect x="14.0700%" y="597" width="2.5437%" height="15" fill="rgb(206,18,51)" fg:x="177" fg:w="32"/><text x="14.3200%" y="607.50">se..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="16.2162%" y="581" width="0.3975%" height="15" fill="rgb(249,193,15)" fg:x="204" fg:w="5"/><text x="16.4662%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="16.2162%" y="565" width="0.3975%" height="15" fill="rgb(245,186,19)" fg:x="204" fg:w="5"/><text x="16.4662%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="16.2162%" y="549" width="0.3975%" height="15" fill="rgb(230,4,24)" fg:x="204" fg:w="5"/><text x="16.4662%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="16.3752%" y="533" width="0.2385%" height="15" fill="rgb(234,75,27)" fg:x="206" fg:w="3"/><text x="16.6252%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="16.4547%" y="517" width="0.1590%" height="15" fill="rgb(244,187,35)" fg:x="207" fg:w="2"/><text x="16.7047%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="16.4547%" y="501" width="0.1590%" height="15" fill="rgb(241,97,43)" fg:x="207" fg:w="2"/><text x="16.7047%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (39 samples, 3.10%)</title><rect x="13.6725%" y="613" width="3.1002%" height="15" fill="rgb(236,94,2)" fg:x="172" fg:w="39"/><text x="13.9225%" y="623.50">&lt;se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.6137%" y="597" width="0.1590%" height="15" fill="rgb(231,175,7)" fg:x="209" fg:w="2"/><text x="16.8637%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.6137%" y="581" width="0.1590%" height="15" fill="rgb(236,89,47)" fg:x="209" fg:w="2"/><text x="16.8637%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.6932%" y="565" width="0.0795%" height="15" fill="rgb(213,191,37)" fg:x="210" fg:w="1"/><text x="16.9432%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.6932%" y="549" width="0.0795%" height="15" fill="rgb(252,0,34)" fg:x="210" fg:w="1"/><text x="16.9432%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.6932%" y="533" width="0.0795%" height="15" fill="rgb(208,145,44)" fg:x="210" fg:w="1"/><text x="16.9432%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6932%" y="517" width="0.0795%" height="15" fill="rgb(227,95,50)" fg:x="210" fg:w="1"/><text x="16.9432%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8521%" y="581" width="0.0795%" height="15" fill="rgb(222,136,24)" fg:x="212" fg:w="1"/><text x="17.1021%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.9316%" y="565" width="0.0795%" height="15" fill="rgb(218,105,10)" fg:x="213" fg:w="1"/><text x="17.1816%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="17.0111%" y="565" width="0.1590%" height="15" fill="rgb(216,65,28)" fg:x="214" fg:w="2"/><text x="17.2611%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.0906%" y="549" width="0.0795%" height="15" fill="rgb(229,6,28)" fg:x="215" fg:w="1"/><text x="17.3406%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.3291%" y="549" width="0.0795%" height="15" fill="rgb(222,160,42)" fg:x="218" fg:w="1"/><text x="17.5791%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3291%" y="533" width="0.0795%" height="15" fill="rgb(235,83,49)" fg:x="218" fg:w="1"/><text x="17.5791%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="16.7727%" y="613" width="0.7154%" height="15" fill="rgb(236,86,36)" fg:x="211" fg:w="9"/><text x="17.0227%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="16.7727%" y="597" width="0.7154%" height="15" fill="rgb(236,19,41)" fg:x="211" fg:w="9"/><text x="17.0227%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="16.9316%" y="581" width="0.5564%" height="15" fill="rgb(217,71,31)" fg:x="213" fg:w="7"/><text x="17.1816%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="17.1701%" y="565" width="0.3180%" height="15" fill="rgb(236,209,25)" fg:x="216" fg:w="4"/><text x="17.4201%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4086%" y="549" width="0.0795%" height="15" fill="rgb(247,104,21)" fg:x="219" fg:w="1"/><text x="17.6586%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.4086%" y="533" width="0.0795%" height="15" fill="rgb(243,80,38)" fg:x="219" fg:w="1"/><text x="17.6586%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.4881%" y="581" width="0.0795%" height="15" fill="rgb(232,109,38)" fg:x="220" fg:w="1"/><text x="17.7381%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="17.4881%" y="597" width="0.1590%" height="15" fill="rgb(212,177,53)" fg:x="220" fg:w="2"/><text x="17.7381%" y="607.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="17.5676%" y="581" width="0.0795%" height="15" fill="rgb(227,30,34)" fg:x="221" fg:w="1"/><text x="17.8176%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7266%" y="565" width="0.0795%" height="15" fill="rgb(205,175,25)" fg:x="223" fg:w="1"/><text x="17.9766%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8060%" y="565" width="0.0795%" height="15" fill="rgb(249,39,54)" fg:x="224" fg:w="1"/><text x="18.0560%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8060%" y="549" width="0.0795%" height="15" fill="rgb(215,54,37)" fg:x="224" fg:w="1"/><text x="18.0560%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.8060%" y="533" width="0.0795%" height="15" fill="rgb(205,60,46)" fg:x="224" fg:w="1"/><text x="18.0560%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="17.8855%" y="565" width="0.1590%" height="15" fill="rgb(238,89,29)" fg:x="225" fg:w="2"/><text x="18.1355%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.8855%" y="549" width="0.1590%" height="15" fill="rgb(212,48,10)" fg:x="225" fg:w="2"/><text x="18.1355%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9650%" y="533" width="0.0795%" height="15" fill="rgb(237,186,28)" fg:x="226" fg:w="1"/><text x="18.2150%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="18.1240%" y="549" width="0.0795%" height="15" fill="rgb(237,204,4)" fg:x="228" fg:w="1"/><text x="18.3740%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.2035%" y="517" width="0.1590%" height="15" fill="rgb(237,15,47)" fg:x="229" fg:w="2"/><text x="18.4535%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.2035%" y="501" width="0.1590%" height="15" fill="rgb(244,110,25)" fg:x="229" fg:w="2"/><text x="18.4535%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.2830%" y="485" width="0.0795%" height="15" fill="rgb(241,12,16)" fg:x="230" fg:w="1"/><text x="18.5330%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.4420%" y="501" width="0.0795%" height="15" fill="rgb(235,25,9)" fg:x="232" fg:w="1"/><text x="18.6920%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="18.5215%" y="485" width="0.3180%" height="15" fill="rgb(245,159,19)" fg:x="233" fg:w="4"/><text x="18.7715%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.6804%" y="469" width="0.1590%" height="15" fill="rgb(236,63,32)" fg:x="235" fg:w="2"/><text x="18.9304%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7599%" y="453" width="0.0795%" height="15" fill="rgb(235,32,52)" fg:x="236" fg:w="1"/><text x="19.0099%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="18.9984%" y="421" width="0.2385%" height="15" fill="rgb(209,176,21)" fg:x="239" fg:w="3"/><text x="19.2484%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.0779%" y="405" width="0.1590%" height="15" fill="rgb(205,90,42)" fg:x="240" fg:w="2"/><text x="19.3279%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.0779%" y="389" width="0.1590%" height="15" fill="rgb(213,132,16)" fg:x="240" fg:w="2"/><text x="19.3279%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.79%)</title><rect x="18.5215%" y="501" width="0.7949%" height="15" fill="rgb(232,11,22)" fg:x="233" fg:w="10"/><text x="18.7715%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="18.8394%" y="485" width="0.4769%" height="15" fill="rgb(248,167,41)" fg:x="237" fg:w="6"/><text x="19.0894%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="18.9189%" y="469" width="0.3975%" height="15" fill="rgb(209,127,6)" fg:x="238" fg:w="5"/><text x="19.1689%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="18.9984%" y="453" width="0.3180%" height="15" fill="rgb(246,210,34)" fg:x="239" fg:w="4"/><text x="19.2484%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="18.9984%" y="437" width="0.3180%" height="15" fill="rgb(238,165,13)" fg:x="239" fg:w="4"/><text x="19.2484%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.2369%" y="421" width="0.0795%" height="15" fill="rgb(233,98,15)" fg:x="242" fg:w="1"/><text x="19.4869%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.2369%" y="405" width="0.0795%" height="15" fill="rgb(215,215,51)" fg:x="242" fg:w="1"/><text x="19.4869%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.2369%" y="389" width="0.0795%" height="15" fill="rgb(217,161,25)" fg:x="242" fg:w="1"/><text x="19.4869%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.19%)</title><rect x="18.2035%" y="533" width="1.1924%" height="15" fill="rgb(217,167,48)" fg:x="229" fg:w="15"/><text x="18.4535%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.03%)</title><rect x="18.3625%" y="517" width="1.0334%" height="15" fill="rgb(205,163,34)" fg:x="231" fg:w="13"/><text x="18.6125%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3164%" y="501" width="0.0795%" height="15" fill="rgb(241,197,31)" fg:x="243" fg:w="1"/><text x="19.5664%" y="511.50"></text></g><g><title>engine::session::Session::flush (86 samples, 6.84%)</title><rect x="12.7981%" y="709" width="6.8362%" height="15" fill="rgb(225,123,11)" fg:x="161" fg:w="86"/><text x="13.0481%" y="719.50">engine::s..</text></g><g><title>engine::session::Session::save_changes (81 samples, 6.44%)</title><rect x="13.1955%" y="693" width="6.4388%" height="15" fill="rgb(217,4,20)" fg:x="166" fg:w="81"/><text x="13.4455%" y="703.50">engine::..</text></g><g><title>engine::session::state::State::close (81 samples, 6.44%)</title><rect x="13.1955%" y="677" width="6.4388%" height="15" fill="rgb(215,55,9)" fg:x="166" fg:w="81"/><text x="13.4455%" y="687.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (81 samples, 6.44%)</title><rect x="13.1955%" y="661" width="6.4388%" height="15" fill="rgb(218,165,5)" fg:x="166" fg:w="81"/><text x="13.4455%" y="671.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (78 samples, 6.20%)</title><rect x="13.4340%" y="645" width="6.2003%" height="15" fill="rgb(222,175,15)" fg:x="169" fg:w="78"/><text x="13.6840%" y="655.50">engine::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (76 samples, 6.04%)</title><rect x="13.5930%" y="629" width="6.0413%" height="15" fill="rgb(223,85,34)" fg:x="171" fg:w="76"/><text x="13.8430%" y="639.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (27 samples, 2.15%)</title><rect x="17.4881%" y="613" width="2.1463%" height="15" fill="rgb(234,228,29)" fg:x="220" fg:w="27"/><text x="17.7381%" y="623.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 1.99%)</title><rect x="17.6471%" y="597" width="1.9873%" height="15" fill="rgb(239,7,28)" fg:x="222" fg:w="25"/><text x="17.8971%" y="607.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.91%)</title><rect x="17.7266%" y="581" width="1.9078%" height="15" fill="rgb(252,222,53)" fg:x="223" fg:w="24"/><text x="17.9766%" y="591.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.59%)</title><rect x="18.0445%" y="565" width="1.5898%" height="15" fill="rgb(232,146,44)" fg:x="227" fg:w="20"/><text x="18.2945%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (18 samples, 1.43%)</title><rect x="18.2035%" y="549" width="1.4308%" height="15" fill="rgb(243,223,53)" fg:x="229" fg:w="18"/><text x="18.4535%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="19.3959%" y="533" width="0.2385%" height="15" fill="rgb(219,128,25)" fg:x="244" fg:w="3"/><text x="19.6459%" y="543.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="19.3959%" y="517" width="0.2385%" height="15" fill="rgb(223,56,32)" fg:x="244" fg:w="3"/><text x="19.6459%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="19.6343%" y="677" width="0.0795%" height="15" fill="rgb(237,41,3)" fg:x="247" fg:w="1"/><text x="19.8843%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="19.6343%" y="661" width="0.0795%" height="15" fill="rgb(235,138,9)" fg:x="247" fg:w="1"/><text x="19.8843%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.6343%" y="645" width="0.0795%" height="15" fill="rgb(214,131,10)" fg:x="247" fg:w="1"/><text x="19.8843%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.6343%" y="629" width="0.0795%" height="15" fill="rgb(229,89,7)" fg:x="247" fg:w="1"/><text x="19.8843%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.6343%" y="613" width="0.0795%" height="15" fill="rgb(240,24,42)" fg:x="247" fg:w="1"/><text x="19.8843%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.6343%" y="597" width="0.0795%" height="15" fill="rgb(243,188,54)" fg:x="247" fg:w="1"/><text x="19.8843%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="19.6343%" y="581" width="0.0795%" height="15" fill="rgb(246,92,22)" fg:x="247" fg:w="1"/><text x="19.8843%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.6343%" y="565" width="0.0795%" height="15" fill="rgb(211,176,51)" fg:x="247" fg:w="1"/><text x="19.8843%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.6343%" y="549" width="0.0795%" height="15" fill="rgb(246,207,34)" fg:x="247" fg:w="1"/><text x="19.8843%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.6343%" y="533" width="0.0795%" height="15" fill="rgb(239,95,2)" fg:x="247" fg:w="1"/><text x="19.8843%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.6343%" y="517" width="0.0795%" height="15" fill="rgb(211,124,25)" fg:x="247" fg:w="1"/><text x="19.8843%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="19.6343%" y="501" width="0.0795%" height="15" fill="rgb(231,221,19)" fg:x="247" fg:w="1"/><text x="19.8843%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="19.6343%" y="485" width="0.0795%" height="15" fill="rgb(239,183,19)" fg:x="247" fg:w="1"/><text x="19.8843%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="19.6343%" y="469" width="0.0795%" height="15" fill="rgb(221,130,29)" fg:x="247" fg:w="1"/><text x="19.8843%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="19.6343%" y="453" width="0.0795%" height="15" fill="rgb(206,130,36)" fg:x="247" fg:w="1"/><text x="19.8843%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.6343%" y="437" width="0.0795%" height="15" fill="rgb(215,70,19)" fg:x="247" fg:w="1"/><text x="19.8843%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7138%" y="629" width="0.0795%" height="15" fill="rgb(244,16,43)" fg:x="248" fg:w="1"/><text x="19.9638%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7138%" y="613" width="0.0795%" height="15" fill="rgb(222,115,32)" fg:x="248" fg:w="1"/><text x="19.9638%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7138%" y="597" width="0.0795%" height="15" fill="rgb(247,48,25)" fg:x="248" fg:w="1"/><text x="19.9638%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="19.7138%" y="677" width="0.1590%" height="15" fill="rgb(226,180,51)" fg:x="248" fg:w="2"/><text x="19.9638%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="19.7138%" y="661" width="0.1590%" height="15" fill="rgb(217,142,42)" fg:x="248" fg:w="2"/><text x="19.9638%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.7138%" y="645" width="0.1590%" height="15" fill="rgb(220,178,3)" fg:x="248" fg:w="2"/><text x="19.9638%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7933%" y="629" width="0.0795%" height="15" fill="rgb(217,221,4)" fg:x="249" fg:w="1"/><text x="20.0433%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7933%" y="613" width="0.0795%" height="15" fill="rgb(237,63,43)" fg:x="249" fg:w="1"/><text x="20.0433%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7933%" y="597" width="0.0795%" height="15" fill="rgb(220,57,8)" fg:x="249" fg:w="1"/><text x="20.0433%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7933%" y="581" width="0.0795%" height="15" fill="rgb(254,186,27)" fg:x="249" fg:w="1"/><text x="20.0433%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.7933%" y="565" width="0.0795%" height="15" fill="rgb(251,57,28)" fg:x="249" fg:w="1"/><text x="20.0433%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7933%" y="549" width="0.0795%" height="15" fill="rgb(215,228,0)" fg:x="249" fg:w="1"/><text x="20.0433%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7933%" y="533" width="0.0795%" height="15" fill="rgb(237,218,39)" fg:x="249" fg:w="1"/><text x="20.0433%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7933%" y="517" width="0.0795%" height="15" fill="rgb(207,2,54)" fg:x="249" fg:w="1"/><text x="20.0433%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7933%" y="501" width="0.0795%" height="15" fill="rgb(232,76,50)" fg:x="249" fg:w="1"/><text x="20.0433%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.9523%" y="629" width="0.0795%" height="15" fill="rgb(211,85,31)" fg:x="251" fg:w="1"/><text x="20.2023%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.9523%" y="613" width="0.0795%" height="15" fill="rgb(223,210,27)" fg:x="251" fg:w="1"/><text x="20.2023%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.9523%" y="597" width="0.0795%" height="15" fill="rgb(254,36,8)" fg:x="251" fg:w="1"/><text x="20.2023%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="19.8728%" y="677" width="0.3180%" height="15" fill="rgb(213,4,25)" fg:x="250" fg:w="4"/><text x="20.1228%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="19.8728%" y="661" width="0.3180%" height="15" fill="rgb(224,2,39)" fg:x="250" fg:w="4"/><text x="20.1228%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="19.8728%" y="645" width="0.3180%" height="15" fill="rgb(208,8,39)" fg:x="250" fg:w="4"/><text x="20.1228%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.0318%" y="629" width="0.1590%" height="15" fill="rgb(216,226,3)" fg:x="252" fg:w="2"/><text x="20.2818%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.0318%" y="613" width="0.1590%" height="15" fill="rgb(249,139,31)" fg:x="252" fg:w="2"/><text x="20.2818%" y="623.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="20.1113%" y="597" width="0.0795%" height="15" fill="rgb(242,170,35)" fg:x="253" fg:w="1"/><text x="20.3613%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="20.2703%" y="629" width="0.0795%" height="15" fill="rgb(238,14,9)" fg:x="255" fg:w="1"/><text x="20.5203%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.2703%" y="613" width="0.0795%" height="15" fill="rgb(251,81,46)" fg:x="255" fg:w="1"/><text x="20.5203%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.2703%" y="597" width="0.0795%" height="15" fill="rgb(230,23,4)" fg:x="255" fg:w="1"/><text x="20.5203%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2703%" y="581" width="0.0795%" height="15" fill="rgb(211,85,25)" fg:x="255" fg:w="1"/><text x="20.5203%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.2703%" y="565" width="0.0795%" height="15" fill="rgb(252,23,31)" fg:x="255" fg:w="1"/><text x="20.5203%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2703%" y="549" width="0.0795%" height="15" fill="rgb(234,163,38)" fg:x="255" fg:w="1"/><text x="20.5203%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2703%" y="533" width="0.0795%" height="15" fill="rgb(210,190,50)" fg:x="255" fg:w="1"/><text x="20.5203%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3498%" y="597" width="0.0795%" height="15" fill="rgb(228,158,3)" fg:x="256" fg:w="1"/><text x="20.5998%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.3498%" y="581" width="0.0795%" height="15" fill="rgb(216,130,0)" fg:x="256" fg:w="1"/><text x="20.5998%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.3498%" y="565" width="0.0795%" height="15" fill="rgb(224,184,10)" fg:x="256" fg:w="1"/><text x="20.5998%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.3498%" y="549" width="0.0795%" height="15" fill="rgb(214,202,18)" fg:x="256" fg:w="1"/><text x="20.5998%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.3498%" y="533" width="0.0795%" height="15" fill="rgb(213,229,54)" fg:x="256" fg:w="1"/><text x="20.5998%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.3498%" y="517" width="0.0795%" height="15" fill="rgb(246,120,0)" fg:x="256" fg:w="1"/><text x="20.5998%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.3498%" y="501" width="0.0795%" height="15" fill="rgb(237,6,15)" fg:x="256" fg:w="1"/><text x="20.5998%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.3498%" y="485" width="0.0795%" height="15" fill="rgb(252,156,15)" fg:x="256" fg:w="1"/><text x="20.5998%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.3498%" y="469" width="0.0795%" height="15" fill="rgb(249,78,18)" fg:x="256" fg:w="1"/><text x="20.5998%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.3498%" y="453" width="0.0795%" height="15" fill="rgb(230,223,44)" fg:x="256" fg:w="1"/><text x="20.5998%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.3498%" y="437" width="0.0795%" height="15" fill="rgb(230,222,32)" fg:x="256" fg:w="1"/><text x="20.5998%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.3498%" y="421" width="0.0795%" height="15" fill="rgb(247,54,6)" fg:x="256" fg:w="1"/><text x="20.5998%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.95%)</title><rect x="19.6343%" y="693" width="0.9539%" height="15" fill="rgb(247,115,45)" fg:x="247" fg:w="12"/><text x="19.8843%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="20.1908%" y="677" width="0.3975%" height="15" fill="rgb(213,203,37)" fg:x="254" fg:w="5"/><text x="20.4408%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="20.1908%" y="661" width="0.3975%" height="15" fill="rgb(248,188,18)" fg:x="254" fg:w="5"/><text x="20.4408%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="20.2703%" y="645" width="0.3180%" height="15" fill="rgb(206,80,8)" fg:x="255" fg:w="4"/><text x="20.5203%" y="655.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="20.3498%" y="629" width="0.2385%" height="15" fill="rgb(245,217,31)" fg:x="256" fg:w="3"/><text x="20.5998%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="20.3498%" y="613" width="0.2385%" height="15" fill="rgb(220,193,15)" fg:x="256" fg:w="3"/><text x="20.5998%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="20.4293%" y="597" width="0.1590%" height="15" fill="rgb(226,7,19)" fg:x="257" fg:w="2"/><text x="20.6793%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.4293%" y="581" width="0.1590%" height="15" fill="rgb(222,145,31)" fg:x="257" fg:w="2"/><text x="20.6793%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="20.4293%" y="565" width="0.1590%" height="15" fill="rgb(241,193,36)" fg:x="257" fg:w="2"/><text x="20.6793%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.5087%" y="549" width="0.0795%" height="15" fill="rgb(225,123,33)" fg:x="258" fg:w="1"/><text x="20.7587%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.5087%" y="533" width="0.0795%" height="15" fill="rgb(246,136,38)" fg:x="258" fg:w="1"/><text x="20.7587%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="20.5087%" y="517" width="0.0795%" height="15" fill="rgb(243,56,24)" fg:x="258" fg:w="1"/><text x="20.7587%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5882%" y="549" width="0.0795%" height="15" fill="rgb(215,147,2)" fg:x="259" fg:w="1"/><text x="20.8382%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.5882%" y="565" width="0.1590%" height="15" fill="rgb(209,155,27)" fg:x="259" fg:w="2"/><text x="20.8382%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6677%" y="549" width="0.0795%" height="15" fill="rgb(222,177,11)" fg:x="260" fg:w="1"/><text x="20.9177%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.5882%" y="581" width="0.2385%" height="15" fill="rgb(212,227,15)" fg:x="259" fg:w="3"/><text x="20.8382%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7472%" y="565" width="0.0795%" height="15" fill="rgb(214,138,20)" fg:x="261" fg:w="1"/><text x="20.9972%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.5882%" y="645" width="0.3180%" height="15" fill="rgb(221,170,31)" fg:x="259" fg:w="4"/><text x="20.8382%" y="655.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="20.5882%" y="629" width="0.3180%" height="15" fill="rgb(253,207,5)" fg:x="259" fg:w="4"/><text x="20.8382%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="20.5882%" y="613" width="0.3180%" height="15" fill="rgb(212,64,37)" fg:x="259" fg:w="4"/><text x="20.8382%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="20.5882%" y="597" width="0.3180%" height="15" fill="rgb(208,113,51)" fg:x="259" fg:w="4"/><text x="20.8382%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.8267%" y="581" width="0.0795%" height="15" fill="rgb(237,15,5)" fg:x="262" fg:w="1"/><text x="21.0767%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="20.5882%" y="677" width="0.3975%" height="15" fill="rgb(238,33,18)" fg:x="259" fg:w="5"/><text x="20.8382%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="20.5882%" y="661" width="0.3975%" height="15" fill="rgb(253,206,50)" fg:x="259" fg:w="5"/><text x="20.8382%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="20.9062%" y="645" width="0.0795%" height="15" fill="rgb(242,158,43)" fg:x="263" fg:w="1"/><text x="21.1562%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="20.9062%" y="629" width="0.0795%" height="15" fill="rgb(213,125,27)" fg:x="263" fg:w="1"/><text x="21.1562%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.9062%" y="613" width="0.0795%" height="15" fill="rgb(233,161,31)" fg:x="263" fg:w="1"/><text x="21.1562%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9062%" y="597" width="0.0795%" height="15" fill="rgb(218,135,6)" fg:x="263" fg:w="1"/><text x="21.1562%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.9062%" y="581" width="0.0795%" height="15" fill="rgb(222,73,53)" fg:x="263" fg:w="1"/><text x="21.1562%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9062%" y="565" width="0.0795%" height="15" fill="rgb(229,66,53)" fg:x="263" fg:w="1"/><text x="21.1562%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.9062%" y="549" width="0.0795%" height="15" fill="rgb(208,128,19)" fg:x="263" fg:w="1"/><text x="21.1562%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="20.9857%" y="677" width="0.0795%" height="15" fill="rgb(235,70,27)" fg:x="264" fg:w="1"/><text x="21.2357%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.9857%" y="661" width="0.0795%" height="15" fill="rgb(241,130,30)" fg:x="264" fg:w="1"/><text x="21.2357%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9857%" y="645" width="0.0795%" height="15" fill="rgb(222,57,48)" fg:x="264" fg:w="1"/><text x="21.2357%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1447%" y="629" width="0.0795%" height="15" fill="rgb(225,204,29)" fg:x="266" fg:w="1"/><text x="21.3947%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.2242%" y="629" width="0.0795%" height="15" fill="rgb(240,196,35)" fg:x="267" fg:w="1"/><text x="21.4742%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.2242%" y="613" width="0.0795%" height="15" fill="rgb(215,150,16)" fg:x="267" fg:w="1"/><text x="21.4742%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="21.2242%" y="597" width="0.0795%" height="15" fill="rgb(209,170,13)" fg:x="267" fg:w="1"/><text x="21.4742%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="21.2242%" y="581" width="0.0795%" height="15" fill="rgb(235,75,31)" fg:x="267" fg:w="1"/><text x="21.4742%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="21.0652%" y="677" width="0.3180%" height="15" fill="rgb(252,1,47)" fg:x="265" fg:w="4"/><text x="21.3152%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="21.1447%" y="661" width="0.2385%" height="15" fill="rgb(241,2,36)" fg:x="266" fg:w="3"/><text x="21.3947%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="21.1447%" y="645" width="0.2385%" height="15" fill="rgb(236,191,4)" fg:x="266" fg:w="3"/><text x="21.3947%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.3037%" y="629" width="0.0795%" height="15" fill="rgb(212,65,35)" fg:x="268" fg:w="1"/><text x="21.5537%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="21.3037%" y="613" width="0.0795%" height="15" fill="rgb(209,49,33)" fg:x="268" fg:w="1"/><text x="21.5537%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.3037%" y="597" width="0.0795%" height="15" fill="rgb(208,36,46)" fg:x="268" fg:w="1"/><text x="21.5537%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.3037%" y="581" width="0.0795%" height="15" fill="rgb(210,125,2)" fg:x="268" fg:w="1"/><text x="21.5537%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.3037%" y="565" width="0.0795%" height="15" fill="rgb(225,62,6)" fg:x="268" fg:w="1"/><text x="21.5537%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3831%" y="565" width="0.0795%" height="15" fill="rgb(210,54,27)" fg:x="269" fg:w="1"/><text x="21.6331%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.3831%" y="549" width="0.0795%" height="15" fill="rgb(249,189,52)" fg:x="269" fg:w="1"/><text x="21.6331%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.3831%" y="581" width="0.1590%" height="15" fill="rgb(225,134,40)" fg:x="269" fg:w="2"/><text x="21.6331%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4626%" y="565" width="0.0795%" height="15" fill="rgb(206,13,37)" fg:x="270" fg:w="1"/><text x="21.7126%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.5421%" y="485" width="0.0795%" height="15" fill="rgb(232,114,28)" fg:x="271" fg:w="1"/><text x="21.7921%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.5421%" y="469" width="0.0795%" height="15" fill="rgb(253,215,8)" fg:x="271" fg:w="1"/><text x="21.7921%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="21.3831%" y="629" width="0.3180%" height="15" fill="rgb(254,64,19)" fg:x="269" fg:w="4"/><text x="21.6331%" y="639.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="21.3831%" y="613" width="0.3180%" height="15" fill="rgb(242,18,46)" fg:x="269" fg:w="4"/><text x="21.6331%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="21.3831%" y="597" width="0.3180%" height="15" fill="rgb(239,192,30)" fg:x="269" fg:w="4"/><text x="21.6331%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.5421%" y="581" width="0.1590%" height="15" fill="rgb(232,73,14)" fg:x="271" fg:w="2"/><text x="21.7921%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.5421%" y="565" width="0.1590%" height="15" fill="rgb(225,51,9)" fg:x="271" fg:w="2"/><text x="21.7921%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.5421%" y="549" width="0.1590%" height="15" fill="rgb(242,217,54)" fg:x="271" fg:w="2"/><text x="21.7921%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.5421%" y="533" width="0.1590%" height="15" fill="rgb(216,93,3)" fg:x="271" fg:w="2"/><text x="21.7921%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="21.5421%" y="517" width="0.1590%" height="15" fill="rgb(230,119,33)" fg:x="271" fg:w="2"/><text x="21.7921%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.5421%" y="501" width="0.1590%" height="15" fill="rgb(238,170,27)" fg:x="271" fg:w="2"/><text x="21.7921%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.6216%" y="485" width="0.0795%" height="15" fill="rgb(229,8,2)" fg:x="272" fg:w="1"/><text x="21.8716%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.6216%" y="469" width="0.0795%" height="15" fill="rgb(205,214,42)" fg:x="272" fg:w="1"/><text x="21.8716%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.6216%" y="453" width="0.0795%" height="15" fill="rgb(245,113,1)" fg:x="272" fg:w="1"/><text x="21.8716%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.6216%" y="437" width="0.0795%" height="15" fill="rgb(252,50,2)" fg:x="272" fg:w="1"/><text x="21.8716%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.7011%" y="581" width="0.0795%" height="15" fill="rgb(225,122,24)" fg:x="273" fg:w="1"/><text x="21.9511%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="21.3831%" y="661" width="0.4769%" height="15" fill="rgb(234,129,31)" fg:x="269" fg:w="6"/><text x="21.6331%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="21.3831%" y="645" width="0.4769%" height="15" fill="rgb(219,177,4)" fg:x="269" fg:w="6"/><text x="21.6331%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="21.7011%" y="629" width="0.1590%" height="15" fill="rgb(225,142,27)" fg:x="273" fg:w="2"/><text x="21.9511%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="21.7011%" y="613" width="0.1590%" height="15" fill="rgb(205,107,51)" fg:x="273" fg:w="2"/><text x="21.9511%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.7011%" y="597" width="0.1590%" height="15" fill="rgb(236,223,15)" fg:x="273" fg:w="2"/><text x="21.9511%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.7806%" y="581" width="0.0795%" height="15" fill="rgb(235,133,11)" fg:x="274" fg:w="1"/><text x="22.0306%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (29 samples, 2.31%)</title><rect x="19.6343%" y="709" width="2.3052%" height="15" fill="rgb(247,172,13)" fg:x="247" fg:w="29"/><text x="19.8843%" y="719.50">p..</text></g><g><title>plugins_core::tools::set_container (17 samples, 1.35%)</title><rect x="20.5882%" y="693" width="1.3514%" height="15" fill="rgb(233,191,41)" fg:x="259" fg:w="17"/><text x="20.8382%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="21.3831%" y="677" width="0.5564%" height="15" fill="rgb(250,65,16)" fg:x="269" fg:w="7"/><text x="21.6331%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="21.8601%" y="661" width="0.0795%" height="15" fill="rgb(206,10,27)" fg:x="275" fg:w="1"/><text x="22.1101%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.8601%" y="645" width="0.0795%" height="15" fill="rgb(212,96,22)" fg:x="275" fg:w="1"/><text x="22.1101%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="21.8601%" y="629" width="0.0795%" height="15" fill="rgb(206,50,0)" fg:x="275" fg:w="1"/><text x="22.1101%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="21.8601%" y="613" width="0.0795%" height="15" fill="rgb(249,105,52)" fg:x="275" fg:w="1"/><text x="22.1101%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.8601%" y="597" width="0.0795%" height="15" fill="rgb(216,93,51)" fg:x="275" fg:w="1"/><text x="22.1101%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.8601%" y="581" width="0.0795%" height="15" fill="rgb(217,172,13)" fg:x="275" fg:w="1"/><text x="22.1101%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.8601%" y="565" width="0.0795%" height="15" fill="rgb(235,199,38)" fg:x="275" fg:w="1"/><text x="22.1101%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.8601%" y="549" width="0.0795%" height="15" fill="rgb(221,97,33)" fg:x="275" fg:w="1"/><text x="22.1101%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="21.8601%" y="533" width="0.0795%" height="15" fill="rgb(205,156,50)" fg:x="275" fg:w="1"/><text x="22.1101%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="21.8601%" y="517" width="0.0795%" height="15" fill="rgb(215,142,19)" fg:x="275" fg:w="1"/><text x="22.1101%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9396%" y="629" width="0.0795%" height="15" fill="rgb(232,170,7)" fg:x="276" fg:w="1"/><text x="22.1896%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9396%" y="613" width="0.0795%" height="15" fill="rgb(223,50,17)" fg:x="276" fg:w="1"/><text x="22.1896%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9396%" y="597" width="0.0795%" height="15" fill="rgb(230,103,46)" fg:x="276" fg:w="1"/><text x="22.1896%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9396%" y="581" width="0.0795%" height="15" fill="rgb(254,30,34)" fg:x="276" fg:w="1"/><text x="22.1896%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9396%" y="565" width="0.0795%" height="15" fill="rgb(235,198,1)" fg:x="276" fg:w="1"/><text x="22.1896%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.9396%" y="549" width="0.0795%" height="15" fill="rgb(217,105,47)" fg:x="276" fg:w="1"/><text x="22.1896%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.9396%" y="533" width="0.0795%" height="15" fill="rgb(231,18,12)" fg:x="276" fg:w="1"/><text x="22.1896%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.9396%" y="517" width="0.0795%" height="15" fill="rgb(218,196,1)" fg:x="276" fg:w="1"/><text x="22.1896%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9396%" y="501" width="0.0795%" height="15" fill="rgb(210,32,3)" fg:x="276" fg:w="1"/><text x="22.1896%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9396%" y="485" width="0.0795%" height="15" fill="rgb(227,178,30)" fg:x="276" fg:w="1"/><text x="22.1896%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.9396%" y="469" width="0.0795%" height="15" fill="rgb(231,140,27)" fg:x="276" fg:w="1"/><text x="22.1896%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.9396%" y="453" width="0.0795%" height="15" fill="rgb(206,66,35)" fg:x="276" fg:w="1"/><text x="22.1896%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.9396%" y="437" width="0.0795%" height="15" fill="rgb(212,34,2)" fg:x="276" fg:w="1"/><text x="22.1896%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.9396%" y="421" width="0.0795%" height="15" fill="rgb(207,201,33)" fg:x="276" fg:w="1"/><text x="22.1896%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.9396%" y="405" width="0.0795%" height="15" fill="rgb(221,135,32)" fg:x="276" fg:w="1"/><text x="22.1896%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.0191%" y="629" width="0.0795%" height="15" fill="rgb(206,77,31)" fg:x="277" fg:w="1"/><text x="22.2691%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.0191%" y="613" width="0.0795%" height="15" fill="rgb(252,198,50)" fg:x="277" fg:w="1"/><text x="22.2691%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.0191%" y="597" width="0.0795%" height="15" fill="rgb(206,79,27)" fg:x="277" fg:w="1"/><text x="22.2691%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.0191%" y="581" width="0.0795%" height="15" fill="rgb(228,108,9)" fg:x="277" fg:w="1"/><text x="22.2691%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0191%" y="565" width="0.0795%" height="15" fill="rgb(213,9,39)" fg:x="277" fg:w="1"/><text x="22.2691%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="21.9396%" y="709" width="0.2385%" height="15" fill="rgb(252,51,13)" fg:x="276" fg:w="3"/><text x="22.1896%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="21.9396%" y="693" width="0.2385%" height="15" fill="rgb(218,202,39)" fg:x="276" fg:w="3"/><text x="22.1896%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="21.9396%" y="677" width="0.2385%" height="15" fill="rgb(214,122,21)" fg:x="276" fg:w="3"/><text x="22.1896%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="21.9396%" y="661" width="0.2385%" height="15" fill="rgb(217,205,48)" fg:x="276" fg:w="3"/><text x="22.1896%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="21.9396%" y="645" width="0.2385%" height="15" fill="rgb(230,216,13)" fg:x="276" fg:w="3"/><text x="22.1896%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0986%" y="629" width="0.0795%" height="15" fill="rgb(249,118,4)" fg:x="278" fg:w="1"/><text x="22.3486%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0986%" y="613" width="0.0795%" height="15" fill="rgb(212,207,40)" fg:x="278" fg:w="1"/><text x="22.3486%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0986%" y="597" width="0.0795%" height="15" fill="rgb(217,156,26)" fg:x="278" fg:w="1"/><text x="22.3486%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0986%" y="581" width="0.0795%" height="15" fill="rgb(226,86,34)" fg:x="278" fg:w="1"/><text x="22.3486%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.0986%" y="565" width="0.0795%" height="15" fill="rgb(217,111,30)" fg:x="278" fg:w="1"/><text x="22.3486%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0986%" y="549" width="0.0795%" height="15" fill="rgb(228,64,18)" fg:x="278" fg:w="1"/><text x="22.3486%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0986%" y="533" width="0.0795%" height="15" fill="rgb(254,217,48)" fg:x="278" fg:w="1"/><text x="22.3486%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0986%" y="517" width="0.0795%" height="15" fill="rgb(226,156,48)" fg:x="278" fg:w="1"/><text x="22.3486%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0986%" y="501" width="0.0795%" height="15" fill="rgb(236,168,20)" fg:x="278" fg:w="1"/><text x="22.3486%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0986%" y="485" width="0.0795%" height="15" fill="rgb(239,210,33)" fg:x="278" fg:w="1"/><text x="22.3486%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0986%" y="469" width="0.0795%" height="15" fill="rgb(242,85,17)" fg:x="278" fg:w="1"/><text x="22.3486%" y="479.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="22.2576%" y="677" width="0.0795%" height="15" fill="rgb(221,196,15)" fg:x="280" fg:w="1"/><text x="22.5076%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.2576%" y="661" width="0.0795%" height="15" fill="rgb(249,76,21)" fg:x="280" fg:w="1"/><text x="22.5076%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.2576%" y="645" width="0.0795%" height="15" fill="rgb(243,67,29)" fg:x="280" fg:w="1"/><text x="22.5076%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="22.2576%" y="629" width="0.0795%" height="15" fill="rgb(240,159,2)" fg:x="280" fg:w="1"/><text x="22.5076%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="22.1781%" y="709" width="0.3180%" height="15" fill="rgb(244,64,3)" fg:x="279" fg:w="4"/><text x="22.4281%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="22.1781%" y="693" width="0.3180%" height="15" fill="rgb(220,86,40)" fg:x="279" fg:w="4"/><text x="22.4281%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="22.3370%" y="677" width="0.1590%" height="15" fill="rgb(222,194,51)" fg:x="281" fg:w="2"/><text x="22.5870%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="22.3370%" y="661" width="0.1590%" height="15" fill="rgb(207,154,19)" fg:x="281" fg:w="2"/><text x="22.5870%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4165%" y="645" width="0.0795%" height="15" fill="rgb(206,178,36)" fg:x="282" fg:w="1"/><text x="22.6665%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4165%" y="629" width="0.0795%" height="15" fill="rgb(218,8,24)" fg:x="282" fg:w="1"/><text x="22.6665%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.4960%" y="677" width="0.0795%" height="15" fill="rgb(226,83,41)" fg:x="283" fg:w="1"/><text x="22.7460%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.4960%" y="661" width="0.0795%" height="15" fill="rgb(224,23,22)" fg:x="283" fg:w="1"/><text x="22.7460%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.4960%" y="645" width="0.0795%" height="15" fill="rgb(218,198,45)" fg:x="283" fg:w="1"/><text x="22.7460%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4960%" y="629" width="0.0795%" height="15" fill="rgb(249,147,41)" fg:x="283" fg:w="1"/><text x="22.7460%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4960%" y="613" width="0.0795%" height="15" fill="rgb(244,224,13)" fg:x="283" fg:w="1"/><text x="22.7460%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4960%" y="597" width="0.0795%" height="15" fill="rgb(225,97,27)" fg:x="283" fg:w="1"/><text x="22.7460%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4960%" y="581" width="0.0795%" height="15" fill="rgb(254,64,0)" fg:x="283" fg:w="1"/><text x="22.7460%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.4960%" y="565" width="0.0795%" height="15" fill="rgb(208,130,43)" fg:x="283" fg:w="1"/><text x="22.7460%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4960%" y="549" width="0.0795%" height="15" fill="rgb(247,91,25)" fg:x="283" fg:w="1"/><text x="22.7460%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="22.5755%" y="661" width="0.0795%" height="15" fill="rgb(215,218,42)" fg:x="284" fg:w="1"/><text x="22.8255%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.5755%" y="645" width="0.0795%" height="15" fill="rgb(233,9,24)" fg:x="284" fg:w="1"/><text x="22.8255%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5755%" y="629" width="0.0795%" height="15" fill="rgb(252,105,38)" fg:x="284" fg:w="1"/><text x="22.8255%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5755%" y="613" width="0.0795%" height="15" fill="rgb(225,40,49)" fg:x="284" fg:w="1"/><text x="22.8255%" y="623.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="22.5755%" y="597" width="0.0795%" height="15" fill="rgb(232,196,19)" fg:x="284" fg:w="1"/><text x="22.8255%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="22.5755%" y="677" width="0.2385%" height="15" fill="rgb(207,35,15)" fg:x="284" fg:w="3"/><text x="22.8255%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="22.6550%" y="661" width="0.1590%" height="15" fill="rgb(238,68,36)" fg:x="285" fg:w="2"/><text x="22.9050%" y="671.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="22.6550%" y="645" width="0.1590%" height="15" fill="rgb(205,158,20)" fg:x="285" fg:w="2"/><text x="22.9050%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.6550%" y="629" width="0.1590%" height="15" fill="rgb(232,32,22)" fg:x="285" fg:w="2"/><text x="22.9050%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="22.7345%" y="613" width="0.0795%" height="15" fill="rgb(210,169,6)" fg:x="286" fg:w="1"/><text x="22.9845%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.8140%" y="597" width="0.0795%" height="15" fill="rgb(229,28,12)" fg:x="287" fg:w="1"/><text x="23.0640%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="22.8935%" y="501" width="0.0795%" height="15" fill="rgb(229,78,10)" fg:x="288" fg:w="1"/><text x="23.1435%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="22.4960%" y="693" width="0.5564%" height="15" fill="rgb(223,139,54)" fg:x="283" fg:w="7"/><text x="22.7460%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="22.8140%" y="677" width="0.2385%" height="15" fill="rgb(207,110,4)" fg:x="287" fg:w="3"/><text x="23.0640%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="22.8140%" y="661" width="0.2385%" height="15" fill="rgb(248,30,41)" fg:x="287" fg:w="3"/><text x="23.0640%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="22.8140%" y="645" width="0.2385%" height="15" fill="rgb(235,54,25)" fg:x="287" fg:w="3"/><text x="23.0640%" y="655.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="22.8140%" y="629" width="0.2385%" height="15" fill="rgb(213,107,41)" fg:x="287" fg:w="3"/><text x="23.0640%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.8140%" y="613" width="0.2385%" height="15" fill="rgb(237,102,9)" fg:x="287" fg:w="3"/><text x="23.0640%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="22.8935%" y="597" width="0.1590%" height="15" fill="rgb(252,137,49)" fg:x="288" fg:w="2"/><text x="23.1435%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.8935%" y="581" width="0.1590%" height="15" fill="rgb(233,202,33)" fg:x="288" fg:w="2"/><text x="23.1435%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="22.8935%" y="565" width="0.1590%" height="15" fill="rgb(223,14,51)" fg:x="288" fg:w="2"/><text x="23.1435%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.8935%" y="549" width="0.1590%" height="15" fill="rgb(248,70,23)" fg:x="288" fg:w="2"/><text x="23.1435%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="22.8935%" y="533" width="0.1590%" height="15" fill="rgb(209,207,47)" fg:x="288" fg:w="2"/><text x="23.1435%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="22.8935%" y="517" width="0.1590%" height="15" fill="rgb(245,124,2)" fg:x="288" fg:w="2"/><text x="23.1435%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9730%" y="501" width="0.0795%" height="15" fill="rgb(249,208,11)" fg:x="289" fg:w="1"/><text x="23.2230%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.0525%" y="677" width="0.0795%" height="15" fill="rgb(247,112,7)" fg:x="290" fg:w="1"/><text x="23.3025%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.1320%" y="645" width="0.0795%" height="15" fill="rgb(209,192,31)" fg:x="291" fg:w="1"/><text x="23.3820%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.1320%" y="629" width="0.0795%" height="15" fill="rgb(236,55,19)" fg:x="291" fg:w="1"/><text x="23.3820%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.1320%" y="613" width="0.0795%" height="15" fill="rgb(252,89,41)" fg:x="291" fg:w="1"/><text x="23.3820%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.1320%" y="597" width="0.0795%" height="15" fill="rgb(220,172,14)" fg:x="291" fg:w="1"/><text x="23.3820%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.1320%" y="581" width="0.0795%" height="15" fill="rgb(252,65,2)" fg:x="291" fg:w="1"/><text x="23.3820%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.1320%" y="565" width="0.0795%" height="15" fill="rgb(250,20,8)" fg:x="291" fg:w="1"/><text x="23.3820%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.1320%" y="549" width="0.0795%" height="15" fill="rgb(234,149,13)" fg:x="291" fg:w="1"/><text x="23.3820%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.1320%" y="533" width="0.0795%" height="15" fill="rgb(223,219,12)" fg:x="291" fg:w="1"/><text x="23.3820%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.1320%" y="517" width="0.0795%" height="15" fill="rgb(234,13,49)" fg:x="291" fg:w="1"/><text x="23.3820%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2114%" y="597" width="0.0795%" height="15" fill="rgb(214,41,25)" fg:x="292" fg:w="1"/><text x="23.4614%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2114%" y="581" width="0.0795%" height="15" fill="rgb(232,198,52)" fg:x="292" fg:w="1"/><text x="23.4614%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2114%" y="565" width="0.0795%" height="15" fill="rgb(236,111,46)" fg:x="292" fg:w="1"/><text x="23.4614%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2114%" y="549" width="0.0795%" height="15" fill="rgb(253,30,20)" fg:x="292" fg:w="1"/><text x="23.4614%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2114%" y="533" width="0.0795%" height="15" fill="rgb(247,141,17)" fg:x="292" fg:w="1"/><text x="23.4614%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="23.1320%" y="677" width="0.3180%" height="15" fill="rgb(214,195,21)" fg:x="291" fg:w="4"/><text x="23.3820%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="23.1320%" y="661" width="0.3180%" height="15" fill="rgb(214,98,12)" fg:x="291" fg:w="4"/><text x="23.3820%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="23.2114%" y="645" width="0.2385%" height="15" fill="rgb(239,4,26)" fg:x="292" fg:w="3"/><text x="23.4614%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="23.2114%" y="629" width="0.2385%" height="15" fill="rgb(234,210,35)" fg:x="292" fg:w="3"/><text x="23.4614%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="23.2114%" y="613" width="0.2385%" height="15" fill="rgb(252,178,27)" fg:x="292" fg:w="3"/><text x="23.4614%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.2909%" y="597" width="0.1590%" height="15" fill="rgb(217,50,1)" fg:x="293" fg:w="2"/><text x="23.5409%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.2909%" y="581" width="0.1590%" height="15" fill="rgb(233,137,5)" fg:x="293" fg:w="2"/><text x="23.5409%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.3704%" y="565" width="0.0795%" height="15" fill="rgb(217,227,25)" fg:x="294" fg:w="1"/><text x="23.6204%" y="575.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4499%" y="661" width="0.0795%" height="15" fill="rgb(242,89,38)" fg:x="295" fg:w="1"/><text x="23.6999%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4499%" y="645" width="0.0795%" height="15" fill="rgb(212,190,30)" fg:x="295" fg:w="1"/><text x="23.6999%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.4499%" y="629" width="0.0795%" height="15" fill="rgb(222,120,8)" fg:x="295" fg:w="1"/><text x="23.6999%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4499%" y="613" width="0.0795%" height="15" fill="rgb(227,181,9)" fg:x="295" fg:w="1"/><text x="23.6999%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4499%" y="597" width="0.0795%" height="15" fill="rgb(222,125,29)" fg:x="295" fg:w="1"/><text x="23.6999%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.4499%" y="581" width="0.0795%" height="15" fill="rgb(215,153,31)" fg:x="295" fg:w="1"/><text x="23.6999%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.4499%" y="677" width="0.1590%" height="15" fill="rgb(228,77,30)" fg:x="295" fg:w="2"/><text x="23.6999%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="23.5294%" y="661" width="0.0795%" height="15" fill="rgb(226,110,9)" fg:x="296" fg:w="1"/><text x="23.7794%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5294%" y="645" width="0.0795%" height="15" fill="rgb(219,111,7)" fg:x="296" fg:w="1"/><text x="23.7794%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5294%" y="629" width="0.0795%" height="15" fill="rgb(229,167,25)" fg:x="296" fg:w="1"/><text x="23.7794%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.6089%" y="549" width="0.0795%" height="15" fill="rgb(209,77,43)" fg:x="297" fg:w="1"/><text x="23.8589%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6089%" y="533" width="0.0795%" height="15" fill="rgb(233,70,39)" fg:x="297" fg:w="1"/><text x="23.8589%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.6089%" y="629" width="0.1590%" height="15" fill="rgb(207,171,44)" fg:x="297" fg:w="2"/><text x="23.8589%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.6089%" y="613" width="0.1590%" height="15" fill="rgb(244,91,6)" fg:x="297" fg:w="2"/><text x="23.8589%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.6089%" y="597" width="0.1590%" height="15" fill="rgb(234,136,12)" fg:x="297" fg:w="2"/><text x="23.8589%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.6089%" y="581" width="0.1590%" height="15" fill="rgb(216,210,38)" fg:x="297" fg:w="2"/><text x="23.8589%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="23.6089%" y="565" width="0.1590%" height="15" fill="rgb(241,227,7)" fg:x="297" fg:w="2"/><text x="23.8589%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6884%" y="549" width="0.0795%" height="15" fill="rgb(241,222,11)" fg:x="298" fg:w="1"/><text x="23.9384%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6884%" y="533" width="0.0795%" height="15" fill="rgb(246,86,18)" fg:x="298" fg:w="1"/><text x="23.9384%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6884%" y="517" width="0.0795%" height="15" fill="rgb(224,151,49)" fg:x="298" fg:w="1"/><text x="23.9384%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6884%" y="501" width="0.0795%" height="15" fill="rgb(235,4,41)" fg:x="298" fg:w="1"/><text x="23.9384%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7679%" y="565" width="0.0795%" height="15" fill="rgb(218,30,52)" fg:x="299" fg:w="1"/><text x="24.0179%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7679%" y="549" width="0.0795%" height="15" fill="rgb(205,124,51)" fg:x="299" fg:w="1"/><text x="24.0179%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7679%" y="533" width="0.0795%" height="15" fill="rgb(237,126,51)" fg:x="299" fg:w="1"/><text x="24.0179%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.7679%" y="581" width="0.1590%" height="15" fill="rgb(225,32,46)" fg:x="299" fg:w="2"/><text x="24.0179%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8474%" y="565" width="0.0795%" height="15" fill="rgb(251,60,49)" fg:x="300" fg:w="1"/><text x="24.0974%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (164 samples, 13.04%)</title><rect x="10.9698%" y="725" width="13.0366%" height="15" fill="rgb(234,18,23)" fg:x="138" fg:w="164"/><text x="11.2198%" y="735.50">plugins_core::build:..</text></g><g><title>plugins_core::build::Build::occupying (19 samples, 1.51%)</title><rect x="22.4960%" y="709" width="1.5103%" height="15" fill="rgb(234,25,23)" fg:x="283" fg:w="19"/><text x="22.7460%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (12 samples, 0.95%)</title><rect x="23.0525%" y="693" width="0.9539%" height="15" fill="rgb(210,43,52)" fg:x="290" fg:w="12"/><text x="23.3025%" y="703.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (5 samples, 0.40%)</title><rect x="23.6089%" y="677" width="0.3975%" height="15" fill="rgb(237,198,21)" fg:x="297" fg:w="5"/><text x="23.8589%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="23.6089%" y="661" width="0.3975%" height="15" fill="rgb(211,20,34)" fg:x="297" fg:w="5"/><text x="23.8589%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="23.6089%" y="645" width="0.3975%" height="15" fill="rgb(221,155,50)" fg:x="297" fg:w="5"/><text x="23.8589%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="23.7679%" y="629" width="0.2385%" height="15" fill="rgb(213,214,53)" fg:x="299" fg:w="3"/><text x="24.0179%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="23.7679%" y="613" width="0.2385%" height="15" fill="rgb(215,229,48)" fg:x="299" fg:w="3"/><text x="24.0179%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="23.7679%" y="597" width="0.2385%" height="15" fill="rgb(243,88,5)" fg:x="299" fg:w="3"/><text x="24.0179%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.9269%" y="581" width="0.0795%" height="15" fill="rgb(216,199,8)" fg:x="301" fg:w="1"/><text x="24.1769%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.9269%" y="565" width="0.0795%" height="15" fill="rgb(241,22,4)" fg:x="301" fg:w="1"/><text x="24.1769%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.9269%" y="549" width="0.0795%" height="15" fill="rgb(209,190,22)" fg:x="301" fg:w="1"/><text x="24.1769%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.9269%" y="533" width="0.0795%" height="15" fill="rgb(251,138,45)" fg:x="301" fg:w="1"/><text x="24.1769%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.9269%" y="517" width="0.0795%" height="15" fill="rgb(219,111,22)" fg:x="301" fg:w="1"/><text x="24.1769%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.9269%" y="501" width="0.0795%" height="15" fill="rgb(253,29,49)" fg:x="301" fg:w="1"/><text x="24.1769%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.9269%" y="485" width="0.0795%" height="15" fill="rgb(238,129,49)" fg:x="301" fg:w="1"/><text x="24.1769%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9269%" y="469" width="0.0795%" height="15" fill="rgb(240,26,41)" fg:x="301" fg:w="1"/><text x="24.1769%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="24.0064%" y="725" width="0.0795%" height="15" fill="rgb(221,47,33)" fg:x="302" fg:w="1"/><text x="24.2564%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="24.0064%" y="709" width="0.0795%" height="15" fill="rgb(216,200,17)" fg:x="302" fg:w="1"/><text x="24.2564%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="24.0064%" y="693" width="0.0795%" height="15" fill="rgb(230,151,26)" fg:x="302" fg:w="1"/><text x="24.2564%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="24.2448%" y="677" width="0.0795%" height="15" fill="rgb(242,182,16)" fg:x="305" fg:w="1"/><text x="24.4948%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.4038%" y="597" width="0.0795%" height="15" fill="rgb(236,35,53)" fg:x="307" fg:w="1"/><text x="24.6538%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="24.3243%" y="677" width="0.2385%" height="15" fill="rgb(214,180,28)" fg:x="306" fg:w="3"/><text x="24.5743%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="24.3243%" y="661" width="0.2385%" height="15" fill="rgb(208,173,36)" fg:x="306" fg:w="3"/><text x="24.5743%" y="671.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (3 samples, 0.24%)</title><rect x="24.3243%" y="645" width="0.2385%" height="15" fill="rgb(218,39,15)" fg:x="306" fg:w="3"/><text x="24.5743%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.3243%" y="629" width="0.2385%" height="15" fill="rgb(213,145,15)" fg:x="306" fg:w="3"/><text x="24.5743%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="24.3243%" y="613" width="0.2385%" height="15" fill="rgb(242,110,37)" fg:x="306" fg:w="3"/><text x="24.5743%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="24.4833%" y="597" width="0.0795%" height="15" fill="rgb(247,146,22)" fg:x="308" fg:w="1"/><text x="24.7333%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="24.4833%" y="581" width="0.0795%" height="15" fill="rgb(215,191,7)" fg:x="308" fg:w="1"/><text x="24.7333%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.5628%" y="533" width="0.1590%" height="15" fill="rgb(240,158,1)" fg:x="309" fg:w="2"/><text x="24.8128%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.5628%" y="517" width="0.1590%" height="15" fill="rgb(241,78,32)" fg:x="309" fg:w="2"/><text x="24.8128%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.5628%" y="501" width="0.1590%" height="15" fill="rgb(248,83,10)" fg:x="309" fg:w="2"/><text x="24.8128%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="24.0859%" y="693" width="0.7154%" height="15" fill="rgb(241,52,0)" fg:x="303" fg:w="9"/><text x="24.3359%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="24.5628%" y="677" width="0.2385%" height="15" fill="rgb(238,37,13)" fg:x="309" fg:w="3"/><text x="24.8128%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="24.5628%" y="661" width="0.2385%" height="15" fill="rgb(242,194,17)" fg:x="309" fg:w="3"/><text x="24.8128%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="24.5628%" y="645" width="0.2385%" height="15" fill="rgb(236,96,3)" fg:x="309" fg:w="3"/><text x="24.8128%" y="655.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="24.5628%" y="629" width="0.2385%" height="15" fill="rgb(235,148,34)" fg:x="309" fg:w="3"/><text x="24.8128%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="24.5628%" y="613" width="0.2385%" height="15" fill="rgb(254,12,11)" fg:x="309" fg:w="3"/><text x="24.8128%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="24.5628%" y="597" width="0.2385%" height="15" fill="rgb(207,31,54)" fg:x="309" fg:w="3"/><text x="24.8128%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.5628%" y="581" width="0.2385%" height="15" fill="rgb(252,14,28)" fg:x="309" fg:w="3"/><text x="24.8128%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="24.5628%" y="565" width="0.2385%" height="15" fill="rgb(252,108,36)" fg:x="309" fg:w="3"/><text x="24.8128%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.5628%" y="549" width="0.2385%" height="15" fill="rgb(214,149,7)" fg:x="309" fg:w="3"/><text x="24.8128%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.7218%" y="533" width="0.0795%" height="15" fill="rgb(243,94,12)" fg:x="311" fg:w="1"/><text x="24.9718%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.7218%" y="517" width="0.0795%" height="15" fill="rgb(208,36,10)" fg:x="311" fg:w="1"/><text x="24.9718%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8013%" y="629" width="0.0795%" height="15" fill="rgb(233,185,52)" fg:x="312" fg:w="1"/><text x="25.0513%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8013%" y="613" width="0.0795%" height="15" fill="rgb(234,50,45)" fg:x="312" fg:w="1"/><text x="25.0513%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.8013%" y="597" width="0.0795%" height="15" fill="rgb(228,92,54)" fg:x="312" fg:w="1"/><text x="25.0513%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8013%" y="581" width="0.0795%" height="15" fill="rgb(224,85,25)" fg:x="312" fg:w="1"/><text x="25.0513%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (11 samples, 0.87%)</title><rect x="24.0859%" y="725" width="0.8744%" height="15" fill="rgb(246,1,45)" fg:x="303" fg:w="11"/><text x="24.3359%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.87%)</title><rect x="24.0859%" y="709" width="0.8744%" height="15" fill="rgb(240,66,23)" fg:x="303" fg:w="11"/><text x="24.3359%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="24.8013%" y="693" width="0.1590%" height="15" fill="rgb(222,96,27)" fg:x="312" fg:w="2"/><text x="25.0513%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="24.8013%" y="677" width="0.1590%" height="15" fill="rgb(212,136,10)" fg:x="312" fg:w="2"/><text x="25.0513%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="24.8013%" y="661" width="0.1590%" height="15" fill="rgb(226,192,50)" fg:x="312" fg:w="2"/><text x="25.0513%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="24.8013%" y="645" width="0.1590%" height="15" fill="rgb(241,182,31)" fg:x="312" fg:w="2"/><text x="25.0513%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="24.8808%" y="629" width="0.0795%" height="15" fill="rgb(219,205,47)" fg:x="313" fg:w="1"/><text x="25.1308%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.8808%" y="613" width="0.0795%" height="15" fill="rgb(207,96,14)" fg:x="313" fg:w="1"/><text x="25.1308%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="24.8808%" y="597" width="0.0795%" height="15" fill="rgb(216,119,9)" fg:x="313" fg:w="1"/><text x="25.1308%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.8808%" y="581" width="0.0795%" height="15" fill="rgb(235,62,36)" fg:x="313" fg:w="1"/><text x="25.1308%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.8808%" y="565" width="0.0795%" height="15" fill="rgb(214,41,27)" fg:x="313" fg:w="1"/><text x="25.1308%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="24.8808%" y="549" width="0.0795%" height="15" fill="rgb(214,174,37)" fg:x="313" fg:w="1"/><text x="25.1308%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.8808%" y="533" width="0.0795%" height="15" fill="rgb(212,11,25)" fg:x="313" fg:w="1"/><text x="25.1308%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="24.8808%" y="517" width="0.0795%" height="15" fill="rgb(217,71,35)" fg:x="313" fg:w="1"/><text x="25.1308%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="24.8808%" y="501" width="0.0795%" height="15" fill="rgb(234,152,9)" fg:x="313" fg:w="1"/><text x="25.1308%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="24.9603%" y="677" width="0.0795%" height="15" fill="rgb(228,32,51)" fg:x="314" fg:w="1"/><text x="25.2103%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="24.9603%" y="661" width="0.0795%" height="15" fill="rgb(209,14,47)" fg:x="314" fg:w="1"/><text x="25.2103%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="24.9603%" y="693" width="0.1590%" height="15" fill="rgb(218,201,17)" fg:x="314" fg:w="2"/><text x="25.2103%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="25.0397%" y="677" width="0.0795%" height="15" fill="rgb(218,98,15)" fg:x="315" fg:w="1"/><text x="25.2897%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.0397%" y="661" width="0.0795%" height="15" fill="rgb(233,202,29)" fg:x="315" fg:w="1"/><text x="25.2897%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.0397%" y="645" width="0.0795%" height="15" fill="rgb(207,196,44)" fg:x="315" fg:w="1"/><text x="25.2897%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.0397%" y="629" width="0.0795%" height="15" fill="rgb(218,63,34)" fg:x="315" fg:w="1"/><text x="25.2897%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.0397%" y="613" width="0.0795%" height="15" fill="rgb(209,10,5)" fg:x="315" fg:w="1"/><text x="25.2897%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.0397%" y="597" width="0.0795%" height="15" fill="rgb(224,36,28)" fg:x="315" fg:w="1"/><text x="25.2897%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0397%" y="581" width="0.0795%" height="15" fill="rgb(249,178,7)" fg:x="315" fg:w="1"/><text x="25.2897%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="25.1192%" y="693" width="0.2385%" height="15" fill="rgb(253,163,10)" fg:x="316" fg:w="3"/><text x="25.3692%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="25.1192%" y="677" width="0.2385%" height="15" fill="rgb(245,67,46)" fg:x="316" fg:w="3"/><text x="25.3692%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.1192%" y="661" width="0.2385%" height="15" fill="rgb(225,14,18)" fg:x="316" fg:w="3"/><text x="25.3692%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2782%" y="645" width="0.0795%" height="15" fill="rgb(217,41,54)" fg:x="318" fg:w="1"/><text x="25.5282%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2782%" y="629" width="0.0795%" height="15" fill="rgb(222,111,11)" fg:x="318" fg:w="1"/><text x="25.5282%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2782%" y="613" width="0.0795%" height="15" fill="rgb(211,85,31)" fg:x="318" fg:w="1"/><text x="25.5282%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2782%" y="597" width="0.0795%" height="15" fill="rgb(223,29,26)" fg:x="318" fg:w="1"/><text x="25.5282%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.2782%" y="581" width="0.0795%" height="15" fill="rgb(236,124,50)" fg:x="318" fg:w="1"/><text x="25.5282%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2782%" y="565" width="0.0795%" height="15" fill="rgb(219,148,15)" fg:x="318" fg:w="1"/><text x="25.5282%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2782%" y="549" width="0.0795%" height="15" fill="rgb(248,159,33)" fg:x="318" fg:w="1"/><text x="25.5282%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2782%" y="533" width="0.0795%" height="15" fill="rgb(252,65,8)" fg:x="318" fg:w="1"/><text x="25.5282%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.2782%" y="517" width="0.0795%" height="15" fill="rgb(236,45,7)" fg:x="318" fg:w="1"/><text x="25.5282%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.2782%" y="501" width="0.0795%" height="15" fill="rgb(244,3,48)" fg:x="318" fg:w="1"/><text x="25.5282%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.3577%" y="645" width="0.0795%" height="15" fill="rgb(224,123,53)" fg:x="319" fg:w="1"/><text x="25.6077%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.3577%" y="629" width="0.0795%" height="15" fill="rgb(223,173,15)" fg:x="319" fg:w="1"/><text x="25.6077%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.3577%" y="613" width="0.0795%" height="15" fill="rgb(254,181,5)" fg:x="319" fg:w="1"/><text x="25.6077%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.3577%" y="597" width="0.0795%" height="15" fill="rgb(243,124,33)" fg:x="319" fg:w="1"/><text x="25.6077%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="24.9603%" y="709" width="0.5564%" height="15" fill="rgb(253,220,11)" fg:x="314" fg:w="7"/><text x="25.2103%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="25.3577%" y="693" width="0.1590%" height="15" fill="rgb(217,14,4)" fg:x="319" fg:w="2"/><text x="25.6077%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="25.3577%" y="677" width="0.1590%" height="15" fill="rgb(209,196,12)" fg:x="319" fg:w="2"/><text x="25.6077%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="25.3577%" y="661" width="0.1590%" height="15" fill="rgb(237,108,29)" fg:x="319" fg:w="2"/><text x="25.6077%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="25.4372%" y="645" width="0.0795%" height="15" fill="rgb(216,173,20)" fg:x="320" fg:w="1"/><text x="25.6872%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.4372%" y="629" width="0.0795%" height="15" fill="rgb(245,27,6)" fg:x="320" fg:w="1"/><text x="25.6872%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.4372%" y="613" width="0.0795%" height="15" fill="rgb(210,181,20)" fg:x="320" fg:w="1"/><text x="25.6872%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.4372%" y="597" width="0.0795%" height="15" fill="rgb(235,213,1)" fg:x="320" fg:w="1"/><text x="25.6872%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.4372%" y="581" width="0.0795%" height="15" fill="rgb(239,68,43)" fg:x="320" fg:w="1"/><text x="25.6872%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.4372%" y="565" width="0.0795%" height="15" fill="rgb(254,137,43)" fg:x="320" fg:w="1"/><text x="25.6872%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.5167%" y="661" width="0.0795%" height="15" fill="rgb(252,170,38)" fg:x="321" fg:w="1"/><text x="25.7667%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (291 samples, 23.13%)</title><rect x="2.5437%" y="741" width="23.1320%" height="15" fill="rgb(234,21,42)" fg:x="32" fg:w="291"/><text x="2.7937%" y="751.50">&lt;tests::HoldingKeyInVessel as tests::..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (9 samples, 0.72%)</title><rect x="24.9603%" y="725" width="0.7154%" height="15" fill="rgb(216,145,40)" fg:x="314" fg:w="9"/><text x="25.2103%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="25.5167%" y="709" width="0.1590%" height="15" fill="rgb(251,73,9)" fg:x="321" fg:w="2"/><text x="25.7667%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="25.5167%" y="693" width="0.1590%" height="15" fill="rgb(242,54,6)" fg:x="321" fg:w="2"/><text x="25.7667%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="25.5167%" y="677" width="0.1590%" height="15" fill="rgb(239,70,7)" fg:x="321" fg:w="2"/><text x="25.7667%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.5962%" y="661" width="0.0795%" height="15" fill="rgb(216,159,35)" fg:x="322" fg:w="1"/><text x="25.8462%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.5962%" y="645" width="0.0795%" height="15" fill="rgb(224,50,39)" fg:x="322" fg:w="1"/><text x="25.8462%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.6757%" y="741" width="0.0795%" height="15" fill="rgb(235,9,35)" fg:x="323" fg:w="1"/><text x="25.9257%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="25.7552%" y="741" width="0.0795%" height="15" fill="rgb(239,34,21)" fg:x="324" fg:w="1"/><text x="26.0052%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="25.7552%" y="725" width="0.0795%" height="15" fill="rgb(218,162,43)" fg:x="324" fg:w="1"/><text x="26.0052%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="25.7552%" y="709" width="0.0795%" height="15" fill="rgb(219,89,33)" fg:x="324" fg:w="1"/><text x="26.0052%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.7552%" y="693" width="0.0795%" height="15" fill="rgb(226,125,37)" fg:x="324" fg:w="1"/><text x="26.0052%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.7552%" y="677" width="0.0795%" height="15" fill="rgb(233,149,30)" fg:x="324" fg:w="1"/><text x="26.0052%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="25.8347%" y="725" width="0.0795%" height="15" fill="rgb(236,8,18)" fg:x="325" fg:w="1"/><text x="26.0847%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="25.9936%" y="693" width="0.1590%" height="15" fill="rgb(205,176,9)" fg:x="327" fg:w="2"/><text x="26.2436%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="25.9936%" y="677" width="0.1590%" height="15" fill="rgb(252,103,44)" fg:x="327" fg:w="2"/><text x="26.2436%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="26.0731%" y="661" width="0.0795%" height="15" fill="rgb(207,68,53)" fg:x="328" fg:w="1"/><text x="26.3231%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0731%" y="645" width="0.0795%" height="15" fill="rgb(218,193,48)" fg:x="328" fg:w="1"/><text x="26.3231%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0731%" y="629" width="0.0795%" height="15" fill="rgb(234,121,52)" fg:x="328" fg:w="1"/><text x="26.3231%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.1526%" y="693" width="0.0795%" height="15" fill="rgb(227,218,49)" fg:x="329" fg:w="1"/><text x="26.4026%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="26.3116%" y="677" width="0.0795%" height="15" fill="rgb(221,8,7)" fg:x="331" fg:w="1"/><text x="26.5616%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="26.3116%" y="661" width="0.0795%" height="15" fill="rgb(217,151,36)" fg:x="331" fg:w="1"/><text x="26.5616%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3116%" y="645" width="0.0795%" height="15" fill="rgb(213,71,5)" fg:x="331" fg:w="1"/><text x="26.5616%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3911%" y="597" width="0.0795%" height="15" fill="rgb(225,145,43)" fg:x="332" fg:w="1"/><text x="26.6411%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3911%" y="581" width="0.0795%" height="15" fill="rgb(235,118,19)" fg:x="332" fg:w="1"/><text x="26.6411%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.3911%" y="565" width="0.0795%" height="15" fill="rgb(214,102,36)" fg:x="332" fg:w="1"/><text x="26.6411%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.3911%" y="549" width="0.0795%" height="15" fill="rgb(220,56,43)" fg:x="332" fg:w="1"/><text x="26.6411%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.3911%" y="533" width="0.0795%" height="15" fill="rgb(246,136,46)" fg:x="332" fg:w="1"/><text x="26.6411%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.3911%" y="517" width="0.0795%" height="15" fill="rgb(249,99,12)" fg:x="332" fg:w="1"/><text x="26.6411%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.3911%" y="501" width="0.0795%" height="15" fill="rgb(224,31,42)" fg:x="332" fg:w="1"/><text x="26.6411%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.3911%" y="613" width="0.1590%" height="15" fill="rgb(208,96,21)" fg:x="332" fg:w="2"/><text x="26.6411%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4706%" y="597" width="0.0795%" height="15" fill="rgb(237,229,7)" fg:x="333" fg:w="1"/><text x="26.7206%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="26.3911%" y="645" width="0.2385%" height="15" fill="rgb(210,12,6)" fg:x="332" fg:w="3"/><text x="26.6411%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.3911%" y="629" width="0.2385%" height="15" fill="rgb(240,9,34)" fg:x="332" fg:w="3"/><text x="26.6411%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5501%" y="613" width="0.0795%" height="15" fill="rgb(211,68,37)" fg:x="334" fg:w="1"/><text x="26.8001%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.8680%" y="613" width="0.0795%" height="15" fill="rgb(249,138,50)" fg:x="338" fg:w="1"/><text x="27.1180%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="26.9475%" y="613" width="0.0795%" height="15" fill="rgb(243,185,40)" fg:x="339" fg:w="1"/><text x="27.1975%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="26.9475%" y="597" width="0.0795%" height="15" fill="rgb(242,92,35)" fg:x="339" fg:w="1"/><text x="27.1975%" y="607.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="26.9475%" y="581" width="0.0795%" height="15" fill="rgb(244,98,5)" fg:x="339" fg:w="1"/><text x="27.1975%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.9475%" y="565" width="0.0795%" height="15" fill="rgb(228,186,29)" fg:x="339" fg:w="1"/><text x="27.1975%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.9475%" y="549" width="0.0795%" height="15" fill="rgb(253,7,44)" fg:x="339" fg:w="1"/><text x="27.1975%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="26.9475%" y="533" width="0.0795%" height="15" fill="rgb(216,11,45)" fg:x="339" fg:w="1"/><text x="27.1975%" y="543.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (14 samples, 1.11%)</title><rect x="25.9936%" y="709" width="1.1129%" height="15" fill="rgb(205,67,3)" fg:x="327" fg:w="14"/><text x="26.2436%" y="719.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (11 samples, 0.87%)</title><rect x="26.2321%" y="693" width="0.8744%" height="15" fill="rgb(250,18,3)" fg:x="330" fg:w="11"/><text x="26.4821%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="26.3911%" y="677" width="0.7154%" height="15" fill="rgb(241,222,43)" fg:x="332" fg:w="9"/><text x="26.6411%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="26.3911%" y="661" width="0.7154%" height="15" fill="rgb(233,115,3)" fg:x="332" fg:w="9"/><text x="26.6411%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="26.6296%" y="645" width="0.4769%" height="15" fill="rgb(215,165,25)" fg:x="335" fg:w="6"/><text x="26.8796%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="26.7091%" y="629" width="0.3975%" height="15" fill="rgb(234,179,6)" fg:x="336" fg:w="5"/><text x="26.9591%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.0270%" y="613" width="0.0795%" height="15" fill="rgb(215,82,23)" fg:x="340" fg:w="1"/><text x="27.2770%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.0270%" y="597" width="0.0795%" height="15" fill="rgb(211,47,18)" fg:x="340" fg:w="1"/><text x="27.2770%" y="607.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="27.0270%" y="581" width="0.0795%" height="15" fill="rgb(248,17,9)" fg:x="340" fg:w="1"/><text x="27.2770%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1065%" y="709" width="0.0795%" height="15" fill="rgb(210,212,12)" fg:x="341" fg:w="1"/><text x="27.3565%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="27.1860%" y="709" width="0.0795%" height="15" fill="rgb(230,135,45)" fg:x="342" fg:w="1"/><text x="27.4360%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1860%" y="693" width="0.0795%" height="15" fill="rgb(214,121,41)" fg:x="342" fg:w="1"/><text x="27.4360%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="27.2655%" y="693" width="0.0795%" height="15" fill="rgb(239,165,45)" fg:x="343" fg:w="1"/><text x="27.5155%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="27.2655%" y="677" width="0.0795%" height="15" fill="rgb(214,85,51)" fg:x="343" fg:w="1"/><text x="27.5155%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="27.2655%" y="661" width="0.0795%" height="15" fill="rgb(223,90,27)" fg:x="343" fg:w="1"/><text x="27.5155%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.2655%" y="645" width="0.0795%" height="15" fill="rgb(244,84,11)" fg:x="343" fg:w="1"/><text x="27.5155%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.2655%" y="629" width="0.0795%" height="15" fill="rgb(253,41,47)" fg:x="343" fg:w="1"/><text x="27.5155%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.2655%" y="613" width="0.0795%" height="15" fill="rgb(232,39,5)" fg:x="343" fg:w="1"/><text x="27.5155%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.2655%" y="597" width="0.0795%" height="15" fill="rgb(211,93,4)" fg:x="343" fg:w="1"/><text x="27.5155%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.2655%" y="581" width="0.0795%" height="15" fill="rgb(219,50,49)" fg:x="343" fg:w="1"/><text x="27.5155%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="27.2655%" y="565" width="0.0795%" height="15" fill="rgb(232,80,19)" fg:x="343" fg:w="1"/><text x="27.5155%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.2655%" y="549" width="0.0795%" height="15" fill="rgb(215,227,39)" fg:x="343" fg:w="1"/><text x="27.5155%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="27.5040%" y="661" width="0.1590%" height="15" fill="rgb(211,99,12)" fg:x="346" fg:w="2"/><text x="27.7540%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="27.5040%" y="645" width="0.1590%" height="15" fill="rgb(214,158,5)" fg:x="346" fg:w="2"/><text x="27.7540%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.6630%" y="645" width="0.0795%" height="15" fill="rgb(242,19,53)" fg:x="348" fg:w="1"/><text x="27.9130%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="27.7424%" y="645" width="0.4769%" height="15" fill="rgb(208,18,20)" fg:x="349" fg:w="6"/><text x="27.9924%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="27.7424%" y="629" width="0.4769%" height="15" fill="rgb(250,44,11)" fg:x="349" fg:w="6"/><text x="27.9924%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="27.9014%" y="613" width="0.3180%" height="15" fill="rgb(238,159,13)" fg:x="351" fg:w="4"/><text x="28.1514%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.1399%" y="597" width="0.0795%" height="15" fill="rgb(231,74,18)" fg:x="354" fg:w="1"/><text x="28.3899%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.1399%" y="581" width="0.0795%" height="15" fill="rgb(229,219,45)" fg:x="354" fg:w="1"/><text x="28.3899%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="28.3784%" y="629" width="0.2385%" height="15" fill="rgb(210,221,1)" fg:x="357" fg:w="3"/><text x="28.6284%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.4579%" y="613" width="0.1590%" height="15" fill="rgb(209,60,51)" fg:x="358" fg:w="2"/><text x="28.7079%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.5374%" y="597" width="0.0795%" height="15" fill="rgb(252,97,34)" fg:x="359" fg:w="1"/><text x="28.7874%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.6963%" y="613" width="0.0795%" height="15" fill="rgb(243,211,37)" fg:x="361" fg:w="1"/><text x="28.9463%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.7758%" y="581" width="0.1590%" height="15" fill="rgb(210,229,37)" fg:x="362" fg:w="2"/><text x="29.0258%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.7758%" y="565" width="0.1590%" height="15" fill="rgb(220,208,43)" fg:x="362" fg:w="2"/><text x="29.0258%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="28.9348%" y="581" width="0.0795%" height="15" fill="rgb(218,118,50)" fg:x="364" fg:w="1"/><text x="29.1848%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.9348%" y="565" width="0.0795%" height="15" fill="rgb(254,169,52)" fg:x="364" fg:w="1"/><text x="29.1848%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="28.7758%" y="613" width="0.3180%" height="15" fill="rgb(221,214,37)" fg:x="362" fg:w="4"/><text x="29.0258%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="28.7758%" y="597" width="0.3180%" height="15" fill="rgb(254,186,32)" fg:x="362" fg:w="4"/><text x="29.0258%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.0143%" y="581" width="0.0795%" height="15" fill="rgb(215,144,43)" fg:x="365" fg:w="1"/><text x="29.2643%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.0143%" y="565" width="0.0795%" height="15" fill="rgb(252,21,46)" fg:x="365" fg:w="1"/><text x="29.2643%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="29.0938%" y="613" width="0.1590%" height="15" fill="rgb(207,166,46)" fg:x="366" fg:w="2"/><text x="29.3438%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.0938%" y="597" width="0.1590%" height="15" fill="rgb(253,37,49)" fg:x="366" fg:w="2"/><text x="29.3438%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.1733%" y="581" width="0.0795%" height="15" fill="rgb(222,97,20)" fg:x="367" fg:w="1"/><text x="29.4233%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.1733%" y="565" width="0.0795%" height="15" fill="rgb(244,181,26)" fg:x="367" fg:w="1"/><text x="29.4233%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.2528%" y="597" width="0.0795%" height="15" fill="rgb(241,22,29)" fg:x="368" fg:w="1"/><text x="29.5028%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.2528%" y="581" width="0.0795%" height="15" fill="rgb(206,200,43)" fg:x="368" fg:w="1"/><text x="29.5028%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.3323%" y="565" width="0.0795%" height="15" fill="rgb(226,224,43)" fg:x="369" fg:w="1"/><text x="29.5823%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.3323%" y="549" width="0.0795%" height="15" fill="rgb(253,129,28)" fg:x="369" fg:w="1"/><text x="29.5823%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.3323%" y="533" width="0.0795%" height="15" fill="rgb(252,99,33)" fg:x="369" fg:w="1"/><text x="29.5823%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.3323%" y="517" width="0.0795%" height="15" fill="rgb(208,123,45)" fg:x="369" fg:w="1"/><text x="29.5823%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="29.4118%" y="565" width="0.0795%" height="15" fill="rgb(251,106,12)" fg:x="370" fg:w="1"/><text x="29.6618%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.4118%" y="549" width="0.0795%" height="15" fill="rgb(240,209,35)" fg:x="370" fg:w="1"/><text x="29.6618%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.4118%" y="533" width="0.0795%" height="15" fill="rgb(214,52,50)" fg:x="370" fg:w="1"/><text x="29.6618%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.4118%" y="517" width="0.0795%" height="15" fill="rgb(234,119,4)" fg:x="370" fg:w="1"/><text x="29.6618%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="29.3323%" y="581" width="0.2385%" height="15" fill="rgb(228,181,36)" fg:x="369" fg:w="3"/><text x="29.5823%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.4913%" y="565" width="0.0795%" height="15" fill="rgb(213,171,42)" fg:x="371" fg:w="1"/><text x="29.7413%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="29.2528%" y="613" width="0.3975%" height="15" fill="rgb(239,14,41)" fg:x="368" fg:w="5"/><text x="29.5028%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="29.3323%" y="597" width="0.3180%" height="15" fill="rgb(239,111,46)" fg:x="369" fg:w="4"/><text x="29.5823%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.5707%" y="581" width="0.0795%" height="15" fill="rgb(214,72,7)" fg:x="372" fg:w="1"/><text x="29.8207%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="28.6169%" y="629" width="1.1924%" height="15" fill="rgb(221,114,1)" fg:x="360" fg:w="15"/><text x="28.8669%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.6502%" y="613" width="0.1590%" height="15" fill="rgb(213,143,14)" fg:x="373" fg:w="2"/><text x="29.9002%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.6502%" y="597" width="0.1590%" height="15" fill="rgb(220,221,53)" fg:x="373" fg:w="2"/><text x="29.9002%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (30 samples, 2.38%)</title><rect x="27.6630%" y="661" width="2.3847%" height="15" fill="rgb(236,189,27)" fg:x="348" fg:w="30"/><text x="27.9130%" y="671.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.83%)</title><rect x="28.2194%" y="645" width="1.8283%" height="15" fill="rgb(252,139,49)" fg:x="355" fg:w="23"/><text x="28.4694%" y="655.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.8092%" y="629" width="0.2385%" height="15" fill="rgb(231,158,33)" fg:x="375" fg:w="3"/><text x="30.0592%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="29.8092%" y="613" width="0.2385%" height="15" fill="rgb(207,201,15)" fg:x="375" fg:w="3"/><text x="30.0592%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="29.8092%" y="597" width="0.2385%" height="15" fill="rgb(218,43,48)" fg:x="375" fg:w="3"/><text x="30.0592%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.9682%" y="581" width="0.0795%" height="15" fill="rgb(244,63,52)" fg:x="377" fg:w="1"/><text x="30.2182%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.9682%" y="565" width="0.0795%" height="15" fill="rgb(236,60,17)" fg:x="377" fg:w="1"/><text x="30.2182%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.9682%" y="549" width="0.0795%" height="15" fill="rgb(205,206,29)" fg:x="377" fg:w="1"/><text x="30.2182%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.1272%" y="613" width="0.1590%" height="15" fill="rgb(205,209,35)" fg:x="379" fg:w="2"/><text x="30.3772%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.2862%" y="613" width="0.1590%" height="15" fill="rgb(227,112,14)" fg:x="381" fg:w="2"/><text x="30.5362%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.2862%" y="597" width="0.1590%" height="15" fill="rgb(248,151,9)" fg:x="381" fg:w="2"/><text x="30.5362%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.6041%" y="597" width="0.0795%" height="15" fill="rgb(247,45,40)" fg:x="385" fg:w="1"/><text x="30.8541%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6836%" y="581" width="0.0795%" height="15" fill="rgb(232,185,16)" fg:x="386" fg:w="1"/><text x="30.9336%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.7631%" y="581" width="0.0795%" height="15" fill="rgb(215,45,44)" fg:x="387" fg:w="1"/><text x="31.0131%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7631%" y="565" width="0.0795%" height="15" fill="rgb(206,69,32)" fg:x="387" fg:w="1"/><text x="31.0131%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="30.9221%" y="549" width="0.1590%" height="15" fill="rgb(233,98,50)" fg:x="389" fg:w="2"/><text x="31.1721%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.0016%" y="533" width="0.0795%" height="15" fill="rgb(232,217,52)" fg:x="390" fg:w="1"/><text x="31.2516%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.11%)</title><rect x="30.0477%" y="661" width="1.1129%" height="15" fill="rgb(250,42,51)" fg:x="378" fg:w="14"/><text x="30.2977%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.11%)</title><rect x="30.0477%" y="645" width="1.1129%" height="15" fill="rgb(241,200,26)" fg:x="378" fg:w="14"/><text x="30.2977%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="30.1272%" y="629" width="1.0334%" height="15" fill="rgb(207,10,32)" fg:x="379" fg:w="13"/><text x="30.3772%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="30.4452%" y="613" width="0.7154%" height="15" fill="rgb(214,63,15)" fg:x="383" fg:w="9"/><text x="30.6952%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="30.6836%" y="597" width="0.4769%" height="15" fill="rgb(234,176,14)" fg:x="386" fg:w="6"/><text x="30.9336%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="30.8426%" y="581" width="0.3180%" height="15" fill="rgb(226,104,52)" fg:x="388" fg:w="4"/><text x="31.0926%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="30.9221%" y="565" width="0.2385%" height="15" fill="rgb(211,222,1)" fg:x="389" fg:w="3"/><text x="31.1721%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.0811%" y="549" width="0.0795%" height="15" fill="rgb(237,7,3)" fg:x="391" fg:w="1"/><text x="31.3311%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.0811%" y="533" width="0.0795%" height="15" fill="rgb(218,143,7)" fg:x="391" fg:w="1"/><text x="31.3311%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.0811%" y="517" width="0.0795%" height="15" fill="rgb(208,25,22)" fg:x="391" fg:w="1"/><text x="31.3311%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.3196%" y="629" width="0.1590%" height="15" fill="rgb(228,127,16)" fg:x="394" fg:w="2"/><text x="31.5696%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5580%" y="597" width="0.0795%" height="15" fill="rgb(237,86,27)" fg:x="397" fg:w="1"/><text x="31.8080%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="31.9555%" y="581" width="0.1590%" height="15" fill="rgb(207,125,19)" fg:x="402" fg:w="2"/><text x="32.2055%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.9555%" y="565" width="0.1590%" height="15" fill="rgb(243,195,0)" fg:x="402" fg:w="2"/><text x="32.2055%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1145%" y="565" width="0.0795%" height="15" fill="rgb(230,95,18)" fg:x="404" fg:w="1"/><text x="32.3645%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.1940%" y="565" width="0.0795%" height="15" fill="rgb(232,157,21)" fg:x="405" fg:w="1"/><text x="32.4440%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1940%" y="549" width="0.0795%" height="15" fill="rgb(212,120,50)" fg:x="405" fg:w="1"/><text x="32.4440%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.2734%" y="549" width="0.1590%" height="15" fill="rgb(222,204,44)" fg:x="406" fg:w="2"/><text x="32.5234%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.4324%" y="533" width="0.0795%" height="15" fill="rgb(236,6,33)" fg:x="408" fg:w="1"/><text x="32.6824%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.4324%" y="517" width="0.0795%" height="15" fill="rgb(247,11,38)" fg:x="408" fg:w="1"/><text x="32.6824%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.19%)</title><rect x="31.4785%" y="629" width="1.1924%" height="15" fill="rgb(215,111,0)" fg:x="396" fg:w="15"/><text x="31.7285%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.19%)</title><rect x="31.4785%" y="613" width="1.1924%" height="15" fill="rgb(211,65,46)" fg:x="396" fg:w="15"/><text x="31.7285%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="31.6375%" y="597" width="1.0334%" height="15" fill="rgb(216,5,12)" fg:x="398" fg:w="13"/><text x="31.8875%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="32.1145%" y="581" width="0.5564%" height="15" fill="rgb(226,7,2)" fg:x="404" fg:w="7"/><text x="32.3645%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="32.2734%" y="565" width="0.3975%" height="15" fill="rgb(242,116,12)" fg:x="406" fg:w="5"/><text x="32.5234%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="32.4324%" y="549" width="0.2385%" height="15" fill="rgb(249,209,7)" fg:x="408" fg:w="3"/><text x="32.6824%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="32.5119%" y="533" width="0.1590%" height="15" fill="rgb(232,73,17)" fg:x="409" fg:w="2"/><text x="32.7619%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.5914%" y="517" width="0.0795%" height="15" fill="rgb(214,13,32)" fg:x="410" fg:w="1"/><text x="32.8414%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.6709%" y="629" width="0.0795%" height="15" fill="rgb(221,125,10)" fg:x="411" fg:w="1"/><text x="32.9209%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.6709%" y="613" width="0.0795%" height="15" fill="rgb(246,7,44)" fg:x="411" fg:w="1"/><text x="32.9209%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="32.9094%" y="565" width="0.0795%" height="15" fill="rgb(239,18,35)" fg:x="414" fg:w="1"/><text x="33.1594%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="32.7504%" y="597" width="0.4769%" height="15" fill="rgb(250,222,16)" fg:x="412" fg:w="6"/><text x="33.0004%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="32.9094%" y="581" width="0.3180%" height="15" fill="rgb(219,100,8)" fg:x="414" fg:w="4"/><text x="33.1594%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="32.9889%" y="565" width="0.2385%" height="15" fill="rgb(240,62,13)" fg:x="415" fg:w="3"/><text x="33.2389%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="32.7504%" y="613" width="0.5564%" height="15" fill="rgb(253,194,2)" fg:x="412" fg:w="7"/><text x="33.0004%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.2273%" y="597" width="0.0795%" height="15" fill="rgb(235,58,31)" fg:x="418" fg:w="1"/><text x="33.4773%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (2 samples, 0.16%)</title><rect x="33.3068%" y="613" width="0.1590%" height="15" fill="rgb(231,37,11)" fg:x="419" fg:w="2"/><text x="33.5568%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.4658%" y="613" width="0.0795%" height="15" fill="rgb(235,133,0)" fg:x="421" fg:w="1"/><text x="33.7158%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4658%" y="597" width="0.0795%" height="15" fill="rgb(212,185,40)" fg:x="421" fg:w="1"/><text x="33.7158%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.5453%" y="613" width="0.0795%" height="15" fill="rgb(216,68,42)" fg:x="422" fg:w="1"/><text x="33.7953%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.5453%" y="597" width="0.0795%" height="15" fill="rgb(239,81,4)" fg:x="422" fg:w="1"/><text x="33.7953%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.5453%" y="581" width="0.0795%" height="15" fill="rgb(206,86,6)" fg:x="422" fg:w="1"/><text x="33.7953%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.6248%" y="613" width="0.0795%" height="15" fill="rgb(249,95,27)" fg:x="423" fg:w="1"/><text x="33.8748%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="33.7043%" y="613" width="0.0795%" height="15" fill="rgb(205,155,45)" fg:x="424" fg:w="1"/><text x="33.9543%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="33.9428%" y="597" width="0.0795%" height="15" fill="rgb(213,55,42)" fg:x="427" fg:w="1"/><text x="34.1928%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.0223%" y="597" width="0.1590%" height="15" fill="rgb(249,197,4)" fg:x="428" fg:w="2"/><text x="34.2723%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.0223%" y="581" width="0.1590%" height="15" fill="rgb(212,128,32)" fg:x="428" fg:w="2"/><text x="34.2723%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.0223%" y="565" width="0.1590%" height="15" fill="rgb(252,47,30)" fg:x="428" fg:w="2"/><text x="34.2723%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="34.0223%" y="549" width="0.1590%" height="15" fill="rgb(209,79,18)" fg:x="428" fg:w="2"/><text x="34.2723%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="34.0223%" y="533" width="0.1590%" height="15" fill="rgb(225,81,38)" fg:x="428" fg:w="2"/><text x="34.2723%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="34.0223%" y="517" width="0.1590%" height="15" fill="rgb(205,95,16)" fg:x="428" fg:w="2"/><text x="34.2723%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="34.0223%" y="501" width="0.1590%" height="15" fill="rgb(214,30,4)" fg:x="428" fg:w="2"/><text x="34.2723%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="34.0223%" y="485" width="0.1590%" height="15" fill="rgb(232,137,22)" fg:x="428" fg:w="2"/><text x="34.2723%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="34.0223%" y="469" width="0.1590%" height="15" fill="rgb(232,156,19)" fg:x="428" fg:w="2"/><text x="34.2723%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="34.0223%" y="453" width="0.1590%" height="15" fill="rgb(248,157,26)" fg:x="428" fg:w="2"/><text x="34.2723%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="34.0223%" y="437" width="0.1590%" height="15" fill="rgb(242,24,3)" fg:x="428" fg:w="2"/><text x="34.2723%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="34.0223%" y="421" width="0.1590%" height="15" fill="rgb(218,195,48)" fg:x="428" fg:w="2"/><text x="34.2723%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.0223%" y="405" width="0.1590%" height="15" fill="rgb(214,193,36)" fg:x="428" fg:w="2"/><text x="34.2723%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.1812%" y="597" width="0.0795%" height="15" fill="rgb(242,110,40)" fg:x="430" fg:w="1"/><text x="34.4312%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.1812%" y="581" width="0.0795%" height="15" fill="rgb(233,150,26)" fg:x="430" fg:w="1"/><text x="34.4312%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.1812%" y="565" width="0.0795%" height="15" fill="rgb(239,200,30)" fg:x="430" fg:w="1"/><text x="34.4312%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.1812%" y="549" width="0.0795%" height="15" fill="rgb(226,28,11)" fg:x="430" fg:w="1"/><text x="34.4312%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.1812%" y="533" width="0.0795%" height="15" fill="rgb(220,26,48)" fg:x="430" fg:w="1"/><text x="34.4312%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.1812%" y="517" width="0.0795%" height="15" fill="rgb(232,10,11)" fg:x="430" fg:w="1"/><text x="34.4312%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.1812%" y="501" width="0.0795%" height="15" fill="rgb(252,143,50)" fg:x="430" fg:w="1"/><text x="34.4312%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.1812%" y="485" width="0.0795%" height="15" fill="rgb(206,58,22)" fg:x="430" fg:w="1"/><text x="34.4312%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.1812%" y="469" width="0.0795%" height="15" fill="rgb(250,9,45)" fg:x="430" fg:w="1"/><text x="34.4312%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.1812%" y="453" width="0.0795%" height="15" fill="rgb(225,148,14)" fg:x="430" fg:w="1"/><text x="34.4312%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.1812%" y="437" width="0.0795%" height="15" fill="rgb(205,178,40)" fg:x="430" fg:w="1"/><text x="34.4312%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.1812%" y="421" width="0.0795%" height="15" fill="rgb(215,201,4)" fg:x="430" fg:w="1"/><text x="34.4312%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1812%" y="405" width="0.0795%" height="15" fill="rgb(219,223,24)" fg:x="430" fg:w="1"/><text x="34.4312%" y="415.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::intersection (1 samples, 0.08%)</title><rect x="34.2607%" y="597" width="0.0795%" height="15" fill="rgb(217,19,31)" fg:x="431" fg:w="1"/><text x="34.5107%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="34.3402%" y="581" width="0.0795%" height="15" fill="rgb(235,33,3)" fg:x="432" fg:w="1"/><text x="34.5902%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.3402%" y="565" width="0.0795%" height="15" fill="rgb(221,39,18)" fg:x="432" fg:w="1"/><text x="34.5902%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.4197%" y="581" width="0.1590%" height="15" fill="rgb(242,162,33)" fg:x="433" fg:w="2"/><text x="34.6697%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4992%" y="565" width="0.0795%" height="15" fill="rgb(233,215,28)" fg:x="434" fg:w="1"/><text x="34.7492%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4992%" y="549" width="0.0795%" height="15" fill="rgb(212,117,9)" fg:x="434" fg:w="1"/><text x="34.7492%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.4992%" y="533" width="0.0795%" height="15" fill="rgb(237,70,47)" fg:x="434" fg:w="1"/><text x="34.7492%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.4992%" y="517" width="0.0795%" height="15" fill="rgb(206,177,13)" fg:x="434" fg:w="1"/><text x="34.7492%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.4992%" y="501" width="0.0795%" height="15" fill="rgb(209,174,33)" fg:x="434" fg:w="1"/><text x="34.7492%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.4992%" y="485" width="0.0795%" height="15" fill="rgb(226,6,11)" fg:x="434" fg:w="1"/><text x="34.7492%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.4992%" y="469" width="0.0795%" height="15" fill="rgb(240,214,6)" fg:x="434" fg:w="1"/><text x="34.7492%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.4992%" y="453" width="0.0795%" height="15" fill="rgb(254,214,40)" fg:x="434" fg:w="1"/><text x="34.7492%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.4992%" y="437" width="0.0795%" height="15" fill="rgb(230,187,15)" fg:x="434" fg:w="1"/><text x="34.7492%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.4992%" y="421" width="0.0795%" height="15" fill="rgb(250,11,27)" fg:x="434" fg:w="1"/><text x="34.7492%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.4992%" y="405" width="0.0795%" height="15" fill="rgb(243,107,19)" fg:x="434" fg:w="1"/><text x="34.7492%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4992%" y="389" width="0.0795%" height="15" fill="rgb(253,66,26)" fg:x="434" fg:w="1"/><text x="34.7492%" y="399.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="34.3402%" y="597" width="0.3180%" height="15" fill="rgb(228,43,8)" fg:x="432" fg:w="4"/><text x="34.5902%" y="607.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="34.5787%" y="581" width="0.0795%" height="15" fill="rgb(232,197,36)" fg:x="435" fg:w="1"/><text x="34.8287%" y="591.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="34.5787%" y="565" width="0.0795%" height="15" fill="rgb(221,182,31)" fg:x="435" fg:w="1"/><text x="34.8287%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.5787%" y="549" width="0.0795%" height="15" fill="rgb(244,25,36)" fg:x="435" fg:w="1"/><text x="34.8287%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5787%" y="533" width="0.0795%" height="15" fill="rgb(247,101,19)" fg:x="435" fg:w="1"/><text x="34.8287%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5787%" y="517" width="0.0795%" height="15" fill="rgb(223,117,19)" fg:x="435" fg:w="1"/><text x="34.8287%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.5787%" y="501" width="0.0795%" height="15" fill="rgb(249,63,38)" fg:x="435" fg:w="1"/><text x="34.8287%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.5787%" y="485" width="0.0795%" height="15" fill="rgb(220,143,23)" fg:x="435" fg:w="1"/><text x="34.8287%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.5787%" y="469" width="0.0795%" height="15" fill="rgb(252,183,22)" fg:x="435" fg:w="1"/><text x="34.8287%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5787%" y="453" width="0.0795%" height="15" fill="rgb(243,176,15)" fg:x="435" fg:w="1"/><text x="34.8287%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5787%" y="437" width="0.0795%" height="15" fill="rgb(244,204,46)" fg:x="435" fg:w="1"/><text x="34.8287%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.5787%" y="421" width="0.0795%" height="15" fill="rgb(227,28,54)" fg:x="435" fg:w="1"/><text x="34.8287%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.5787%" y="405" width="0.0795%" height="15" fill="rgb(231,10,15)" fg:x="435" fg:w="1"/><text x="34.8287%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.5787%" y="389" width="0.0795%" height="15" fill="rgb(210,200,17)" fg:x="435" fg:w="1"/><text x="34.8287%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.5787%" y="373" width="0.0795%" height="15" fill="rgb(251,106,46)" fg:x="435" fg:w="1"/><text x="34.8287%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5787%" y="357" width="0.0795%" height="15" fill="rgb(218,211,15)" fg:x="435" fg:w="1"/><text x="34.8287%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (43 samples, 3.42%)</title><rect x="31.3196%" y="645" width="3.4181%" height="15" fill="rgb(239,62,10)" fg:x="394" fg:w="43"/><text x="31.5696%" y="655.50">&lt;ke..</text></g><g><title>treediff::diff::diff (25 samples, 1.99%)</title><rect x="32.7504%" y="629" width="1.9873%" height="15" fill="rgb(225,53,53)" fg:x="412" fg:w="25"/><text x="33.0004%" y="639.50">t..</text></g><g><title>treediff::diff::diff (12 samples, 0.95%)</title><rect x="33.7838%" y="613" width="0.9539%" height="15" fill="rgb(207,16,24)" fg:x="425" fg:w="12"/><text x="34.0338%" y="623.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="34.6582%" y="597" width="0.0795%" height="15" fill="rgb(217,52,28)" fg:x="436" fg:w="1"/><text x="34.9082%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6582%" y="581" width="0.0795%" height="15" fill="rgb(246,1,5)" fg:x="436" fg:w="1"/><text x="34.9082%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8172%" y="613" width="0.0795%" height="15" fill="rgb(221,29,26)" fg:x="438" fg:w="1"/><text x="35.0672%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="34.8967%" y="613" width="0.3180%" height="15" fill="rgb(250,133,32)" fg:x="439" fg:w="4"/><text x="35.1467%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.0556%" y="597" width="0.1590%" height="15" fill="rgb(236,63,16)" fg:x="441" fg:w="2"/><text x="35.3056%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="35.0556%" y="581" width="0.1590%" height="15" fill="rgb(231,159,14)" fg:x="441" fg:w="2"/><text x="35.3056%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="35.2146%" y="613" width="0.1590%" height="15" fill="rgb(207,102,36)" fg:x="443" fg:w="2"/><text x="35.4646%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.2146%" y="597" width="0.1590%" height="15" fill="rgb(230,224,31)" fg:x="443" fg:w="2"/><text x="35.4646%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.2146%" y="581" width="0.1590%" height="15" fill="rgb(215,182,16)" fg:x="443" fg:w="2"/><text x="35.4646%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.5326%" y="581" width="0.0795%" height="15" fill="rgb(226,113,2)" fg:x="447" fg:w="1"/><text x="35.7826%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.6121%" y="565" width="0.0795%" height="15" fill="rgb(241,18,35)" fg:x="448" fg:w="1"/><text x="35.8621%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.6121%" y="549" width="0.0795%" height="15" fill="rgb(240,165,44)" fg:x="448" fg:w="1"/><text x="35.8621%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6121%" y="533" width="0.0795%" height="15" fill="rgb(229,130,47)" fg:x="448" fg:w="1"/><text x="35.8621%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="35.7711%" y="549" width="0.0795%" height="15" fill="rgb(223,93,7)" fg:x="450" fg:w="1"/><text x="36.0211%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="36.0095%" y="533" width="0.2385%" height="15" fill="rgb(205,180,36)" fg:x="453" fg:w="3"/><text x="36.2595%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.0890%" y="517" width="0.1590%" height="15" fill="rgb(221,103,28)" fg:x="454" fg:w="2"/><text x="36.3390%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.1685%" y="501" width="0.0795%" height="15" fill="rgb(212,4,3)" fg:x="455" fg:w="1"/><text x="36.4185%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.4865%" y="517" width="0.0795%" height="15" fill="rgb(209,221,53)" fg:x="459" fg:w="1"/><text x="36.7365%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6455%" y="501" width="0.0795%" height="15" fill="rgb(233,229,52)" fg:x="461" fg:w="1"/><text x="36.8955%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6455%" y="485" width="0.0795%" height="15" fill="rgb(254,127,37)" fg:x="461" fg:w="1"/><text x="36.8955%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0429%" y="469" width="0.0795%" height="15" fill="rgb(207,161,26)" fg:x="466" fg:w="1"/><text x="37.2929%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0429%" y="453" width="0.0795%" height="15" fill="rgb(223,75,5)" fg:x="466" fg:w="1"/><text x="37.2929%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="36.9634%" y="485" width="0.2385%" height="15" fill="rgb(235,115,52)" fg:x="465" fg:w="3"/><text x="37.2134%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="37.1224%" y="469" width="0.0795%" height="15" fill="rgb(240,91,46)" fg:x="467" fg:w="1"/><text x="37.3724%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.1224%" y="453" width="0.0795%" height="15" fill="rgb(251,144,21)" fg:x="467" fg:w="1"/><text x="37.3724%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1224%" y="437" width="0.0795%" height="15" fill="rgb(247,220,47)" fg:x="467" fg:w="1"/><text x="37.3724%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1224%" y="421" width="0.0795%" height="15" fill="rgb(253,122,1)" fg:x="467" fg:w="1"/><text x="37.3724%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1224%" y="405" width="0.0795%" height="15" fill="rgb(221,0,24)" fg:x="467" fg:w="1"/><text x="37.3724%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="36.5660%" y="517" width="0.7154%" height="15" fill="rgb(220,204,54)" fg:x="460" fg:w="9"/><text x="36.8160%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="36.7250%" y="501" width="0.5564%" height="15" fill="rgb(205,96,25)" fg:x="462" fg:w="7"/><text x="36.9750%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2019%" y="485" width="0.0795%" height="15" fill="rgb(247,77,20)" fg:x="468" fg:w="1"/><text x="37.4519%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.51%)</title><rect x="35.8506%" y="549" width="1.5103%" height="15" fill="rgb(245,151,8)" fg:x="451" fg:w="19"/><text x="36.1006%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.11%)</title><rect x="36.2480%" y="533" width="1.1129%" height="15" fill="rgb(242,158,39)" fg:x="456" fg:w="14"/><text x="36.4980%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2814%" y="517" width="0.0795%" height="15" fill="rgb(222,214,50)" fg:x="469" fg:w="1"/><text x="37.5314%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (23 samples, 1.83%)</title><rect x="35.6121%" y="581" width="1.8283%" height="15" fill="rgb(229,60,39)" fg:x="448" fg:w="23"/><text x="35.8621%" y="591.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 1.75%)</title><rect x="35.6916%" y="565" width="1.7488%" height="15" fill="rgb(240,148,18)" fg:x="449" fg:w="22"/><text x="35.9416%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3609%" y="549" width="0.0795%" height="15" fill="rgb(215,96,11)" fg:x="470" fg:w="1"/><text x="37.6109%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.23%)</title><rect x="35.4531%" y="597" width="2.2258%" height="15" fill="rgb(238,162,53)" fg:x="446" fg:w="28"/><text x="35.7031%" y="607.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="37.4404%" y="581" width="0.2385%" height="15" fill="rgb(214,83,18)" fg:x="471" fg:w="3"/><text x="37.6904%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.5199%" y="565" width="0.1590%" height="15" fill="rgb(248,117,24)" fg:x="472" fg:w="2"/><text x="37.7699%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (38 samples, 3.02%)</title><rect x="34.7377%" y="645" width="3.0207%" height="15" fill="rgb(238,190,6)" fg:x="437" fg:w="38"/><text x="34.9877%" y="655.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (38 samples, 3.02%)</title><rect x="34.7377%" y="629" width="3.0207%" height="15" fill="rgb(213,51,6)" fg:x="437" fg:w="38"/><text x="34.9877%" y="639.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (30 samples, 2.38%)</title><rect x="35.3736%" y="613" width="2.3847%" height="15" fill="rgb(212,136,1)" fg:x="445" fg:w="30"/><text x="35.6236%" y="623.50">se..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6789%" y="597" width="0.0795%" height="15" fill="rgb(221,192,14)" fg:x="474" fg:w="1"/><text x="37.9289%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="38.1558%" y="469" width="0.0795%" height="15" fill="rgb(244,38,54)" fg:x="480" fg:w="1"/><text x="38.4058%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.2353%" y="469" width="0.0795%" height="15" fill="rgb(240,45,28)" fg:x="481" fg:w="1"/><text x="38.4853%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2353%" y="453" width="0.0795%" height="15" fill="rgb(240,123,12)" fg:x="481" fg:w="1"/><text x="38.4853%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="38.1558%" y="501" width="0.2385%" height="15" fill="rgb(216,14,30)" fg:x="480" fg:w="3"/><text x="38.4058%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="38.1558%" y="485" width="0.2385%" height="15" fill="rgb(212,50,24)" fg:x="480" fg:w="3"/><text x="38.4058%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3148%" y="469" width="0.0795%" height="15" fill="rgb(253,229,47)" fg:x="482" fg:w="1"/><text x="38.5648%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="38.5533%" y="389" width="0.0795%" height="15" fill="rgb(214,26,17)" fg:x="485" fg:w="1"/><text x="38.8033%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="38.5533%" y="421" width="0.1590%" height="15" fill="rgb(252,60,11)" fg:x="485" fg:w="2"/><text x="38.8033%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="38.5533%" y="405" width="0.1590%" height="15" fill="rgb(209,59,37)" fg:x="485" fg:w="2"/><text x="38.8033%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.6328%" y="389" width="0.0795%" height="15" fill="rgb(228,126,53)" fg:x="486" fg:w="1"/><text x="38.8828%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.7122%" y="421" width="0.0795%" height="15" fill="rgb(233,99,2)" fg:x="487" fg:w="1"/><text x="38.9622%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.7122%" y="405" width="0.0795%" height="15" fill="rgb(217,106,34)" fg:x="487" fg:w="1"/><text x="38.9622%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="38.3943%" y="485" width="0.5564%" height="15" fill="rgb(222,46,19)" fg:x="483" fg:w="7"/><text x="38.6443%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="38.4738%" y="469" width="0.4769%" height="15" fill="rgb(251,87,31)" fg:x="484" fg:w="6"/><text x="38.7238%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="38.5533%" y="453" width="0.3975%" height="15" fill="rgb(213,70,51)" fg:x="485" fg:w="5"/><text x="38.8033%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="38.5533%" y="437" width="0.3975%" height="15" fill="rgb(229,144,18)" fg:x="485" fg:w="5"/><text x="38.8033%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.7917%" y="421" width="0.1590%" height="15" fill="rgb(254,60,26)" fg:x="488" fg:w="2"/><text x="39.0417%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.7917%" y="405" width="0.1590%" height="15" fill="rgb(243,127,51)" fg:x="488" fg:w="2"/><text x="39.0417%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8712%" y="389" width="0.0795%" height="15" fill="rgb(221,51,25)" fg:x="489" fg:w="1"/><text x="39.1212%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.03%)</title><rect x="38.1558%" y="517" width="1.0334%" height="15" fill="rgb(205,42,7)" fg:x="480" fg:w="13"/><text x="38.4058%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="38.3943%" y="501" width="0.7949%" height="15" fill="rgb(236,177,48)" fg:x="483" fg:w="10"/><text x="38.6443%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="38.9507%" y="485" width="0.2385%" height="15" fill="rgb(226,79,31)" fg:x="490" fg:w="3"/><text x="39.2007%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.0302%" y="469" width="0.1590%" height="15" fill="rgb(216,170,12)" fg:x="491" fg:w="2"/><text x="39.2802%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="39.1892%" y="517" width="0.1590%" height="15" fill="rgb(208,62,51)" fg:x="493" fg:w="2"/><text x="39.4392%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.1892%" y="501" width="0.1590%" height="15" fill="rgb(254,129,9)" fg:x="493" fg:w="2"/><text x="39.4392%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.59%)</title><rect x="37.9968%" y="549" width="1.5898%" height="15" fill="rgb(243,209,31)" fg:x="478" fg:w="20"/><text x="38.2468%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.43%)</title><rect x="38.1558%" y="533" width="1.4308%" height="15" fill="rgb(213,159,23)" fg:x="480" fg:w="18"/><text x="38.4058%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="39.3482%" y="517" width="0.2385%" height="15" fill="rgb(249,77,39)" fg:x="495" fg:w="3"/><text x="39.5982%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="39.3482%" y="501" width="0.2385%" height="15" fill="rgb(230,13,33)" fg:x="495" fg:w="3"/><text x="39.5982%" y="511.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="39.3482%" y="485" width="0.2385%" height="15" fill="rgb(215,215,7)" fg:x="495" fg:w="3"/><text x="39.5982%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="39.5866%" y="549" width="0.1590%" height="15" fill="rgb(222,92,25)" fg:x="498" fg:w="2"/><text x="39.8366%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.5866%" y="533" width="0.1590%" height="15" fill="rgb(215,173,22)" fg:x="498" fg:w="2"/><text x="39.8366%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.07%)</title><rect x="37.9173%" y="581" width="2.0668%" height="15" fill="rgb(247,205,52)" fg:x="477" fg:w="26"/><text x="38.1673%" y="591.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (26 samples, 2.07%)</title><rect x="37.9173%" y="565" width="2.0668%" height="15" fill="rgb(240,210,37)" fg:x="477" fg:w="26"/><text x="38.1673%" y="575.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="39.7456%" y="549" width="0.2385%" height="15" fill="rgb(224,13,10)" fg:x="500" fg:w="3"/><text x="39.9956%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="39.7456%" y="533" width="0.2385%" height="15" fill="rgb(209,48,33)" fg:x="500" fg:w="3"/><text x="39.9956%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.8251%" y="517" width="0.1590%" height="15" fill="rgb(228,219,23)" fg:x="501" fg:w="2"/><text x="40.0751%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="39.9841%" y="581" width="0.1590%" height="15" fill="rgb(239,46,49)" fg:x="503" fg:w="2"/><text x="40.2341%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="40.0636%" y="565" width="0.0795%" height="15" fill="rgb(206,172,51)" fg:x="504" fg:w="1"/><text x="40.3136%" y="575.50"></text></g><g><title>engine::session::state::State::close (181 samples, 14.39%)</title><rect x="25.9141%" y="725" width="14.3879%" height="15" fill="rgb(213,212,35)" fg:x="326" fg:w="181"/><text x="26.1641%" y="735.50">engine::session::state..</text></g><g><title>engine::session::state::State::flush_entities (164 samples, 13.04%)</title><rect x="27.2655%" y="709" width="13.0366%" height="15" fill="rgb(252,40,27)" fg:x="343" fg:w="164"/><text x="27.5155%" y="719.50">engine::session::sta..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (163 samples, 12.96%)</title><rect x="27.3450%" y="693" width="12.9571%" height="15" fill="rgb(212,33,41)" fg:x="344" fg:w="163"/><text x="27.5950%" y="703.50">engine::session::in..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (161 samples, 12.80%)</title><rect x="27.5040%" y="677" width="12.7981%" height="15" fill="rgb(232,160,27)" fg:x="346" fg:w="161"/><text x="27.7540%" y="687.50">engine::session::st..</text></g><g><title>kernel::model::any_entity_changes (115 samples, 9.14%)</title><rect x="31.1606%" y="661" width="9.1415%" height="15" fill="rgb(244,160,20)" fg:x="392" fg:w="115"/><text x="31.4106%" y="671.50">kernel::model..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (32 samples, 2.54%)</title><rect x="37.7583%" y="645" width="2.5437%" height="15" fill="rgb(205,66,20)" fg:x="475" fg:w="32"/><text x="38.0083%" y="655.50">se..</text></g><g><title>serde_json::de::from_trait (32 samples, 2.54%)</title><rect x="37.7583%" y="629" width="2.5437%" height="15" fill="rgb(236,158,6)" fg:x="475" fg:w="32"/><text x="38.0083%" y="639.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.54%)</title><rect x="37.7583%" y="613" width="2.5437%" height="15" fill="rgb(232,25,36)" fg:x="475" fg:w="32"/><text x="38.0083%" y="623.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.54%)</title><rect x="37.7583%" y="597" width="2.5437%" height="15" fill="rgb(220,153,35)" fg:x="475" fg:w="32"/><text x="38.0083%" y="607.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.1431%" y="581" width="0.1590%" height="15" fill="rgb(216,5,8)" fg:x="505" fg:w="2"/><text x="40.3931%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.2226%" y="565" width="0.0795%" height="15" fill="rgb(240,97,3)" fg:x="506" fg:w="1"/><text x="40.4726%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.2226%" y="549" width="0.0795%" height="15" fill="rgb(220,99,26)" fg:x="506" fg:w="1"/><text x="40.4726%" y="559.50"></text></g><g><title>engine::session::Session::close (183 samples, 14.55%)</title><rect x="25.8347%" y="741" width="14.5469%" height="15" fill="rgb(237,96,2)" fg:x="325" fg:w="183"/><text x="26.0847%" y="751.50">engine::session::Sessi..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="40.3021%" y="725" width="0.0795%" height="15" fill="rgb(217,197,47)" fg:x="507" fg:w="1"/><text x="40.5521%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6200%" y="709" width="0.0795%" height="15" fill="rgb(252,133,54)" fg:x="511" fg:w="1"/><text x="40.8700%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="40.9380%" y="597" width="0.0795%" height="15" fill="rgb(233,37,30)" fg:x="515" fg:w="1"/><text x="41.1880%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="40.9380%" y="581" width="0.0795%" height="15" fill="rgb(239,182,12)" fg:x="515" fg:w="1"/><text x="41.1880%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="41.0175%" y="389" width="0.0795%" height="15" fill="rgb(245,83,39)" fg:x="516" fg:w="1"/><text x="41.2675%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="40.9380%" y="613" width="0.2385%" height="15" fill="rgb(222,109,36)" fg:x="515" fg:w="3"/><text x="41.1880%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="41.0175%" y="597" width="0.1590%" height="15" fill="rgb(237,95,44)" fg:x="516" fg:w="2"/><text x="41.2675%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="41.0175%" y="581" width="0.1590%" height="15" fill="rgb(216,36,54)" fg:x="516" fg:w="2"/><text x="41.2675%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="41.0175%" y="565" width="0.1590%" height="15" fill="rgb(236,164,3)" fg:x="516" fg:w="2"/><text x="41.2675%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="41.0175%" y="549" width="0.1590%" height="15" fill="rgb(223,15,21)" fg:x="516" fg:w="2"/><text x="41.2675%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="41.0175%" y="533" width="0.1590%" height="15" fill="rgb(239,191,12)" fg:x="516" fg:w="2"/><text x="41.2675%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="41.0175%" y="517" width="0.1590%" height="15" fill="rgb(231,191,37)" fg:x="516" fg:w="2"/><text x="41.2675%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="41.0175%" y="501" width="0.1590%" height="15" fill="rgb(209,155,36)" fg:x="516" fg:w="2"/><text x="41.2675%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="41.0175%" y="485" width="0.1590%" height="15" fill="rgb(216,222,49)" fg:x="516" fg:w="2"/><text x="41.2675%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="41.0175%" y="469" width="0.1590%" height="15" fill="rgb(218,181,2)" fg:x="516" fg:w="2"/><text x="41.2675%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="41.0175%" y="453" width="0.1590%" height="15" fill="rgb(239,125,9)" fg:x="516" fg:w="2"/><text x="41.2675%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="41.0175%" y="437" width="0.1590%" height="15" fill="rgb(233,103,7)" fg:x="516" fg:w="2"/><text x="41.2675%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="41.0175%" y="421" width="0.1590%" height="15" fill="rgb(209,223,5)" fg:x="516" fg:w="2"/><text x="41.2675%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="41.0175%" y="405" width="0.1590%" height="15" fill="rgb(234,71,27)" fg:x="516" fg:w="2"/><text x="41.2675%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="41.0970%" y="389" width="0.0795%" height="15" fill="rgb(251,202,16)" fg:x="517" fg:w="1"/><text x="41.3470%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="41.0970%" y="373" width="0.0795%" height="15" fill="rgb(231,180,0)" fg:x="517" fg:w="1"/><text x="41.3470%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.0970%" y="357" width="0.0795%" height="15" fill="rgb(223,58,28)" fg:x="517" fg:w="1"/><text x="41.3470%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.0970%" y="341" width="0.0795%" height="15" fill="rgb(250,34,24)" fg:x="517" fg:w="1"/><text x="41.3470%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.0970%" y="325" width="0.0795%" height="15" fill="rgb(235,24,16)" fg:x="517" fg:w="1"/><text x="41.3470%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.0970%" y="309" width="0.0795%" height="15" fill="rgb(219,28,33)" fg:x="517" fg:w="1"/><text x="41.3470%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.0970%" y="293" width="0.0795%" height="15" fill="rgb(228,150,43)" fg:x="517" fg:w="1"/><text x="41.3470%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.0970%" y="277" width="0.0795%" height="15" fill="rgb(221,228,36)" fg:x="517" fg:w="1"/><text x="41.3470%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.0970%" y="261" width="0.0795%" height="15" fill="rgb(232,116,17)" fg:x="517" fg:w="1"/><text x="41.3470%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.0970%" y="245" width="0.0795%" height="15" fill="rgb(220,110,51)" fg:x="517" fg:w="1"/><text x="41.3470%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.0970%" y="229" width="0.0795%" height="15" fill="rgb(207,26,25)" fg:x="517" fg:w="1"/><text x="41.3470%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="41.0970%" y="213" width="0.0795%" height="15" fill="rgb(223,58,19)" fg:x="517" fg:w="1"/><text x="41.3470%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.0970%" y="197" width="0.0795%" height="15" fill="rgb(234,125,39)" fg:x="517" fg:w="1"/><text x="41.3470%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="41.0970%" y="181" width="0.0795%" height="15" fill="rgb(241,48,36)" fg:x="517" fg:w="1"/><text x="41.3470%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="41.0970%" y="165" width="0.0795%" height="15" fill="rgb(217,148,51)" fg:x="517" fg:w="1"/><text x="41.3470%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="41.0970%" y="149" width="0.0795%" height="15" fill="rgb(247,17,25)" fg:x="517" fg:w="1"/><text x="41.3470%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="40.9380%" y="629" width="0.3180%" height="15" fill="rgb(219,89,38)" fg:x="515" fg:w="4"/><text x="41.1880%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="41.1765%" y="613" width="0.0795%" height="15" fill="rgb(220,145,2)" fg:x="518" fg:w="1"/><text x="41.4265%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.4944%" y="517" width="0.1590%" height="15" fill="rgb(244,66,47)" fg:x="522" fg:w="2"/><text x="41.7444%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="41.4944%" y="501" width="0.1590%" height="15" fill="rgb(226,182,5)" fg:x="522" fg:w="2"/><text x="41.7444%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.4944%" y="485" width="0.1590%" height="15" fill="rgb(211,98,20)" fg:x="522" fg:w="2"/><text x="41.7444%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.4944%" y="469" width="0.1590%" height="15" fill="rgb(217,103,52)" fg:x="522" fg:w="2"/><text x="41.7444%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.4944%" y="453" width="0.1590%" height="15" fill="rgb(208,125,52)" fg:x="522" fg:w="2"/><text x="41.7444%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.4944%" y="437" width="0.1590%" height="15" fill="rgb(244,70,13)" fg:x="522" fg:w="2"/><text x="41.7444%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.4944%" y="421" width="0.1590%" height="15" fill="rgb(253,124,3)" fg:x="522" fg:w="2"/><text x="41.7444%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.4944%" y="405" width="0.1590%" height="15" fill="rgb(222,145,32)" fg:x="522" fg:w="2"/><text x="41.7444%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.4944%" y="389" width="0.1590%" height="15" fill="rgb(232,183,47)" fg:x="522" fg:w="2"/><text x="41.7444%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.4944%" y="373" width="0.1590%" height="15" fill="rgb(246,226,4)" fg:x="522" fg:w="2"/><text x="41.7444%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.4944%" y="357" width="0.1590%" height="15" fill="rgb(228,185,46)" fg:x="522" fg:w="2"/><text x="41.7444%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.4944%" y="341" width="0.1590%" height="15" fill="rgb(213,196,4)" fg:x="522" fg:w="2"/><text x="41.7444%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.4944%" y="325" width="0.1590%" height="15" fill="rgb(212,2,45)" fg:x="522" fg:w="2"/><text x="41.7444%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="41.4944%" y="309" width="0.1590%" height="15" fill="rgb(217,145,50)" fg:x="522" fg:w="2"/><text x="41.7444%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5739%" y="293" width="0.0795%" height="15" fill="rgb(242,10,46)" fg:x="523" fg:w="1"/><text x="41.8239%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.6534%" y="501" width="0.0795%" height="15" fill="rgb(252,91,48)" fg:x="524" fg:w="1"/><text x="41.9034%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8124%" y="469" width="0.0795%" height="15" fill="rgb(216,72,13)" fg:x="526" fg:w="1"/><text x="42.0624%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8124%" y="453" width="0.0795%" height="15" fill="rgb(219,6,37)" fg:x="526" fg:w="1"/><text x="42.0624%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8124%" y="437" width="0.0795%" height="15" fill="rgb(236,185,40)" fg:x="526" fg:w="1"/><text x="42.0624%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8124%" y="421" width="0.0795%" height="15" fill="rgb(208,81,48)" fg:x="526" fg:w="1"/><text x="42.0624%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8124%" y="405" width="0.0795%" height="15" fill="rgb(211,42,33)" fg:x="526" fg:w="1"/><text x="42.0624%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8124%" y="389" width="0.0795%" height="15" fill="rgb(211,90,39)" fg:x="526" fg:w="1"/><text x="42.0624%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8124%" y="373" width="0.0795%" height="15" fill="rgb(218,136,12)" fg:x="526" fg:w="1"/><text x="42.0624%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8124%" y="357" width="0.0795%" height="15" fill="rgb(234,12,32)" fg:x="526" fg:w="1"/><text x="42.0624%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8124%" y="341" width="0.0795%" height="15" fill="rgb(221,164,18)" fg:x="526" fg:w="1"/><text x="42.0624%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8124%" y="325" width="0.0795%" height="15" fill="rgb(239,135,14)" fg:x="526" fg:w="1"/><text x="42.0624%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.8124%" y="309" width="0.0795%" height="15" fill="rgb(226,198,47)" fg:x="526" fg:w="1"/><text x="42.0624%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.8124%" y="293" width="0.0795%" height="15" fill="rgb(244,121,47)" fg:x="526" fg:w="1"/><text x="42.0624%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.8124%" y="277" width="0.0795%" height="15" fill="rgb(226,21,48)" fg:x="526" fg:w="1"/><text x="42.0624%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.8124%" y="261" width="0.0795%" height="15" fill="rgb(215,178,47)" fg:x="526" fg:w="1"/><text x="42.0624%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8124%" y="245" width="0.0795%" height="15" fill="rgb(206,212,19)" fg:x="526" fg:w="1"/><text x="42.0624%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="41.4944%" y="549" width="0.5564%" height="15" fill="rgb(230,104,34)" fg:x="522" fg:w="7"/><text x="41.7444%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="41.4944%" y="533" width="0.5564%" height="15" fill="rgb(210,96,51)" fg:x="522" fg:w="7"/><text x="41.7444%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="41.6534%" y="517" width="0.3975%" height="15" fill="rgb(229,111,47)" fg:x="524" fg:w="5"/><text x="41.9034%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="41.7329%" y="501" width="0.3180%" height="15" fill="rgb(218,174,45)" fg:x="525" fg:w="4"/><text x="41.9829%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="41.7329%" y="485" width="0.3180%" height="15" fill="rgb(215,21,32)" fg:x="525" fg:w="4"/><text x="41.9829%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.8919%" y="469" width="0.1590%" height="15" fill="rgb(235,72,21)" fg:x="527" fg:w="2"/><text x="42.1419%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8919%" y="453" width="0.1590%" height="15" fill="rgb(250,113,30)" fg:x="527" fg:w="2"/><text x="42.1419%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.8919%" y="437" width="0.1590%" height="15" fill="rgb(244,136,34)" fg:x="527" fg:w="2"/><text x="42.1419%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8919%" y="421" width="0.1590%" height="15" fill="rgb(213,226,47)" fg:x="527" fg:w="2"/><text x="42.1419%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.8919%" y="405" width="0.1590%" height="15" fill="rgb(224,136,40)" fg:x="527" fg:w="2"/><text x="42.1419%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9714%" y="389" width="0.0795%" height="15" fill="rgb(253,124,12)" fg:x="528" fg:w="1"/><text x="42.2214%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.9714%" y="373" width="0.0795%" height="15" fill="rgb(210,67,8)" fg:x="528" fg:w="1"/><text x="42.2214%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9714%" y="357" width="0.0795%" height="15" fill="rgb(210,204,0)" fg:x="528" fg:w="1"/><text x="42.2214%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.9714%" y="341" width="0.0795%" height="15" fill="rgb(217,179,22)" fg:x="528" fg:w="1"/><text x="42.2214%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9714%" y="325" width="0.0795%" height="15" fill="rgb(237,192,33)" fg:x="528" fg:w="1"/><text x="42.2214%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9714%" y="309" width="0.0795%" height="15" fill="rgb(211,104,28)" fg:x="528" fg:w="1"/><text x="42.2214%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.0509%" y="485" width="0.0795%" height="15" fill="rgb(214,75,30)" fg:x="529" fg:w="1"/><text x="42.3009%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.0509%" y="469" width="0.0795%" height="15" fill="rgb(220,227,12)" fg:x="529" fg:w="1"/><text x="42.3009%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.2099%" y="421" width="0.0795%" height="15" fill="rgb(233,134,28)" fg:x="531" fg:w="1"/><text x="42.4599%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2893%" y="421" width="0.0795%" height="15" fill="rgb(215,146,24)" fg:x="532" fg:w="1"/><text x="42.5393%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2893%" y="405" width="0.0795%" height="15" fill="rgb(248,227,20)" fg:x="532" fg:w="1"/><text x="42.5393%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2893%" y="389" width="0.0795%" height="15" fill="rgb(250,44,42)" fg:x="532" fg:w="1"/><text x="42.5393%" y="399.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="42.0509%" y="533" width="0.4769%" height="15" fill="rgb(219,5,35)" fg:x="529" fg:w="6"/><text x="42.3009%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="42.0509%" y="517" width="0.4769%" height="15" fill="rgb(241,132,32)" fg:x="529" fg:w="6"/><text x="42.3009%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="42.0509%" y="501" width="0.4769%" height="15" fill="rgb(234,212,51)" fg:x="529" fg:w="6"/><text x="42.3009%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="42.1304%" y="485" width="0.3975%" height="15" fill="rgb(242,173,29)" fg:x="530" fg:w="5"/><text x="42.3804%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="42.1304%" y="469" width="0.3975%" height="15" fill="rgb(212,159,2)" fg:x="530" fg:w="5"/><text x="42.3804%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="42.1304%" y="453" width="0.3975%" height="15" fill="rgb(238,165,31)" fg:x="530" fg:w="5"/><text x="42.3804%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="42.1304%" y="437" width="0.3975%" height="15" fill="rgb(241,57,36)" fg:x="530" fg:w="5"/><text x="42.3804%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.3688%" y="421" width="0.1590%" height="15" fill="rgb(249,7,4)" fg:x="533" fg:w="2"/><text x="42.6188%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.3688%" y="405" width="0.1590%" height="15" fill="rgb(250,137,44)" fg:x="533" fg:w="2"/><text x="42.6188%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.3688%" y="389" width="0.1590%" height="15" fill="rgb(244,185,1)" fg:x="533" fg:w="2"/><text x="42.6188%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.3688%" y="373" width="0.1590%" height="15" fill="rgb(216,5,53)" fg:x="533" fg:w="2"/><text x="42.6188%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.4483%" y="357" width="0.0795%" height="15" fill="rgb(234,89,21)" fg:x="534" fg:w="1"/><text x="42.6983%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.4483%" y="341" width="0.0795%" height="15" fill="rgb(250,81,43)" fg:x="534" fg:w="1"/><text x="42.6983%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.4483%" y="325" width="0.0795%" height="15" fill="rgb(243,132,11)" fg:x="534" fg:w="1"/><text x="42.6983%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="42.6073%" y="501" width="0.0795%" height="15" fill="rgb(253,159,28)" fg:x="536" fg:w="1"/><text x="42.8573%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="42.6868%" y="453" width="0.0795%" height="15" fill="rgb(237,167,34)" fg:x="537" fg:w="1"/><text x="42.9368%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.6868%" y="437" width="0.0795%" height="15" fill="rgb(237,16,50)" fg:x="537" fg:w="1"/><text x="42.9368%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="42.6868%" y="421" width="0.0795%" height="15" fill="rgb(247,125,2)" fg:x="537" fg:w="1"/><text x="42.9368%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.6868%" y="405" width="0.0795%" height="15" fill="rgb(254,35,3)" fg:x="537" fg:w="1"/><text x="42.9368%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.7663%" y="453" width="0.0795%" height="15" fill="rgb(237,209,21)" fg:x="538" fg:w="1"/><text x="43.0163%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.7663%" y="437" width="0.0795%" height="15" fill="rgb(224,122,20)" fg:x="538" fg:w="1"/><text x="43.0163%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.7663%" y="421" width="0.0795%" height="15" fill="rgb(224,11,46)" fg:x="538" fg:w="1"/><text x="43.0163%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.7663%" y="405" width="0.0795%" height="15" fill="rgb(248,21,33)" fg:x="538" fg:w="1"/><text x="43.0163%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.7663%" y="389" width="0.0795%" height="15" fill="rgb(222,144,7)" fg:x="538" fg:w="1"/><text x="43.0163%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.95%)</title><rect x="42.0509%" y="549" width="0.9539%" height="15" fill="rgb(205,141,37)" fg:x="529" fg:w="12"/><text x="42.3009%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="42.5278%" y="533" width="0.4769%" height="15" fill="rgb(237,130,8)" fg:x="535" fg:w="6"/><text x="42.7778%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="42.5278%" y="517" width="0.4769%" height="15" fill="rgb(209,179,39)" fg:x="535" fg:w="6"/><text x="42.7778%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="42.6868%" y="501" width="0.3180%" height="15" fill="rgb(207,52,17)" fg:x="537" fg:w="4"/><text x="42.9368%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="42.6868%" y="485" width="0.3180%" height="15" fill="rgb(253,158,17)" fg:x="537" fg:w="4"/><text x="42.9368%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="42.6868%" y="469" width="0.3180%" height="15" fill="rgb(208,19,53)" fg:x="537" fg:w="4"/><text x="42.9368%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.8458%" y="453" width="0.1590%" height="15" fill="rgb(233,152,13)" fg:x="539" fg:w="2"/><text x="43.0958%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.8458%" y="437" width="0.1590%" height="15" fill="rgb(231,84,1)" fg:x="539" fg:w="2"/><text x="43.0958%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="42.8458%" y="421" width="0.1590%" height="15" fill="rgb(229,142,48)" fg:x="539" fg:w="2"/><text x="43.0958%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="42.8458%" y="405" width="0.1590%" height="15" fill="rgb(248,70,29)" fg:x="539" fg:w="2"/><text x="43.0958%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="42.8458%" y="389" width="0.1590%" height="15" fill="rgb(250,85,7)" fg:x="539" fg:w="2"/><text x="43.0958%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.8458%" y="373" width="0.1590%" height="15" fill="rgb(235,140,43)" fg:x="539" fg:w="2"/><text x="43.0958%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.8458%" y="357" width="0.1590%" height="15" fill="rgb(216,0,5)" fg:x="539" fg:w="2"/><text x="43.0958%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.9253%" y="341" width="0.0795%" height="15" fill="rgb(223,167,29)" fg:x="540" fg:w="1"/><text x="43.1753%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.9253%" y="325" width="0.0795%" height="15" fill="rgb(229,150,33)" fg:x="540" fg:w="1"/><text x="43.1753%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.9253%" y="309" width="0.0795%" height="15" fill="rgb(227,26,52)" fg:x="540" fg:w="1"/><text x="43.1753%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.59%)</title><rect x="41.4944%" y="565" width="1.5898%" height="15" fill="rgb(250,60,52)" fg:x="522" fg:w="20"/><text x="41.7444%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.0048%" y="549" width="0.0795%" height="15" fill="rgb(228,81,46)" fg:x="541" fg:w="1"/><text x="43.2548%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="43.0048%" y="533" width="0.0795%" height="15" fill="rgb(225,218,31)" fg:x="541" fg:w="1"/><text x="43.2548%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.0048%" y="517" width="0.0795%" height="15" fill="rgb(230,35,16)" fg:x="541" fg:w="1"/><text x="43.2548%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0048%" y="501" width="0.0795%" height="15" fill="rgb(247,100,0)" fg:x="541" fg:w="1"/><text x="43.2548%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0048%" y="485" width="0.0795%" height="15" fill="rgb(223,135,11)" fg:x="541" fg:w="1"/><text x="43.2548%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0048%" y="469" width="0.0795%" height="15" fill="rgb(207,136,0)" fg:x="541" fg:w="1"/><text x="43.2548%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0048%" y="453" width="0.0795%" height="15" fill="rgb(246,131,25)" fg:x="541" fg:w="1"/><text x="43.2548%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.0048%" y="437" width="0.0795%" height="15" fill="rgb(209,47,12)" fg:x="541" fg:w="1"/><text x="43.2548%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0048%" y="421" width="0.0795%" height="15" fill="rgb(221,25,16)" fg:x="541" fg:w="1"/><text x="43.2548%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0048%" y="405" width="0.0795%" height="15" fill="rgb(223,164,33)" fg:x="541" fg:w="1"/><text x="43.2548%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0048%" y="389" width="0.0795%" height="15" fill="rgb(220,26,23)" fg:x="541" fg:w="1"/><text x="43.2548%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0048%" y="373" width="0.0795%" height="15" fill="rgb(231,224,1)" fg:x="541" fg:w="1"/><text x="43.2548%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0048%" y="357" width="0.0795%" height="15" fill="rgb(229,221,24)" fg:x="541" fg:w="1"/><text x="43.2548%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.0048%" y="341" width="0.0795%" height="15" fill="rgb(213,34,10)" fg:x="541" fg:w="1"/><text x="43.2548%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0048%" y="325" width="0.0795%" height="15" fill="rgb(215,33,11)" fg:x="541" fg:w="1"/><text x="43.2548%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (22 samples, 1.75%)</title><rect x="41.4149%" y="597" width="1.7488%" height="15" fill="rgb(216,20,41)" fg:x="521" fg:w="22"/><text x="41.6649%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.67%)</title><rect x="41.4944%" y="581" width="1.6693%" height="15" fill="rgb(228,43,31)" fg:x="522" fg:w="21"/><text x="41.7444%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="43.0843%" y="565" width="0.0795%" height="15" fill="rgb(227,83,26)" fg:x="542" fg:w="1"/><text x="43.3343%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1638%" y="597" width="0.0795%" height="15" fill="rgb(217,168,19)" fg:x="543" fg:w="1"/><text x="43.4138%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.2432%" y="597" width="0.0795%" height="15" fill="rgb(231,34,33)" fg:x="544" fg:w="1"/><text x="43.4932%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (31 samples, 2.46%)</title><rect x="40.9380%" y="645" width="2.4642%" height="15" fill="rgb(230,120,51)" fg:x="515" fg:w="31"/><text x="41.1880%" y="655.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (27 samples, 2.15%)</title><rect x="41.2560%" y="629" width="2.1463%" height="15" fill="rgb(215,138,27)" fg:x="519" fg:w="27"/><text x="41.5060%" y="639.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (26 samples, 2.07%)</title><rect x="41.3355%" y="613" width="2.0668%" height="15" fill="rgb(246,80,47)" fg:x="520" fg:w="26"/><text x="41.5855%" y="623.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.3227%" y="597" width="0.0795%" height="15" fill="rgb(215,57,53)" fg:x="545" fg:w="1"/><text x="43.5727%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3227%" y="581" width="0.0795%" height="15" fill="rgb(229,137,5)" fg:x="545" fg:w="1"/><text x="43.5727%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.3227%" y="565" width="0.0795%" height="15" fill="rgb(210,86,2)" fg:x="545" fg:w="1"/><text x="43.5727%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3227%" y="549" width="0.0795%" height="15" fill="rgb(231,226,51)" fg:x="545" fg:w="1"/><text x="43.5727%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="43.3227%" y="533" width="0.0795%" height="15" fill="rgb(216,62,29)" fg:x="545" fg:w="1"/><text x="43.5727%" y="543.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (34 samples, 2.70%)</title><rect x="40.8585%" y="661" width="2.7027%" height="15" fill="rgb(248,202,3)" fg:x="514" fg:w="34"/><text x="41.1085%" y="671.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="43.4022%" y="645" width="0.1590%" height="15" fill="rgb(225,181,7)" fg:x="546" fg:w="2"/><text x="43.6522%" y="655.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="43.4022%" y="629" width="0.1590%" height="15" fill="rgb(247,170,54)" fg:x="546" fg:w="2"/><text x="43.6522%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="43.4022%" y="613" width="0.1590%" height="15" fill="rgb(236,204,33)" fg:x="546" fg:w="2"/><text x="43.6522%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="43.4022%" y="597" width="0.1590%" height="15" fill="rgb(216,45,30)" fg:x="546" fg:w="2"/><text x="43.6522%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="43.4022%" y="581" width="0.1590%" height="15" fill="rgb(213,203,16)" fg:x="546" fg:w="2"/><text x="43.6522%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="43.4022%" y="565" width="0.1590%" height="15" fill="rgb(215,46,16)" fg:x="546" fg:w="2"/><text x="43.6522%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="43.4022%" y="549" width="0.1590%" height="15" fill="rgb(217,162,46)" fg:x="546" fg:w="2"/><text x="43.6522%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="43.4022%" y="533" width="0.1590%" height="15" fill="rgb(224,189,20)" fg:x="546" fg:w="2"/><text x="43.6522%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="43.4022%" y="517" width="0.1590%" height="15" fill="rgb(232,35,51)" fg:x="546" fg:w="2"/><text x="43.6522%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="43.4022%" y="501" width="0.1590%" height="15" fill="rgb(243,221,46)" fg:x="546" fg:w="2"/><text x="43.6522%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="43.4022%" y="485" width="0.1590%" height="15" fill="rgb(248,16,16)" fg:x="546" fg:w="2"/><text x="43.6522%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="43.4022%" y="469" width="0.1590%" height="15" fill="rgb(220,168,13)" fg:x="546" fg:w="2"/><text x="43.6522%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.4022%" y="453" width="0.1590%" height="15" fill="rgb(243,102,39)" fg:x="546" fg:w="2"/><text x="43.6522%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.4022%" y="437" width="0.1590%" height="15" fill="rgb(245,82,32)" fg:x="546" fg:w="2"/><text x="43.6522%" y="447.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="43.4022%" y="421" width="0.1590%" height="15" fill="rgb(230,164,19)" fg:x="546" fg:w="2"/><text x="43.6522%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="43.4022%" y="405" width="0.1590%" height="15" fill="rgb(221,9,41)" fg:x="546" fg:w="2"/><text x="43.6522%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="43.4022%" y="389" width="0.1590%" height="15" fill="rgb(216,93,0)" fg:x="546" fg:w="2"/><text x="43.6522%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="43.4022%" y="373" width="0.1590%" height="15" fill="rgb(235,113,9)" fg:x="546" fg:w="2"/><text x="43.6522%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="43.4022%" y="357" width="0.1590%" height="15" fill="rgb(209,224,10)" fg:x="546" fg:w="2"/><text x="43.6522%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="43.4022%" y="341" width="0.1590%" height="15" fill="rgb(226,54,34)" fg:x="546" fg:w="2"/><text x="43.6522%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="43.4022%" y="325" width="0.1590%" height="15" fill="rgb(222,60,8)" fg:x="546" fg:w="2"/><text x="43.6522%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="43.4022%" y="309" width="0.1590%" height="15" fill="rgb(248,228,41)" fg:x="546" fg:w="2"/><text x="43.6522%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="43.4022%" y="293" width="0.1590%" height="15" fill="rgb(226,31,32)" fg:x="546" fg:w="2"/><text x="43.6522%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="43.4022%" y="277" width="0.1590%" height="15" fill="rgb(242,132,49)" fg:x="546" fg:w="2"/><text x="43.6522%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="43.4022%" y="261" width="0.1590%" height="15" fill="rgb(224,194,19)" fg:x="546" fg:w="2"/><text x="43.6522%" y="271.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="43.4022%" y="245" width="0.1590%" height="15" fill="rgb(232,200,51)" fg:x="546" fg:w="2"/><text x="43.6522%" y="255.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="43.4022%" y="229" width="0.1590%" height="15" fill="rgb(235,60,46)" fg:x="546" fg:w="2"/><text x="43.6522%" y="239.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5612%" y="661" width="0.0795%" height="15" fill="rgb(240,109,52)" fg:x="548" fg:w="1"/><text x="43.8112%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.9587%" y="501" width="0.0795%" height="15" fill="rgb(215,78,37)" fg:x="553" fg:w="1"/><text x="44.2087%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="44.0382%" y="485" width="0.2385%" height="15" fill="rgb(225,141,7)" fg:x="554" fg:w="3"/><text x="44.2882%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.1971%" y="469" width="0.0795%" height="15" fill="rgb(216,102,54)" fg:x="556" fg:w="1"/><text x="44.4471%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.2766%" y="485" width="0.0795%" height="15" fill="rgb(238,143,13)" fg:x="557" fg:w="1"/><text x="44.5266%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.2766%" y="469" width="0.0795%" height="15" fill="rgb(219,45,51)" fg:x="557" fg:w="1"/><text x="44.5266%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.2766%" y="453" width="0.0795%" height="15" fill="rgb(242,105,46)" fg:x="557" fg:w="1"/><text x="44.5266%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="44.3561%" y="485" width="0.1590%" height="15" fill="rgb(206,154,49)" fg:x="558" fg:w="2"/><text x="44.6061%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="44.7536%" y="453" width="0.1590%" height="15" fill="rgb(239,215,4)" fg:x="563" fg:w="2"/><text x="45.0036%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="44.7536%" y="437" width="0.1590%" height="15" fill="rgb(238,82,17)" fg:x="563" fg:w="2"/><text x="45.0036%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.8331%" y="421" width="0.0795%" height="15" fill="rgb(242,49,30)" fg:x="564" fg:w="1"/><text x="45.0831%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8331%" y="405" width="0.0795%" height="15" fill="rgb(248,5,16)" fg:x="564" fg:w="1"/><text x="45.0831%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8331%" y="389" width="0.0795%" height="15" fill="rgb(237,138,32)" fg:x="564" fg:w="1"/><text x="45.0831%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8331%" y="373" width="0.0795%" height="15" fill="rgb(235,79,45)" fg:x="564" fg:w="1"/><text x="45.0831%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.8331%" y="357" width="0.0795%" height="15" fill="rgb(213,105,25)" fg:x="564" fg:w="1"/><text x="45.0831%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.8331%" y="341" width="0.0795%" height="15" fill="rgb(251,131,7)" fg:x="564" fg:w="1"/><text x="45.0831%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.8331%" y="325" width="0.0795%" height="15" fill="rgb(211,155,7)" fg:x="564" fg:w="1"/><text x="45.0831%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8331%" y="309" width="0.0795%" height="15" fill="rgb(243,70,15)" fg:x="564" fg:w="1"/><text x="45.0831%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8331%" y="293" width="0.0795%" height="15" fill="rgb(215,171,2)" fg:x="564" fg:w="1"/><text x="45.0831%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.8331%" y="277" width="0.0795%" height="15" fill="rgb(244,121,35)" fg:x="564" fg:w="1"/><text x="45.0831%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.8331%" y="261" width="0.0795%" height="15" fill="rgb(249,147,17)" fg:x="564" fg:w="1"/><text x="45.0831%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.8331%" y="245" width="0.0795%" height="15" fill="rgb(241,193,52)" fg:x="564" fg:w="1"/><text x="45.0831%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.8331%" y="229" width="0.0795%" height="15" fill="rgb(217,159,39)" fg:x="564" fg:w="1"/><text x="45.0831%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="44.6741%" y="469" width="0.3180%" height="15" fill="rgb(248,110,0)" fg:x="562" fg:w="4"/><text x="44.9241%" y="479.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="44.9126%" y="453" width="0.0795%" height="15" fill="rgb(233,227,0)" fg:x="565" fg:w="1"/><text x="45.1626%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9921%" y="437" width="0.0795%" height="15" fill="rgb(252,55,2)" fg:x="566" fg:w="1"/><text x="45.2421%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9921%" y="421" width="0.0795%" height="15" fill="rgb(224,194,24)" fg:x="566" fg:w="1"/><text x="45.2421%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9921%" y="405" width="0.0795%" height="15" fill="rgb(247,5,33)" fg:x="566" fg:w="1"/><text x="45.2421%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9921%" y="389" width="0.0795%" height="15" fill="rgb(242,66,47)" fg:x="566" fg:w="1"/><text x="45.2421%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9921%" y="373" width="0.0795%" height="15" fill="rgb(213,107,12)" fg:x="566" fg:w="1"/><text x="45.2421%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9921%" y="357" width="0.0795%" height="15" fill="rgb(206,131,1)" fg:x="566" fg:w="1"/><text x="45.2421%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.9921%" y="341" width="0.0795%" height="15" fill="rgb(214,9,36)" fg:x="566" fg:w="1"/><text x="45.2421%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.9921%" y="325" width="0.0795%" height="15" fill="rgb(251,215,18)" fg:x="566" fg:w="1"/><text x="45.2421%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.9921%" y="309" width="0.0795%" height="15" fill="rgb(251,64,9)" fg:x="566" fg:w="1"/><text x="45.2421%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="44.9921%" y="293" width="0.0795%" height="15" fill="rgb(235,68,21)" fg:x="566" fg:w="1"/><text x="45.2421%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="44.9921%" y="277" width="0.0795%" height="15" fill="rgb(240,69,38)" fg:x="566" fg:w="1"/><text x="45.2421%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="45.2305%" y="309" width="0.0795%" height="15" fill="rgb(231,18,27)" fg:x="569" fg:w="1"/><text x="45.4805%" y="319.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.2305%" y="293" width="0.0795%" height="15" fill="rgb(215,154,25)" fg:x="569" fg:w="1"/><text x="45.4805%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.2305%" y="277" width="0.0795%" height="15" fill="rgb(224,33,46)" fg:x="569" fg:w="1"/><text x="45.4805%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.2305%" y="261" width="0.0795%" height="15" fill="rgb(248,191,53)" fg:x="569" fg:w="1"/><text x="45.4805%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.2305%" y="245" width="0.0795%" height="15" fill="rgb(231,3,37)" fg:x="569" fg:w="1"/><text x="45.4805%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.2305%" y="229" width="0.0795%" height="15" fill="rgb(209,152,2)" fg:x="569" fg:w="1"/><text x="45.4805%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.2305%" y="213" width="0.0795%" height="15" fill="rgb(212,208,43)" fg:x="569" fg:w="1"/><text x="45.4805%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="45.2305%" y="197" width="0.0795%" height="15" fill="rgb(208,60,49)" fg:x="569" fg:w="1"/><text x="45.4805%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.2305%" y="181" width="0.0795%" height="15" fill="rgb(245,135,6)" fg:x="569" fg:w="1"/><text x="45.4805%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3895%" y="229" width="0.0795%" height="15" fill="rgb(243,86,23)" fg:x="571" fg:w="1"/><text x="45.6395%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3895%" y="213" width="0.0795%" height="15" fill="rgb(223,7,20)" fg:x="571" fg:w="1"/><text x="45.6395%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3895%" y="197" width="0.0795%" height="15" fill="rgb(212,182,17)" fg:x="571" fg:w="1"/><text x="45.6395%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.3895%" y="261" width="0.1590%" height="15" fill="rgb(237,94,50)" fg:x="571" fg:w="2"/><text x="45.6395%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="45.3895%" y="245" width="0.1590%" height="15" fill="rgb(232,185,44)" fg:x="571" fg:w="2"/><text x="45.6395%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.4690%" y="229" width="0.0795%" height="15" fill="rgb(205,50,36)" fg:x="572" fg:w="1"/><text x="45.7190%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.4690%" y="213" width="0.0795%" height="15" fill="rgb(252,32,32)" fg:x="572" fg:w="1"/><text x="45.7190%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.4690%" y="197" width="0.0795%" height="15" fill="rgb(241,123,33)" fg:x="572" fg:w="1"/><text x="45.7190%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.4690%" y="181" width="0.0795%" height="15" fill="rgb(212,140,16)" fg:x="572" fg:w="1"/><text x="45.7190%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.4690%" y="165" width="0.0795%" height="15" fill="rgb(247,132,5)" fg:x="572" fg:w="1"/><text x="45.7190%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.4690%" y="149" width="0.0795%" height="15" fill="rgb(209,137,38)" fg:x="572" fg:w="1"/><text x="45.7190%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.4690%" y="133" width="0.0795%" height="15" fill="rgb(248,32,42)" fg:x="572" fg:w="1"/><text x="45.7190%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.4690%" y="117" width="0.0795%" height="15" fill="rgb(216,188,40)" fg:x="572" fg:w="1"/><text x="45.7190%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.4690%" y="101" width="0.0795%" height="15" fill="rgb(209,127,53)" fg:x="572" fg:w="1"/><text x="45.7190%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.4690%" y="85" width="0.0795%" height="15" fill="rgb(254,162,9)" fg:x="572" fg:w="1"/><text x="45.7190%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.4690%" y="69" width="0.0795%" height="15" fill="rgb(219,183,10)" fg:x="572" fg:w="1"/><text x="45.7190%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.4690%" y="53" width="0.0795%" height="15" fill="rgb(217,192,21)" fg:x="572" fg:w="1"/><text x="45.7190%" y="63.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.5485%" y="229" width="0.0795%" height="15" fill="rgb(251,89,27)" fg:x="573" fg:w="1"/><text x="45.7985%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="45.2305%" y="341" width="0.4769%" height="15" fill="rgb(253,55,28)" fg:x="569" fg:w="6"/><text x="45.4805%" y="351.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="45.2305%" y="325" width="0.4769%" height="15" fill="rgb(216,159,8)" fg:x="569" fg:w="6"/><text x="45.4805%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="45.3100%" y="309" width="0.3975%" height="15" fill="rgb(231,228,44)" fg:x="570" fg:w="5"/><text x="45.5600%" y="319.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="45.3100%" y="293" width="0.3975%" height="15" fill="rgb(247,34,48)" fg:x="570" fg:w="5"/><text x="45.5600%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="45.3100%" y="277" width="0.3975%" height="15" fill="rgb(247,222,18)" fg:x="570" fg:w="5"/><text x="45.5600%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="45.5485%" y="261" width="0.1590%" height="15" fill="rgb(227,49,4)" fg:x="573" fg:w="2"/><text x="45.7985%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.5485%" y="245" width="0.1590%" height="15" fill="rgb(219,189,53)" fg:x="573" fg:w="2"/><text x="45.7985%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.6280%" y="229" width="0.0795%" height="15" fill="rgb(241,160,53)" fg:x="574" fg:w="1"/><text x="45.8780%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.6280%" y="213" width="0.0795%" height="15" fill="rgb(227,115,4)" fg:x="574" fg:w="1"/><text x="45.8780%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="45.6280%" y="197" width="0.0795%" height="15" fill="rgb(215,28,28)" fg:x="574" fg:w="1"/><text x="45.8780%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.6280%" y="181" width="0.0795%" height="15" fill="rgb(237,143,40)" fg:x="574" fg:w="1"/><text x="45.8780%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.6280%" y="165" width="0.0795%" height="15" fill="rgb(205,107,24)" fg:x="574" fg:w="1"/><text x="45.8780%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.6280%" y="149" width="0.0795%" height="15" fill="rgb(209,112,35)" fg:x="574" fg:w="1"/><text x="45.8780%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.7075%" y="277" width="0.0795%" height="15" fill="rgb(206,135,5)" fg:x="575" fg:w="1"/><text x="45.9575%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.7075%" y="261" width="0.0795%" height="15" fill="rgb(227,217,38)" fg:x="575" fg:w="1"/><text x="45.9575%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.7870%" y="245" width="0.0795%" height="15" fill="rgb(205,0,41)" fg:x="576" fg:w="1"/><text x="46.0370%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.8665%" y="213" width="0.1590%" height="15" fill="rgb(220,20,40)" fg:x="577" fg:w="2"/><text x="46.1165%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9459%" y="197" width="0.0795%" height="15" fill="rgb(216,145,3)" fg:x="578" fg:w="1"/><text x="46.1959%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.9459%" y="181" width="0.0795%" height="15" fill="rgb(207,130,51)" fg:x="578" fg:w="1"/><text x="46.1959%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1049%" y="181" width="0.0795%" height="15" fill="rgb(252,93,13)" fg:x="580" fg:w="1"/><text x="46.3549%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1049%" y="165" width="0.0795%" height="15" fill="rgb(210,105,15)" fg:x="580" fg:w="1"/><text x="46.3549%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2639%" y="149" width="0.0795%" height="15" fill="rgb(212,126,31)" fg:x="582" fg:w="1"/><text x="46.5139%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2639%" y="133" width="0.0795%" height="15" fill="rgb(241,167,46)" fg:x="582" fg:w="1"/><text x="46.5139%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2639%" y="117" width="0.0795%" height="15" fill="rgb(217,143,19)" fg:x="582" fg:w="1"/><text x="46.5139%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.3434%" y="85" width="0.0795%" height="15" fill="rgb(235,117,33)" fg:x="583" fg:w="1"/><text x="46.5934%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="46.1844%" y="165" width="0.3180%" height="15" fill="rgb(247,95,6)" fg:x="581" fg:w="4"/><text x="46.4344%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.3434%" y="149" width="0.1590%" height="15" fill="rgb(243,206,43)" fg:x="583" fg:w="2"/><text x="46.5934%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.3434%" y="133" width="0.1590%" height="15" fill="rgb(229,65,54)" fg:x="583" fg:w="2"/><text x="46.5934%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.3434%" y="117" width="0.1590%" height="15" fill="rgb(247,137,34)" fg:x="583" fg:w="2"/><text x="46.5934%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.3434%" y="101" width="0.1590%" height="15" fill="rgb(245,174,44)" fg:x="583" fg:w="2"/><text x="46.5934%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4229%" y="85" width="0.0795%" height="15" fill="rgb(223,64,15)" fg:x="584" fg:w="1"/><text x="46.6729%" y="95.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4229%" y="69" width="0.0795%" height="15" fill="rgb(243,153,36)" fg:x="584" fg:w="1"/><text x="46.6729%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.4229%" y="53" width="0.0795%" height="15" fill="rgb(252,23,4)" fg:x="584" fg:w="1"/><text x="46.6729%" y="63.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="46.1049%" y="197" width="0.4769%" height="15" fill="rgb(209,132,13)" fg:x="580" fg:w="6"/><text x="46.3549%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="46.1844%" y="181" width="0.3975%" height="15" fill="rgb(209,196,21)" fg:x="581" fg:w="5"/><text x="46.4344%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5024%" y="165" width="0.0795%" height="15" fill="rgb(252,197,1)" fg:x="585" fg:w="1"/><text x="46.7524%" y="175.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.03%)</title><rect x="45.7075%" y="325" width="1.0334%" height="15" fill="rgb(229,42,46)" fg:x="575" fg:w="13"/><text x="45.9575%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.03%)</title><rect x="45.7075%" y="309" width="1.0334%" height="15" fill="rgb(219,85,8)" fg:x="575" fg:w="13"/><text x="45.9575%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.03%)</title><rect x="45.7075%" y="293" width="1.0334%" height="15" fill="rgb(223,185,14)" fg:x="575" fg:w="13"/><text x="45.9575%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.95%)</title><rect x="45.7870%" y="277" width="0.9539%" height="15" fill="rgb(217,196,18)" fg:x="576" fg:w="12"/><text x="46.0370%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.95%)</title><rect x="45.7870%" y="261" width="0.9539%" height="15" fill="rgb(220,122,37)" fg:x="576" fg:w="12"/><text x="46.0370%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.87%)</title><rect x="45.8665%" y="245" width="0.8744%" height="15" fill="rgb(236,135,33)" fg:x="577" fg:w="11"/><text x="46.1165%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.87%)</title><rect x="45.8665%" y="229" width="0.8744%" height="15" fill="rgb(222,86,54)" fg:x="577" fg:w="11"/><text x="46.1165%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="46.0254%" y="213" width="0.7154%" height="15" fill="rgb(227,42,22)" fg:x="579" fg:w="9"/><text x="46.2754%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.5819%" y="197" width="0.1590%" height="15" fill="rgb(243,101,27)" fg:x="586" fg:w="2"/><text x="46.8319%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.5819%" y="181" width="0.1590%" height="15" fill="rgb(229,100,8)" fg:x="586" fg:w="2"/><text x="46.8319%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="46.5819%" y="165" width="0.1590%" height="15" fill="rgb(252,68,10)" fg:x="586" fg:w="2"/><text x="46.8319%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.6614%" y="149" width="0.0795%" height="15" fill="rgb(219,19,31)" fg:x="587" fg:w="1"/><text x="46.9114%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.7409%" y="261" width="0.0795%" height="15" fill="rgb(246,150,44)" fg:x="588" fg:w="1"/><text x="46.9909%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.8998%" y="149" width="0.0795%" height="15" fill="rgb(211,14,39)" fg:x="590" fg:w="1"/><text x="47.1498%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.8998%" y="133" width="0.0795%" height="15" fill="rgb(221,98,29)" fg:x="590" fg:w="1"/><text x="47.1498%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.8998%" y="117" width="0.0795%" height="15" fill="rgb(221,70,26)" fg:x="590" fg:w="1"/><text x="47.1498%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.8998%" y="101" width="0.0795%" height="15" fill="rgb(236,146,30)" fg:x="590" fg:w="1"/><text x="47.1498%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="46.8203%" y="245" width="0.2385%" height="15" fill="rgb(226,94,34)" fg:x="589" fg:w="3"/><text x="47.0703%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="46.8203%" y="229" width="0.2385%" height="15" fill="rgb(248,132,21)" fg:x="589" fg:w="3"/><text x="47.0703%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.8998%" y="213" width="0.1590%" height="15" fill="rgb(245,43,50)" fg:x="590" fg:w="2"/><text x="47.1498%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.8998%" y="197" width="0.1590%" height="15" fill="rgb(245,132,31)" fg:x="590" fg:w="2"/><text x="47.1498%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.8998%" y="181" width="0.1590%" height="15" fill="rgb(230,171,4)" fg:x="590" fg:w="2"/><text x="47.1498%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.8998%" y="165" width="0.1590%" height="15" fill="rgb(235,6,45)" fg:x="590" fg:w="2"/><text x="47.1498%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="46.9793%" y="149" width="0.0795%" height="15" fill="rgb(220,80,28)" fg:x="591" fg:w="1"/><text x="47.2293%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="47.0588%" y="245" width="0.1590%" height="15" fill="rgb(242,171,9)" fg:x="592" fg:w="2"/><text x="47.3088%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="47.0588%" y="229" width="0.1590%" height="15" fill="rgb(214,135,29)" fg:x="592" fg:w="2"/><text x="47.3088%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="47.0588%" y="213" width="0.1590%" height="15" fill="rgb(221,229,16)" fg:x="592" fg:w="2"/><text x="47.3088%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="47.0588%" y="197" width="0.1590%" height="15" fill="rgb(253,59,46)" fg:x="592" fg:w="2"/><text x="47.3088%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="47.0588%" y="181" width="0.1590%" height="15" fill="rgb(250,147,20)" fg:x="592" fg:w="2"/><text x="47.3088%" y="191.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.0588%" y="165" width="0.1590%" height="15" fill="rgb(236,64,48)" fg:x="592" fg:w="2"/><text x="47.3088%" y="175.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="47.2178%" y="197" width="0.0795%" height="15" fill="rgb(240,37,42)" fg:x="594" fg:w="1"/><text x="47.4678%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="47.2178%" y="181" width="0.0795%" height="15" fill="rgb(220,41,50)" fg:x="594" fg:w="1"/><text x="47.4678%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2178%" y="165" width="0.0795%" height="15" fill="rgb(216,51,14)" fg:x="594" fg:w="1"/><text x="47.4678%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.2178%" y="149" width="0.0795%" height="15" fill="rgb(215,83,10)" fg:x="594" fg:w="1"/><text x="47.4678%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.2973%" y="181" width="0.0795%" height="15" fill="rgb(206,144,17)" fg:x="595" fg:w="1"/><text x="47.5473%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.2973%" y="165" width="0.0795%" height="15" fill="rgb(219,196,37)" fg:x="595" fg:w="1"/><text x="47.5473%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (22 samples, 1.75%)</title><rect x="45.7075%" y="341" width="1.7488%" height="15" fill="rgb(226,135,26)" fg:x="575" fg:w="22"/><text x="45.9575%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="46.7409%" y="325" width="0.7154%" height="15" fill="rgb(237,195,40)" fg:x="588" fg:w="9"/><text x="46.9909%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="46.7409%" y="309" width="0.7154%" height="15" fill="rgb(228,182,42)" fg:x="588" fg:w="9"/><text x="46.9909%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="46.7409%" y="293" width="0.7154%" height="15" fill="rgb(224,135,50)" fg:x="588" fg:w="9"/><text x="46.9909%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="46.7409%" y="277" width="0.7154%" height="15" fill="rgb(236,215,34)" fg:x="588" fg:w="9"/><text x="46.9909%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="46.8203%" y="261" width="0.6359%" height="15" fill="rgb(244,213,27)" fg:x="589" fg:w="8"/><text x="47.0703%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.2178%" y="245" width="0.2385%" height="15" fill="rgb(233,37,53)" fg:x="594" fg:w="3"/><text x="47.4678%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="47.2178%" y="229" width="0.2385%" height="15" fill="rgb(222,132,14)" fg:x="594" fg:w="3"/><text x="47.4678%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="47.2178%" y="213" width="0.2385%" height="15" fill="rgb(219,202,29)" fg:x="594" fg:w="3"/><text x="47.4678%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.2973%" y="197" width="0.1590%" height="15" fill="rgb(226,157,39)" fg:x="595" fg:w="2"/><text x="47.5473%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.3768%" y="181" width="0.0795%" height="15" fill="rgb(235,213,2)" fg:x="596" fg:w="1"/><text x="47.6268%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.3768%" y="165" width="0.0795%" height="15" fill="rgb(250,121,2)" fg:x="596" fg:w="1"/><text x="47.6268%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.3768%" y="149" width="0.0795%" height="15" fill="rgb(206,192,33)" fg:x="596" fg:w="1"/><text x="47.6268%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.3768%" y="133" width="0.0795%" height="15" fill="rgb(240,161,6)" fg:x="596" fg:w="1"/><text x="47.6268%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.3768%" y="117" width="0.0795%" height="15" fill="rgb(246,53,30)" fg:x="596" fg:w="1"/><text x="47.6268%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.3768%" y="101" width="0.0795%" height="15" fill="rgb(219,123,43)" fg:x="596" fg:w="1"/><text x="47.6268%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.3768%" y="85" width="0.0795%" height="15" fill="rgb(236,53,49)" fg:x="596" fg:w="1"/><text x="47.6268%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.5358%" y="245" width="0.0795%" height="15" fill="rgb(241,156,1)" fg:x="598" fg:w="1"/><text x="47.7858%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.5358%" y="229" width="0.0795%" height="15" fill="rgb(209,73,26)" fg:x="598" fg:w="1"/><text x="47.7858%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5358%" y="213" width="0.0795%" height="15" fill="rgb(206,114,3)" fg:x="598" fg:w="1"/><text x="47.7858%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.5358%" y="293" width="0.2385%" height="15" fill="rgb(230,214,9)" fg:x="598" fg:w="3"/><text x="47.7858%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.5358%" y="277" width="0.2385%" height="15" fill="rgb(240,184,46)" fg:x="598" fg:w="3"/><text x="47.7858%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.5358%" y="261" width="0.2385%" height="15" fill="rgb(242,169,54)" fg:x="598" fg:w="3"/><text x="47.7858%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.6153%" y="245" width="0.1590%" height="15" fill="rgb(207,168,50)" fg:x="599" fg:w="2"/><text x="47.8653%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="47.4563%" y="341" width="0.3975%" height="15" fill="rgb(240,114,2)" fg:x="597" fg:w="5"/><text x="47.7063%" y="351.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="47.4563%" y="325" width="0.3975%" height="15" fill="rgb(211,17,40)" fg:x="597" fg:w="5"/><text x="47.7063%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="47.5358%" y="309" width="0.3180%" height="15" fill="rgb(235,97,36)" fg:x="598" fg:w="4"/><text x="47.7858%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.7742%" y="293" width="0.0795%" height="15" fill="rgb(208,164,11)" fg:x="601" fg:w="1"/><text x="48.0242%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.7742%" y="277" width="0.0795%" height="15" fill="rgb(242,11,17)" fg:x="601" fg:w="1"/><text x="48.0242%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.7742%" y="261" width="0.0795%" height="15" fill="rgb(215,86,33)" fg:x="601" fg:w="1"/><text x="48.0242%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.7742%" y="245" width="0.0795%" height="15" fill="rgb(245,185,28)" fg:x="601" fg:w="1"/><text x="48.0242%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="47.7742%" y="229" width="0.0795%" height="15" fill="rgb(231,89,42)" fg:x="601" fg:w="1"/><text x="48.0242%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.7742%" y="213" width="0.0795%" height="15" fill="rgb(210,18,47)" fg:x="601" fg:w="1"/><text x="48.0242%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.7742%" y="197" width="0.0795%" height="15" fill="rgb(214,84,8)" fg:x="601" fg:w="1"/><text x="48.0242%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.7742%" y="181" width="0.0795%" height="15" fill="rgb(214,222,23)" fg:x="601" fg:w="1"/><text x="48.0242%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.7742%" y="165" width="0.0795%" height="15" fill="rgb(213,104,21)" fg:x="601" fg:w="1"/><text x="48.0242%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.7742%" y="149" width="0.0795%" height="15" fill="rgb(238,138,6)" fg:x="601" fg:w="1"/><text x="48.0242%" y="159.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (40 samples, 3.18%)</title><rect x="45.0715%" y="437" width="3.1797%" height="15" fill="rgb(205,167,50)" fg:x="567" fg:w="40"/><text x="45.3215%" y="447.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (40 samples, 3.18%)</title><rect x="45.0715%" y="421" width="3.1797%" height="15" fill="rgb(230,105,27)" fg:x="567" fg:w="40"/><text x="45.3215%" y="431.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 3.10%)</title><rect x="45.1510%" y="405" width="3.1002%" height="15" fill="rgb(222,97,48)" fg:x="568" fg:w="39"/><text x="45.4010%" y="415.50">&lt;al..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (39 samples, 3.10%)</title><rect x="45.1510%" y="389" width="3.1002%" height="15" fill="rgb(222,197,14)" fg:x="568" fg:w="39"/><text x="45.4010%" y="399.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (38 samples, 3.02%)</title><rect x="45.2305%" y="373" width="3.0207%" height="15" fill="rgb(210,105,47)" fg:x="569" fg:w="38"/><text x="45.4805%" y="383.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (38 samples, 3.02%)</title><rect x="45.2305%" y="357" width="3.0207%" height="15" fill="rgb(238,158,19)" fg:x="569" fg:w="38"/><text x="45.4805%" y="367.50">eng..</text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="47.8537%" y="341" width="0.3975%" height="15" fill="rgb(226,176,23)" fg:x="602" fg:w="5"/><text x="48.1037%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="47.8537%" y="325" width="0.3975%" height="15" fill="rgb(208,79,31)" fg:x="602" fg:w="5"/><text x="48.1037%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="47.9332%" y="309" width="0.3180%" height="15" fill="rgb(221,154,21)" fg:x="603" fg:w="4"/><text x="48.1832%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="47.9332%" y="293" width="0.3180%" height="15" fill="rgb(213,61,41)" fg:x="603" fg:w="4"/><text x="48.1832%" y="303.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="47.9332%" y="277" width="0.3180%" height="15" fill="rgb(215,28,33)" fg:x="603" fg:w="4"/><text x="48.1832%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.3307%" y="405" width="0.0795%" height="15" fill="rgb(231,139,26)" fg:x="608" fg:w="1"/><text x="48.5807%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.4102%" y="405" width="0.0795%" height="15" fill="rgb(232,159,16)" fg:x="609" fg:w="1"/><text x="48.6602%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (57 samples, 4.53%)</title><rect x="44.0382%" y="501" width="4.5310%" height="15" fill="rgb(233,80,10)" fg:x="554" fg:w="57"/><text x="44.2882%" y="511.50">plugi..</text></g><g><title>plugins_core::tools::contained_by (51 samples, 4.05%)</title><rect x="44.5151%" y="485" width="4.0541%" height="15" fill="rgb(208,147,29)" fg:x="560" fg:w="51"/><text x="44.7651%" y="495.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (45 samples, 3.58%)</title><rect x="44.9921%" y="469" width="3.5771%" height="15" fill="rgb(213,10,12)" fg:x="566" fg:w="45"/><text x="45.2421%" y="479.50">kern..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (45 samples, 3.58%)</title><rect x="44.9921%" y="453" width="3.5771%" height="15" fill="rgb(231,218,13)" fg:x="566" fg:w="45"/><text x="45.2421%" y="463.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="48.2512%" y="437" width="0.3180%" height="15" fill="rgb(244,199,44)" fg:x="607" fg:w="4"/><text x="48.5012%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="48.2512%" y="421" width="0.3180%" height="15" fill="rgb(240,144,53)" fg:x="607" fg:w="4"/><text x="48.5012%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="48.4897%" y="405" width="0.0795%" height="15" fill="rgb(223,57,28)" fg:x="610" fg:w="1"/><text x="48.7397%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="48.4897%" y="389" width="0.0795%" height="15" fill="rgb(213,134,38)" fg:x="610" fg:w="1"/><text x="48.7397%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="48.4897%" y="373" width="0.0795%" height="15" fill="rgb(251,182,42)" fg:x="610" fg:w="1"/><text x="48.7397%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.4897%" y="357" width="0.0795%" height="15" fill="rgb(229,93,13)" fg:x="610" fg:w="1"/><text x="48.7397%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.4897%" y="341" width="0.0795%" height="15" fill="rgb(234,171,3)" fg:x="610" fg:w="1"/><text x="48.7397%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5692%" y="485" width="0.0795%" height="15" fill="rgb(241,105,32)" fg:x="611" fg:w="1"/><text x="48.8192%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5692%" y="469" width="0.0795%" height="15" fill="rgb(221,66,3)" fg:x="611" fg:w="1"/><text x="48.8192%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5692%" y="453" width="0.0795%" height="15" fill="rgb(248,155,29)" fg:x="611" fg:w="1"/><text x="48.8192%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5692%" y="437" width="0.0795%" height="15" fill="rgb(231,31,5)" fg:x="611" fg:w="1"/><text x="48.8192%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.5692%" y="421" width="0.0795%" height="15" fill="rgb(213,188,31)" fg:x="611" fg:w="1"/><text x="48.8192%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.5692%" y="405" width="0.0795%" height="15" fill="rgb(212,104,33)" fg:x="611" fg:w="1"/><text x="48.8192%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.5692%" y="389" width="0.0795%" height="15" fill="rgb(254,77,51)" fg:x="611" fg:w="1"/><text x="48.8192%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="48.5692%" y="373" width="0.0795%" height="15" fill="rgb(234,39,26)" fg:x="611" fg:w="1"/><text x="48.8192%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="48.5692%" y="357" width="0.0795%" height="15" fill="rgb(208,88,36)" fg:x="611" fg:w="1"/><text x="48.8192%" y="367.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="48.6486%" y="485" width="0.0795%" height="15" fill="rgb(243,222,10)" fg:x="612" fg:w="1"/><text x="48.8986%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.7281%" y="389" width="0.0795%" height="15" fill="rgb(218,133,52)" fg:x="613" fg:w="1"/><text x="48.9781%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.7281%" y="373" width="0.0795%" height="15" fill="rgb(222,25,26)" fg:x="613" fg:w="1"/><text x="48.9781%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.8076%" y="293" width="0.0795%" height="15" fill="rgb(243,174,24)" fg:x="614" fg:w="1"/><text x="49.0576%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.8076%" y="277" width="0.0795%" height="15" fill="rgb(233,188,52)" fg:x="614" fg:w="1"/><text x="49.0576%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="48.7281%" y="453" width="0.2385%" height="15" fill="rgb(208,89,14)" fg:x="613" fg:w="3"/><text x="48.9781%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="48.7281%" y="437" width="0.2385%" height="15" fill="rgb(205,204,21)" fg:x="613" fg:w="3"/><text x="48.9781%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="48.7281%" y="421" width="0.2385%" height="15" fill="rgb(246,39,28)" fg:x="613" fg:w="3"/><text x="48.9781%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="48.7281%" y="405" width="0.2385%" height="15" fill="rgb(235,71,19)" fg:x="613" fg:w="3"/><text x="48.9781%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.8076%" y="389" width="0.1590%" height="15" fill="rgb(211,62,39)" fg:x="614" fg:w="2"/><text x="49.0576%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.8076%" y="373" width="0.1590%" height="15" fill="rgb(246,118,20)" fg:x="614" fg:w="2"/><text x="49.0576%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.8076%" y="357" width="0.1590%" height="15" fill="rgb(230,82,12)" fg:x="614" fg:w="2"/><text x="49.0576%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.8076%" y="341" width="0.1590%" height="15" fill="rgb(205,212,34)" fg:x="614" fg:w="2"/><text x="49.0576%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="48.8076%" y="325" width="0.1590%" height="15" fill="rgb(239,90,1)" fg:x="614" fg:w="2"/><text x="49.0576%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.8076%" y="309" width="0.1590%" height="15" fill="rgb(225,198,50)" fg:x="614" fg:w="2"/><text x="49.0576%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.8871%" y="293" width="0.0795%" height="15" fill="rgb(227,208,48)" fg:x="615" fg:w="1"/><text x="49.1371%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8871%" y="277" width="0.0795%" height="15" fill="rgb(238,134,41)" fg:x="615" fg:w="1"/><text x="49.1371%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.8871%" y="261" width="0.0795%" height="15" fill="rgb(241,58,39)" fg:x="615" fg:w="1"/><text x="49.1371%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8871%" y="245" width="0.0795%" height="15" fill="rgb(214,126,4)" fg:x="615" fg:w="1"/><text x="49.1371%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.8871%" y="229" width="0.0795%" height="15" fill="rgb(235,149,4)" fg:x="615" fg:w="1"/><text x="49.1371%" y="239.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.48%)</title><rect x="48.5692%" y="501" width="0.4769%" height="15" fill="rgb(236,59,29)" fg:x="611" fg:w="6"/><text x="48.8192%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="48.7281%" y="485" width="0.3180%" height="15" fill="rgb(246,11,33)" fg:x="613" fg:w="4"/><text x="48.9781%" y="495.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="48.7281%" y="469" width="0.3180%" height="15" fill="rgb(232,180,35)" fg:x="613" fg:w="4"/><text x="48.9781%" y="479.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="48.9666%" y="453" width="0.0795%" height="15" fill="rgb(220,35,37)" fg:x="616" fg:w="1"/><text x="49.2166%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9666%" y="437" width="0.0795%" height="15" fill="rgb(238,107,48)" fg:x="616" fg:w="1"/><text x="49.2166%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (66 samples, 5.25%)</title><rect x="43.8792%" y="533" width="5.2464%" height="15" fill="rgb(205,65,21)" fg:x="552" fg:w="66"/><text x="44.1292%" y="543.50">&lt;engin..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (66 samples, 5.25%)</title><rect x="43.8792%" y="517" width="5.2464%" height="15" fill="rgb(246,138,48)" fg:x="552" fg:w="66"/><text x="44.1292%" y="527.50">&lt;plugi..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="49.0461%" y="501" width="0.0795%" height="15" fill="rgb(209,220,47)" fg:x="617" fg:w="1"/><text x="49.2961%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0461%" y="485" width="0.0795%" height="15" fill="rgb(222,162,49)" fg:x="617" fg:w="1"/><text x="49.2961%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="49.1256%" y="501" width="0.0795%" height="15" fill="rgb(243,123,11)" fg:x="618" fg:w="1"/><text x="49.3756%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1256%" y="485" width="0.0795%" height="15" fill="rgb(221,229,41)" fg:x="618" fg:w="1"/><text x="49.3756%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="49.3641%" y="405" width="0.1590%" height="15" fill="rgb(216,68,4)" fg:x="621" fg:w="2"/><text x="49.6141%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.4436%" y="389" width="0.0795%" height="15" fill="rgb(207,88,35)" fg:x="622" fg:w="1"/><text x="49.6936%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="49.2051%" y="469" width="0.3975%" height="15" fill="rgb(252,2,5)" fg:x="619" fg:w="5"/><text x="49.4551%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="49.3641%" y="453" width="0.2385%" height="15" fill="rgb(209,173,7)" fg:x="621" fg:w="3"/><text x="49.6141%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="49.3641%" y="437" width="0.2385%" height="15" fill="rgb(210,198,52)" fg:x="621" fg:w="3"/><text x="49.6141%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="49.3641%" y="421" width="0.2385%" height="15" fill="rgb(228,152,32)" fg:x="621" fg:w="3"/><text x="49.6141%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.5231%" y="405" width="0.0795%" height="15" fill="rgb(249,98,29)" fg:x="623" fg:w="1"/><text x="49.7731%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.5231%" y="389" width="0.0795%" height="15" fill="rgb(205,148,48)" fg:x="623" fg:w="1"/><text x="49.7731%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.5231%" y="373" width="0.0795%" height="15" fill="rgb(236,69,34)" fg:x="623" fg:w="1"/><text x="49.7731%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.5231%" y="357" width="0.0795%" height="15" fill="rgb(220,151,41)" fg:x="623" fg:w="1"/><text x="49.7731%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.5231%" y="341" width="0.0795%" height="15" fill="rgb(254,106,24)" fg:x="623" fg:w="1"/><text x="49.7731%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.5231%" y="325" width="0.0795%" height="15" fill="rgb(210,37,48)" fg:x="623" fg:w="1"/><text x="49.7731%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.5231%" y="309" width="0.0795%" height="15" fill="rgb(254,131,5)" fg:x="623" fg:w="1"/><text x="49.7731%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.5231%" y="293" width="0.0795%" height="15" fill="rgb(216,55,41)" fg:x="623" fg:w="1"/><text x="49.7731%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.5231%" y="277" width="0.0795%" height="15" fill="rgb(250,35,31)" fg:x="623" fg:w="1"/><text x="49.7731%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.5231%" y="261" width="0.0795%" height="15" fill="rgb(207,124,33)" fg:x="623" fg:w="1"/><text x="49.7731%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.5231%" y="245" width="0.0795%" height="15" fill="rgb(249,175,17)" fg:x="623" fg:w="1"/><text x="49.7731%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.5231%" y="229" width="0.0795%" height="15" fill="rgb(224,175,39)" fg:x="623" fg:w="1"/><text x="49.7731%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.6820%" y="373" width="0.0795%" height="15" fill="rgb(208,67,49)" fg:x="625" fg:w="1"/><text x="49.9320%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.6820%" y="357" width="0.0795%" height="15" fill="rgb(222,188,41)" fg:x="625" fg:w="1"/><text x="49.9320%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.0000%" y="341" width="0.0795%" height="15" fill="rgb(243,213,30)" fg:x="629" fg:w="1"/><text x="50.2500%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.2385%" y="309" width="0.0795%" height="15" fill="rgb(253,100,45)" fg:x="632" fg:w="1"/><text x="50.4885%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.2385%" y="293" width="0.0795%" height="15" fill="rgb(226,24,44)" fg:x="632" fg:w="1"/><text x="50.4885%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="50.3180%" y="309" width="0.0795%" height="15" fill="rgb(215,41,24)" fg:x="633" fg:w="1"/><text x="50.5680%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.3180%" y="293" width="0.0795%" height="15" fill="rgb(254,53,33)" fg:x="633" fg:w="1"/><text x="50.5680%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="50.3180%" y="277" width="0.0795%" height="15" fill="rgb(242,103,10)" fg:x="633" fg:w="1"/><text x="50.5680%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (17 samples, 1.35%)</title><rect x="49.1256%" y="517" width="1.3514%" height="15" fill="rgb(246,29,21)" fg:x="618" fg:w="17"/><text x="49.3756%" y="527.50"></text></g><g><title>kernel::model::props::load_props (16 samples, 1.27%)</title><rect x="49.2051%" y="501" width="1.2719%" height="15" fill="rgb(251,154,1)" fg:x="619" fg:w="16"/><text x="49.4551%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.27%)</title><rect x="49.2051%" y="485" width="1.2719%" height="15" fill="rgb(254,212,26)" fg:x="619" fg:w="16"/><text x="49.4551%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.87%)</title><rect x="49.6025%" y="469" width="0.8744%" height="15" fill="rgb(251,187,46)" fg:x="624" fg:w="11"/><text x="49.8525%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.87%)</title><rect x="49.6025%" y="453" width="0.8744%" height="15" fill="rgb(224,208,14)" fg:x="624" fg:w="11"/><text x="49.8525%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.87%)</title><rect x="49.6025%" y="437" width="0.8744%" height="15" fill="rgb(222,176,26)" fg:x="624" fg:w="11"/><text x="49.8525%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.87%)</title><rect x="49.6025%" y="421" width="0.8744%" height="15" fill="rgb(241,219,52)" fg:x="624" fg:w="11"/><text x="49.8525%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.87%)</title><rect x="49.6025%" y="405" width="0.8744%" height="15" fill="rgb(252,198,21)" fg:x="624" fg:w="11"/><text x="49.8525%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.79%)</title><rect x="49.6820%" y="389" width="0.7949%" height="15" fill="rgb(244,196,23)" fg:x="625" fg:w="10"/><text x="49.9320%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="49.7615%" y="373" width="0.7154%" height="15" fill="rgb(239,121,44)" fg:x="626" fg:w="9"/><text x="50.0115%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="49.8410%" y="357" width="0.6359%" height="15" fill="rgb(249,203,23)" fg:x="627" fg:w="8"/><text x="50.0910%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="50.0795%" y="341" width="0.3975%" height="15" fill="rgb(238,219,10)" fg:x="630" fg:w="5"/><text x="50.3295%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="50.1590%" y="325" width="0.3180%" height="15" fill="rgb(241,35,46)" fg:x="631" fg:w="4"/><text x="50.4090%" y="335.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="50.3975%" y="309" width="0.0795%" height="15" fill="rgb(218,28,6)" fg:x="634" fg:w="1"/><text x="50.6475%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.7154%" y="405" width="0.0795%" height="15" fill="rgb(233,151,50)" fg:x="638" fg:w="1"/><text x="50.9654%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.7154%" y="389" width="0.0795%" height="15" fill="rgb(208,57,8)" fg:x="638" fg:w="1"/><text x="50.9654%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="50.5564%" y="421" width="0.3975%" height="15" fill="rgb(253,99,10)" fg:x="636" fg:w="5"/><text x="50.8064%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.7949%" y="405" width="0.1590%" height="15" fill="rgb(237,196,49)" fg:x="639" fg:w="2"/><text x="51.0449%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.7949%" y="389" width="0.1590%" height="15" fill="rgb(209,51,3)" fg:x="639" fg:w="2"/><text x="51.0449%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="50.7949%" y="373" width="0.1590%" height="15" fill="rgb(238,129,10)" fg:x="639" fg:w="2"/><text x="51.0449%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="50.7949%" y="357" width="0.1590%" height="15" fill="rgb(246,201,16)" fg:x="639" fg:w="2"/><text x="51.0449%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="50.7949%" y="341" width="0.1590%" height="15" fill="rgb(250,160,20)" fg:x="639" fg:w="2"/><text x="51.0449%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.7949%" y="325" width="0.1590%" height="15" fill="rgb(251,107,25)" fg:x="639" fg:w="2"/><text x="51.0449%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.7949%" y="309" width="0.1590%" height="15" fill="rgb(212,103,39)" fg:x="639" fg:w="2"/><text x="51.0449%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="50.7949%" y="293" width="0.1590%" height="15" fill="rgb(207,9,29)" fg:x="639" fg:w="2"/><text x="51.0449%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="50.7949%" y="277" width="0.1590%" height="15" fill="rgb(227,84,3)" fg:x="639" fg:w="2"/><text x="51.0449%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="50.7949%" y="261" width="0.1590%" height="15" fill="rgb(242,194,7)" fg:x="639" fg:w="2"/><text x="51.0449%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="50.7949%" y="245" width="0.1590%" height="15" fill="rgb(230,40,4)" fg:x="639" fg:w="2"/><text x="51.0449%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.7949%" y="229" width="0.1590%" height="15" fill="rgb(243,229,33)" fg:x="639" fg:w="2"/><text x="51.0449%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9539%" y="421" width="0.0795%" height="15" fill="rgb(240,65,24)" fg:x="641" fg:w="1"/><text x="51.2039%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9539%" y="405" width="0.0795%" height="15" fill="rgb(212,28,20)" fg:x="641" fg:w="1"/><text x="51.2039%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.9539%" y="389" width="0.0795%" height="15" fill="rgb(209,72,3)" fg:x="641" fg:w="1"/><text x="51.2039%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.9539%" y="373" width="0.0795%" height="15" fill="rgb(238,170,36)" fg:x="641" fg:w="1"/><text x="51.2039%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.9539%" y="357" width="0.0795%" height="15" fill="rgb(236,19,38)" fg:x="641" fg:w="1"/><text x="51.2039%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.9539%" y="341" width="0.0795%" height="15" fill="rgb(230,67,43)" fg:x="641" fg:w="1"/><text x="51.2039%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.9539%" y="325" width="0.0795%" height="15" fill="rgb(227,14,36)" fg:x="641" fg:w="1"/><text x="51.2039%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.9539%" y="309" width="0.0795%" height="15" fill="rgb(247,171,49)" fg:x="641" fg:w="1"/><text x="51.2039%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.9539%" y="293" width="0.0795%" height="15" fill="rgb(235,164,51)" fg:x="641" fg:w="1"/><text x="51.2039%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.9539%" y="277" width="0.0795%" height="15" fill="rgb(246,107,20)" fg:x="641" fg:w="1"/><text x="51.2039%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.9539%" y="261" width="0.0795%" height="15" fill="rgb(226,88,18)" fg:x="641" fg:w="1"/><text x="51.2039%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.9539%" y="245" width="0.0795%" height="15" fill="rgb(235,136,9)" fg:x="641" fg:w="1"/><text x="51.2039%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="50.5564%" y="437" width="0.5564%" height="15" fill="rgb(209,3,34)" fg:x="636" fg:w="7"/><text x="50.8064%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.0334%" y="421" width="0.0795%" height="15" fill="rgb(213,38,19)" fg:x="642" fg:w="1"/><text x="51.2834%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="50.5564%" y="469" width="0.6359%" height="15" fill="rgb(254,24,24)" fg:x="636" fg:w="8"/><text x="50.8064%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="50.5564%" y="453" width="0.6359%" height="15" fill="rgb(219,122,42)" fg:x="636" fg:w="8"/><text x="50.8064%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1129%" y="437" width="0.0795%" height="15" fill="rgb(205,128,31)" fg:x="643" fg:w="1"/><text x="51.3629%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1129%" y="421" width="0.0795%" height="15" fill="rgb(212,142,0)" fg:x="643" fg:w="1"/><text x="51.3629%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.1129%" y="405" width="0.0795%" height="15" fill="rgb(211,25,35)" fg:x="643" fg:w="1"/><text x="51.3629%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.1129%" y="389" width="0.0795%" height="15" fill="rgb(220,150,53)" fg:x="643" fg:w="1"/><text x="51.3629%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.1129%" y="373" width="0.0795%" height="15" fill="rgb(220,30,24)" fg:x="643" fg:w="1"/><text x="51.3629%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.1129%" y="357" width="0.0795%" height="15" fill="rgb(218,86,23)" fg:x="643" fg:w="1"/><text x="51.3629%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.1129%" y="341" width="0.0795%" height="15" fill="rgb(206,62,27)" fg:x="643" fg:w="1"/><text x="51.3629%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.1129%" y="325" width="0.0795%" height="15" fill="rgb(249,174,0)" fg:x="643" fg:w="1"/><text x="51.3629%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.1129%" y="309" width="0.0795%" height="15" fill="rgb(246,67,27)" fg:x="643" fg:w="1"/><text x="51.3629%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.1129%" y="293" width="0.0795%" height="15" fill="rgb(250,195,30)" fg:x="643" fg:w="1"/><text x="51.3629%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.1129%" y="277" width="0.0795%" height="15" fill="rgb(251,171,50)" fg:x="643" fg:w="1"/><text x="51.3629%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.1924%" y="469" width="0.0795%" height="15" fill="rgb(236,196,10)" fg:x="644" fg:w="1"/><text x="51.4424%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.2719%" y="389" width="0.0795%" height="15" fill="rgb(249,228,52)" fg:x="645" fg:w="1"/><text x="51.5219%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="51.2719%" y="469" width="0.1590%" height="15" fill="rgb(219,60,51)" fg:x="645" fg:w="2"/><text x="51.5219%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="51.2719%" y="453" width="0.1590%" height="15" fill="rgb(240,198,24)" fg:x="645" fg:w="2"/><text x="51.5219%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="51.2719%" y="437" width="0.1590%" height="15" fill="rgb(240,192,40)" fg:x="645" fg:w="2"/><text x="51.5219%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="51.2719%" y="421" width="0.1590%" height="15" fill="rgb(219,118,5)" fg:x="645" fg:w="2"/><text x="51.5219%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="51.2719%" y="405" width="0.1590%" height="15" fill="rgb(205,202,34)" fg:x="645" fg:w="2"/><text x="51.5219%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.3514%" y="389" width="0.0795%" height="15" fill="rgb(234,153,26)" fg:x="646" fg:w="1"/><text x="51.6014%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.3514%" y="373" width="0.0795%" height="15" fill="rgb(229,26,29)" fg:x="646" fg:w="1"/><text x="51.6014%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="51.7488%" y="309" width="0.0795%" height="15" fill="rgb(237,115,21)" fg:x="651" fg:w="1"/><text x="51.9988%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="51.7488%" y="293" width="0.0795%" height="15" fill="rgb(252,144,15)" fg:x="651" fg:w="1"/><text x="51.9988%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (35 samples, 2.78%)</title><rect x="49.1256%" y="533" width="2.7822%" height="15" fill="rgb(232,26,13)" fg:x="618" fg:w="35"/><text x="49.3756%" y="543.50">ke..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (18 samples, 1.43%)</title><rect x="50.4769%" y="517" width="1.4308%" height="15" fill="rgb(206,44,19)" fg:x="635" fg:w="18"/><text x="50.7269%" y="527.50"></text></g><g><title>kernel::model::props::load_props (18 samples, 1.43%)</title><rect x="50.4769%" y="501" width="1.4308%" height="15" fill="rgb(249,159,2)" fg:x="635" fg:w="18"/><text x="50.7269%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (18 samples, 1.43%)</title><rect x="50.4769%" y="485" width="1.4308%" height="15" fill="rgb(231,5,32)" fg:x="635" fg:w="18"/><text x="50.7269%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="51.4308%" y="469" width="0.4769%" height="15" fill="rgb(249,210,18)" fg:x="647" fg:w="6"/><text x="51.6808%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="51.4308%" y="453" width="0.4769%" height="15" fill="rgb(215,223,36)" fg:x="647" fg:w="6"/><text x="51.6808%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="51.5103%" y="437" width="0.3975%" height="15" fill="rgb(245,185,20)" fg:x="648" fg:w="5"/><text x="51.7603%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="51.5103%" y="421" width="0.3975%" height="15" fill="rgb(206,224,11)" fg:x="648" fg:w="5"/><text x="51.7603%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="51.5898%" y="405" width="0.3180%" height="15" fill="rgb(248,73,42)" fg:x="649" fg:w="4"/><text x="51.8398%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="51.5898%" y="389" width="0.3180%" height="15" fill="rgb(219,149,31)" fg:x="649" fg:w="4"/><text x="51.8398%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="51.5898%" y="373" width="0.3180%" height="15" fill="rgb(243,104,17)" fg:x="649" fg:w="4"/><text x="51.8398%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="51.5898%" y="357" width="0.3180%" height="15" fill="rgb(244,117,33)" fg:x="649" fg:w="4"/><text x="51.8398%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.7488%" y="341" width="0.1590%" height="15" fill="rgb(251,25,47)" fg:x="651" fg:w="2"/><text x="51.9988%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.7488%" y="325" width="0.1590%" height="15" fill="rgb(249,70,13)" fg:x="651" fg:w="2"/><text x="51.9988%" y="335.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="51.8283%" y="309" width="0.0795%" height="15" fill="rgb(217,133,18)" fg:x="652" fg:w="1"/><text x="52.0783%" y="319.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="51.9078%" y="533" width="0.1590%" height="15" fill="rgb(248,97,28)" fg:x="653" fg:w="2"/><text x="52.1578%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.9078%" y="517" width="0.1590%" height="15" fill="rgb(237,193,4)" fg:x="653" fg:w="2"/><text x="52.1578%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.9873%" y="501" width="0.0795%" height="15" fill="rgb(247,198,45)" fg:x="654" fg:w="1"/><text x="52.2373%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.9873%" y="485" width="0.0795%" height="15" fill="rgb(245,2,20)" fg:x="654" fg:w="1"/><text x="52.2373%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.9873%" y="469" width="0.0795%" height="15" fill="rgb(210,71,36)" fg:x="654" fg:w="1"/><text x="52.2373%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.9873%" y="453" width="0.0795%" height="15" fill="rgb(238,114,30)" fg:x="654" fg:w="1"/><text x="52.2373%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.9873%" y="437" width="0.0795%" height="15" fill="rgb(241,200,2)" fg:x="654" fg:w="1"/><text x="52.2373%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.9873%" y="421" width="0.0795%" height="15" fill="rgb(232,106,18)" fg:x="654" fg:w="1"/><text x="52.2373%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.9873%" y="405" width="0.0795%" height="15" fill="rgb(211,141,18)" fg:x="654" fg:w="1"/><text x="52.2373%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.9873%" y="389" width="0.0795%" height="15" fill="rgb(224,9,9)" fg:x="654" fg:w="1"/><text x="52.2373%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.9873%" y="373" width="0.0795%" height="15" fill="rgb(249,137,46)" fg:x="654" fg:w="1"/><text x="52.2373%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.9873%" y="357" width="0.0795%" height="15" fill="rgb(236,44,45)" fg:x="654" fg:w="1"/><text x="52.2373%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.9873%" y="341" width="0.0795%" height="15" fill="rgb(205,68,40)" fg:x="654" fg:w="1"/><text x="52.2373%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.9873%" y="325" width="0.0795%" height="15" fill="rgb(214,198,49)" fg:x="654" fg:w="1"/><text x="52.2373%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="52.1463%" y="501" width="0.0795%" height="15" fill="rgb(226,140,45)" fg:x="656" fg:w="1"/><text x="52.3963%" y="511.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="52.1463%" y="485" width="0.0795%" height="15" fill="rgb(209,109,20)" fg:x="656" fg:w="1"/><text x="52.3963%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="52.1463%" y="469" width="0.0795%" height="15" fill="rgb(217,33,46)" fg:x="656" fg:w="1"/><text x="52.3963%" y="479.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="52.1463%" y="453" width="0.0795%" height="15" fill="rgb(232,150,33)" fg:x="656" fg:w="1"/><text x="52.3963%" y="463.50"></text></g><g><title>plugins_core::library::actions::reply_done (3 samples, 0.24%)</title><rect x="52.0668%" y="533" width="0.2385%" height="15" fill="rgb(233,76,25)" fg:x="655" fg:w="3"/><text x="52.3168%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (2 samples, 0.16%)</title><rect x="52.1463%" y="517" width="0.1590%" height="15" fill="rgb(254,219,23)" fg:x="656" fg:w="2"/><text x="52.3963%" y="527.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="52.2258%" y="501" width="0.0795%" height="15" fill="rgb(233,108,4)" fg:x="657" fg:w="1"/><text x="52.4758%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2258%" y="485" width="0.0795%" height="15" fill="rgb(229,98,6)" fg:x="657" fg:w="1"/><text x="52.4758%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.3052%" y="517" width="0.0795%" height="15" fill="rgb(217,40,27)" fg:x="658" fg:w="1"/><text x="52.5552%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.3052%" y="501" width="0.0795%" height="15" fill="rgb(221,35,43)" fg:x="658" fg:w="1"/><text x="52.5552%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5437%" y="421" width="0.0795%" height="15" fill="rgb(212,107,11)" fg:x="661" fg:w="1"/><text x="52.7937%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5437%" y="405" width="0.0795%" height="15" fill="rgb(245,42,44)" fg:x="661" fg:w="1"/><text x="52.7937%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5437%" y="389" width="0.0795%" height="15" fill="rgb(209,31,12)" fg:x="661" fg:w="1"/><text x="52.7937%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5437%" y="373" width="0.0795%" height="15" fill="rgb(210,228,54)" fg:x="661" fg:w="1"/><text x="52.7937%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5437%" y="357" width="0.0795%" height="15" fill="rgb(241,19,33)" fg:x="661" fg:w="1"/><text x="52.7937%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="52.3847%" y="485" width="0.3180%" height="15" fill="rgb(229,51,27)" fg:x="659" fg:w="4"/><text x="52.6347%" y="495.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="52.4642%" y="469" width="0.2385%" height="15" fill="rgb(214,167,49)" fg:x="660" fg:w="3"/><text x="52.7142%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="52.4642%" y="453" width="0.2385%" height="15" fill="rgb(248,140,47)" fg:x="660" fg:w="3"/><text x="52.7142%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.5437%" y="437" width="0.1590%" height="15" fill="rgb(228,6,51)" fg:x="661" fg:w="2"/><text x="52.7937%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6232%" y="421" width="0.0795%" height="15" fill="rgb(242,44,53)" fg:x="662" fg:w="1"/><text x="52.8732%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6232%" y="405" width="0.0795%" height="15" fill="rgb(249,90,50)" fg:x="662" fg:w="1"/><text x="52.8732%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.6232%" y="389" width="0.0795%" height="15" fill="rgb(222,84,19)" fg:x="662" fg:w="1"/><text x="52.8732%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.6232%" y="373" width="0.0795%" height="15" fill="rgb(214,140,12)" fg:x="662" fg:w="1"/><text x="52.8732%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.6232%" y="357" width="0.0795%" height="15" fill="rgb(210,20,43)" fg:x="662" fg:w="1"/><text x="52.8732%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6232%" y="341" width="0.0795%" height="15" fill="rgb(243,1,40)" fg:x="662" fg:w="1"/><text x="52.8732%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6232%" y="325" width="0.0795%" height="15" fill="rgb(224,102,26)" fg:x="662" fg:w="1"/><text x="52.8732%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.6232%" y="309" width="0.0795%" height="15" fill="rgb(221,179,1)" fg:x="662" fg:w="1"/><text x="52.8732%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.6232%" y="293" width="0.0795%" height="15" fill="rgb(216,209,47)" fg:x="662" fg:w="1"/><text x="52.8732%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.6232%" y="277" width="0.0795%" height="15" fill="rgb(251,135,9)" fg:x="662" fg:w="1"/><text x="52.8732%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.6232%" y="261" width="0.0795%" height="15" fill="rgb(242,9,36)" fg:x="662" fg:w="1"/><text x="52.8732%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6232%" y="245" width="0.0795%" height="15" fill="rgb(249,60,37)" fg:x="662" fg:w="1"/><text x="52.8732%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.7027%" y="437" width="0.0795%" height="15" fill="rgb(230,66,45)" fg:x="663" fg:w="1"/><text x="52.9527%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7822%" y="437" width="0.0795%" height="15" fill="rgb(216,1,47)" fg:x="664" fg:w="1"/><text x="53.0322%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.7822%" y="421" width="0.0795%" height="15" fill="rgb(235,8,23)" fg:x="664" fg:w="1"/><text x="53.0322%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7822%" y="405" width="0.0795%" height="15" fill="rgb(225,136,11)" fg:x="664" fg:w="1"/><text x="53.0322%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7822%" y="389" width="0.0795%" height="15" fill="rgb(228,63,44)" fg:x="664" fg:w="1"/><text x="53.0322%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7822%" y="373" width="0.0795%" height="15" fill="rgb(240,43,52)" fg:x="664" fg:w="1"/><text x="53.0322%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7822%" y="357" width="0.0795%" height="15" fill="rgb(217,167,36)" fg:x="664" fg:w="1"/><text x="53.0322%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7822%" y="341" width="0.0795%" height="15" fill="rgb(250,19,6)" fg:x="664" fg:w="1"/><text x="53.0322%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.79%)</title><rect x="52.3847%" y="517" width="0.7949%" height="15" fill="rgb(236,60,51)" fg:x="659" fg:w="10"/><text x="52.6347%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.79%)</title><rect x="52.3847%" y="501" width="0.7949%" height="15" fill="rgb(222,217,20)" fg:x="659" fg:w="10"/><text x="52.6347%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="52.7027%" y="485" width="0.4769%" height="15" fill="rgb(242,65,52)" fg:x="663" fg:w="6"/><text x="52.9527%" y="495.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="52.7027%" y="469" width="0.4769%" height="15" fill="rgb(217,5,41)" fg:x="663" fg:w="6"/><text x="52.9527%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="52.7027%" y="453" width="0.4769%" height="15" fill="rgb(223,208,53)" fg:x="663" fg:w="6"/><text x="52.9527%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="52.8617%" y="437" width="0.3180%" height="15" fill="rgb(221,104,30)" fg:x="665" fg:w="4"/><text x="53.1117%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.8617%" y="421" width="0.3180%" height="15" fill="rgb(230,210,42)" fg:x="665" fg:w="4"/><text x="53.1117%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="52.8617%" y="405" width="0.3180%" height="15" fill="rgb(206,205,27)" fg:x="665" fg:w="4"/><text x="53.1117%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.8617%" y="389" width="0.3180%" height="15" fill="rgb(233,114,38)" fg:x="665" fg:w="4"/><text x="53.1117%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="52.8617%" y="373" width="0.3180%" height="15" fill="rgb(216,174,36)" fg:x="665" fg:w="4"/><text x="53.1117%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.8617%" y="357" width="0.3180%" height="15" fill="rgb(211,30,9)" fg:x="665" fg:w="4"/><text x="53.1117%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="52.8617%" y="341" width="0.3180%" height="15" fill="rgb(216,8,21)" fg:x="665" fg:w="4"/><text x="53.1117%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.8617%" y="325" width="0.3180%" height="15" fill="rgb(237,209,39)" fg:x="665" fg:w="4"/><text x="53.1117%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.0207%" y="309" width="0.1590%" height="15" fill="rgb(235,111,47)" fg:x="667" fg:w="2"/><text x="53.2707%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.1002%" y="293" width="0.0795%" height="15" fill="rgb(216,139,9)" fg:x="668" fg:w="1"/><text x="53.3502%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="53.1002%" y="277" width="0.0795%" height="15" fill="rgb(248,185,4)" fg:x="668" fg:w="1"/><text x="53.3502%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="53.1002%" y="261" width="0.0795%" height="15" fill="rgb(239,185,25)" fg:x="668" fg:w="1"/><text x="53.3502%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="53.1002%" y="245" width="0.0795%" height="15" fill="rgb(233,207,8)" fg:x="668" fg:w="1"/><text x="53.3502%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.1797%" y="501" width="0.0795%" height="15" fill="rgb(249,220,24)" fg:x="669" fg:w="1"/><text x="53.4297%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.1797%" y="485" width="0.0795%" height="15" fill="rgb(221,50,14)" fg:x="669" fg:w="1"/><text x="53.4297%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.1797%" y="469" width="0.0795%" height="15" fill="rgb(227,79,42)" fg:x="669" fg:w="1"/><text x="53.4297%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.1797%" y="453" width="0.0795%" height="15" fill="rgb(228,218,49)" fg:x="669" fg:w="1"/><text x="53.4297%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.1797%" y="437" width="0.0795%" height="15" fill="rgb(249,18,15)" fg:x="669" fg:w="1"/><text x="53.4297%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.1797%" y="421" width="0.0795%" height="15" fill="rgb(212,84,27)" fg:x="669" fg:w="1"/><text x="53.4297%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="53.1797%" y="405" width="0.0795%" height="15" fill="rgb(207,83,24)" fg:x="669" fg:w="1"/><text x="53.4297%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.1797%" y="389" width="0.0795%" height="15" fill="rgb(219,61,7)" fg:x="669" fg:w="1"/><text x="53.4297%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.2591%" y="485" width="0.0795%" height="15" fill="rgb(211,43,29)" fg:x="670" fg:w="1"/><text x="53.5091%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.2591%" y="469" width="0.0795%" height="15" fill="rgb(243,15,23)" fg:x="670" fg:w="1"/><text x="53.5091%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.2591%" y="453" width="0.0795%" height="15" fill="rgb(217,52,28)" fg:x="670" fg:w="1"/><text x="53.5091%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.2591%" y="437" width="0.0795%" height="15" fill="rgb(210,35,6)" fg:x="670" fg:w="1"/><text x="53.5091%" y="447.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (2 samples, 0.16%)</title><rect x="53.3386%" y="485" width="0.1590%" height="15" fill="rgb(237,187,28)" fg:x="671" fg:w="2"/><text x="53.5886%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="53.4181%" y="469" width="0.0795%" height="15" fill="rgb(231,136,24)" fg:x="672" fg:w="1"/><text x="53.6681%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="53.4181%" y="453" width="0.0795%" height="15" fill="rgb(205,176,52)" fg:x="672" fg:w="1"/><text x="53.6681%" y="463.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="53.4181%" y="437" width="0.0795%" height="15" fill="rgb(218,65,12)" fg:x="672" fg:w="1"/><text x="53.6681%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="53.5771%" y="453" width="0.1590%" height="15" fill="rgb(234,101,21)" fg:x="674" fg:w="2"/><text x="53.8271%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="53.5771%" y="437" width="0.1590%" height="15" fill="rgb(206,13,20)" fg:x="674" fg:w="2"/><text x="53.8271%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="53.5771%" y="421" width="0.1590%" height="15" fill="rgb(236,89,44)" fg:x="674" fg:w="2"/><text x="53.8271%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.5771%" y="405" width="0.1590%" height="15" fill="rgb(225,52,17)" fg:x="674" fg:w="2"/><text x="53.8271%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.5771%" y="389" width="0.1590%" height="15" fill="rgb(214,27,25)" fg:x="674" fg:w="2"/><text x="53.8271%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6566%" y="373" width="0.0795%" height="15" fill="rgb(240,141,35)" fg:x="675" fg:w="1"/><text x="53.9066%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (8 samples, 0.64%)</title><rect x="53.1797%" y="517" width="0.6359%" height="15" fill="rgb(216,126,3)" fg:x="669" fg:w="8"/><text x="53.4297%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="53.2591%" y="501" width="0.5564%" height="15" fill="rgb(249,196,23)" fg:x="670" fg:w="7"/><text x="53.5091%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="53.4976%" y="485" width="0.3180%" height="15" fill="rgb(215,185,43)" fg:x="673" fg:w="4"/><text x="53.7476%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.5771%" y="469" width="0.2385%" height="15" fill="rgb(208,194,36)" fg:x="674" fg:w="3"/><text x="53.8271%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.7361%" y="453" width="0.0795%" height="15" fill="rgb(245,182,12)" fg:x="676" fg:w="1"/><text x="53.9861%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.7361%" y="437" width="0.0795%" height="15" fill="rgb(244,222,52)" fg:x="676" fg:w="1"/><text x="53.9861%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.7361%" y="421" width="0.0795%" height="15" fill="rgb(236,222,51)" fg:x="676" fg:w="1"/><text x="53.9861%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.8951%" y="485" width="0.1590%" height="15" fill="rgb(254,71,22)" fg:x="678" fg:w="2"/><text x="54.1451%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9746%" y="469" width="0.0795%" height="15" fill="rgb(250,104,15)" fg:x="679" fg:w="1"/><text x="54.2246%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.0541%" y="453" width="0.0795%" height="15" fill="rgb(229,223,46)" fg:x="680" fg:w="1"/><text x="54.3041%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="54.0541%" y="485" width="0.1590%" height="15" fill="rgb(209,129,18)" fg:x="680" fg:w="2"/><text x="54.3041%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="54.0541%" y="469" width="0.1590%" height="15" fill="rgb(224,160,1)" fg:x="680" fg:w="2"/><text x="54.3041%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.1335%" y="453" width="0.0795%" height="15" fill="rgb(237,112,21)" fg:x="681" fg:w="1"/><text x="54.3835%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="54.1335%" y="437" width="0.0795%" height="15" fill="rgb(215,198,53)" fg:x="681" fg:w="1"/><text x="54.3835%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="54.1335%" y="421" width="0.0795%" height="15" fill="rgb(218,227,35)" fg:x="681" fg:w="1"/><text x="54.3835%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.1335%" y="405" width="0.0795%" height="15" fill="rgb(232,121,22)" fg:x="681" fg:w="1"/><text x="54.3835%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2130%" y="485" width="0.0795%" height="15" fill="rgb(235,52,54)" fg:x="682" fg:w="1"/><text x="54.4630%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (5 samples, 0.40%)</title><rect x="54.2925%" y="485" width="0.3975%" height="15" fill="rgb(219,21,44)" fg:x="683" fg:w="5"/><text x="54.5425%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="54.2925%" y="469" width="0.3975%" height="15" fill="rgb(221,51,43)" fg:x="683" fg:w="5"/><text x="54.5425%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="54.3720%" y="453" width="0.3180%" height="15" fill="rgb(225,77,42)" fg:x="684" fg:w="4"/><text x="54.6220%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (4 samples, 0.32%)</title><rect x="54.3720%" y="437" width="0.3180%" height="15" fill="rgb(214,117,53)" fg:x="684" fg:w="4"/><text x="54.6220%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="54.4515%" y="421" width="0.2385%" height="15" fill="rgb(218,227,27)" fg:x="685" fg:w="3"/><text x="54.7015%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.4515%" y="405" width="0.2385%" height="15" fill="rgb(223,214,36)" fg:x="685" fg:w="3"/><text x="54.7015%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.5310%" y="389" width="0.1590%" height="15" fill="rgb(235,21,7)" fg:x="686" fg:w="2"/><text x="54.7810%" y="399.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (12 samples, 0.95%)</title><rect x="53.8156%" y="517" width="0.9539%" height="15" fill="rgb(244,216,4)" fg:x="677" fg:w="12"/><text x="54.0656%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (12 samples, 0.95%)</title><rect x="53.8156%" y="501" width="0.9539%" height="15" fill="rgb(249,197,24)" fg:x="677" fg:w="12"/><text x="54.0656%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="54.6900%" y="485" width="0.0795%" height="15" fill="rgb(222,169,49)" fg:x="688" fg:w="1"/><text x="54.9400%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="54.6900%" y="469" width="0.0795%" height="15" fill="rgb(207,137,33)" fg:x="688" fg:w="1"/><text x="54.9400%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="54.6900%" y="453" width="0.0795%" height="15" fill="rgb(219,180,40)" fg:x="688" fg:w="1"/><text x="54.9400%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="54.6900%" y="437" width="0.0795%" height="15" fill="rgb(250,163,42)" fg:x="688" fg:w="1"/><text x="54.9400%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="54.8490%" y="501" width="0.0795%" height="15" fill="rgb(239,163,0)" fg:x="690" fg:w="1"/><text x="55.0990%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.0079%" y="357" width="0.0795%" height="15" fill="rgb(252,38,28)" fg:x="692" fg:w="1"/><text x="55.2579%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.0079%" y="341" width="0.0795%" height="15" fill="rgb(254,203,26)" fg:x="692" fg:w="1"/><text x="55.2579%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.0079%" y="325" width="0.0795%" height="15" fill="rgb(209,129,32)" fg:x="692" fg:w="1"/><text x="55.2579%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.0079%" y="309" width="0.0795%" height="15" fill="rgb(207,177,52)" fg:x="692" fg:w="1"/><text x="55.2579%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.0079%" y="293" width="0.0795%" height="15" fill="rgb(230,209,36)" fg:x="692" fg:w="1"/><text x="55.2579%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.0079%" y="277" width="0.0795%" height="15" fill="rgb(238,131,0)" fg:x="692" fg:w="1"/><text x="55.2579%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.0079%" y="261" width="0.0795%" height="15" fill="rgb(218,61,31)" fg:x="692" fg:w="1"/><text x="55.2579%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.0079%" y="245" width="0.0795%" height="15" fill="rgb(232,6,53)" fg:x="692" fg:w="1"/><text x="55.2579%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.0079%" y="229" width="0.0795%" height="15" fill="rgb(254,100,32)" fg:x="692" fg:w="1"/><text x="55.2579%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.0079%" y="213" width="0.0795%" height="15" fill="rgb(229,194,49)" fg:x="692" fg:w="1"/><text x="55.2579%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.0079%" y="197" width="0.0795%" height="15" fill="rgb(206,208,39)" fg:x="692" fg:w="1"/><text x="55.2579%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.0079%" y="181" width="0.0795%" height="15" fill="rgb(246,226,14)" fg:x="692" fg:w="1"/><text x="55.2579%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0079%" y="165" width="0.0795%" height="15" fill="rgb(226,48,32)" fg:x="692" fg:w="1"/><text x="55.2579%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="54.9285%" y="469" width="0.2385%" height="15" fill="rgb(252,43,54)" fg:x="691" fg:w="3"/><text x="55.1785%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="54.9285%" y="453" width="0.2385%" height="15" fill="rgb(207,124,0)" fg:x="691" fg:w="3"/><text x="55.1785%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="54.9285%" y="437" width="0.2385%" height="15" fill="rgb(248,188,30)" fg:x="691" fg:w="3"/><text x="55.1785%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.9285%" y="421" width="0.2385%" height="15" fill="rgb(232,14,43)" fg:x="691" fg:w="3"/><text x="55.1785%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.9285%" y="405" width="0.2385%" height="15" fill="rgb(218,52,29)" fg:x="691" fg:w="3"/><text x="55.1785%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.0079%" y="389" width="0.1590%" height="15" fill="rgb(218,176,50)" fg:x="692" fg:w="2"/><text x="55.2579%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.0079%" y="373" width="0.1590%" height="15" fill="rgb(213,112,0)" fg:x="692" fg:w="2"/><text x="55.2579%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.0874%" y="357" width="0.0795%" height="15" fill="rgb(244,216,8)" fg:x="693" fg:w="1"/><text x="55.3374%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.0874%" y="341" width="0.0795%" height="15" fill="rgb(224,148,53)" fg:x="693" fg:w="1"/><text x="55.3374%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.0874%" y="325" width="0.0795%" height="15" fill="rgb(241,133,40)" fg:x="693" fg:w="1"/><text x="55.3374%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.0874%" y="309" width="0.0795%" height="15" fill="rgb(232,17,44)" fg:x="693" fg:w="1"/><text x="55.3374%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.0874%" y="293" width="0.0795%" height="15" fill="rgb(213,32,25)" fg:x="693" fg:w="1"/><text x="55.3374%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="55.0874%" y="277" width="0.0795%" height="15" fill="rgb(249,115,27)" fg:x="693" fg:w="1"/><text x="55.3374%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="55.0874%" y="261" width="0.0795%" height="15" fill="rgb(241,50,1)" fg:x="693" fg:w="1"/><text x="55.3374%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.1669%" y="453" width="0.0795%" height="15" fill="rgb(244,175,40)" fg:x="694" fg:w="1"/><text x="55.4169%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2464%" y="421" width="0.0795%" height="15" fill="rgb(230,94,34)" fg:x="695" fg:w="1"/><text x="55.4964%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2464%" y="405" width="0.0795%" height="15" fill="rgb(223,185,29)" fg:x="695" fg:w="1"/><text x="55.4964%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2464%" y="389" width="0.0795%" height="15" fill="rgb(225,193,15)" fg:x="695" fg:w="1"/><text x="55.4964%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2464%" y="373" width="0.0795%" height="15" fill="rgb(252,121,38)" fg:x="695" fg:w="1"/><text x="55.4964%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2464%" y="357" width="0.0795%" height="15" fill="rgb(232,44,12)" fg:x="695" fg:w="1"/><text x="55.4964%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2464%" y="341" width="0.0795%" height="15" fill="rgb(226,45,54)" fg:x="695" fg:w="1"/><text x="55.4964%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="54.9285%" y="501" width="0.5564%" height="15" fill="rgb(209,67,17)" fg:x="691" fg:w="7"/><text x="55.1785%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="54.9285%" y="485" width="0.5564%" height="15" fill="rgb(219,108,52)" fg:x="691" fg:w="7"/><text x="55.1785%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="55.1669%" y="469" width="0.3180%" height="15" fill="rgb(216,118,19)" fg:x="694" fg:w="4"/><text x="55.4169%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="55.2464%" y="453" width="0.2385%" height="15" fill="rgb(228,120,40)" fg:x="695" fg:w="3"/><text x="55.4964%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="55.2464%" y="437" width="0.2385%" height="15" fill="rgb(221,218,34)" fg:x="695" fg:w="3"/><text x="55.4964%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.3259%" y="421" width="0.1590%" height="15" fill="rgb(235,89,14)" fg:x="696" fg:w="2"/><text x="55.5759%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.3259%" y="405" width="0.1590%" height="15" fill="rgb(248,89,7)" fg:x="696" fg:w="2"/><text x="55.5759%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.3259%" y="389" width="0.1590%" height="15" fill="rgb(212,114,34)" fg:x="696" fg:w="2"/><text x="55.5759%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.3259%" y="373" width="0.1590%" height="15" fill="rgb(246,88,32)" fg:x="696" fg:w="2"/><text x="55.5759%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="55.3259%" y="357" width="0.1590%" height="15" fill="rgb(237,135,0)" fg:x="696" fg:w="2"/><text x="55.5759%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.3259%" y="341" width="0.1590%" height="15" fill="rgb(220,201,54)" fg:x="696" fg:w="2"/><text x="55.5759%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.4054%" y="325" width="0.0795%" height="15" fill="rgb(210,142,36)" fg:x="697" fg:w="1"/><text x="55.6554%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4054%" y="309" width="0.0795%" height="15" fill="rgb(247,189,26)" fg:x="697" fg:w="1"/><text x="55.6554%" y="319.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="55.4849%" y="421" width="0.0795%" height="15" fill="rgb(223,89,24)" fg:x="698" fg:w="1"/><text x="55.7349%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="55.4849%" y="405" width="0.0795%" height="15" fill="rgb(205,90,19)" fg:x="698" fg:w="1"/><text x="55.7349%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="55.4849%" y="389" width="0.0795%" height="15" fill="rgb(234,57,40)" fg:x="698" fg:w="1"/><text x="55.7349%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="55.4849%" y="373" width="0.0795%" height="15" fill="rgb(213,109,10)" fg:x="698" fg:w="1"/><text x="55.7349%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="55.4849%" y="357" width="0.0795%" height="15" fill="rgb(214,189,23)" fg:x="698" fg:w="1"/><text x="55.7349%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="55.4849%" y="341" width="0.0795%" height="15" fill="rgb(234,200,10)" fg:x="698" fg:w="1"/><text x="55.7349%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.87%)</title><rect x="54.7695%" y="517" width="0.8744%" height="15" fill="rgb(221,148,16)" fg:x="689" fg:w="11"/><text x="55.0195%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="55.4849%" y="501" width="0.1590%" height="15" fill="rgb(230,115,10)" fg:x="698" fg:w="2"/><text x="55.7349%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="55.4849%" y="485" width="0.1590%" height="15" fill="rgb(220,106,42)" fg:x="698" fg:w="2"/><text x="55.7349%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="55.4849%" y="469" width="0.1590%" height="15" fill="rgb(225,105,39)" fg:x="698" fg:w="2"/><text x="55.7349%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="55.4849%" y="453" width="0.1590%" height="15" fill="rgb(211,161,38)" fg:x="698" fg:w="2"/><text x="55.7349%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="55.4849%" y="437" width="0.1590%" height="15" fill="rgb(213,23,19)" fg:x="698" fg:w="2"/><text x="55.7349%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="55.5644%" y="421" width="0.0795%" height="15" fill="rgb(240,2,33)" fg:x="699" fg:w="1"/><text x="55.8144%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="55.5644%" y="405" width="0.0795%" height="15" fill="rgb(221,29,45)" fg:x="699" fg:w="1"/><text x="55.8144%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="55.5644%" y="389" width="0.0795%" height="15" fill="rgb(242,10,19)" fg:x="699" fg:w="1"/><text x="55.8144%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="55.5644%" y="373" width="0.0795%" height="15" fill="rgb(250,84,37)" fg:x="699" fg:w="1"/><text x="55.8144%" y="383.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="55.5644%" y="357" width="0.0795%" height="15" fill="rgb(214,136,7)" fg:x="699" fg:w="1"/><text x="55.8144%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="55.6439%" y="501" width="0.0795%" height="15" fill="rgb(231,189,12)" fg:x="700" fg:w="1"/><text x="55.8939%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="55.6439%" y="485" width="0.0795%" height="15" fill="rgb(244,40,16)" fg:x="700" fg:w="1"/><text x="55.8939%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="55.6439%" y="469" width="0.0795%" height="15" fill="rgb(217,29,15)" fg:x="700" fg:w="1"/><text x="55.8939%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (150 samples, 11.92%)</title><rect x="43.8792%" y="549" width="11.9237%" height="15" fill="rgb(235,172,33)" fg:x="552" fg:w="150"/><text x="44.1292%" y="559.50">&lt;plugins_core::car..</text></g><g><title>plugins_core::tools::move_between (44 samples, 3.50%)</title><rect x="52.3052%" y="533" width="3.4976%" height="15" fill="rgb(206,148,28)" fg:x="658" fg:w="44"/><text x="52.5552%" y="543.50">plu..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="55.6439%" y="517" width="0.1590%" height="15" fill="rgb(251,167,37)" fg:x="700" fg:w="2"/><text x="55.8939%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="55.7234%" y="501" width="0.0795%" height="15" fill="rgb(229,94,52)" fg:x="701" fg:w="1"/><text x="55.9734%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="55.7234%" y="485" width="0.0795%" height="15" fill="rgb(216,132,9)" fg:x="701" fg:w="1"/><text x="55.9734%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7234%" y="469" width="0.0795%" height="15" fill="rgb(208,110,29)" fg:x="701" fg:w="1"/><text x="55.9734%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.8029%" y="485" width="0.0795%" height="15" fill="rgb(241,23,8)" fg:x="702" fg:w="1"/><text x="56.0529%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.8029%" y="469" width="0.0795%" height="15" fill="rgb(208,26,35)" fg:x="702" fg:w="1"/><text x="56.0529%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.8029%" y="453" width="0.0795%" height="15" fill="rgb(242,165,34)" fg:x="702" fg:w="1"/><text x="56.0529%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.8029%" y="437" width="0.0795%" height="15" fill="rgb(222,222,33)" fg:x="702" fg:w="1"/><text x="56.0529%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.8029%" y="421" width="0.0795%" height="15" fill="rgb(227,16,52)" fg:x="702" fg:w="1"/><text x="56.0529%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.8029%" y="405" width="0.0795%" height="15" fill="rgb(213,93,12)" fg:x="702" fg:w="1"/><text x="56.0529%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.8029%" y="389" width="0.0795%" height="15" fill="rgb(238,41,5)" fg:x="702" fg:w="1"/><text x="56.0529%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="55.8029%" y="373" width="0.0795%" height="15" fill="rgb(211,60,15)" fg:x="702" fg:w="1"/><text x="56.0529%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="55.8029%" y="357" width="0.0795%" height="15" fill="rgb(209,11,34)" fg:x="702" fg:w="1"/><text x="56.0529%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="55.8824%" y="485" width="0.0795%" height="15" fill="rgb(254,155,53)" fg:x="703" fg:w="1"/><text x="56.1324%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.9618%" y="405" width="0.0795%" height="15" fill="rgb(236,174,8)" fg:x="704" fg:w="1"/><text x="56.2118%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="55.9618%" y="437" width="0.1590%" height="15" fill="rgb(229,31,27)" fg:x="704" fg:w="2"/><text x="56.2118%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="55.9618%" y="421" width="0.1590%" height="15" fill="rgb(242,226,26)" fg:x="704" fg:w="2"/><text x="56.2118%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.0413%" y="405" width="0.0795%" height="15" fill="rgb(234,32,40)" fg:x="705" fg:w="1"/><text x="56.2913%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="55.9618%" y="469" width="0.3180%" height="15" fill="rgb(249,226,47)" fg:x="704" fg:w="4"/><text x="56.2118%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="55.9618%" y="453" width="0.3180%" height="15" fill="rgb(212,6,26)" fg:x="704" fg:w="4"/><text x="56.2118%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="56.1208%" y="437" width="0.1590%" height="15" fill="rgb(249,202,29)" fg:x="706" fg:w="2"/><text x="56.3708%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="56.2003%" y="421" width="0.0795%" height="15" fill="rgb(226,106,4)" fg:x="707" fg:w="1"/><text x="56.4503%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="56.2003%" y="405" width="0.0795%" height="15" fill="rgb(251,2,27)" fg:x="707" fg:w="1"/><text x="56.4503%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.2003%" y="389" width="0.0795%" height="15" fill="rgb(236,208,0)" fg:x="707" fg:w="1"/><text x="56.4503%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.2003%" y="373" width="0.0795%" height="15" fill="rgb(211,66,17)" fg:x="707" fg:w="1"/><text x="56.4503%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="56.2003%" y="357" width="0.0795%" height="15" fill="rgb(216,129,9)" fg:x="707" fg:w="1"/><text x="56.4503%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.2003%" y="341" width="0.0795%" height="15" fill="rgb(215,130,23)" fg:x="707" fg:w="1"/><text x="56.4503%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.2003%" y="325" width="0.0795%" height="15" fill="rgb(253,157,11)" fg:x="707" fg:w="1"/><text x="56.4503%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.2003%" y="309" width="0.0795%" height="15" fill="rgb(224,25,14)" fg:x="707" fg:w="1"/><text x="56.4503%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.2003%" y="293" width="0.0795%" height="15" fill="rgb(238,16,7)" fg:x="707" fg:w="1"/><text x="56.4503%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.2003%" y="277" width="0.0795%" height="15" fill="rgb(228,74,11)" fg:x="707" fg:w="1"/><text x="56.4503%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="56.2003%" y="261" width="0.0795%" height="15" fill="rgb(239,221,27)" fg:x="707" fg:w="1"/><text x="56.4503%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="56.2003%" y="245" width="0.0795%" height="15" fill="rgb(229,166,18)" fg:x="707" fg:w="1"/><text x="56.4503%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="56.2003%" y="229" width="0.0795%" height="15" fill="rgb(254,94,46)" fg:x="707" fg:w="1"/><text x="56.4503%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="56.2003%" y="213" width="0.0795%" height="15" fill="rgb(241,79,19)" fg:x="707" fg:w="1"/><text x="56.4503%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.2003%" y="197" width="0.0795%" height="15" fill="rgb(228,99,51)" fg:x="707" fg:w="1"/><text x="56.4503%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.2003%" y="181" width="0.0795%" height="15" fill="rgb(211,15,6)" fg:x="707" fg:w="1"/><text x="56.4503%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="56.2798%" y="469" width="0.0795%" height="15" fill="rgb(245,107,54)" fg:x="708" fg:w="1"/><text x="56.5298%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.2798%" y="453" width="0.0795%" height="15" fill="rgb(243,3,2)" fg:x="708" fg:w="1"/><text x="56.5298%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.2798%" y="437" width="0.0795%" height="15" fill="rgb(206,122,10)" fg:x="708" fg:w="1"/><text x="56.5298%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5183%" y="405" width="0.0795%" height="15" fill="rgb(224,88,4)" fg:x="711" fg:w="1"/><text x="56.7683%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5183%" y="389" width="0.0795%" height="15" fill="rgb(230,1,41)" fg:x="711" fg:w="1"/><text x="56.7683%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.5183%" y="373" width="0.0795%" height="15" fill="rgb(230,1,31)" fg:x="711" fg:w="1"/><text x="56.7683%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.5183%" y="357" width="0.0795%" height="15" fill="rgb(232,67,19)" fg:x="711" fg:w="1"/><text x="56.7683%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.5183%" y="341" width="0.0795%" height="15" fill="rgb(222,206,20)" fg:x="711" fg:w="1"/><text x="56.7683%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5183%" y="325" width="0.0795%" height="15" fill="rgb(217,225,19)" fg:x="711" fg:w="1"/><text x="56.7683%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5183%" y="309" width="0.0795%" height="15" fill="rgb(234,13,33)" fg:x="711" fg:w="1"/><text x="56.7683%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.5183%" y="293" width="0.0795%" height="15" fill="rgb(254,5,1)" fg:x="711" fg:w="1"/><text x="56.7683%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.5183%" y="277" width="0.0795%" height="15" fill="rgb(211,121,41)" fg:x="711" fg:w="1"/><text x="56.7683%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.5183%" y="261" width="0.0795%" height="15" fill="rgb(213,199,35)" fg:x="711" fg:w="1"/><text x="56.7683%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.5183%" y="245" width="0.0795%" height="15" fill="rgb(240,118,22)" fg:x="711" fg:w="1"/><text x="56.7683%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5183%" y="229" width="0.0795%" height="15" fill="rgb(238,184,25)" fg:x="711" fg:w="1"/><text x="56.7683%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="56.3593%" y="437" width="0.4769%" height="15" fill="rgb(210,165,6)" fg:x="709" fg:w="6"/><text x="56.6093%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="56.4388%" y="421" width="0.3975%" height="15" fill="rgb(235,149,5)" fg:x="710" fg:w="5"/><text x="56.6888%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.5978%" y="405" width="0.2385%" height="15" fill="rgb(221,63,5)" fg:x="712" fg:w="3"/><text x="56.8478%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.6773%" y="389" width="0.1590%" height="15" fill="rgb(250,44,41)" fg:x="713" fg:w="2"/><text x="56.9273%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.8362%" y="405" width="0.0795%" height="15" fill="rgb(235,112,47)" fg:x="715" fg:w="1"/><text x="57.0862%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (15 samples, 1.19%)</title><rect x="55.8029%" y="501" width="1.1924%" height="15" fill="rgb(252,176,34)" fg:x="702" fg:w="15"/><text x="56.0529%" y="511.50"></text></g><g><title>plugins_core::tools::contained_by (13 samples, 1.03%)</title><rect x="55.9618%" y="485" width="1.0334%" height="15" fill="rgb(234,50,19)" fg:x="704" fg:w="13"/><text x="56.2118%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="56.3593%" y="469" width="0.6359%" height="15" fill="rgb(241,195,31)" fg:x="709" fg:w="8"/><text x="56.6093%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="56.3593%" y="453" width="0.6359%" height="15" fill="rgb(212,93,11)" fg:x="709" fg:w="8"/><text x="56.6093%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.8362%" y="437" width="0.1590%" height="15" fill="rgb(254,98,51)" fg:x="715" fg:w="2"/><text x="57.0862%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.8362%" y="421" width="0.1590%" height="15" fill="rgb(246,18,45)" fg:x="715" fg:w="2"/><text x="57.0862%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="56.9157%" y="405" width="0.0795%" height="15" fill="rgb(215,148,23)" fg:x="716" fg:w="1"/><text x="57.1657%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.9157%" y="389" width="0.0795%" height="15" fill="rgb(227,22,7)" fg:x="716" fg:w="1"/><text x="57.1657%" y="399.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9952%" y="485" width="0.0795%" height="15" fill="rgb(207,210,37)" fg:x="717" fg:w="1"/><text x="57.2452%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9952%" y="469" width="0.0795%" height="15" fill="rgb(247,147,42)" fg:x="717" fg:w="1"/><text x="57.2452%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9952%" y="453" width="0.0795%" height="15" fill="rgb(226,213,14)" fg:x="717" fg:w="1"/><text x="57.2452%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.9952%" y="437" width="0.0795%" height="15" fill="rgb(223,18,10)" fg:x="717" fg:w="1"/><text x="57.2452%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.9952%" y="421" width="0.0795%" height="15" fill="rgb(253,34,22)" fg:x="717" fg:w="1"/><text x="57.2452%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.9952%" y="405" width="0.0795%" height="15" fill="rgb(222,90,31)" fg:x="717" fg:w="1"/><text x="57.2452%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9952%" y="389" width="0.0795%" height="15" fill="rgb(220,182,30)" fg:x="717" fg:w="1"/><text x="57.2452%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9952%" y="373" width="0.0795%" height="15" fill="rgb(229,170,12)" fg:x="717" fg:w="1"/><text x="57.2452%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.9952%" y="357" width="0.0795%" height="15" fill="rgb(210,101,21)" fg:x="717" fg:w="1"/><text x="57.2452%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.9952%" y="341" width="0.0795%" height="15" fill="rgb(237,177,31)" fg:x="717" fg:w="1"/><text x="57.2452%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.9952%" y="325" width="0.0795%" height="15" fill="rgb(215,91,34)" fg:x="717" fg:w="1"/><text x="57.2452%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.9952%" y="309" width="0.0795%" height="15" fill="rgb(229,206,16)" fg:x="717" fg:w="1"/><text x="57.2452%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9952%" y="293" width="0.0795%" height="15" fill="rgb(235,207,10)" fg:x="717" fg:w="1"/><text x="57.2452%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.0747%" y="405" width="0.1590%" height="15" fill="rgb(247,18,10)" fg:x="718" fg:w="2"/><text x="57.3247%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.0747%" y="389" width="0.1590%" height="15" fill="rgb(232,4,6)" fg:x="718" fg:w="2"/><text x="57.3247%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1542%" y="373" width="0.0795%" height="15" fill="rgb(247,93,45)" fg:x="719" fg:w="1"/><text x="57.4042%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1542%" y="357" width="0.0795%" height="15" fill="rgb(240,181,18)" fg:x="719" fg:w="1"/><text x="57.4042%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1542%" y="341" width="0.0795%" height="15" fill="rgb(208,224,0)" fg:x="719" fg:w="1"/><text x="57.4042%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1542%" y="325" width="0.0795%" height="15" fill="rgb(224,207,54)" fg:x="719" fg:w="1"/><text x="57.4042%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.1542%" y="309" width="0.0795%" height="15" fill="rgb(217,152,29)" fg:x="719" fg:w="1"/><text x="57.4042%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.1542%" y="293" width="0.0795%" height="15" fill="rgb(243,78,27)" fg:x="719" fg:w="1"/><text x="57.4042%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.1542%" y="277" width="0.0795%" height="15" fill="rgb(228,111,9)" fg:x="719" fg:w="1"/><text x="57.4042%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.1542%" y="261" width="0.0795%" height="15" fill="rgb(230,213,21)" fg:x="719" fg:w="1"/><text x="57.4042%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.1542%" y="245" width="0.0795%" height="15" fill="rgb(248,50,36)" fg:x="719" fg:w="1"/><text x="57.4042%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.1542%" y="229" width="0.0795%" height="15" fill="rgb(226,19,31)" fg:x="719" fg:w="1"/><text x="57.4042%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.1542%" y="213" width="0.0795%" height="15" fill="rgb(205,132,21)" fg:x="719" fg:w="1"/><text x="57.4042%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.1542%" y="197" width="0.0795%" height="15" fill="rgb(207,42,19)" fg:x="719" fg:w="1"/><text x="57.4042%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.1542%" y="181" width="0.0795%" height="15" fill="rgb(229,69,35)" fg:x="719" fg:w="1"/><text x="57.4042%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1542%" y="165" width="0.0795%" height="15" fill="rgb(226,96,11)" fg:x="719" fg:w="1"/><text x="57.4042%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.2337%" y="373" width="0.0795%" height="15" fill="rgb(236,133,54)" fg:x="720" fg:w="1"/><text x="57.4837%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.2337%" y="357" width="0.0795%" height="15" fill="rgb(247,166,21)" fg:x="720" fg:w="1"/><text x="57.4837%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="57.2337%" y="405" width="0.1590%" height="15" fill="rgb(220,132,12)" fg:x="720" fg:w="2"/><text x="57.4837%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="57.2337%" y="389" width="0.1590%" height="15" fill="rgb(233,27,30)" fg:x="720" fg:w="2"/><text x="57.4837%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.3132%" y="373" width="0.0795%" height="15" fill="rgb(246,161,27)" fg:x="721" fg:w="1"/><text x="57.5632%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.3132%" y="357" width="0.0795%" height="15" fill="rgb(240,56,3)" fg:x="721" fg:w="1"/><text x="57.5632%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.3132%" y="341" width="0.0795%" height="15" fill="rgb(242,190,9)" fg:x="721" fg:w="1"/><text x="57.5632%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.3132%" y="325" width="0.0795%" height="15" fill="rgb(234,3,52)" fg:x="721" fg:w="1"/><text x="57.5632%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.48%)</title><rect x="56.9952%" y="501" width="0.4769%" height="15" fill="rgb(220,221,19)" fg:x="717" fg:w="6"/><text x="57.2452%" y="511.50"></text></g><g><title>plugins_core::finding::matches_description (5 samples, 0.40%)</title><rect x="57.0747%" y="485" width="0.3975%" height="15" fill="rgb(247,178,30)" fg:x="718" fg:w="5"/><text x="57.3247%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::name (5 samples, 0.40%)</title><rect x="57.0747%" y="469" width="0.3975%" height="15" fill="rgb(234,212,27)" fg:x="718" fg:w="5"/><text x="57.3247%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="57.0747%" y="453" width="0.3975%" height="15" fill="rgb(226,199,38)" fg:x="718" fg:w="5"/><text x="57.3247%" y="463.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="57.0747%" y="437" width="0.3975%" height="15" fill="rgb(248,114,22)" fg:x="718" fg:w="5"/><text x="57.3247%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="57.0747%" y="421" width="0.3975%" height="15" fill="rgb(221,180,4)" fg:x="718" fg:w="5"/><text x="57.3247%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.3927%" y="405" width="0.0795%" height="15" fill="rgb(220,229,24)" fg:x="722" fg:w="1"/><text x="57.6427%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.3927%" y="389" width="0.0795%" height="15" fill="rgb(226,184,27)" fg:x="722" fg:w="1"/><text x="57.6427%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.3927%" y="373" width="0.0795%" height="15" fill="rgb(232,99,15)" fg:x="722" fg:w="1"/><text x="57.6427%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.3927%" y="357" width="0.0795%" height="15" fill="rgb(250,167,16)" fg:x="722" fg:w="1"/><text x="57.6427%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="57.3927%" y="341" width="0.0795%" height="15" fill="rgb(243,113,6)" fg:x="722" fg:w="1"/><text x="57.6427%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.3927%" y="325" width="0.0795%" height="15" fill="rgb(244,147,52)" fg:x="722" fg:w="1"/><text x="57.6427%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.3927%" y="309" width="0.0795%" height="15" fill="rgb(235,59,50)" fg:x="722" fg:w="1"/><text x="57.6427%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.3927%" y="293" width="0.0795%" height="15" fill="rgb(250,188,6)" fg:x="722" fg:w="1"/><text x="57.6427%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.3927%" y="277" width="0.0795%" height="15" fill="rgb(236,173,11)" fg:x="722" fg:w="1"/><text x="57.6427%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.3927%" y="261" width="0.0795%" height="15" fill="rgb(233,64,3)" fg:x="722" fg:w="1"/><text x="57.6427%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (22 samples, 1.75%)</title><rect x="55.8029%" y="533" width="1.7488%" height="15" fill="rgb(207,92,7)" fg:x="702" fg:w="22"/><text x="56.0529%" y="543.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (22 samples, 1.75%)</title><rect x="55.8029%" y="517" width="1.7488%" height="15" fill="rgb(221,30,19)" fg:x="702" fg:w="22"/><text x="56.0529%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="57.4722%" y="501" width="0.0795%" height="15" fill="rgb(245,22,49)" fg:x="723" fg:w="1"/><text x="57.7222%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4722%" y="485" width="0.0795%" height="15" fill="rgb(218,39,20)" fg:x="723" fg:w="1"/><text x="57.7222%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4722%" y="469" width="0.0795%" height="15" fill="rgb(222,144,21)" fg:x="723" fg:w="1"/><text x="57.7222%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.7107%" y="501" width="0.0795%" height="15" fill="rgb(222,78,51)" fg:x="726" fg:w="1"/><text x="57.9607%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.7901%" y="469" width="0.2385%" height="15" fill="rgb(248,213,53)" fg:x="727" fg:w="3"/><text x="58.0401%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.7901%" y="453" width="0.2385%" height="15" fill="rgb(245,28,34)" fg:x="727" fg:w="3"/><text x="58.0401%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.7901%" y="437" width="0.2385%" height="15" fill="rgb(229,186,26)" fg:x="727" fg:w="3"/><text x="58.0401%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8696%" y="421" width="0.1590%" height="15" fill="rgb(224,0,41)" fg:x="728" fg:w="2"/><text x="58.1196%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.0286%" y="469" width="0.0795%" height="15" fill="rgb(223,136,51)" fg:x="730" fg:w="1"/><text x="58.2786%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.0286%" y="453" width="0.0795%" height="15" fill="rgb(234,50,9)" fg:x="730" fg:w="1"/><text x="58.2786%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.0286%" y="437" width="0.0795%" height="15" fill="rgb(242,164,20)" fg:x="730" fg:w="1"/><text x="58.2786%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.0286%" y="421" width="0.0795%" height="15" fill="rgb(230,169,22)" fg:x="730" fg:w="1"/><text x="58.2786%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.0286%" y="405" width="0.0795%" height="15" fill="rgb(228,82,26)" fg:x="730" fg:w="1"/><text x="58.2786%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.0286%" y="389" width="0.0795%" height="15" fill="rgb(244,220,31)" fg:x="730" fg:w="1"/><text x="58.2786%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.1081%" y="373" width="0.0795%" height="15" fill="rgb(214,35,25)" fg:x="731" fg:w="1"/><text x="58.3581%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.1081%" y="357" width="0.0795%" height="15" fill="rgb(245,162,54)" fg:x="731" fg:w="1"/><text x="58.3581%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.1081%" y="341" width="0.0795%" height="15" fill="rgb(210,43,24)" fg:x="731" fg:w="1"/><text x="58.3581%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.2671%" y="341" width="0.0795%" height="15" fill="rgb(226,145,51)" fg:x="733" fg:w="1"/><text x="58.5171%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2671%" y="325" width="0.0795%" height="15" fill="rgb(237,52,53)" fg:x="733" fg:w="1"/><text x="58.5171%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.79%)</title><rect x="57.6312%" y="517" width="0.7949%" height="15" fill="rgb(216,226,7)" fg:x="725" fg:w="10"/><text x="57.8812%" y="527.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="57.7901%" y="501" width="0.6359%" height="15" fill="rgb(206,223,18)" fg:x="727" fg:w="8"/><text x="58.0401%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="57.7901%" y="485" width="0.6359%" height="15" fill="rgb(221,1,10)" fg:x="727" fg:w="8"/><text x="58.0401%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="58.1081%" y="469" width="0.3180%" height="15" fill="rgb(221,151,42)" fg:x="731" fg:w="4"/><text x="58.3581%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.1081%" y="453" width="0.3180%" height="15" fill="rgb(205,183,46)" fg:x="731" fg:w="4"/><text x="58.3581%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="58.1081%" y="437" width="0.3180%" height="15" fill="rgb(239,229,1)" fg:x="731" fg:w="4"/><text x="58.3581%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.1081%" y="421" width="0.3180%" height="15" fill="rgb(236,192,23)" fg:x="731" fg:w="4"/><text x="58.3581%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="58.1081%" y="405" width="0.3180%" height="15" fill="rgb(215,146,3)" fg:x="731" fg:w="4"/><text x="58.3581%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.1081%" y="389" width="0.3180%" height="15" fill="rgb(235,52,27)" fg:x="731" fg:w="4"/><text x="58.3581%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.1876%" y="373" width="0.2385%" height="15" fill="rgb(236,45,20)" fg:x="732" fg:w="3"/><text x="58.4376%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.1876%" y="357" width="0.2385%" height="15" fill="rgb(235,86,41)" fg:x="732" fg:w="3"/><text x="58.4376%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.3466%" y="341" width="0.0795%" height="15" fill="rgb(235,27,27)" fg:x="734" fg:w="1"/><text x="58.5966%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.3466%" y="325" width="0.0795%" height="15" fill="rgb(232,4,34)" fg:x="734" fg:w="1"/><text x="58.5966%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.3466%" y="309" width="0.0795%" height="15" fill="rgb(215,22,10)" fg:x="734" fg:w="1"/><text x="58.5966%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.3466%" y="293" width="0.0795%" height="15" fill="rgb(230,228,27)" fg:x="734" fg:w="1"/><text x="58.5966%" y="303.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="58.4261%" y="501" width="0.0795%" height="15" fill="rgb(216,26,51)" fg:x="735" fg:w="1"/><text x="58.6761%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.5056%" y="469" width="0.0795%" height="15" fill="rgb(225,180,50)" fg:x="736" fg:w="1"/><text x="58.7556%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.5056%" y="453" width="0.0795%" height="15" fill="rgb(236,211,2)" fg:x="736" fg:w="1"/><text x="58.7556%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5851%" y="469" width="0.0795%" height="15" fill="rgb(250,51,20)" fg:x="737" fg:w="1"/><text x="58.8351%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6645%" y="469" width="0.0795%" height="15" fill="rgb(232,70,37)" fg:x="738" fg:w="1"/><text x="58.9145%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.6645%" y="453" width="0.0795%" height="15" fill="rgb(226,183,39)" fg:x="738" fg:w="1"/><text x="58.9145%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6645%" y="437" width="0.0795%" height="15" fill="rgb(232,228,21)" fg:x="738" fg:w="1"/><text x="58.9145%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6645%" y="421" width="0.0795%" height="15" fill="rgb(251,118,32)" fg:x="738" fg:w="1"/><text x="58.9145%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.6645%" y="405" width="0.0795%" height="15" fill="rgb(235,172,38)" fg:x="738" fg:w="1"/><text x="58.9145%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.8235%" y="373" width="0.0795%" height="15" fill="rgb(235,63,18)" fg:x="740" fg:w="1"/><text x="59.0735%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.8235%" y="357" width="0.0795%" height="15" fill="rgb(225,4,7)" fg:x="740" fg:w="1"/><text x="59.0735%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.9030%" y="373" width="0.2385%" height="15" fill="rgb(231,61,1)" fg:x="741" fg:w="3"/><text x="59.1530%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="58.9030%" y="357" width="0.2385%" height="15" fill="rgb(241,155,22)" fg:x="741" fg:w="3"/><text x="59.1530%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.0620%" y="341" width="0.0795%" height="15" fill="rgb(209,100,26)" fg:x="743" fg:w="1"/><text x="59.3120%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (22 samples, 1.75%)</title><rect x="57.5517%" y="533" width="1.7488%" height="15" fill="rgb(248,181,15)" fg:x="724" fg:w="22"/><text x="57.8017%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.87%)</title><rect x="58.4261%" y="517" width="0.8744%" height="15" fill="rgb(214,94,31)" fg:x="735" fg:w="11"/><text x="58.6761%" y="527.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.79%)</title><rect x="58.5056%" y="501" width="0.7949%" height="15" fill="rgb(207,16,42)" fg:x="736" fg:w="10"/><text x="58.7556%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.79%)</title><rect x="58.5056%" y="485" width="0.7949%" height="15" fill="rgb(208,127,13)" fg:x="736" fg:w="10"/><text x="58.7556%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="58.7440%" y="469" width="0.5564%" height="15" fill="rgb(220,211,18)" fg:x="739" fg:w="7"/><text x="58.9940%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="58.7440%" y="453" width="0.5564%" height="15" fill="rgb(221,55,38)" fg:x="739" fg:w="7"/><text x="58.9940%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="58.7440%" y="437" width="0.5564%" height="15" fill="rgb(252,219,45)" fg:x="739" fg:w="7"/><text x="58.9940%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="58.7440%" y="421" width="0.5564%" height="15" fill="rgb(248,53,35)" fg:x="739" fg:w="7"/><text x="58.9940%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="58.7440%" y="405" width="0.5564%" height="15" fill="rgb(210,87,2)" fg:x="739" fg:w="7"/><text x="58.9940%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="58.7440%" y="389" width="0.5564%" height="15" fill="rgb(239,133,9)" fg:x="739" fg:w="7"/><text x="58.9940%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.1415%" y="373" width="0.1590%" height="15" fill="rgb(214,114,5)" fg:x="744" fg:w="2"/><text x="59.3915%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.1415%" y="357" width="0.1590%" height="15" fill="rgb(206,124,24)" fg:x="744" fg:w="2"/><text x="59.3915%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3005%" y="501" width="0.0795%" height="15" fill="rgb(212,57,33)" fg:x="746" fg:w="1"/><text x="59.5505%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3005%" y="485" width="0.0795%" height="15" fill="rgb(246,21,20)" fg:x="746" fg:w="1"/><text x="59.5505%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.3005%" y="469" width="0.0795%" height="15" fill="rgb(253,210,39)" fg:x="746" fg:w="1"/><text x="59.5505%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.3005%" y="453" width="0.0795%" height="15" fill="rgb(209,187,24)" fg:x="746" fg:w="1"/><text x="59.5505%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.3005%" y="437" width="0.0795%" height="15" fill="rgb(246,136,17)" fg:x="746" fg:w="1"/><text x="59.5505%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3005%" y="421" width="0.0795%" height="15" fill="rgb(211,0,30)" fg:x="746" fg:w="1"/><text x="59.5505%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3005%" y="405" width="0.0795%" height="15" fill="rgb(216,199,7)" fg:x="746" fg:w="1"/><text x="59.5505%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.3005%" y="389" width="0.0795%" height="15" fill="rgb(207,210,19)" fg:x="746" fg:w="1"/><text x="59.5505%" y="399.50"></text></g><g><title>plugins_core::library::actions::reply_done (2 samples, 0.16%)</title><rect x="59.3005%" y="533" width="0.1590%" height="15" fill="rgb(237,187,39)" fg:x="746" fg:w="2"/><text x="59.5505%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (2 samples, 0.16%)</title><rect x="59.3005%" y="517" width="0.1590%" height="15" fill="rgb(243,194,42)" fg:x="746" fg:w="2"/><text x="59.5505%" y="527.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="59.3800%" y="501" width="0.0795%" height="15" fill="rgb(225,194,19)" fg:x="747" fg:w="1"/><text x="59.6300%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="59.4595%" y="485" width="0.0795%" height="15" fill="rgb(224,192,14)" fg:x="748" fg:w="1"/><text x="59.7095%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="59.4595%" y="469" width="0.0795%" height="15" fill="rgb(252,21,18)" fg:x="748" fg:w="1"/><text x="59.7095%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.4595%" y="453" width="0.0795%" height="15" fill="rgb(229,69,19)" fg:x="748" fg:w="1"/><text x="59.7095%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.4595%" y="437" width="0.0795%" height="15" fill="rgb(251,31,53)" fg:x="748" fg:w="1"/><text x="59.7095%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.4595%" y="421" width="0.0795%" height="15" fill="rgb(218,39,50)" fg:x="748" fg:w="1"/><text x="59.7095%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.4595%" y="405" width="0.0795%" height="15" fill="rgb(231,50,17)" fg:x="748" fg:w="1"/><text x="59.7095%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.4595%" y="389" width="0.0795%" height="15" fill="rgb(223,217,31)" fg:x="748" fg:w="1"/><text x="59.7095%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.4595%" y="373" width="0.0795%" height="15" fill="rgb(225,91,12)" fg:x="748" fg:w="1"/><text x="59.7095%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="59.4595%" y="517" width="0.1590%" height="15" fill="rgb(242,58,43)" fg:x="748" fg:w="2"/><text x="59.7095%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="59.4595%" y="501" width="0.1590%" height="15" fill="rgb(242,32,21)" fg:x="748" fg:w="2"/><text x="59.7095%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="59.5390%" y="485" width="0.0795%" height="15" fill="rgb(211,127,1)" fg:x="749" fg:w="1"/><text x="59.7890%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="59.5390%" y="469" width="0.0795%" height="15" fill="rgb(231,93,13)" fg:x="749" fg:w="1"/><text x="59.7890%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.5390%" y="453" width="0.0795%" height="15" fill="rgb(218,83,4)" fg:x="749" fg:w="1"/><text x="59.7890%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5390%" y="437" width="0.0795%" height="15" fill="rgb(230,218,10)" fg:x="749" fg:w="1"/><text x="59.7890%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5390%" y="421" width="0.0795%" height="15" fill="rgb(235,127,18)" fg:x="749" fg:w="1"/><text x="59.7890%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5390%" y="405" width="0.0795%" height="15" fill="rgb(213,137,46)" fg:x="749" fg:w="1"/><text x="59.7890%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5390%" y="389" width="0.0795%" height="15" fill="rgb(235,179,24)" fg:x="749" fg:w="1"/><text x="59.7890%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5390%" y="373" width="0.0795%" height="15" fill="rgb(247,58,49)" fg:x="749" fg:w="1"/><text x="59.7890%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5390%" y="357" width="0.0795%" height="15" fill="rgb(242,222,5)" fg:x="749" fg:w="1"/><text x="59.7890%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.5390%" y="341" width="0.0795%" height="15" fill="rgb(230,16,48)" fg:x="749" fg:w="1"/><text x="59.7890%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.5390%" y="325" width="0.0795%" height="15" fill="rgb(241,192,16)" fg:x="749" fg:w="1"/><text x="59.7890%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.5390%" y="309" width="0.0795%" height="15" fill="rgb(209,25,37)" fg:x="749" fg:w="1"/><text x="59.7890%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5390%" y="293" width="0.0795%" height="15" fill="rgb(229,215,13)" fg:x="749" fg:w="1"/><text x="59.7890%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5390%" y="277" width="0.0795%" height="15" fill="rgb(213,199,8)" fg:x="749" fg:w="1"/><text x="59.7890%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.5390%" y="261" width="0.0795%" height="15" fill="rgb(226,151,19)" fg:x="749" fg:w="1"/><text x="59.7890%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.5390%" y="245" width="0.0795%" height="15" fill="rgb(254,183,12)" fg:x="749" fg:w="1"/><text x="59.7890%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.5390%" y="229" width="0.0795%" height="15" fill="rgb(245,8,3)" fg:x="749" fg:w="1"/><text x="59.7890%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.5390%" y="213" width="0.0795%" height="15" fill="rgb(229,159,35)" fg:x="749" fg:w="1"/><text x="59.7890%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5390%" y="197" width="0.0795%" height="15" fill="rgb(209,145,1)" fg:x="749" fg:w="1"/><text x="59.7890%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.9364%" y="453" width="0.1590%" height="15" fill="rgb(228,183,16)" fg:x="754" fg:w="2"/><text x="60.1864%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0159%" y="437" width="0.0795%" height="15" fill="rgb(222,68,0)" fg:x="755" fg:w="1"/><text x="60.2659%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0159%" y="421" width="0.0795%" height="15" fill="rgb(209,130,50)" fg:x="755" fg:w="1"/><text x="60.2659%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0159%" y="405" width="0.0795%" height="15" fill="rgb(228,176,44)" fg:x="755" fg:w="1"/><text x="60.2659%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.0159%" y="389" width="0.0795%" height="15" fill="rgb(221,164,2)" fg:x="755" fg:w="1"/><text x="60.2659%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.0159%" y="373" width="0.0795%" height="15" fill="rgb(249,199,49)" fg:x="755" fg:w="1"/><text x="60.2659%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.0159%" y="357" width="0.0795%" height="15" fill="rgb(228,205,53)" fg:x="755" fg:w="1"/><text x="60.2659%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0159%" y="341" width="0.0795%" height="15" fill="rgb(235,77,20)" fg:x="755" fg:w="1"/><text x="60.2659%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0159%" y="325" width="0.0795%" height="15" fill="rgb(227,147,34)" fg:x="755" fg:w="1"/><text x="60.2659%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.0159%" y="309" width="0.0795%" height="15" fill="rgb(226,203,52)" fg:x="755" fg:w="1"/><text x="60.2659%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.0159%" y="293" width="0.0795%" height="15" fill="rgb(226,186,23)" fg:x="755" fg:w="1"/><text x="60.2659%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.0159%" y="277" width="0.0795%" height="15" fill="rgb(236,13,30)" fg:x="755" fg:w="1"/><text x="60.2659%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.0159%" y="261" width="0.0795%" height="15" fill="rgb(228,121,22)" fg:x="755" fg:w="1"/><text x="60.2659%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0159%" y="245" width="0.0795%" height="15" fill="rgb(248,222,26)" fg:x="755" fg:w="1"/><text x="60.2659%" y="255.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="59.6184%" y="485" width="0.5564%" height="15" fill="rgb(251,72,25)" fg:x="750" fg:w="7"/><text x="59.8684%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="59.6184%" y="469" width="0.5564%" height="15" fill="rgb(223,114,24)" fg:x="750" fg:w="7"/><text x="59.8684%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0954%" y="453" width="0.0795%" height="15" fill="rgb(232,190,43)" fg:x="756" fg:w="1"/><text x="60.3454%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="60.1749%" y="485" width="0.2385%" height="15" fill="rgb(208,90,0)" fg:x="757" fg:w="3"/><text x="60.4249%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="60.2544%" y="469" width="0.1590%" height="15" fill="rgb(234,149,31)" fg:x="758" fg:w="2"/><text x="60.5044%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="60.2544%" y="453" width="0.1590%" height="15" fill="rgb(235,188,36)" fg:x="758" fg:w="2"/><text x="60.5044%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="60.3339%" y="437" width="0.0795%" height="15" fill="rgb(219,59,51)" fg:x="759" fg:w="1"/><text x="60.5839%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.3339%" y="421" width="0.0795%" height="15" fill="rgb(236,101,40)" fg:x="759" fg:w="1"/><text x="60.5839%" y="431.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="60.4134%" y="485" width="0.0795%" height="15" fill="rgb(235,33,7)" fg:x="760" fg:w="1"/><text x="60.6634%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.4928%" y="453" width="0.0795%" height="15" fill="rgb(213,169,26)" fg:x="761" fg:w="1"/><text x="60.7428%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.4928%" y="437" width="0.0795%" height="15" fill="rgb(218,99,34)" fg:x="761" fg:w="1"/><text x="60.7428%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (13 samples, 1.03%)</title><rect x="59.6184%" y="517" width="1.0334%" height="15" fill="rgb(210,57,24)" fg:x="750" fg:w="13"/><text x="59.8684%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.03%)</title><rect x="59.6184%" y="501" width="1.0334%" height="15" fill="rgb(231,181,54)" fg:x="750" fg:w="13"/><text x="59.8684%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.4928%" y="485" width="0.1590%" height="15" fill="rgb(251,188,48)" fg:x="761" fg:w="2"/><text x="60.7428%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.4928%" y="469" width="0.1590%" height="15" fill="rgb(243,12,45)" fg:x="761" fg:w="2"/><text x="60.7428%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="60.5723%" y="453" width="0.0795%" height="15" fill="rgb(250,197,9)" fg:x="762" fg:w="1"/><text x="60.8223%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.5723%" y="437" width="0.0795%" height="15" fill="rgb(235,149,35)" fg:x="762" fg:w="1"/><text x="60.8223%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.5723%" y="421" width="0.0795%" height="15" fill="rgb(219,27,19)" fg:x="762" fg:w="1"/><text x="60.8223%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.5723%" y="405" width="0.0795%" height="15" fill="rgb(244,78,31)" fg:x="762" fg:w="1"/><text x="60.8223%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5723%" y="389" width="0.0795%" height="15" fill="rgb(241,13,4)" fg:x="762" fg:w="1"/><text x="60.8223%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.7313%" y="469" width="0.1590%" height="15" fill="rgb(212,194,26)" fg:x="764" fg:w="2"/><text x="60.9813%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.7313%" y="453" width="0.1590%" height="15" fill="rgb(236,80,11)" fg:x="764" fg:w="2"/><text x="60.9813%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="60.7313%" y="437" width="0.1590%" height="15" fill="rgb(206,1,24)" fg:x="764" fg:w="2"/><text x="60.9813%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="60.7313%" y="421" width="0.1590%" height="15" fill="rgb(238,215,50)" fg:x="764" fg:w="2"/><text x="60.9813%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="60.7313%" y="405" width="0.1590%" height="15" fill="rgb(254,126,32)" fg:x="764" fg:w="2"/><text x="60.9813%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.7313%" y="389" width="0.1590%" height="15" fill="rgb(206,111,53)" fg:x="764" fg:w="2"/><text x="60.9813%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.7313%" y="373" width="0.1590%" height="15" fill="rgb(218,72,44)" fg:x="764" fg:w="2"/><text x="60.9813%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="60.7313%" y="357" width="0.1590%" height="15" fill="rgb(238,25,3)" fg:x="764" fg:w="2"/><text x="60.9813%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="60.7313%" y="341" width="0.1590%" height="15" fill="rgb(250,191,7)" fg:x="764" fg:w="2"/><text x="60.9813%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="60.7313%" y="325" width="0.1590%" height="15" fill="rgb(238,56,30)" fg:x="764" fg:w="2"/><text x="60.9813%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="60.7313%" y="309" width="0.1590%" height="15" fill="rgb(210,27,45)" fg:x="764" fg:w="2"/><text x="60.9813%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.7313%" y="293" width="0.1590%" height="15" fill="rgb(207,10,50)" fg:x="764" fg:w="2"/><text x="60.9813%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="60.7313%" y="485" width="0.2385%" height="15" fill="rgb(249,30,23)" fg:x="764" fg:w="3"/><text x="60.9813%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8903%" y="469" width="0.0795%" height="15" fill="rgb(250,80,12)" fg:x="766" fg:w="1"/><text x="61.1403%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8903%" y="453" width="0.0795%" height="15" fill="rgb(210,221,37)" fg:x="766" fg:w="1"/><text x="61.1403%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8903%" y="437" width="0.0795%" height="15" fill="rgb(205,96,24)" fg:x="766" fg:w="1"/><text x="61.1403%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8903%" y="421" width="0.0795%" height="15" fill="rgb(247,104,22)" fg:x="766" fg:w="1"/><text x="61.1403%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.8903%" y="405" width="0.0795%" height="15" fill="rgb(222,61,53)" fg:x="766" fg:w="1"/><text x="61.1403%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.8903%" y="389" width="0.0795%" height="15" fill="rgb(241,11,53)" fg:x="766" fg:w="1"/><text x="61.1403%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.8903%" y="373" width="0.0795%" height="15" fill="rgb(230,111,47)" fg:x="766" fg:w="1"/><text x="61.1403%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.8903%" y="357" width="0.0795%" height="15" fill="rgb(218,187,29)" fg:x="766" fg:w="1"/><text x="61.1403%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.8903%" y="341" width="0.0795%" height="15" fill="rgb(210,121,46)" fg:x="766" fg:w="1"/><text x="61.1403%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.0493%" y="469" width="0.0795%" height="15" fill="rgb(250,43,19)" fg:x="768" fg:w="1"/><text x="61.2993%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="60.9698%" y="485" width="0.2385%" height="15" fill="rgb(238,61,12)" fg:x="767" fg:w="3"/><text x="61.2198%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.1288%" y="469" width="0.0795%" height="15" fill="rgb(251,198,9)" fg:x="769" fg:w="1"/><text x="61.3788%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.1288%" y="453" width="0.0795%" height="15" fill="rgb(214,192,38)" fg:x="769" fg:w="1"/><text x="61.3788%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="61.1288%" y="437" width="0.0795%" height="15" fill="rgb(214,73,19)" fg:x="769" fg:w="1"/><text x="61.3788%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.1288%" y="421" width="0.0795%" height="15" fill="rgb(249,222,49)" fg:x="769" fg:w="1"/><text x="61.3788%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.1288%" y="405" width="0.0795%" height="15" fill="rgb(231,181,54)" fg:x="769" fg:w="1"/><text x="61.3788%" y="415.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="61.2083%" y="485" width="0.3180%" height="15" fill="rgb(240,1,13)" fg:x="770" fg:w="4"/><text x="61.4583%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="61.2083%" y="469" width="0.3180%" height="15" fill="rgb(225,21,16)" fg:x="770" fg:w="4"/><text x="61.4583%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="61.2878%" y="453" width="0.2385%" height="15" fill="rgb(246,176,50)" fg:x="771" fg:w="3"/><text x="61.5378%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="61.2878%" y="437" width="0.2385%" height="15" fill="rgb(208,96,50)" fg:x="771" fg:w="3"/><text x="61.5378%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="61.2878%" y="421" width="0.2385%" height="15" fill="rgb(240,219,19)" fg:x="771" fg:w="3"/><text x="61.5378%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="61.2878%" y="405" width="0.2385%" height="15" fill="rgb(234,73,5)" fg:x="771" fg:w="3"/><text x="61.5378%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.3672%" y="389" width="0.1590%" height="15" fill="rgb(225,52,53)" fg:x="772" fg:w="2"/><text x="61.6172%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="61.4467%" y="373" width="0.0795%" height="15" fill="rgb(250,12,14)" fg:x="773" fg:w="1"/><text x="61.6967%" y="383.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (12 samples, 0.95%)</title><rect x="60.6518%" y="517" width="0.9539%" height="15" fill="rgb(242,185,54)" fg:x="763" fg:w="12"/><text x="60.9018%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (12 samples, 0.95%)</title><rect x="60.6518%" y="501" width="0.9539%" height="15" fill="rgb(211,206,31)" fg:x="763" fg:w="12"/><text x="60.9018%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="61.5262%" y="485" width="0.0795%" height="15" fill="rgb(252,10,33)" fg:x="774" fg:w="1"/><text x="61.7762%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="61.5262%" y="469" width="0.0795%" height="15" fill="rgb(216,26,7)" fg:x="774" fg:w="1"/><text x="61.7762%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="61.5262%" y="453" width="0.0795%" height="15" fill="rgb(228,112,40)" fg:x="774" fg:w="1"/><text x="61.7762%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="61.5262%" y="437" width="0.0795%" height="15" fill="rgb(212,21,16)" fg:x="774" fg:w="1"/><text x="61.7762%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.5262%" y="421" width="0.0795%" height="15" fill="rgb(249,3,29)" fg:x="774" fg:w="1"/><text x="61.7762%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.5262%" y="405" width="0.0795%" height="15" fill="rgb(221,42,51)" fg:x="774" fg:w="1"/><text x="61.7762%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.6057%" y="421" width="0.1590%" height="15" fill="rgb(225,90,21)" fg:x="775" fg:w="2"/><text x="61.8557%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.6057%" y="405" width="0.1590%" height="15" fill="rgb(242,131,5)" fg:x="775" fg:w="2"/><text x="61.8557%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.6852%" y="389" width="0.0795%" height="15" fill="rgb(220,187,28)" fg:x="776" fg:w="1"/><text x="61.9352%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.6852%" y="373" width="0.0795%" height="15" fill="rgb(210,75,48)" fg:x="776" fg:w="1"/><text x="61.9352%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6852%" y="357" width="0.0795%" height="15" fill="rgb(211,91,40)" fg:x="776" fg:w="1"/><text x="61.9352%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6852%" y="341" width="0.0795%" height="15" fill="rgb(205,43,18)" fg:x="776" fg:w="1"/><text x="61.9352%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.6852%" y="325" width="0.0795%" height="15" fill="rgb(207,123,11)" fg:x="776" fg:w="1"/><text x="61.9352%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.6852%" y="309" width="0.0795%" height="15" fill="rgb(235,89,39)" fg:x="776" fg:w="1"/><text x="61.9352%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.6852%" y="293" width="0.0795%" height="15" fill="rgb(245,217,27)" fg:x="776" fg:w="1"/><text x="61.9352%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.6852%" y="277" width="0.0795%" height="15" fill="rgb(216,55,17)" fg:x="776" fg:w="1"/><text x="61.9352%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.6852%" y="261" width="0.0795%" height="15" fill="rgb(252,116,44)" fg:x="776" fg:w="1"/><text x="61.9352%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.6852%" y="245" width="0.0795%" height="15" fill="rgb(229,153,4)" fg:x="776" fg:w="1"/><text x="61.9352%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.6852%" y="229" width="0.0795%" height="15" fill="rgb(222,24,35)" fg:x="776" fg:w="1"/><text x="61.9352%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.6852%" y="213" width="0.0795%" height="15" fill="rgb(214,26,20)" fg:x="776" fg:w="1"/><text x="61.9352%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.6852%" y="197" width="0.0795%" height="15" fill="rgb(215,14,45)" fg:x="776" fg:w="1"/><text x="61.9352%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.6852%" y="181" width="0.0795%" height="15" fill="rgb(217,212,50)" fg:x="776" fg:w="1"/><text x="61.9352%" y="191.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="61.6057%" y="517" width="0.3180%" height="15" fill="rgb(230,172,52)" fg:x="775" fg:w="4"/><text x="61.8557%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="61.6057%" y="501" width="0.3180%" height="15" fill="rgb(210,48,36)" fg:x="775" fg:w="4"/><text x="61.8557%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="61.6057%" y="485" width="0.3180%" height="15" fill="rgb(216,213,32)" fg:x="775" fg:w="4"/><text x="61.8557%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="61.6057%" y="469" width="0.3180%" height="15" fill="rgb(237,202,41)" fg:x="775" fg:w="4"/><text x="61.8557%" y="479.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="61.6057%" y="453" width="0.3180%" height="15" fill="rgb(209,14,29)" fg:x="775" fg:w="4"/><text x="61.8557%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="61.6057%" y="437" width="0.3180%" height="15" fill="rgb(219,29,3)" fg:x="775" fg:w="4"/><text x="61.8557%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.7647%" y="421" width="0.1590%" height="15" fill="rgb(229,13,49)" fg:x="777" fg:w="2"/><text x="62.0147%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.7647%" y="405" width="0.1590%" height="15" fill="rgb(210,206,2)" fg:x="777" fg:w="2"/><text x="62.0147%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.7647%" y="389" width="0.1590%" height="15" fill="rgb(216,154,46)" fg:x="777" fg:w="2"/><text x="62.0147%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.7647%" y="373" width="0.1590%" height="15" fill="rgb(211,170,52)" fg:x="777" fg:w="2"/><text x="62.0147%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="61.7647%" y="357" width="0.1590%" height="15" fill="rgb(233,109,47)" fg:x="777" fg:w="2"/><text x="62.0147%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.7647%" y="341" width="0.1590%" height="15" fill="rgb(208,212,30)" fg:x="777" fg:w="2"/><text x="62.0147%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.8442%" y="325" width="0.0795%" height="15" fill="rgb(215,190,19)" fg:x="778" fg:w="1"/><text x="62.0942%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.8442%" y="309" width="0.0795%" height="15" fill="rgb(207,164,53)" fg:x="778" fg:w="1"/><text x="62.0942%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.8442%" y="293" width="0.0795%" height="15" fill="rgb(213,87,49)" fg:x="778" fg:w="1"/><text x="62.0942%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.8442%" y="277" width="0.0795%" height="15" fill="rgb(241,216,24)" fg:x="778" fg:w="1"/><text x="62.0942%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.8442%" y="261" width="0.0795%" height="15" fill="rgb(241,123,45)" fg:x="778" fg:w="1"/><text x="62.0942%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.8442%" y="245" width="0.0795%" height="15" fill="rgb(220,36,15)" fg:x="778" fg:w="1"/><text x="62.0942%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9237%" y="501" width="0.0795%" height="15" fill="rgb(215,202,9)" fg:x="779" fg:w="1"/><text x="62.1737%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9237%" y="485" width="0.0795%" height="15" fill="rgb(252,71,26)" fg:x="779" fg:w="1"/><text x="62.1737%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9237%" y="469" width="0.0795%" height="15" fill="rgb(243,195,19)" fg:x="779" fg:w="1"/><text x="62.1737%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9237%" y="453" width="0.0795%" height="15" fill="rgb(207,167,27)" fg:x="779" fg:w="1"/><text x="62.1737%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9237%" y="437" width="0.0795%" height="15" fill="rgb(250,146,54)" fg:x="779" fg:w="1"/><text x="62.1737%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9237%" y="421" width="0.0795%" height="15" fill="rgb(245,79,9)" fg:x="779" fg:w="1"/><text x="62.1737%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9237%" y="405" width="0.0795%" height="15" fill="rgb(234,197,22)" fg:x="779" fg:w="1"/><text x="62.1737%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (270 samples, 21.46%)</title><rect x="40.6200%" y="725" width="21.4626%" height="15" fill="rgb(221,52,48)" fg:x="511" fg:w="270"/><text x="40.8700%" y="735.50">&lt;engine::session::Session as kerne..</text></g><g><title>kernel::plugins::mw::apply_middleware (269 samples, 21.38%)</title><rect x="40.6995%" y="709" width="21.3831%" height="15" fill="rgb(235,80,0)" fg:x="512" fg:w="269"/><text x="40.9495%" y="719.50">kernel::plugins::mw::apply_middlew..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (269 samples, 21.38%)</title><rect x="40.6995%" y="693" width="21.3831%" height="15" fill="rgb(221,117,53)" fg:x="512" fg:w="269"/><text x="40.9495%" y="703.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (269 samples, 21.38%)</title><rect x="40.6995%" y="677" width="21.3831%" height="15" fill="rgb(239,48,47)" fg:x="512" fg:w="269"/><text x="40.9495%" y="687.50">&lt;engine::session::ExpandSurroundin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (232 samples, 18.44%)</title><rect x="43.6407%" y="661" width="18.4420%" height="15" fill="rgb(227,191,52)" fg:x="549" fg:w="232"/><text x="43.8907%" y="671.50">kernel::plugins::mw::Middlewa..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (231 samples, 18.36%)</title><rect x="43.7202%" y="645" width="18.3625%" height="15" fill="rgb(241,118,1)" fg:x="550" fg:w="231"/><text x="43.9702%" y="655.50">&lt;plugins_dynlib::DynamicMiddl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (231 samples, 18.36%)</title><rect x="43.7202%" y="629" width="18.3625%" height="15" fill="rgb(240,85,3)" fg:x="550" fg:w="231"/><text x="43.9702%" y="639.50">kernel::plugins::mw::Middlewa..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (229 samples, 18.20%)</title><rect x="43.8792%" y="613" width="18.2035%" height="15" fill="rgb(237,68,37)" fg:x="552" fg:w="229"/><text x="44.1292%" y="623.50">core::ops::function::FnOnce:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (229 samples, 18.20%)</title><rect x="43.8792%" y="597" width="18.2035%" height="15" fill="rgb(212,9,20)" fg:x="552" fg:w="229"/><text x="44.1292%" y="607.50">kernel::plugins::mw::Middlew..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (229 samples, 18.20%)</title><rect x="43.8792%" y="581" width="18.2035%" height="15" fill="rgb(218,84,17)" fg:x="552" fg:w="229"/><text x="44.1292%" y="591.50">core::ops::function::FnOnce:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (229 samples, 18.20%)</title><rect x="43.8792%" y="565" width="18.2035%" height="15" fill="rgb(235,147,20)" fg:x="552" fg:w="229"/><text x="44.1292%" y="575.50">&lt;engine::session::state::Sta..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (79 samples, 6.28%)</title><rect x="55.8029%" y="549" width="6.2798%" height="15" fill="rgb(208,224,1)" fg:x="702" fg:w="79"/><text x="56.0529%" y="559.50">&lt;plugins..</text></g><g><title>plugins_core::tools::move_between (33 samples, 2.62%)</title><rect x="59.4595%" y="533" width="2.6232%" height="15" fill="rgb(232,97,50)" fg:x="748" fg:w="33"/><text x="59.7095%" y="543.50">pl..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="61.9237%" y="517" width="0.1590%" height="15" fill="rgb(238,15,45)" fg:x="779" fg:w="2"/><text x="62.1737%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="62.0032%" y="501" width="0.0795%" height="15" fill="rgb(231,46,18)" fg:x="780" fg:w="1"/><text x="62.2532%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="62.0032%" y="485" width="0.0795%" height="15" fill="rgb(254,169,10)" fg:x="780" fg:w="1"/><text x="62.2532%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0032%" y="469" width="0.0795%" height="15" fill="rgb(243,169,30)" fg:x="780" fg:w="1"/><text x="62.2532%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="62.0827%" y="661" width="0.0795%" height="15" fill="rgb(236,90,49)" fg:x="781" fg:w="1"/><text x="62.3327%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="62.0827%" y="645" width="0.0795%" height="15" fill="rgb(218,80,15)" fg:x="781" fg:w="1"/><text x="62.3327%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.0827%" y="629" width="0.0795%" height="15" fill="rgb(222,115,37)" fg:x="781" fg:w="1"/><text x="62.3327%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.0827%" y="613" width="0.0795%" height="15" fill="rgb(227,0,6)" fg:x="781" fg:w="1"/><text x="62.3327%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0827%" y="597" width="0.0795%" height="15" fill="rgb(217,189,13)" fg:x="781" fg:w="1"/><text x="62.3327%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.0827%" y="581" width="0.0795%" height="15" fill="rgb(220,74,19)" fg:x="781" fg:w="1"/><text x="62.3327%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0827%" y="565" width="0.0795%" height="15" fill="rgb(224,81,18)" fg:x="781" fg:w="1"/><text x="62.3327%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.0827%" y="549" width="0.0795%" height="15" fill="rgb(245,178,48)" fg:x="781" fg:w="1"/><text x="62.3327%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0827%" y="533" width="0.0795%" height="15" fill="rgb(207,78,24)" fg:x="781" fg:w="1"/><text x="62.3327%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.0827%" y="517" width="0.0795%" height="15" fill="rgb(223,222,30)" fg:x="781" fg:w="1"/><text x="62.3327%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0827%" y="501" width="0.0795%" height="15" fill="rgb(234,101,12)" fg:x="781" fg:w="1"/><text x="62.3327%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="62.0827%" y="693" width="0.1590%" height="15" fill="rgb(209,80,46)" fg:x="781" fg:w="2"/><text x="62.3327%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="62.0827%" y="677" width="0.1590%" height="15" fill="rgb(228,79,14)" fg:x="781" fg:w="2"/><text x="62.3327%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="62.1622%" y="661" width="0.0795%" height="15" fill="rgb(220,219,34)" fg:x="782" fg:w="1"/><text x="62.4122%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="62.1622%" y="645" width="0.0795%" height="15" fill="rgb(207,80,21)" fg:x="782" fg:w="1"/><text x="62.4122%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.1622%" y="629" width="0.0795%" height="15" fill="rgb(210,154,44)" fg:x="782" fg:w="1"/><text x="62.4122%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.1622%" y="613" width="0.0795%" height="15" fill="rgb(246,44,39)" fg:x="782" fg:w="1"/><text x="62.4122%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1622%" y="597" width="0.0795%" height="15" fill="rgb(252,175,13)" fg:x="782" fg:w="1"/><text x="62.4122%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.1622%" y="581" width="0.0795%" height="15" fill="rgb(211,50,39)" fg:x="782" fg:w="1"/><text x="62.4122%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1622%" y="565" width="0.0795%" height="15" fill="rgb(231,204,27)" fg:x="782" fg:w="1"/><text x="62.4122%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.1622%" y="549" width="0.0795%" height="15" fill="rgb(253,26,34)" fg:x="782" fg:w="1"/><text x="62.4122%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1622%" y="533" width="0.0795%" height="15" fill="rgb(207,139,38)" fg:x="782" fg:w="1"/><text x="62.4122%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.1622%" y="517" width="0.0795%" height="15" fill="rgb(248,54,27)" fg:x="782" fg:w="1"/><text x="62.4122%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1622%" y="501" width="0.0795%" height="15" fill="rgb(234,25,33)" fg:x="782" fg:w="1"/><text x="62.4122%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.1622%" y="485" width="0.0795%" height="15" fill="rgb(249,107,47)" fg:x="782" fg:w="1"/><text x="62.4122%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.2417%" y="629" width="0.0795%" height="15" fill="rgb(230,190,31)" fg:x="783" fg:w="1"/><text x="62.4917%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.2417%" y="613" width="0.0795%" height="15" fill="rgb(238,173,45)" fg:x="783" fg:w="1"/><text x="62.4917%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.5596%" y="533" width="0.0795%" height="15" fill="rgb(222,16,50)" fg:x="787" fg:w="1"/><text x="62.8096%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.5596%" y="549" width="0.1590%" height="15" fill="rgb(251,204,47)" fg:x="787" fg:w="2"/><text x="62.8096%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.6391%" y="533" width="0.0795%" height="15" fill="rgb(225,12,3)" fg:x="788" fg:w="1"/><text x="62.8891%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.6391%" y="517" width="0.0795%" height="15" fill="rgb(214,208,22)" fg:x="788" fg:w="1"/><text x="62.8891%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.6391%" y="501" width="0.0795%" height="15" fill="rgb(240,57,32)" fg:x="788" fg:w="1"/><text x="62.8891%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.7981%" y="517" width="0.0795%" height="15" fill="rgb(243,113,48)" fg:x="790" fg:w="1"/><text x="63.0481%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7981%" y="501" width="0.0795%" height="15" fill="rgb(225,135,30)" fg:x="790" fg:w="1"/><text x="63.0481%" y="511.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="62.2417%" y="677" width="0.7154%" height="15" fill="rgb(222,3,53)" fg:x="783" fg:w="9"/><text x="62.4917%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="62.2417%" y="661" width="0.7154%" height="15" fill="rgb(243,142,2)" fg:x="783" fg:w="9"/><text x="62.4917%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="62.2417%" y="645" width="0.7154%" height="15" fill="rgb(233,67,14)" fg:x="783" fg:w="9"/><text x="62.4917%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="62.3211%" y="629" width="0.6359%" height="15" fill="rgb(245,125,36)" fg:x="784" fg:w="8"/><text x="62.5711%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="62.3211%" y="613" width="0.6359%" height="15" fill="rgb(225,199,6)" fg:x="784" fg:w="8"/><text x="62.5711%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="62.4006%" y="597" width="0.5564%" height="15" fill="rgb(244,71,6)" fg:x="785" fg:w="7"/><text x="62.6506%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="62.4006%" y="581" width="0.5564%" height="15" fill="rgb(225,62,9)" fg:x="785" fg:w="7"/><text x="62.6506%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="62.5596%" y="565" width="0.3975%" height="15" fill="rgb(246,139,53)" fg:x="787" fg:w="5"/><text x="62.8096%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="62.7186%" y="549" width="0.2385%" height="15" fill="rgb(243,161,46)" fg:x="789" fg:w="3"/><text x="62.9686%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.7981%" y="533" width="0.1590%" height="15" fill="rgb(236,153,7)" fg:x="790" fg:w="2"/><text x="63.0481%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.8776%" y="517" width="0.0795%" height="15" fill="rgb(248,42,35)" fg:x="791" fg:w="1"/><text x="63.1276%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.8776%" y="501" width="0.0795%" height="15" fill="rgb(250,17,31)" fg:x="791" fg:w="1"/><text x="63.1276%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="62.8776%" y="485" width="0.0795%" height="15" fill="rgb(248,138,14)" fg:x="791" fg:w="1"/><text x="63.1276%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.0366%" y="597" width="0.0795%" height="15" fill="rgb(228,161,3)" fg:x="793" fg:w="1"/><text x="63.2866%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.0366%" y="581" width="0.0795%" height="15" fill="rgb(248,116,17)" fg:x="793" fg:w="1"/><text x="63.2866%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.0366%" y="565" width="0.0795%" height="15" fill="rgb(207,78,24)" fg:x="793" fg:w="1"/><text x="63.2866%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.0366%" y="549" width="0.0795%" height="15" fill="rgb(234,99,48)" fg:x="793" fg:w="1"/><text x="63.2866%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.0366%" y="533" width="0.0795%" height="15" fill="rgb(242,22,26)" fg:x="793" fg:w="1"/><text x="63.2866%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.0366%" y="517" width="0.0795%" height="15" fill="rgb(227,78,32)" fg:x="793" fg:w="1"/><text x="63.2866%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.0366%" y="501" width="0.0795%" height="15" fill="rgb(226,189,43)" fg:x="793" fg:w="1"/><text x="63.2866%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.0366%" y="485" width="0.0795%" height="15" fill="rgb(227,218,35)" fg:x="793" fg:w="1"/><text x="63.2866%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.0366%" y="469" width="0.0795%" height="15" fill="rgb(206,111,40)" fg:x="793" fg:w="1"/><text x="63.2866%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="62.9571%" y="645" width="0.3180%" height="15" fill="rgb(208,217,22)" fg:x="792" fg:w="4"/><text x="63.2071%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.9571%" y="629" width="0.3180%" height="15" fill="rgb(248,20,20)" fg:x="792" fg:w="4"/><text x="63.2071%" y="639.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="63.0366%" y="613" width="0.2385%" height="15" fill="rgb(239,155,16)" fg:x="793" fg:w="3"/><text x="63.2866%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.1161%" y="597" width="0.1590%" height="15" fill="rgb(238,171,46)" fg:x="794" fg:w="2"/><text x="63.3661%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.1161%" y="581" width="0.1590%" height="15" fill="rgb(248,11,36)" fg:x="794" fg:w="2"/><text x="63.3661%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.1955%" y="565" width="0.0795%" height="15" fill="rgb(220,148,37)" fg:x="795" fg:w="1"/><text x="63.4455%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="63.1955%" y="549" width="0.0795%" height="15" fill="rgb(218,144,42)" fg:x="795" fg:w="1"/><text x="63.4455%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="63.1955%" y="533" width="0.0795%" height="15" fill="rgb(245,20,20)" fg:x="795" fg:w="1"/><text x="63.4455%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.27%)</title><rect x="62.0827%" y="725" width="1.2719%" height="15" fill="rgb(240,111,48)" fg:x="781" fg:w="16"/><text x="62.3327%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.27%)</title><rect x="62.0827%" y="709" width="1.2719%" height="15" fill="rgb(237,225,32)" fg:x="781" fg:w="16"/><text x="62.3327%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.11%)</title><rect x="62.2417%" y="693" width="1.1129%" height="15" fill="rgb(228,161,46)" fg:x="783" fg:w="14"/><text x="62.4917%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.9571%" y="677" width="0.3975%" height="15" fill="rgb(235,196,21)" fg:x="792" fg:w="5"/><text x="63.2071%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.9571%" y="661" width="0.3975%" height="15" fill="rgb(250,133,21)" fg:x="792" fg:w="5"/><text x="63.2071%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.2750%" y="645" width="0.0795%" height="15" fill="rgb(236,94,32)" fg:x="796" fg:w="1"/><text x="63.5250%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2750%" y="629" width="0.0795%" height="15" fill="rgb(219,176,25)" fg:x="796" fg:w="1"/><text x="63.5250%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="63.3545%" y="677" width="0.0795%" height="15" fill="rgb(211,17,43)" fg:x="797" fg:w="1"/><text x="63.6045%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="63.3545%" y="661" width="0.0795%" height="15" fill="rgb(220,75,23)" fg:x="797" fg:w="1"/><text x="63.6045%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="63.3545%" y="645" width="0.0795%" height="15" fill="rgb(215,122,32)" fg:x="797" fg:w="1"/><text x="63.6045%" y="655.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="63.3545%" y="629" width="0.0795%" height="15" fill="rgb(218,57,38)" fg:x="797" fg:w="1"/><text x="63.6045%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="63.4340%" y="613" width="0.1590%" height="15" fill="rgb(233,208,46)" fg:x="798" fg:w="2"/><text x="63.6840%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="63.4340%" y="597" width="0.1590%" height="15" fill="rgb(221,35,50)" fg:x="798" fg:w="2"/><text x="63.6840%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.5930%" y="613" width="0.0795%" height="15" fill="rgb(229,213,29)" fg:x="800" fg:w="1"/><text x="63.8430%" y="623.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="63.4340%" y="661" width="0.3975%" height="15" fill="rgb(229,110,40)" fg:x="798" fg:w="5"/><text x="63.6840%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="63.4340%" y="645" width="0.3975%" height="15" fill="rgb(247,206,19)" fg:x="798" fg:w="5"/><text x="63.6840%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="63.4340%" y="629" width="0.3975%" height="15" fill="rgb(216,229,45)" fg:x="798" fg:w="5"/><text x="63.6840%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.6725%" y="613" width="0.1590%" height="15" fill="rgb(205,184,31)" fg:x="801" fg:w="2"/><text x="63.9225%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.6725%" y="597" width="0.1590%" height="15" fill="rgb(213,91,10)" fg:x="801" fg:w="2"/><text x="63.9225%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.7520%" y="581" width="0.0795%" height="15" fill="rgb(250,49,8)" fg:x="802" fg:w="1"/><text x="64.0020%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7520%" y="565" width="0.0795%" height="15" fill="rgb(207,26,8)" fg:x="802" fg:w="1"/><text x="64.0020%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.7520%" y="549" width="0.0795%" height="15" fill="rgb(224,2,13)" fg:x="802" fg:w="1"/><text x="64.0020%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7520%" y="533" width="0.0795%" height="15" fill="rgb(219,108,27)" fg:x="802" fg:w="1"/><text x="64.0020%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.7520%" y="517" width="0.0795%" height="15" fill="rgb(240,89,32)" fg:x="802" fg:w="1"/><text x="64.0020%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7520%" y="501" width="0.0795%" height="15" fill="rgb(248,205,3)" fg:x="802" fg:w="1"/><text x="64.0020%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.7520%" y="485" width="0.0795%" height="15" fill="rgb(236,197,47)" fg:x="802" fg:w="1"/><text x="64.0020%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7520%" y="469" width="0.0795%" height="15" fill="rgb(244,185,52)" fg:x="802" fg:w="1"/><text x="64.0020%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9110%" y="597" width="0.0795%" height="15" fill="rgb(210,206,23)" fg:x="804" fg:w="1"/><text x="64.1610%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9110%" y="581" width="0.0795%" height="15" fill="rgb(251,177,30)" fg:x="804" fg:w="1"/><text x="64.1610%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.9905%" y="581" width="0.0795%" height="15" fill="rgb(243,27,45)" fg:x="805" fg:w="1"/><text x="64.2405%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9905%" y="565" width="0.0795%" height="15" fill="rgb(248,141,51)" fg:x="805" fg:w="1"/><text x="64.2405%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.0700%" y="581" width="0.0795%" height="15" fill="rgb(235,102,15)" fg:x="806" fg:w="1"/><text x="64.3200%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.0700%" y="565" width="0.0795%" height="15" fill="rgb(214,164,53)" fg:x="806" fg:w="1"/><text x="64.3200%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.0700%" y="549" width="0.0795%" height="15" fill="rgb(228,18,51)" fg:x="806" fg:w="1"/><text x="64.3200%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.0700%" y="533" width="0.0795%" height="15" fill="rgb(205,211,11)" fg:x="806" fg:w="1"/><text x="64.3200%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.0700%" y="517" width="0.0795%" height="15" fill="rgb(208,63,6)" fg:x="806" fg:w="1"/><text x="64.3200%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.0700%" y="501" width="0.0795%" height="15" fill="rgb(245,76,14)" fg:x="806" fg:w="1"/><text x="64.3200%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.0700%" y="485" width="0.0795%" height="15" fill="rgb(234,176,34)" fg:x="806" fg:w="1"/><text x="64.3200%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.95%)</title><rect x="63.4340%" y="677" width="0.9539%" height="15" fill="rgb(243,156,42)" fg:x="798" fg:w="12"/><text x="63.6840%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="63.8315%" y="661" width="0.5564%" height="15" fill="rgb(237,182,10)" fg:x="803" fg:w="7"/><text x="64.0815%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="63.8315%" y="645" width="0.5564%" height="15" fill="rgb(244,117,0)" fg:x="803" fg:w="7"/><text x="64.0815%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="63.9110%" y="629" width="0.4769%" height="15" fill="rgb(239,91,50)" fg:x="804" fg:w="6"/><text x="64.1610%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="63.9110%" y="613" width="0.4769%" height="15" fill="rgb(206,38,9)" fg:x="804" fg:w="6"/><text x="64.1610%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="63.9905%" y="597" width="0.3975%" height="15" fill="rgb(205,25,10)" fg:x="805" fg:w="5"/><text x="64.2405%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.1494%" y="581" width="0.2385%" height="15" fill="rgb(206,224,7)" fg:x="807" fg:w="3"/><text x="64.3994%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.1494%" y="565" width="0.2385%" height="15" fill="rgb(227,157,10)" fg:x="807" fg:w="3"/><text x="64.3994%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="64.1494%" y="549" width="0.2385%" height="15" fill="rgb(214,157,37)" fg:x="807" fg:w="3"/><text x="64.3994%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.1494%" y="533" width="0.2385%" height="15" fill="rgb(209,180,35)" fg:x="807" fg:w="3"/><text x="64.3994%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.1494%" y="517" width="0.2385%" height="15" fill="rgb(216,174,49)" fg:x="807" fg:w="3"/><text x="64.3994%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="64.1494%" y="501" width="0.2385%" height="15" fill="rgb(205,96,20)" fg:x="807" fg:w="3"/><text x="64.3994%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.1494%" y="485" width="0.2385%" height="15" fill="rgb(214,220,39)" fg:x="807" fg:w="3"/><text x="64.3994%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.1494%" y="469" width="0.2385%" height="15" fill="rgb(245,126,30)" fg:x="807" fg:w="3"/><text x="64.3994%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="64.1494%" y="453" width="0.2385%" height="15" fill="rgb(215,88,33)" fg:x="807" fg:w="3"/><text x="64.3994%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.1494%" y="437" width="0.2385%" height="15" fill="rgb(210,1,49)" fg:x="807" fg:w="3"/><text x="64.3994%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.1494%" y="421" width="0.2385%" height="15" fill="rgb(207,133,3)" fg:x="807" fg:w="3"/><text x="64.3994%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="64.2289%" y="405" width="0.1590%" height="15" fill="rgb(231,47,43)" fg:x="808" fg:w="2"/><text x="64.4789%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.2289%" y="389" width="0.1590%" height="15" fill="rgb(245,64,1)" fg:x="808" fg:w="2"/><text x="64.4789%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.3084%" y="373" width="0.0795%" height="15" fill="rgb(253,145,20)" fg:x="809" fg:w="1"/><text x="64.5584%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.3084%" y="357" width="0.0795%" height="15" fill="rgb(211,39,18)" fg:x="809" fg:w="1"/><text x="64.5584%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.3084%" y="341" width="0.0795%" height="15" fill="rgb(223,225,18)" fg:x="809" fg:w="1"/><text x="64.5584%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.11%)</title><rect x="63.3545%" y="709" width="1.1129%" height="15" fill="rgb(210,202,44)" fg:x="797" fg:w="14"/><text x="63.6045%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.11%)</title><rect x="63.3545%" y="693" width="1.1129%" height="15" fill="rgb(231,138,36)" fg:x="797" fg:w="14"/><text x="63.6045%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="64.3879%" y="677" width="0.0795%" height="15" fill="rgb(237,115,25)" fg:x="810" fg:w="1"/><text x="64.6379%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="64.3879%" y="661" width="0.0795%" height="15" fill="rgb(215,53,48)" fg:x="810" fg:w="1"/><text x="64.6379%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="64.3879%" y="645" width="0.0795%" height="15" fill="rgb(243,193,24)" fg:x="810" fg:w="1"/><text x="64.6379%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.3879%" y="629" width="0.0795%" height="15" fill="rgb(210,106,28)" fg:x="810" fg:w="1"/><text x="64.6379%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.3879%" y="613" width="0.0795%" height="15" fill="rgb(249,192,0)" fg:x="810" fg:w="1"/><text x="64.6379%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (15 samples, 1.19%)</title><rect x="63.3545%" y="725" width="1.1924%" height="15" fill="rgb(224,96,21)" fg:x="797" fg:w="15"/><text x="63.6045%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="64.4674%" y="709" width="0.0795%" height="15" fill="rgb(243,160,19)" fg:x="811" fg:w="1"/><text x="64.7174%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="64.4674%" y="693" width="0.0795%" height="15" fill="rgb(219,205,50)" fg:x="811" fg:w="1"/><text x="64.7174%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="64.4674%" y="677" width="0.0795%" height="15" fill="rgb(218,175,44)" fg:x="811" fg:w="1"/><text x="64.7174%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.4674%" y="661" width="0.0795%" height="15" fill="rgb(251,84,47)" fg:x="811" fg:w="1"/><text x="64.7174%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="64.4674%" y="645" width="0.0795%" height="15" fill="rgb(241,14,16)" fg:x="811" fg:w="1"/><text x="64.7174%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="64.4674%" y="629" width="0.0795%" height="15" fill="rgb(207,142,28)" fg:x="811" fg:w="1"/><text x="64.7174%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="64.4674%" y="613" width="0.0795%" height="15" fill="rgb(208,116,22)" fg:x="811" fg:w="1"/><text x="64.7174%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.4674%" y="597" width="0.0795%" height="15" fill="rgb(210,0,43)" fg:x="811" fg:w="1"/><text x="64.7174%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.4674%" y="581" width="0.0795%" height="15" fill="rgb(246,33,21)" fg:x="811" fg:w="1"/><text x="64.7174%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.4674%" y="565" width="0.0795%" height="15" fill="rgb(208,158,54)" fg:x="811" fg:w="1"/><text x="64.7174%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="64.4674%" y="549" width="0.0795%" height="15" fill="rgb(218,99,29)" fg:x="811" fg:w="1"/><text x="64.7174%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="64.4674%" y="533" width="0.0795%" height="15" fill="rgb(226,29,7)" fg:x="811" fg:w="1"/><text x="64.7174%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="64.4674%" y="517" width="0.0795%" height="15" fill="rgb(206,178,46)" fg:x="811" fg:w="1"/><text x="64.7174%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="64.4674%" y="501" width="0.0795%" height="15" fill="rgb(205,169,32)" fg:x="811" fg:w="1"/><text x="64.7174%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.4674%" y="485" width="0.0795%" height="15" fill="rgb(217,4,13)" fg:x="811" fg:w="1"/><text x="64.7174%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="64.6264%" y="693" width="0.3180%" height="15" fill="rgb(210,140,37)" fg:x="813" fg:w="4"/><text x="64.8764%" y="703.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="64.7854%" y="677" width="0.1590%" height="15" fill="rgb(229,80,10)" fg:x="815" fg:w="2"/><text x="65.0354%" y="687.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="64.7854%" y="661" width="0.1590%" height="15" fill="rgb(212,175,34)" fg:x="815" fg:w="2"/><text x="65.0354%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="64.7854%" y="645" width="0.1590%" height="15" fill="rgb(216,207,24)" fg:x="815" fg:w="2"/><text x="65.0354%" y="655.50"></text></g><g><title>plugins_core::library::parser::word (1 samples, 0.08%)</title><rect x="64.8649%" y="629" width="0.0795%" height="15" fill="rgb(234,163,3)" fg:x="816" fg:w="1"/><text x="65.1149%" y="639.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.08%)</title><rect x="64.8649%" y="613" width="0.0795%" height="15" fill="rgb(248,101,16)" fg:x="816" fg:w="1"/><text x="65.1149%" y="623.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="64.8649%" y="597" width="0.0795%" height="15" fill="rgb(209,152,54)" fg:x="816" fg:w="1"/><text x="65.1149%" y="607.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="64.9444%" y="693" width="0.0795%" height="15" fill="rgb(229,124,51)" fg:x="817" fg:w="1"/><text x="65.1944%" y="703.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="64.9444%" y="677" width="0.0795%" height="15" fill="rgb(219,83,18)" fg:x="817" fg:w="1"/><text x="65.1944%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="64.9444%" y="661" width="0.0795%" height="15" fill="rgb(206,29,38)" fg:x="817" fg:w="1"/><text x="65.1944%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="64.9444%" y="645" width="0.0795%" height="15" fill="rgb(245,123,23)" fg:x="817" fg:w="1"/><text x="65.1944%" y="655.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (7 samples, 0.56%)</title><rect x="64.5469%" y="725" width="0.5564%" height="15" fill="rgb(238,50,33)" fg:x="812" fg:w="7"/><text x="64.7969%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.56%)</title><rect x="64.5469%" y="709" width="0.5564%" height="15" fill="rgb(234,165,23)" fg:x="812" fg:w="7"/><text x="64.7969%" y="719.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="65.0238%" y="693" width="0.0795%" height="15" fill="rgb(211,82,31)" fg:x="818" fg:w="1"/><text x="65.2738%" y="703.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="65.0238%" y="677" width="0.0795%" height="15" fill="rgb(224,166,46)" fg:x="818" fg:w="1"/><text x="65.2738%" y="687.50"></text></g><g><title>&lt;kernel::model::base::DomainError as core::convert::From&lt;anyhow::Error&gt;&gt;::from (1 samples, 0.08%)</title><rect x="65.0238%" y="661" width="0.0795%" height="15" fill="rgb(211,13,8)" fg:x="818" fg:w="1"/><text x="65.2738%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.1033%" y="725" width="0.0795%" height="15" fill="rgb(212,7,42)" fg:x="819" fg:w="1"/><text x="65.3533%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.2623%" y="677" width="0.0795%" height="15" fill="rgb(249,102,19)" fg:x="821" fg:w="1"/><text x="65.5123%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.2623%" y="661" width="0.0795%" height="15" fill="rgb(225,41,13)" fg:x="821" fg:w="1"/><text x="65.5123%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.2623%" y="645" width="0.0795%" height="15" fill="rgb(220,65,27)" fg:x="821" fg:w="1"/><text x="65.5123%" y="655.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="65.1828%" y="725" width="0.2385%" height="15" fill="rgb(206,4,41)" fg:x="820" fg:w="3"/><text x="65.4328%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="65.1828%" y="709" width="0.2385%" height="15" fill="rgb(219,60,39)" fg:x="820" fg:w="3"/><text x="65.4328%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="65.1828%" y="693" width="0.2385%" height="15" fill="rgb(226,4,38)" fg:x="820" fg:w="3"/><text x="65.4328%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.3418%" y="677" width="0.0795%" height="15" fill="rgb(250,52,3)" fg:x="822" fg:w="1"/><text x="65.5918%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3418%" y="661" width="0.0795%" height="15" fill="rgb(234,93,0)" fg:x="822" fg:w="1"/><text x="65.5918%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.3418%" y="645" width="0.0795%" height="15" fill="rgb(251,47,47)" fg:x="822" fg:w="1"/><text x="65.5918%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3418%" y="629" width="0.0795%" height="15" fill="rgb(205,166,47)" fg:x="822" fg:w="1"/><text x="65.5918%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.3418%" y="613" width="0.0795%" height="15" fill="rgb(231,148,8)" fg:x="822" fg:w="1"/><text x="65.5918%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (824 samples, 65.50%)</title><rect x="0.0000%" y="789" width="65.5008%" height="15" fill="rgb(244,185,19)" fg:x="0" fg:w="824"/><text x="0.2500%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (824 samples, 65.50%)</title><rect x="0.0000%" y="773" width="65.5008%" height="15" fill="rgb(224,201,45)" fg:x="0" fg:w="824"/><text x="0.2500%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (824 samples, 65.50%)</title><rect x="0.0000%" y="757" width="65.5008%" height="15" fill="rgb(240,77,39)" fg:x="0" fg:w="824"/><text x="0.2500%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (316 samples, 25.12%)</title><rect x="40.3816%" y="741" width="25.1192%" height="15" fill="rgb(248,211,29)" fg:x="508" fg:w="316"/><text x="40.6316%" y="751.50">engine::session::Session::evaluate_and_p..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="65.4213%" y="725" width="0.0795%" height="15" fill="rgb(232,214,46)" fg:x="823" fg:w="1"/><text x="65.6713%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="65.4213%" y="709" width="0.0795%" height="15" fill="rgb(213,99,54)" fg:x="823" fg:w="1"/><text x="65.6713%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="65.4213%" y="693" width="0.0795%" height="15" fill="rgb(240,19,46)" fg:x="823" fg:w="1"/><text x="65.6713%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.4213%" y="677" width="0.0795%" height="15" fill="rgb(243,89,10)" fg:x="823" fg:w="1"/><text x="65.6713%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.4213%" y="661" width="0.0795%" height="15" fill="rgb(249,28,32)" fg:x="823" fg:w="1"/><text x="65.6713%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="65.4213%" y="645" width="0.0795%" height="15" fill="rgb(253,30,9)" fg:x="823" fg:w="1"/><text x="65.6713%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.4213%" y="629" width="0.0795%" height="15" fill="rgb(217,2,26)" fg:x="823" fg:w="1"/><text x="65.6713%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.4213%" y="613" width="0.0795%" height="15" fill="rgb(220,28,10)" fg:x="823" fg:w="1"/><text x="65.6713%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.4213%" y="597" width="0.0795%" height="15" fill="rgb(228,167,49)" fg:x="823" fg:w="1"/><text x="65.6713%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="65.4213%" y="581" width="0.0795%" height="15" fill="rgb(238,212,3)" fg:x="823" fg:w="1"/><text x="65.6713%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.4213%" y="565" width="0.0795%" height="15" fill="rgb(229,134,44)" fg:x="823" fg:w="1"/><text x="65.6713%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.4213%" y="549" width="0.0795%" height="15" fill="rgb(208,71,4)" fg:x="823" fg:w="1"/><text x="65.6713%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.4213%" y="533" width="0.0795%" height="15" fill="rgb(221,205,45)" fg:x="823" fg:w="1"/><text x="65.6713%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.4213%" y="517" width="0.0795%" height="15" fill="rgb(215,132,38)" fg:x="823" fg:w="1"/><text x="65.6713%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.4213%" y="501" width="0.0795%" height="15" fill="rgb(227,158,6)" fg:x="823" fg:w="1"/><text x="65.6713%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="65.4213%" y="485" width="0.0795%" height="15" fill="rgb(250,10,38)" fg:x="823" fg:w="1"/><text x="65.6713%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="65.4213%" y="469" width="0.0795%" height="15" fill="rgb(225,171,40)" fg:x="823" fg:w="1"/><text x="65.6713%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="65.4213%" y="453" width="0.0795%" height="15" fill="rgb(238,17,43)" fg:x="823" fg:w="1"/><text x="65.6713%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="65.4213%" y="437" width="0.0795%" height="15" fill="rgb(208,145,4)" fg:x="823" fg:w="1"/><text x="65.6713%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.4213%" y="421" width="0.0795%" height="15" fill="rgb(232,82,7)" fg:x="823" fg:w="1"/><text x="65.6713%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.7393%" y="629" width="0.1590%" height="15" fill="rgb(205,166,38)" fg:x="827" fg:w="2"/><text x="65.9893%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.8983%" y="629" width="0.1590%" height="15" fill="rgb(240,228,4)" fg:x="829" fg:w="2"/><text x="66.1483%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.8983%" y="613" width="0.1590%" height="15" fill="rgb(233,121,40)" fg:x="829" fg:w="2"/><text x="66.1483%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.0572%" y="613" width="0.0795%" height="15" fill="rgb(243,84,30)" fg:x="831" fg:w="1"/><text x="66.3072%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.0572%" y="597" width="0.0795%" height="15" fill="rgb(235,81,48)" fg:x="831" fg:w="1"/><text x="66.3072%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1367%" y="597" width="0.0795%" height="15" fill="rgb(218,137,0)" fg:x="832" fg:w="1"/><text x="66.3867%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.79%)</title><rect x="65.5008%" y="741" width="0.7949%" height="15" fill="rgb(223,151,48)" fg:x="824" fg:w="10"/><text x="65.7508%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (9 samples, 0.72%)</title><rect x="65.5803%" y="725" width="0.7154%" height="15" fill="rgb(247,30,19)" fg:x="825" fg:w="9"/><text x="65.8303%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="65.5803%" y="709" width="0.7154%" height="15" fill="rgb(205,129,29)" fg:x="825" fg:w="9"/><text x="65.8303%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (9 samples, 0.72%)</title><rect x="65.5803%" y="693" width="0.7154%" height="15" fill="rgb(222,29,2)" fg:x="825" fg:w="9"/><text x="65.8303%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="65.5803%" y="677" width="0.7154%" height="15" fill="rgb(232,145,33)" fg:x="825" fg:w="9"/><text x="65.8303%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="65.5803%" y="661" width="0.7154%" height="15" fill="rgb(217,30,31)" fg:x="825" fg:w="9"/><text x="65.8303%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="65.7393%" y="645" width="0.5564%" height="15" fill="rgb(243,22,52)" fg:x="827" fg:w="7"/><text x="65.9893%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="66.0572%" y="629" width="0.2385%" height="15" fill="rgb(254,228,14)" fg:x="831" fg:w="3"/><text x="66.3072%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.1367%" y="613" width="0.1590%" height="15" fill="rgb(231,45,50)" fg:x="832" fg:w="2"/><text x="66.3867%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.2162%" y="597" width="0.0795%" height="15" fill="rgb(248,125,3)" fg:x="833" fg:w="1"/><text x="66.4662%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.2162%" y="581" width="0.0795%" height="15" fill="rgb(213,76,9)" fg:x="833" fg:w="1"/><text x="66.4662%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.2162%" y="565" width="0.0795%" height="15" fill="rgb(238,108,21)" fg:x="833" fg:w="1"/><text x="66.4662%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.2162%" y="549" width="0.0795%" height="15" fill="rgb(229,214,19)" fg:x="833" fg:w="1"/><text x="66.4662%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.4547%" y="661" width="0.0795%" height="15" fill="rgb(252,201,5)" fg:x="836" fg:w="1"/><text x="66.7047%" y="671.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="66.5342%" y="661" width="0.0795%" height="15" fill="rgb(233,165,49)" fg:x="837" fg:w="1"/><text x="66.7842%" y="671.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="66.5342%" y="645" width="0.0795%" height="15" fill="rgb(208,165,19)" fg:x="837" fg:w="1"/><text x="66.7842%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.6137%" y="645" width="0.0795%" height="15" fill="rgb(216,220,31)" fg:x="838" fg:w="1"/><text x="66.8637%" y="655.50"></text></g><g><title>libloading::safe::Library::new (2 samples, 0.16%)</title><rect x="66.6137%" y="661" width="0.1590%" height="15" fill="rgb(214,8,31)" fg:x="838" fg:w="2"/><text x="66.8637%" y="671.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="66.6932%" y="645" width="0.0795%" height="15" fill="rgb(220,32,32)" fg:x="839" fg:w="1"/><text x="66.9432%" y="655.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="66.6932%" y="629" width="0.0795%" height="15" fill="rgb(237,172,34)" fg:x="839" fg:w="1"/><text x="66.9432%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.6932%" y="613" width="0.0795%" height="15" fill="rgb(240,209,5)" fg:x="839" fg:w="1"/><text x="66.9432%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.56%)</title><rect x="66.3752%" y="693" width="0.5564%" height="15" fill="rgb(221,219,1)" fg:x="835" fg:w="7"/><text x="66.6252%" y="703.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.56%)</title><rect x="66.3752%" y="677" width="0.5564%" height="15" fill="rgb(237,90,36)" fg:x="835" fg:w="7"/><text x="66.6252%" y="687.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (2 samples, 0.16%)</title><rect x="66.7727%" y="661" width="0.1590%" height="15" fill="rgb(245,14,51)" fg:x="840" fg:w="2"/><text x="67.0227%" y="671.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.16%)</title><rect x="66.7727%" y="645" width="0.1590%" height="15" fill="rgb(211,71,49)" fg:x="840" fg:w="2"/><text x="67.0227%" y="655.50"></text></g><g><title>engine::session::Session::initialize (9 samples, 0.72%)</title><rect x="66.2957%" y="709" width="0.7154%" height="15" fill="rgb(230,223,9)" fg:x="834" fg:w="9"/><text x="66.5457%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="66.9316%" y="693" width="0.0795%" height="15" fill="rgb(212,33,31)" fg:x="842" fg:w="1"/><text x="67.1816%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="66.9316%" y="677" width="0.0795%" height="15" fill="rgb(218,141,5)" fg:x="842" fg:w="1"/><text x="67.1816%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.9316%" y="661" width="0.0795%" height="15" fill="rgb(239,194,8)" fg:x="842" fg:w="1"/><text x="67.1816%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.9316%" y="645" width="0.0795%" height="15" fill="rgb(225,119,29)" fg:x="842" fg:w="1"/><text x="67.1816%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.9316%" y="629" width="0.0795%" height="15" fill="rgb(233,32,3)" fg:x="842" fg:w="1"/><text x="67.1816%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.9316%" y="613" width="0.0795%" height="15" fill="rgb(248,126,40)" fg:x="842" fg:w="1"/><text x="67.1816%" y="623.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (10 samples, 0.79%)</title><rect x="66.2957%" y="741" width="0.7949%" height="15" fill="rgb(213,102,53)" fg:x="834" fg:w="10"/><text x="66.5457%" y="751.50"></text></g><g><title>engine::session::Session::new (10 samples, 0.79%)</title><rect x="66.2957%" y="725" width="0.7949%" height="15" fill="rgb(212,69,15)" fg:x="834" fg:w="10"/><text x="66.5457%" y="735.50"></text></g><g><title>kernel::plugins::SessionPlugins::hooks (1 samples, 0.08%)</title><rect x="67.0111%" y="709" width="0.0795%" height="15" fill="rgb(253,39,34)" fg:x="843" fg:w="1"/><text x="67.2611%" y="719.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.0906%" y="677" width="0.0795%" height="15" fill="rgb(205,189,54)" fg:x="844" fg:w="1"/><text x="67.3406%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="67.0906%" y="661" width="0.0795%" height="15" fill="rgb(234,229,45)" fg:x="844" fg:w="1"/><text x="67.3406%" y="671.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="67.0906%" y="645" width="0.0795%" height="15" fill="rgb(243,79,48)" fg:x="844" fg:w="1"/><text x="67.3406%" y="655.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="67.0906%" y="629" width="0.0795%" height="15" fill="rgb(206,71,50)" fg:x="844" fg:w="1"/><text x="67.3406%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="67.2496%" y="629" width="0.2385%" height="15" fill="rgb(209,32,17)" fg:x="846" fg:w="3"/><text x="67.4996%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="67.2496%" y="613" width="0.2385%" height="15" fill="rgb(219,229,6)" fg:x="846" fg:w="3"/><text x="67.4996%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.4086%" y="597" width="0.0795%" height="15" fill="rgb(226,25,27)" fg:x="848" fg:w="1"/><text x="67.6586%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="67.4086%" y="581" width="0.0795%" height="15" fill="rgb(218,185,23)" fg:x="848" fg:w="1"/><text x="67.6586%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="67.5676%" y="613" width="0.1590%" height="15" fill="rgb(242,123,5)" fg:x="850" fg:w="2"/><text x="67.8176%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="67.5676%" y="597" width="0.1590%" height="15" fill="rgb(215,53,19)" fg:x="850" fg:w="2"/><text x="67.8176%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="67.5676%" y="581" width="0.1590%" height="15" fill="rgb(233,20,30)" fg:x="850" fg:w="2"/><text x="67.8176%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="67.5676%" y="565" width="0.1590%" height="15" fill="rgb(209,67,20)" fg:x="850" fg:w="2"/><text x="67.8176%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.6471%" y="549" width="0.0795%" height="15" fill="rgb(227,181,50)" fg:x="851" fg:w="1"/><text x="67.8971%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.6471%" y="533" width="0.0795%" height="15" fill="rgb(252,75,38)" fg:x="851" fg:w="1"/><text x="67.8971%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="67.6471%" y="517" width="0.0795%" height="15" fill="rgb(235,9,33)" fg:x="851" fg:w="1"/><text x="67.8971%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.7266%" y="597" width="0.0795%" height="15" fill="rgb(208,87,30)" fg:x="852" fg:w="1"/><text x="67.9766%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="67.8060%" y="565" width="0.1590%" height="15" fill="rgb(215,199,39)" fg:x="853" fg:w="2"/><text x="68.0560%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="67.8060%" y="549" width="0.1590%" height="15" fill="rgb(246,208,12)" fg:x="853" fg:w="2"/><text x="68.0560%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.8855%" y="533" width="0.0795%" height="15" fill="rgb(206,195,10)" fg:x="854" fg:w="1"/><text x="68.1355%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="67.8060%" y="597" width="0.2385%" height="15" fill="rgb(244,1,30)" fg:x="853" fg:w="3"/><text x="68.0560%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="67.8060%" y="581" width="0.2385%" height="15" fill="rgb(230,83,5)" fg:x="853" fg:w="3"/><text x="68.0560%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.9650%" y="565" width="0.0795%" height="15" fill="rgb(239,62,17)" fg:x="855" fg:w="1"/><text x="68.2150%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.0445%" y="597" width="0.0795%" height="15" fill="rgb(252,193,41)" fg:x="856" fg:w="1"/><text x="68.2945%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="68.1240%" y="581" width="0.0795%" height="15" fill="rgb(216,142,19)" fg:x="857" fg:w="1"/><text x="68.3740%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.2035%" y="581" width="0.0795%" height="15" fill="rgb(240,81,38)" fg:x="858" fg:w="1"/><text x="68.4535%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.2035%" y="565" width="0.0795%" height="15" fill="rgb(240,109,40)" fg:x="858" fg:w="1"/><text x="68.4535%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.2035%" y="549" width="0.0795%" height="15" fill="rgb(230,123,10)" fg:x="858" fg:w="1"/><text x="68.4535%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="68.2035%" y="533" width="0.0795%" height="15" fill="rgb(253,42,32)" fg:x="858" fg:w="1"/><text x="68.4535%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.2830%" y="549" width="0.0795%" height="15" fill="rgb(218,154,8)" fg:x="859" fg:w="1"/><text x="68.5330%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.2830%" y="533" width="0.0795%" height="15" fill="rgb(216,197,10)" fg:x="859" fg:w="1"/><text x="68.5330%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="68.3625%" y="533" width="0.0795%" height="15" fill="rgb(223,107,12)" fg:x="860" fg:w="1"/><text x="68.6125%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.3625%" y="517" width="0.0795%" height="15" fill="rgb(241,174,42)" fg:x="860" fg:w="1"/><text x="68.6125%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.3625%" y="501" width="0.0795%" height="15" fill="rgb(231,78,20)" fg:x="860" fg:w="1"/><text x="68.6125%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.3625%" y="485" width="0.0795%" height="15" fill="rgb(230,208,49)" fg:x="860" fg:w="1"/><text x="68.6125%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.4420%" y="533" width="0.0795%" height="15" fill="rgb(238,11,34)" fg:x="861" fg:w="1"/><text x="68.6920%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="68.1240%" y="597" width="0.4769%" height="15" fill="rgb(210,130,26)" fg:x="857" fg:w="6"/><text x="68.3740%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="68.2830%" y="581" width="0.3180%" height="15" fill="rgb(242,131,11)" fg:x="859" fg:w="4"/><text x="68.5330%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="68.2830%" y="565" width="0.3180%" height="15" fill="rgb(237,38,28)" fg:x="859" fg:w="4"/><text x="68.5330%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="68.3625%" y="549" width="0.2385%" height="15" fill="rgb(244,180,43)" fg:x="860" fg:w="3"/><text x="68.6125%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.5215%" y="533" width="0.0795%" height="15" fill="rgb(214,171,19)" fg:x="862" fg:w="1"/><text x="68.7715%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="67.7266%" y="613" width="0.9539%" height="15" fill="rgb(252,101,45)" fg:x="852" fg:w="12"/><text x="67.9766%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.6010%" y="597" width="0.0795%" height="15" fill="rgb(211,96,33)" fg:x="863" fg:w="1"/><text x="68.8510%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.6010%" y="581" width="0.0795%" height="15" fill="rgb(207,80,25)" fg:x="863" fg:w="1"/><text x="68.8510%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.6010%" y="565" width="0.0795%" height="15" fill="rgb(225,15,35)" fg:x="863" fg:w="1"/><text x="68.8510%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.83%)</title><rect x="67.2496%" y="645" width="1.8283%" height="15" fill="rgb(214,93,43)" fg:x="846" fg:w="23"/><text x="67.4996%" y="655.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.59%)</title><rect x="67.4881%" y="629" width="1.5898%" height="15" fill="rgb(248,42,37)" fg:x="849" fg:w="20"/><text x="67.7381%" y="639.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="68.6804%" y="613" width="0.3975%" height="15" fill="rgb(217,135,32)" fg:x="864" fg:w="5"/><text x="68.9304%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="68.9189%" y="597" width="0.1590%" height="15" fill="rgb(216,74,28)" fg:x="867" fg:w="2"/><text x="69.1689%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="68.9189%" y="581" width="0.1590%" height="15" fill="rgb(247,108,16)" fg:x="867" fg:w="2"/><text x="69.1689%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="69.2369%" y="597" width="0.1590%" height="15" fill="rgb(205,219,30)" fg:x="871" fg:w="2"/><text x="69.4869%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.3164%" y="581" width="0.0795%" height="15" fill="rgb(241,122,9)" fg:x="872" fg:w="1"/><text x="69.5664%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="69.0779%" y="645" width="0.4769%" height="15" fill="rgb(216,148,50)" fg:x="869" fg:w="6"/><text x="69.3279%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="69.0779%" y="629" width="0.4769%" height="15" fill="rgb(226,154,2)" fg:x="869" fg:w="6"/><text x="69.3279%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="69.0779%" y="613" width="0.4769%" height="15" fill="rgb(220,128,1)" fg:x="869" fg:w="6"/><text x="69.3279%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.3959%" y="597" width="0.1590%" height="15" fill="rgb(245,185,29)" fg:x="873" fg:w="2"/><text x="69.6459%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.3959%" y="581" width="0.1590%" height="15" fill="rgb(243,161,2)" fg:x="873" fg:w="2"/><text x="69.6459%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.4754%" y="565" width="0.0795%" height="15" fill="rgb(249,215,17)" fg:x="874" fg:w="1"/><text x="69.7254%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.4754%" y="549" width="0.0795%" height="15" fill="rgb(237,67,11)" fg:x="874" fg:w="1"/><text x="69.7254%" y="559.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="69.5548%" y="629" width="0.0795%" height="15" fill="rgb(239,17,24)" fg:x="875" fg:w="1"/><text x="69.8048%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5548%" y="613" width="0.0795%" height="15" fill="rgb(215,97,29)" fg:x="875" fg:w="1"/><text x="69.8048%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="69.7138%" y="597" width="0.2385%" height="15" fill="rgb(253,228,42)" fg:x="877" fg:w="3"/><text x="69.9638%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8728%" y="581" width="0.0795%" height="15" fill="rgb(240,85,2)" fg:x="879" fg:w="1"/><text x="70.1228%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="69.9523%" y="597" width="0.0795%" height="15" fill="rgb(214,155,4)" fg:x="880" fg:w="1"/><text x="70.2023%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="69.9523%" y="581" width="0.0795%" height="15" fill="rgb(247,120,22)" fg:x="880" fg:w="1"/><text x="70.2023%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9523%" y="565" width="0.0795%" height="15" fill="rgb(211,208,6)" fg:x="880" fg:w="1"/><text x="70.2023%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.0318%" y="549" width="0.0795%" height="15" fill="rgb(235,99,41)" fg:x="881" fg:w="1"/><text x="70.2818%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="70.1113%" y="549" width="0.0795%" height="15" fill="rgb(223,28,8)" fg:x="882" fg:w="1"/><text x="70.3613%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="70.1113%" y="533" width="0.0795%" height="15" fill="rgb(212,71,20)" fg:x="882" fg:w="1"/><text x="70.3613%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="70.1113%" y="517" width="0.0795%" height="15" fill="rgb(206,85,3)" fg:x="882" fg:w="1"/><text x="70.3613%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.1113%" y="501" width="0.0795%" height="15" fill="rgb(244,180,11)" fg:x="882" fg:w="1"/><text x="70.3613%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.1113%" y="485" width="0.0795%" height="15" fill="rgb(223,16,21)" fg:x="882" fg:w="1"/><text x="70.3613%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.1113%" y="469" width="0.0795%" height="15" fill="rgb(238,85,42)" fg:x="882" fg:w="1"/><text x="70.3613%" y="479.50"></text></g><g><title>engine::session::Session::flush (42 samples, 3.34%)</title><rect x="67.0906%" y="725" width="3.3386%" height="15" fill="rgb(205,85,8)" fg:x="844" fg:w="42"/><text x="67.3406%" y="735.50">eng..</text></g><g><title>engine::session::state::State::close (42 samples, 3.34%)</title><rect x="67.0906%" y="709" width="3.3386%" height="15" fill="rgb(217,190,15)" fg:x="844" fg:w="42"/><text x="67.3406%" y="719.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (42 samples, 3.34%)</title><rect x="67.0906%" y="693" width="3.3386%" height="15" fill="rgb(243,192,23)" fg:x="844" fg:w="42"/><text x="67.3406%" y="703.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (41 samples, 3.26%)</title><rect x="67.1701%" y="677" width="3.2591%" height="15" fill="rgb(223,220,37)" fg:x="845" fg:w="41"/><text x="67.4201%" y="687.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (41 samples, 3.26%)</title><rect x="67.1701%" y="661" width="3.2591%" height="15" fill="rgb(208,41,17)" fg:x="845" fg:w="41"/><text x="67.4201%" y="671.50">eng..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.87%)</title><rect x="69.5548%" y="645" width="0.8744%" height="15" fill="rgb(224,188,7)" fg:x="875" fg:w="11"/><text x="69.8048%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.79%)</title><rect x="69.6343%" y="629" width="0.7949%" height="15" fill="rgb(236,16,50)" fg:x="876" fg:w="10"/><text x="69.8843%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.79%)</title><rect x="69.6343%" y="613" width="0.7949%" height="15" fill="rgb(238,6,24)" fg:x="876" fg:w="10"/><text x="69.8843%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="70.0318%" y="597" width="0.3975%" height="15" fill="rgb(253,67,45)" fg:x="881" fg:w="5"/><text x="70.2818%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="70.0318%" y="581" width="0.3975%" height="15" fill="rgb(210,89,32)" fg:x="881" fg:w="5"/><text x="70.2818%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="70.0318%" y="565" width="0.3975%" height="15" fill="rgb(208,89,9)" fg:x="881" fg:w="5"/><text x="70.2818%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="70.1908%" y="549" width="0.2385%" height="15" fill="rgb(222,180,44)" fg:x="883" fg:w="3"/><text x="70.4408%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="70.1908%" y="533" width="0.2385%" height="15" fill="rgb(250,181,46)" fg:x="883" fg:w="3"/><text x="70.4408%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="70.2703%" y="517" width="0.1590%" height="15" fill="rgb(210,190,26)" fg:x="884" fg:w="2"/><text x="70.5203%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="70.2703%" y="501" width="0.1590%" height="15" fill="rgb(253,49,13)" fg:x="884" fg:w="2"/><text x="70.5203%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="70.2703%" y="485" width="0.1590%" height="15" fill="rgb(240,184,42)" fg:x="884" fg:w="2"/><text x="70.5203%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="70.2703%" y="469" width="0.1590%" height="15" fill="rgb(246,59,37)" fg:x="884" fg:w="2"/><text x="70.5203%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="70.3498%" y="453" width="0.0795%" height="15" fill="rgb(207,134,54)" fg:x="885" fg:w="1"/><text x="70.5998%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.4293%" y="693" width="0.0795%" height="15" fill="rgb(250,122,24)" fg:x="886" fg:w="1"/><text x="70.6793%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.4293%" y="677" width="0.0795%" height="15" fill="rgb(239,206,3)" fg:x="886" fg:w="1"/><text x="70.6793%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.4293%" y="661" width="0.0795%" height="15" fill="rgb(253,220,32)" fg:x="886" fg:w="1"/><text x="70.6793%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4293%" y="645" width="0.0795%" height="15" fill="rgb(209,217,48)" fg:x="886" fg:w="1"/><text x="70.6793%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4293%" y="629" width="0.0795%" height="15" fill="rgb(242,91,39)" fg:x="886" fg:w="1"/><text x="70.6793%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4293%" y="613" width="0.0795%" height="15" fill="rgb(228,4,13)" fg:x="886" fg:w="1"/><text x="70.6793%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="70.5087%" y="677" width="0.1590%" height="15" fill="rgb(223,133,4)" fg:x="887" fg:w="2"/><text x="70.7587%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.5882%" y="661" width="0.0795%" height="15" fill="rgb(215,105,30)" fg:x="888" fg:w="1"/><text x="70.8382%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.5882%" y="645" width="0.0795%" height="15" fill="rgb(230,9,4)" fg:x="888" fg:w="1"/><text x="70.8382%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.5882%" y="629" width="0.0795%" height="15" fill="rgb(248,15,2)" fg:x="888" fg:w="1"/><text x="70.8382%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="70.5087%" y="693" width="0.2385%" height="15" fill="rgb(208,210,22)" fg:x="887" fg:w="3"/><text x="70.7587%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="70.6677%" y="677" width="0.0795%" height="15" fill="rgb(208,112,41)" fg:x="889" fg:w="1"/><text x="70.9177%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="70.6677%" y="661" width="0.0795%" height="15" fill="rgb(232,83,14)" fg:x="889" fg:w="1"/><text x="70.9177%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.6677%" y="645" width="0.0795%" height="15" fill="rgb(229,65,11)" fg:x="889" fg:w="1"/><text x="70.9177%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.6677%" y="629" width="0.0795%" height="15" fill="rgb(228,126,24)" fg:x="889" fg:w="1"/><text x="70.9177%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6677%" y="613" width="0.0795%" height="15" fill="rgb(218,66,33)" fg:x="889" fg:w="1"/><text x="70.9177%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.79%)</title><rect x="70.4293%" y="709" width="0.7949%" height="15" fill="rgb(251,49,52)" fg:x="886" fg:w="10"/><text x="70.6793%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="70.7472%" y="693" width="0.4769%" height="15" fill="rgb(219,46,37)" fg:x="890" fg:w="6"/><text x="70.9972%" y="703.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="70.7472%" y="677" width="0.4769%" height="15" fill="rgb(213,53,49)" fg:x="890" fg:w="6"/><text x="70.9972%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="70.7472%" y="661" width="0.4769%" height="15" fill="rgb(214,134,1)" fg:x="890" fg:w="6"/><text x="70.9972%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="70.7472%" y="645" width="0.4769%" height="15" fill="rgb(208,139,43)" fg:x="890" fg:w="6"/><text x="70.9972%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="70.7472%" y="629" width="0.4769%" height="15" fill="rgb(231,105,35)" fg:x="890" fg:w="6"/><text x="70.9972%" y="639.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="70.7472%" y="613" width="0.4769%" height="15" fill="rgb(247,189,9)" fg:x="890" fg:w="6"/><text x="70.9972%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="71.2242%" y="693" width="0.0795%" height="15" fill="rgb(252,48,51)" fg:x="896" fg:w="1"/><text x="71.4742%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="71.2242%" y="677" width="0.0795%" height="15" fill="rgb(209,121,1)" fg:x="896" fg:w="1"/><text x="71.4742%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.2242%" y="661" width="0.0795%" height="15" fill="rgb(231,40,26)" fg:x="896" fg:w="1"/><text x="71.4742%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="71.2242%" y="645" width="0.0795%" height="15" fill="rgb(251,8,13)" fg:x="896" fg:w="1"/><text x="71.4742%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.2242%" y="629" width="0.0795%" height="15" fill="rgb(231,110,2)" fg:x="896" fg:w="1"/><text x="71.4742%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="71.3037%" y="693" width="0.0795%" height="15" fill="rgb(216,153,22)" fg:x="897" fg:w="1"/><text x="71.5537%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.3037%" y="677" width="0.0795%" height="15" fill="rgb(249,116,49)" fg:x="897" fg:w="1"/><text x="71.5537%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="71.3831%" y="693" width="0.0795%" height="15" fill="rgb(230,89,2)" fg:x="898" fg:w="1"/><text x="71.6331%" y="703.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="71.3831%" y="677" width="0.0795%" height="15" fill="rgb(231,125,23)" fg:x="898" fg:w="1"/><text x="71.6331%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.3831%" y="661" width="0.0795%" height="15" fill="rgb(212,217,18)" fg:x="898" fg:w="1"/><text x="71.6331%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="71.3831%" y="645" width="0.0795%" height="15" fill="rgb(210,21,33)" fg:x="898" fg:w="1"/><text x="71.6331%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.3831%" y="629" width="0.0795%" height="15" fill="rgb(241,97,9)" fg:x="898" fg:w="1"/><text x="71.6331%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3831%" y="613" width="0.0795%" height="15" fill="rgb(221,35,31)" fg:x="898" fg:w="1"/><text x="71.6331%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3831%" y="597" width="0.0795%" height="15" fill="rgb(251,23,23)" fg:x="898" fg:w="1"/><text x="71.6331%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3831%" y="581" width="0.0795%" height="15" fill="rgb(227,165,2)" fg:x="898" fg:w="1"/><text x="71.6331%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.4626%" y="597" width="0.0795%" height="15" fill="rgb(242,24,2)" fg:x="899" fg:w="1"/><text x="71.7126%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.4626%" y="581" width="0.0795%" height="15" fill="rgb(242,138,51)" fg:x="899" fg:w="1"/><text x="71.7126%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4626%" y="565" width="0.0795%" height="15" fill="rgb(220,219,5)" fg:x="899" fg:w="1"/><text x="71.7126%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="71.4626%" y="645" width="0.1590%" height="15" fill="rgb(247,53,29)" fg:x="899" fg:w="2"/><text x="71.7126%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="71.4626%" y="629" width="0.1590%" height="15" fill="rgb(233,43,39)" fg:x="899" fg:w="2"/><text x="71.7126%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="71.4626%" y="613" width="0.1590%" height="15" fill="rgb(230,128,54)" fg:x="899" fg:w="2"/><text x="71.7126%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.5421%" y="597" width="0.0795%" height="15" fill="rgb(218,20,12)" fg:x="900" fg:w="1"/><text x="71.7921%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5421%" y="581" width="0.0795%" height="15" fill="rgb(206,51,14)" fg:x="900" fg:w="1"/><text x="71.7921%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.5421%" y="565" width="0.0795%" height="15" fill="rgb(223,16,35)" fg:x="900" fg:w="1"/><text x="71.7921%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5421%" y="549" width="0.0795%" height="15" fill="rgb(226,165,37)" fg:x="900" fg:w="1"/><text x="71.7921%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.5421%" y="533" width="0.0795%" height="15" fill="rgb(240,26,21)" fg:x="900" fg:w="1"/><text x="71.7921%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5421%" y="517" width="0.0795%" height="15" fill="rgb(240,72,46)" fg:x="900" fg:w="1"/><text x="71.7921%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.5421%" y="501" width="0.0795%" height="15" fill="rgb(211,33,41)" fg:x="900" fg:w="1"/><text x="71.7921%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.5421%" y="485" width="0.0795%" height="15" fill="rgb(224,157,46)" fg:x="900" fg:w="1"/><text x="71.7921%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.7011%" y="597" width="0.0795%" height="15" fill="rgb(223,59,19)" fg:x="902" fg:w="1"/><text x="71.9511%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.7011%" y="581" width="0.0795%" height="15" fill="rgb(239,187,1)" fg:x="902" fg:w="1"/><text x="71.9511%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.7011%" y="565" width="0.0795%" height="15" fill="rgb(226,95,9)" fg:x="902" fg:w="1"/><text x="71.9511%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.7011%" y="549" width="0.0795%" height="15" fill="rgb(234,61,54)" fg:x="902" fg:w="1"/><text x="71.9511%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7011%" y="533" width="0.0795%" height="15" fill="rgb(205,209,47)" fg:x="902" fg:w="1"/><text x="71.9511%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (18 samples, 1.43%)</title><rect x="70.4293%" y="725" width="1.4308%" height="15" fill="rgb(228,7,43)" fg:x="886" fg:w="18"/><text x="70.6793%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.64%)</title><rect x="71.2242%" y="709" width="0.6359%" height="15" fill="rgb(240,217,52)" fg:x="896" fg:w="8"/><text x="71.4742%" y="719.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="71.4626%" y="693" width="0.3975%" height="15" fill="rgb(211,178,21)" fg:x="899" fg:w="5"/><text x="71.7126%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="71.4626%" y="677" width="0.3975%" height="15" fill="rgb(205,25,34)" fg:x="899" fg:w="5"/><text x="71.7126%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="71.4626%" y="661" width="0.3975%" height="15" fill="rgb(209,57,11)" fg:x="899" fg:w="5"/><text x="71.7126%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="71.6216%" y="645" width="0.2385%" height="15" fill="rgb(221,99,2)" fg:x="901" fg:w="3"/><text x="71.8716%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="71.6216%" y="629" width="0.2385%" height="15" fill="rgb(232,79,22)" fg:x="901" fg:w="3"/><text x="71.8716%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.6216%" y="613" width="0.2385%" height="15" fill="rgb(221,145,32)" fg:x="901" fg:w="3"/><text x="71.8716%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7806%" y="597" width="0.0795%" height="15" fill="rgb(236,133,36)" fg:x="903" fg:w="1"/><text x="72.0306%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7806%" y="581" width="0.0795%" height="15" fill="rgb(208,224,44)" fg:x="903" fg:w="1"/><text x="72.0306%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7806%" y="565" width="0.0795%" height="15" fill="rgb(235,143,15)" fg:x="903" fg:w="1"/><text x="72.0306%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7806%" y="549" width="0.0795%" height="15" fill="rgb(249,83,27)" fg:x="903" fg:w="1"/><text x="72.0306%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.7806%" y="533" width="0.0795%" height="15" fill="rgb(238,226,19)" fg:x="903" fg:w="1"/><text x="72.0306%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7806%" y="517" width="0.0795%" height="15" fill="rgb(226,206,27)" fg:x="903" fg:w="1"/><text x="72.0306%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7806%" y="501" width="0.0795%" height="15" fill="rgb(251,182,9)" fg:x="903" fg:w="1"/><text x="72.0306%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7806%" y="485" width="0.0795%" height="15" fill="rgb(212,140,41)" fg:x="903" fg:w="1"/><text x="72.0306%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="71.8601%" y="693" width="0.0795%" height="15" fill="rgb(220,106,18)" fg:x="904" fg:w="1"/><text x="72.1101%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="71.8601%" y="677" width="0.0795%" height="15" fill="rgb(252,46,41)" fg:x="904" fg:w="1"/><text x="72.1101%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.8601%" y="661" width="0.0795%" height="15" fill="rgb(209,222,15)" fg:x="904" fg:w="1"/><text x="72.1101%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.0191%" y="645" width="0.0795%" height="15" fill="rgb(233,83,50)" fg:x="906" fg:w="1"/><text x="72.2691%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.0986%" y="517" width="0.0795%" height="15" fill="rgb(205,212,0)" fg:x="907" fg:w="1"/><text x="72.3486%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="71.9396%" y="693" width="0.3180%" height="15" fill="rgb(235,117,51)" fg:x="905" fg:w="4"/><text x="72.1896%" y="703.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="71.9396%" y="677" width="0.3180%" height="15" fill="rgb(233,133,48)" fg:x="905" fg:w="4"/><text x="72.1896%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="71.9396%" y="661" width="0.3180%" height="15" fill="rgb(219,3,2)" fg:x="905" fg:w="4"/><text x="72.1896%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.0986%" y="645" width="0.1590%" height="15" fill="rgb(225,80,52)" fg:x="907" fg:w="2"/><text x="72.3486%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.0986%" y="629" width="0.1590%" height="15" fill="rgb(235,195,42)" fg:x="907" fg:w="2"/><text x="72.3486%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.0986%" y="613" width="0.1590%" height="15" fill="rgb(240,207,46)" fg:x="907" fg:w="2"/><text x="72.3486%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.0986%" y="597" width="0.1590%" height="15" fill="rgb(236,112,50)" fg:x="907" fg:w="2"/><text x="72.3486%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="72.0986%" y="581" width="0.1590%" height="15" fill="rgb(249,151,27)" fg:x="907" fg:w="2"/><text x="72.3486%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.0986%" y="565" width="0.1590%" height="15" fill="rgb(253,223,52)" fg:x="907" fg:w="2"/><text x="72.3486%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.0986%" y="549" width="0.1590%" height="15" fill="rgb(215,55,33)" fg:x="907" fg:w="2"/><text x="72.3486%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.0986%" y="533" width="0.1590%" height="15" fill="rgb(207,24,17)" fg:x="907" fg:w="2"/><text x="72.3486%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.1781%" y="517" width="0.0795%" height="15" fill="rgb(218,169,32)" fg:x="908" fg:w="1"/><text x="72.4281%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1781%" y="501" width="0.0795%" height="15" fill="rgb(209,210,6)" fg:x="908" fg:w="1"/><text x="72.4281%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2576%" y="661" width="0.0795%" height="15" fill="rgb(225,208,8)" fg:x="909" fg:w="1"/><text x="72.5076%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.2576%" y="645" width="0.0795%" height="15" fill="rgb(238,14,32)" fg:x="909" fg:w="1"/><text x="72.5076%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.2576%" y="629" width="0.0795%" height="15" fill="rgb(211,137,3)" fg:x="909" fg:w="1"/><text x="72.5076%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.2576%" y="613" width="0.0795%" height="15" fill="rgb(207,171,19)" fg:x="909" fg:w="1"/><text x="72.5076%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.2576%" y="597" width="0.0795%" height="15" fill="rgb(250,80,8)" fg:x="909" fg:w="1"/><text x="72.5076%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.2576%" y="581" width="0.0795%" height="15" fill="rgb(209,103,53)" fg:x="909" fg:w="1"/><text x="72.5076%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.2576%" y="565" width="0.0795%" height="15" fill="rgb(233,198,10)" fg:x="909" fg:w="1"/><text x="72.5076%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.2576%" y="549" width="0.0795%" height="15" fill="rgb(236,125,25)" fg:x="909" fg:w="1"/><text x="72.5076%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.2576%" y="533" width="0.0795%" height="15" fill="rgb(254,182,48)" fg:x="909" fg:w="1"/><text x="72.5076%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.2576%" y="517" width="0.0795%" height="15" fill="rgb(216,108,44)" fg:x="909" fg:w="1"/><text x="72.5076%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.2576%" y="501" width="0.0795%" height="15" fill="rgb(222,72,39)" fg:x="909" fg:w="1"/><text x="72.5076%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.2576%" y="485" width="0.0795%" height="15" fill="rgb(252,70,39)" fg:x="909" fg:w="1"/><text x="72.5076%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.2576%" y="469" width="0.0795%" height="15" fill="rgb(243,99,34)" fg:x="909" fg:w="1"/><text x="72.5076%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="72.2576%" y="693" width="0.1590%" height="15" fill="rgb(252,109,12)" fg:x="909" fg:w="2"/><text x="72.5076%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="72.2576%" y="677" width="0.1590%" height="15" fill="rgb(211,186,10)" fg:x="909" fg:w="2"/><text x="72.5076%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="72.3370%" y="661" width="0.0795%" height="15" fill="rgb(246,90,8)" fg:x="910" fg:w="1"/><text x="72.5870%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.3370%" y="645" width="0.0795%" height="15" fill="rgb(226,91,24)" fg:x="910" fg:w="1"/><text x="72.5870%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.3370%" y="629" width="0.0795%" height="15" fill="rgb(216,28,44)" fg:x="910" fg:w="1"/><text x="72.5870%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.4165%" y="645" width="0.0795%" height="15" fill="rgb(229,36,0)" fg:x="911" fg:w="1"/><text x="72.6665%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.4165%" y="629" width="0.0795%" height="15" fill="rgb(245,97,18)" fg:x="911" fg:w="1"/><text x="72.6665%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.4165%" y="613" width="0.0795%" height="15" fill="rgb(241,97,54)" fg:x="911" fg:w="1"/><text x="72.6665%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.4165%" y="597" width="0.0795%" height="15" fill="rgb(234,125,17)" fg:x="911" fg:w="1"/><text x="72.6665%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.4165%" y="581" width="0.0795%" height="15" fill="rgb(228,172,39)" fg:x="911" fg:w="1"/><text x="72.6665%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.4165%" y="565" width="0.0795%" height="15" fill="rgb(227,169,1)" fg:x="911" fg:w="1"/><text x="72.6665%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.4165%" y="549" width="0.0795%" height="15" fill="rgb(206,13,35)" fg:x="911" fg:w="1"/><text x="72.6665%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.4165%" y="533" width="0.0795%" height="15" fill="rgb(211,117,30)" fg:x="911" fg:w="1"/><text x="72.6665%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.4165%" y="517" width="0.0795%" height="15" fill="rgb(230,198,4)" fg:x="911" fg:w="1"/><text x="72.6665%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="71.8601%" y="725" width="0.7154%" height="15" fill="rgb(213,87,54)" fg:x="904" fg:w="9"/><text x="72.1101%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="71.8601%" y="709" width="0.7154%" height="15" fill="rgb(248,43,22)" fg:x="904" fg:w="9"/><text x="72.1101%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="72.4165%" y="693" width="0.1590%" height="15" fill="rgb(213,175,48)" fg:x="911" fg:w="2"/><text x="72.6665%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="72.4165%" y="677" width="0.1590%" height="15" fill="rgb(252,55,9)" fg:x="911" fg:w="2"/><text x="72.6665%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="72.4165%" y="661" width="0.1590%" height="15" fill="rgb(231,72,33)" fg:x="911" fg:w="2"/><text x="72.6665%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="72.4960%" y="645" width="0.0795%" height="15" fill="rgb(213,2,54)" fg:x="912" fg:w="1"/><text x="72.7460%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.4960%" y="629" width="0.0795%" height="15" fill="rgb(208,88,25)" fg:x="912" fg:w="1"/><text x="72.7460%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.4960%" y="613" width="0.0795%" height="15" fill="rgb(215,117,13)" fg:x="912" fg:w="1"/><text x="72.7460%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.4960%" y="597" width="0.0795%" height="15" fill="rgb(243,147,21)" fg:x="912" fg:w="1"/><text x="72.7460%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.4960%" y="581" width="0.0795%" height="15" fill="rgb(208,215,36)" fg:x="912" fg:w="1"/><text x="72.7460%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="72.5755%" y="709" width="0.0795%" height="15" fill="rgb(238,187,24)" fg:x="913" fg:w="1"/><text x="72.8255%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.5755%" y="693" width="0.0795%" height="15" fill="rgb(214,173,11)" fg:x="913" fg:w="1"/><text x="72.8255%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.5755%" y="677" width="0.0795%" height="15" fill="rgb(222,71,20)" fg:x="913" fg:w="1"/><text x="72.8255%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.5755%" y="661" width="0.0795%" height="15" fill="rgb(242,125,4)" fg:x="913" fg:w="1"/><text x="72.8255%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5755%" y="645" width="0.0795%" height="15" fill="rgb(217,101,52)" fg:x="913" fg:w="1"/><text x="72.8255%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.5755%" y="629" width="0.0795%" height="15" fill="rgb(223,2,50)" fg:x="913" fg:w="1"/><text x="72.8255%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5755%" y="613" width="0.0795%" height="15" fill="rgb(225,197,9)" fg:x="913" fg:w="1"/><text x="72.8255%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5755%" y="597" width="0.0795%" height="15" fill="rgb(234,76,27)" fg:x="913" fg:w="1"/><text x="72.8255%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5755%" y="581" width="0.0795%" height="15" fill="rgb(213,161,26)" fg:x="913" fg:w="1"/><text x="72.8255%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.5755%" y="565" width="0.0795%" height="15" fill="rgb(210,228,2)" fg:x="913" fg:w="1"/><text x="72.8255%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5755%" y="549" width="0.0795%" height="15" fill="rgb(235,4,16)" fg:x="913" fg:w="1"/><text x="72.8255%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="72.6550%" y="709" width="0.0795%" height="15" fill="rgb(235,83,42)" fg:x="914" fg:w="1"/><text x="72.9050%" y="719.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="72.6550%" y="693" width="0.0795%" height="15" fill="rgb(207,116,39)" fg:x="914" fg:w="1"/><text x="72.9050%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.6550%" y="677" width="0.0795%" height="15" fill="rgb(253,206,9)" fg:x="914" fg:w="1"/><text x="72.9050%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.6550%" y="661" width="0.0795%" height="15" fill="rgb(234,32,47)" fg:x="914" fg:w="1"/><text x="72.9050%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="72.6550%" y="645" width="0.0795%" height="15" fill="rgb(247,40,39)" fg:x="914" fg:w="1"/><text x="72.9050%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="72.7345%" y="661" width="0.0795%" height="15" fill="rgb(236,199,13)" fg:x="915" fg:w="1"/><text x="72.9845%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="72.7345%" y="645" width="0.0795%" height="15" fill="rgb(240,127,44)" fg:x="915" fg:w="1"/><text x="72.9845%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.7345%" y="629" width="0.0795%" height="15" fill="rgb(248,220,47)" fg:x="915" fg:w="1"/><text x="72.9845%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.7345%" y="613" width="0.0795%" height="15" fill="rgb(240,78,9)" fg:x="915" fg:w="1"/><text x="72.9845%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.7345%" y="597" width="0.0795%" height="15" fill="rgb(245,119,5)" fg:x="915" fg:w="1"/><text x="72.9845%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.7345%" y="581" width="0.0795%" height="15" fill="rgb(238,175,31)" fg:x="915" fg:w="1"/><text x="72.9845%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.7345%" y="565" width="0.0795%" height="15" fill="rgb(232,140,42)" fg:x="915" fg:w="1"/><text x="72.9845%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.7345%" y="549" width="0.0795%" height="15" fill="rgb(218,179,7)" fg:x="915" fg:w="1"/><text x="72.9845%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.7345%" y="533" width="0.0795%" height="15" fill="rgb(232,79,27)" fg:x="915" fg:w="1"/><text x="72.9845%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="72.8140%" y="645" width="0.0795%" height="15" fill="rgb(247,11,19)" fg:x="916" fg:w="1"/><text x="73.0640%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="72.8140%" y="629" width="0.0795%" height="15" fill="rgb(216,171,54)" fg:x="916" fg:w="1"/><text x="73.0640%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="72.8140%" y="613" width="0.0795%" height="15" fill="rgb(233,158,36)" fg:x="916" fg:w="1"/><text x="73.0640%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="72.8140%" y="597" width="0.0795%" height="15" fill="rgb(215,48,47)" fg:x="916" fg:w="1"/><text x="73.0640%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="72.8140%" y="581" width="0.0795%" height="15" fill="rgb(230,223,15)" fg:x="916" fg:w="1"/><text x="73.0640%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.8140%" y="565" width="0.0795%" height="15" fill="rgb(234,49,19)" fg:x="916" fg:w="1"/><text x="73.0640%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8140%" y="549" width="0.0795%" height="15" fill="rgb(232,89,25)" fg:x="916" fg:w="1"/><text x="73.0640%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8140%" y="533" width="0.0795%" height="15" fill="rgb(237,206,28)" fg:x="916" fg:w="1"/><text x="73.0640%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8140%" y="517" width="0.0795%" height="15" fill="rgb(249,68,37)" fg:x="916" fg:w="1"/><text x="73.0640%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8140%" y="501" width="0.0795%" height="15" fill="rgb(226,99,43)" fg:x="916" fg:w="1"/><text x="73.0640%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8140%" y="485" width="0.0795%" height="15" fill="rgb(216,46,28)" fg:x="916" fg:w="1"/><text x="73.0640%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8140%" y="469" width="0.0795%" height="15" fill="rgb(216,33,9)" fg:x="916" fg:w="1"/><text x="73.0640%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8935%" y="517" width="0.0795%" height="15" fill="rgb(216,129,4)" fg:x="917" fg:w="1"/><text x="73.1435%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8935%" y="501" width="0.0795%" height="15" fill="rgb(216,106,3)" fg:x="917" fg:w="1"/><text x="73.1435%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8935%" y="485" width="0.0795%" height="15" fill="rgb(217,79,45)" fg:x="917" fg:w="1"/><text x="73.1435%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8935%" y="469" width="0.0795%" height="15" fill="rgb(239,98,13)" fg:x="917" fg:w="1"/><text x="73.1435%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.8935%" y="453" width="0.0795%" height="15" fill="rgb(221,115,4)" fg:x="917" fg:w="1"/><text x="73.1435%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.8935%" y="437" width="0.0795%" height="15" fill="rgb(215,85,0)" fg:x="917" fg:w="1"/><text x="73.1435%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.8935%" y="421" width="0.0795%" height="15" fill="rgb(230,62,15)" fg:x="917" fg:w="1"/><text x="73.1435%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.8935%" y="405" width="0.0795%" height="15" fill="rgb(247,162,2)" fg:x="917" fg:w="1"/><text x="73.1435%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.8935%" y="389" width="0.0795%" height="15" fill="rgb(212,112,32)" fg:x="917" fg:w="1"/><text x="73.1435%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.8935%" y="373" width="0.0795%" height="15" fill="rgb(216,137,9)" fg:x="917" fg:w="1"/><text x="73.1435%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.8935%" y="357" width="0.0795%" height="15" fill="rgb(250,149,33)" fg:x="917" fg:w="1"/><text x="73.1435%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.8935%" y="341" width="0.0795%" height="15" fill="rgb(246,124,31)" fg:x="917" fg:w="1"/><text x="73.1435%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.8935%" y="325" width="0.0795%" height="15" fill="rgb(216,210,22)" fg:x="917" fg:w="1"/><text x="73.1435%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8935%" y="309" width="0.0795%" height="15" fill="rgb(228,128,36)" fg:x="917" fg:w="1"/><text x="73.1435%" y="319.50"></text></g><g><title>plugins_core::build::Build::leads_to (3 samples, 0.24%)</title><rect x="72.8140%" y="661" width="0.2385%" height="15" fill="rgb(231,41,0)" fg:x="916" fg:w="3"/><text x="73.0640%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="72.8935%" y="645" width="0.1590%" height="15" fill="rgb(232,61,26)" fg:x="917" fg:w="2"/><text x="73.1435%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="72.8935%" y="629" width="0.1590%" height="15" fill="rgb(217,60,9)" fg:x="917" fg:w="2"/><text x="73.1435%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="72.8935%" y="613" width="0.1590%" height="15" fill="rgb(233,41,35)" fg:x="917" fg:w="2"/><text x="73.1435%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="72.8935%" y="597" width="0.1590%" height="15" fill="rgb(253,139,43)" fg:x="917" fg:w="2"/><text x="73.1435%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="72.8935%" y="581" width="0.1590%" height="15" fill="rgb(245,100,51)" fg:x="917" fg:w="2"/><text x="73.1435%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.8935%" y="565" width="0.1590%" height="15" fill="rgb(250,208,18)" fg:x="917" fg:w="2"/><text x="73.1435%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.8935%" y="549" width="0.1590%" height="15" fill="rgb(245,33,2)" fg:x="917" fg:w="2"/><text x="73.1435%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.8935%" y="533" width="0.1590%" height="15" fill="rgb(244,171,31)" fg:x="917" fg:w="2"/><text x="73.1435%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9730%" y="517" width="0.0795%" height="15" fill="rgb(229,1,43)" fg:x="918" fg:w="1"/><text x="73.2230%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9730%" y="501" width="0.0795%" height="15" fill="rgb(223,153,28)" fg:x="918" fg:w="1"/><text x="73.2230%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.9730%" y="485" width="0.0795%" height="15" fill="rgb(241,4,46)" fg:x="918" fg:w="1"/><text x="73.2230%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.9730%" y="469" width="0.0795%" height="15" fill="rgb(230,81,11)" fg:x="918" fg:w="1"/><text x="73.2230%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.9730%" y="453" width="0.0795%" height="15" fill="rgb(253,204,39)" fg:x="918" fg:w="1"/><text x="73.2230%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.9730%" y="437" width="0.0795%" height="15" fill="rgb(250,96,8)" fg:x="918" fg:w="1"/><text x="73.2230%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.9730%" y="421" width="0.0795%" height="15" fill="rgb(219,89,54)" fg:x="918" fg:w="1"/><text x="73.2230%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="72.7345%" y="709" width="0.3975%" height="15" fill="rgb(235,136,39)" fg:x="915" fg:w="5"/><text x="72.9845%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="72.7345%" y="693" width="0.3975%" height="15" fill="rgb(230,155,37)" fg:x="915" fg:w="5"/><text x="72.9845%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="72.7345%" y="677" width="0.3975%" height="15" fill="rgb(235,199,50)" fg:x="915" fg:w="5"/><text x="72.9845%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="73.0525%" y="661" width="0.0795%" height="15" fill="rgb(227,81,32)" fg:x="919" fg:w="1"/><text x="73.3025%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="73.0525%" y="645" width="0.0795%" height="15" fill="rgb(225,6,28)" fg:x="919" fg:w="1"/><text x="73.3025%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="73.0525%" y="629" width="0.0795%" height="15" fill="rgb(207,211,17)" fg:x="919" fg:w="1"/><text x="73.3025%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="73.0525%" y="613" width="0.0795%" height="15" fill="rgb(228,31,49)" fg:x="919" fg:w="1"/><text x="73.3025%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="73.0525%" y="597" width="0.0795%" height="15" fill="rgb(230,185,3)" fg:x="919" fg:w="1"/><text x="73.3025%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.0525%" y="581" width="0.0795%" height="15" fill="rgb(206,167,15)" fg:x="919" fg:w="1"/><text x="73.3025%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="73.0525%" y="565" width="0.0795%" height="15" fill="rgb(234,2,36)" fg:x="919" fg:w="1"/><text x="73.3025%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.0525%" y="549" width="0.0795%" height="15" fill="rgb(239,160,29)" fg:x="919" fg:w="1"/><text x="73.3025%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="73.0525%" y="533" width="0.0795%" height="15" fill="rgb(236,117,2)" fg:x="919" fg:w="1"/><text x="73.3025%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="73.0525%" y="517" width="0.0795%" height="15" fill="rgb(215,117,37)" fg:x="919" fg:w="1"/><text x="73.3025%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="73.1320%" y="693" width="0.0795%" height="15" fill="rgb(244,48,36)" fg:x="920" fg:w="1"/><text x="73.3820%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1320%" y="677" width="0.0795%" height="15" fill="rgb(223,101,37)" fg:x="920" fg:w="1"/><text x="73.3820%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1320%" y="661" width="0.0795%" height="15" fill="rgb(205,200,1)" fg:x="920" fg:w="1"/><text x="73.3820%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.1320%" y="645" width="0.0795%" height="15" fill="rgb(209,193,20)" fg:x="920" fg:w="1"/><text x="73.3820%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.1320%" y="629" width="0.0795%" height="15" fill="rgb(214,63,13)" fg:x="920" fg:w="1"/><text x="73.3820%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.1320%" y="613" width="0.0795%" height="15" fill="rgb(253,113,46)" fg:x="920" fg:w="1"/><text x="73.3820%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1320%" y="597" width="0.0795%" height="15" fill="rgb(237,103,34)" fg:x="920" fg:w="1"/><text x="73.3820%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1320%" y="581" width="0.0795%" height="15" fill="rgb(223,38,25)" fg:x="920" fg:w="1"/><text x="73.3820%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.1320%" y="565" width="0.0795%" height="15" fill="rgb(251,32,32)" fg:x="920" fg:w="1"/><text x="73.3820%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.1320%" y="549" width="0.0795%" height="15" fill="rgb(228,65,22)" fg:x="920" fg:w="1"/><text x="73.3820%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.1320%" y="533" width="0.0795%" height="15" fill="rgb(205,11,46)" fg:x="920" fg:w="1"/><text x="73.3820%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.1320%" y="517" width="0.0795%" height="15" fill="rgb(220,35,2)" fg:x="920" fg:w="1"/><text x="73.3820%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1320%" y="501" width="0.0795%" height="15" fill="rgb(217,151,17)" fg:x="920" fg:w="1"/><text x="73.3820%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.2114%" y="645" width="0.0795%" height="15" fill="rgb(243,227,35)" fg:x="921" fg:w="1"/><text x="73.4614%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.2909%" y="581" width="0.0795%" height="15" fill="rgb(214,0,34)" fg:x="922" fg:w="1"/><text x="73.5409%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.2909%" y="565" width="0.0795%" height="15" fill="rgb(209,42,37)" fg:x="922" fg:w="1"/><text x="73.5409%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.2909%" y="549" width="0.0795%" height="15" fill="rgb(251,176,30)" fg:x="922" fg:w="1"/><text x="73.5409%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.2909%" y="533" width="0.0795%" height="15" fill="rgb(223,64,40)" fg:x="922" fg:w="1"/><text x="73.5409%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.2909%" y="517" width="0.0795%" height="15" fill="rgb(227,180,23)" fg:x="922" fg:w="1"/><text x="73.5409%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.2909%" y="501" width="0.0795%" height="15" fill="rgb(220,137,31)" fg:x="922" fg:w="1"/><text x="73.5409%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.2909%" y="485" width="0.0795%" height="15" fill="rgb(245,124,25)" fg:x="922" fg:w="1"/><text x="73.5409%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="73.2909%" y="597" width="0.1590%" height="15" fill="rgb(217,157,5)" fg:x="922" fg:w="2"/><text x="73.5409%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.3704%" y="581" width="0.0795%" height="15" fill="rgb(225,59,2)" fg:x="923" fg:w="1"/><text x="73.6204%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.3704%" y="565" width="0.0795%" height="15" fill="rgb(220,182,9)" fg:x="923" fg:w="1"/><text x="73.6204%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.3704%" y="549" width="0.0795%" height="15" fill="rgb(249,54,24)" fg:x="923" fg:w="1"/><text x="73.6204%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.4499%" y="581" width="0.1590%" height="15" fill="rgb(216,89,17)" fg:x="924" fg:w="2"/><text x="73.6999%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.4499%" y="565" width="0.1590%" height="15" fill="rgb(245,20,45)" fg:x="924" fg:w="2"/><text x="73.6999%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.5294%" y="549" width="0.0795%" height="15" fill="rgb(230,83,14)" fg:x="925" fg:w="1"/><text x="73.7794%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5294%" y="533" width="0.0795%" height="15" fill="rgb(246,109,11)" fg:x="925" fg:w="1"/><text x="73.7794%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.5294%" y="517" width="0.0795%" height="15" fill="rgb(235,85,23)" fg:x="925" fg:w="1"/><text x="73.7794%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.5294%" y="501" width="0.0795%" height="15" fill="rgb(215,101,36)" fg:x="925" fg:w="1"/><text x="73.7794%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.5294%" y="485" width="0.0795%" height="15" fill="rgb(228,140,31)" fg:x="925" fg:w="1"/><text x="73.7794%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.6089%" y="565" width="0.0795%" height="15" fill="rgb(234,162,37)" fg:x="926" fg:w="1"/><text x="73.8589%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.6089%" y="549" width="0.0795%" height="15" fill="rgb(221,0,24)" fg:x="926" fg:w="1"/><text x="73.8589%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.6089%" y="533" width="0.0795%" height="15" fill="rgb(230,161,41)" fg:x="926" fg:w="1"/><text x="73.8589%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.6089%" y="517" width="0.0795%" height="15" fill="rgb(224,46,24)" fg:x="926" fg:w="1"/><text x="73.8589%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6089%" y="501" width="0.0795%" height="15" fill="rgb(205,59,32)" fg:x="926" fg:w="1"/><text x="73.8589%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6089%" y="485" width="0.0795%" height="15" fill="rgb(239,31,20)" fg:x="926" fg:w="1"/><text x="73.8589%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.6884%" y="565" width="0.0795%" height="15" fill="rgb(233,149,44)" fg:x="927" fg:w="1"/><text x="73.9384%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6884%" y="549" width="0.0795%" height="15" fill="rgb(243,47,26)" fg:x="927" fg:w="1"/><text x="73.9384%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.7679%" y="549" width="0.0795%" height="15" fill="rgb(233,107,5)" fg:x="928" fg:w="1"/><text x="74.0179%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.7679%" y="533" width="0.0795%" height="15" fill="rgb(248,140,33)" fg:x="928" fg:w="1"/><text x="74.0179%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.7679%" y="517" width="0.0795%" height="15" fill="rgb(228,178,19)" fg:x="928" fg:w="1"/><text x="74.0179%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="73.7679%" y="501" width="0.0795%" height="15" fill="rgb(224,39,49)" fg:x="928" fg:w="1"/><text x="74.0179%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.8474%" y="549" width="0.1590%" height="15" fill="rgb(246,56,47)" fg:x="929" fg:w="2"/><text x="74.0974%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.8474%" y="533" width="0.1590%" height="15" fill="rgb(220,73,27)" fg:x="929" fg:w="2"/><text x="74.0974%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.9269%" y="517" width="0.0795%" height="15" fill="rgb(239,112,21)" fg:x="930" fg:w="1"/><text x="74.1769%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.9269%" y="501" width="0.0795%" height="15" fill="rgb(253,14,51)" fg:x="930" fg:w="1"/><text x="74.1769%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.0859%" y="533" width="0.0795%" height="15" fill="rgb(215,58,12)" fg:x="932" fg:w="1"/><text x="74.3359%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.1653%" y="517" width="0.0795%" height="15" fill="rgb(207,181,19)" fg:x="933" fg:w="1"/><text x="74.4153%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="73.7679%" y="565" width="0.6359%" height="15" fill="rgb(211,214,34)" fg:x="928" fg:w="8"/><text x="74.0179%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="74.0064%" y="549" width="0.3975%" height="15" fill="rgb(243,124,39)" fg:x="931" fg:w="5"/><text x="74.2564%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="74.1653%" y="533" width="0.2385%" height="15" fill="rgb(248,135,21)" fg:x="933" fg:w="3"/><text x="74.4153%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.2448%" y="517" width="0.1590%" height="15" fill="rgb(245,218,3)" fg:x="934" fg:w="2"/><text x="74.4948%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.2448%" y="501" width="0.1590%" height="15" fill="rgb(225,144,22)" fg:x="934" fg:w="2"/><text x="74.4948%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.27%)</title><rect x="73.2909%" y="613" width="1.2719%" height="15" fill="rgb(250,90,15)" fg:x="922" fg:w="16"/><text x="73.5409%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.11%)</title><rect x="73.4499%" y="597" width="1.1129%" height="15" fill="rgb(224,64,29)" fg:x="924" fg:w="14"/><text x="73.6999%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="73.6089%" y="581" width="0.9539%" height="15" fill="rgb(217,50,47)" fg:x="926" fg:w="12"/><text x="73.8589%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.4038%" y="565" width="0.1590%" height="15" fill="rgb(231,159,47)" fg:x="936" fg:w="2"/><text x="74.6538%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.4038%" y="549" width="0.1590%" height="15" fill="rgb(213,89,29)" fg:x="936" fg:w="2"/><text x="74.6538%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="74.4833%" y="533" width="0.0795%" height="15" fill="rgb(243,90,23)" fg:x="937" fg:w="1"/><text x="74.7333%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.5628%" y="533" width="0.0795%" height="15" fill="rgb(213,21,6)" fg:x="938" fg:w="1"/><text x="74.8128%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.5628%" y="517" width="0.0795%" height="15" fill="rgb(237,139,17)" fg:x="938" fg:w="1"/><text x="74.8128%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="74.6423%" y="533" width="0.0795%" height="15" fill="rgb(250,147,17)" fg:x="939" fg:w="1"/><text x="74.8923%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.6423%" y="517" width="0.0795%" height="15" fill="rgb(212,208,42)" fg:x="939" fg:w="1"/><text x="74.8923%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6423%" y="501" width="0.0795%" height="15" fill="rgb(215,229,40)" fg:x="939" fg:w="1"/><text x="74.8923%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.5628%" y="613" width="0.2385%" height="15" fill="rgb(206,204,1)" fg:x="938" fg:w="3"/><text x="74.8128%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="74.5628%" y="597" width="0.2385%" height="15" fill="rgb(230,62,32)" fg:x="938" fg:w="3"/><text x="74.8128%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.5628%" y="581" width="0.2385%" height="15" fill="rgb(223,22,42)" fg:x="938" fg:w="3"/><text x="74.8128%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.5628%" y="565" width="0.2385%" height="15" fill="rgb(244,6,23)" fg:x="938" fg:w="3"/><text x="74.8128%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.5628%" y="549" width="0.2385%" height="15" fill="rgb(240,221,42)" fg:x="938" fg:w="3"/><text x="74.8128%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.7218%" y="533" width="0.0795%" height="15" fill="rgb(222,74,7)" fg:x="940" fg:w="1"/><text x="74.9718%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.7218%" y="517" width="0.0795%" height="15" fill="rgb(227,191,38)" fg:x="940" fg:w="1"/><text x="74.9718%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.7218%" y="501" width="0.0795%" height="15" fill="rgb(227,89,34)" fg:x="940" fg:w="1"/><text x="74.9718%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="74.8013%" y="565" width="0.0795%" height="15" fill="rgb(215,153,25)" fg:x="941" fg:w="1"/><text x="75.0513%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="74.9603%" y="549" width="0.0795%" height="15" fill="rgb(215,153,46)" fg:x="943" fg:w="1"/><text x="75.2103%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.0397%" y="517" width="0.0795%" height="15" fill="rgb(242,38,52)" fg:x="944" fg:w="1"/><text x="75.2897%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.0397%" y="501" width="0.0795%" height="15" fill="rgb(218,112,4)" fg:x="944" fg:w="1"/><text x="75.2897%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0397%" y="485" width="0.0795%" height="15" fill="rgb(231,210,31)" fg:x="944" fg:w="1"/><text x="75.2897%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1192%" y="485" width="0.0795%" height="15" fill="rgb(245,223,36)" fg:x="945" fg:w="1"/><text x="75.3692%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1192%" y="469" width="0.0795%" height="15" fill="rgb(246,41,2)" fg:x="945" fg:w="1"/><text x="75.3692%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1192%" y="453" width="0.0795%" height="15" fill="rgb(227,51,31)" fg:x="945" fg:w="1"/><text x="75.3692%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="75.1192%" y="501" width="0.3180%" height="15" fill="rgb(222,95,26)" fg:x="945" fg:w="4"/><text x="75.3692%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="75.1987%" y="485" width="0.2385%" height="15" fill="rgb(224,190,1)" fg:x="946" fg:w="3"/><text x="75.4487%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="75.1987%" y="469" width="0.2385%" height="15" fill="rgb(209,90,42)" fg:x="946" fg:w="3"/><text x="75.4487%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.2782%" y="453" width="0.1590%" height="15" fill="rgb(232,225,50)" fg:x="947" fg:w="2"/><text x="75.5282%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.3577%" y="437" width="0.0795%" height="15" fill="rgb(239,89,47)" fg:x="948" fg:w="1"/><text x="75.6077%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.3577%" y="421" width="0.0795%" height="15" fill="rgb(230,212,50)" fg:x="948" fg:w="1"/><text x="75.6077%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3577%" y="405" width="0.0795%" height="15" fill="rgb(252,1,27)" fg:x="948" fg:w="1"/><text x="75.6077%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="75.0397%" y="549" width="0.4769%" height="15" fill="rgb(237,179,41)" fg:x="944" fg:w="6"/><text x="75.2897%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="75.0397%" y="533" width="0.4769%" height="15" fill="rgb(214,151,37)" fg:x="944" fg:w="6"/><text x="75.2897%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="75.1192%" y="517" width="0.3975%" height="15" fill="rgb(211,74,11)" fg:x="945" fg:w="5"/><text x="75.3692%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4372%" y="501" width="0.0795%" height="15" fill="rgb(242,21,21)" fg:x="949" fg:w="1"/><text x="75.6872%" y="511.50"></text></g><g><title>engine::session::Session::flush (31 samples, 2.46%)</title><rect x="73.1320%" y="709" width="2.4642%" height="15" fill="rgb(226,106,43)" fg:x="920" fg:w="31"/><text x="73.3820%" y="719.50">en..</text></g><g><title>engine::session::Session::save_changes (30 samples, 2.38%)</title><rect x="73.2114%" y="693" width="2.3847%" height="15" fill="rgb(229,162,39)" fg:x="921" fg:w="30"/><text x="73.4614%" y="703.50">en..</text></g><g><title>engine::session::state::State::close (30 samples, 2.38%)</title><rect x="73.2114%" y="677" width="2.3847%" height="15" fill="rgb(228,159,25)" fg:x="921" fg:w="30"/><text x="73.4614%" y="687.50">en..</text></g><g><title>engine::session::state::State::flush_entities (30 samples, 2.38%)</title><rect x="73.2114%" y="661" width="2.3847%" height="15" fill="rgb(237,32,23)" fg:x="921" fg:w="30"/><text x="73.4614%" y="671.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (29 samples, 2.31%)</title><rect x="73.2909%" y="645" width="2.3052%" height="15" fill="rgb(212,35,32)" fg:x="922" fg:w="29"/><text x="73.5409%" y="655.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (29 samples, 2.31%)</title><rect x="73.2909%" y="629" width="2.3052%" height="15" fill="rgb(215,199,1)" fg:x="922" fg:w="29"/><text x="73.5409%" y="639.50">e..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.79%)</title><rect x="74.8013%" y="613" width="0.7949%" height="15" fill="rgb(215,67,13)" fg:x="941" fg:w="10"/><text x="75.0513%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.79%)</title><rect x="74.8013%" y="597" width="0.7949%" height="15" fill="rgb(216,20,47)" fg:x="941" fg:w="10"/><text x="75.0513%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.79%)</title><rect x="74.8013%" y="581" width="0.7949%" height="15" fill="rgb(249,183,48)" fg:x="941" fg:w="10"/><text x="75.0513%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="74.8808%" y="565" width="0.7154%" height="15" fill="rgb(208,86,37)" fg:x="942" fg:w="9"/><text x="75.1308%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5167%" y="549" width="0.0795%" height="15" fill="rgb(251,192,7)" fg:x="950" fg:w="1"/><text x="75.7667%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5167%" y="533" width="0.0795%" height="15" fill="rgb(234,196,3)" fg:x="950" fg:w="1"/><text x="75.7667%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.5167%" y="517" width="0.0795%" height="15" fill="rgb(229,150,39)" fg:x="950" fg:w="1"/><text x="75.7667%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.5962%" y="629" width="0.0795%" height="15" fill="rgb(226,19,29)" fg:x="951" fg:w="1"/><text x="75.8462%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.5962%" y="613" width="0.0795%" height="15" fill="rgb(226,222,2)" fg:x="951" fg:w="1"/><text x="75.8462%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.6757%" y="533" width="0.0795%" height="15" fill="rgb(235,85,29)" fg:x="952" fg:w="1"/><text x="75.9257%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.6757%" y="517" width="0.0795%" height="15" fill="rgb(237,194,43)" fg:x="952" fg:w="1"/><text x="75.9257%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="75.5962%" y="693" width="0.2385%" height="15" fill="rgb(211,4,42)" fg:x="951" fg:w="3"/><text x="75.8462%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="75.5962%" y="677" width="0.2385%" height="15" fill="rgb(221,80,37)" fg:x="951" fg:w="3"/><text x="75.8462%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="75.5962%" y="661" width="0.2385%" height="15" fill="rgb(222,47,31)" fg:x="951" fg:w="3"/><text x="75.8462%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="75.5962%" y="645" width="0.2385%" height="15" fill="rgb(249,82,52)" fg:x="951" fg:w="3"/><text x="75.8462%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.6757%" y="629" width="0.1590%" height="15" fill="rgb(218,203,2)" fg:x="952" fg:w="2"/><text x="75.9257%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.6757%" y="613" width="0.1590%" height="15" fill="rgb(210,175,14)" fg:x="952" fg:w="2"/><text x="75.9257%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.6757%" y="597" width="0.1590%" height="15" fill="rgb(216,210,12)" fg:x="952" fg:w="2"/><text x="75.9257%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.6757%" y="581" width="0.1590%" height="15" fill="rgb(229,120,18)" fg:x="952" fg:w="2"/><text x="75.9257%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.6757%" y="565" width="0.1590%" height="15" fill="rgb(231,174,12)" fg:x="952" fg:w="2"/><text x="75.9257%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.6757%" y="549" width="0.1590%" height="15" fill="rgb(214,101,53)" fg:x="952" fg:w="2"/><text x="75.9257%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.7552%" y="533" width="0.0795%" height="15" fill="rgb(246,89,43)" fg:x="953" fg:w="1"/><text x="76.0052%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.7552%" y="517" width="0.0795%" height="15" fill="rgb(222,9,51)" fg:x="953" fg:w="1"/><text x="76.0052%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8347%" y="597" width="0.0795%" height="15" fill="rgb(252,221,9)" fg:x="954" fg:w="1"/><text x="76.0847%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8347%" y="581" width="0.0795%" height="15" fill="rgb(248,28,15)" fg:x="954" fg:w="1"/><text x="76.0847%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8347%" y="565" width="0.0795%" height="15" fill="rgb(213,54,52)" fg:x="954" fg:w="1"/><text x="76.0847%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.8347%" y="549" width="0.0795%" height="15" fill="rgb(240,3,45)" fg:x="954" fg:w="1"/><text x="76.0847%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8347%" y="533" width="0.0795%" height="15" fill="rgb(239,138,24)" fg:x="954" fg:w="1"/><text x="76.0847%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8347%" y="517" width="0.0795%" height="15" fill="rgb(233,45,54)" fg:x="954" fg:w="1"/><text x="76.0847%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.8347%" y="501" width="0.0795%" height="15" fill="rgb(220,131,2)" fg:x="954" fg:w="1"/><text x="76.0847%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.8347%" y="485" width="0.0795%" height="15" fill="rgb(240,154,36)" fg:x="954" fg:w="1"/><text x="76.0847%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.8347%" y="469" width="0.0795%" height="15" fill="rgb(251,221,1)" fg:x="954" fg:w="1"/><text x="76.0847%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.8347%" y="453" width="0.0795%" height="15" fill="rgb(225,217,1)" fg:x="954" fg:w="1"/><text x="76.0847%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.8347%" y="437" width="0.0795%" height="15" fill="rgb(241,105,49)" fg:x="954" fg:w="1"/><text x="76.0847%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.8347%" y="421" width="0.0795%" height="15" fill="rgb(215,44,32)" fg:x="954" fg:w="1"/><text x="76.0847%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.8347%" y="405" width="0.0795%" height="15" fill="rgb(213,222,14)" fg:x="954" fg:w="1"/><text x="76.0847%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.8347%" y="389" width="0.0795%" height="15" fill="rgb(207,99,52)" fg:x="954" fg:w="1"/><text x="76.0847%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.8347%" y="373" width="0.0795%" height="15" fill="rgb(214,208,52)" fg:x="954" fg:w="1"/><text x="76.0847%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8347%" y="357" width="0.0795%" height="15" fill="rgb(244,169,0)" fg:x="954" fg:w="1"/><text x="76.0847%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.8347%" y="645" width="0.1590%" height="15" fill="rgb(216,193,37)" fg:x="954" fg:w="2"/><text x="76.0847%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.8347%" y="629" width="0.1590%" height="15" fill="rgb(212,158,10)" fg:x="954" fg:w="2"/><text x="76.0847%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.8347%" y="613" width="0.1590%" height="15" fill="rgb(213,110,20)" fg:x="954" fg:w="2"/><text x="76.0847%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9141%" y="597" width="0.0795%" height="15" fill="rgb(226,5,42)" fg:x="955" fg:w="1"/><text x="76.1641%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9141%" y="581" width="0.0795%" height="15" fill="rgb(211,93,8)" fg:x="955" fg:w="1"/><text x="76.1641%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9141%" y="565" width="0.0795%" height="15" fill="rgb(240,208,12)" fg:x="955" fg:w="1"/><text x="76.1641%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9141%" y="549" width="0.0795%" height="15" fill="rgb(233,127,50)" fg:x="955" fg:w="1"/><text x="76.1641%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.9141%" y="533" width="0.0795%" height="15" fill="rgb(227,199,53)" fg:x="955" fg:w="1"/><text x="76.1641%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9141%" y="517" width="0.0795%" height="15" fill="rgb(235,199,10)" fg:x="955" fg:w="1"/><text x="76.1641%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9141%" y="501" width="0.0795%" height="15" fill="rgb(228,148,35)" fg:x="955" fg:w="1"/><text x="76.1641%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9141%" y="485" width="0.0795%" height="15" fill="rgb(217,87,19)" fg:x="955" fg:w="1"/><text x="76.1641%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.9141%" y="469" width="0.0795%" height="15" fill="rgb(239,9,32)" fg:x="955" fg:w="1"/><text x="76.1641%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.9141%" y="453" width="0.0795%" height="15" fill="rgb(229,101,29)" fg:x="955" fg:w="1"/><text x="76.1641%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9936%" y="565" width="0.0795%" height="15" fill="rgb(208,143,26)" fg:x="956" fg:w="1"/><text x="76.2436%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9936%" y="549" width="0.0795%" height="15" fill="rgb(214,10,2)" fg:x="956" fg:w="1"/><text x="76.2436%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.9936%" y="533" width="0.0795%" height="15" fill="rgb(254,203,30)" fg:x="956" fg:w="1"/><text x="76.2436%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.9936%" y="517" width="0.0795%" height="15" fill="rgb(242,45,3)" fg:x="956" fg:w="1"/><text x="76.2436%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.9936%" y="501" width="0.0795%" height="15" fill="rgb(209,146,51)" fg:x="956" fg:w="1"/><text x="76.2436%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.9936%" y="485" width="0.0795%" height="15" fill="rgb(222,80,5)" fg:x="956" fg:w="1"/><text x="76.2436%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.9936%" y="469" width="0.0795%" height="15" fill="rgb(252,80,35)" fg:x="956" fg:w="1"/><text x="76.2436%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.9936%" y="453" width="0.0795%" height="15" fill="rgb(246,125,28)" fg:x="956" fg:w="1"/><text x="76.2436%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.9936%" y="437" width="0.0795%" height="15" fill="rgb(224,143,51)" fg:x="956" fg:w="1"/><text x="76.2436%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.9936%" y="421" width="0.0795%" height="15" fill="rgb(205,24,17)" fg:x="956" fg:w="1"/><text x="76.2436%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.9936%" y="405" width="0.0795%" height="15" fill="rgb(253,128,30)" fg:x="956" fg:w="1"/><text x="76.2436%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.9936%" y="389" width="0.0795%" height="15" fill="rgb(214,153,25)" fg:x="956" fg:w="1"/><text x="76.2436%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.9936%" y="373" width="0.0795%" height="15" fill="rgb(214,4,28)" fg:x="956" fg:w="1"/><text x="76.2436%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9936%" y="357" width="0.0795%" height="15" fill="rgb(235,179,52)" fg:x="956" fg:w="1"/><text x="76.2436%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.9936%" y="597" width="0.1590%" height="15" fill="rgb(233,27,42)" fg:x="956" fg:w="2"/><text x="76.2436%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.9936%" y="581" width="0.1590%" height="15" fill="rgb(238,35,25)" fg:x="956" fg:w="2"/><text x="76.2436%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0731%" y="565" width="0.0795%" height="15" fill="rgb(227,44,31)" fg:x="957" fg:w="1"/><text x="76.3231%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2321%" y="501" width="0.0795%" height="15" fill="rgb(232,201,13)" fg:x="959" fg:w="1"/><text x="76.4821%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.2321%" y="485" width="0.0795%" height="15" fill="rgb(224,172,52)" fg:x="959" fg:w="1"/><text x="76.4821%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="75.8347%" y="677" width="0.5564%" height="15" fill="rgb(214,27,26)" fg:x="954" fg:w="7"/><text x="76.0847%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="75.8347%" y="661" width="0.5564%" height="15" fill="rgb(210,185,52)" fg:x="954" fg:w="7"/><text x="76.0847%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="75.9936%" y="645" width="0.3975%" height="15" fill="rgb(249,59,32)" fg:x="956" fg:w="5"/><text x="76.2436%" y="655.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="75.9936%" y="629" width="0.3975%" height="15" fill="rgb(242,209,18)" fg:x="956" fg:w="5"/><text x="76.2436%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="75.9936%" y="613" width="0.3975%" height="15" fill="rgb(229,0,18)" fg:x="956" fg:w="5"/><text x="76.2436%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="76.1526%" y="597" width="0.2385%" height="15" fill="rgb(217,138,29)" fg:x="958" fg:w="3"/><text x="76.4026%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.2321%" y="581" width="0.1590%" height="15" fill="rgb(215,72,42)" fg:x="959" fg:w="2"/><text x="76.4821%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.2321%" y="565" width="0.1590%" height="15" fill="rgb(254,115,11)" fg:x="959" fg:w="2"/><text x="76.4821%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.2321%" y="549" width="0.1590%" height="15" fill="rgb(205,133,39)" fg:x="959" fg:w="2"/><text x="76.4821%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.2321%" y="533" width="0.1590%" height="15" fill="rgb(211,36,27)" fg:x="959" fg:w="2"/><text x="76.4821%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.2321%" y="517" width="0.1590%" height="15" fill="rgb(221,48,10)" fg:x="959" fg:w="2"/><text x="76.4821%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.3116%" y="501" width="0.0795%" height="15" fill="rgb(230,172,50)" fg:x="960" fg:w="1"/><text x="76.5616%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3116%" y="485" width="0.0795%" height="15" fill="rgb(249,72,18)" fg:x="960" fg:w="1"/><text x="76.5616%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.3116%" y="469" width="0.0795%" height="15" fill="rgb(237,58,48)" fg:x="960" fg:w="1"/><text x="76.5616%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3116%" y="453" width="0.0795%" height="15" fill="rgb(242,123,3)" fg:x="960" fg:w="1"/><text x="76.5616%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.3911%" y="677" width="0.0795%" height="15" fill="rgb(232,111,32)" fg:x="961" fg:w="1"/><text x="76.6411%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3911%" y="661" width="0.0795%" height="15" fill="rgb(229,108,3)" fg:x="961" fg:w="1"/><text x="76.6411%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.3911%" y="645" width="0.0795%" height="15" fill="rgb(222,158,10)" fg:x="961" fg:w="1"/><text x="76.6411%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3911%" y="629" width="0.0795%" height="15" fill="rgb(205,34,49)" fg:x="961" fg:w="1"/><text x="76.6411%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4706%" y="549" width="0.0795%" height="15" fill="rgb(232,21,14)" fg:x="962" fg:w="1"/><text x="76.7206%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.4706%" y="581" width="0.1590%" height="15" fill="rgb(229,127,44)" fg:x="962" fg:w="2"/><text x="76.7206%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="76.4706%" y="565" width="0.1590%" height="15" fill="rgb(232,171,4)" fg:x="962" fg:w="2"/><text x="76.7206%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5501%" y="549" width="0.0795%" height="15" fill="rgb(250,92,16)" fg:x="963" fg:w="1"/><text x="76.8001%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5501%" y="533" width="0.0795%" height="15" fill="rgb(230,103,38)" fg:x="963" fg:w="1"/><text x="76.8001%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5501%" y="517" width="0.0795%" height="15" fill="rgb(253,167,9)" fg:x="963" fg:w="1"/><text x="76.8001%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5501%" y="501" width="0.0795%" height="15" fill="rgb(222,118,11)" fg:x="963" fg:w="1"/><text x="76.8001%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5501%" y="485" width="0.0795%" height="15" fill="rgb(240,202,0)" fg:x="963" fg:w="1"/><text x="76.8001%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5501%" y="469" width="0.0795%" height="15" fill="rgb(236,124,4)" fg:x="963" fg:w="1"/><text x="76.8001%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.6296%" y="485" width="0.0795%" height="15" fill="rgb(244,128,18)" fg:x="964" fg:w="1"/><text x="76.8796%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="76.4706%" y="629" width="0.3180%" height="15" fill="rgb(231,206,5)" fg:x="962" fg:w="4"/><text x="76.7206%" y="639.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="76.4706%" y="613" width="0.3180%" height="15" fill="rgb(237,111,8)" fg:x="962" fg:w="4"/><text x="76.7206%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="76.4706%" y="597" width="0.3180%" height="15" fill="rgb(225,127,3)" fg:x="962" fg:w="4"/><text x="76.7206%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.6296%" y="581" width="0.1590%" height="15" fill="rgb(222,85,48)" fg:x="964" fg:w="2"/><text x="76.8796%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.6296%" y="565" width="0.1590%" height="15" fill="rgb(221,108,37)" fg:x="964" fg:w="2"/><text x="76.8796%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.6296%" y="549" width="0.1590%" height="15" fill="rgb(226,169,36)" fg:x="964" fg:w="2"/><text x="76.8796%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.6296%" y="533" width="0.1590%" height="15" fill="rgb(237,76,12)" fg:x="964" fg:w="2"/><text x="76.8796%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.6296%" y="517" width="0.1590%" height="15" fill="rgb(210,227,32)" fg:x="964" fg:w="2"/><text x="76.8796%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.6296%" y="501" width="0.1590%" height="15" fill="rgb(214,117,20)" fg:x="964" fg:w="2"/><text x="76.8796%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7091%" y="485" width="0.0795%" height="15" fill="rgb(234,119,41)" fg:x="965" fg:w="1"/><text x="76.9591%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7091%" y="469" width="0.0795%" height="15" fill="rgb(230,130,47)" fg:x="965" fg:w="1"/><text x="76.9591%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.7091%" y="453" width="0.0795%" height="15" fill="rgb(215,21,41)" fg:x="965" fg:w="1"/><text x="76.9591%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7091%" y="437" width="0.0795%" height="15" fill="rgb(226,26,53)" fg:x="965" fg:w="1"/><text x="76.9591%" y="447.50"></text></g><g><title>plugins_core::build::Build::holding (17 samples, 1.35%)</title><rect x="75.5962%" y="709" width="1.3514%" height="15" fill="rgb(221,92,23)" fg:x="951" fg:w="17"/><text x="75.8462%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (14 samples, 1.11%)</title><rect x="75.8347%" y="693" width="1.1129%" height="15" fill="rgb(213,156,21)" fg:x="954" fg:w="14"/><text x="76.0847%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="76.4706%" y="677" width="0.4769%" height="15" fill="rgb(254,166,29)" fg:x="962" fg:w="6"/><text x="76.7206%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="76.4706%" y="661" width="0.4769%" height="15" fill="rgb(213,71,1)" fg:x="962" fg:w="6"/><text x="76.7206%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="76.4706%" y="645" width="0.4769%" height="15" fill="rgb(245,8,13)" fg:x="962" fg:w="6"/><text x="76.7206%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.7886%" y="629" width="0.1590%" height="15" fill="rgb(213,32,32)" fg:x="966" fg:w="2"/><text x="77.0386%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.7886%" y="613" width="0.1590%" height="15" fill="rgb(251,86,50)" fg:x="966" fg:w="2"/><text x="77.0386%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.7886%" y="597" width="0.1590%" height="15" fill="rgb(252,92,41)" fg:x="966" fg:w="2"/><text x="77.0386%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8680%" y="581" width="0.0795%" height="15" fill="rgb(234,70,35)" fg:x="967" fg:w="1"/><text x="77.1180%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8680%" y="565" width="0.0795%" height="15" fill="rgb(210,157,19)" fg:x="967" fg:w="1"/><text x="77.1180%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8680%" y="549" width="0.0795%" height="15" fill="rgb(206,20,45)" fg:x="967" fg:w="1"/><text x="77.1180%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8680%" y="533" width="0.0795%" height="15" fill="rgb(207,34,7)" fg:x="967" fg:w="1"/><text x="77.1180%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.8680%" y="517" width="0.0795%" height="15" fill="rgb(253,151,14)" fg:x="967" fg:w="1"/><text x="77.1180%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8680%" y="501" width="0.0795%" height="15" fill="rgb(252,1,18)" fg:x="967" fg:w="1"/><text x="77.1180%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8680%" y="485" width="0.0795%" height="15" fill="rgb(214,77,52)" fg:x="967" fg:w="1"/><text x="77.1180%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8680%" y="469" width="0.0795%" height="15" fill="rgb(254,106,35)" fg:x="967" fg:w="1"/><text x="77.1180%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8680%" y="453" width="0.0795%" height="15" fill="rgb(212,67,40)" fg:x="967" fg:w="1"/><text x="77.1180%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8680%" y="437" width="0.0795%" height="15" fill="rgb(228,76,23)" fg:x="967" fg:w="1"/><text x="77.1180%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="76.8680%" y="421" width="0.0795%" height="15" fill="rgb(250,198,5)" fg:x="967" fg:w="1"/><text x="77.1180%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="76.8680%" y="405" width="0.0795%" height="15" fill="rgb(209,20,25)" fg:x="967" fg:w="1"/><text x="77.1180%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9475%" y="629" width="0.0795%" height="15" fill="rgb(236,32,4)" fg:x="968" fg:w="1"/><text x="77.1975%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.9475%" y="613" width="0.0795%" height="15" fill="rgb(215,31,6)" fg:x="968" fg:w="1"/><text x="77.1975%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9475%" y="597" width="0.0795%" height="15" fill="rgb(207,186,49)" fg:x="968" fg:w="1"/><text x="77.1975%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.9475%" y="581" width="0.0795%" height="15" fill="rgb(211,212,49)" fg:x="968" fg:w="1"/><text x="77.1975%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="76.9475%" y="709" width="0.2385%" height="15" fill="rgb(229,51,41)" fg:x="968" fg:w="3"/><text x="77.1975%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="76.9475%" y="693" width="0.2385%" height="15" fill="rgb(205,225,36)" fg:x="968" fg:w="3"/><text x="77.1975%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="76.9475%" y="677" width="0.2385%" height="15" fill="rgb(209,213,45)" fg:x="968" fg:w="3"/><text x="77.1975%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.9475%" y="661" width="0.2385%" height="15" fill="rgb(219,35,49)" fg:x="968" fg:w="3"/><text x="77.1975%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.9475%" y="645" width="0.2385%" height="15" fill="rgb(215,205,22)" fg:x="968" fg:w="3"/><text x="77.1975%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.0270%" y="629" width="0.1590%" height="15" fill="rgb(248,204,34)" fg:x="969" fg:w="2"/><text x="77.2770%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.0270%" y="613" width="0.1590%" height="15" fill="rgb(219,223,31)" fg:x="969" fg:w="2"/><text x="77.2770%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.0270%" y="597" width="0.1590%" height="15" fill="rgb(236,14,8)" fg:x="969" fg:w="2"/><text x="77.2770%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.0270%" y="581" width="0.1590%" height="15" fill="rgb(243,129,23)" fg:x="969" fg:w="2"/><text x="77.2770%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="77.0270%" y="565" width="0.1590%" height="15" fill="rgb(205,204,5)" fg:x="969" fg:w="2"/><text x="77.2770%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.0270%" y="549" width="0.1590%" height="15" fill="rgb(244,115,32)" fg:x="969" fg:w="2"/><text x="77.2770%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1065%" y="533" width="0.0795%" height="15" fill="rgb(229,123,14)" fg:x="970" fg:w="1"/><text x="77.3565%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1065%" y="517" width="0.0795%" height="15" fill="rgb(250,85,1)" fg:x="970" fg:w="1"/><text x="77.3565%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1065%" y="501" width="0.0795%" height="15" fill="rgb(209,141,54)" fg:x="970" fg:w="1"/><text x="77.3565%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1065%" y="485" width="0.0795%" height="15" fill="rgb(244,107,39)" fg:x="970" fg:w="1"/><text x="77.3565%" y="495.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="77.1860%" y="677" width="0.0795%" height="15" fill="rgb(230,68,26)" fg:x="971" fg:w="1"/><text x="77.4360%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1860%" y="661" width="0.0795%" height="15" fill="rgb(220,178,33)" fg:x="971" fg:w="1"/><text x="77.4360%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1860%" y="645" width="0.0795%" height="15" fill="rgb(220,77,53)" fg:x="971" fg:w="1"/><text x="77.4360%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="77.1860%" y="629" width="0.0795%" height="15" fill="rgb(224,108,19)" fg:x="971" fg:w="1"/><text x="77.4360%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="77.1860%" y="709" width="0.1590%" height="15" fill="rgb(223,203,27)" fg:x="971" fg:w="2"/><text x="77.4360%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="77.1860%" y="693" width="0.1590%" height="15" fill="rgb(211,32,46)" fg:x="971" fg:w="2"/><text x="77.4360%" y="703.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="77.2655%" y="677" width="0.0795%" height="15" fill="rgb(240,101,27)" fg:x="972" fg:w="1"/><text x="77.5155%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4245%" y="629" width="0.0795%" height="15" fill="rgb(217,210,11)" fg:x="974" fg:w="1"/><text x="77.6745%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4245%" y="613" width="0.0795%" height="15" fill="rgb(236,130,21)" fg:x="974" fg:w="1"/><text x="77.6745%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.4245%" y="597" width="0.0795%" height="15" fill="rgb(250,136,8)" fg:x="974" fg:w="1"/><text x="77.6745%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.4245%" y="677" width="0.1590%" height="15" fill="rgb(243,223,36)" fg:x="974" fg:w="2"/><text x="77.6745%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="77.4245%" y="661" width="0.1590%" height="15" fill="rgb(246,184,8)" fg:x="974" fg:w="2"/><text x="77.6745%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.4245%" y="645" width="0.1590%" height="15" fill="rgb(222,158,36)" fg:x="974" fg:w="2"/><text x="77.6745%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.5040%" y="629" width="0.0795%" height="15" fill="rgb(210,220,19)" fg:x="975" fg:w="1"/><text x="77.7540%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.5040%" y="613" width="0.0795%" height="15" fill="rgb(246,44,38)" fg:x="975" fg:w="1"/><text x="77.7540%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="77.4245%" y="693" width="0.2385%" height="15" fill="rgb(246,186,14)" fg:x="974" fg:w="3"/><text x="77.6745%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="77.5835%" y="677" width="0.0795%" height="15" fill="rgb(233,193,20)" fg:x="976" fg:w="1"/><text x="77.8335%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.5835%" y="661" width="0.0795%" height="15" fill="rgb(215,60,5)" fg:x="976" fg:w="1"/><text x="77.8335%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="77.5835%" y="645" width="0.0795%" height="15" fill="rgb(207,128,10)" fg:x="976" fg:w="1"/><text x="77.8335%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.5835%" y="629" width="0.0795%" height="15" fill="rgb(238,84,54)" fg:x="976" fg:w="1"/><text x="77.8335%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6630%" y="597" width="0.0795%" height="15" fill="rgb(213,130,11)" fg:x="977" fg:w="1"/><text x="77.9130%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.6630%" y="581" width="0.0795%" height="15" fill="rgb(235,62,9)" fg:x="977" fg:w="1"/><text x="77.9130%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6630%" y="565" width="0.0795%" height="15" fill="rgb(222,64,24)" fg:x="977" fg:w="1"/><text x="77.9130%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6630%" y="549" width="0.0795%" height="15" fill="rgb(238,193,42)" fg:x="977" fg:w="1"/><text x="77.9130%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6630%" y="533" width="0.0795%" height="15" fill="rgb(243,204,46)" fg:x="977" fg:w="1"/><text x="77.9130%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6630%" y="517" width="0.0795%" height="15" fill="rgb(243,196,11)" fg:x="977" fg:w="1"/><text x="77.9130%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="77.6630%" y="677" width="0.1590%" height="15" fill="rgb(232,77,22)" fg:x="977" fg:w="2"/><text x="77.9130%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="77.6630%" y="661" width="0.1590%" height="15" fill="rgb(215,80,25)" fg:x="977" fg:w="2"/><text x="77.9130%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.6630%" y="645" width="0.1590%" height="15" fill="rgb(210,173,7)" fg:x="977" fg:w="2"/><text x="77.9130%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="77.6630%" y="629" width="0.1590%" height="15" fill="rgb(207,101,10)" fg:x="977" fg:w="2"/><text x="77.9130%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.6630%" y="613" width="0.1590%" height="15" fill="rgb(246,57,48)" fg:x="977" fg:w="2"/><text x="77.9130%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7424%" y="597" width="0.0795%" height="15" fill="rgb(236,184,40)" fg:x="978" fg:w="1"/><text x="77.9924%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7424%" y="581" width="0.0795%" height="15" fill="rgb(210,205,13)" fg:x="978" fg:w="1"/><text x="77.9924%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7424%" y="565" width="0.0795%" height="15" fill="rgb(231,129,42)" fg:x="978" fg:w="1"/><text x="77.9924%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7424%" y="549" width="0.0795%" height="15" fill="rgb(220,229,54)" fg:x="978" fg:w="1"/><text x="77.9924%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.7424%" y="533" width="0.0795%" height="15" fill="rgb(230,192,26)" fg:x="978" fg:w="1"/><text x="77.9924%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7424%" y="517" width="0.0795%" height="15" fill="rgb(253,18,30)" fg:x="978" fg:w="1"/><text x="77.9924%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7424%" y="501" width="0.0795%" height="15" fill="rgb(216,62,53)" fg:x="978" fg:w="1"/><text x="77.9924%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7424%" y="485" width="0.0795%" height="15" fill="rgb(230,79,29)" fg:x="978" fg:w="1"/><text x="77.9924%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7424%" y="469" width="0.0795%" height="15" fill="rgb(242,26,26)" fg:x="978" fg:w="1"/><text x="77.9924%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7424%" y="453" width="0.0795%" height="15" fill="rgb(227,125,21)" fg:x="978" fg:w="1"/><text x="77.9924%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="77.8219%" y="677" width="0.0795%" height="15" fill="rgb(229,93,26)" fg:x="979" fg:w="1"/><text x="78.0719%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.8219%" y="661" width="0.0795%" height="15" fill="rgb(227,228,8)" fg:x="979" fg:w="1"/><text x="78.0719%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="77.9014%" y="677" width="0.1590%" height="15" fill="rgb(233,56,0)" fg:x="980" fg:w="2"/><text x="78.1514%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="77.9809%" y="661" width="0.0795%" height="15" fill="rgb(225,185,17)" fg:x="981" fg:w="1"/><text x="78.2309%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.9809%" y="645" width="0.0795%" height="15" fill="rgb(238,202,30)" fg:x="981" fg:w="1"/><text x="78.2309%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.9809%" y="629" width="0.0795%" height="15" fill="rgb(236,60,13)" fg:x="981" fg:w="1"/><text x="78.2309%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0604%" y="565" width="0.0795%" height="15" fill="rgb(244,92,0)" fg:x="982" fg:w="1"/><text x="78.3104%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0604%" y="549" width="0.0795%" height="15" fill="rgb(225,57,15)" fg:x="982" fg:w="1"/><text x="78.3104%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0604%" y="533" width="0.0795%" height="15" fill="rgb(228,5,28)" fg:x="982" fg:w="1"/><text x="78.3104%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0604%" y="581" width="0.1590%" height="15" fill="rgb(252,34,51)" fg:x="982" fg:w="2"/><text x="78.3104%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.1399%" y="565" width="0.0795%" height="15" fill="rgb(235,58,7)" fg:x="983" fg:w="1"/><text x="78.3899%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="78.0604%" y="629" width="0.2385%" height="15" fill="rgb(250,132,20)" fg:x="982" fg:w="3"/><text x="78.3104%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="78.0604%" y="613" width="0.2385%" height="15" fill="rgb(217,164,0)" fg:x="982" fg:w="3"/><text x="78.3104%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="78.0604%" y="597" width="0.2385%" height="15" fill="rgb(208,220,35)" fg:x="982" fg:w="3"/><text x="78.3104%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2194%" y="581" width="0.0795%" height="15" fill="rgb(227,42,51)" fg:x="984" fg:w="1"/><text x="78.4694%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2194%" y="565" width="0.0795%" height="15" fill="rgb(225,146,38)" fg:x="984" fg:w="1"/><text x="78.4694%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2194%" y="549" width="0.0795%" height="15" fill="rgb(252,108,37)" fg:x="984" fg:w="1"/><text x="78.4694%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2194%" y="533" width="0.0795%" height="15" fill="rgb(244,101,24)" fg:x="984" fg:w="1"/><text x="78.4694%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.2194%" y="517" width="0.0795%" height="15" fill="rgb(213,161,50)" fg:x="984" fg:w="1"/><text x="78.4694%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2194%" y="501" width="0.0795%" height="15" fill="rgb(248,159,19)" fg:x="984" fg:w="1"/><text x="78.4694%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.2194%" y="485" width="0.0795%" height="15" fill="rgb(233,179,15)" fg:x="984" fg:w="1"/><text x="78.4694%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.2194%" y="469" width="0.0795%" height="15" fill="rgb(248,178,3)" fg:x="984" fg:w="1"/><text x="78.4694%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="78.2989%" y="613" width="0.0795%" height="15" fill="rgb(245,190,41)" fg:x="985" fg:w="1"/><text x="78.5489%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (74 samples, 5.88%)</title><rect x="72.5755%" y="725" width="5.8824%" height="15" fill="rgb(218,151,19)" fg:x="913" fg:w="74"/><text x="72.8255%" y="735.50">plugins..</text></g><g><title>plugins_core::build::Build::occupying (14 samples, 1.11%)</title><rect x="77.3450%" y="709" width="1.1129%" height="15" fill="rgb(245,25,44)" fg:x="973" fg:w="14"/><text x="77.5950%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (10 samples, 0.79%)</title><rect x="77.6630%" y="693" width="0.7949%" height="15" fill="rgb(235,172,47)" fg:x="977" fg:w="10"/><text x="77.9130%" y="703.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (5 samples, 0.40%)</title><rect x="78.0604%" y="677" width="0.3975%" height="15" fill="rgb(246,33,12)" fg:x="982" fg:w="5"/><text x="78.3104%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="78.0604%" y="661" width="0.3975%" height="15" fill="rgb(214,124,7)" fg:x="982" fg:w="5"/><text x="78.3104%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="78.0604%" y="645" width="0.3975%" height="15" fill="rgb(246,186,18)" fg:x="982" fg:w="5"/><text x="78.3104%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.2989%" y="629" width="0.1590%" height="15" fill="rgb(231,94,1)" fg:x="985" fg:w="2"/><text x="78.5489%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.3784%" y="613" width="0.0795%" height="15" fill="rgb(208,33,48)" fg:x="986" fg:w="1"/><text x="78.6284%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.3784%" y="597" width="0.0795%" height="15" fill="rgb(208,195,44)" fg:x="986" fg:w="1"/><text x="78.6284%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3784%" y="581" width="0.0795%" height="15" fill="rgb(226,13,52)" fg:x="986" fg:w="1"/><text x="78.6284%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.3784%" y="565" width="0.0795%" height="15" fill="rgb(217,219,45)" fg:x="986" fg:w="1"/><text x="78.6284%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3784%" y="549" width="0.0795%" height="15" fill="rgb(223,45,25)" fg:x="986" fg:w="1"/><text x="78.6284%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3784%" y="533" width="0.0795%" height="15" fill="rgb(241,163,0)" fg:x="986" fg:w="1"/><text x="78.6284%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3784%" y="517" width="0.0795%" height="15" fill="rgb(216,68,47)" fg:x="986" fg:w="1"/><text x="78.6284%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3784%" y="501" width="0.0795%" height="15" fill="rgb(236,119,45)" fg:x="986" fg:w="1"/><text x="78.6284%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3784%" y="485" width="0.0795%" height="15" fill="rgb(209,188,24)" fg:x="986" fg:w="1"/><text x="78.6284%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.4579%" y="677" width="0.0795%" height="15" fill="rgb(221,118,7)" fg:x="987" fg:w="1"/><text x="78.7079%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.4579%" y="661" width="0.0795%" height="15" fill="rgb(213,148,43)" fg:x="987" fg:w="1"/><text x="78.7079%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.4579%" y="645" width="0.0795%" height="15" fill="rgb(231,21,43)" fg:x="987" fg:w="1"/><text x="78.7079%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="78.5374%" y="677" width="0.0795%" height="15" fill="rgb(232,213,43)" fg:x="988" fg:w="1"/><text x="78.7874%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="78.6169%" y="661" width="0.0795%" height="15" fill="rgb(239,145,50)" fg:x="989" fg:w="1"/><text x="78.8669%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="78.6169%" y="645" width="0.0795%" height="15" fill="rgb(222,131,18)" fg:x="989" fg:w="1"/><text x="78.8669%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="78.4579%" y="693" width="0.3975%" height="15" fill="rgb(243,181,13)" fg:x="987" fg:w="5"/><text x="78.7079%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="78.6169%" y="677" width="0.2385%" height="15" fill="rgb(212,74,41)" fg:x="989" fg:w="3"/><text x="78.8669%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="78.6963%" y="661" width="0.1590%" height="15" fill="rgb(237,143,34)" fg:x="990" fg:w="2"/><text x="78.9463%" y="671.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7758%" y="645" width="0.0795%" height="15" fill="rgb(228,139,0)" fg:x="991" fg:w="1"/><text x="79.0258%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.7758%" y="629" width="0.0795%" height="15" fill="rgb(227,214,11)" fg:x="991" fg:w="1"/><text x="79.0258%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7758%" y="613" width="0.0795%" height="15" fill="rgb(228,118,39)" fg:x="991" fg:w="1"/><text x="79.0258%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="78.4579%" y="725" width="0.4769%" height="15" fill="rgb(207,117,22)" fg:x="987" fg:w="6"/><text x="78.7079%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="78.4579%" y="709" width="0.4769%" height="15" fill="rgb(225,91,8)" fg:x="987" fg:w="6"/><text x="78.7079%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="78.8553%" y="693" width="0.0795%" height="15" fill="rgb(230,219,48)" fg:x="992" fg:w="1"/><text x="79.1053%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="78.8553%" y="677" width="0.0795%" height="15" fill="rgb(244,0,23)" fg:x="992" fg:w="1"/><text x="79.1053%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.0143%" y="693" width="0.0795%" height="15" fill="rgb(206,212,23)" fg:x="994" fg:w="1"/><text x="79.2643%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.0143%" y="677" width="0.0795%" height="15" fill="rgb(254,62,10)" fg:x="994" fg:w="1"/><text x="79.2643%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.0143%" y="661" width="0.0795%" height="15" fill="rgb(236,58,8)" fg:x="994" fg:w="1"/><text x="79.2643%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0143%" y="645" width="0.0795%" height="15" fill="rgb(232,212,17)" fg:x="994" fg:w="1"/><text x="79.2643%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0143%" y="629" width="0.0795%" height="15" fill="rgb(206,132,9)" fg:x="994" fg:w="1"/><text x="79.2643%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0143%" y="613" width="0.0795%" height="15" fill="rgb(234,97,28)" fg:x="994" fg:w="1"/><text x="79.2643%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.0143%" y="597" width="0.0795%" height="15" fill="rgb(254,144,9)" fg:x="994" fg:w="1"/><text x="79.2643%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.1733%" y="645" width="0.0795%" height="15" fill="rgb(244,204,43)" fg:x="996" fg:w="1"/><text x="79.4233%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.1733%" y="629" width="0.0795%" height="15" fill="rgb(248,177,16)" fg:x="996" fg:w="1"/><text x="79.4233%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.1733%" y="613" width="0.0795%" height="15" fill="rgb(219,110,15)" fg:x="996" fg:w="1"/><text x="79.4233%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.1733%" y="597" width="0.0795%" height="15" fill="rgb(212,203,25)" fg:x="996" fg:w="1"/><text x="79.4233%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.1733%" y="581" width="0.0795%" height="15" fill="rgb(205,50,1)" fg:x="996" fg:w="1"/><text x="79.4233%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2528%" y="613" width="0.0795%" height="15" fill="rgb(222,152,41)" fg:x="997" fg:w="1"/><text x="79.5028%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.2528%" y="597" width="0.0795%" height="15" fill="rgb(236,83,3)" fg:x="997" fg:w="1"/><text x="79.5028%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2528%" y="581" width="0.0795%" height="15" fill="rgb(214,30,54)" fg:x="997" fg:w="1"/><text x="79.5028%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2528%" y="565" width="0.0795%" height="15" fill="rgb(250,117,31)" fg:x="997" fg:w="1"/><text x="79.5028%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2528%" y="549" width="0.0795%" height="15" fill="rgb(228,77,14)" fg:x="997" fg:w="1"/><text x="79.5028%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2528%" y="533" width="0.0795%" height="15" fill="rgb(241,3,28)" fg:x="997" fg:w="1"/><text x="79.5028%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2528%" y="517" width="0.0795%" height="15" fill="rgb(221,175,52)" fg:x="997" fg:w="1"/><text x="79.5028%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (155 samples, 12.32%)</title><rect x="67.0906%" y="741" width="12.3211%" height="15" fill="rgb(237,91,6)" fg:x="844" fg:w="155"/><text x="67.3406%" y="751.50">&lt;tests::HoldingKey..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (6 samples, 0.48%)</title><rect x="78.9348%" y="725" width="0.4769%" height="15" fill="rgb(246,46,42)" fg:x="993" fg:w="6"/><text x="79.1848%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="78.9348%" y="709" width="0.4769%" height="15" fill="rgb(235,199,0)" fg:x="993" fg:w="6"/><text x="79.1848%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="79.0938%" y="693" width="0.3180%" height="15" fill="rgb(224,44,40)" fg:x="995" fg:w="4"/><text x="79.3438%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="79.1733%" y="677" width="0.2385%" height="15" fill="rgb(209,24,35)" fg:x="996" fg:w="3"/><text x="79.4233%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="79.1733%" y="661" width="0.2385%" height="15" fill="rgb(244,46,22)" fg:x="996" fg:w="3"/><text x="79.4233%" y="671.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="79.2528%" y="645" width="0.1590%" height="15" fill="rgb(235,99,8)" fg:x="997" fg:w="2"/><text x="79.5028%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="79.2528%" y="629" width="0.1590%" height="15" fill="rgb(218,127,36)" fg:x="997" fg:w="2"/><text x="79.5028%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3323%" y="613" width="0.0795%" height="15" fill="rgb(238,47,46)" fg:x="998" fg:w="1"/><text x="79.5823%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.3323%" y="597" width="0.0795%" height="15" fill="rgb(233,65,17)" fg:x="998" fg:w="1"/><text x="79.5823%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3323%" y="581" width="0.0795%" height="15" fill="rgb(239,22,33)" fg:x="998" fg:w="1"/><text x="79.5823%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.3323%" y="565" width="0.0795%" height="15" fill="rgb(243,66,43)" fg:x="998" fg:w="1"/><text x="79.5823%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.3323%" y="549" width="0.0795%" height="15" fill="rgb(235,210,28)" fg:x="998" fg:w="1"/><text x="79.5823%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3323%" y="533" width="0.0795%" height="15" fill="rgb(205,191,50)" fg:x="998" fg:w="1"/><text x="79.5823%" y="543.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="79.4118%" y="725" width="0.0795%" height="15" fill="rgb(251,217,19)" fg:x="999" fg:w="1"/><text x="79.6618%" y="735.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="79.4118%" y="709" width="0.0795%" height="15" fill="rgb(205,174,37)" fg:x="999" fg:w="1"/><text x="79.6618%" y="719.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="79.4118%" y="693" width="0.0795%" height="15" fill="rgb(212,158,42)" fg:x="999" fg:w="1"/><text x="79.6618%" y="703.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="79.4118%" y="677" width="0.0795%" height="15" fill="rgb(212,208,51)" fg:x="999" fg:w="1"/><text x="79.6618%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="79.4118%" y="661" width="0.0795%" height="15" fill="rgb(225,198,20)" fg:x="999" fg:w="1"/><text x="79.6618%" y="671.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="79.4118%" y="645" width="0.0795%" height="15" fill="rgb(247,41,44)" fg:x="999" fg:w="1"/><text x="79.6618%" y="655.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="79.4118%" y="629" width="0.0795%" height="15" fill="rgb(228,33,41)" fg:x="999" fg:w="1"/><text x="79.6618%" y="639.50"></text></g><g><title>std::sys::unix::os::env_read_lock (1 samples, 0.08%)</title><rect x="79.4118%" y="613" width="0.0795%" height="15" fill="rgb(215,47,52)" fg:x="999" fg:w="1"/><text x="79.6618%" y="623.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.08%)</title><rect x="79.4118%" y="597" width="0.0795%" height="15" fill="rgb(248,106,37)" fg:x="999" fg:w="1"/><text x="79.6618%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (1 samples, 0.08%)</title><rect x="79.4118%" y="581" width="0.0795%" height="15" fill="rgb(238,91,29)" fg:x="999" fg:w="1"/><text x="79.6618%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.08%)</title><rect x="79.4118%" y="565" width="0.0795%" height="15" fill="rgb(226,111,40)" fg:x="999" fg:w="1"/><text x="79.6618%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.08%)</title><rect x="79.4118%" y="549" width="0.0795%" height="15" fill="rgb(229,159,36)" fg:x="999" fg:w="1"/><text x="79.6618%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="79.5707%" y="693" width="0.0795%" height="15" fill="rgb(221,109,4)" fg:x="1001" fg:w="1"/><text x="79.8207%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7297%" y="677" width="0.0795%" height="15" fill="rgb(236,56,25)" fg:x="1003" fg:w="1"/><text x="79.9797%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="79.8092%" y="677" width="0.0795%" height="15" fill="rgb(244,113,23)" fg:x="1004" fg:w="1"/><text x="80.0592%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="79.8092%" y="661" width="0.0795%" height="15" fill="rgb(249,132,2)" fg:x="1004" fg:w="1"/><text x="80.0592%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8092%" y="645" width="0.0795%" height="15" fill="rgb(205,185,21)" fg:x="1004" fg:w="1"/><text x="80.0592%" y="655.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="79.9682%" y="645" width="0.1590%" height="15" fill="rgb(245,130,2)" fg:x="1006" fg:w="2"/><text x="80.2182%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="79.9682%" y="629" width="0.1590%" height="15" fill="rgb(246,71,26)" fg:x="1006" fg:w="2"/><text x="80.2182%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="79.9682%" y="613" width="0.1590%" height="15" fill="rgb(234,194,6)" fg:x="1006" fg:w="2"/><text x="80.2182%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="79.9682%" y="597" width="0.1590%" height="15" fill="rgb(206,24,32)" fg:x="1006" fg:w="2"/><text x="80.2182%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="80.0477%" y="581" width="0.0795%" height="15" fill="rgb(233,7,54)" fg:x="1007" fg:w="1"/><text x="80.2977%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (10 samples, 0.79%)</title><rect x="79.4913%" y="709" width="0.7949%" height="15" fill="rgb(252,46,1)" fg:x="1000" fg:w="10"/><text x="79.7413%" y="719.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (8 samples, 0.64%)</title><rect x="79.6502%" y="693" width="0.6359%" height="15" fill="rgb(216,113,53)" fg:x="1002" fg:w="8"/><text x="79.9002%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="79.8887%" y="677" width="0.3975%" height="15" fill="rgb(215,40,24)" fg:x="1005" fg:w="5"/><text x="80.1387%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="79.8887%" y="661" width="0.3975%" height="15" fill="rgb(233,222,8)" fg:x="1005" fg:w="5"/><text x="80.1387%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="80.1272%" y="645" width="0.1590%" height="15" fill="rgb(248,73,28)" fg:x="1008" fg:w="2"/><text x="80.3772%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.1272%" y="629" width="0.1590%" height="15" fill="rgb(247,126,28)" fg:x="1008" fg:w="2"/><text x="80.3772%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="80.1272%" y="613" width="0.1590%" height="15" fill="rgb(242,173,54)" fg:x="1008" fg:w="2"/><text x="80.3772%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="80.1272%" y="597" width="0.1590%" height="15" fill="rgb(244,186,22)" fg:x="1008" fg:w="2"/><text x="80.3772%" y="607.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="80.1272%" y="581" width="0.1590%" height="15" fill="rgb(231,187,4)" fg:x="1008" fg:w="2"/><text x="80.3772%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.2067%" y="565" width="0.0795%" height="15" fill="rgb(252,66,47)" fg:x="1009" fg:w="1"/><text x="80.4567%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.2067%" y="549" width="0.0795%" height="15" fill="rgb(240,228,28)" fg:x="1009" fg:w="1"/><text x="80.4567%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.4452%" y="645" width="0.0795%" height="15" fill="rgb(237,63,43)" fg:x="1012" fg:w="1"/><text x="80.6952%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4452%" y="629" width="0.0795%" height="15" fill="rgb(214,1,44)" fg:x="1012" fg:w="1"/><text x="80.6952%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4452%" y="613" width="0.0795%" height="15" fill="rgb(212,2,46)" fg:x="1012" fg:w="1"/><text x="80.6952%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.4452%" y="597" width="0.0795%" height="15" fill="rgb(213,142,5)" fg:x="1012" fg:w="1"/><text x="80.6952%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.6836%" y="629" width="0.0795%" height="15" fill="rgb(229,135,1)" fg:x="1015" fg:w="1"/><text x="80.9336%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.7631%" y="581" width="0.1590%" height="15" fill="rgb(252,98,38)" fg:x="1016" fg:w="2"/><text x="81.0131%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8426%" y="565" width="0.0795%" height="15" fill="rgb(206,89,40)" fg:x="1017" fg:w="1"/><text x="81.0926%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8426%" y="549" width="0.0795%" height="15" fill="rgb(219,73,36)" fg:x="1017" fg:w="1"/><text x="81.0926%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8426%" y="533" width="0.0795%" height="15" fill="rgb(207,168,32)" fg:x="1017" fg:w="1"/><text x="81.0926%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.9221%" y="581" width="0.0795%" height="15" fill="rgb(215,113,21)" fg:x="1018" fg:w="1"/><text x="81.1721%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9221%" y="565" width="0.0795%" height="15" fill="rgb(217,144,43)" fg:x="1018" fg:w="1"/><text x="81.1721%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9221%" y="549" width="0.0795%" height="15" fill="rgb(249,48,50)" fg:x="1018" fg:w="1"/><text x="81.1721%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="80.7631%" y="613" width="0.3180%" height="15" fill="rgb(242,1,26)" fg:x="1016" fg:w="4"/><text x="81.0131%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.7631%" y="597" width="0.3180%" height="15" fill="rgb(231,167,42)" fg:x="1016" fg:w="4"/><text x="81.0131%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0016%" y="581" width="0.0795%" height="15" fill="rgb(242,177,45)" fg:x="1019" fg:w="1"/><text x="81.2516%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.0016%" y="565" width="0.0795%" height="15" fill="rgb(232,121,42)" fg:x="1019" fg:w="1"/><text x="81.2516%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.0016%" y="549" width="0.0795%" height="15" fill="rgb(205,8,42)" fg:x="1019" fg:w="1"/><text x="81.2516%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.0811%" y="613" width="0.1590%" height="15" fill="rgb(238,199,24)" fg:x="1020" fg:w="2"/><text x="81.3311%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.0811%" y="597" width="0.1590%" height="15" fill="rgb(228,112,2)" fg:x="1020" fg:w="2"/><text x="81.3311%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.1606%" y="581" width="0.0795%" height="15" fill="rgb(215,115,33)" fg:x="1021" fg:w="1"/><text x="81.4106%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.2401%" y="565" width="0.0795%" height="15" fill="rgb(230,209,34)" fg:x="1022" fg:w="1"/><text x="81.4901%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.2401%" y="549" width="0.0795%" height="15" fill="rgb(246,76,12)" fg:x="1022" fg:w="1"/><text x="81.4901%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.2401%" y="533" width="0.0795%" height="15" fill="rgb(240,110,9)" fg:x="1022" fg:w="1"/><text x="81.4901%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.2401%" y="517" width="0.0795%" height="15" fill="rgb(224,94,46)" fg:x="1022" fg:w="1"/><text x="81.4901%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.2401%" y="501" width="0.0795%" height="15" fill="rgb(247,150,22)" fg:x="1022" fg:w="1"/><text x="81.4901%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="80.7631%" y="629" width="0.7154%" height="15" fill="rgb(249,85,13)" fg:x="1016" fg:w="9"/><text x="81.0131%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.2401%" y="613" width="0.2385%" height="15" fill="rgb(208,77,41)" fg:x="1022" fg:w="3"/><text x="81.4901%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.2401%" y="597" width="0.2385%" height="15" fill="rgb(240,42,44)" fg:x="1022" fg:w="3"/><text x="81.4901%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.2401%" y="581" width="0.2385%" height="15" fill="rgb(222,10,51)" fg:x="1022" fg:w="3"/><text x="81.4901%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.3196%" y="565" width="0.1590%" height="15" fill="rgb(208,146,53)" fg:x="1023" fg:w="2"/><text x="81.5696%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.3196%" y="549" width="0.1590%" height="15" fill="rgb(236,162,23)" fg:x="1023" fg:w="2"/><text x="81.5696%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="81.3196%" y="533" width="0.1590%" height="15" fill="rgb(218,66,21)" fg:x="1023" fg:w="2"/><text x="81.5696%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.11%)</title><rect x="80.4452%" y="661" width="1.1129%" height="15" fill="rgb(233,6,47)" fg:x="1012" fg:w="14"/><text x="80.6952%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.03%)</title><rect x="80.5246%" y="645" width="1.0334%" height="15" fill="rgb(236,59,51)" fg:x="1013" fg:w="13"/><text x="80.7746%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4785%" y="629" width="0.0795%" height="15" fill="rgb(242,12,46)" fg:x="1025" fg:w="1"/><text x="81.7285%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.4785%" y="613" width="0.0795%" height="15" fill="rgb(243,142,19)" fg:x="1025" fg:w="1"/><text x="81.7285%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.4785%" y="597" width="0.0795%" height="15" fill="rgb(217,28,17)" fg:x="1025" fg:w="1"/><text x="81.7285%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="81.5580%" y="629" width="0.1590%" height="15" fill="rgb(228,2,27)" fg:x="1026" fg:w="2"/><text x="81.8080%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="81.7965%" y="581" width="0.1590%" height="15" fill="rgb(214,221,4)" fg:x="1029" fg:w="2"/><text x="82.0465%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="81.9555%" y="581" width="0.0795%" height="15" fill="rgb(224,69,26)" fg:x="1031" fg:w="1"/><text x="82.2055%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.9555%" y="565" width="0.0795%" height="15" fill="rgb(219,70,4)" fg:x="1031" fg:w="1"/><text x="82.2055%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9555%" y="549" width="0.0795%" height="15" fill="rgb(218,157,39)" fg:x="1031" fg:w="1"/><text x="82.2055%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.5580%" y="661" width="0.5564%" height="15" fill="rgb(238,36,28)" fg:x="1026" fg:w="7"/><text x="81.8080%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="81.5580%" y="645" width="0.5564%" height="15" fill="rgb(232,29,0)" fg:x="1026" fg:w="7"/><text x="81.8080%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.7170%" y="629" width="0.3975%" height="15" fill="rgb(243,138,46)" fg:x="1028" fg:w="5"/><text x="81.9670%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.7170%" y="613" width="0.3975%" height="15" fill="rgb(232,186,41)" fg:x="1028" fg:w="5"/><text x="81.9670%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="81.7965%" y="597" width="0.3180%" height="15" fill="rgb(252,166,17)" fg:x="1029" fg:w="4"/><text x="82.0465%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.0350%" y="581" width="0.0795%" height="15" fill="rgb(228,179,12)" fg:x="1032" fg:w="1"/><text x="82.2850%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="82.1940%" y="597" width="0.1590%" height="15" fill="rgb(254,205,53)" fg:x="1034" fg:w="2"/><text x="82.4440%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="82.3529%" y="581" width="0.1590%" height="15" fill="rgb(224,163,47)" fg:x="1036" fg:w="2"/><text x="82.6029%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5914%" y="549" width="0.0795%" height="15" fill="rgb(208,43,47)" fg:x="1039" fg:w="1"/><text x="82.8414%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="82.1145%" y="629" width="0.6359%" height="15" fill="rgb(224,198,38)" fg:x="1033" fg:w="8"/><text x="82.3645%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="82.1145%" y="613" width="0.6359%" height="15" fill="rgb(234,12,40)" fg:x="1033" fg:w="8"/><text x="82.3645%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="82.3529%" y="597" width="0.3975%" height="15" fill="rgb(237,212,39)" fg:x="1036" fg:w="5"/><text x="82.6029%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.5119%" y="581" width="0.2385%" height="15" fill="rgb(253,2,33)" fg:x="1038" fg:w="3"/><text x="82.7619%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.5914%" y="565" width="0.1590%" height="15" fill="rgb(251,29,16)" fg:x="1039" fg:w="2"/><text x="82.8414%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6709%" y="549" width="0.0795%" height="15" fill="rgb(214,38,29)" fg:x="1040" fg:w="1"/><text x="82.9209%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6709%" y="533" width="0.0795%" height="15" fill="rgb(226,226,29)" fg:x="1040" fg:w="1"/><text x="82.9209%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6709%" y="517" width="0.0795%" height="15" fill="rgb(236,79,42)" fg:x="1040" fg:w="1"/><text x="82.9209%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6709%" y="501" width="0.0795%" height="15" fill="rgb(222,12,36)" fg:x="1040" fg:w="1"/><text x="82.9209%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6709%" y="485" width="0.0795%" height="15" fill="rgb(232,123,44)" fg:x="1040" fg:w="1"/><text x="82.9209%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="82.9889%" y="565" width="0.0795%" height="15" fill="rgb(234,93,50)" fg:x="1044" fg:w="1"/><text x="83.2389%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="82.9889%" y="549" width="0.0795%" height="15" fill="rgb(210,86,49)" fg:x="1044" fg:w="1"/><text x="83.2389%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="82.9889%" y="581" width="0.2385%" height="15" fill="rgb(224,91,54)" fg:x="1044" fg:w="3"/><text x="83.2389%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="83.0684%" y="565" width="0.1590%" height="15" fill="rgb(239,169,9)" fg:x="1045" fg:w="2"/><text x="83.3184%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="82.7504%" y="613" width="0.5564%" height="15" fill="rgb(238,29,17)" fg:x="1041" fg:w="7"/><text x="83.0004%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="82.7504%" y="597" width="0.5564%" height="15" fill="rgb(227,160,22)" fg:x="1041" fg:w="7"/><text x="83.0004%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.2273%" y="581" width="0.0795%" height="15" fill="rgb(231,129,52)" fg:x="1047" fg:w="1"/><text x="83.4773%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3068%" y="613" width="0.0795%" height="15" fill="rgb(241,184,9)" fg:x="1048" fg:w="1"/><text x="83.5568%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3068%" y="597" width="0.0795%" height="15" fill="rgb(217,43,48)" fg:x="1048" fg:w="1"/><text x="83.5568%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="83.3863%" y="597" width="0.0795%" height="15" fill="rgb(213,49,1)" fg:x="1049" fg:w="1"/><text x="83.6363%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.3863%" y="581" width="0.0795%" height="15" fill="rgb(223,79,39)" fg:x="1049" fg:w="1"/><text x="83.6363%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.4658%" y="597" width="0.0795%" height="15" fill="rgb(228,227,46)" fg:x="1050" fg:w="1"/><text x="83.7158%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4658%" y="581" width="0.0795%" height="15" fill="rgb(245,89,41)" fg:x="1050" fg:w="1"/><text x="83.7158%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="83.5453%" y="581" width="0.0795%" height="15" fill="rgb(253,83,21)" fg:x="1051" fg:w="1"/><text x="83.7953%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="83.5453%" y="565" width="0.0795%" height="15" fill="rgb(229,116,51)" fg:x="1051" fg:w="1"/><text x="83.7953%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="83.5453%" y="549" width="0.0795%" height="15" fill="rgb(246,67,26)" fg:x="1051" fg:w="1"/><text x="83.7953%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="83.5453%" y="533" width="0.0795%" height="15" fill="rgb(250,117,20)" fg:x="1051" fg:w="1"/><text x="83.7953%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.6248%" y="581" width="0.0795%" height="15" fill="rgb(207,88,17)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.6248%" y="565" width="0.0795%" height="15" fill="rgb(212,98,36)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.6248%" y="549" width="0.0795%" height="15" fill="rgb(221,72,6)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.6248%" y="533" width="0.0795%" height="15" fill="rgb(235,129,19)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.6248%" y="517" width="0.0795%" height="15" fill="rgb(237,200,6)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.6248%" y="501" width="0.0795%" height="15" fill="rgb(239,69,54)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.6248%" y="485" width="0.0795%" height="15" fill="rgb(214,68,45)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.6248%" y="469" width="0.0795%" height="15" fill="rgb(254,160,8)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.6248%" y="453" width="0.0795%" height="15" fill="rgb(215,226,31)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.6248%" y="437" width="0.0795%" height="15" fill="rgb(253,6,35)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.6248%" y="421" width="0.0795%" height="15" fill="rgb(219,96,42)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.6248%" y="405" width="0.0795%" height="15" fill="rgb(207,170,13)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6248%" y="389" width="0.0795%" height="15" fill="rgb(239,101,5)" fg:x="1052" fg:w="1"/><text x="83.8748%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.7043%" y="581" width="0.0795%" height="15" fill="rgb(228,183,34)" fg:x="1053" fg:w="1"/><text x="83.9543%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.7838%" y="581" width="0.0795%" height="15" fill="rgb(205,28,31)" fg:x="1054" fg:w="1"/><text x="84.0338%" y="591.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="83.5453%" y="597" width="0.4769%" height="15" fill="rgb(214,118,50)" fg:x="1051" fg:w="6"/><text x="83.7953%" y="607.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="83.8633%" y="581" width="0.1590%" height="15" fill="rgb(213,108,51)" fg:x="1055" fg:w="2"/><text x="84.1133%" y="591.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="83.8633%" y="565" width="0.1590%" height="15" fill="rgb(238,56,37)" fg:x="1055" fg:w="2"/><text x="84.1133%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.9428%" y="549" width="0.0795%" height="15" fill="rgb(214,136,28)" fg:x="1056" fg:w="1"/><text x="84.1928%" y="559.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="83.3863%" y="613" width="0.7154%" height="15" fill="rgb(221,201,54)" fg:x="1049" fg:w="9"/><text x="83.6363%" y="623.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="84.0223%" y="597" width="0.0795%" height="15" fill="rgb(228,216,39)" fg:x="1057" fg:w="1"/><text x="84.2723%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (26 samples, 2.07%)</title><rect x="82.1145%" y="645" width="2.0668%" height="15" fill="rgb(207,229,49)" fg:x="1033" fg:w="26"/><text x="82.3645%" y="655.50">&lt;..</text></g><g><title>treediff::diff::diff (18 samples, 1.43%)</title><rect x="82.7504%" y="629" width="1.4308%" height="15" fill="rgb(224,23,43)" fg:x="1041" fg:w="18"/><text x="83.0004%" y="639.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="84.1017%" y="613" width="0.0795%" height="15" fill="rgb(247,97,18)" fg:x="1058" fg:w="1"/><text x="84.3517%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.2607%" y="613" width="0.1590%" height="15" fill="rgb(232,53,32)" fg:x="1060" fg:w="2"/><text x="84.5107%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3402%" y="597" width="0.0795%" height="15" fill="rgb(247,38,23)" fg:x="1061" fg:w="1"/><text x="84.5902%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.3402%" y="581" width="0.0795%" height="15" fill="rgb(228,101,52)" fg:x="1061" fg:w="1"/><text x="84.5902%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4197%" y="613" width="0.0795%" height="15" fill="rgb(231,45,36)" fg:x="1062" fg:w="1"/><text x="84.6697%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4992%" y="581" width="0.0795%" height="15" fill="rgb(221,183,50)" fg:x="1063" fg:w="1"/><text x="84.7492%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="84.4992%" y="613" width="0.1590%" height="15" fill="rgb(251,132,12)" fg:x="1063" fg:w="2"/><text x="84.7492%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.4992%" y="597" width="0.1590%" height="15" fill="rgb(252,50,16)" fg:x="1063" fg:w="2"/><text x="84.7492%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5787%" y="581" width="0.0795%" height="15" fill="rgb(224,60,15)" fg:x="1064" fg:w="1"/><text x="84.8287%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.8967%" y="565" width="0.0795%" height="15" fill="rgb(254,2,34)" fg:x="1068" fg:w="1"/><text x="85.1467%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8967%" y="549" width="0.0795%" height="15" fill="rgb(232,154,8)" fg:x="1068" fg:w="1"/><text x="85.1467%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8967%" y="533" width="0.0795%" height="15" fill="rgb(235,190,52)" fg:x="1068" fg:w="1"/><text x="85.1467%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3736%" y="501" width="0.0795%" height="15" fill="rgb(213,218,38)" fg:x="1074" fg:w="1"/><text x="85.6236%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="85.2941%" y="533" width="0.2385%" height="15" fill="rgb(237,50,37)" fg:x="1073" fg:w="3"/><text x="85.5441%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.3736%" y="517" width="0.1590%" height="15" fill="rgb(235,51,35)" fg:x="1074" fg:w="2"/><text x="85.6236%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.4531%" y="501" width="0.0795%" height="15" fill="rgb(244,40,52)" fg:x="1075" fg:w="1"/><text x="85.7031%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.5326%" y="485" width="0.0795%" height="15" fill="rgb(217,225,45)" fg:x="1076" fg:w="1"/><text x="85.7826%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6121%" y="469" width="0.0795%" height="15" fill="rgb(247,191,36)" fg:x="1077" fg:w="1"/><text x="85.8621%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="85.6916%" y="453" width="0.1590%" height="15" fill="rgb(251,144,31)" fg:x="1078" fg:w="2"/><text x="85.9416%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7711%" y="437" width="0.0795%" height="15" fill="rgb(227,155,41)" fg:x="1079" fg:w="1"/><text x="86.0211%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7711%" y="421" width="0.0795%" height="15" fill="rgb(236,121,36)" fg:x="1079" fg:w="1"/><text x="86.0211%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.7711%" y="405" width="0.0795%" height="15" fill="rgb(221,128,28)" fg:x="1079" fg:w="1"/><text x="86.0211%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="85.6121%" y="485" width="0.3180%" height="15" fill="rgb(249,67,50)" fg:x="1077" fg:w="4"/><text x="85.8621%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="85.6916%" y="469" width="0.2385%" height="15" fill="rgb(241,126,38)" fg:x="1078" fg:w="3"/><text x="85.9416%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8506%" y="453" width="0.0795%" height="15" fill="rgb(239,33,14)" fg:x="1080" fg:w="1"/><text x="86.1006%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.19%)</title><rect x="84.8172%" y="581" width="1.1924%" height="15" fill="rgb(207,221,54)" fg:x="1067" fg:w="15"/><text x="85.0672%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.03%)</title><rect x="84.9762%" y="565" width="1.0334%" height="15" fill="rgb(242,138,43)" fg:x="1069" fg:w="13"/><text x="85.2262%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.03%)</title><rect x="84.9762%" y="549" width="1.0334%" height="15" fill="rgb(231,118,19)" fg:x="1069" fg:w="13"/><text x="85.2262%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="85.5326%" y="533" width="0.4769%" height="15" fill="rgb(214,128,54)" fg:x="1076" fg:w="6"/><text x="85.7826%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="85.5326%" y="517" width="0.4769%" height="15" fill="rgb(236,136,6)" fg:x="1076" fg:w="6"/><text x="85.7826%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="85.5326%" y="501" width="0.4769%" height="15" fill="rgb(247,30,38)" fg:x="1076" fg:w="6"/><text x="85.7826%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9300%" y="485" width="0.0795%" height="15" fill="rgb(249,189,40)" fg:x="1081" fg:w="1"/><text x="86.1800%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.35%)</title><rect x="84.8172%" y="597" width="1.3514%" height="15" fill="rgb(247,179,7)" fg:x="1067" fg:w="17"/><text x="85.0672%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="86.0095%" y="581" width="0.1590%" height="15" fill="rgb(239,46,52)" fg:x="1082" fg:w="2"/><text x="86.2595%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0890%" y="565" width="0.0795%" height="15" fill="rgb(225,28,52)" fg:x="1083" fg:w="1"/><text x="86.3390%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (27 samples, 2.15%)</title><rect x="84.1812%" y="645" width="2.1463%" height="15" fill="rgb(217,208,44)" fg:x="1059" fg:w="27"/><text x="84.4312%" y="655.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.15%)</title><rect x="84.1812%" y="629" width="2.1463%" height="15" fill="rgb(224,11,34)" fg:x="1059" fg:w="27"/><text x="84.4312%" y="639.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 1.67%)</title><rect x="84.6582%" y="613" width="1.6693%" height="15" fill="rgb(205,134,17)" fg:x="1065" fg:w="21"/><text x="84.9082%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.1685%" y="597" width="0.1590%" height="15" fill="rgb(237,125,9)" fg:x="1084" fg:w="2"/><text x="86.4185%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2480%" y="581" width="0.0795%" height="15" fill="rgb(208,139,47)" fg:x="1085" fg:w="1"/><text x="86.4980%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="86.2480%" y="565" width="0.0795%" height="15" fill="rgb(242,5,5)" fg:x="1085" fg:w="1"/><text x="86.4980%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="86.4865%" y="469" width="0.0795%" height="15" fill="rgb(218,78,2)" fg:x="1088" fg:w="1"/><text x="86.7365%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="86.5660%" y="421" width="0.0795%" height="15" fill="rgb(217,75,16)" fg:x="1089" fg:w="1"/><text x="86.8160%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.5660%" y="405" width="0.0795%" height="15" fill="rgb(212,56,17)" fg:x="1089" fg:w="1"/><text x="86.8160%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="86.6455%" y="421" width="0.1590%" height="15" fill="rgb(228,61,29)" fg:x="1090" fg:w="2"/><text x="86.8955%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="86.7250%" y="405" width="0.0795%" height="15" fill="rgb(247,202,38)" fg:x="1091" fg:w="1"/><text x="86.9750%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="86.5660%" y="453" width="0.3180%" height="15" fill="rgb(211,216,43)" fg:x="1089" fg:w="4"/><text x="86.8160%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="86.5660%" y="437" width="0.3180%" height="15" fill="rgb(220,7,49)" fg:x="1089" fg:w="4"/><text x="86.8160%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8045%" y="421" width="0.0795%" height="15" fill="rgb(219,158,7)" fg:x="1092" fg:w="1"/><text x="87.0545%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8045%" y="405" width="0.0795%" height="15" fill="rgb(206,127,9)" fg:x="1092" fg:w="1"/><text x="87.0545%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.8045%" y="389" width="0.0795%" height="15" fill="rgb(206,103,43)" fg:x="1092" fg:w="1"/><text x="87.0545%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="86.4865%" y="485" width="0.4769%" height="15" fill="rgb(240,108,41)" fg:x="1088" fg:w="6"/><text x="86.7365%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="86.5660%" y="469" width="0.3975%" height="15" fill="rgb(252,212,6)" fg:x="1089" fg:w="5"/><text x="86.8160%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.8839%" y="453" width="0.0795%" height="15" fill="rgb(248,105,31)" fg:x="1093" fg:w="1"/><text x="87.1339%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="86.4070%" y="549" width="0.6359%" height="15" fill="rgb(241,123,4)" fg:x="1087" fg:w="8"/><text x="86.6570%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="86.4865%" y="533" width="0.5564%" height="15" fill="rgb(223,74,37)" fg:x="1088" fg:w="7"/><text x="86.7365%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="86.4865%" y="517" width="0.5564%" height="15" fill="rgb(251,219,28)" fg:x="1088" fg:w="7"/><text x="86.7365%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="86.4865%" y="501" width="0.5564%" height="15" fill="rgb(218,36,31)" fg:x="1088" fg:w="7"/><text x="86.7365%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9634%" y="485" width="0.0795%" height="15" fill="rgb(229,40,15)" fg:x="1094" fg:w="1"/><text x="87.2134%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.87%)</title><rect x="86.3275%" y="581" width="0.8744%" height="15" fill="rgb(208,138,37)" fg:x="1086" fg:w="11"/><text x="86.5775%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.87%)</title><rect x="86.3275%" y="565" width="0.8744%" height="15" fill="rgb(208,40,52)" fg:x="1086" fg:w="11"/><text x="86.5775%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="87.0429%" y="549" width="0.1590%" height="15" fill="rgb(246,181,48)" fg:x="1095" fg:w="2"/><text x="87.2929%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="87.0429%" y="533" width="0.1590%" height="15" fill="rgb(253,178,36)" fg:x="1095" fg:w="2"/><text x="87.2929%" y="543.50"></text></g><g><title>engine::session::Session::close (99 samples, 7.87%)</title><rect x="79.4118%" y="741" width="7.8696%" height="15" fill="rgb(210,170,6)" fg:x="999" fg:w="99"/><text x="79.6618%" y="751.50">engine::ses..</text></g><g><title>engine::session::state::State::close (98 samples, 7.79%)</title><rect x="79.4913%" y="725" width="7.7901%" height="15" fill="rgb(243,62,22)" fg:x="1000" fg:w="98"/><text x="79.7413%" y="735.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (88 samples, 7.00%)</title><rect x="80.2862%" y="709" width="6.9952%" height="15" fill="rgb(213,145,26)" fg:x="1010" fg:w="88"/><text x="80.5362%" y="719.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (88 samples, 7.00%)</title><rect x="80.2862%" y="693" width="6.9952%" height="15" fill="rgb(237,177,23)" fg:x="1010" fg:w="88"/><text x="80.5362%" y="703.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (88 samples, 7.00%)</title><rect x="80.2862%" y="677" width="6.9952%" height="15" fill="rgb(252,5,24)" fg:x="1010" fg:w="88"/><text x="80.5362%" y="687.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (65 samples, 5.17%)</title><rect x="82.1145%" y="661" width="5.1669%" height="15" fill="rgb(230,108,54)" fg:x="1033" fg:w="65"/><text x="82.3645%" y="671.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.95%)</title><rect x="86.3275%" y="645" width="0.9539%" height="15" fill="rgb(252,192,41)" fg:x="1086" fg:w="12"/><text x="86.5775%" y="655.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.95%)</title><rect x="86.3275%" y="629" width="0.9539%" height="15" fill="rgb(218,125,20)" fg:x="1086" fg:w="12"/><text x="86.5775%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.95%)</title><rect x="86.3275%" y="613" width="0.9539%" height="15" fill="rgb(230,223,15)" fg:x="1086" fg:w="12"/><text x="86.5775%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.95%)</title><rect x="86.3275%" y="597" width="0.9539%" height="15" fill="rgb(239,99,47)" fg:x="1086" fg:w="12"/><text x="86.5775%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.2019%" y="581" width="0.0795%" height="15" fill="rgb(222,214,23)" fg:x="1097" fg:w="1"/><text x="87.4519%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.2019%" y="565" width="0.0795%" height="15" fill="rgb(250,98,43)" fg:x="1097" fg:w="1"/><text x="87.4519%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="87.2019%" y="549" width="0.0795%" height="15" fill="rgb(226,140,11)" fg:x="1097" fg:w="1"/><text x="87.4519%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="87.5199%" y="597" width="0.0795%" height="15" fill="rgb(239,2,22)" fg:x="1101" fg:w="1"/><text x="87.7699%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="87.5199%" y="629" width="0.1590%" height="15" fill="rgb(209,106,26)" fg:x="1101" fg:w="2"/><text x="87.7699%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="87.5199%" y="613" width="0.1590%" height="15" fill="rgb(209,135,11)" fg:x="1101" fg:w="2"/><text x="87.7699%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.5994%" y="597" width="0.0795%" height="15" fill="rgb(241,58,6)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.5994%" y="581" width="0.0795%" height="15" fill="rgb(214,78,1)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.5994%" y="565" width="0.0795%" height="15" fill="rgb(229,135,33)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5994%" y="549" width="0.0795%" height="15" fill="rgb(245,87,50)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5994%" y="533" width="0.0795%" height="15" fill="rgb(222,222,8)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.5994%" y="517" width="0.0795%" height="15" fill="rgb(214,97,50)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.5994%" y="501" width="0.0795%" height="15" fill="rgb(244,161,51)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5994%" y="485" width="0.0795%" height="15" fill="rgb(225,17,4)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5994%" y="469" width="0.0795%" height="15" fill="rgb(238,10,13)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.5994%" y="453" width="0.0795%" height="15" fill="rgb(239,169,14)" fg:x="1102" fg:w="1"/><text x="87.8494%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="87.8378%" y="549" width="0.0795%" height="15" fill="rgb(213,105,25)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="87.8378%" y="533" width="0.0795%" height="15" fill="rgb(233,4,17)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.8378%" y="517" width="0.0795%" height="15" fill="rgb(212,5,35)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.8378%" y="501" width="0.0795%" height="15" fill="rgb(216,3,14)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.8378%" y="485" width="0.0795%" height="15" fill="rgb(240,105,33)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.8378%" y="469" width="0.0795%" height="15" fill="rgb(216,73,0)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.8378%" y="453" width="0.0795%" height="15" fill="rgb(217,153,48)" fg:x="1105" fg:w="1"/><text x="88.0878%" y="463.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="87.9173%" y="533" width="0.0795%" height="15" fill="rgb(218,180,8)" fg:x="1106" fg:w="1"/><text x="88.1673%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.9173%" y="517" width="0.0795%" height="15" fill="rgb(252,168,2)" fg:x="1106" fg:w="1"/><text x="88.1673%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.9173%" y="501" width="0.0795%" height="15" fill="rgb(224,116,33)" fg:x="1106" fg:w="1"/><text x="88.1673%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.9968%" y="421" width="0.0795%" height="15" fill="rgb(229,205,17)" fg:x="1107" fg:w="1"/><text x="88.2468%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.9968%" y="405" width="0.0795%" height="15" fill="rgb(234,1,41)" fg:x="1107" fg:w="1"/><text x="88.2468%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.9968%" y="389" width="0.0795%" height="15" fill="rgb(244,185,8)" fg:x="1107" fg:w="1"/><text x="88.2468%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.9968%" y="373" width="0.0795%" height="15" fill="rgb(248,51,21)" fg:x="1107" fg:w="1"/><text x="88.2468%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.9968%" y="357" width="0.0795%" height="15" fill="rgb(248,157,31)" fg:x="1107" fg:w="1"/><text x="88.2468%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.9968%" y="341" width="0.0795%" height="15" fill="rgb(210,34,47)" fg:x="1107" fg:w="1"/><text x="88.2468%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9968%" y="325" width="0.0795%" height="15" fill="rgb(227,139,53)" fg:x="1107" fg:w="1"/><text x="88.2468%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9968%" y="309" width="0.0795%" height="15" fill="rgb(232,211,37)" fg:x="1107" fg:w="1"/><text x="88.2468%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="87.9173%" y="549" width="0.2385%" height="15" fill="rgb(236,133,10)" fg:x="1106" fg:w="3"/><text x="88.1673%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.9968%" y="533" width="0.1590%" height="15" fill="rgb(243,202,25)" fg:x="1107" fg:w="2"/><text x="88.2468%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.9968%" y="517" width="0.1590%" height="15" fill="rgb(224,59,9)" fg:x="1107" fg:w="2"/><text x="88.2468%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="87.9968%" y="501" width="0.1590%" height="15" fill="rgb(206,146,16)" fg:x="1107" fg:w="2"/><text x="88.2468%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.9968%" y="485" width="0.1590%" height="15" fill="rgb(220,47,2)" fg:x="1107" fg:w="2"/><text x="88.2468%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="87.9968%" y="469" width="0.1590%" height="15" fill="rgb(225,124,51)" fg:x="1107" fg:w="2"/><text x="88.2468%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="87.9968%" y="453" width="0.1590%" height="15" fill="rgb(241,220,50)" fg:x="1107" fg:w="2"/><text x="88.2468%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="87.9968%" y="437" width="0.1590%" height="15" fill="rgb(232,168,5)" fg:x="1107" fg:w="2"/><text x="88.2468%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="88.0763%" y="421" width="0.0795%" height="15" fill="rgb(243,90,22)" fg:x="1108" fg:w="1"/><text x="88.3263%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="88.0763%" y="405" width="0.0795%" height="15" fill="rgb(223,153,32)" fg:x="1108" fg:w="1"/><text x="88.3263%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0763%" y="389" width="0.0795%" height="15" fill="rgb(243,124,20)" fg:x="1108" fg:w="1"/><text x="88.3263%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="87.7583%" y="597" width="0.5564%" height="15" fill="rgb(246,168,39)" fg:x="1104" fg:w="7"/><text x="88.0083%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="87.7583%" y="581" width="0.5564%" height="15" fill="rgb(222,165,54)" fg:x="1104" fg:w="7"/><text x="88.0083%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="87.7583%" y="565" width="0.5564%" height="15" fill="rgb(251,142,27)" fg:x="1104" fg:w="7"/><text x="88.0083%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.1558%" y="549" width="0.1590%" height="15" fill="rgb(207,168,50)" fg:x="1109" fg:w="2"/><text x="88.4058%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.1558%" y="533" width="0.1590%" height="15" fill="rgb(250,139,25)" fg:x="1109" fg:w="2"/><text x="88.4058%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.1558%" y="517" width="0.1590%" height="15" fill="rgb(214,194,48)" fg:x="1109" fg:w="2"/><text x="88.4058%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2353%" y="501" width="0.0795%" height="15" fill="rgb(227,138,47)" fg:x="1110" fg:w="1"/><text x="88.4853%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2353%" y="485" width="0.0795%" height="15" fill="rgb(250,162,5)" fg:x="1110" fg:w="1"/><text x="88.4853%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2353%" y="469" width="0.0795%" height="15" fill="rgb(229,74,25)" fg:x="1110" fg:w="1"/><text x="88.4853%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2353%" y="453" width="0.0795%" height="15" fill="rgb(221,124,34)" fg:x="1110" fg:w="1"/><text x="88.4853%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.2353%" y="437" width="0.0795%" height="15" fill="rgb(225,94,25)" fg:x="1110" fg:w="1"/><text x="88.4853%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2353%" y="421" width="0.0795%" height="15" fill="rgb(210,100,12)" fg:x="1110" fg:w="1"/><text x="88.4853%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2353%" y="405" width="0.0795%" height="15" fill="rgb(206,62,48)" fg:x="1110" fg:w="1"/><text x="88.4853%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2353%" y="389" width="0.0795%" height="15" fill="rgb(222,181,9)" fg:x="1110" fg:w="1"/><text x="88.4853%" y="399.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (11 samples, 0.87%)</title><rect x="87.5199%" y="661" width="0.8744%" height="15" fill="rgb(248,42,38)" fg:x="1101" fg:w="11"/><text x="87.7699%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (11 samples, 0.87%)</title><rect x="87.5199%" y="645" width="0.8744%" height="15" fill="rgb(213,40,6)" fg:x="1101" fg:w="11"/><text x="87.7699%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="87.6789%" y="629" width="0.7154%" height="15" fill="rgb(211,108,15)" fg:x="1103" fg:w="9"/><text x="87.9289%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="87.7583%" y="613" width="0.6359%" height="15" fill="rgb(249,62,9)" fg:x="1104" fg:w="8"/><text x="88.0083%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.3148%" y="597" width="0.0795%" height="15" fill="rgb(233,26,54)" fg:x="1111" fg:w="1"/><text x="88.5648%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3148%" y="581" width="0.0795%" height="15" fill="rgb(210,175,26)" fg:x="1111" fg:w="1"/><text x="88.5648%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.3148%" y="565" width="0.0795%" height="15" fill="rgb(210,43,33)" fg:x="1111" fg:w="1"/><text x="88.5648%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3148%" y="549" width="0.0795%" height="15" fill="rgb(224,46,17)" fg:x="1111" fg:w="1"/><text x="88.5648%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5533%" y="501" width="0.0795%" height="15" fill="rgb(254,24,38)" fg:x="1114" fg:w="1"/><text x="88.8033%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="88.7122%" y="437" width="0.0795%" height="15" fill="rgb(248,32,0)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.7122%" y="421" width="0.0795%" height="15" fill="rgb(224,37,41)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7122%" y="405" width="0.0795%" height="15" fill="rgb(252,70,22)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7122%" y="389" width="0.0795%" height="15" fill="rgb(241,123,50)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7122%" y="373" width="0.0795%" height="15" fill="rgb(246,138,33)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.7122%" y="357" width="0.0795%" height="15" fill="rgb(218,39,32)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.7122%" y="341" width="0.0795%" height="15" fill="rgb(241,229,10)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.7122%" y="325" width="0.0795%" height="15" fill="rgb(212,160,10)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.7122%" y="309" width="0.0795%" height="15" fill="rgb(227,48,51)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.7122%" y="293" width="0.0795%" height="15" fill="rgb(238,159,21)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.7122%" y="277" width="0.0795%" height="15" fill="rgb(216,1,10)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.7122%" y="261" width="0.0795%" height="15" fill="rgb(209,228,25)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.7122%" y="245" width="0.0795%" height="15" fill="rgb(234,160,10)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.7122%" y="229" width="0.0795%" height="15" fill="rgb(212,66,25)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7122%" y="213" width="0.0795%" height="15" fill="rgb(254,121,18)" fg:x="1116" fg:w="1"/><text x="88.9622%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="88.7122%" y="469" width="0.1590%" height="15" fill="rgb(219,127,1)" fg:x="1116" fg:w="2"/><text x="88.9622%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="88.7122%" y="453" width="0.1590%" height="15" fill="rgb(219,224,42)" fg:x="1116" fg:w="2"/><text x="88.9622%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.7917%" y="437" width="0.0795%" height="15" fill="rgb(253,130,22)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.7917%" y="421" width="0.0795%" height="15" fill="rgb(253,39,28)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.7917%" y="405" width="0.0795%" height="15" fill="rgb(231,126,37)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.7917%" y="389" width="0.0795%" height="15" fill="rgb(251,145,14)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.7917%" y="373" width="0.0795%" height="15" fill="rgb(229,164,30)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.7917%" y="357" width="0.0795%" height="15" fill="rgb(233,227,54)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.7917%" y="341" width="0.0795%" height="15" fill="rgb(240,94,22)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.7917%" y="325" width="0.0795%" height="15" fill="rgb(217,56,16)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.7917%" y="309" width="0.0795%" height="15" fill="rgb(229,133,38)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7917%" y="293" width="0.0795%" height="15" fill="rgb(225,139,35)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7917%" y="277" width="0.0795%" height="15" fill="rgb(223,100,16)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="88.7917%" y="261" width="0.0795%" height="15" fill="rgb(207,43,50)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="88.7917%" y="245" width="0.0795%" height="15" fill="rgb(237,221,9)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="88.7917%" y="229" width="0.0795%" height="15" fill="rgb(236,134,24)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="88.7917%" y="213" width="0.0795%" height="15" fill="rgb(222,173,4)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="88.7917%" y="197" width="0.0795%" height="15" fill="rgb(234,144,52)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="88.7917%" y="181" width="0.0795%" height="15" fill="rgb(223,41,7)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.7917%" y="165" width="0.0795%" height="15" fill="rgb(226,143,9)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="88.7917%" y="149" width="0.0795%" height="15" fill="rgb(234,43,37)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.7917%" y="133" width="0.0795%" height="15" fill="rgb(224,188,11)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="88.7917%" y="117" width="0.0795%" height="15" fill="rgb(233,113,28)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="88.7917%" y="101" width="0.0795%" height="15" fill="rgb(215,16,1)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="88.7917%" y="85" width="0.0795%" height="15" fill="rgb(238,74,38)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.7917%" y="69" width="0.0795%" height="15" fill="rgb(221,66,35)" fg:x="1117" fg:w="1"/><text x="89.0417%" y="79.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="88.9507%" y="341" width="0.1590%" height="15" fill="rgb(251,225,2)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="351.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="88.9507%" y="325" width="0.1590%" height="15" fill="rgb(240,169,18)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="88.9507%" y="309" width="0.1590%" height="15" fill="rgb(243,130,50)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="319.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.9507%" y="293" width="0.1590%" height="15" fill="rgb(228,75,13)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.9507%" y="277" width="0.1590%" height="15" fill="rgb(252,95,35)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.9507%" y="261" width="0.1590%" height="15" fill="rgb(222,180,54)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.9507%" y="245" width="0.1590%" height="15" fill="rgb(250,110,34)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.9507%" y="229" width="0.1590%" height="15" fill="rgb(208,100,21)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="88.9507%" y="213" width="0.1590%" height="15" fill="rgb(209,123,47)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="88.9507%" y="197" width="0.1590%" height="15" fill="rgb(237,147,9)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="88.9507%" y="181" width="0.1590%" height="15" fill="rgb(228,206,23)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="88.9507%" y="165" width="0.1590%" height="15" fill="rgb(217,174,46)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="88.9507%" y="149" width="0.1590%" height="15" fill="rgb(231,126,21)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="88.9507%" y="133" width="0.1590%" height="15" fill="rgb(245,26,1)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="88.9507%" y="117" width="0.1590%" height="15" fill="rgb(224,138,39)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="88.9507%" y="101" width="0.1590%" height="15" fill="rgb(208,97,3)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="88.9507%" y="85" width="0.1590%" height="15" fill="rgb(222,77,29)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="88.9507%" y="69" width="0.1590%" height="15" fill="rgb(243,188,36)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="79.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="88.9507%" y="53" width="0.1590%" height="15" fill="rgb(218,214,3)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="63.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.9507%" y="37" width="0.1590%" height="15" fill="rgb(211,183,45)" fg:x="1119" fg:w="2"/><text x="89.2007%" y="47.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1892%" y="277" width="0.0795%" height="15" fill="rgb(230,218,25)" fg:x="1122" fg:w="1"/><text x="89.4392%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1892%" y="261" width="0.0795%" height="15" fill="rgb(233,86,6)" fg:x="1122" fg:w="1"/><text x="89.4392%" y="271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.1892%" y="245" width="0.0795%" height="15" fill="rgb(220,59,24)" fg:x="1122" fg:w="1"/><text x="89.4392%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.3482%" y="149" width="0.0795%" height="15" fill="rgb(227,60,1)" fg:x="1124" fg:w="1"/><text x="89.5982%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4277%" y="149" width="0.0795%" height="15" fill="rgb(216,212,54)" fg:x="1125" fg:w="1"/><text x="89.6777%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4277%" y="133" width="0.0795%" height="15" fill="rgb(227,81,54)" fg:x="1125" fg:w="1"/><text x="89.6777%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4277%" y="117" width="0.0795%" height="15" fill="rgb(206,204,43)" fg:x="1125" fg:w="1"/><text x="89.6777%" y="127.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="89.1097%" y="325" width="0.4769%" height="15" fill="rgb(219,29,26)" fg:x="1121" fg:w="6"/><text x="89.3597%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="89.1097%" y="309" width="0.4769%" height="15" fill="rgb(252,40,36)" fg:x="1121" fg:w="6"/><text x="89.3597%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="89.1097%" y="293" width="0.4769%" height="15" fill="rgb(224,205,39)" fg:x="1121" fg:w="6"/><text x="89.3597%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="89.2687%" y="277" width="0.3180%" height="15" fill="rgb(222,13,21)" fg:x="1123" fg:w="4"/><text x="89.5187%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="89.3482%" y="261" width="0.2385%" height="15" fill="rgb(243,139,6)" fg:x="1124" fg:w="3"/><text x="89.5982%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="89.3482%" y="245" width="0.2385%" height="15" fill="rgb(237,101,11)" fg:x="1124" fg:w="3"/><text x="89.5982%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="89.3482%" y="229" width="0.2385%" height="15" fill="rgb(254,49,28)" fg:x="1124" fg:w="3"/><text x="89.5982%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="89.3482%" y="213" width="0.2385%" height="15" fill="rgb(223,41,21)" fg:x="1124" fg:w="3"/><text x="89.5982%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="89.3482%" y="197" width="0.2385%" height="15" fill="rgb(225,103,29)" fg:x="1124" fg:w="3"/><text x="89.5982%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="89.3482%" y="181" width="0.2385%" height="15" fill="rgb(244,82,43)" fg:x="1124" fg:w="3"/><text x="89.5982%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="89.3482%" y="165" width="0.2385%" height="15" fill="rgb(217,39,3)" fg:x="1124" fg:w="3"/><text x="89.5982%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.5072%" y="149" width="0.0795%" height="15" fill="rgb(239,128,25)" fg:x="1126" fg:w="1"/><text x="89.7572%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.5072%" y="133" width="0.0795%" height="15" fill="rgb(210,192,37)" fg:x="1126" fg:w="1"/><text x="89.7572%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.5072%" y="117" width="0.0795%" height="15" fill="rgb(219,98,18)" fg:x="1126" fg:w="1"/><text x="89.7572%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.5072%" y="101" width="0.0795%" height="15" fill="rgb(224,228,38)" fg:x="1126" fg:w="1"/><text x="89.7572%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5072%" y="85" width="0.0795%" height="15" fill="rgb(241,129,43)" fg:x="1126" fg:w="1"/><text x="89.7572%" y="95.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5072%" y="69" width="0.0795%" height="15" fill="rgb(223,8,51)" fg:x="1126" fg:w="1"/><text x="89.7572%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5072%" y="53" width="0.0795%" height="15" fill="rgb(233,76,24)" fg:x="1126" fg:w="1"/><text x="89.7572%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.6661%" y="149" width="0.0795%" height="15" fill="rgb(219,115,10)" fg:x="1128" fg:w="1"/><text x="89.9161%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.6661%" y="133" width="0.0795%" height="15" fill="rgb(222,137,12)" fg:x="1128" fg:w="1"/><text x="89.9161%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.6661%" y="117" width="0.0795%" height="15" fill="rgb(216,192,16)" fg:x="1128" fg:w="1"/><text x="89.9161%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="89.6661%" y="181" width="0.1590%" height="15" fill="rgb(247,6,27)" fg:x="1128" fg:w="2"/><text x="89.9161%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.6661%" y="165" width="0.1590%" height="15" fill="rgb(254,39,44)" fg:x="1128" fg:w="2"/><text x="89.9161%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="89.7456%" y="149" width="0.0795%" height="15" fill="rgb(251,116,35)" fg:x="1129" fg:w="1"/><text x="89.9956%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.7456%" y="133" width="0.0795%" height="15" fill="rgb(208,61,44)" fg:x="1129" fg:w="1"/><text x="89.9956%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.7456%" y="117" width="0.0795%" height="15" fill="rgb(250,34,5)" fg:x="1129" fg:w="1"/><text x="89.9956%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="89.7456%" y="101" width="0.0795%" height="15" fill="rgb(241,40,15)" fg:x="1129" fg:w="1"/><text x="89.9956%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7456%" y="85" width="0.0795%" height="15" fill="rgb(229,182,2)" fg:x="1129" fg:w="1"/><text x="89.9956%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="89.5866%" y="245" width="0.3180%" height="15" fill="rgb(244,148,52)" fg:x="1127" fg:w="4"/><text x="89.8366%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="89.5866%" y="229" width="0.3180%" height="15" fill="rgb(225,211,4)" fg:x="1127" fg:w="4"/><text x="89.8366%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="89.5866%" y="213" width="0.3180%" height="15" fill="rgb(208,222,47)" fg:x="1127" fg:w="4"/><text x="89.8366%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="89.5866%" y="197" width="0.3180%" height="15" fill="rgb(233,162,0)" fg:x="1127" fg:w="4"/><text x="89.8366%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="89.8251%" y="181" width="0.0795%" height="15" fill="rgb(241,54,13)" fg:x="1130" fg:w="1"/><text x="90.0751%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="89.8251%" y="165" width="0.0795%" height="15" fill="rgb(213,89,18)" fg:x="1130" fg:w="1"/><text x="90.0751%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8251%" y="149" width="0.0795%" height="15" fill="rgb(215,170,37)" fg:x="1130" fg:w="1"/><text x="90.0751%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9046%" y="245" width="0.0795%" height="15" fill="rgb(216,133,15)" fg:x="1131" fg:w="1"/><text x="90.1546%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9841%" y="197" width="0.0795%" height="15" fill="rgb(230,42,19)" fg:x="1132" fg:w="1"/><text x="90.2341%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="89.9841%" y="245" width="0.2385%" height="15" fill="rgb(221,103,41)" fg:x="1132" fg:w="3"/><text x="90.2341%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="89.9841%" y="229" width="0.2385%" height="15" fill="rgb(220,142,31)" fg:x="1132" fg:w="3"/><text x="90.2341%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="89.9841%" y="213" width="0.2385%" height="15" fill="rgb(239,218,4)" fg:x="1132" fg:w="3"/><text x="90.2341%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="90.0636%" y="197" width="0.1590%" height="15" fill="rgb(232,16,4)" fg:x="1133" fg:w="2"/><text x="90.3136%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.1431%" y="181" width="0.0795%" height="15" fill="rgb(226,213,25)" fg:x="1134" fg:w="1"/><text x="90.3931%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.1431%" y="165" width="0.0795%" height="15" fill="rgb(235,135,19)" fg:x="1134" fg:w="1"/><text x="90.3931%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.1431%" y="149" width="0.0795%" height="15" fill="rgb(240,107,29)" fg:x="1134" fg:w="1"/><text x="90.3931%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.2226%" y="213" width="0.0795%" height="15" fill="rgb(206,164,44)" fg:x="1135" fg:w="1"/><text x="90.4726%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.79%)</title><rect x="89.5866%" y="293" width="0.7949%" height="15" fill="rgb(210,23,48)" fg:x="1127" fg:w="10"/><text x="89.8366%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.79%)</title><rect x="89.5866%" y="277" width="0.7949%" height="15" fill="rgb(212,138,25)" fg:x="1127" fg:w="10"/><text x="89.8366%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.79%)</title><rect x="89.5866%" y="261" width="0.7949%" height="15" fill="rgb(224,152,3)" fg:x="1127" fg:w="10"/><text x="89.8366%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.2226%" y="245" width="0.1590%" height="15" fill="rgb(214,38,23)" fg:x="1135" fg:w="2"/><text x="90.4726%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.2226%" y="229" width="0.1590%" height="15" fill="rgb(215,161,10)" fg:x="1135" fg:w="2"/><text x="90.4726%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="90.3021%" y="213" width="0.0795%" height="15" fill="rgb(240,185,7)" fg:x="1136" fg:w="1"/><text x="90.5521%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3021%" y="197" width="0.0795%" height="15" fill="rgb(244,104,25)" fg:x="1136" fg:w="1"/><text x="90.5521%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.3021%" y="181" width="0.0795%" height="15" fill="rgb(242,140,44)" fg:x="1136" fg:w="1"/><text x="90.5521%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3021%" y="165" width="0.0795%" height="15" fill="rgb(245,30,19)" fg:x="1136" fg:w="1"/><text x="90.5521%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (17 samples, 1.35%)</title><rect x="89.1097%" y="341" width="1.3514%" height="15" fill="rgb(219,208,35)" fg:x="1121" fg:w="17"/><text x="89.3597%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.87%)</title><rect x="89.5866%" y="325" width="0.8744%" height="15" fill="rgb(235,200,7)" fg:x="1127" fg:w="11"/><text x="89.8366%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.87%)</title><rect x="89.5866%" y="309" width="0.8744%" height="15" fill="rgb(220,193,10)" fg:x="1127" fg:w="11"/><text x="89.8366%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3816%" y="293" width="0.0795%" height="15" fill="rgb(212,216,39)" fg:x="1137" fg:w="1"/><text x="90.6316%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3816%" y="277" width="0.0795%" height="15" fill="rgb(212,134,19)" fg:x="1137" fg:w="1"/><text x="90.6316%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.4610%" y="293" width="0.0795%" height="15" fill="rgb(230,57,24)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.4610%" y="277" width="0.0795%" height="15" fill="rgb(238,209,37)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.4610%" y="261" width="0.0795%" height="15" fill="rgb(247,11,45)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.4610%" y="245" width="0.0795%" height="15" fill="rgb(222,126,6)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4610%" y="229" width="0.0795%" height="15" fill="rgb(245,77,24)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4610%" y="213" width="0.0795%" height="15" fill="rgb(227,14,24)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.4610%" y="197" width="0.0795%" height="15" fill="rgb(211,112,42)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.4610%" y="181" width="0.0795%" height="15" fill="rgb(230,103,42)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.4610%" y="165" width="0.0795%" height="15" fill="rgb(228,125,42)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4610%" y="149" width="0.0795%" height="15" fill="rgb(243,33,6)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4610%" y="133" width="0.0795%" height="15" fill="rgb(231,2,40)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.4610%" y="117" width="0.0795%" height="15" fill="rgb(224,200,53)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.4610%" y="101" width="0.0795%" height="15" fill="rgb(215,116,36)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.4610%" y="85" width="0.0795%" height="15" fill="rgb(240,23,51)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.4610%" y="69" width="0.0795%" height="15" fill="rgb(221,72,5)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4610%" y="53" width="0.0795%" height="15" fill="rgb(245,142,9)" fg:x="1138" fg:w="1"/><text x="90.7110%" y="63.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.4610%" y="341" width="0.1590%" height="15" fill="rgb(207,34,16)" fg:x="1138" fg:w="2"/><text x="90.7110%" y="351.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="90.4610%" y="325" width="0.1590%" height="15" fill="rgb(252,101,12)" fg:x="1138" fg:w="2"/><text x="90.7110%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.4610%" y="309" width="0.1590%" height="15" fill="rgb(239,89,37)" fg:x="1138" fg:w="2"/><text x="90.7110%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.5405%" y="293" width="0.0795%" height="15" fill="rgb(252,227,37)" fg:x="1139" fg:w="1"/><text x="90.7905%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5405%" y="277" width="0.0795%" height="15" fill="rgb(212,164,17)" fg:x="1139" fg:w="1"/><text x="90.7905%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.5405%" y="261" width="0.0795%" height="15" fill="rgb(240,86,13)" fg:x="1139" fg:w="1"/><text x="90.7905%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5405%" y="245" width="0.0795%" height="15" fill="rgb(233,183,32)" fg:x="1139" fg:w="1"/><text x="90.7905%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.5405%" y="229" width="0.0795%" height="15" fill="rgb(205,201,38)" fg:x="1139" fg:w="1"/><text x="90.7905%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5405%" y="213" width="0.0795%" height="15" fill="rgb(210,122,38)" fg:x="1139" fg:w="1"/><text x="90.7905%" y="223.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (28 samples, 2.23%)</title><rect x="88.6328%" y="501" width="2.2258%" height="15" fill="rgb(241,174,26)" fg:x="1115" fg:w="28"/><text x="88.8828%" y="511.50">p..</text></g><g><title>plugins_core::tools::contained_by (27 samples, 2.15%)</title><rect x="88.7122%" y="485" width="2.1463%" height="15" fill="rgb(219,89,7)" fg:x="1116" fg:w="27"/><text x="88.9622%" y="495.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (25 samples, 1.99%)</title><rect x="88.8712%" y="469" width="1.9873%" height="15" fill="rgb(246,9,24)" fg:x="1118" fg:w="25"/><text x="89.1212%" y="479.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (24 samples, 1.91%)</title><rect x="88.9507%" y="453" width="1.9078%" height="15" fill="rgb(205,132,21)" fg:x="1119" fg:w="24"/><text x="89.2007%" y="463.50">k..</text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (24 samples, 1.91%)</title><rect x="88.9507%" y="437" width="1.9078%" height="15" fill="rgb(210,11,17)" fg:x="1119" fg:w="24"/><text x="89.2007%" y="447.50">&lt;..</text></g><g><title>core::iter::adapters::try_process (24 samples, 1.91%)</title><rect x="88.9507%" y="421" width="1.9078%" height="15" fill="rgb(226,138,14)" fg:x="1119" fg:w="24"/><text x="89.2007%" y="431.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.91%)</title><rect x="88.9507%" y="405" width="1.9078%" height="15" fill="rgb(224,108,44)" fg:x="1119" fg:w="24"/><text x="89.2007%" y="415.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (24 samples, 1.91%)</title><rect x="88.9507%" y="389" width="1.9078%" height="15" fill="rgb(247,114,36)" fg:x="1119" fg:w="24"/><text x="89.2007%" y="399.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (24 samples, 1.91%)</title><rect x="88.9507%" y="373" width="1.9078%" height="15" fill="rgb(231,183,14)" fg:x="1119" fg:w="24"/><text x="89.2007%" y="383.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.91%)</title><rect x="88.9507%" y="357" width="1.9078%" height="15" fill="rgb(218,168,4)" fg:x="1119" fg:w="24"/><text x="89.2007%" y="367.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="90.6200%" y="341" width="0.2385%" height="15" fill="rgb(210,8,3)" fg:x="1140" fg:w="3"/><text x="90.8700%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="90.6200%" y="325" width="0.2385%" height="15" fill="rgb(216,165,0)" fg:x="1140" fg:w="3"/><text x="90.8700%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="90.6200%" y="309" width="0.2385%" height="15" fill="rgb(245,120,5)" fg:x="1140" fg:w="3"/><text x="90.8700%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="90.6200%" y="293" width="0.2385%" height="15" fill="rgb(249,121,32)" fg:x="1140" fg:w="3"/><text x="90.8700%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="90.6200%" y="277" width="0.2385%" height="15" fill="rgb(211,55,33)" fg:x="1140" fg:w="3"/><text x="90.8700%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9380%" y="421" width="0.0795%" height="15" fill="rgb(254,46,35)" fg:x="1144" fg:w="1"/><text x="91.1880%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0175%" y="389" width="0.0795%" height="15" fill="rgb(213,213,19)" fg:x="1145" fg:w="1"/><text x="91.2675%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0175%" y="373" width="0.0795%" height="15" fill="rgb(207,152,44)" fg:x="1145" fg:w="1"/><text x="91.2675%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="90.9380%" y="453" width="0.2385%" height="15" fill="rgb(227,195,36)" fg:x="1144" fg:w="3"/><text x="91.1880%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="90.9380%" y="437" width="0.2385%" height="15" fill="rgb(210,137,36)" fg:x="1144" fg:w="3"/><text x="91.1880%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="91.0175%" y="421" width="0.1590%" height="15" fill="rgb(253,47,47)" fg:x="1145" fg:w="2"/><text x="91.2675%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.0175%" y="405" width="0.1590%" height="15" fill="rgb(230,147,18)" fg:x="1145" fg:w="2"/><text x="91.2675%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0970%" y="389" width="0.0795%" height="15" fill="rgb(247,33,49)" fg:x="1146" fg:w="1"/><text x="91.3470%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0970%" y="373" width="0.0795%" height="15" fill="rgb(239,26,29)" fg:x="1146" fg:w="1"/><text x="91.3470%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0970%" y="357" width="0.0795%" height="15" fill="rgb(245,145,52)" fg:x="1146" fg:w="1"/><text x="91.3470%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0970%" y="341" width="0.0795%" height="15" fill="rgb(224,139,32)" fg:x="1146" fg:w="1"/><text x="91.3470%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.0970%" y="325" width="0.0795%" height="15" fill="rgb(238,202,19)" fg:x="1146" fg:w="1"/><text x="91.3470%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (34 samples, 2.70%)</title><rect x="88.5533%" y="533" width="2.7027%" height="15" fill="rgb(249,211,53)" fg:x="1114" fg:w="34"/><text x="88.8033%" y="543.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (34 samples, 2.70%)</title><rect x="88.5533%" y="517" width="2.7027%" height="15" fill="rgb(237,229,33)" fg:x="1114" fg:w="34"/><text x="88.8033%" y="527.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.40%)</title><rect x="90.8585%" y="501" width="0.3975%" height="15" fill="rgb(208,97,40)" fg:x="1143" fg:w="5"/><text x="91.1085%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="90.9380%" y="485" width="0.3180%" height="15" fill="rgb(254,36,16)" fg:x="1144" fg:w="4"/><text x="91.1880%" y="495.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="90.9380%" y="469" width="0.3180%" height="15" fill="rgb(221,7,12)" fg:x="1144" fg:w="4"/><text x="91.1880%" y="479.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="91.1765%" y="453" width="0.0795%" height="15" fill="rgb(205,11,12)" fg:x="1147" fg:w="1"/><text x="91.4265%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1765%" y="437" width="0.0795%" height="15" fill="rgb(227,72,28)" fg:x="1147" fg:w="1"/><text x="91.4265%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.2560%" y="533" width="0.0795%" height="15" fill="rgb(228,7,34)" fg:x="1148" fg:w="1"/><text x="91.5060%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="91.4149%" y="517" width="0.1590%" height="15" fill="rgb(230,52,42)" fg:x="1150" fg:w="2"/><text x="91.6649%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.4944%" y="501" width="0.0795%" height="15" fill="rgb(219,177,53)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.4944%" y="485" width="0.0795%" height="15" fill="rgb(243,196,34)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4944%" y="469" width="0.0795%" height="15" fill="rgb(213,66,49)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4944%" y="453" width="0.0795%" height="15" fill="rgb(233,11,50)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4944%" y="437" width="0.0795%" height="15" fill="rgb(235,190,6)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4944%" y="421" width="0.0795%" height="15" fill="rgb(212,64,44)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.4944%" y="405" width="0.0795%" height="15" fill="rgb(206,95,44)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.4944%" y="389" width="0.0795%" height="15" fill="rgb(227,136,25)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.4944%" y="373" width="0.0795%" height="15" fill="rgb(206,178,17)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.4944%" y="357" width="0.0795%" height="15" fill="rgb(208,168,35)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.4944%" y="341" width="0.0795%" height="15" fill="rgb(213,210,40)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.4944%" y="325" width="0.0795%" height="15" fill="rgb(236,60,6)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.4944%" y="309" width="0.0795%" height="15" fill="rgb(220,186,36)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.4944%" y="293" width="0.0795%" height="15" fill="rgb(225,120,49)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.4944%" y="277" width="0.0795%" height="15" fill="rgb(250,115,20)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.4944%" y="261" width="0.0795%" height="15" fill="rgb(207,214,23)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.4944%" y="245" width="0.0795%" height="15" fill="rgb(240,9,18)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4944%" y="229" width="0.0795%" height="15" fill="rgb(232,170,48)" fg:x="1151" fg:w="1"/><text x="91.7444%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="91.5739%" y="501" width="0.0795%" height="15" fill="rgb(236,149,23)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5739%" y="485" width="0.0795%" height="15" fill="rgb(210,125,42)" fg:x="1152" fg:w="1"/><text x="91.8239%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6534%" y="469" width="0.0795%" height="15" fill="rgb(207,201,52)" fg:x="1153" fg:w="1"/><text x="91.9034%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6534%" y="453" width="0.0795%" height="15" fill="rgb(250,187,37)" fg:x="1153" fg:w="1"/><text x="91.9034%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6534%" y="437" width="0.0795%" height="15" fill="rgb(214,186,2)" fg:x="1153" fg:w="1"/><text x="91.9034%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6534%" y="421" width="0.0795%" height="15" fill="rgb(207,189,15)" fg:x="1153" fg:w="1"/><text x="91.9034%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6534%" y="405" width="0.0795%" height="15" fill="rgb(221,99,21)" fg:x="1153" fg:w="1"/><text x="91.9034%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.6534%" y="389" width="0.0795%" height="15" fill="rgb(212,67,18)" fg:x="1153" fg:w="1"/><text x="91.9034%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7329%" y="389" width="0.0795%" height="15" fill="rgb(226,24,24)" fg:x="1154" fg:w="1"/><text x="91.9829%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.7329%" y="469" width="0.1590%" height="15" fill="rgb(252,123,31)" fg:x="1154" fg:w="2"/><text x="91.9829%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="91.7329%" y="453" width="0.1590%" height="15" fill="rgb(251,227,47)" fg:x="1154" fg:w="2"/><text x="91.9829%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.7329%" y="437" width="0.1590%" height="15" fill="rgb(233,84,53)" fg:x="1154" fg:w="2"/><text x="91.9829%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.7329%" y="421" width="0.1590%" height="15" fill="rgb(228,57,19)" fg:x="1154" fg:w="2"/><text x="91.9829%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.7329%" y="405" width="0.1590%" height="15" fill="rgb(251,81,5)" fg:x="1154" fg:w="2"/><text x="91.9829%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.8124%" y="389" width="0.0795%" height="15" fill="rgb(236,211,27)" fg:x="1155" fg:w="1"/><text x="92.0624%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.8124%" y="373" width="0.0795%" height="15" fill="rgb(218,21,6)" fg:x="1155" fg:w="1"/><text x="92.0624%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (9 samples, 0.72%)</title><rect x="91.3355%" y="533" width="0.7154%" height="15" fill="rgb(239,104,19)" fg:x="1149" fg:w="9"/><text x="91.5855%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="91.5739%" y="517" width="0.4769%" height="15" fill="rgb(234,179,27)" fg:x="1152" fg:w="6"/><text x="91.8239%" y="527.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="91.6534%" y="501" width="0.3975%" height="15" fill="rgb(221,154,39)" fg:x="1153" fg:w="5"/><text x="91.9034%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="91.6534%" y="485" width="0.3975%" height="15" fill="rgb(228,190,1)" fg:x="1153" fg:w="5"/><text x="91.9034%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.8919%" y="469" width="0.1590%" height="15" fill="rgb(244,122,33)" fg:x="1156" fg:w="2"/><text x="92.1419%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.8919%" y="453" width="0.1590%" height="15" fill="rgb(227,56,37)" fg:x="1156" fg:w="2"/><text x="92.1419%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.8919%" y="437" width="0.1590%" height="15" fill="rgb(207,158,16)" fg:x="1156" fg:w="2"/><text x="92.1419%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.8919%" y="421" width="0.1590%" height="15" fill="rgb(251,222,30)" fg:x="1156" fg:w="2"/><text x="92.1419%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="91.8919%" y="405" width="0.1590%" height="15" fill="rgb(240,22,49)" fg:x="1156" fg:w="2"/><text x="92.1419%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.8919%" y="389" width="0.1590%" height="15" fill="rgb(224,207,37)" fg:x="1156" fg:w="2"/><text x="92.1419%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.8919%" y="373" width="0.1590%" height="15" fill="rgb(249,188,40)" fg:x="1156" fg:w="2"/><text x="92.1419%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.8919%" y="357" width="0.1590%" height="15" fill="rgb(254,141,11)" fg:x="1156" fg:w="2"/><text x="92.1419%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9714%" y="341" width="0.0795%" height="15" fill="rgb(231,177,6)" fg:x="1157" fg:w="1"/><text x="92.2214%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9714%" y="325" width="0.0795%" height="15" fill="rgb(241,6,16)" fg:x="1157" fg:w="1"/><text x="92.2214%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.9714%" y="309" width="0.0795%" height="15" fill="rgb(230,50,14)" fg:x="1157" fg:w="1"/><text x="92.2214%" y="319.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="92.0509%" y="533" width="0.0795%" height="15" fill="rgb(254,36,3)" fg:x="1158" fg:w="1"/><text x="92.3009%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="92.1304%" y="517" width="0.0795%" height="15" fill="rgb(226,149,37)" fg:x="1159" fg:w="1"/><text x="92.3804%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.1304%" y="501" width="0.0795%" height="15" fill="rgb(253,49,27)" fg:x="1159" fg:w="1"/><text x="92.3804%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="92.2099%" y="517" width="0.0795%" height="15" fill="rgb(249,182,52)" fg:x="1160" fg:w="1"/><text x="92.4599%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.2099%" y="501" width="0.0795%" height="15" fill="rgb(223,42,15)" fg:x="1160" fg:w="1"/><text x="92.4599%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.2099%" y="485" width="0.0795%" height="15" fill="rgb(232,31,42)" fg:x="1160" fg:w="1"/><text x="92.4599%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4483%" y="437" width="0.0795%" height="15" fill="rgb(233,56,46)" fg:x="1163" fg:w="1"/><text x="92.6983%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4483%" y="421" width="0.0795%" height="15" fill="rgb(241,143,21)" fg:x="1163" fg:w="1"/><text x="92.6983%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4483%" y="405" width="0.0795%" height="15" fill="rgb(251,222,15)" fg:x="1163" fg:w="1"/><text x="92.6983%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="92.2893%" y="517" width="0.3180%" height="15" fill="rgb(242,101,40)" fg:x="1161" fg:w="4"/><text x="92.5393%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="92.2893%" y="501" width="0.3180%" height="15" fill="rgb(247,60,44)" fg:x="1161" fg:w="4"/><text x="92.5393%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="92.2893%" y="485" width="0.3180%" height="15" fill="rgb(254,48,47)" fg:x="1161" fg:w="4"/><text x="92.5393%" y="495.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="92.2893%" y="469" width="0.3180%" height="15" fill="rgb(253,30,33)" fg:x="1161" fg:w="4"/><text x="92.5393%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="92.2893%" y="453" width="0.3180%" height="15" fill="rgb(253,214,47)" fg:x="1161" fg:w="4"/><text x="92.5393%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5278%" y="437" width="0.0795%" height="15" fill="rgb(241,108,29)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5278%" y="421" width="0.0795%" height="15" fill="rgb(240,36,2)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5278%" y="405" width="0.0795%" height="15" fill="rgb(243,198,24)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5278%" y="389" width="0.0795%" height="15" fill="rgb(225,98,27)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.5278%" y="373" width="0.0795%" height="15" fill="rgb(208,86,30)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5278%" y="357" width="0.0795%" height="15" fill="rgb(242,157,11)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5278%" y="341" width="0.0795%" height="15" fill="rgb(244,84,16)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5278%" y="325" width="0.0795%" height="15" fill="rgb(247,20,46)" fg:x="1164" fg:w="1"/><text x="92.7778%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.6073%" y="485" width="0.0795%" height="15" fill="rgb(240,157,20)" fg:x="1165" fg:w="1"/><text x="92.8573%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.6073%" y="469" width="0.0795%" height="15" fill="rgb(212,151,38)" fg:x="1165" fg:w="1"/><text x="92.8573%" y="479.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="92.6868%" y="485" width="0.0795%" height="15" fill="rgb(233,197,14)" fg:x="1166" fg:w="1"/><text x="92.9368%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="92.6868%" y="469" width="0.0795%" height="15" fill="rgb(226,148,28)" fg:x="1166" fg:w="1"/><text x="92.9368%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="92.6868%" y="453" width="0.0795%" height="15" fill="rgb(244,141,30)" fg:x="1166" fg:w="1"/><text x="92.9368%" y="463.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="92.6868%" y="437" width="0.0795%" height="15" fill="rgb(215,73,38)" fg:x="1166" fg:w="1"/><text x="92.9368%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.6868%" y="421" width="0.0795%" height="15" fill="rgb(230,148,29)" fg:x="1166" fg:w="1"/><text x="92.9368%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.7663%" y="453" width="0.0795%" height="15" fill="rgb(250,41,52)" fg:x="1167" fg:w="1"/><text x="93.0163%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7663%" y="437" width="0.0795%" height="15" fill="rgb(215,48,1)" fg:x="1167" fg:w="1"/><text x="93.0163%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="92.6073%" y="517" width="0.3180%" height="15" fill="rgb(205,223,38)" fg:x="1165" fg:w="4"/><text x="92.8573%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="92.6073%" y="501" width="0.3180%" height="15" fill="rgb(213,51,8)" fg:x="1165" fg:w="4"/><text x="92.8573%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.7663%" y="485" width="0.1590%" height="15" fill="rgb(248,53,11)" fg:x="1167" fg:w="2"/><text x="93.0163%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7663%" y="469" width="0.1590%" height="15" fill="rgb(218,140,4)" fg:x="1167" fg:w="2"/><text x="93.0163%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8458%" y="453" width="0.0795%" height="15" fill="rgb(248,161,31)" fg:x="1168" fg:w="1"/><text x="93.0958%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8458%" y="437" width="0.0795%" height="15" fill="rgb(239,88,32)" fg:x="1168" fg:w="1"/><text x="93.0958%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8458%" y="421" width="0.0795%" height="15" fill="rgb(234,14,28)" fg:x="1168" fg:w="1"/><text x="93.0958%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.1638%" y="469" width="0.0795%" height="15" fill="rgb(235,173,11)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1638%" y="453" width="0.0795%" height="15" fill="rgb(222,70,2)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1638%" y="437" width="0.0795%" height="15" fill="rgb(228,196,41)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.1638%" y="421" width="0.0795%" height="15" fill="rgb(249,19,9)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.1638%" y="405" width="0.0795%" height="15" fill="rgb(221,16,43)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.1638%" y="389" width="0.0795%" height="15" fill="rgb(225,207,6)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1638%" y="373" width="0.0795%" height="15" fill="rgb(249,32,32)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1638%" y="357" width="0.0795%" height="15" fill="rgb(232,163,43)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.1638%" y="341" width="0.0795%" height="15" fill="rgb(236,158,54)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.1638%" y="325" width="0.0795%" height="15" fill="rgb(205,126,44)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.1638%" y="309" width="0.0795%" height="15" fill="rgb(210,162,12)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.1638%" y="293" width="0.0795%" height="15" fill="rgb(218,156,48)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1638%" y="277" width="0.0795%" height="15" fill="rgb(248,210,3)" fg:x="1172" fg:w="1"/><text x="93.4138%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.1638%" y="485" width="0.1590%" height="15" fill="rgb(212,43,27)" fg:x="1172" fg:w="2"/><text x="93.4138%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2432%" y="469" width="0.0795%" height="15" fill="rgb(241,52,6)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2432%" y="453" width="0.0795%" height="15" fill="rgb(222,178,35)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2432%" y="437" width="0.0795%" height="15" fill="rgb(205,121,46)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2432%" y="421" width="0.0795%" height="15" fill="rgb(249,67,1)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.2432%" y="405" width="0.0795%" height="15" fill="rgb(238,168,42)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.2432%" y="389" width="0.0795%" height="15" fill="rgb(205,36,48)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.2432%" y="373" width="0.0795%" height="15" fill="rgb(240,85,12)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2432%" y="357" width="0.0795%" height="15" fill="rgb(245,27,39)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2432%" y="341" width="0.0795%" height="15" fill="rgb(218,129,34)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.2432%" y="325" width="0.0795%" height="15" fill="rgb(221,157,12)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.2432%" y="309" width="0.0795%" height="15" fill="rgb(213,206,20)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.2432%" y="293" width="0.0795%" height="15" fill="rgb(227,115,30)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.2432%" y="277" width="0.0795%" height="15" fill="rgb(221,40,47)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2432%" y="261" width="0.0795%" height="15" fill="rgb(239,96,49)" fg:x="1173" fg:w="1"/><text x="93.4932%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.3227%" y="453" width="0.0795%" height="15" fill="rgb(223,24,38)" fg:x="1174" fg:w="1"/><text x="93.5727%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="93.3227%" y="485" width="0.2385%" height="15" fill="rgb(242,35,45)" fg:x="1174" fg:w="3"/><text x="93.5727%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="93.3227%" y="469" width="0.2385%" height="15" fill="rgb(236,20,9)" fg:x="1174" fg:w="3"/><text x="93.5727%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.4022%" y="453" width="0.1590%" height="15" fill="rgb(239,124,8)" fg:x="1175" fg:w="2"/><text x="93.6522%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="93.4022%" y="437" width="0.1590%" height="15" fill="rgb(228,92,29)" fg:x="1175" fg:w="2"/><text x="93.6522%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="93.4022%" y="421" width="0.1590%" height="15" fill="rgb(251,53,39)" fg:x="1175" fg:w="2"/><text x="93.6522%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.4817%" y="405" width="0.0795%" height="15" fill="rgb(224,44,10)" fg:x="1176" fg:w="1"/><text x="93.7317%" y="415.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (9 samples, 0.72%)</title><rect x="92.9253%" y="517" width="0.7154%" height="15" fill="rgb(254,10,15)" fg:x="1169" fg:w="9"/><text x="93.1753%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (9 samples, 0.72%)</title><rect x="92.9253%" y="501" width="0.7154%" height="15" fill="rgb(245,173,6)" fg:x="1169" fg:w="9"/><text x="93.1753%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="93.5612%" y="485" width="0.0795%" height="15" fill="rgb(228,74,0)" fg:x="1177" fg:w="1"/><text x="93.8112%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.5612%" y="469" width="0.0795%" height="15" fill="rgb(206,138,29)" fg:x="1177" fg:w="1"/><text x="93.8112%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="93.5612%" y="453" width="0.0795%" height="15" fill="rgb(253,27,43)" fg:x="1177" fg:w="1"/><text x="93.8112%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.8792%" y="293" width="0.0795%" height="15" fill="rgb(231,73,0)" fg:x="1181" fg:w="1"/><text x="94.1292%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="93.7202%" y="469" width="0.3180%" height="15" fill="rgb(218,9,23)" fg:x="1179" fg:w="4"/><text x="93.9702%" y="479.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="93.7202%" y="453" width="0.3180%" height="15" fill="rgb(251,55,29)" fg:x="1179" fg:w="4"/><text x="93.9702%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="93.7202%" y="437" width="0.3180%" height="15" fill="rgb(223,180,22)" fg:x="1179" fg:w="4"/><text x="93.9702%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="93.7202%" y="421" width="0.3180%" height="15" fill="rgb(223,29,21)" fg:x="1179" fg:w="4"/><text x="93.9702%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="93.7202%" y="405" width="0.3180%" height="15" fill="rgb(251,103,37)" fg:x="1179" fg:w="4"/><text x="93.9702%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.7997%" y="389" width="0.2385%" height="15" fill="rgb(214,11,21)" fg:x="1180" fg:w="3"/><text x="94.0497%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.7997%" y="373" width="0.2385%" height="15" fill="rgb(205,137,13)" fg:x="1180" fg:w="3"/><text x="94.0497%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="93.7997%" y="357" width="0.2385%" height="15" fill="rgb(225,58,47)" fg:x="1180" fg:w="3"/><text x="94.0497%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.7997%" y="341" width="0.2385%" height="15" fill="rgb(222,197,14)" fg:x="1180" fg:w="3"/><text x="94.0497%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.7997%" y="325" width="0.2385%" height="15" fill="rgb(215,210,33)" fg:x="1180" fg:w="3"/><text x="94.0497%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.7997%" y="309" width="0.2385%" height="15" fill="rgb(242,13,9)" fg:x="1180" fg:w="3"/><text x="94.0497%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.9587%" y="293" width="0.0795%" height="15" fill="rgb(218,31,39)" fg:x="1182" fg:w="1"/><text x="94.2087%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (71 samples, 5.64%)</title><rect x="88.5533%" y="549" width="5.6439%" height="15" fill="rgb(211,214,23)" fg:x="1114" fg:w="71"/><text x="88.8033%" y="559.50">&lt;plugin..</text></g><g><title>plugins_core::tools::move_between (26 samples, 2.07%)</title><rect x="92.1304%" y="533" width="2.0668%" height="15" fill="rgb(237,92,14)" fg:x="1159" fg:w="26"/><text x="92.3804%" y="543.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="93.6407%" y="517" width="0.5564%" height="15" fill="rgb(220,78,5)" fg:x="1178" fg:w="7"/><text x="93.8907%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="93.7202%" y="501" width="0.4769%" height="15" fill="rgb(237,23,21)" fg:x="1179" fg:w="6"/><text x="93.9702%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="93.7202%" y="485" width="0.4769%" height="15" fill="rgb(251,207,51)" fg:x="1179" fg:w="6"/><text x="93.9702%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="94.0382%" y="469" width="0.1590%" height="15" fill="rgb(249,206,18)" fg:x="1183" fg:w="2"/><text x="94.2882%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="94.0382%" y="453" width="0.1590%" height="15" fill="rgb(236,20,19)" fg:x="1183" fg:w="2"/><text x="94.2882%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.0382%" y="437" width="0.1590%" height="15" fill="rgb(214,227,29)" fg:x="1183" fg:w="2"/><text x="94.2882%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.0382%" y="421" width="0.1590%" height="15" fill="rgb(209,183,4)" fg:x="1183" fg:w="2"/><text x="94.2882%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.0382%" y="405" width="0.1590%" height="15" fill="rgb(233,111,23)" fg:x="1183" fg:w="2"/><text x="94.2882%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.0382%" y="389" width="0.1590%" height="15" fill="rgb(238,121,27)" fg:x="1183" fg:w="2"/><text x="94.2882%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.0382%" y="373" width="0.1590%" height="15" fill="rgb(236,120,41)" fg:x="1183" fg:w="2"/><text x="94.2882%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.0382%" y="357" width="0.1590%" height="15" fill="rgb(241,143,10)" fg:x="1183" fg:w="2"/><text x="94.2882%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.0382%" y="341" width="0.1590%" height="15" fill="rgb(224,86,31)" fg:x="1183" fg:w="2"/><text x="94.2882%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.1176%" y="325" width="0.0795%" height="15" fill="rgb(236,212,27)" fg:x="1184" fg:w="1"/><text x="94.3676%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1176%" y="309" width="0.0795%" height="15" fill="rgb(219,43,51)" fg:x="1184" fg:w="1"/><text x="94.3676%" y="319.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="94.1176%" y="293" width="0.0795%" height="15" fill="rgb(232,216,8)" fg:x="1184" fg:w="1"/><text x="94.3676%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.1971%" y="501" width="0.0795%" height="15" fill="rgb(206,222,39)" fg:x="1185" fg:w="1"/><text x="94.4471%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.4356%" y="437" width="0.1590%" height="15" fill="rgb(209,149,48)" fg:x="1188" fg:w="2"/><text x="94.6856%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.4356%" y="421" width="0.1590%" height="15" fill="rgb(229,155,21)" fg:x="1188" fg:w="2"/><text x="94.6856%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5151%" y="405" width="0.0795%" height="15" fill="rgb(246,152,26)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.5151%" y="389" width="0.0795%" height="15" fill="rgb(206,70,42)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5151%" y="373" width="0.0795%" height="15" fill="rgb(236,9,11)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5151%" y="357" width="0.0795%" height="15" fill="rgb(238,145,47)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.5151%" y="341" width="0.0795%" height="15" fill="rgb(252,189,7)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.5151%" y="325" width="0.0795%" height="15" fill="rgb(254,168,51)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.5151%" y="309" width="0.0795%" height="15" fill="rgb(227,105,46)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5151%" y="293" width="0.0795%" height="15" fill="rgb(227,74,30)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5151%" y="277" width="0.0795%" height="15" fill="rgb(206,212,44)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.5151%" y="261" width="0.0795%" height="15" fill="rgb(252,69,11)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.5151%" y="245" width="0.0795%" height="15" fill="rgb(239,116,0)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.5151%" y="229" width="0.0795%" height="15" fill="rgb(246,189,23)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.5151%" y="213" width="0.0795%" height="15" fill="rgb(229,50,41)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5151%" y="197" width="0.0795%" height="15" fill="rgb(214,66,37)" fg:x="1189" fg:w="1"/><text x="94.7651%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="94.5946%" y="437" width="0.0795%" height="15" fill="rgb(226,28,6)" fg:x="1190" fg:w="1"/><text x="94.8446%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.5946%" y="421" width="0.0795%" height="15" fill="rgb(239,154,0)" fg:x="1190" fg:w="1"/><text x="94.8446%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5946%" y="405" width="0.0795%" height="15" fill="rgb(233,97,11)" fg:x="1190" fg:w="1"/><text x="94.8446%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (6 samples, 0.48%)</title><rect x="94.2766%" y="501" width="0.4769%" height="15" fill="rgb(236,215,16)" fg:x="1186" fg:w="6"/><text x="94.5266%" y="511.50"></text></g><g><title>plugins_core::tools::contained_by (6 samples, 0.48%)</title><rect x="94.2766%" y="485" width="0.4769%" height="15" fill="rgb(246,188,29)" fg:x="1186" fg:w="6"/><text x="94.5266%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="94.4356%" y="469" width="0.3180%" height="15" fill="rgb(207,7,29)" fg:x="1188" fg:w="4"/><text x="94.6856%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="94.4356%" y="453" width="0.3180%" height="15" fill="rgb(238,112,43)" fg:x="1188" fg:w="4"/><text x="94.6856%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.6741%" y="437" width="0.0795%" height="15" fill="rgb(230,110,32)" fg:x="1191" fg:w="1"/><text x="94.9241%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6741%" y="421" width="0.0795%" height="15" fill="rgb(218,197,32)" fg:x="1191" fg:w="1"/><text x="94.9241%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.6741%" y="405" width="0.0795%" height="15" fill="rgb(252,61,9)" fg:x="1191" fg:w="1"/><text x="94.9241%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.6741%" y="389" width="0.0795%" height="15" fill="rgb(244,140,14)" fg:x="1191" fg:w="1"/><text x="94.9241%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="94.6741%" y="373" width="0.0795%" height="15" fill="rgb(216,14,47)" fg:x="1191" fg:w="1"/><text x="94.9241%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.6741%" y="357" width="0.0795%" height="15" fill="rgb(224,130,52)" fg:x="1191" fg:w="1"/><text x="94.9241%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6741%" y="341" width="0.0795%" height="15" fill="rgb(210,229,51)" fg:x="1191" fg:w="1"/><text x="94.9241%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.9126%" y="277" width="0.0795%" height="15" fill="rgb(242,13,9)" fg:x="1194" fg:w="1"/><text x="95.1626%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (11 samples, 0.87%)</title><rect x="94.1971%" y="533" width="0.8744%" height="15" fill="rgb(252,71,50)" fg:x="1185" fg:w="11"/><text x="94.4471%" y="543.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (11 samples, 0.87%)</title><rect x="94.1971%" y="517" width="0.8744%" height="15" fill="rgb(218,225,6)" fg:x="1185" fg:w="11"/><text x="94.4471%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="94.7536%" y="501" width="0.3180%" height="15" fill="rgb(219,27,35)" fg:x="1192" fg:w="4"/><text x="95.0036%" y="511.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="94.8331%" y="485" width="0.2385%" height="15" fill="rgb(226,30,1)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="94.8331%" y="469" width="0.2385%" height="15" fill="rgb(227,164,34)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="94.8331%" y="453" width="0.2385%" height="15" fill="rgb(206,103,4)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="94.8331%" y="437" width="0.2385%" height="15" fill="rgb(214,166,19)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="94.8331%" y="421" width="0.2385%" height="15" fill="rgb(240,56,20)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.8331%" y="405" width="0.2385%" height="15" fill="rgb(224,25,3)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.8331%" y="389" width="0.2385%" height="15" fill="rgb(216,206,54)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.8331%" y="373" width="0.2385%" height="15" fill="rgb(225,142,10)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.8331%" y="357" width="0.2385%" height="15" fill="rgb(246,9,18)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="94.8331%" y="341" width="0.2385%" height="15" fill="rgb(247,140,18)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.8331%" y="325" width="0.2385%" height="15" fill="rgb(239,184,22)" fg:x="1193" fg:w="3"/><text x="95.0831%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.9126%" y="309" width="0.1590%" height="15" fill="rgb(227,94,44)" fg:x="1194" fg:w="2"/><text x="95.1626%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.9126%" y="293" width="0.1590%" height="15" fill="rgb(219,43,3)" fg:x="1194" fg:w="2"/><text x="95.1626%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9921%" y="277" width="0.0795%" height="15" fill="rgb(210,76,31)" fg:x="1195" fg:w="1"/><text x="95.2421%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9921%" y="261" width="0.0795%" height="15" fill="rgb(225,85,12)" fg:x="1195" fg:w="1"/><text x="95.2421%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.9921%" y="245" width="0.0795%" height="15" fill="rgb(214,191,28)" fg:x="1195" fg:w="1"/><text x="95.2421%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="95.0715%" y="501" width="0.0795%" height="15" fill="rgb(214,43,14)" fg:x="1196" fg:w="1"/><text x="95.3215%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1510%" y="405" width="0.0795%" height="15" fill="rgb(253,117,5)" fg:x="1197" fg:w="1"/><text x="95.4010%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.1510%" y="469" width="0.1590%" height="15" fill="rgb(208,124,26)" fg:x="1197" fg:w="2"/><text x="95.4010%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.1510%" y="453" width="0.1590%" height="15" fill="rgb(228,208,39)" fg:x="1197" fg:w="2"/><text x="95.4010%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.1510%" y="437" width="0.1590%" height="15" fill="rgb(206,180,39)" fg:x="1197" fg:w="2"/><text x="95.4010%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.1510%" y="421" width="0.1590%" height="15" fill="rgb(205,111,37)" fg:x="1197" fg:w="2"/><text x="95.4010%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2305%" y="405" width="0.0795%" height="15" fill="rgb(208,121,24)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2305%" y="389" width="0.0795%" height="15" fill="rgb(218,215,32)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.2305%" y="373" width="0.0795%" height="15" fill="rgb(244,168,53)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.2305%" y="357" width="0.0795%" height="15" fill="rgb(214,9,36)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.2305%" y="341" width="0.0795%" height="15" fill="rgb(231,4,34)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2305%" y="325" width="0.0795%" height="15" fill="rgb(210,83,51)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2305%" y="309" width="0.0795%" height="15" fill="rgb(224,112,1)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.2305%" y="293" width="0.0795%" height="15" fill="rgb(216,33,41)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.2305%" y="277" width="0.0795%" height="15" fill="rgb(215,179,42)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.2305%" y="261" width="0.0795%" height="15" fill="rgb(205,81,48)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.2305%" y="245" width="0.0795%" height="15" fill="rgb(246,17,30)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2305%" y="229" width="0.0795%" height="15" fill="rgb(226,19,16)" fg:x="1198" fg:w="1"/><text x="95.4805%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="95.0715%" y="517" width="0.3180%" height="15" fill="rgb(207,3,14)" fg:x="1196" fg:w="4"/><text x="95.3215%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="95.1510%" y="501" width="0.2385%" height="15" fill="rgb(226,77,12)" fg:x="1197" fg:w="3"/><text x="95.4010%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="95.1510%" y="485" width="0.2385%" height="15" fill="rgb(226,76,25)" fg:x="1197" fg:w="3"/><text x="95.4010%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3100%" y="469" width="0.0795%" height="15" fill="rgb(217,216,25)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3100%" y="453" width="0.0795%" height="15" fill="rgb(247,127,42)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3100%" y="437" width="0.0795%" height="15" fill="rgb(226,10,34)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3100%" y="421" width="0.0795%" height="15" fill="rgb(249,78,0)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.3100%" y="405" width="0.0795%" height="15" fill="rgb(226,218,38)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3100%" y="389" width="0.0795%" height="15" fill="rgb(240,92,1)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3100%" y="373" width="0.0795%" height="15" fill="rgb(237,224,33)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3100%" y="357" width="0.0795%" height="15" fill="rgb(211,46,1)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3100%" y="341" width="0.0795%" height="15" fill="rgb(239,190,4)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3100%" y="325" width="0.0795%" height="15" fill="rgb(221,50,22)" fg:x="1199" fg:w="1"/><text x="95.5600%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="95.3895%" y="501" width="0.0795%" height="15" fill="rgb(207,176,8)" fg:x="1200" fg:w="1"/><text x="95.6395%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.3895%" y="485" width="0.0795%" height="15" fill="rgb(244,114,50)" fg:x="1200" fg:w="1"/><text x="95.6395%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.4690%" y="469" width="0.1590%" height="15" fill="rgb(226,206,19)" fg:x="1201" fg:w="2"/><text x="95.7190%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.4690%" y="453" width="0.1590%" height="15" fill="rgb(208,199,16)" fg:x="1201" fg:w="2"/><text x="95.7190%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.4690%" y="437" width="0.1590%" height="15" fill="rgb(208,38,14)" fg:x="1201" fg:w="2"/><text x="95.7190%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.4690%" y="421" width="0.1590%" height="15" fill="rgb(221,211,49)" fg:x="1201" fg:w="2"/><text x="95.7190%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.4690%" y="405" width="0.1590%" height="15" fill="rgb(227,214,34)" fg:x="1201" fg:w="2"/><text x="95.7190%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5485%" y="389" width="0.0795%" height="15" fill="rgb(234,5,54)" fg:x="1202" fg:w="1"/><text x="95.7985%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5485%" y="373" width="0.0795%" height="15" fill="rgb(236,215,22)" fg:x="1202" fg:w="1"/><text x="95.7985%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5485%" y="357" width="0.0795%" height="15" fill="rgb(244,0,11)" fg:x="1202" fg:w="1"/><text x="95.7985%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5485%" y="341" width="0.0795%" height="15" fill="rgb(212,140,16)" fg:x="1202" fg:w="1"/><text x="95.7985%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5485%" y="325" width="0.0795%" height="15" fill="rgb(238,101,37)" fg:x="1202" fg:w="1"/><text x="95.7985%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.5485%" y="309" width="0.0795%" height="15" fill="rgb(247,46,3)" fg:x="1202" fg:w="1"/><text x="95.7985%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.5485%" y="293" width="0.0795%" height="15" fill="rgb(208,106,19)" fg:x="1202" fg:w="1"/><text x="95.7985%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.7870%" y="373" width="0.0795%" height="15" fill="rgb(240,227,15)" fg:x="1205" fg:w="1"/><text x="96.0370%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (13 samples, 1.03%)</title><rect x="95.0715%" y="533" width="1.0334%" height="15" fill="rgb(226,173,6)" fg:x="1196" fg:w="13"/><text x="95.3215%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="95.3895%" y="517" width="0.7154%" height="15" fill="rgb(213,191,1)" fg:x="1200" fg:w="9"/><text x="95.6395%" y="527.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="95.4690%" y="501" width="0.6359%" height="15" fill="rgb(246,51,36)" fg:x="1201" fg:w="8"/><text x="95.7190%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="95.4690%" y="485" width="0.6359%" height="15" fill="rgb(238,40,32)" fg:x="1201" fg:w="8"/><text x="95.7190%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="95.6280%" y="469" width="0.4769%" height="15" fill="rgb(208,126,27)" fg:x="1203" fg:w="6"/><text x="95.8780%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="95.6280%" y="453" width="0.4769%" height="15" fill="rgb(227,117,38)" fg:x="1203" fg:w="6"/><text x="95.8780%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="95.7075%" y="437" width="0.3975%" height="15" fill="rgb(232,16,1)" fg:x="1204" fg:w="5"/><text x="95.9575%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="95.7075%" y="421" width="0.3975%" height="15" fill="rgb(212,111,31)" fg:x="1204" fg:w="5"/><text x="95.9575%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="95.7075%" y="405" width="0.3975%" height="15" fill="rgb(253,227,2)" fg:x="1204" fg:w="5"/><text x="95.9575%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="95.7075%" y="389" width="0.3975%" height="15" fill="rgb(216,122,17)" fg:x="1204" fg:w="5"/><text x="95.9575%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.8665%" y="373" width="0.2385%" height="15" fill="rgb(227,37,2)" fg:x="1206" fg:w="3"/><text x="96.1165%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.8665%" y="357" width="0.2385%" height="15" fill="rgb(244,113,40)" fg:x="1206" fg:w="3"/><text x="96.1165%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.8665%" y="341" width="0.2385%" height="15" fill="rgb(217,193,34)" fg:x="1206" fg:w="3"/><text x="96.1165%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.8665%" y="325" width="0.2385%" height="15" fill="rgb(212,223,15)" fg:x="1206" fg:w="3"/><text x="96.1165%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0254%" y="309" width="0.0795%" height="15" fill="rgb(238,143,18)" fg:x="1208" fg:w="1"/><text x="96.2754%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.0254%" y="293" width="0.0795%" height="15" fill="rgb(231,18,49)" fg:x="1208" fg:w="1"/><text x="96.2754%" y="303.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="96.1049%" y="533" width="0.0795%" height="15" fill="rgb(249,122,4)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1049%" y="517" width="0.0795%" height="15" fill="rgb(245,138,54)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1049%" y="501" width="0.0795%" height="15" fill="rgb(218,130,18)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1049%" y="485" width="0.0795%" height="15" fill="rgb(235,94,13)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1049%" y="469" width="0.0795%" height="15" fill="rgb(247,143,5)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1049%" y="453" width="0.0795%" height="15" fill="rgb(212,59,54)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1049%" y="437" width="0.0795%" height="15" fill="rgb(206,121,24)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1049%" y="421" width="0.0795%" height="15" fill="rgb(235,38,8)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1049%" y="405" width="0.0795%" height="15" fill="rgb(227,102,26)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.1049%" y="389" width="0.0795%" height="15" fill="rgb(240,183,46)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.1049%" y="373" width="0.0795%" height="15" fill="rgb(208,177,23)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.1049%" y="357" width="0.0795%" height="15" fill="rgb(216,152,5)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.1049%" y="341" width="0.0795%" height="15" fill="rgb(238,199,2)" fg:x="1209" fg:w="1"/><text x="96.3549%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.1844%" y="485" width="0.0795%" height="15" fill="rgb(235,142,28)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.1844%" y="469" width="0.0795%" height="15" fill="rgb(225,97,25)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.1844%" y="453" width="0.0795%" height="15" fill="rgb(208,75,46)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1844%" y="437" width="0.0795%" height="15" fill="rgb(240,136,15)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1844%" y="421" width="0.0795%" height="15" fill="rgb(235,36,27)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1844%" y="405" width="0.0795%" height="15" fill="rgb(231,132,23)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1844%" y="389" width="0.0795%" height="15" fill="rgb(205,208,20)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.1844%" y="373" width="0.0795%" height="15" fill="rgb(215,26,40)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1844%" y="357" width="0.0795%" height="15" fill="rgb(238,183,34)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1844%" y="341" width="0.0795%" height="15" fill="rgb(207,96,10)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1844%" y="325" width="0.0795%" height="15" fill="rgb(218,88,6)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.1844%" y="309" width="0.0795%" height="15" fill="rgb(217,22,49)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.1844%" y="293" width="0.0795%" height="15" fill="rgb(240,195,14)" fg:x="1210" fg:w="1"/><text x="96.4344%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2639%" y="437" width="0.0795%" height="15" fill="rgb(229,48,27)" fg:x="1211" fg:w="1"/><text x="96.5139%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2639%" y="421" width="0.0795%" height="15" fill="rgb(220,194,45)" fg:x="1211" fg:w="1"/><text x="96.5139%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2639%" y="405" width="0.0795%" height="15" fill="rgb(252,60,20)" fg:x="1211" fg:w="1"/><text x="96.5139%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2639%" y="389" width="0.0795%" height="15" fill="rgb(244,169,33)" fg:x="1211" fg:w="1"/><text x="96.5139%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.2639%" y="373" width="0.0795%" height="15" fill="rgb(234,141,34)" fg:x="1211" fg:w="1"/><text x="96.5139%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="96.1844%" y="517" width="0.3180%" height="15" fill="rgb(241,141,9)" fg:x="1210" fg:w="4"/><text x="96.4344%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="96.1844%" y="501" width="0.3180%" height="15" fill="rgb(246,27,36)" fg:x="1210" fg:w="4"/><text x="96.4344%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="96.2639%" y="485" width="0.2385%" height="15" fill="rgb(216,188,42)" fg:x="1211" fg:w="3"/><text x="96.5139%" y="495.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="96.2639%" y="469" width="0.2385%" height="15" fill="rgb(234,205,22)" fg:x="1211" fg:w="3"/><text x="96.5139%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="96.2639%" y="453" width="0.2385%" height="15" fill="rgb(210,202,32)" fg:x="1211" fg:w="3"/><text x="96.5139%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3434%" y="437" width="0.1590%" height="15" fill="rgb(217,0,48)" fg:x="1212" fg:w="2"/><text x="96.5934%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3434%" y="421" width="0.1590%" height="15" fill="rgb(207,115,37)" fg:x="1212" fg:w="2"/><text x="96.5934%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3434%" y="405" width="0.1590%" height="15" fill="rgb(237,221,44)" fg:x="1212" fg:w="2"/><text x="96.5934%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3434%" y="389" width="0.1590%" height="15" fill="rgb(249,78,2)" fg:x="1212" fg:w="2"/><text x="96.5934%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.4229%" y="373" width="0.0795%" height="15" fill="rgb(211,169,23)" fg:x="1213" fg:w="1"/><text x="96.6729%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4229%" y="357" width="0.0795%" height="15" fill="rgb(207,116,29)" fg:x="1213" fg:w="1"/><text x="96.6729%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4229%" y="341" width="0.0795%" height="15" fill="rgb(240,84,33)" fg:x="1213" fg:w="1"/><text x="96.6729%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4229%" y="325" width="0.0795%" height="15" fill="rgb(229,224,31)" fg:x="1213" fg:w="1"/><text x="96.6729%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4229%" y="309" width="0.0795%" height="15" fill="rgb(227,90,31)" fg:x="1213" fg:w="1"/><text x="96.6729%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4229%" y="293" width="0.0795%" height="15" fill="rgb(249,22,41)" fg:x="1213" fg:w="1"/><text x="96.6729%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8203%" y="341" width="0.0795%" height="15" fill="rgb(239,65,11)" fg:x="1218" fg:w="1"/><text x="97.0703%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8203%" y="325" width="0.0795%" height="15" fill="rgb(205,5,23)" fg:x="1218" fg:w="1"/><text x="97.0703%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.8203%" y="309" width="0.0795%" height="15" fill="rgb(254,78,52)" fg:x="1218" fg:w="1"/><text x="97.0703%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.8203%" y="293" width="0.0795%" height="15" fill="rgb(214,156,33)" fg:x="1218" fg:w="1"/><text x="97.0703%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.8203%" y="277" width="0.0795%" height="15" fill="rgb(208,20,30)" fg:x="1218" fg:w="1"/><text x="97.0703%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.8203%" y="261" width="0.0795%" height="15" fill="rgb(223,133,18)" fg:x="1218" fg:w="1"/><text x="97.0703%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8203%" y="245" width="0.0795%" height="15" fill="rgb(222,91,41)" fg:x="1218" fg:w="1"/><text x="97.0703%" y="255.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="96.6614%" y="485" width="0.3180%" height="15" fill="rgb(247,137,48)" fg:x="1216" fg:w="4"/><text x="96.9114%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="96.6614%" y="469" width="0.3180%" height="15" fill="rgb(239,156,11)" fg:x="1216" fg:w="4"/><text x="96.9114%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="96.7409%" y="453" width="0.2385%" height="15" fill="rgb(244,56,26)" fg:x="1217" fg:w="3"/><text x="96.9909%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.7409%" y="437" width="0.2385%" height="15" fill="rgb(205,131,49)" fg:x="1217" fg:w="3"/><text x="96.9909%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.8203%" y="421" width="0.1590%" height="15" fill="rgb(224,0,2)" fg:x="1218" fg:w="2"/><text x="97.0703%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.8203%" y="405" width="0.1590%" height="15" fill="rgb(247,59,36)" fg:x="1218" fg:w="2"/><text x="97.0703%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="96.8203%" y="389" width="0.1590%" height="15" fill="rgb(215,4,47)" fg:x="1218" fg:w="2"/><text x="97.0703%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="96.8203%" y="373" width="0.1590%" height="15" fill="rgb(242,72,42)" fg:x="1218" fg:w="2"/><text x="97.0703%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="96.8203%" y="357" width="0.1590%" height="15" fill="rgb(232,145,44)" fg:x="1218" fg:w="2"/><text x="97.0703%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.8998%" y="341" width="0.0795%" height="15" fill="rgb(205,108,43)" fg:x="1219" fg:w="1"/><text x="97.1498%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.8998%" y="325" width="0.0795%" height="15" fill="rgb(215,190,17)" fg:x="1219" fg:w="1"/><text x="97.1498%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (7 samples, 0.56%)</title><rect x="96.5024%" y="517" width="0.5564%" height="15" fill="rgb(223,90,34)" fg:x="1214" fg:w="7"/><text x="96.7524%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="96.5024%" y="501" width="0.5564%" height="15" fill="rgb(216,25,0)" fg:x="1214" fg:w="7"/><text x="96.7524%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.9793%" y="485" width="0.0795%" height="15" fill="rgb(223,51,28)" fg:x="1220" fg:w="1"/><text x="97.2293%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9793%" y="469" width="0.0795%" height="15" fill="rgb(227,131,7)" fg:x="1220" fg:w="1"/><text x="97.2293%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.9793%" y="453" width="0.0795%" height="15" fill="rgb(216,72,36)" fg:x="1220" fg:w="1"/><text x="97.2293%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.9793%" y="437" width="0.0795%" height="15" fill="rgb(243,158,40)" fg:x="1220" fg:w="1"/><text x="97.2293%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.9793%" y="421" width="0.0795%" height="15" fill="rgb(218,60,54)" fg:x="1220" fg:w="1"/><text x="97.2293%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.9793%" y="405" width="0.0795%" height="15" fill="rgb(230,15,46)" fg:x="1220" fg:w="1"/><text x="97.2293%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9793%" y="389" width="0.0795%" height="15" fill="rgb(250,22,26)" fg:x="1220" fg:w="1"/><text x="97.2293%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9793%" y="373" width="0.0795%" height="15" fill="rgb(239,194,40)" fg:x="1220" fg:w="1"/><text x="97.2293%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::HasScopes&gt;::scopes (1 samples, 0.08%)</title><rect x="97.0588%" y="501" width="0.0795%" height="15" fill="rgb(219,62,9)" fg:x="1221" fg:w="1"/><text x="97.3088%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="97.1383%" y="453" width="0.1590%" height="15" fill="rgb(228,45,21)" fg:x="1222" fg:w="2"/><text x="97.3883%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.2973%" y="405" width="0.0795%" height="15" fill="rgb(242,56,44)" fg:x="1224" fg:w="1"/><text x="97.5473%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (4 samples, 0.32%)</title><rect x="97.1383%" y="485" width="0.3180%" height="15" fill="rgb(239,170,14)" fg:x="1222" fg:w="4"/><text x="97.3883%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="97.1383%" y="469" width="0.3180%" height="15" fill="rgb(236,150,13)" fg:x="1222" fg:w="4"/><text x="97.3883%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="97.2973%" y="453" width="0.1590%" height="15" fill="rgb(228,15,30)" fg:x="1224" fg:w="2"/><text x="97.5473%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="97.2973%" y="437" width="0.1590%" height="15" fill="rgb(217,43,28)" fg:x="1224" fg:w="2"/><text x="97.5473%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="97.2973%" y="421" width="0.1590%" height="15" fill="rgb(246,223,1)" fg:x="1224" fg:w="2"/><text x="97.5473%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.3768%" y="405" width="0.0795%" height="15" fill="rgb(247,103,7)" fg:x="1225" fg:w="1"/><text x="97.6268%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="97.4563%" y="453" width="0.0795%" height="15" fill="rgb(205,105,39)" fg:x="1226" fg:w="1"/><text x="97.7063%" y="463.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="97.0588%" y="517" width="0.5564%" height="15" fill="rgb(216,134,18)" fg:x="1221" fg:w="7"/><text x="97.3088%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="97.1383%" y="501" width="0.4769%" height="15" fill="rgb(226,139,50)" fg:x="1222" fg:w="6"/><text x="97.3883%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="97.4563%" y="485" width="0.1590%" height="15" fill="rgb(251,152,38)" fg:x="1226" fg:w="2"/><text x="97.7063%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.4563%" y="469" width="0.1590%" height="15" fill="rgb(222,63,15)" fg:x="1226" fg:w="2"/><text x="97.7063%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="97.5358%" y="453" width="0.0795%" height="15" fill="rgb(212,198,28)" fg:x="1227" fg:w="1"/><text x="97.7858%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="97.5358%" y="437" width="0.0795%" height="15" fill="rgb(216,93,38)" fg:x="1227" fg:w="1"/><text x="97.7858%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.5358%" y="421" width="0.0795%" height="15" fill="rgb(247,202,44)" fg:x="1227" fg:w="1"/><text x="97.7858%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5358%" y="405" width="0.0795%" height="15" fill="rgb(237,204,46)" fg:x="1227" fg:w="1"/><text x="97.7858%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5358%" y="389" width="0.0795%" height="15" fill="rgb(224,98,48)" fg:x="1227" fg:w="1"/><text x="97.7858%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="97.6948%" y="453" width="0.0795%" height="15" fill="rgb(247,105,21)" fg:x="1229" fg:w="1"/><text x="97.9448%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.6948%" y="437" width="0.0795%" height="15" fill="rgb(212,137,52)" fg:x="1229" fg:w="1"/><text x="97.9448%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7742%" y="421" width="0.0795%" height="15" fill="rgb(223,76,33)" fg:x="1230" fg:w="1"/><text x="98.0242%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7742%" y="405" width="0.0795%" height="15" fill="rgb(209,156,27)" fg:x="1230" fg:w="1"/><text x="98.0242%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7742%" y="389" width="0.0795%" height="15" fill="rgb(249,81,54)" fg:x="1230" fg:w="1"/><text x="98.0242%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7742%" y="373" width="0.0795%" height="15" fill="rgb(241,46,29)" fg:x="1230" fg:w="1"/><text x="98.0242%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.7742%" y="357" width="0.0795%" height="15" fill="rgb(213,193,39)" fg:x="1230" fg:w="1"/><text x="98.0242%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="97.6153%" y="517" width="0.3180%" height="15" fill="rgb(214,85,16)" fg:x="1228" fg:w="4"/><text x="97.8653%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="97.6948%" y="501" width="0.2385%" height="15" fill="rgb(216,184,17)" fg:x="1229" fg:w="3"/><text x="97.9448%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="97.6948%" y="485" width="0.2385%" height="15" fill="rgb(254,219,29)" fg:x="1229" fg:w="3"/><text x="97.9448%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="97.6948%" y="469" width="0.2385%" height="15" fill="rgb(209,148,34)" fg:x="1229" fg:w="3"/><text x="97.9448%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.7742%" y="453" width="0.1590%" height="15" fill="rgb(253,215,11)" fg:x="1230" fg:w="2"/><text x="98.0242%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.7742%" y="437" width="0.1590%" height="15" fill="rgb(232,126,20)" fg:x="1230" fg:w="2"/><text x="98.0242%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8537%" y="421" width="0.0795%" height="15" fill="rgb(248,118,51)" fg:x="1231" fg:w="1"/><text x="98.1037%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8537%" y="405" width="0.0795%" height="15" fill="rgb(226,121,21)" fg:x="1231" fg:w="1"/><text x="98.1037%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8537%" y="389" width="0.0795%" height="15" fill="rgb(216,128,16)" fg:x="1231" fg:w="1"/><text x="98.1037%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8537%" y="373" width="0.0795%" height="15" fill="rgb(205,17,9)" fg:x="1231" fg:w="1"/><text x="98.1037%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.8537%" y="357" width="0.0795%" height="15" fill="rgb(206,197,21)" fg:x="1231" fg:w="1"/><text x="98.1037%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8537%" y="341" width="0.0795%" height="15" fill="rgb(212,202,9)" fg:x="1231" fg:w="1"/><text x="98.1037%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8537%" y="325" width="0.0795%" height="15" fill="rgb(241,131,50)" fg:x="1231" fg:w="1"/><text x="98.1037%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8537%" y="309" width="0.0795%" height="15" fill="rgb(228,115,51)" fg:x="1231" fg:w="1"/><text x="98.1037%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.8537%" y="293" width="0.0795%" height="15" fill="rgb(237,209,8)" fg:x="1231" fg:w="1"/><text x="98.1037%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.9332%" y="501" width="0.1590%" height="15" fill="rgb(241,121,28)" fg:x="1232" fg:w="2"/><text x="98.1832%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.9332%" y="485" width="0.1590%" height="15" fill="rgb(238,194,51)" fg:x="1232" fg:w="2"/><text x="98.1832%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="98.0127%" y="469" width="0.0795%" height="15" fill="rgb(208,41,39)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0127%" y="453" width="0.0795%" height="15" fill="rgb(223,95,44)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0127%" y="437" width="0.0795%" height="15" fill="rgb(253,98,40)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0127%" y="421" width="0.0795%" height="15" fill="rgb(210,5,12)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0127%" y="405" width="0.0795%" height="15" fill="rgb(233,201,23)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0127%" y="389" width="0.0795%" height="15" fill="rgb(251,68,15)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0127%" y="373" width="0.0795%" height="15" fill="rgb(243,10,46)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0127%" y="357" width="0.0795%" height="15" fill="rgb(253,130,44)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0127%" y="341" width="0.0795%" height="15" fill="rgb(244,5,26)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0127%" y="325" width="0.0795%" height="15" fill="rgb(220,126,20)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0127%" y="309" width="0.0795%" height="15" fill="rgb(212,188,29)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0127%" y="293" width="0.0795%" height="15" fill="rgb(227,194,48)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0127%" y="277" width="0.0795%" height="15" fill="rgb(245,64,28)" fg:x="1233" fg:w="1"/><text x="98.2627%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (135 samples, 10.73%)</title><rect x="87.4404%" y="725" width="10.7313%" height="15" fill="rgb(205,44,7)" fg:x="1100" fg:w="135"/><text x="87.6904%" y="735.50">&lt;engine::session..</text></g><g><title>kernel::plugins::mw::apply_middleware (135 samples, 10.73%)</title><rect x="87.4404%" y="709" width="10.7313%" height="15" fill="rgb(213,193,11)" fg:x="1100" fg:w="135"/><text x="87.6904%" y="719.50">kernel::plugins:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (135 samples, 10.73%)</title><rect x="87.4404%" y="693" width="10.7313%" height="15" fill="rgb(238,157,6)" fg:x="1100" fg:w="135"/><text x="87.6904%" y="703.50">kernel::plugins:..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (135 samples, 10.73%)</title><rect x="87.4404%" y="677" width="10.7313%" height="15" fill="rgb(222,73,7)" fg:x="1100" fg:w="135"/><text x="87.6904%" y="687.50">&lt;engine::session..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (123 samples, 9.78%)</title><rect x="88.3943%" y="661" width="9.7774%" height="15" fill="rgb(224,78,15)" fg:x="1112" fg:w="123"/><text x="88.6443%" y="671.50">kernel::plugin..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (123 samples, 9.78%)</title><rect x="88.3943%" y="645" width="9.7774%" height="15" fill="rgb(218,149,46)" fg:x="1112" fg:w="123"/><text x="88.6443%" y="655.50">&lt;plugins_dynli..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (122 samples, 9.70%)</title><rect x="88.4738%" y="629" width="9.6979%" height="15" fill="rgb(218,175,44)" fg:x="1113" fg:w="122"/><text x="88.7238%" y="639.50">kernel::plugin..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (122 samples, 9.70%)</title><rect x="88.4738%" y="613" width="9.6979%" height="15" fill="rgb(215,183,45)" fg:x="1113" fg:w="122"/><text x="88.7238%" y="623.50">core::ops::fun..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (122 samples, 9.70%)</title><rect x="88.4738%" y="597" width="9.6979%" height="15" fill="rgb(226,116,37)" fg:x="1113" fg:w="122"/><text x="88.7238%" y="607.50">kernel::plugin..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (122 samples, 9.70%)</title><rect x="88.4738%" y="581" width="9.6979%" height="15" fill="rgb(252,224,12)" fg:x="1113" fg:w="122"/><text x="88.7238%" y="591.50">core::ops::fun..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (121 samples, 9.62%)</title><rect x="88.5533%" y="565" width="9.6184%" height="15" fill="rgb(232,212,21)" fg:x="1114" fg:w="121"/><text x="88.8033%" y="575.50">&lt;engine::sessi..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (50 samples, 3.97%)</title><rect x="94.1971%" y="549" width="3.9746%" height="15" fill="rgb(226,191,16)" fg:x="1185" fg:w="50"/><text x="94.4471%" y="559.50">&lt;plu..</text></g><g><title>plugins_core::tools::move_between (25 samples, 1.99%)</title><rect x="96.1844%" y="533" width="1.9873%" height="15" fill="rgb(231,156,11)" fg:x="1210" fg:w="25"/><text x="96.4344%" y="543.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="97.9332%" y="517" width="0.2385%" height="15" fill="rgb(225,134,49)" fg:x="1232" fg:w="3"/><text x="98.1832%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="98.0922%" y="501" width="0.0795%" height="15" fill="rgb(254,55,32)" fg:x="1234" fg:w="1"/><text x="98.3422%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.0922%" y="485" width="0.0795%" height="15" fill="rgb(242,195,29)" fg:x="1234" fg:w="1"/><text x="98.3422%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1717%" y="517" width="0.0795%" height="15" fill="rgb(210,155,20)" fg:x="1235" fg:w="1"/><text x="98.4217%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.1717%" y="661" width="0.1590%" height="15" fill="rgb(243,170,23)" fg:x="1235" fg:w="2"/><text x="98.4217%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.1717%" y="645" width="0.1590%" height="15" fill="rgb(242,197,51)" fg:x="1235" fg:w="2"/><text x="98.4217%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.1717%" y="629" width="0.1590%" height="15" fill="rgb(248,48,13)" fg:x="1235" fg:w="2"/><text x="98.4217%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.1717%" y="613" width="0.1590%" height="15" fill="rgb(221,185,15)" fg:x="1235" fg:w="2"/><text x="98.4217%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1717%" y="597" width="0.1590%" height="15" fill="rgb(244,49,7)" fg:x="1235" fg:w="2"/><text x="98.4217%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.1717%" y="581" width="0.1590%" height="15" fill="rgb(213,182,52)" fg:x="1235" fg:w="2"/><text x="98.4217%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1717%" y="565" width="0.1590%" height="15" fill="rgb(209,15,45)" fg:x="1235" fg:w="2"/><text x="98.4217%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.1717%" y="549" width="0.1590%" height="15" fill="rgb(233,23,44)" fg:x="1235" fg:w="2"/><text x="98.4217%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1717%" y="533" width="0.1590%" height="15" fill="rgb(220,182,30)" fg:x="1235" fg:w="2"/><text x="98.4217%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.2512%" y="517" width="0.0795%" height="15" fill="rgb(219,116,33)" fg:x="1236" fg:w="1"/><text x="98.5012%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2512%" y="501" width="0.0795%" height="15" fill="rgb(231,15,21)" fg:x="1236" fg:w="1"/><text x="98.5012%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.2512%" y="485" width="0.0795%" height="15" fill="rgb(238,119,25)" fg:x="1236" fg:w="1"/><text x="98.5012%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2512%" y="469" width="0.0795%" height="15" fill="rgb(232,30,39)" fg:x="1236" fg:w="1"/><text x="98.5012%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="98.1717%" y="693" width="0.2385%" height="15" fill="rgb(241,26,30)" fg:x="1235" fg:w="3"/><text x="98.4217%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="98.1717%" y="677" width="0.2385%" height="15" fill="rgb(234,154,4)" fg:x="1235" fg:w="3"/><text x="98.4217%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.3307%" y="661" width="0.0795%" height="15" fill="rgb(229,199,39)" fg:x="1237" fg:w="1"/><text x="98.5807%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="98.3307%" y="645" width="0.0795%" height="15" fill="rgb(236,213,10)" fg:x="1237" fg:w="1"/><text x="98.5807%" y="655.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="98.4102%" y="677" width="0.0795%" height="15" fill="rgb(247,28,19)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.4102%" y="661" width="0.0795%" height="15" fill="rgb(239,199,24)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4102%" y="645" width="0.0795%" height="15" fill="rgb(246,122,13)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.4102%" y="629" width="0.0795%" height="15" fill="rgb(210,203,29)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4102%" y="613" width="0.0795%" height="15" fill="rgb(218,4,50)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.4102%" y="597" width="0.0795%" height="15" fill="rgb(236,142,48)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4102%" y="581" width="0.0795%" height="15" fill="rgb(245,173,2)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4102%" y="565" width="0.0795%" height="15" fill="rgb(244,196,18)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4102%" y="549" width="0.0795%" height="15" fill="rgb(221,27,33)" fg:x="1238" fg:w="1"/><text x="98.6602%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.4897%" y="645" width="0.0795%" height="15" fill="rgb(210,206,16)" fg:x="1239" fg:w="1"/><text x="98.7397%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.4897%" y="629" width="0.0795%" height="15" fill="rgb(238,161,34)" fg:x="1239" fg:w="1"/><text x="98.7397%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.5692%" y="597" width="0.0795%" height="15" fill="rgb(243,118,39)" fg:x="1240" fg:w="1"/><text x="98.8192%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5692%" y="581" width="0.0795%" height="15" fill="rgb(234,126,9)" fg:x="1240" fg:w="1"/><text x="98.8192%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.5692%" y="565" width="0.0795%" height="15" fill="rgb(234,167,42)" fg:x="1240" fg:w="1"/><text x="98.8192%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5692%" y="549" width="0.0795%" height="15" fill="rgb(238,54,48)" fg:x="1240" fg:w="1"/><text x="98.8192%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.5692%" y="533" width="0.0795%" height="15" fill="rgb(226,105,2)" fg:x="1240" fg:w="1"/><text x="98.8192%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5692%" y="517" width="0.0795%" height="15" fill="rgb(223,95,23)" fg:x="1240" fg:w="1"/><text x="98.8192%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.5692%" y="501" width="0.0795%" height="15" fill="rgb(249,212,19)" fg:x="1240" fg:w="1"/><text x="98.8192%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.6486%" y="597" width="0.0795%" height="15" fill="rgb(234,158,54)" fg:x="1241" fg:w="1"/><text x="98.8986%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.6486%" y="581" width="0.0795%" height="15" fill="rgb(247,114,32)" fg:x="1241" fg:w="1"/><text x="98.8986%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.6486%" y="565" width="0.0795%" height="15" fill="rgb(250,68,44)" fg:x="1241" fg:w="1"/><text x="98.8986%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="98.5692%" y="645" width="0.2385%" height="15" fill="rgb(242,3,15)" fg:x="1240" fg:w="3"/><text x="98.8192%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.5692%" y="629" width="0.2385%" height="15" fill="rgb(223,110,32)" fg:x="1240" fg:w="3"/><text x="98.8192%" y="639.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.5692%" y="613" width="0.2385%" height="15" fill="rgb(216,26,54)" fg:x="1240" fg:w="3"/><text x="98.8192%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7281%" y="597" width="0.0795%" height="15" fill="rgb(209,145,42)" fg:x="1242" fg:w="1"/><text x="98.9781%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7281%" y="581" width="0.0795%" height="15" fill="rgb(240,111,53)" fg:x="1242" fg:w="1"/><text x="98.9781%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="98.1717%" y="725" width="0.7154%" height="15" fill="rgb(209,101,4)" fg:x="1235" fg:w="9"/><text x="98.4217%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="98.1717%" y="709" width="0.7154%" height="15" fill="rgb(231,74,29)" fg:x="1235" fg:w="9"/><text x="98.4217%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="98.4102%" y="693" width="0.4769%" height="15" fill="rgb(223,12,12)" fg:x="1238" fg:w="6"/><text x="98.6602%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="98.4897%" y="677" width="0.3975%" height="15" fill="rgb(207,162,2)" fg:x="1239" fg:w="5"/><text x="98.7397%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.4897%" y="661" width="0.3975%" height="15" fill="rgb(230,152,0)" fg:x="1239" fg:w="5"/><text x="98.7397%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8076%" y="645" width="0.0795%" height="15" fill="rgb(254,156,19)" fg:x="1243" fg:w="1"/><text x="99.0576%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8076%" y="629" width="0.0795%" height="15" fill="rgb(250,28,0)" fg:x="1243" fg:w="1"/><text x="99.0576%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.8076%" y="613" width="0.0795%" height="15" fill="rgb(253,27,5)" fg:x="1243" fg:w="1"/><text x="99.0576%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.9666%" y="645" width="0.0795%" height="15" fill="rgb(244,154,7)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.9666%" y="629" width="0.0795%" height="15" fill="rgb(242,108,21)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.9666%" y="613" width="0.0795%" height="15" fill="rgb(254,200,38)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9666%" y="597" width="0.0795%" height="15" fill="rgb(250,145,41)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9666%" y="581" width="0.0795%" height="15" fill="rgb(235,136,31)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9666%" y="565" width="0.0795%" height="15" fill="rgb(215,13,18)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9666%" y="549" width="0.0795%" height="15" fill="rgb(238,199,12)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9666%" y="533" width="0.0795%" height="15" fill="rgb(242,179,49)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9666%" y="517" width="0.0795%" height="15" fill="rgb(214,10,44)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9666%" y="501" width="0.0795%" height="15" fill="rgb(229,181,11)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.9666%" y="485" width="0.0795%" height="15" fill="rgb(244,155,10)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.9666%" y="469" width="0.0795%" height="15" fill="rgb(254,13,48)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.9666%" y="453" width="0.0795%" height="15" fill="rgb(210,164,6)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="98.9666%" y="437" width="0.0795%" height="15" fill="rgb(216,187,40)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.9666%" y="421" width="0.0795%" height="15" fill="rgb(208,143,21)" fg:x="1245" fg:w="1"/><text x="99.2166%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0461%" y="597" width="0.0795%" height="15" fill="rgb(211,73,41)" fg:x="1246" fg:w="1"/><text x="99.2961%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0461%" y="581" width="0.0795%" height="15" fill="rgb(244,69,21)" fg:x="1246" fg:w="1"/><text x="99.2961%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0461%" y="565" width="0.0795%" height="15" fill="rgb(230,152,32)" fg:x="1246" fg:w="1"/><text x="99.2961%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0461%" y="549" width="0.0795%" height="15" fill="rgb(208,110,18)" fg:x="1246" fg:w="1"/><text x="99.2961%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0461%" y="533" width="0.0795%" height="15" fill="rgb(214,201,49)" fg:x="1246" fg:w="1"/><text x="99.2961%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="98.9666%" y="677" width="0.3180%" height="15" fill="rgb(253,153,27)" fg:x="1245" fg:w="4"/><text x="99.2166%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="98.9666%" y="661" width="0.3180%" height="15" fill="rgb(238,61,11)" fg:x="1245" fg:w="4"/><text x="99.2166%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="99.0461%" y="645" width="0.2385%" height="15" fill="rgb(227,84,2)" fg:x="1246" fg:w="3"/><text x="99.2961%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="99.0461%" y="629" width="0.2385%" height="15" fill="rgb(233,52,8)" fg:x="1246" fg:w="3"/><text x="99.2961%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.0461%" y="613" width="0.2385%" height="15" fill="rgb(209,136,13)" fg:x="1246" fg:w="3"/><text x="99.2961%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1256%" y="597" width="0.1590%" height="15" fill="rgb(229,86,25)" fg:x="1247" fg:w="2"/><text x="99.3756%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1256%" y="581" width="0.1590%" height="15" fill="rgb(235,47,16)" fg:x="1247" fg:w="2"/><text x="99.3756%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1256%" y="565" width="0.1590%" height="15" fill="rgb(231,186,4)" fg:x="1247" fg:w="2"/><text x="99.3756%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1256%" y="549" width="0.1590%" height="15" fill="rgb(209,213,23)" fg:x="1247" fg:w="2"/><text x="99.3756%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.1256%" y="533" width="0.1590%" height="15" fill="rgb(212,142,47)" fg:x="1247" fg:w="2"/><text x="99.3756%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1256%" y="517" width="0.1590%" height="15" fill="rgb(251,86,24)" fg:x="1247" fg:w="2"/><text x="99.3756%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2051%" y="501" width="0.0795%" height="15" fill="rgb(206,217,17)" fg:x="1248" fg:w="1"/><text x="99.4551%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2051%" y="485" width="0.0795%" height="15" fill="rgb(248,92,38)" fg:x="1248" fg:w="1"/><text x="99.4551%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2051%" y="469" width="0.0795%" height="15" fill="rgb(214,25,29)" fg:x="1248" fg:w="1"/><text x="99.4551%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2051%" y="453" width="0.0795%" height="15" fill="rgb(245,117,13)" fg:x="1248" fg:w="1"/><text x="99.4551%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2846%" y="613" width="0.0795%" height="15" fill="rgb(205,169,9)" fg:x="1249" fg:w="1"/><text x="99.5346%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2846%" y="597" width="0.0795%" height="15" fill="rgb(223,134,38)" fg:x="1249" fg:w="1"/><text x="99.5346%" y="607.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.2846%" y="661" width="0.1590%" height="15" fill="rgb(249,129,49)" fg:x="1249" fg:w="2"/><text x="99.5346%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.2846%" y="645" width="0.1590%" height="15" fill="rgb(229,157,45)" fg:x="1249" fg:w="2"/><text x="99.5346%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2846%" y="629" width="0.1590%" height="15" fill="rgb(232,159,11)" fg:x="1249" fg:w="2"/><text x="99.5346%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3641%" y="613" width="0.0795%" height="15" fill="rgb(230,134,26)" fg:x="1250" fg:w="1"/><text x="99.6141%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3641%" y="597" width="0.0795%" height="15" fill="rgb(234,149,40)" fg:x="1250" fg:w="1"/><text x="99.6141%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3641%" y="581" width="0.0795%" height="15" fill="rgb(221,122,15)" fg:x="1250" fg:w="1"/><text x="99.6141%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3641%" y="565" width="0.0795%" height="15" fill="rgb(228,127,0)" fg:x="1250" fg:w="1"/><text x="99.6141%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.3641%" y="549" width="0.0795%" height="15" fill="rgb(248,37,7)" fg:x="1250" fg:w="1"/><text x="99.6141%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.3641%" y="533" width="0.0795%" height="15" fill="rgb(215,140,49)" fg:x="1250" fg:w="1"/><text x="99.6141%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.5231%" y="629" width="0.0795%" height="15" fill="rgb(236,65,39)" fg:x="1252" fg:w="1"/><text x="99.7731%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5231%" y="613" width="0.0795%" height="15" fill="rgb(253,102,38)" fg:x="1252" fg:w="1"/><text x="99.7731%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.5231%" y="597" width="0.0795%" height="15" fill="rgb(244,100,34)" fg:x="1252" fg:w="1"/><text x="99.7731%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="99.2846%" y="677" width="0.3975%" height="15" fill="rgb(210,179,47)" fg:x="1249" fg:w="5"/><text x="99.5346%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.4436%" y="661" width="0.2385%" height="15" fill="rgb(231,41,37)" fg:x="1251" fg:w="3"/><text x="99.6936%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.4436%" y="645" width="0.2385%" height="15" fill="rgb(226,209,17)" fg:x="1251" fg:w="3"/><text x="99.6936%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6025%" y="629" width="0.0795%" height="15" fill="rgb(231,154,20)" fg:x="1253" fg:w="1"/><text x="99.8525%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6025%" y="613" width="0.0795%" height="15" fill="rgb(216,134,24)" fg:x="1253" fg:w="1"/><text x="99.8525%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="99.6025%" y="597" width="0.0795%" height="15" fill="rgb(224,71,42)" fg:x="1253" fg:w="1"/><text x="99.8525%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.6025%" y="581" width="0.0795%" height="15" fill="rgb(250,65,23)" fg:x="1253" fg:w="1"/><text x="99.8525%" y="591.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.6025%" y="565" width="0.0795%" height="15" fill="rgb(209,160,35)" fg:x="1253" fg:w="1"/><text x="99.8525%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (11 samples, 0.87%)</title><rect x="98.8871%" y="725" width="0.8744%" height="15" fill="rgb(215,8,11)" fg:x="1244" fg:w="11"/><text x="99.1371%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.87%)</title><rect x="98.8871%" y="709" width="0.8744%" height="15" fill="rgb(227,27,12)" fg:x="1244" fg:w="11"/><text x="99.1371%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.79%)</title><rect x="98.9666%" y="693" width="0.7949%" height="15" fill="rgb(226,111,41)" fg:x="1245" fg:w="10"/><text x="99.2166%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.6820%" y="677" width="0.0795%" height="15" fill="rgb(212,195,15)" fg:x="1254" fg:w="1"/><text x="99.9320%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.6820%" y="661" width="0.0795%" height="15" fill="rgb(216,191,17)" fg:x="1254" fg:w="1"/><text x="99.9320%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.6820%" y="645" width="0.0795%" height="15" fill="rgb(215,57,44)" fg:x="1254" fg:w="1"/><text x="99.9320%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6820%" y="629" width="0.0795%" height="15" fill="rgb(209,38,4)" fg:x="1254" fg:w="1"/><text x="99.9320%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6820%" y="613" width="0.0795%" height="15" fill="rgb(238,49,31)" fg:x="1254" fg:w="1"/><text x="99.9320%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6820%" y="597" width="0.0795%" height="15" fill="rgb(219,48,39)" fg:x="1254" fg:w="1"/><text x="99.9320%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7615%" y="693" width="0.0795%" height="15" fill="rgb(252,223,43)" fg:x="1255" fg:w="1"/><text x="100.0115%" y="703.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7615%" y="677" width="0.0795%" height="15" fill="rgb(247,205,46)" fg:x="1255" fg:w="1"/><text x="100.0115%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.7615%" y="661" width="0.0795%" height="15" fill="rgb(231,16,40)" fg:x="1255" fg:w="1"/><text x="100.0115%" y="671.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.7615%" y="725" width="0.1590%" height="15" fill="rgb(231,115,5)" fg:x="1255" fg:w="2"/><text x="100.0115%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="99.7615%" y="709" width="0.1590%" height="15" fill="rgb(206,127,43)" fg:x="1255" fg:w="2"/><text x="100.0115%" y="719.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8410%" y="693" width="0.0795%" height="15" fill="rgb(218,101,9)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="703.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8410%" y="677" width="0.0795%" height="15" fill="rgb(235,138,50)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.8410%" y="661" width="0.0795%" height="15" fill="rgb(214,197,52)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.8410%" y="645" width="0.0795%" height="15" fill="rgb(230,80,19)" fg:x="1256" fg:w="1"/><text x="100.0910%" y="655.50"></text></g><g><title>all (1,258 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(224,77,16)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1103.50"></text></g><g><title>simple-484c7248 (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(246,4,13)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1087.50">simple-484c7248</text></g><g><title>_start (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(220,177,26)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1071.50">_start</text></g><g><title>__libc_start_main (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(215,114,45)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1055.50">__libc_start_main</text></g><g><title>main (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(215,71,54)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (1,258 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(211,155,22)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,258 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(245,206,18)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,258 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(248,216,48)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,258 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(244,84,45)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,258 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(245,13,45)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,258 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(247,163,2)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,258 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(211,175,10)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,258 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(215,186,31)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,258 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(207,42,11)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="895.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,258 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(224,197,20)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="879.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,258 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(244,119,36)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,258 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(250,60,27)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="847.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,258 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(252,202,1)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="831.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,258 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(206,53,25)" fg:x="0" fg:w="1258"/><text x="0.2500%" y="815.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (434 samples, 34.50%)</title><rect x="65.5008%" y="789" width="34.4992%" height="15" fill="rgb(210,88,4)" fg:x="824" fg:w="434"/><text x="65.7508%" y="799.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routi..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (434 samples, 34.50%)</title><rect x="65.5008%" y="773" width="34.4992%" height="15" fill="rgb(211,144,28)" fg:x="824" fg:w="434"/><text x="65.7508%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (434 samples, 34.50%)</title><rect x="65.5008%" y="757" width="34.4992%" height="15" fill="rgb(247,81,32)" fg:x="824" fg:w="434"/><text x="65.7508%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (160 samples, 12.72%)</title><rect x="87.2814%" y="741" width="12.7186%" height="15" fill="rgb(225,192,11)" fg:x="1098" fg:w="160"/><text x="87.5314%" y="751.50">engine::session::Se..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.9205%" y="725" width="0.0795%" height="15" fill="rgb(232,212,27)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.9205%" y="709" width="0.0795%" height="15" fill="rgb(239,3,29)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.9205%" y="693" width="0.0795%" height="15" fill="rgb(252,225,29)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9205%" y="677" width="0.0795%" height="15" fill="rgb(205,151,9)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9205%" y="661" width="0.0795%" height="15" fill="rgb(216,171,47)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.9205%" y="645" width="0.0795%" height="15" fill="rgb(206,181,1)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.9205%" y="629" width="0.0795%" height="15" fill="rgb(232,218,10)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9205%" y="613" width="0.0795%" height="15" fill="rgb(244,222,51)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.9205%" y="597" width="0.0795%" height="15" fill="rgb(252,215,16)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.9205%" y="581" width="0.0795%" height="15" fill="rgb(212,130,13)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.9205%" y="565" width="0.0795%" height="15" fill="rgb(227,103,37)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.9205%" y="549" width="0.0795%" height="15" fill="rgb(249,48,15)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.9205%" y="533" width="0.0795%" height="15" fill="rgb(225,96,9)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.9205%" y="517" width="0.0795%" height="15" fill="rgb(213,81,41)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.9205%" y="501" width="0.0795%" height="15" fill="rgb(230,15,12)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.9205%" y="485" width="0.0795%" height="15" fill="rgb(218,106,37)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.9205%" y="469" width="0.0795%" height="15" fill="rgb(223,172,47)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.9205%" y="453" width="0.0795%" height="15" fill="rgb(246,180,49)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9205%" y="437" width="0.0795%" height="15" fill="rgb(231,63,37)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9205%" y="421" width="0.0795%" height="15" fill="rgb(235,70,40)" fg:x="1257" fg:w="1"/><text x="100.1705%" y="431.50"></text></g></svg></svg>