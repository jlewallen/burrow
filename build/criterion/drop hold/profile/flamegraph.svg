<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1157.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1157.00"> </text><svg id="frames" x="10" width="1180" total_samples="1251"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0799%" y="693" width="0.0799%" height="15" fill="rgb(231,10,15)" fg:x="1" fg:w="1"/><text x="0.3299%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.1599%" y="677" width="0.1599%" height="15" fill="rgb(210,200,17)" fg:x="2" fg:w="2"/><text x="0.4099%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.3197%" y="661" width="0.0799%" height="15" fill="rgb(251,106,46)" fg:x="4" fg:w="1"/><text x="0.5697%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3197%" y="645" width="0.0799%" height="15" fill="rgb(218,211,15)" fg:x="4" fg:w="1"/><text x="0.5697%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.4796%" y="629" width="0.0799%" height="15" fill="rgb(239,62,10)" fg:x="6" fg:w="1"/><text x="0.7296%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.5596%" y="613" width="0.0799%" height="15" fill="rgb(225,53,53)" fg:x="7" fg:w="1"/><text x="0.8096%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5596%" y="597" width="0.0799%" height="15" fill="rgb(207,16,24)" fg:x="7" fg:w="1"/><text x="0.8096%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7994%" y="597" width="0.0799%" height="15" fill="rgb(217,52,28)" fg:x="10" fg:w="1"/><text x="1.0494%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="0.0799%" y="709" width="0.9592%" height="15" fill="rgb(246,1,5)" fg:x="1" fg:w="12"/><text x="0.3299%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="0.1599%" y="693" width="0.8793%" height="15" fill="rgb(221,29,26)" fg:x="2" fg:w="11"/><text x="0.4099%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="0.3197%" y="677" width="0.7194%" height="15" fill="rgb(250,133,32)" fg:x="4" fg:w="9"/><text x="0.5697%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="0.3997%" y="661" width="0.6395%" height="15" fill="rgb(236,63,16)" fg:x="5" fg:w="8"/><text x="0.6497%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="0.4796%" y="645" width="0.5596%" height="15" fill="rgb(231,159,14)" fg:x="6" fg:w="7"/><text x="0.7296%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="0.5596%" y="629" width="0.4796%" height="15" fill="rgb(207,102,36)" fg:x="7" fg:w="6"/><text x="0.8096%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="0.6395%" y="613" width="0.3997%" height="15" fill="rgb(230,224,31)" fg:x="8" fg:w="5"/><text x="0.8895%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.8793%" y="597" width="0.1599%" height="15" fill="rgb(215,182,16)" fg:x="11" fg:w="2"/><text x="1.1293%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9592%" y="581" width="0.0799%" height="15" fill="rgb(226,113,2)" fg:x="12" fg:w="1"/><text x="1.2092%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="0.0000%" y="773" width="1.1191%" height="15" fill="rgb(241,18,35)" fg:x="0" fg:w="14"/><text x="0.2500%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (14 samples, 1.12%)</title><rect x="0.0000%" y="757" width="1.1191%" height="15" fill="rgb(240,165,44)" fg:x="0" fg:w="14"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="0.0000%" y="741" width="1.1191%" height="15" fill="rgb(229,130,47)" fg:x="0" fg:w="14"/><text x="0.2500%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (13 samples, 1.04%)</title><rect x="0.0799%" y="725" width="1.0392%" height="15" fill="rgb(223,93,7)" fg:x="1" fg:w="13"/><text x="0.3299%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="1.0392%" y="709" width="0.0799%" height="15" fill="rgb(205,180,36)" fg:x="13" fg:w="1"/><text x="1.2892%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="1.1191%" y="693" width="0.0799%" height="15" fill="rgb(221,103,28)" fg:x="14" fg:w="1"/><text x="1.3691%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="1.1191%" y="677" width="0.0799%" height="15" fill="rgb(212,4,3)" fg:x="14" fg:w="1"/><text x="1.3691%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="1.1191%" y="661" width="0.0799%" height="15" fill="rgb(209,221,53)" fg:x="14" fg:w="1"/><text x="1.3691%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="1.1191%" y="645" width="0.0799%" height="15" fill="rgb(233,229,52)" fg:x="14" fg:w="1"/><text x="1.3691%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.1990%" y="613" width="0.0799%" height="15" fill="rgb(254,127,37)" fg:x="15" fg:w="1"/><text x="1.4490%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.1990%" y="597" width="0.0799%" height="15" fill="rgb(207,161,26)" fg:x="15" fg:w="1"/><text x="1.4490%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.1990%" y="581" width="0.0799%" height="15" fill="rgb(223,75,5)" fg:x="15" fg:w="1"/><text x="1.4490%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.1990%" y="565" width="0.0799%" height="15" fill="rgb(235,115,52)" fg:x="15" fg:w="1"/><text x="1.4490%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.1990%" y="549" width="0.0799%" height="15" fill="rgb(240,91,46)" fg:x="15" fg:w="1"/><text x="1.4490%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.1990%" y="533" width="0.0799%" height="15" fill="rgb(251,144,21)" fg:x="15" fg:w="1"/><text x="1.4490%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="1.1990%" y="517" width="0.0799%" height="15" fill="rgb(247,220,47)" fg:x="15" fg:w="1"/><text x="1.4490%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="1.1990%" y="501" width="0.0799%" height="15" fill="rgb(253,122,1)" fg:x="15" fg:w="1"/><text x="1.4490%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="1.1990%" y="485" width="0.0799%" height="15" fill="rgb(221,0,24)" fg:x="15" fg:w="1"/><text x="1.4490%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.1990%" y="469" width="0.0799%" height="15" fill="rgb(220,204,54)" fg:x="15" fg:w="1"/><text x="1.4490%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.1990%" y="453" width="0.0799%" height="15" fill="rgb(205,96,25)" fg:x="15" fg:w="1"/><text x="1.4490%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="1.1990%" y="437" width="0.0799%" height="15" fill="rgb(247,77,20)" fg:x="15" fg:w="1"/><text x="1.4490%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="1.1990%" y="421" width="0.0799%" height="15" fill="rgb(245,151,8)" fg:x="15" fg:w="1"/><text x="1.4490%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="1.1990%" y="405" width="0.0799%" height="15" fill="rgb(242,158,39)" fg:x="15" fg:w="1"/><text x="1.4490%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="1.1990%" y="389" width="0.0799%" height="15" fill="rgb(222,214,50)" fg:x="15" fg:w="1"/><text x="1.4490%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.1990%" y="373" width="0.0799%" height="15" fill="rgb(229,60,39)" fg:x="15" fg:w="1"/><text x="1.4490%" y="383.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="1.1990%" y="661" width="0.1599%" height="15" fill="rgb(240,148,18)" fg:x="15" fg:w="2"/><text x="1.4490%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="1.1990%" y="645" width="0.1599%" height="15" fill="rgb(215,96,11)" fg:x="15" fg:w="2"/><text x="1.4490%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="1.1990%" y="629" width="0.1599%" height="15" fill="rgb(238,162,53)" fg:x="15" fg:w="2"/><text x="1.4490%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.2790%" y="613" width="0.0799%" height="15" fill="rgb(214,83,18)" fg:x="16" fg:w="1"/><text x="1.5290%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.2790%" y="597" width="0.0799%" height="15" fill="rgb(248,117,24)" fg:x="16" fg:w="1"/><text x="1.5290%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.2790%" y="581" width="0.0799%" height="15" fill="rgb(238,190,6)" fg:x="16" fg:w="1"/><text x="1.5290%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.2790%" y="565" width="0.0799%" height="15" fill="rgb(213,51,6)" fg:x="16" fg:w="1"/><text x="1.5290%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.2790%" y="549" width="0.0799%" height="15" fill="rgb(212,136,1)" fg:x="16" fg:w="1"/><text x="1.5290%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.2790%" y="533" width="0.0799%" height="15" fill="rgb(221,192,14)" fg:x="16" fg:w="1"/><text x="1.5290%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.2790%" y="517" width="0.0799%" height="15" fill="rgb(244,38,54)" fg:x="16" fg:w="1"/><text x="1.5290%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.2790%" y="501" width="0.0799%" height="15" fill="rgb(240,45,28)" fg:x="16" fg:w="1"/><text x="1.5290%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.2790%" y="485" width="0.0799%" height="15" fill="rgb(240,123,12)" fg:x="16" fg:w="1"/><text x="1.5290%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.2790%" y="469" width="0.0799%" height="15" fill="rgb(216,14,30)" fg:x="16" fg:w="1"/><text x="1.5290%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.2790%" y="453" width="0.0799%" height="15" fill="rgb(212,50,24)" fg:x="16" fg:w="1"/><text x="1.5290%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="1.1990%" y="693" width="0.2398%" height="15" fill="rgb(253,229,47)" fg:x="15" fg:w="3"/><text x="1.4490%" y="703.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="1.1990%" y="677" width="0.2398%" height="15" fill="rgb(214,26,17)" fg:x="15" fg:w="3"/><text x="1.4490%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="1.3589%" y="661" width="0.0799%" height="15" fill="rgb(252,60,11)" fg:x="17" fg:w="1"/><text x="1.6089%" y="671.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="1.3589%" y="645" width="0.0799%" height="15" fill="rgb(209,59,37)" fg:x="17" fg:w="1"/><text x="1.6089%" y="655.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="1.4388%" y="693" width="0.1599%" height="15" fill="rgb(228,126,53)" fg:x="18" fg:w="2"/><text x="1.6888%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.5188%" y="677" width="0.0799%" height="15" fill="rgb(233,99,2)" fg:x="19" fg:w="1"/><text x="1.7688%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="1.5188%" y="661" width="0.0799%" height="15" fill="rgb(217,106,34)" fg:x="19" fg:w="1"/><text x="1.7688%" y="671.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="1.6787%" y="469" width="0.0799%" height="15" fill="rgb(222,46,19)" fg:x="21" fg:w="1"/><text x="1.9287%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="1.6787%" y="453" width="0.0799%" height="15" fill="rgb(251,87,31)" fg:x="21" fg:w="1"/><text x="1.9287%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.6787%" y="437" width="0.0799%" height="15" fill="rgb(213,70,51)" fg:x="21" fg:w="1"/><text x="1.9287%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="1.6787%" y="421" width="0.0799%" height="15" fill="rgb(229,144,18)" fg:x="21" fg:w="1"/><text x="1.9287%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.6787%" y="405" width="0.0799%" height="15" fill="rgb(254,60,26)" fg:x="21" fg:w="1"/><text x="1.9287%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6787%" y="389" width="0.0799%" height="15" fill="rgb(243,127,51)" fg:x="21" fg:w="1"/><text x="1.9287%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6787%" y="373" width="0.0799%" height="15" fill="rgb(221,51,25)" fg:x="21" fg:w="1"/><text x="1.9287%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="1.6787%" y="501" width="0.1599%" height="15" fill="rgb(205,42,7)" fg:x="21" fg:w="2"/><text x="1.9287%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="1.6787%" y="485" width="0.1599%" height="15" fill="rgb(236,177,48)" fg:x="21" fg:w="2"/><text x="1.9287%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.7586%" y="469" width="0.0799%" height="15" fill="rgb(226,79,31)" fg:x="22" fg:w="1"/><text x="2.0086%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.7586%" y="453" width="0.0799%" height="15" fill="rgb(216,170,12)" fg:x="22" fg:w="1"/><text x="2.0086%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="1.5987%" y="565" width="0.3197%" height="15" fill="rgb(208,62,51)" fg:x="20" fg:w="4"/><text x="1.8487%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="1.5987%" y="549" width="0.3197%" height="15" fill="rgb(254,129,9)" fg:x="20" fg:w="4"/><text x="1.8487%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="1.6787%" y="533" width="0.2398%" height="15" fill="rgb(243,209,31)" fg:x="21" fg:w="3"/><text x="1.9287%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="1.6787%" y="517" width="0.2398%" height="15" fill="rgb(213,159,23)" fg:x="21" fg:w="3"/><text x="1.9287%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="1.8385%" y="501" width="0.0799%" height="15" fill="rgb(249,77,39)" fg:x="23" fg:w="1"/><text x="2.0885%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.9185%" y="485" width="0.0799%" height="15" fill="rgb(230,13,33)" fg:x="24" fg:w="1"/><text x="2.1685%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9185%" y="469" width="0.0799%" height="15" fill="rgb(215,215,7)" fg:x="24" fg:w="1"/><text x="2.1685%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9185%" y="453" width="0.0799%" height="15" fill="rgb(222,92,25)" fg:x="24" fg:w="1"/><text x="2.1685%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (6 samples, 0.48%)</title><rect x="1.5987%" y="613" width="0.4796%" height="15" fill="rgb(215,173,22)" fg:x="20" fg:w="6"/><text x="1.8487%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="1.5987%" y="597" width="0.4796%" height="15" fill="rgb(247,205,52)" fg:x="20" fg:w="6"/><text x="1.8487%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="1.5987%" y="581" width="0.4796%" height="15" fill="rgb(240,210,37)" fg:x="20" fg:w="6"/><text x="1.8487%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.9185%" y="565" width="0.1599%" height="15" fill="rgb(224,13,10)" fg:x="24" fg:w="2"/><text x="2.1685%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="1.9185%" y="549" width="0.1599%" height="15" fill="rgb(209,48,33)" fg:x="24" fg:w="2"/><text x="2.1685%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="1.9185%" y="533" width="0.1599%" height="15" fill="rgb(228,219,23)" fg:x="24" fg:w="2"/><text x="2.1685%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.9185%" y="517" width="0.1599%" height="15" fill="rgb(239,46,49)" fg:x="24" fg:w="2"/><text x="2.1685%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="1.9185%" y="501" width="0.1599%" height="15" fill="rgb(206,172,51)" fg:x="24" fg:w="2"/><text x="2.1685%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.9984%" y="485" width="0.0799%" height="15" fill="rgb(213,212,35)" fg:x="25" fg:w="1"/><text x="2.2484%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.9984%" y="469" width="0.0799%" height="15" fill="rgb(252,40,27)" fg:x="25" fg:w="1"/><text x="2.2484%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.9984%" y="453" width="0.0799%" height="15" fill="rgb(212,33,41)" fg:x="25" fg:w="1"/><text x="2.2484%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.9984%" y="437" width="0.0799%" height="15" fill="rgb(232,160,27)" fg:x="25" fg:w="1"/><text x="2.2484%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.9984%" y="421" width="0.0799%" height="15" fill="rgb(244,160,20)" fg:x="25" fg:w="1"/><text x="2.2484%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.9984%" y="405" width="0.0799%" height="15" fill="rgb(205,66,20)" fg:x="25" fg:w="1"/><text x="2.2484%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.9984%" y="389" width="0.0799%" height="15" fill="rgb(236,158,6)" fg:x="25" fg:w="1"/><text x="2.2484%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.9984%" y="373" width="0.0799%" height="15" fill="rgb(232,25,36)" fg:x="25" fg:w="1"/><text x="2.2484%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.9984%" y="357" width="0.0799%" height="15" fill="rgb(220,153,35)" fg:x="25" fg:w="1"/><text x="2.2484%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.56%)</title><rect x="1.5987%" y="677" width="0.5596%" height="15" fill="rgb(216,5,8)" fg:x="20" fg:w="7"/><text x="1.8487%" y="687.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.56%)</title><rect x="1.5987%" y="661" width="0.5596%" height="15" fill="rgb(240,97,3)" fg:x="20" fg:w="7"/><text x="1.8487%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="1.5987%" y="645" width="0.5596%" height="15" fill="rgb(220,99,26)" fg:x="20" fg:w="7"/><text x="1.8487%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="1.5987%" y="629" width="0.5596%" height="15" fill="rgb(237,96,2)" fg:x="20" fg:w="7"/><text x="1.8487%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.0783%" y="613" width="0.0799%" height="15" fill="rgb(217,197,47)" fg:x="26" fg:w="1"/><text x="2.3283%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.0783%" y="597" width="0.0799%" height="15" fill="rgb(252,133,54)" fg:x="26" fg:w="1"/><text x="2.3283%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.1583%" y="533" width="0.0799%" height="15" fill="rgb(233,37,30)" fg:x="27" fg:w="1"/><text x="2.4083%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.1583%" y="517" width="0.0799%" height="15" fill="rgb(239,182,12)" fg:x="27" fg:w="1"/><text x="2.4083%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.1583%" y="501" width="0.0799%" height="15" fill="rgb(245,83,39)" fg:x="27" fg:w="1"/><text x="2.4083%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (15 samples, 1.20%)</title><rect x="1.1191%" y="741" width="1.1990%" height="15" fill="rgb(222,109,36)" fg:x="14" fg:w="15"/><text x="1.3691%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.20%)</title><rect x="1.1191%" y="725" width="1.1990%" height="15" fill="rgb(237,95,44)" fg:x="14" fg:w="15"/><text x="1.3691%" y="735.50"></text></g><g><title>engine::internal::Entities::add_persisted (15 samples, 1.20%)</title><rect x="1.1191%" y="709" width="1.1990%" height="15" fill="rgb(216,36,54)" fg:x="14" fg:w="15"/><text x="1.3691%" y="719.50"></text></g><g><title>kernel::model::deserialize_entity (9 samples, 0.72%)</title><rect x="1.5987%" y="693" width="0.7194%" height="15" fill="rgb(236,164,3)" fg:x="20" fg:w="9"/><text x="1.8487%" y="703.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="2.1583%" y="677" width="0.1599%" height="15" fill="rgb(223,15,21)" fg:x="27" fg:w="2"/><text x="2.4083%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.1583%" y="661" width="0.1599%" height="15" fill="rgb(239,191,12)" fg:x="27" fg:w="2"/><text x="2.4083%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.1583%" y="645" width="0.1599%" height="15" fill="rgb(231,191,37)" fg:x="27" fg:w="2"/><text x="2.4083%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.1583%" y="629" width="0.1599%" height="15" fill="rgb(209,155,36)" fg:x="27" fg:w="2"/><text x="2.4083%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.1583%" y="613" width="0.1599%" height="15" fill="rgb(216,222,49)" fg:x="27" fg:w="2"/><text x="2.4083%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.1583%" y="597" width="0.1599%" height="15" fill="rgb(218,181,2)" fg:x="27" fg:w="2"/><text x="2.4083%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.1583%" y="581" width="0.1599%" height="15" fill="rgb(239,125,9)" fg:x="27" fg:w="2"/><text x="2.4083%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.1583%" y="565" width="0.1599%" height="15" fill="rgb(233,103,7)" fg:x="27" fg:w="2"/><text x="2.4083%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.1583%" y="549" width="0.1599%" height="15" fill="rgb(209,223,5)" fg:x="27" fg:w="2"/><text x="2.4083%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.2382%" y="533" width="0.0799%" height="15" fill="rgb(234,71,27)" fg:x="28" fg:w="1"/><text x="2.4882%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.2382%" y="517" width="0.0799%" height="15" fill="rgb(251,202,16)" fg:x="28" fg:w="1"/><text x="2.4882%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.2382%" y="501" width="0.0799%" height="15" fill="rgb(231,180,0)" fg:x="28" fg:w="1"/><text x="2.4882%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.2382%" y="485" width="0.0799%" height="15" fill="rgb(223,58,28)" fg:x="28" fg:w="1"/><text x="2.4882%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.2382%" y="469" width="0.0799%" height="15" fill="rgb(250,34,24)" fg:x="28" fg:w="1"/><text x="2.4882%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.2382%" y="453" width="0.0799%" height="15" fill="rgb(235,24,16)" fg:x="28" fg:w="1"/><text x="2.4882%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.2382%" y="437" width="0.0799%" height="15" fill="rgb(219,28,33)" fg:x="28" fg:w="1"/><text x="2.4882%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.2382%" y="421" width="0.0799%" height="15" fill="rgb(228,150,43)" fg:x="28" fg:w="1"/><text x="2.4882%" y="431.50"></text></g><g><title>engine::internal::EntityMap::new (1 samples, 0.08%)</title><rect x="2.3181%" y="741" width="0.0799%" height="15" fill="rgb(221,228,36)" fg:x="29" fg:w="1"/><text x="2.5681%" y="751.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="2.3981%" y="741" width="0.0799%" height="15" fill="rgb(232,116,17)" fg:x="30" fg:w="1"/><text x="2.6481%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="2.3981%" y="725" width="0.0799%" height="15" fill="rgb(220,110,51)" fg:x="30" fg:w="1"/><text x="2.6481%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="2.3981%" y="709" width="0.0799%" height="15" fill="rgb(207,26,25)" fg:x="30" fg:w="1"/><text x="2.6481%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.3981%" y="693" width="0.0799%" height="15" fill="rgb(223,58,19)" fg:x="30" fg:w="1"/><text x="2.6481%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.3981%" y="677" width="0.0799%" height="15" fill="rgb(234,125,39)" fg:x="30" fg:w="1"/><text x="2.6481%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.3981%" y="661" width="0.0799%" height="15" fill="rgb(241,48,36)" fg:x="30" fg:w="1"/><text x="2.6481%" y="671.50"></text></g><g><title>kernel::plugins::SessionPlugins::hooks (1 samples, 0.08%)</title><rect x="2.4780%" y="741" width="0.0799%" height="15" fill="rgb(217,148,51)" fg:x="31" fg:w="1"/><text x="2.7280%" y="751.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="2.6379%" y="693" width="0.0799%" height="15" fill="rgb(247,17,25)" fg:x="33" fg:w="1"/><text x="2.8879%" y="703.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="2.6379%" y="677" width="0.0799%" height="15" fill="rgb(219,89,38)" fg:x="33" fg:w="1"/><text x="2.8879%" y="687.50"></text></g><g><title>libloading::os::unix::Library::open (10 samples, 0.80%)</title><rect x="2.5580%" y="709" width="0.7994%" height="15" fill="rgb(220,145,2)" fg:x="32" fg:w="10"/><text x="2.8080%" y="719.50"></text></g><g><title>dlopen (8 samples, 0.64%)</title><rect x="2.7178%" y="693" width="0.6395%" height="15" fill="rgb(244,66,47)" fg:x="34" fg:w="8"/><text x="2.9678%" y="703.50"></text></g><g><title>_dl_catch_error (8 samples, 0.64%)</title><rect x="2.7178%" y="677" width="0.6395%" height="15" fill="rgb(226,182,5)" fg:x="34" fg:w="8"/><text x="2.9678%" y="687.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="2.7178%" y="661" width="0.6395%" height="15" fill="rgb(211,98,20)" fg:x="34" fg:w="8"/><text x="2.9678%" y="671.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="2.7178%" y="645" width="0.6395%" height="15" fill="rgb(217,103,52)" fg:x="34" fg:w="8"/><text x="2.9678%" y="655.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="2.7178%" y="629" width="0.6395%" height="15" fill="rgb(208,125,52)" fg:x="34" fg:w="8"/><text x="2.9678%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (11 samples, 0.88%)</title><rect x="2.5580%" y="725" width="0.8793%" height="15" fill="rgb(244,70,13)" fg:x="32" fg:w="11"/><text x="2.8080%" y="735.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="3.3573%" y="709" width="0.0799%" height="15" fill="rgb(253,124,3)" fg:x="42" fg:w="1"/><text x="3.6073%" y="719.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="3.3573%" y="693" width="0.0799%" height="15" fill="rgb(222,145,32)" fg:x="42" fg:w="1"/><text x="3.6073%" y="703.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.3573%" y="677" width="0.0799%" height="15" fill="rgb(232,183,47)" fg:x="42" fg:w="1"/><text x="3.6073%" y="687.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (30 samples, 2.40%)</title><rect x="1.1191%" y="773" width="2.3981%" height="15" fill="rgb(246,226,4)" fg:x="14" fg:w="30"/><text x="1.3691%" y="783.50">&lt;e..</text></g><g><title>engine::session::Session::new (30 samples, 2.40%)</title><rect x="1.1191%" y="757" width="2.3981%" height="15" fill="rgb(228,185,46)" fg:x="14" fg:w="30"/><text x="1.3691%" y="767.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (12 samples, 0.96%)</title><rect x="2.5580%" y="741" width="0.9592%" height="15" fill="rgb(213,196,4)" fg:x="32" fg:w="12"/><text x="2.8080%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.4373%" y="725" width="0.0799%" height="15" fill="rgb(212,2,45)" fg:x="43" fg:w="1"/><text x="3.6873%" y="735.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.4373%" y="709" width="0.0799%" height="15" fill="rgb(217,145,50)" fg:x="43" fg:w="1"/><text x="3.6873%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.5172%" y="757" width="0.0799%" height="15" fill="rgb(242,10,46)" fg:x="44" fg:w="1"/><text x="3.7672%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5172%" y="741" width="0.0799%" height="15" fill="rgb(252,91,48)" fg:x="44" fg:w="1"/><text x="3.7672%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="3.5971%" y="757" width="0.0799%" height="15" fill="rgb(216,72,13)" fg:x="45" fg:w="1"/><text x="3.8471%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="3.5971%" y="741" width="0.0799%" height="15" fill="rgb(219,6,37)" fg:x="45" fg:w="1"/><text x="3.8471%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.5971%" y="725" width="0.0799%" height="15" fill="rgb(236,185,40)" fg:x="45" fg:w="1"/><text x="3.8471%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5971%" y="709" width="0.0799%" height="15" fill="rgb(208,81,48)" fg:x="45" fg:w="1"/><text x="3.8471%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.6771%" y="725" width="0.0799%" height="15" fill="rgb(211,42,33)" fg:x="46" fg:w="1"/><text x="3.9271%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.6771%" y="709" width="0.0799%" height="15" fill="rgb(211,90,39)" fg:x="46" fg:w="1"/><text x="3.9271%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.6771%" y="693" width="0.0799%" height="15" fill="rgb(218,136,12)" fg:x="46" fg:w="1"/><text x="3.9271%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.6771%" y="677" width="0.0799%" height="15" fill="rgb(234,12,32)" fg:x="46" fg:w="1"/><text x="3.9271%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="3.7570%" y="725" width="0.0799%" height="15" fill="rgb(221,164,18)" fg:x="47" fg:w="1"/><text x="4.0070%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7570%" y="709" width="0.0799%" height="15" fill="rgb(239,135,14)" fg:x="47" fg:w="1"/><text x="4.0070%" y="719.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="3.8369%" y="725" width="0.2398%" height="15" fill="rgb(226,198,47)" fg:x="48" fg:w="3"/><text x="4.0869%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="3.8369%" y="709" width="0.2398%" height="15" fill="rgb(244,121,47)" fg:x="48" fg:w="3"/><text x="4.0869%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="3.8369%" y="693" width="0.2398%" height="15" fill="rgb(226,21,48)" fg:x="48" fg:w="3"/><text x="4.0869%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.9968%" y="677" width="0.0799%" height="15" fill="rgb(215,178,47)" fg:x="50" fg:w="1"/><text x="4.2468%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.9968%" y="661" width="0.0799%" height="15" fill="rgb(206,212,19)" fg:x="50" fg:w="1"/><text x="4.2468%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.9968%" y="645" width="0.0799%" height="15" fill="rgb(230,104,34)" fg:x="50" fg:w="1"/><text x="4.2468%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.9968%" y="629" width="0.0799%" height="15" fill="rgb(210,96,51)" fg:x="50" fg:w="1"/><text x="4.2468%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.9968%" y="613" width="0.0799%" height="15" fill="rgb(229,111,47)" fg:x="50" fg:w="1"/><text x="4.2468%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.9968%" y="597" width="0.0799%" height="15" fill="rgb(218,174,45)" fg:x="50" fg:w="1"/><text x="4.2468%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.9968%" y="581" width="0.0799%" height="15" fill="rgb(215,21,32)" fg:x="50" fg:w="1"/><text x="4.2468%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.9968%" y="565" width="0.0799%" height="15" fill="rgb(235,72,21)" fg:x="50" fg:w="1"/><text x="4.2468%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.9968%" y="549" width="0.0799%" height="15" fill="rgb(250,113,30)" fg:x="50" fg:w="1"/><text x="4.2468%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.9968%" y="533" width="0.0799%" height="15" fill="rgb(244,136,34)" fg:x="50" fg:w="1"/><text x="4.2468%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.9968%" y="517" width="0.0799%" height="15" fill="rgb(213,226,47)" fg:x="50" fg:w="1"/><text x="4.2468%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.9968%" y="501" width="0.0799%" height="15" fill="rgb(224,136,40)" fg:x="50" fg:w="1"/><text x="4.2468%" y="511.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="4.0767%" y="725" width="0.0799%" height="15" fill="rgb(253,124,12)" fg:x="51" fg:w="1"/><text x="4.3267%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="4.0767%" y="709" width="0.0799%" height="15" fill="rgb(210,67,8)" fg:x="51" fg:w="1"/><text x="4.3267%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="4.0767%" y="693" width="0.0799%" height="15" fill="rgb(210,204,0)" fg:x="51" fg:w="1"/><text x="4.3267%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="4.0767%" y="677" width="0.0799%" height="15" fill="rgb(217,179,22)" fg:x="51" fg:w="1"/><text x="4.3267%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="4.0767%" y="661" width="0.0799%" height="15" fill="rgb(237,192,33)" fg:x="51" fg:w="1"/><text x="4.3267%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="4.1567%" y="709" width="0.1599%" height="15" fill="rgb(211,104,28)" fg:x="52" fg:w="2"/><text x="4.4067%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.1567%" y="693" width="0.1599%" height="15" fill="rgb(214,75,30)" fg:x="52" fg:w="2"/><text x="4.4067%" y="703.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.1567%" y="677" width="0.1599%" height="15" fill="rgb(220,227,12)" fg:x="52" fg:w="2"/><text x="4.4067%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="4.3965%" y="597" width="0.0799%" height="15" fill="rgb(233,134,28)" fg:x="55" fg:w="1"/><text x="4.6465%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="4.3965%" y="581" width="0.0799%" height="15" fill="rgb(215,146,24)" fg:x="55" fg:w="1"/><text x="4.6465%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.3965%" y="565" width="0.0799%" height="15" fill="rgb(248,227,20)" fg:x="55" fg:w="1"/><text x="4.6465%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="4.3965%" y="645" width="0.1599%" height="15" fill="rgb(250,44,42)" fg:x="55" fg:w="2"/><text x="4.6465%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="4.3965%" y="629" width="0.1599%" height="15" fill="rgb(219,5,35)" fg:x="55" fg:w="2"/><text x="4.6465%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="4.3965%" y="613" width="0.1599%" height="15" fill="rgb(241,132,32)" fg:x="55" fg:w="2"/><text x="4.6465%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.4764%" y="597" width="0.0799%" height="15" fill="rgb(234,212,51)" fg:x="56" fg:w="1"/><text x="4.7264%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.4764%" y="581" width="0.0799%" height="15" fill="rgb(242,173,29)" fg:x="56" fg:w="1"/><text x="4.7264%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.4764%" y="565" width="0.0799%" height="15" fill="rgb(212,159,2)" fg:x="56" fg:w="1"/><text x="4.7264%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.4764%" y="549" width="0.0799%" height="15" fill="rgb(238,165,31)" fg:x="56" fg:w="1"/><text x="4.7264%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.4764%" y="533" width="0.0799%" height="15" fill="rgb(241,57,36)" fg:x="56" fg:w="1"/><text x="4.7264%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="4.4764%" y="517" width="0.0799%" height="15" fill="rgb(249,7,4)" fg:x="56" fg:w="1"/><text x="4.7264%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.4764%" y="501" width="0.0799%" height="15" fill="rgb(250,137,44)" fg:x="56" fg:w="1"/><text x="4.7264%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.5564%" y="645" width="0.0799%" height="15" fill="rgb(244,185,1)" fg:x="57" fg:w="1"/><text x="4.8064%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="4.6363%" y="645" width="0.0799%" height="15" fill="rgb(216,5,53)" fg:x="58" fg:w="1"/><text x="4.8863%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="4.6363%" y="629" width="0.0799%" height="15" fill="rgb(234,89,21)" fg:x="58" fg:w="1"/><text x="4.8863%" y="639.50"></text></g><g><title>kernel::model::scopes::load_props (6 samples, 0.48%)</title><rect x="4.3965%" y="677" width="0.4796%" height="15" fill="rgb(250,81,43)" fg:x="55" fg:w="6"/><text x="4.6465%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="4.3965%" y="661" width="0.4796%" height="15" fill="rgb(243,132,11)" fg:x="55" fg:w="6"/><text x="4.6465%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="4.7162%" y="645" width="0.1599%" height="15" fill="rgb(253,159,28)" fg:x="59" fg:w="2"/><text x="4.9662%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.7162%" y="629" width="0.1599%" height="15" fill="rgb(237,167,34)" fg:x="59" fg:w="2"/><text x="4.9662%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="4.7962%" y="613" width="0.0799%" height="15" fill="rgb(237,16,50)" fg:x="60" fg:w="1"/><text x="5.0462%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.7962%" y="597" width="0.0799%" height="15" fill="rgb(247,125,2)" fg:x="60" fg:w="1"/><text x="5.0462%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="4.7962%" y="581" width="0.0799%" height="15" fill="rgb(254,35,3)" fg:x="60" fg:w="1"/><text x="5.0462%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.7962%" y="565" width="0.0799%" height="15" fill="rgb(237,209,21)" fg:x="60" fg:w="1"/><text x="5.0462%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="4.7962%" y="549" width="0.0799%" height="15" fill="rgb(224,122,20)" fg:x="60" fg:w="1"/><text x="5.0462%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.7962%" y="533" width="0.0799%" height="15" fill="rgb(224,11,46)" fg:x="60" fg:w="1"/><text x="5.0462%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="4.7962%" y="517" width="0.0799%" height="15" fill="rgb(248,21,33)" fg:x="60" fg:w="1"/><text x="5.0462%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.7962%" y="501" width="0.0799%" height="15" fill="rgb(222,144,7)" fg:x="60" fg:w="1"/><text x="5.0462%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.7962%" y="485" width="0.0799%" height="15" fill="rgb(205,141,37)" fg:x="60" fg:w="1"/><text x="5.0462%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="4.8761%" y="661" width="0.0799%" height="15" fill="rgb(237,130,8)" fg:x="61" fg:w="1"/><text x="5.1261%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8761%" y="645" width="0.0799%" height="15" fill="rgb(209,179,39)" fg:x="61" fg:w="1"/><text x="5.1261%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.9560%" y="581" width="0.0799%" height="15" fill="rgb(207,52,17)" fg:x="62" fg:w="1"/><text x="5.2060%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="4.9560%" y="645" width="0.2398%" height="15" fill="rgb(253,158,17)" fg:x="62" fg:w="3"/><text x="5.2060%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="4.9560%" y="629" width="0.2398%" height="15" fill="rgb(208,19,53)" fg:x="62" fg:w="3"/><text x="5.2060%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="4.9560%" y="613" width="0.2398%" height="15" fill="rgb(233,152,13)" fg:x="62" fg:w="3"/><text x="5.2060%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="4.9560%" y="597" width="0.2398%" height="15" fill="rgb(231,84,1)" fg:x="62" fg:w="3"/><text x="5.2060%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="5.0360%" y="581" width="0.1599%" height="15" fill="rgb(229,142,48)" fg:x="63" fg:w="2"/><text x="5.2860%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.1159%" y="565" width="0.0799%" height="15" fill="rgb(248,70,29)" fg:x="64" fg:w="1"/><text x="5.3659%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="5.1958%" y="645" width="0.1599%" height="15" fill="rgb(250,85,7)" fg:x="65" fg:w="2"/><text x="5.4458%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="5.2758%" y="629" width="0.0799%" height="15" fill="rgb(235,140,43)" fg:x="66" fg:w="1"/><text x="5.5258%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.3557%" y="533" width="0.0799%" height="15" fill="rgb(216,0,5)" fg:x="67" fg:w="1"/><text x="5.6057%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (14 samples, 1.12%)</title><rect x="4.3965%" y="693" width="1.1191%" height="15" fill="rgb(223,167,29)" fg:x="55" fg:w="14"/><text x="4.6465%" y="703.50"></text></g><g><title>kernel::model::scopes::save_props (8 samples, 0.64%)</title><rect x="4.8761%" y="677" width="0.6395%" height="15" fill="rgb(229,150,33)" fg:x="61" fg:w="8"/><text x="5.1261%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (7 samples, 0.56%)</title><rect x="4.9560%" y="661" width="0.5596%" height="15" fill="rgb(227,26,52)" fg:x="62" fg:w="7"/><text x="5.2060%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="5.3557%" y="645" width="0.1599%" height="15" fill="rgb(250,60,52)" fg:x="67" fg:w="2"/><text x="5.6057%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="5.3557%" y="629" width="0.1599%" height="15" fill="rgb(228,81,46)" fg:x="67" fg:w="2"/><text x="5.6057%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="5.3557%" y="613" width="0.1599%" height="15" fill="rgb(225,218,31)" fg:x="67" fg:w="2"/><text x="5.6057%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="5.3557%" y="597" width="0.1599%" height="15" fill="rgb(230,35,16)" fg:x="67" fg:w="2"/><text x="5.6057%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="5.3557%" y="581" width="0.1599%" height="15" fill="rgb(247,100,0)" fg:x="67" fg:w="2"/><text x="5.6057%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="5.3557%" y="565" width="0.1599%" height="15" fill="rgb(223,135,11)" fg:x="67" fg:w="2"/><text x="5.6057%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="5.3557%" y="549" width="0.1599%" height="15" fill="rgb(207,136,0)" fg:x="67" fg:w="2"/><text x="5.6057%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="5.4357%" y="533" width="0.0799%" height="15" fill="rgb(246,131,25)" fg:x="68" fg:w="1"/><text x="5.6857%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="5.4357%" y="517" width="0.0799%" height="15" fill="rgb(209,47,12)" fg:x="68" fg:w="1"/><text x="5.6857%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="5.5156%" y="693" width="0.0799%" height="15" fill="rgb(221,25,16)" fg:x="69" fg:w="1"/><text x="5.7656%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="5.5156%" y="677" width="0.0799%" height="15" fill="rgb(223,164,33)" fg:x="69" fg:w="1"/><text x="5.7656%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.5156%" y="661" width="0.0799%" height="15" fill="rgb(220,26,23)" fg:x="69" fg:w="1"/><text x="5.7656%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.5156%" y="645" width="0.0799%" height="15" fill="rgb(231,224,1)" fg:x="69" fg:w="1"/><text x="5.7656%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.5156%" y="629" width="0.0799%" height="15" fill="rgb(229,221,24)" fg:x="69" fg:w="1"/><text x="5.7656%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="5.5955%" y="677" width="0.2398%" height="15" fill="rgb(213,34,10)" fg:x="70" fg:w="3"/><text x="5.8455%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.5955%" y="661" width="0.2398%" height="15" fill="rgb(215,33,11)" fg:x="70" fg:w="3"/><text x="5.8455%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.5955%" y="645" width="0.2398%" height="15" fill="rgb(216,20,41)" fg:x="70" fg:w="3"/><text x="5.8455%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.1551%" y="613" width="0.0799%" height="15" fill="rgb(228,43,31)" fg:x="77" fg:w="1"/><text x="6.4051%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="5.9153%" y="661" width="0.3997%" height="15" fill="rgb(227,83,26)" fg:x="74" fg:w="5"/><text x="6.1653%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.0751%" y="645" width="0.2398%" height="15" fill="rgb(217,168,19)" fg:x="76" fg:w="3"/><text x="6.3251%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.1551%" y="629" width="0.1599%" height="15" fill="rgb(231,34,33)" fg:x="77" fg:w="2"/><text x="6.4051%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.2350%" y="613" width="0.0799%" height="15" fill="rgb(230,120,51)" fg:x="78" fg:w="1"/><text x="6.4850%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.3949%" y="645" width="0.0799%" height="15" fill="rgb(215,138,27)" fg:x="80" fg:w="1"/><text x="6.6449%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.3949%" y="629" width="0.0799%" height="15" fill="rgb(246,80,47)" fg:x="80" fg:w="1"/><text x="6.6449%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.3949%" y="613" width="0.0799%" height="15" fill="rgb(215,57,53)" fg:x="80" fg:w="1"/><text x="6.6449%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.4748%" y="645" width="0.1599%" height="15" fill="rgb(229,137,5)" fg:x="81" fg:w="2"/><text x="6.7248%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.4748%" y="629" width="0.1599%" height="15" fill="rgb(210,86,2)" fg:x="81" fg:w="2"/><text x="6.7248%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.7946%" y="629" width="0.2398%" height="15" fill="rgb(231,226,51)" fg:x="85" fg:w="3"/><text x="7.0446%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.7946%" y="613" width="0.2398%" height="15" fill="rgb(216,62,29)" fg:x="85" fg:w="3"/><text x="7.0446%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.9544%" y="597" width="0.0799%" height="15" fill="rgb(248,202,3)" fg:x="87" fg:w="1"/><text x="7.2044%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.0344%" y="613" width="0.0799%" height="15" fill="rgb(225,181,7)" fg:x="88" fg:w="1"/><text x="7.2844%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.0344%" y="597" width="0.0799%" height="15" fill="rgb(247,170,54)" fg:x="88" fg:w="1"/><text x="7.2844%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.0344%" y="581" width="0.0799%" height="15" fill="rgb(236,204,33)" fg:x="88" fg:w="1"/><text x="7.2844%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.1143%" y="597" width="0.0799%" height="15" fill="rgb(216,45,30)" fg:x="89" fg:w="1"/><text x="7.3643%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.1942%" y="597" width="0.1599%" height="15" fill="rgb(213,203,16)" fg:x="90" fg:w="2"/><text x="7.4442%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.2742%" y="581" width="0.0799%" height="15" fill="rgb(215,46,16)" fg:x="91" fg:w="1"/><text x="7.5242%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.2742%" y="565" width="0.0799%" height="15" fill="rgb(217,162,46)" fg:x="91" fg:w="1"/><text x="7.5242%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.2742%" y="549" width="0.0799%" height="15" fill="rgb(224,189,20)" fg:x="91" fg:w="1"/><text x="7.5242%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3541%" y="597" width="0.0799%" height="15" fill="rgb(232,35,51)" fg:x="92" fg:w="1"/><text x="7.6041%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.3541%" y="581" width="0.0799%" height="15" fill="rgb(243,221,46)" fg:x="92" fg:w="1"/><text x="7.6041%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.92%)</title><rect x="5.5955%" y="693" width="1.9185%" height="15" fill="rgb(248,16,16)" fg:x="70" fg:w="24"/><text x="5.8455%" y="703.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="5.8353%" y="677" width="1.6787%" height="15" fill="rgb(220,168,13)" fg:x="73" fg:w="21"/><text x="6.0853%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="6.3149%" y="661" width="1.1990%" height="15" fill="rgb(243,102,39)" fg:x="79" fg:w="15"/><text x="6.5649%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="6.6347%" y="645" width="0.8793%" height="15" fill="rgb(245,82,32)" fg:x="83" fg:w="11"/><text x="6.8847%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="7.0344%" y="629" width="0.4796%" height="15" fill="rgb(230,164,19)" fg:x="88" fg:w="6"/><text x="7.2844%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="7.1143%" y="613" width="0.3997%" height="15" fill="rgb(221,9,41)" fg:x="89" fg:w="5"/><text x="7.3643%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4341%" y="597" width="0.0799%" height="15" fill="rgb(216,93,0)" fg:x="93" fg:w="1"/><text x="7.6841%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.4341%" y="581" width="0.0799%" height="15" fill="rgb(235,113,9)" fg:x="93" fg:w="1"/><text x="7.6841%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.4341%" y="565" width="0.0799%" height="15" fill="rgb(209,224,10)" fg:x="93" fg:w="1"/><text x="7.6841%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.5140%" y="645" width="0.0799%" height="15" fill="rgb(226,54,34)" fg:x="94" fg:w="1"/><text x="7.7640%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.5140%" y="629" width="0.0799%" height="15" fill="rgb(222,60,8)" fg:x="94" fg:w="1"/><text x="7.7640%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="7.6739%" y="629" width="0.1599%" height="15" fill="rgb(248,228,41)" fg:x="96" fg:w="2"/><text x="7.9239%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.7538%" y="613" width="0.0799%" height="15" fill="rgb(226,31,32)" fg:x="97" fg:w="1"/><text x="8.0038%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="7.5140%" y="693" width="0.3997%" height="15" fill="rgb(242,132,49)" fg:x="94" fg:w="5"/><text x="7.7640%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="7.5140%" y="677" width="0.3997%" height="15" fill="rgb(224,194,19)" fg:x="94" fg:w="5"/><text x="7.7640%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="7.5140%" y="661" width="0.3997%" height="15" fill="rgb(232,200,51)" fg:x="94" fg:w="5"/><text x="7.7640%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="7.5939%" y="645" width="0.3197%" height="15" fill="rgb(235,60,46)" fg:x="95" fg:w="4"/><text x="7.8439%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.8337%" y="629" width="0.0799%" height="15" fill="rgb(240,109,52)" fg:x="98" fg:w="1"/><text x="8.0837%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.8337%" y="613" width="0.0799%" height="15" fill="rgb(215,78,37)" fg:x="98" fg:w="1"/><text x="8.0837%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.8337%" y="597" width="0.0799%" height="15" fill="rgb(225,141,7)" fg:x="98" fg:w="1"/><text x="8.0837%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.9936%" y="645" width="0.0799%" height="15" fill="rgb(216,102,54)" fg:x="100" fg:w="1"/><text x="8.2436%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.9936%" y="629" width="0.0799%" height="15" fill="rgb(238,143,13)" fg:x="100" fg:w="1"/><text x="8.2436%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="8.0735%" y="645" width="0.0799%" height="15" fill="rgb(219,45,51)" fg:x="101" fg:w="1"/><text x="8.3235%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="8.1535%" y="645" width="0.0799%" height="15" fill="rgb(242,105,46)" fg:x="102" fg:w="1"/><text x="8.4035%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.3133%" y="597" width="0.0799%" height="15" fill="rgb(206,154,49)" fg:x="104" fg:w="1"/><text x="8.5633%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.3133%" y="581" width="0.0799%" height="15" fill="rgb(239,215,4)" fg:x="104" fg:w="1"/><text x="8.5633%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="8.3133%" y="565" width="0.0799%" height="15" fill="rgb(238,82,17)" fg:x="104" fg:w="1"/><text x="8.5633%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.3133%" y="549" width="0.0799%" height="15" fill="rgb(242,49,30)" fg:x="104" fg:w="1"/><text x="8.5633%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.5532%" y="565" width="0.2398%" height="15" fill="rgb(248,5,16)" fg:x="107" fg:w="3"/><text x="8.8032%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.6331%" y="549" width="0.1599%" height="15" fill="rgb(237,138,32)" fg:x="108" fg:w="2"/><text x="8.8831%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="8.6331%" y="533" width="0.1599%" height="15" fill="rgb(235,79,45)" fg:x="108" fg:w="2"/><text x="8.8831%" y="543.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (59 samples, 4.72%)</title><rect x="4.1567%" y="725" width="4.7162%" height="15" fill="rgb(213,105,25)" fg:x="52" fg:w="59"/><text x="4.4067%" y="735.50">engin..</text></g><g><title>engine::session::SavesEntities::check_for_changes (57 samples, 4.56%)</title><rect x="4.3165%" y="709" width="4.5564%" height="15" fill="rgb(251,131,7)" fg:x="54" fg:w="57"/><text x="4.5665%" y="719.50">engin..</text></g><g><title>kernel::compare::any_entity_changes (12 samples, 0.96%)</title><rect x="7.9137%" y="693" width="0.9592%" height="15" fill="rgb(211,155,7)" fg:x="99" fg:w="12"/><text x="8.1637%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="7.9137%" y="677" width="0.9592%" height="15" fill="rgb(243,70,15)" fg:x="99" fg:w="12"/><text x="8.1637%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="7.9936%" y="661" width="0.8793%" height="15" fill="rgb(215,171,2)" fg:x="100" fg:w="11"/><text x="8.2436%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="8.2334%" y="645" width="0.6395%" height="15" fill="rgb(244,121,35)" fg:x="103" fg:w="8"/><text x="8.4834%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (7 samples, 0.56%)</title><rect x="8.3133%" y="629" width="0.5596%" height="15" fill="rgb(249,147,17)" fg:x="104" fg:w="7"/><text x="8.5633%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="8.3133%" y="613" width="0.5596%" height="15" fill="rgb(241,193,52)" fg:x="104" fg:w="7"/><text x="8.5633%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="8.3933%" y="597" width="0.4796%" height="15" fill="rgb(217,159,39)" fg:x="105" fg:w="6"/><text x="8.6433%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="8.4732%" y="581" width="0.3997%" height="15" fill="rgb(248,110,0)" fg:x="106" fg:w="5"/><text x="8.7232%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7930%" y="565" width="0.0799%" height="15" fill="rgb(233,227,0)" fg:x="110" fg:w="1"/><text x="9.0430%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="8.7930%" y="549" width="0.0799%" height="15" fill="rgb(252,55,2)" fg:x="110" fg:w="1"/><text x="9.0430%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7930%" y="533" width="0.0799%" height="15" fill="rgb(224,194,24)" fg:x="110" fg:w="1"/><text x="9.0430%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="8.7930%" y="517" width="0.0799%" height="15" fill="rgb(247,5,33)" fg:x="110" fg:w="1"/><text x="9.0430%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7930%" y="501" width="0.0799%" height="15" fill="rgb(242,66,47)" fg:x="110" fg:w="1"/><text x="9.0430%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7930%" y="485" width="0.0799%" height="15" fill="rgb(213,107,12)" fg:x="110" fg:w="1"/><text x="9.0430%" y="495.50"></text></g><g><title>engine::session::Session::flush (66 samples, 5.28%)</title><rect x="3.6771%" y="757" width="5.2758%" height="15" fill="rgb(206,131,1)" fg:x="46" fg:w="66"/><text x="3.9271%" y="767.50">engine..</text></g><g><title>engine::session::Session::save_entity_changes (66 samples, 5.28%)</title><rect x="3.6771%" y="741" width="5.2758%" height="15" fill="rgb(214,9,36)" fg:x="46" fg:w="66"/><text x="3.9271%" y="751.50">engine..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="8.8729%" y="725" width="0.0799%" height="15" fill="rgb(251,215,18)" fg:x="111" fg:w="1"/><text x="9.1229%" y="735.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="8.8729%" y="709" width="0.0799%" height="15" fill="rgb(251,64,9)" fg:x="111" fg:w="1"/><text x="9.1229%" y="719.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="8.8729%" y="693" width="0.0799%" height="15" fill="rgb(235,68,21)" fg:x="111" fg:w="1"/><text x="9.1229%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="8.8729%" y="677" width="0.0799%" height="15" fill="rgb(240,69,38)" fg:x="111" fg:w="1"/><text x="9.1229%" y="687.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="8.8729%" y="661" width="0.0799%" height="15" fill="rgb(231,18,27)" fg:x="111" fg:w="1"/><text x="9.1229%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="8.8729%" y="645" width="0.0799%" height="15" fill="rgb(215,154,25)" fg:x="111" fg:w="1"/><text x="9.1229%" y="655.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="8.8729%" y="629" width="0.0799%" height="15" fill="rgb(224,33,46)" fg:x="111" fg:w="1"/><text x="9.1229%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="8.9528%" y="741" width="0.0799%" height="15" fill="rgb(248,191,53)" fg:x="112" fg:w="1"/><text x="9.2028%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="8.9528%" y="725" width="0.0799%" height="15" fill="rgb(231,3,37)" fg:x="112" fg:w="1"/><text x="9.2028%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9528%" y="709" width="0.0799%" height="15" fill="rgb(209,152,2)" fg:x="112" fg:w="1"/><text x="9.2028%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="9.0328%" y="725" width="0.0799%" height="15" fill="rgb(212,208,43)" fg:x="113" fg:w="1"/><text x="9.2828%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="9.0328%" y="709" width="0.0799%" height="15" fill="rgb(208,60,49)" fg:x="113" fg:w="1"/><text x="9.2828%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.0328%" y="693" width="0.0799%" height="15" fill="rgb(245,135,6)" fg:x="113" fg:w="1"/><text x="9.2828%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="9.0328%" y="677" width="0.0799%" height="15" fill="rgb(243,86,23)" fg:x="113" fg:w="1"/><text x="9.2828%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="9.0328%" y="661" width="0.0799%" height="15" fill="rgb(223,7,20)" fg:x="113" fg:w="1"/><text x="9.2828%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.0328%" y="645" width="0.0799%" height="15" fill="rgb(212,182,17)" fg:x="113" fg:w="1"/><text x="9.2828%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.0328%" y="629" width="0.0799%" height="15" fill="rgb(237,94,50)" fg:x="113" fg:w="1"/><text x="9.2828%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.0328%" y="613" width="0.0799%" height="15" fill="rgb(232,185,44)" fg:x="113" fg:w="1"/><text x="9.2828%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.0328%" y="597" width="0.0799%" height="15" fill="rgb(205,50,36)" fg:x="113" fg:w="1"/><text x="9.2828%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="9.1127%" y="725" width="0.0799%" height="15" fill="rgb(252,32,32)" fg:x="114" fg:w="1"/><text x="9.3627%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="9.1926%" y="709" width="0.0799%" height="15" fill="rgb(241,123,33)" fg:x="115" fg:w="1"/><text x="9.4426%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.1926%" y="693" width="0.0799%" height="15" fill="rgb(212,140,16)" fg:x="115" fg:w="1"/><text x="9.4426%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.2726%" y="533" width="0.0799%" height="15" fill="rgb(247,132,5)" fg:x="116" fg:w="1"/><text x="9.5226%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="9.2726%" y="677" width="0.1599%" height="15" fill="rgb(209,137,38)" fg:x="116" fg:w="2"/><text x="9.5226%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="9.2726%" y="661" width="0.1599%" height="15" fill="rgb(248,32,42)" fg:x="116" fg:w="2"/><text x="9.5226%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="9.2726%" y="645" width="0.1599%" height="15" fill="rgb(216,188,40)" fg:x="116" fg:w="2"/><text x="9.5226%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.2726%" y="629" width="0.1599%" height="15" fill="rgb(209,127,53)" fg:x="116" fg:w="2"/><text x="9.5226%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.2726%" y="613" width="0.1599%" height="15" fill="rgb(254,162,9)" fg:x="116" fg:w="2"/><text x="9.5226%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.2726%" y="597" width="0.1599%" height="15" fill="rgb(219,183,10)" fg:x="116" fg:w="2"/><text x="9.5226%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.2726%" y="581" width="0.1599%" height="15" fill="rgb(217,192,21)" fg:x="116" fg:w="2"/><text x="9.5226%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="9.2726%" y="565" width="0.1599%" height="15" fill="rgb(251,89,27)" fg:x="116" fg:w="2"/><text x="9.5226%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.2726%" y="549" width="0.1599%" height="15" fill="rgb(253,55,28)" fg:x="116" fg:w="2"/><text x="9.5226%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.3525%" y="533" width="0.0799%" height="15" fill="rgb(216,159,8)" fg:x="117" fg:w="1"/><text x="9.6025%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.3525%" y="517" width="0.0799%" height="15" fill="rgb(231,228,44)" fg:x="117" fg:w="1"/><text x="9.6025%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.3525%" y="501" width="0.0799%" height="15" fill="rgb(247,34,48)" fg:x="117" fg:w="1"/><text x="9.6025%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.3525%" y="485" width="0.0799%" height="15" fill="rgb(247,222,18)" fg:x="117" fg:w="1"/><text x="9.6025%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="9.3525%" y="469" width="0.0799%" height="15" fill="rgb(227,49,4)" fg:x="117" fg:w="1"/><text x="9.6025%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="9.3525%" y="453" width="0.0799%" height="15" fill="rgb(219,189,53)" fg:x="117" fg:w="1"/><text x="9.6025%" y="463.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="9.3525%" y="437" width="0.0799%" height="15" fill="rgb(241,160,53)" fg:x="117" fg:w="1"/><text x="9.6025%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.4325%" y="597" width="0.0799%" height="15" fill="rgb(227,115,4)" fg:x="118" fg:w="1"/><text x="9.6825%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.4325%" y="581" width="0.0799%" height="15" fill="rgb(215,28,28)" fg:x="118" fg:w="1"/><text x="9.6825%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.64%)</title><rect x="8.9528%" y="757" width="0.6395%" height="15" fill="rgb(237,143,40)" fg:x="112" fg:w="8"/><text x="9.2028%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="9.0328%" y="741" width="0.5596%" height="15" fill="rgb(205,107,24)" fg:x="113" fg:w="7"/><text x="9.2828%" y="751.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="9.1926%" y="725" width="0.3997%" height="15" fill="rgb(209,112,35)" fg:x="115" fg:w="5"/><text x="9.4426%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="9.2726%" y="709" width="0.3197%" height="15" fill="rgb(206,135,5)" fg:x="116" fg:w="4"/><text x="9.5226%" y="719.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="9.2726%" y="693" width="0.3197%" height="15" fill="rgb(227,217,38)" fg:x="116" fg:w="4"/><text x="9.5226%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="9.4325%" y="677" width="0.1599%" height="15" fill="rgb(205,0,41)" fg:x="118" fg:w="2"/><text x="9.6825%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="9.4325%" y="661" width="0.1599%" height="15" fill="rgb(220,20,40)" fg:x="118" fg:w="2"/><text x="9.6825%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="9.4325%" y="645" width="0.1599%" height="15" fill="rgb(216,145,3)" fg:x="118" fg:w="2"/><text x="9.6825%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.4325%" y="629" width="0.1599%" height="15" fill="rgb(207,130,51)" fg:x="118" fg:w="2"/><text x="9.6825%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.4325%" y="613" width="0.1599%" height="15" fill="rgb(252,93,13)" fg:x="118" fg:w="2"/><text x="9.6825%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.5124%" y="597" width="0.0799%" height="15" fill="rgb(210,105,15)" fg:x="119" fg:w="1"/><text x="9.7624%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.5124%" y="581" width="0.0799%" height="15" fill="rgb(212,126,31)" fg:x="119" fg:w="1"/><text x="9.7624%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.5124%" y="565" width="0.0799%" height="15" fill="rgb(241,167,46)" fg:x="119" fg:w="1"/><text x="9.7624%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.5124%" y="549" width="0.0799%" height="15" fill="rgb(217,143,19)" fg:x="119" fg:w="1"/><text x="9.7624%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.5124%" y="533" width="0.0799%" height="15" fill="rgb(235,117,33)" fg:x="119" fg:w="1"/><text x="9.7624%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.5124%" y="517" width="0.0799%" height="15" fill="rgb(247,95,6)" fg:x="119" fg:w="1"/><text x="9.7624%" y="527.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="9.6723%" y="709" width="0.0799%" height="15" fill="rgb(243,206,43)" fg:x="121" fg:w="1"/><text x="9.9223%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="9.6723%" y="693" width="0.0799%" height="15" fill="rgb(229,65,54)" fg:x="121" fg:w="1"/><text x="9.9223%" y="703.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="9.6723%" y="677" width="0.0799%" height="15" fill="rgb(247,137,34)" fg:x="121" fg:w="1"/><text x="9.9223%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="9.6723%" y="661" width="0.0799%" height="15" fill="rgb(245,174,44)" fg:x="121" fg:w="1"/><text x="9.9223%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="9.6723%" y="645" width="0.0799%" height="15" fill="rgb(223,64,15)" fg:x="121" fg:w="1"/><text x="9.9223%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.6723%" y="629" width="0.0799%" height="15" fill="rgb(243,153,36)" fg:x="121" fg:w="1"/><text x="9.9223%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="9.6723%" y="613" width="0.0799%" height="15" fill="rgb(252,23,4)" fg:x="121" fg:w="1"/><text x="9.9223%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.6723%" y="597" width="0.0799%" height="15" fill="rgb(209,132,13)" fg:x="121" fg:w="1"/><text x="9.9223%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.6723%" y="581" width="0.0799%" height="15" fill="rgb(209,196,21)" fg:x="121" fg:w="1"/><text x="9.9223%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="9.5923%" y="757" width="0.2398%" height="15" fill="rgb(252,197,1)" fg:x="120" fg:w="3"/><text x="9.8423%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="9.5923%" y="741" width="0.2398%" height="15" fill="rgb(229,42,46)" fg:x="120" fg:w="3"/><text x="9.8423%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="9.6723%" y="725" width="0.1599%" height="15" fill="rgb(219,85,8)" fg:x="121" fg:w="2"/><text x="9.9223%" y="735.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="9.7522%" y="709" width="0.0799%" height="15" fill="rgb(223,185,14)" fg:x="122" fg:w="1"/><text x="10.0022%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="9.8321%" y="757" width="0.0799%" height="15" fill="rgb(217,196,18)" fg:x="123" fg:w="1"/><text x="10.0821%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="9.8321%" y="741" width="0.0799%" height="15" fill="rgb(220,122,37)" fg:x="123" fg:w="1"/><text x="10.0821%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="9.8321%" y="725" width="0.0799%" height="15" fill="rgb(236,135,33)" fg:x="123" fg:w="1"/><text x="10.0821%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="9.8321%" y="709" width="0.0799%" height="15" fill="rgb(222,86,54)" fg:x="123" fg:w="1"/><text x="10.0821%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="9.8321%" y="693" width="0.0799%" height="15" fill="rgb(227,42,22)" fg:x="123" fg:w="1"/><text x="10.0821%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="9.8321%" y="677" width="0.0799%" height="15" fill="rgb(243,101,27)" fg:x="123" fg:w="1"/><text x="10.0821%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.8321%" y="661" width="0.0799%" height="15" fill="rgb(229,100,8)" fg:x="123" fg:w="1"/><text x="10.0821%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8321%" y="645" width="0.0799%" height="15" fill="rgb(252,68,10)" fg:x="123" fg:w="1"/><text x="10.0821%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="9.9121%" y="741" width="0.0799%" height="15" fill="rgb(219,19,31)" fg:x="124" fg:w="1"/><text x="10.1621%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="9.9121%" y="725" width="0.0799%" height="15" fill="rgb(246,150,44)" fg:x="124" fg:w="1"/><text x="10.1621%" y="735.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="9.9121%" y="709" width="0.0799%" height="15" fill="rgb(211,14,39)" fg:x="124" fg:w="1"/><text x="10.1621%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.9121%" y="693" width="0.0799%" height="15" fill="rgb(221,98,29)" fg:x="124" fg:w="1"/><text x="10.1621%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="9.9121%" y="677" width="0.0799%" height="15" fill="rgb(221,70,26)" fg:x="124" fg:w="1"/><text x="10.1621%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="9.9121%" y="661" width="0.0799%" height="15" fill="rgb(236,146,30)" fg:x="124" fg:w="1"/><text x="10.1621%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.9121%" y="645" width="0.0799%" height="15" fill="rgb(226,94,34)" fg:x="124" fg:w="1"/><text x="10.1621%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.9121%" y="629" width="0.0799%" height="15" fill="rgb(248,132,21)" fg:x="124" fg:w="1"/><text x="10.1621%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.9121%" y="613" width="0.0799%" height="15" fill="rgb(245,43,50)" fg:x="124" fg:w="1"/><text x="10.1621%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.9121%" y="597" width="0.0799%" height="15" fill="rgb(245,132,31)" fg:x="124" fg:w="1"/><text x="10.1621%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="9.9920%" y="693" width="0.0799%" height="15" fill="rgb(230,171,4)" fg:x="125" fg:w="1"/><text x="10.2420%" y="703.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="9.9920%" y="677" width="0.0799%" height="15" fill="rgb(235,6,45)" fg:x="125" fg:w="1"/><text x="10.2420%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="9.9920%" y="661" width="0.0799%" height="15" fill="rgb(220,80,28)" fg:x="125" fg:w="1"/><text x="10.2420%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="9.9920%" y="645" width="0.0799%" height="15" fill="rgb(242,171,9)" fg:x="125" fg:w="1"/><text x="10.2420%" y="655.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="9.9920%" y="629" width="0.0799%" height="15" fill="rgb(214,135,29)" fg:x="125" fg:w="1"/><text x="10.2420%" y="639.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="10.0719%" y="677" width="0.0799%" height="15" fill="rgb(221,229,16)" fg:x="126" fg:w="1"/><text x="10.3219%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="10.0719%" y="661" width="0.0799%" height="15" fill="rgb(253,59,46)" fg:x="126" fg:w="1"/><text x="10.3219%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="10.0719%" y="645" width="0.0799%" height="15" fill="rgb(250,147,20)" fg:x="126" fg:w="1"/><text x="10.3219%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.0719%" y="629" width="0.0799%" height="15" fill="rgb(236,64,48)" fg:x="126" fg:w="1"/><text x="10.3219%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="10.0719%" y="693" width="0.1599%" height="15" fill="rgb(240,37,42)" fg:x="126" fg:w="2"/><text x="10.3219%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="10.1519%" y="677" width="0.0799%" height="15" fill="rgb(220,41,50)" fg:x="127" fg:w="1"/><text x="10.4019%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="10.1519%" y="661" width="0.0799%" height="15" fill="rgb(216,51,14)" fg:x="127" fg:w="1"/><text x="10.4019%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="10.1519%" y="645" width="0.0799%" height="15" fill="rgb(215,83,10)" fg:x="127" fg:w="1"/><text x="10.4019%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="10.1519%" y="629" width="0.0799%" height="15" fill="rgb(206,144,17)" fg:x="127" fg:w="1"/><text x="10.4019%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1519%" y="613" width="0.0799%" height="15" fill="rgb(219,196,37)" fg:x="127" fg:w="1"/><text x="10.4019%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1519%" y="597" width="0.0799%" height="15" fill="rgb(226,135,26)" fg:x="127" fg:w="1"/><text x="10.4019%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1519%" y="581" width="0.0799%" height="15" fill="rgb(237,195,40)" fg:x="127" fg:w="1"/><text x="10.4019%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1519%" y="565" width="0.0799%" height="15" fill="rgb(228,182,42)" fg:x="127" fg:w="1"/><text x="10.4019%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.1519%" y="549" width="0.0799%" height="15" fill="rgb(224,135,50)" fg:x="127" fg:w="1"/><text x="10.4019%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1519%" y="533" width="0.0799%" height="15" fill="rgb(236,215,34)" fg:x="127" fg:w="1"/><text x="10.4019%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1519%" y="517" width="0.0799%" height="15" fill="rgb(244,213,27)" fg:x="127" fg:w="1"/><text x="10.4019%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1519%" y="501" width="0.0799%" height="15" fill="rgb(233,37,53)" fg:x="127" fg:w="1"/><text x="10.4019%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1519%" y="485" width="0.0799%" height="15" fill="rgb(222,132,14)" fg:x="127" fg:w="1"/><text x="10.4019%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1519%" y="469" width="0.0799%" height="15" fill="rgb(219,202,29)" fg:x="127" fg:w="1"/><text x="10.4019%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="10.1519%" y="453" width="0.0799%" height="15" fill="rgb(226,157,39)" fg:x="127" fg:w="1"/><text x="10.4019%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="10.1519%" y="437" width="0.0799%" height="15" fill="rgb(235,213,2)" fg:x="127" fg:w="1"/><text x="10.4019%" y="447.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="10.1519%" y="421" width="0.0799%" height="15" fill="rgb(250,121,2)" fg:x="127" fg:w="1"/><text x="10.4019%" y="431.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="10.2318%" y="645" width="0.0799%" height="15" fill="rgb(206,192,33)" fg:x="128" fg:w="1"/><text x="10.4818%" y="655.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="10.2318%" y="629" width="0.0799%" height="15" fill="rgb(240,161,6)" fg:x="128" fg:w="1"/><text x="10.4818%" y="639.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="10.2318%" y="613" width="0.0799%" height="15" fill="rgb(246,53,30)" fg:x="128" fg:w="1"/><text x="10.4818%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="10.2318%" y="597" width="0.0799%" height="15" fill="rgb(219,123,43)" fg:x="128" fg:w="1"/><text x="10.4818%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.2318%" y="581" width="0.0799%" height="15" fill="rgb(236,53,49)" fg:x="128" fg:w="1"/><text x="10.4818%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.2318%" y="565" width="0.0799%" height="15" fill="rgb(241,156,1)" fg:x="128" fg:w="1"/><text x="10.4818%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.2318%" y="549" width="0.0799%" height="15" fill="rgb(209,73,26)" fg:x="128" fg:w="1"/><text x="10.4818%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.2318%" y="533" width="0.0799%" height="15" fill="rgb(206,114,3)" fg:x="128" fg:w="1"/><text x="10.4818%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.2318%" y="517" width="0.0799%" height="15" fill="rgb(230,214,9)" fg:x="128" fg:w="1"/><text x="10.4818%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.2318%" y="501" width="0.0799%" height="15" fill="rgb(240,184,46)" fg:x="128" fg:w="1"/><text x="10.4818%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.2318%" y="485" width="0.0799%" height="15" fill="rgb(242,169,54)" fg:x="128" fg:w="1"/><text x="10.4818%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.2318%" y="469" width="0.0799%" height="15" fill="rgb(207,168,50)" fg:x="128" fg:w="1"/><text x="10.4818%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="10.2318%" y="453" width="0.0799%" height="15" fill="rgb(240,114,2)" fg:x="128" fg:w="1"/><text x="10.4818%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="10.2318%" y="693" width="0.1599%" height="15" fill="rgb(211,17,40)" fg:x="128" fg:w="2"/><text x="10.4818%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="10.2318%" y="677" width="0.1599%" height="15" fill="rgb(235,97,36)" fg:x="128" fg:w="2"/><text x="10.4818%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="10.2318%" y="661" width="0.1599%" height="15" fill="rgb(208,164,11)" fg:x="128" fg:w="2"/><text x="10.4818%" y="671.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="10.3118%" y="645" width="0.0799%" height="15" fill="rgb(242,11,17)" fg:x="129" fg:w="1"/><text x="10.5618%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="10.3917%" y="677" width="0.0799%" height="15" fill="rgb(215,86,33)" fg:x="130" fg:w="1"/><text x="10.6417%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="10.3917%" y="661" width="0.0799%" height="15" fill="rgb(245,185,28)" fg:x="130" fg:w="1"/><text x="10.6417%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="10.3917%" y="645" width="0.0799%" height="15" fill="rgb(231,89,42)" fg:x="130" fg:w="1"/><text x="10.6417%" y="655.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="10.3917%" y="629" width="0.0799%" height="15" fill="rgb(210,18,47)" fg:x="130" fg:w="1"/><text x="10.6417%" y="639.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="10.3917%" y="613" width="0.0799%" height="15" fill="rgb(214,84,8)" fg:x="130" fg:w="1"/><text x="10.6417%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="10.3917%" y="597" width="0.0799%" height="15" fill="rgb(214,222,23)" fg:x="130" fg:w="1"/><text x="10.6417%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.3917%" y="581" width="0.0799%" height="15" fill="rgb(213,104,21)" fg:x="130" fg:w="1"/><text x="10.6417%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.3917%" y="565" width="0.0799%" height="15" fill="rgb(238,138,6)" fg:x="130" fg:w="1"/><text x="10.6417%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.3917%" y="549" width="0.0799%" height="15" fill="rgb(205,167,50)" fg:x="130" fg:w="1"/><text x="10.6417%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.3917%" y="533" width="0.0799%" height="15" fill="rgb(230,105,27)" fg:x="130" fg:w="1"/><text x="10.6417%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.4716%" y="677" width="0.0799%" height="15" fill="rgb(222,97,48)" fg:x="131" fg:w="1"/><text x="10.7216%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="10.5516%" y="677" width="0.0799%" height="15" fill="rgb(222,197,14)" fg:x="132" fg:w="1"/><text x="10.8016%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5516%" y="661" width="0.0799%" height="15" fill="rgb(210,105,47)" fg:x="132" fg:w="1"/><text x="10.8016%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="10.6315%" y="661" width="0.0799%" height="15" fill="rgb(238,158,19)" fg:x="133" fg:w="1"/><text x="10.8815%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="10.6315%" y="645" width="0.0799%" height="15" fill="rgb(226,176,23)" fg:x="133" fg:w="1"/><text x="10.8815%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.6315%" y="629" width="0.0799%" height="15" fill="rgb(208,79,31)" fg:x="133" fg:w="1"/><text x="10.8815%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.7914%" y="581" width="0.0799%" height="15" fill="rgb(221,154,21)" fg:x="135" fg:w="1"/><text x="11.0414%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.7914%" y="565" width="0.0799%" height="15" fill="rgb(213,61,41)" fg:x="135" fg:w="1"/><text x="11.0414%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.7914%" y="549" width="0.0799%" height="15" fill="rgb(215,28,33)" fg:x="135" fg:w="1"/><text x="11.0414%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.7914%" y="533" width="0.0799%" height="15" fill="rgb(231,139,26)" fg:x="135" fg:w="1"/><text x="11.0414%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.7914%" y="517" width="0.0799%" height="15" fill="rgb(232,159,16)" fg:x="135" fg:w="1"/><text x="11.0414%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.7914%" y="501" width="0.0799%" height="15" fill="rgb(233,80,10)" fg:x="135" fg:w="1"/><text x="11.0414%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.7914%" y="485" width="0.0799%" height="15" fill="rgb(208,147,29)" fg:x="135" fg:w="1"/><text x="11.0414%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.7914%" y="469" width="0.0799%" height="15" fill="rgb(213,10,12)" fg:x="135" fg:w="1"/><text x="11.0414%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.7914%" y="453" width="0.0799%" height="15" fill="rgb(231,218,13)" fg:x="135" fg:w="1"/><text x="11.0414%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.7914%" y="437" width="0.0799%" height="15" fill="rgb(244,199,44)" fg:x="135" fg:w="1"/><text x="11.0414%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.7914%" y="421" width="0.0799%" height="15" fill="rgb(240,144,53)" fg:x="135" fg:w="1"/><text x="11.0414%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.7914%" y="405" width="0.0799%" height="15" fill="rgb(223,57,28)" fg:x="135" fg:w="1"/><text x="11.0414%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.7914%" y="389" width="0.0799%" height="15" fill="rgb(213,134,38)" fg:x="135" fg:w="1"/><text x="11.0414%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.7914%" y="373" width="0.0799%" height="15" fill="rgb(251,182,42)" fg:x="135" fg:w="1"/><text x="11.0414%" y="383.50"></text></g><g><title>plugins_core::build::Build::leads_to (7 samples, 0.56%)</title><rect x="10.3917%" y="693" width="0.5596%" height="15" fill="rgb(229,93,13)" fg:x="130" fg:w="7"/><text x="10.6417%" y="703.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="10.6315%" y="677" width="0.3197%" height="15" fill="rgb(234,171,3)" fg:x="133" fg:w="4"/><text x="10.8815%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="10.7114%" y="661" width="0.2398%" height="15" fill="rgb(241,105,32)" fg:x="134" fg:w="3"/><text x="10.9614%" y="671.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="10.7114%" y="645" width="0.2398%" height="15" fill="rgb(221,66,3)" fg:x="134" fg:w="3"/><text x="10.9614%" y="655.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="10.7114%" y="629" width="0.2398%" height="15" fill="rgb(248,155,29)" fg:x="134" fg:w="3"/><text x="10.9614%" y="639.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="10.7914%" y="613" width="0.1599%" height="15" fill="rgb(231,31,5)" fg:x="135" fg:w="2"/><text x="11.0414%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="10.7914%" y="597" width="0.1599%" height="15" fill="rgb(213,188,31)" fg:x="135" fg:w="2"/><text x="11.0414%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.8713%" y="581" width="0.0799%" height="15" fill="rgb(212,104,33)" fg:x="136" fg:w="1"/><text x="11.1213%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.8713%" y="565" width="0.0799%" height="15" fill="rgb(254,77,51)" fg:x="136" fg:w="1"/><text x="11.1213%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.8713%" y="549" width="0.0799%" height="15" fill="rgb(234,39,26)" fg:x="136" fg:w="1"/><text x="11.1213%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.8713%" y="533" width="0.0799%" height="15" fill="rgb(208,88,36)" fg:x="136" fg:w="1"/><text x="11.1213%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.8713%" y="517" width="0.0799%" height="15" fill="rgb(243,222,10)" fg:x="136" fg:w="1"/><text x="11.1213%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.8713%" y="501" width="0.0799%" height="15" fill="rgb(218,133,52)" fg:x="136" fg:w="1"/><text x="11.1213%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.8713%" y="485" width="0.0799%" height="15" fill="rgb(222,25,26)" fg:x="136" fg:w="1"/><text x="11.1213%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.8713%" y="469" width="0.0799%" height="15" fill="rgb(243,174,24)" fg:x="136" fg:w="1"/><text x="11.1213%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.12%)</title><rect x="9.9920%" y="741" width="1.1191%" height="15" fill="rgb(233,188,52)" fg:x="125" fg:w="14"/><text x="10.2420%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="9.9920%" y="725" width="1.1191%" height="15" fill="rgb(208,89,14)" fg:x="125" fg:w="14"/><text x="10.2420%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (14 samples, 1.12%)</title><rect x="9.9920%" y="709" width="1.1191%" height="15" fill="rgb(205,204,21)" fg:x="125" fg:w="14"/><text x="10.2420%" y="719.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="10.9512%" y="693" width="0.1599%" height="15" fill="rgb(246,39,28)" fg:x="137" fg:w="2"/><text x="11.2012%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="10.9512%" y="677" width="0.1599%" height="15" fill="rgb(235,71,19)" fg:x="137" fg:w="2"/><text x="11.2012%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="10.9512%" y="661" width="0.1599%" height="15" fill="rgb(211,62,39)" fg:x="137" fg:w="2"/><text x="11.2012%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="10.9512%" y="645" width="0.1599%" height="15" fill="rgb(246,118,20)" fg:x="137" fg:w="2"/><text x="11.2012%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="10.9512%" y="629" width="0.1599%" height="15" fill="rgb(230,82,12)" fg:x="137" fg:w="2"/><text x="11.2012%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="10.9512%" y="613" width="0.1599%" height="15" fill="rgb(205,212,34)" fg:x="137" fg:w="2"/><text x="11.2012%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="10.9512%" y="597" width="0.1599%" height="15" fill="rgb(239,90,1)" fg:x="137" fg:w="2"/><text x="11.2012%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="10.9512%" y="581" width="0.1599%" height="15" fill="rgb(225,198,50)" fg:x="137" fg:w="2"/><text x="11.2012%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="10.9512%" y="565" width="0.1599%" height="15" fill="rgb(227,208,48)" fg:x="137" fg:w="2"/><text x="11.2012%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="10.9512%" y="549" width="0.1599%" height="15" fill="rgb(238,134,41)" fg:x="137" fg:w="2"/><text x="11.2012%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="10.9512%" y="533" width="0.1599%" height="15" fill="rgb(241,58,39)" fg:x="137" fg:w="2"/><text x="11.2012%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="10.9512%" y="517" width="0.1599%" height="15" fill="rgb(214,126,4)" fg:x="137" fg:w="2"/><text x="11.2012%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="10.9512%" y="501" width="0.1599%" height="15" fill="rgb(235,149,4)" fg:x="137" fg:w="2"/><text x="11.2012%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.9512%" y="485" width="0.1599%" height="15" fill="rgb(236,59,29)" fg:x="137" fg:w="2"/><text x="11.2012%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="11.1111%" y="677" width="0.0799%" height="15" fill="rgb(246,11,33)" fg:x="139" fg:w="1"/><text x="11.3611%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="11.1111%" y="709" width="0.1599%" height="15" fill="rgb(232,180,35)" fg:x="139" fg:w="2"/><text x="11.3611%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="11.1111%" y="693" width="0.1599%" height="15" fill="rgb(220,35,37)" fg:x="139" fg:w="2"/><text x="11.3611%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.1910%" y="677" width="0.0799%" height="15" fill="rgb(238,107,48)" fg:x="140" fg:w="1"/><text x="11.4410%" y="687.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="11.2710%" y="709" width="0.0799%" height="15" fill="rgb(205,65,21)" fg:x="141" fg:w="1"/><text x="11.5210%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.3509%" y="565" width="0.0799%" height="15" fill="rgb(246,138,48)" fg:x="142" fg:w="1"/><text x="11.6009%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.3509%" y="597" width="0.1599%" height="15" fill="rgb(209,220,47)" fg:x="142" fg:w="2"/><text x="11.6009%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.3509%" y="581" width="0.1599%" height="15" fill="rgb(222,162,49)" fg:x="142" fg:w="2"/><text x="11.6009%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4309%" y="565" width="0.0799%" height="15" fill="rgb(243,123,11)" fg:x="143" fg:w="1"/><text x="11.6809%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4309%" y="549" width="0.0799%" height="15" fill="rgb(221,229,41)" fg:x="143" fg:w="1"/><text x="11.6809%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.4309%" y="533" width="0.0799%" height="15" fill="rgb(216,68,4)" fg:x="143" fg:w="1"/><text x="11.6809%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.4309%" y="517" width="0.0799%" height="15" fill="rgb(207,88,35)" fg:x="143" fg:w="1"/><text x="11.6809%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.4309%" y="501" width="0.0799%" height="15" fill="rgb(252,2,5)" fg:x="143" fg:w="1"/><text x="11.6809%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4309%" y="485" width="0.0799%" height="15" fill="rgb(209,173,7)" fg:x="143" fg:w="1"/><text x="11.6809%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4309%" y="469" width="0.0799%" height="15" fill="rgb(210,198,52)" fg:x="143" fg:w="1"/><text x="11.6809%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.4309%" y="453" width="0.0799%" height="15" fill="rgb(228,152,32)" fg:x="143" fg:w="1"/><text x="11.6809%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="11.3509%" y="613" width="0.2398%" height="15" fill="rgb(249,98,29)" fg:x="142" fg:w="3"/><text x="11.6009%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.5108%" y="597" width="0.0799%" height="15" fill="rgb(205,148,48)" fg:x="144" fg:w="1"/><text x="11.7608%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.5108%" y="581" width="0.0799%" height="15" fill="rgb(236,69,34)" fg:x="144" fg:w="1"/><text x="11.7608%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.5108%" y="565" width="0.0799%" height="15" fill="rgb(220,151,41)" fg:x="144" fg:w="1"/><text x="11.7608%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.5108%" y="549" width="0.0799%" height="15" fill="rgb(254,106,24)" fg:x="144" fg:w="1"/><text x="11.7608%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.5108%" y="533" width="0.0799%" height="15" fill="rgb(210,37,48)" fg:x="144" fg:w="1"/><text x="11.7608%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.5108%" y="517" width="0.0799%" height="15" fill="rgb(254,131,5)" fg:x="144" fg:w="1"/><text x="11.7608%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.5108%" y="501" width="0.0799%" height="15" fill="rgb(216,55,41)" fg:x="144" fg:w="1"/><text x="11.7608%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.5108%" y="485" width="0.0799%" height="15" fill="rgb(250,35,31)" fg:x="144" fg:w="1"/><text x="11.7608%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.5108%" y="469" width="0.0799%" height="15" fill="rgb(207,124,33)" fg:x="144" fg:w="1"/><text x="11.7608%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.5108%" y="453" width="0.0799%" height="15" fill="rgb(249,175,17)" fg:x="144" fg:w="1"/><text x="11.7608%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.5108%" y="437" width="0.0799%" height="15" fill="rgb(224,175,39)" fg:x="144" fg:w="1"/><text x="11.7608%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="11.5108%" y="421" width="0.0799%" height="15" fill="rgb(208,67,49)" fg:x="144" fg:w="1"/><text x="11.7608%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.5108%" y="405" width="0.0799%" height="15" fill="rgb(222,188,41)" fg:x="144" fg:w="1"/><text x="11.7608%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="11.3509%" y="629" width="0.3197%" height="15" fill="rgb(243,213,30)" fg:x="142" fg:w="4"/><text x="11.6009%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.5907%" y="613" width="0.0799%" height="15" fill="rgb(253,100,45)" fg:x="145" fg:w="1"/><text x="11.8407%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.6707%" y="597" width="0.0799%" height="15" fill="rgb(226,24,44)" fg:x="146" fg:w="1"/><text x="11.9207%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.6707%" y="581" width="0.0799%" height="15" fill="rgb(215,41,24)" fg:x="146" fg:w="1"/><text x="11.9207%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="11.7506%" y="533" width="0.0799%" height="15" fill="rgb(254,53,33)" fg:x="147" fg:w="1"/><text x="12.0006%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8305%" y="501" width="0.0799%" height="15" fill="rgb(242,103,10)" fg:x="148" fg:w="1"/><text x="12.0805%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="11.9105%" y="501" width="0.1599%" height="15" fill="rgb(246,29,21)" fg:x="149" fg:w="2"/><text x="12.1605%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.9904%" y="485" width="0.0799%" height="15" fill="rgb(251,154,1)" fg:x="150" fg:w="1"/><text x="12.2404%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (10 samples, 0.80%)</title><rect x="11.3509%" y="661" width="0.7994%" height="15" fill="rgb(254,212,26)" fg:x="142" fg:w="10"/><text x="11.6009%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 0.80%)</title><rect x="11.3509%" y="645" width="0.7994%" height="15" fill="rgb(251,187,46)" fg:x="142" fg:w="10"/><text x="11.6009%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="11.6707%" y="629" width="0.4796%" height="15" fill="rgb(224,208,14)" fg:x="146" fg:w="6"/><text x="11.9207%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="11.6707%" y="613" width="0.4796%" height="15" fill="rgb(222,176,26)" fg:x="146" fg:w="6"/><text x="11.9207%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="11.7506%" y="597" width="0.3997%" height="15" fill="rgb(241,219,52)" fg:x="147" fg:w="5"/><text x="12.0006%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="11.7506%" y="581" width="0.3997%" height="15" fill="rgb(252,198,21)" fg:x="147" fg:w="5"/><text x="12.0006%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (5 samples, 0.40%)</title><rect x="11.7506%" y="565" width="0.3997%" height="15" fill="rgb(244,196,23)" fg:x="147" fg:w="5"/><text x="12.0006%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="11.7506%" y="549" width="0.3997%" height="15" fill="rgb(239,121,44)" fg:x="147" fg:w="5"/><text x="12.0006%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="11.8305%" y="533" width="0.3197%" height="15" fill="rgb(249,203,23)" fg:x="148" fg:w="4"/><text x="12.0805%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="11.8305%" y="517" width="0.3197%" height="15" fill="rgb(238,219,10)" fg:x="148" fg:w="4"/><text x="12.0805%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.0703%" y="501" width="0.0799%" height="15" fill="rgb(241,35,46)" fg:x="151" fg:w="1"/><text x="12.3203%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0703%" y="485" width="0.0799%" height="15" fill="rgb(218,28,6)" fg:x="151" fg:w="1"/><text x="12.3203%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="12.0703%" y="469" width="0.0799%" height="15" fill="rgb(233,151,50)" fg:x="151" fg:w="1"/><text x="12.3203%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2302%" y="565" width="0.0799%" height="15" fill="rgb(208,57,8)" fg:x="153" fg:w="1"/><text x="12.4802%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.2302%" y="629" width="0.1599%" height="15" fill="rgb(253,99,10)" fg:x="153" fg:w="2"/><text x="12.4802%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="12.2302%" y="613" width="0.1599%" height="15" fill="rgb(237,196,49)" fg:x="153" fg:w="2"/><text x="12.4802%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.2302%" y="597" width="0.1599%" height="15" fill="rgb(209,51,3)" fg:x="153" fg:w="2"/><text x="12.4802%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.2302%" y="581" width="0.1599%" height="15" fill="rgb(238,129,10)" fg:x="153" fg:w="2"/><text x="12.4802%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.3102%" y="565" width="0.0799%" height="15" fill="rgb(246,201,16)" fg:x="154" fg:w="1"/><text x="12.5602%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3102%" y="549" width="0.0799%" height="15" fill="rgb(250,160,20)" fg:x="154" fg:w="1"/><text x="12.5602%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3901%" y="597" width="0.0799%" height="15" fill="rgb(251,107,25)" fg:x="155" fg:w="1"/><text x="12.6401%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3901%" y="581" width="0.0799%" height="15" fill="rgb(212,103,39)" fg:x="155" fg:w="1"/><text x="12.6401%" y="591.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (17 samples, 1.36%)</title><rect x="11.3509%" y="677" width="1.3589%" height="15" fill="rgb(207,9,29)" fg:x="142" fg:w="17"/><text x="11.6009%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (7 samples, 0.56%)</title><rect x="12.1503%" y="661" width="0.5596%" height="15" fill="rgb(227,84,3)" fg:x="152" fg:w="7"/><text x="12.4003%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (7 samples, 0.56%)</title><rect x="12.1503%" y="645" width="0.5596%" height="15" fill="rgb(242,194,7)" fg:x="152" fg:w="7"/><text x="12.4003%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="12.3901%" y="629" width="0.3197%" height="15" fill="rgb(230,40,4)" fg:x="155" fg:w="4"/><text x="12.6401%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="12.3901%" y="613" width="0.3197%" height="15" fill="rgb(243,229,33)" fg:x="155" fg:w="4"/><text x="12.6401%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="12.4700%" y="597" width="0.2398%" height="15" fill="rgb(240,65,24)" fg:x="156" fg:w="3"/><text x="12.7200%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="12.4700%" y="581" width="0.2398%" height="15" fill="rgb(212,28,20)" fg:x="156" fg:w="3"/><text x="12.7200%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="12.4700%" y="565" width="0.2398%" height="15" fill="rgb(209,72,3)" fg:x="156" fg:w="3"/><text x="12.7200%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="12.5500%" y="549" width="0.1599%" height="15" fill="rgb(238,170,36)" fg:x="157" fg:w="2"/><text x="12.8000%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.6299%" y="533" width="0.0799%" height="15" fill="rgb(236,19,38)" fg:x="158" fg:w="1"/><text x="12.8799%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="12.6299%" y="517" width="0.0799%" height="15" fill="rgb(230,67,43)" fg:x="158" fg:w="1"/><text x="12.8799%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.6299%" y="501" width="0.0799%" height="15" fill="rgb(227,14,36)" fg:x="158" fg:w="1"/><text x="12.8799%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="12.7098%" y="661" width="0.2398%" height="15" fill="rgb(247,171,49)" fg:x="159" fg:w="3"/><text x="12.9598%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="12.7098%" y="645" width="0.2398%" height="15" fill="rgb(235,164,51)" fg:x="159" fg:w="3"/><text x="12.9598%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.7898%" y="629" width="0.1599%" height="15" fill="rgb(246,107,20)" fg:x="160" fg:w="2"/><text x="13.0398%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.8697%" y="613" width="0.0799%" height="15" fill="rgb(226,88,18)" fg:x="161" fg:w="1"/><text x="13.1197%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.8697%" y="597" width="0.0799%" height="15" fill="rgb(235,136,9)" fg:x="161" fg:w="1"/><text x="13.1197%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.9496%" y="645" width="0.0799%" height="15" fill="rgb(209,3,34)" fg:x="162" fg:w="1"/><text x="13.1996%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.0296%" y="645" width="0.0799%" height="15" fill="rgb(213,38,19)" fg:x="163" fg:w="1"/><text x="13.2796%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.0296%" y="629" width="0.0799%" height="15" fill="rgb(254,24,24)" fg:x="163" fg:w="1"/><text x="13.2796%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.1095%" y="645" width="0.0799%" height="15" fill="rgb(219,122,42)" fg:x="164" fg:w="1"/><text x="13.3595%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="13.1894%" y="629" width="0.1599%" height="15" fill="rgb(205,128,31)" fg:x="165" fg:w="2"/><text x="13.4394%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.2694%" y="613" width="0.0799%" height="15" fill="rgb(212,142,0)" fg:x="166" fg:w="1"/><text x="13.5194%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.2694%" y="597" width="0.0799%" height="15" fill="rgb(211,25,35)" fg:x="166" fg:w="1"/><text x="13.5194%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.3493%" y="613" width="0.0799%" height="15" fill="rgb(220,150,53)" fg:x="167" fg:w="1"/><text x="13.5993%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.3493%" y="597" width="0.0799%" height="15" fill="rgb(220,30,24)" fg:x="167" fg:w="1"/><text x="13.5993%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.3493%" y="581" width="0.0799%" height="15" fill="rgb(218,86,23)" fg:x="167" fg:w="1"/><text x="13.5993%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.4293%" y="565" width="0.0799%" height="15" fill="rgb(206,62,27)" fg:x="168" fg:w="1"/><text x="13.6793%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.4293%" y="549" width="0.0799%" height="15" fill="rgb(249,174,0)" fg:x="168" fg:w="1"/><text x="13.6793%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="13.3493%" y="629" width="0.2398%" height="15" fill="rgb(246,67,27)" fg:x="167" fg:w="3"/><text x="13.5993%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="13.4293%" y="613" width="0.1599%" height="15" fill="rgb(250,195,30)" fg:x="168" fg:w="2"/><text x="13.6793%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="13.4293%" y="597" width="0.1599%" height="15" fill="rgb(251,171,50)" fg:x="168" fg:w="2"/><text x="13.6793%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="13.4293%" y="581" width="0.1599%" height="15" fill="rgb(236,196,10)" fg:x="168" fg:w="2"/><text x="13.6793%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.5092%" y="565" width="0.0799%" height="15" fill="rgb(249,228,52)" fg:x="169" fg:w="1"/><text x="13.7592%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="13.1894%" y="645" width="0.4796%" height="15" fill="rgb(219,60,51)" fg:x="165" fg:w="6"/><text x="13.4394%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.5891%" y="629" width="0.0799%" height="15" fill="rgb(240,198,24)" fg:x="170" fg:w="1"/><text x="13.8391%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="12.7098%" y="677" width="1.2790%" height="15" fill="rgb(240,192,40)" fg:x="159" fg:w="16"/><text x="12.9598%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="12.9496%" y="661" width="1.0392%" height="15" fill="rgb(219,118,5)" fg:x="162" fg:w="13"/><text x="13.1996%" y="671.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="13.6691%" y="645" width="0.3197%" height="15" fill="rgb(205,202,34)" fg:x="171" fg:w="4"/><text x="13.9191%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="13.6691%" y="629" width="0.3197%" height="15" fill="rgb(234,153,26)" fg:x="171" fg:w="4"/><text x="13.9191%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.8289%" y="613" width="0.1599%" height="15" fill="rgb(229,26,29)" fg:x="173" fg:w="2"/><text x="14.0789%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.8289%" y="597" width="0.1599%" height="15" fill="rgb(237,115,21)" fg:x="173" fg:w="2"/><text x="14.0789%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="13.8289%" y="581" width="0.1599%" height="15" fill="rgb(252,144,15)" fg:x="173" fg:w="2"/><text x="14.0789%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="13.8289%" y="565" width="0.1599%" height="15" fill="rgb(232,26,13)" fg:x="173" fg:w="2"/><text x="14.0789%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="13.9888%" y="629" width="0.1599%" height="15" fill="rgb(206,44,19)" fg:x="175" fg:w="2"/><text x="14.2388%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="13.9888%" y="613" width="0.1599%" height="15" fill="rgb(249,159,2)" fg:x="175" fg:w="2"/><text x="14.2388%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1487%" y="613" width="0.0799%" height="15" fill="rgb(231,5,32)" fg:x="177" fg:w="1"/><text x="14.3987%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.2286%" y="613" width="0.0799%" height="15" fill="rgb(249,210,18)" fg:x="178" fg:w="1"/><text x="14.4786%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.2286%" y="597" width="0.0799%" height="15" fill="rgb(215,223,36)" fg:x="178" fg:w="1"/><text x="14.4786%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="14.3086%" y="597" width="0.0799%" height="15" fill="rgb(245,185,20)" fg:x="179" fg:w="1"/><text x="14.5586%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.3086%" y="581" width="0.0799%" height="15" fill="rgb(206,224,11)" fg:x="179" fg:w="1"/><text x="14.5586%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.3086%" y="565" width="0.0799%" height="15" fill="rgb(248,73,42)" fg:x="179" fg:w="1"/><text x="14.5586%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.3885%" y="549" width="0.0799%" height="15" fill="rgb(219,149,31)" fg:x="180" fg:w="1"/><text x="14.6385%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="13.9888%" y="677" width="0.5596%" height="15" fill="rgb(243,104,17)" fg:x="175" fg:w="7"/><text x="14.2388%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="13.9888%" y="661" width="0.5596%" height="15" fill="rgb(244,117,33)" fg:x="175" fg:w="7"/><text x="14.2388%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="13.9888%" y="645" width="0.5596%" height="15" fill="rgb(251,25,47)" fg:x="175" fg:w="7"/><text x="14.2388%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="14.1487%" y="629" width="0.3997%" height="15" fill="rgb(249,70,13)" fg:x="177" fg:w="5"/><text x="14.3987%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="14.3086%" y="613" width="0.2398%" height="15" fill="rgb(217,133,18)" fg:x="179" fg:w="3"/><text x="14.5586%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.3885%" y="597" width="0.1599%" height="15" fill="rgb(248,97,28)" fg:x="180" fg:w="2"/><text x="14.6385%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.3885%" y="581" width="0.1599%" height="15" fill="rgb(237,193,4)" fg:x="180" fg:w="2"/><text x="14.6385%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.3885%" y="565" width="0.1599%" height="15" fill="rgb(247,198,45)" fg:x="180" fg:w="2"/><text x="14.6385%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.4684%" y="549" width="0.0799%" height="15" fill="rgb(245,2,20)" fg:x="181" fg:w="1"/><text x="14.7184%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5484%" y="629" width="0.0799%" height="15" fill="rgb(210,71,36)" fg:x="182" fg:w="1"/><text x="14.7984%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.6283%" y="629" width="0.0799%" height="15" fill="rgb(238,114,30)" fg:x="183" fg:w="1"/><text x="14.8783%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="14.7082%" y="629" width="0.0799%" height="15" fill="rgb(241,200,2)" fg:x="184" fg:w="1"/><text x="14.9582%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="14.7082%" y="613" width="0.0799%" height="15" fill="rgb(232,106,18)" fg:x="184" fg:w="1"/><text x="14.9582%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="14.7882%" y="629" width="0.0799%" height="15" fill="rgb(211,141,18)" fg:x="185" fg:w="1"/><text x="15.0382%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.7882%" y="613" width="0.0799%" height="15" fill="rgb(224,9,9)" fg:x="185" fg:w="1"/><text x="15.0382%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7882%" y="597" width="0.0799%" height="15" fill="rgb(249,137,46)" fg:x="185" fg:w="1"/><text x="15.0382%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7882%" y="581" width="0.0799%" height="15" fill="rgb(236,44,45)" fg:x="185" fg:w="1"/><text x="15.0382%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="14.7882%" y="565" width="0.0799%" height="15" fill="rgb(205,68,40)" fg:x="185" fg:w="1"/><text x="15.0382%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="14.8681%" y="613" width="0.2398%" height="15" fill="rgb(214,198,49)" fg:x="186" fg:w="3"/><text x="15.1181%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.9480%" y="597" width="0.1599%" height="15" fill="rgb(226,140,45)" fg:x="187" fg:w="2"/><text x="15.1980%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.9480%" y="581" width="0.1599%" height="15" fill="rgb(209,109,20)" fg:x="187" fg:w="2"/><text x="15.1980%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.2678%" y="581" width="0.0799%" height="15" fill="rgb(217,33,46)" fg:x="191" fg:w="1"/><text x="15.5178%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2678%" y="565" width="0.0799%" height="15" fill="rgb(232,150,33)" fg:x="191" fg:w="1"/><text x="15.5178%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2678%" y="549" width="0.0799%" height="15" fill="rgb(233,76,25)" fg:x="191" fg:w="1"/><text x="15.5178%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.3477%" y="565" width="0.0799%" height="15" fill="rgb(254,219,23)" fg:x="192" fg:w="1"/><text x="15.5977%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.5875%" y="485" width="0.1599%" height="15" fill="rgb(233,108,4)" fg:x="195" fg:w="2"/><text x="15.8375%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.6675%" y="469" width="0.0799%" height="15" fill="rgb(229,98,6)" fg:x="196" fg:w="1"/><text x="15.9175%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="15.6675%" y="453" width="0.0799%" height="15" fill="rgb(217,40,27)" fg:x="196" fg:w="1"/><text x="15.9175%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.6675%" y="437" width="0.0799%" height="15" fill="rgb(221,35,43)" fg:x="196" fg:w="1"/><text x="15.9175%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="15.5875%" y="501" width="0.2398%" height="15" fill="rgb(212,107,11)" fg:x="195" fg:w="3"/><text x="15.8375%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7474%" y="485" width="0.0799%" height="15" fill="rgb(245,42,44)" fg:x="197" fg:w="1"/><text x="15.9974%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.7474%" y="469" width="0.0799%" height="15" fill="rgb(209,31,12)" fg:x="197" fg:w="1"/><text x="15.9974%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="15.1878%" y="597" width="0.7194%" height="15" fill="rgb(210,228,54)" fg:x="190" fg:w="9"/><text x="15.4378%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="15.3477%" y="581" width="0.5596%" height="15" fill="rgb(241,19,33)" fg:x="192" fg:w="7"/><text x="15.5977%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="15.4277%" y="565" width="0.4796%" height="15" fill="rgb(229,51,27)" fg:x="193" fg:w="6"/><text x="15.6777%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="15.4277%" y="549" width="0.4796%" height="15" fill="rgb(214,167,49)" fg:x="193" fg:w="6"/><text x="15.6777%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="15.5875%" y="533" width="0.3197%" height="15" fill="rgb(248,140,47)" fg:x="195" fg:w="4"/><text x="15.8375%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="15.5875%" y="517" width="0.3197%" height="15" fill="rgb(228,6,51)" fg:x="195" fg:w="4"/><text x="15.8375%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8273%" y="501" width="0.0799%" height="15" fill="rgb(242,44,53)" fg:x="198" fg:w="1"/><text x="16.0773%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9073%" y="581" width="0.0799%" height="15" fill="rgb(249,90,50)" fg:x="199" fg:w="1"/><text x="16.1573%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (19 samples, 1.52%)</title><rect x="14.5484%" y="661" width="1.5188%" height="15" fill="rgb(222,84,19)" fg:x="182" fg:w="19"/><text x="14.7984%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.52%)</title><rect x="14.5484%" y="645" width="1.5188%" height="15" fill="rgb(214,140,12)" fg:x="182" fg:w="19"/><text x="14.7984%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="14.8681%" y="629" width="1.1990%" height="15" fill="rgb(210,20,43)" fg:x="186" fg:w="15"/><text x="15.1181%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (12 samples, 0.96%)</title><rect x="15.1079%" y="613" width="0.9592%" height="15" fill="rgb(243,1,40)" fg:x="189" fg:w="12"/><text x="15.3579%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="15.9073%" y="597" width="0.1599%" height="15" fill="rgb(224,102,26)" fg:x="199" fg:w="2"/><text x="16.1573%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="15.9872%" y="581" width="0.0799%" height="15" fill="rgb(221,179,1)" fg:x="200" fg:w="1"/><text x="16.2372%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="15.9872%" y="565" width="0.0799%" height="15" fill="rgb(216,209,47)" fg:x="200" fg:w="1"/><text x="16.2372%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="16.0671%" y="645" width="0.0799%" height="15" fill="rgb(251,135,9)" fg:x="201" fg:w="1"/><text x="16.3171%" y="655.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (61 samples, 4.88%)</title><rect x="11.3509%" y="709" width="4.8761%" height="15" fill="rgb(242,9,36)" fg:x="142" fg:w="61"/><text x="11.6009%" y="719.50">engine..</text></g><g><title>engine::session::SavesEntities::check_for_changes (61 samples, 4.88%)</title><rect x="11.3509%" y="693" width="4.8761%" height="15" fill="rgb(249,60,37)" fg:x="142" fg:w="61"/><text x="11.6009%" y="703.50">engine..</text></g><g><title>kernel::compare::any_entity_changes (21 samples, 1.68%)</title><rect x="14.5484%" y="677" width="1.6787%" height="15" fill="rgb(230,66,45)" fg:x="182" fg:w="21"/><text x="14.7984%" y="687.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="16.0671%" y="661" width="0.1599%" height="15" fill="rgb(216,1,47)" fg:x="201" fg:w="2"/><text x="16.3171%" y="671.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="16.1471%" y="645" width="0.0799%" height="15" fill="rgb(235,8,23)" fg:x="202" fg:w="1"/><text x="16.3971%" y="655.50"></text></g><g><title>engine::session::Session::flush (65 samples, 5.20%)</title><rect x="11.1111%" y="741" width="5.1958%" height="15" fill="rgb(225,136,11)" fg:x="139" fg:w="65"/><text x="11.3611%" y="751.50">engine..</text></g><g><title>engine::session::Session::save_entity_changes (65 samples, 5.20%)</title><rect x="11.1111%" y="725" width="5.1958%" height="15" fill="rgb(228,63,44)" fg:x="139" fg:w="65"/><text x="11.3611%" y="735.50">engine..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="16.2270%" y="709" width="0.0799%" height="15" fill="rgb(240,43,52)" fg:x="203" fg:w="1"/><text x="16.4770%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="16.2270%" y="693" width="0.0799%" height="15" fill="rgb(217,167,36)" fg:x="203" fg:w="1"/><text x="16.4770%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="16.2270%" y="677" width="0.0799%" height="15" fill="rgb(250,19,6)" fg:x="203" fg:w="1"/><text x="16.4770%" y="687.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="16.2270%" y="661" width="0.0799%" height="15" fill="rgb(236,60,51)" fg:x="203" fg:w="1"/><text x="16.4770%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2270%" y="645" width="0.0799%" height="15" fill="rgb(222,217,20)" fg:x="203" fg:w="1"/><text x="16.4770%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2270%" y="629" width="0.0799%" height="15" fill="rgb(242,65,52)" fg:x="203" fg:w="1"/><text x="16.4770%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2270%" y="613" width="0.0799%" height="15" fill="rgb(217,5,41)" fg:x="203" fg:w="1"/><text x="16.4770%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.2270%" y="597" width="0.0799%" height="15" fill="rgb(223,208,53)" fg:x="203" fg:w="1"/><text x="16.4770%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.2270%" y="581" width="0.0799%" height="15" fill="rgb(221,104,30)" fg:x="203" fg:w="1"/><text x="16.4770%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.2270%" y="565" width="0.0799%" height="15" fill="rgb(230,210,42)" fg:x="203" fg:w="1"/><text x="16.4770%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.2270%" y="549" width="0.0799%" height="15" fill="rgb(206,205,27)" fg:x="203" fg:w="1"/><text x="16.4770%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.2270%" y="533" width="0.0799%" height="15" fill="rgb(233,114,38)" fg:x="203" fg:w="1"/><text x="16.4770%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.2270%" y="517" width="0.0799%" height="15" fill="rgb(216,174,36)" fg:x="203" fg:w="1"/><text x="16.4770%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.2270%" y="501" width="0.0799%" height="15" fill="rgb(211,30,9)" fg:x="203" fg:w="1"/><text x="16.4770%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.2270%" y="485" width="0.0799%" height="15" fill="rgb(216,8,21)" fg:x="203" fg:w="1"/><text x="16.4770%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.2270%" y="469" width="0.0799%" height="15" fill="rgb(237,209,39)" fg:x="203" fg:w="1"/><text x="16.4770%" y="479.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="16.3070%" y="709" width="0.0799%" height="15" fill="rgb(235,111,47)" fg:x="204" fg:w="1"/><text x="16.5570%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3070%" y="693" width="0.0799%" height="15" fill="rgb(216,139,9)" fg:x="204" fg:w="1"/><text x="16.5570%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3070%" y="677" width="0.0799%" height="15" fill="rgb(248,185,4)" fg:x="204" fg:w="1"/><text x="16.5570%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="16.3070%" y="661" width="0.0799%" height="15" fill="rgb(239,185,25)" fg:x="204" fg:w="1"/><text x="16.5570%" y="671.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="16.3070%" y="725" width="0.1599%" height="15" fill="rgb(233,207,8)" fg:x="204" fg:w="2"/><text x="16.5570%" y="735.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="16.3869%" y="709" width="0.0799%" height="15" fill="rgb(249,220,24)" fg:x="205" fg:w="1"/><text x="16.6369%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="16.3869%" y="693" width="0.0799%" height="15" fill="rgb(221,50,14)" fg:x="205" fg:w="1"/><text x="16.6369%" y="703.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3869%" y="677" width="0.0799%" height="15" fill="rgb(227,79,42)" fg:x="205" fg:w="1"/><text x="16.6369%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3869%" y="661" width="0.0799%" height="15" fill="rgb(228,218,49)" fg:x="205" fg:w="1"/><text x="16.6369%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3869%" y="645" width="0.0799%" height="15" fill="rgb(249,18,15)" fg:x="205" fg:w="1"/><text x="16.6369%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3869%" y="629" width="0.0799%" height="15" fill="rgb(212,84,27)" fg:x="205" fg:w="1"/><text x="16.6369%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.3869%" y="613" width="0.0799%" height="15" fill="rgb(207,83,24)" fg:x="205" fg:w="1"/><text x="16.6369%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3869%" y="597" width="0.0799%" height="15" fill="rgb(219,61,7)" fg:x="205" fg:w="1"/><text x="16.6369%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3869%" y="581" width="0.0799%" height="15" fill="rgb(211,43,29)" fg:x="205" fg:w="1"/><text x="16.6369%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3869%" y="565" width="0.0799%" height="15" fill="rgb(243,15,23)" fg:x="205" fg:w="1"/><text x="16.6369%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3869%" y="549" width="0.0799%" height="15" fill="rgb(217,52,28)" fg:x="205" fg:w="1"/><text x="16.6369%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3869%" y="533" width="0.0799%" height="15" fill="rgb(210,35,6)" fg:x="205" fg:w="1"/><text x="16.6369%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3869%" y="517" width="0.0799%" height="15" fill="rgb(237,187,28)" fg:x="205" fg:w="1"/><text x="16.6369%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3869%" y="501" width="0.0799%" height="15" fill="rgb(231,136,24)" fg:x="205" fg:w="1"/><text x="16.6369%" y="511.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.4668%" y="709" width="0.0799%" height="15" fill="rgb(205,176,52)" fg:x="206" fg:w="1"/><text x="16.7168%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="16.4668%" y="693" width="0.0799%" height="15" fill="rgb(218,65,12)" fg:x="206" fg:w="1"/><text x="16.7168%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="16.4668%" y="677" width="0.0799%" height="15" fill="rgb(234,101,21)" fg:x="206" fg:w="1"/><text x="16.7168%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4668%" y="661" width="0.0799%" height="15" fill="rgb(206,13,20)" fg:x="206" fg:w="1"/><text x="16.7168%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4668%" y="645" width="0.0799%" height="15" fill="rgb(236,89,44)" fg:x="206" fg:w="1"/><text x="16.7168%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5468%" y="693" width="0.0799%" height="15" fill="rgb(225,52,17)" fg:x="207" fg:w="1"/><text x="16.7968%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6267%" y="661" width="0.0799%" height="15" fill="rgb(214,27,25)" fg:x="208" fg:w="1"/><text x="16.8767%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6267%" y="645" width="0.0799%" height="15" fill="rgb(240,141,35)" fg:x="208" fg:w="1"/><text x="16.8767%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6267%" y="629" width="0.0799%" height="15" fill="rgb(216,126,3)" fg:x="208" fg:w="1"/><text x="16.8767%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6267%" y="613" width="0.0799%" height="15" fill="rgb(249,196,23)" fg:x="208" fg:w="1"/><text x="16.8767%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6267%" y="597" width="0.0799%" height="15" fill="rgb(215,185,43)" fg:x="208" fg:w="1"/><text x="16.8767%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::set_name (6 samples, 0.48%)</title><rect x="16.3070%" y="741" width="0.4796%" height="15" fill="rgb(208,194,36)" fg:x="204" fg:w="6"/><text x="16.5570%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::modified (4 samples, 0.32%)</title><rect x="16.4668%" y="725" width="0.3197%" height="15" fill="rgb(245,182,12)" fg:x="206" fg:w="4"/><text x="16.7168%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="16.5468%" y="709" width="0.2398%" height="15" fill="rgb(244,222,52)" fg:x="207" fg:w="3"/><text x="16.7968%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="16.6267%" y="693" width="0.1599%" height="15" fill="rgb(236,222,51)" fg:x="208" fg:w="2"/><text x="16.8767%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="16.6267%" y="677" width="0.1599%" height="15" fill="rgb(254,71,22)" fg:x="208" fg:w="2"/><text x="16.8767%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.7066%" y="661" width="0.0799%" height="15" fill="rgb(250,104,15)" fg:x="209" fg:w="1"/><text x="16.9566%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.7066%" y="645" width="0.0799%" height="15" fill="rgb(229,223,46)" fg:x="209" fg:w="1"/><text x="16.9566%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.7066%" y="629" width="0.0799%" height="15" fill="rgb(209,129,18)" fg:x="209" fg:w="1"/><text x="16.9566%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.7066%" y="613" width="0.0799%" height="15" fill="rgb(224,160,1)" fg:x="209" fg:w="1"/><text x="16.9566%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.7066%" y="597" width="0.0799%" height="15" fill="rgb(237,112,21)" fg:x="209" fg:w="1"/><text x="16.9566%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.7066%" y="581" width="0.0799%" height="15" fill="rgb(215,198,53)" fg:x="209" fg:w="1"/><text x="16.9566%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.7066%" y="565" width="0.0799%" height="15" fill="rgb(218,227,35)" fg:x="209" fg:w="1"/><text x="16.9566%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.7066%" y="549" width="0.0799%" height="15" fill="rgb(232,121,22)" fg:x="209" fg:w="1"/><text x="16.9566%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.7066%" y="533" width="0.0799%" height="15" fill="rgb(235,52,54)" fg:x="209" fg:w="1"/><text x="16.9566%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.7066%" y="517" width="0.0799%" height="15" fill="rgb(219,21,44)" fg:x="209" fg:w="1"/><text x="16.9566%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.7066%" y="501" width="0.0799%" height="15" fill="rgb(221,51,43)" fg:x="209" fg:w="1"/><text x="16.9566%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="16.7866%" y="709" width="0.0799%" height="15" fill="rgb(225,77,42)" fg:x="210" fg:w="1"/><text x="17.0366%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.7866%" y="693" width="0.0799%" height="15" fill="rgb(214,117,53)" fg:x="210" fg:w="1"/><text x="17.0366%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8665%" y="709" width="0.0799%" height="15" fill="rgb(218,227,27)" fg:x="211" fg:w="1"/><text x="17.1165%" y="719.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="16.9464%" y="661" width="0.0799%" height="15" fill="rgb(223,214,36)" fg:x="212" fg:w="1"/><text x="17.1964%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.9464%" y="645" width="0.0799%" height="15" fill="rgb(235,21,7)" fg:x="212" fg:w="1"/><text x="17.1964%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.9464%" y="629" width="0.0799%" height="15" fill="rgb(244,216,4)" fg:x="212" fg:w="1"/><text x="17.1964%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0264%" y="613" width="0.0799%" height="15" fill="rgb(249,197,24)" fg:x="213" fg:w="1"/><text x="17.2764%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.0264%" y="629" width="0.1599%" height="15" fill="rgb(222,169,49)" fg:x="213" fg:w="2"/><text x="17.2764%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1063%" y="613" width="0.0799%" height="15" fill="rgb(207,137,33)" fg:x="214" fg:w="1"/><text x="17.3563%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1063%" y="597" width="0.0799%" height="15" fill="rgb(219,180,40)" fg:x="214" fg:w="1"/><text x="17.3563%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.1063%" y="581" width="0.0799%" height="15" fill="rgb(250,163,42)" fg:x="214" fg:w="1"/><text x="17.3563%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.1063%" y="565" width="0.0799%" height="15" fill="rgb(239,163,0)" fg:x="214" fg:w="1"/><text x="17.3563%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.1063%" y="549" width="0.0799%" height="15" fill="rgb(252,38,28)" fg:x="214" fg:w="1"/><text x="17.3563%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.1063%" y="533" width="0.0799%" height="15" fill="rgb(254,203,26)" fg:x="214" fg:w="1"/><text x="17.3563%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.1063%" y="517" width="0.0799%" height="15" fill="rgb(209,129,32)" fg:x="214" fg:w="1"/><text x="17.3563%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.1063%" y="501" width="0.0799%" height="15" fill="rgb(207,177,52)" fg:x="214" fg:w="1"/><text x="17.3563%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.1063%" y="485" width="0.0799%" height="15" fill="rgb(230,209,36)" fg:x="214" fg:w="1"/><text x="17.3563%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.1063%" y="469" width="0.0799%" height="15" fill="rgb(238,131,0)" fg:x="214" fg:w="1"/><text x="17.3563%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.1063%" y="453" width="0.0799%" height="15" fill="rgb(218,61,31)" fg:x="214" fg:w="1"/><text x="17.3563%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1063%" y="437" width="0.0799%" height="15" fill="rgb(232,6,53)" fg:x="214" fg:w="1"/><text x="17.3563%" y="447.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="16.9464%" y="677" width="0.3197%" height="15" fill="rgb(254,100,32)" fg:x="212" fg:w="4"/><text x="17.1964%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="17.0264%" y="661" width="0.2398%" height="15" fill="rgb(229,194,49)" fg:x="213" fg:w="3"/><text x="17.2764%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="17.0264%" y="645" width="0.2398%" height="15" fill="rgb(206,208,39)" fg:x="213" fg:w="3"/><text x="17.2764%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.1863%" y="629" width="0.0799%" height="15" fill="rgb(246,226,14)" fg:x="215" fg:w="1"/><text x="17.4363%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.1863%" y="613" width="0.0799%" height="15" fill="rgb(226,48,32)" fg:x="215" fg:w="1"/><text x="17.4363%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="16.9464%" y="693" width="0.3997%" height="15" fill="rgb(252,43,54)" fg:x="212" fg:w="5"/><text x="17.1964%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="17.2662%" y="677" width="0.0799%" height="15" fill="rgb(207,124,0)" fg:x="216" fg:w="1"/><text x="17.5162%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="17.2662%" y="661" width="0.0799%" height="15" fill="rgb(248,188,30)" fg:x="216" fg:w="1"/><text x="17.5162%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.3461%" y="693" width="0.0799%" height="15" fill="rgb(232,14,43)" fg:x="217" fg:w="1"/><text x="17.5961%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.3461%" y="677" width="0.0799%" height="15" fill="rgb(218,52,29)" fg:x="217" fg:w="1"/><text x="17.5961%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.3461%" y="661" width="0.0799%" height="15" fill="rgb(218,176,50)" fg:x="217" fg:w="1"/><text x="17.5961%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.3461%" y="645" width="0.0799%" height="15" fill="rgb(213,112,0)" fg:x="217" fg:w="1"/><text x="17.5961%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.3461%" y="629" width="0.0799%" height="15" fill="rgb(244,216,8)" fg:x="217" fg:w="1"/><text x="17.5961%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.3461%" y="613" width="0.0799%" height="15" fill="rgb(224,148,53)" fg:x="217" fg:w="1"/><text x="17.5961%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.3461%" y="597" width="0.0799%" height="15" fill="rgb(241,133,40)" fg:x="217" fg:w="1"/><text x="17.5961%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.3461%" y="581" width="0.0799%" height="15" fill="rgb(232,17,44)" fg:x="217" fg:w="1"/><text x="17.5961%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.3461%" y="565" width="0.0799%" height="15" fill="rgb(213,32,25)" fg:x="217" fg:w="1"/><text x="17.5961%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.3461%" y="549" width="0.0799%" height="15" fill="rgb(249,115,27)" fg:x="217" fg:w="1"/><text x="17.5961%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.3461%" y="533" width="0.0799%" height="15" fill="rgb(241,50,1)" fg:x="217" fg:w="1"/><text x="17.5961%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.3461%" y="517" width="0.0799%" height="15" fill="rgb(244,175,40)" fg:x="217" fg:w="1"/><text x="17.5961%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3461%" y="501" width="0.0799%" height="15" fill="rgb(230,94,34)" fg:x="217" fg:w="1"/><text x="17.5961%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="16.7866%" y="725" width="0.9592%" height="15" fill="rgb(223,185,29)" fg:x="210" fg:w="12"/><text x="17.0366%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="16.9464%" y="709" width="0.7994%" height="15" fill="rgb(225,193,15)" fg:x="212" fg:w="10"/><text x="17.1964%" y="719.50"></text></g><g><title>engine::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="17.4261%" y="693" width="0.3197%" height="15" fill="rgb(252,121,38)" fg:x="218" fg:w="4"/><text x="17.6761%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="17.4261%" y="677" width="0.3197%" height="15" fill="rgb(232,44,12)" fg:x="218" fg:w="4"/><text x="17.6761%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="17.4261%" y="661" width="0.3197%" height="15" fill="rgb(226,45,54)" fg:x="218" fg:w="4"/><text x="17.6761%" y="671.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="17.4261%" y="645" width="0.3197%" height="15" fill="rgb(209,67,17)" fg:x="218" fg:w="4"/><text x="17.6761%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.7458%" y="629" width="0.0799%" height="15" fill="rgb(219,108,52)" fg:x="222" fg:w="1"/><text x="17.9958%" y="639.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="17.7458%" y="677" width="0.1599%" height="15" fill="rgb(216,118,19)" fg:x="222" fg:w="2"/><text x="17.9958%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="17.7458%" y="661" width="0.1599%" height="15" fill="rgb(228,120,40)" fg:x="222" fg:w="2"/><text x="17.9958%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="17.7458%" y="645" width="0.1599%" height="15" fill="rgb(221,218,34)" fg:x="222" fg:w="2"/><text x="17.9958%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.8257%" y="629" width="0.0799%" height="15" fill="rgb(235,89,14)" fg:x="223" fg:w="1"/><text x="18.0757%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.8257%" y="613" width="0.0799%" height="15" fill="rgb(248,89,7)" fg:x="223" fg:w="1"/><text x="18.0757%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.8257%" y="597" width="0.0799%" height="15" fill="rgb(212,114,34)" fg:x="223" fg:w="1"/><text x="18.0757%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.9856%" y="629" width="0.0799%" height="15" fill="rgb(246,88,32)" fg:x="225" fg:w="1"/><text x="18.2356%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.9856%" y="613" width="0.0799%" height="15" fill="rgb(237,135,0)" fg:x="225" fg:w="1"/><text x="18.2356%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.9856%" y="597" width="0.0799%" height="15" fill="rgb(220,201,54)" fg:x="225" fg:w="1"/><text x="18.2356%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.9856%" y="581" width="0.0799%" height="15" fill="rgb(210,142,36)" fg:x="225" fg:w="1"/><text x="18.2356%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9856%" y="565" width="0.0799%" height="15" fill="rgb(247,189,26)" fg:x="225" fg:w="1"/><text x="18.2356%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9856%" y="549" width="0.0799%" height="15" fill="rgb(223,89,24)" fg:x="225" fg:w="1"/><text x="18.2356%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.9856%" y="533" width="0.0799%" height="15" fill="rgb(205,90,19)" fg:x="225" fg:w="1"/><text x="18.2356%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.9856%" y="517" width="0.0799%" height="15" fill="rgb(234,57,40)" fg:x="225" fg:w="1"/><text x="18.2356%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.9856%" y="501" width="0.0799%" height="15" fill="rgb(213,109,10)" fg:x="225" fg:w="1"/><text x="18.2356%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.9856%" y="485" width="0.0799%" height="15" fill="rgb(214,189,23)" fg:x="225" fg:w="1"/><text x="18.2356%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.9856%" y="469" width="0.0799%" height="15" fill="rgb(234,200,10)" fg:x="225" fg:w="1"/><text x="18.2356%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.9856%" y="453" width="0.0799%" height="15" fill="rgb(221,148,16)" fg:x="225" fg:w="1"/><text x="18.2356%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.9856%" y="437" width="0.0799%" height="15" fill="rgb(230,115,10)" fg:x="225" fg:w="1"/><text x="18.2356%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.9856%" y="421" width="0.0799%" height="15" fill="rgb(220,106,42)" fg:x="225" fg:w="1"/><text x="18.2356%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.9856%" y="405" width="0.0799%" height="15" fill="rgb(225,105,39)" fg:x="225" fg:w="1"/><text x="18.2356%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="17.9856%" y="389" width="0.0799%" height="15" fill="rgb(211,161,38)" fg:x="225" fg:w="1"/><text x="18.2356%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="17.9856%" y="373" width="0.0799%" height="15" fill="rgb(213,23,19)" fg:x="225" fg:w="1"/><text x="18.2356%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="18.0655%" y="533" width="0.0799%" height="15" fill="rgb(240,2,33)" fg:x="226" fg:w="1"/><text x="18.3155%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.0655%" y="517" width="0.0799%" height="15" fill="rgb(221,29,45)" fg:x="226" fg:w="1"/><text x="18.3155%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="17.7458%" y="709" width="0.5596%" height="15" fill="rgb(242,10,19)" fg:x="222" fg:w="7"/><text x="17.9958%" y="719.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="17.7458%" y="693" width="0.5596%" height="15" fill="rgb(250,84,37)" fg:x="222" fg:w="7"/><text x="17.9958%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="17.9057%" y="677" width="0.3997%" height="15" fill="rgb(214,136,7)" fg:x="224" fg:w="5"/><text x="18.1557%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="17.9856%" y="661" width="0.3197%" height="15" fill="rgb(231,189,12)" fg:x="225" fg:w="4"/><text x="18.2356%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="17.9856%" y="645" width="0.3197%" height="15" fill="rgb(244,40,16)" fg:x="225" fg:w="4"/><text x="18.2356%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="18.0655%" y="629" width="0.2398%" height="15" fill="rgb(217,29,15)" fg:x="226" fg:w="3"/><text x="18.3155%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.0655%" y="613" width="0.2398%" height="15" fill="rgb(235,172,33)" fg:x="226" fg:w="3"/><text x="18.3155%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="18.0655%" y="597" width="0.2398%" height="15" fill="rgb(206,148,28)" fg:x="226" fg:w="3"/><text x="18.3155%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.0655%" y="581" width="0.2398%" height="15" fill="rgb(251,167,37)" fg:x="226" fg:w="3"/><text x="18.3155%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="18.0655%" y="565" width="0.2398%" height="15" fill="rgb(229,94,52)" fg:x="226" fg:w="3"/><text x="18.3155%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.0655%" y="549" width="0.2398%" height="15" fill="rgb(216,132,9)" fg:x="226" fg:w="3"/><text x="18.3155%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.1455%" y="533" width="0.1599%" height="15" fill="rgb(208,110,29)" fg:x="227" fg:w="2"/><text x="18.3955%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.1455%" y="517" width="0.1599%" height="15" fill="rgb(241,23,8)" fg:x="227" fg:w="2"/><text x="18.3955%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2254%" y="501" width="0.0799%" height="15" fill="rgb(208,26,35)" fg:x="228" fg:w="1"/><text x="18.4754%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2254%" y="485" width="0.0799%" height="15" fill="rgb(242,165,34)" fg:x="228" fg:w="1"/><text x="18.4754%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="18.3054%" y="709" width="0.0799%" height="15" fill="rgb(222,222,33)" fg:x="229" fg:w="1"/><text x="18.5554%" y="719.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="18.3054%" y="693" width="0.0799%" height="15" fill="rgb(227,16,52)" fg:x="229" fg:w="1"/><text x="18.5554%" y="703.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="18.3853%" y="709" width="0.2398%" height="15" fill="rgb(213,93,12)" fg:x="230" fg:w="3"/><text x="18.6353%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="18.3853%" y="693" width="0.2398%" height="15" fill="rgb(238,41,5)" fg:x="230" fg:w="3"/><text x="18.6353%" y="703.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="18.3853%" y="677" width="0.2398%" height="15" fill="rgb(211,60,15)" fg:x="230" fg:w="3"/><text x="18.6353%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.4652%" y="661" width="0.1599%" height="15" fill="rgb(209,11,34)" fg:x="231" fg:w="2"/><text x="18.7152%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="18.4652%" y="645" width="0.1599%" height="15" fill="rgb(254,155,53)" fg:x="231" fg:w="2"/><text x="18.7152%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.5452%" y="629" width="0.0799%" height="15" fill="rgb(236,174,8)" fg:x="232" fg:w="1"/><text x="18.7952%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.5452%" y="613" width="0.0799%" height="15" fill="rgb(229,31,27)" fg:x="232" fg:w="1"/><text x="18.7952%" y="623.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="18.6251%" y="645" width="0.0799%" height="15" fill="rgb(242,226,26)" fg:x="233" fg:w="1"/><text x="18.8751%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (25 samples, 2.00%)</title><rect x="16.7866%" y="741" width="1.9984%" height="15" fill="rgb(234,32,40)" fg:x="210" fg:w="25"/><text x="17.0366%" y="751.50">p..</text></g><g><title>plugins_core::tools::set_container (13 samples, 1.04%)</title><rect x="17.7458%" y="725" width="1.0392%" height="15" fill="rgb(249,226,47)" fg:x="222" fg:w="13"/><text x="17.9958%" y="735.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="18.6251%" y="709" width="0.1599%" height="15" fill="rgb(212,6,26)" fg:x="233" fg:w="2"/><text x="18.8751%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="18.6251%" y="693" width="0.1599%" height="15" fill="rgb(249,202,29)" fg:x="233" fg:w="2"/><text x="18.8751%" y="703.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="18.6251%" y="677" width="0.1599%" height="15" fill="rgb(226,106,4)" fg:x="233" fg:w="2"/><text x="18.8751%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.6251%" y="661" width="0.1599%" height="15" fill="rgb(251,2,27)" fg:x="233" fg:w="2"/><text x="18.8751%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="18.7050%" y="645" width="0.0799%" height="15" fill="rgb(236,208,0)" fg:x="234" fg:w="1"/><text x="18.9550%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="18.7050%" y="629" width="0.0799%" height="15" fill="rgb(211,66,17)" fg:x="234" fg:w="1"/><text x="18.9550%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.7050%" y="613" width="0.0799%" height="15" fill="rgb(216,129,9)" fg:x="234" fg:w="1"/><text x="18.9550%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.7050%" y="597" width="0.0799%" height="15" fill="rgb(215,130,23)" fg:x="234" fg:w="1"/><text x="18.9550%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7050%" y="581" width="0.0799%" height="15" fill="rgb(253,157,11)" fg:x="234" fg:w="1"/><text x="18.9550%" y="591.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="18.7850%" y="693" width="0.0799%" height="15" fill="rgb(224,25,14)" fg:x="235" fg:w="1"/><text x="19.0350%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.7850%" y="677" width="0.0799%" height="15" fill="rgb(238,16,7)" fg:x="235" fg:w="1"/><text x="19.0350%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="18.7850%" y="661" width="0.0799%" height="15" fill="rgb(228,74,11)" fg:x="235" fg:w="1"/><text x="19.0350%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="18.7850%" y="645" width="0.0799%" height="15" fill="rgb(239,221,27)" fg:x="235" fg:w="1"/><text x="19.0350%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7850%" y="629" width="0.0799%" height="15" fill="rgb(229,166,18)" fg:x="235" fg:w="1"/><text x="19.0350%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7850%" y="613" width="0.0799%" height="15" fill="rgb(254,94,46)" fg:x="235" fg:w="1"/><text x="19.0350%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7850%" y="597" width="0.0799%" height="15" fill="rgb(241,79,19)" fg:x="235" fg:w="1"/><text x="19.0350%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7850%" y="581" width="0.0799%" height="15" fill="rgb(228,99,51)" fg:x="235" fg:w="1"/><text x="19.0350%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.7850%" y="565" width="0.0799%" height="15" fill="rgb(211,15,6)" fg:x="235" fg:w="1"/><text x="19.0350%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7850%" y="549" width="0.0799%" height="15" fill="rgb(245,107,54)" fg:x="235" fg:w="1"/><text x="19.0350%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7850%" y="533" width="0.0799%" height="15" fill="rgb(243,3,2)" fg:x="235" fg:w="1"/><text x="19.0350%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7850%" y="517" width="0.0799%" height="15" fill="rgb(206,122,10)" fg:x="235" fg:w="1"/><text x="19.0350%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7850%" y="501" width="0.0799%" height="15" fill="rgb(224,88,4)" fg:x="235" fg:w="1"/><text x="19.0350%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7850%" y="485" width="0.0799%" height="15" fill="rgb(230,1,41)" fg:x="235" fg:w="1"/><text x="19.0350%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="18.7850%" y="469" width="0.0799%" height="15" fill="rgb(230,1,31)" fg:x="235" fg:w="1"/><text x="19.0350%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="18.7850%" y="453" width="0.0799%" height="15" fill="rgb(232,67,19)" fg:x="235" fg:w="1"/><text x="19.0350%" y="463.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="18.7850%" y="437" width="0.0799%" height="15" fill="rgb(222,206,20)" fg:x="235" fg:w="1"/><text x="19.0350%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="18.7850%" y="741" width="0.1599%" height="15" fill="rgb(217,225,19)" fg:x="235" fg:w="2"/><text x="19.0350%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="18.7850%" y="725" width="0.1599%" height="15" fill="rgb(234,13,33)" fg:x="235" fg:w="2"/><text x="19.0350%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="18.7850%" y="709" width="0.1599%" height="15" fill="rgb(254,5,1)" fg:x="235" fg:w="2"/><text x="19.0350%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8649%" y="693" width="0.0799%" height="15" fill="rgb(211,121,41)" fg:x="236" fg:w="1"/><text x="19.1149%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8649%" y="677" width="0.0799%" height="15" fill="rgb(213,199,35)" fg:x="236" fg:w="1"/><text x="19.1149%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="18.9448%" y="709" width="0.0799%" height="15" fill="rgb(240,118,22)" fg:x="237" fg:w="1"/><text x="19.1948%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="18.9448%" y="693" width="0.0799%" height="15" fill="rgb(238,184,25)" fg:x="237" fg:w="1"/><text x="19.1948%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="18.9448%" y="677" width="0.0799%" height="15" fill="rgb(210,165,6)" fg:x="237" fg:w="1"/><text x="19.1948%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9448%" y="661" width="0.0799%" height="15" fill="rgb(235,149,5)" fg:x="237" fg:w="1"/><text x="19.1948%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9448%" y="645" width="0.0799%" height="15" fill="rgb(221,63,5)" fg:x="237" fg:w="1"/><text x="19.1948%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9448%" y="629" width="0.0799%" height="15" fill="rgb(250,44,41)" fg:x="237" fg:w="1"/><text x="19.1948%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9448%" y="613" width="0.0799%" height="15" fill="rgb(235,112,47)" fg:x="237" fg:w="1"/><text x="19.1948%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="18.9448%" y="597" width="0.0799%" height="15" fill="rgb(252,176,34)" fg:x="237" fg:w="1"/><text x="19.1948%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9448%" y="581" width="0.0799%" height="15" fill="rgb(234,50,19)" fg:x="237" fg:w="1"/><text x="19.1948%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.1047%" y="645" width="0.0799%" height="15" fill="rgb(241,195,31)" fg:x="239" fg:w="1"/><text x="19.3547%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.1047%" y="629" width="0.0799%" height="15" fill="rgb(212,93,11)" fg:x="239" fg:w="1"/><text x="19.3547%" y="639.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="19.0248%" y="693" width="0.2398%" height="15" fill="rgb(254,98,51)" fg:x="238" fg:w="3"/><text x="19.2748%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="19.0248%" y="677" width="0.2398%" height="15" fill="rgb(246,18,45)" fg:x="238" fg:w="3"/><text x="19.2748%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="19.0248%" y="661" width="0.2398%" height="15" fill="rgb(215,148,23)" fg:x="238" fg:w="3"/><text x="19.2748%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1847%" y="645" width="0.0799%" height="15" fill="rgb(227,22,7)" fg:x="240" fg:w="1"/><text x="19.4347%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1847%" y="629" width="0.0799%" height="15" fill="rgb(207,210,37)" fg:x="240" fg:w="1"/><text x="19.4347%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1847%" y="613" width="0.0799%" height="15" fill="rgb(247,147,42)" fg:x="240" fg:w="1"/><text x="19.4347%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1847%" y="597" width="0.0799%" height="15" fill="rgb(226,213,14)" fg:x="240" fg:w="1"/><text x="19.4347%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.1847%" y="581" width="0.0799%" height="15" fill="rgb(223,18,10)" fg:x="240" fg:w="1"/><text x="19.4347%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="18.9448%" y="741" width="0.3997%" height="15" fill="rgb(253,34,22)" fg:x="237" fg:w="5"/><text x="19.1948%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::set_name (5 samples, 0.40%)</title><rect x="18.9448%" y="725" width="0.3997%" height="15" fill="rgb(222,90,31)" fg:x="237" fg:w="5"/><text x="19.1948%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::modified (4 samples, 0.32%)</title><rect x="19.0248%" y="709" width="0.3197%" height="15" fill="rgb(220,182,30)" fg:x="238" fg:w="4"/><text x="19.2748%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="19.2646%" y="693" width="0.0799%" height="15" fill="rgb(229,170,12)" fg:x="241" fg:w="1"/><text x="19.5146%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="19.2646%" y="677" width="0.0799%" height="15" fill="rgb(210,101,21)" fg:x="241" fg:w="1"/><text x="19.5146%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="19.2646%" y="661" width="0.0799%" height="15" fill="rgb(237,177,31)" fg:x="241" fg:w="1"/><text x="19.5146%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.2646%" y="645" width="0.0799%" height="15" fill="rgb(215,91,34)" fg:x="241" fg:w="1"/><text x="19.5146%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2646%" y="629" width="0.0799%" height="15" fill="rgb(229,206,16)" fg:x="241" fg:w="1"/><text x="19.5146%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.2646%" y="613" width="0.0799%" height="15" fill="rgb(235,207,10)" fg:x="241" fg:w="1"/><text x="19.5146%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2646%" y="597" width="0.0799%" height="15" fill="rgb(247,18,10)" fg:x="241" fg:w="1"/><text x="19.5146%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.2646%" y="581" width="0.0799%" height="15" fill="rgb(232,4,6)" fg:x="241" fg:w="1"/><text x="19.5146%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2646%" y="565" width="0.0799%" height="15" fill="rgb(247,93,45)" fg:x="241" fg:w="1"/><text x="19.5146%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.2646%" y="549" width="0.0799%" height="15" fill="rgb(240,181,18)" fg:x="241" fg:w="1"/><text x="19.5146%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="19.3445%" y="709" width="0.0799%" height="15" fill="rgb(208,224,0)" fg:x="242" fg:w="1"/><text x="19.5945%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3445%" y="693" width="0.0799%" height="15" fill="rgb(224,207,54)" fg:x="242" fg:w="1"/><text x="19.5945%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="19.3445%" y="725" width="0.1599%" height="15" fill="rgb(217,152,29)" fg:x="242" fg:w="2"/><text x="19.5945%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="19.4245%" y="709" width="0.0799%" height="15" fill="rgb(243,78,27)" fg:x="243" fg:w="1"/><text x="19.6745%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="19.4245%" y="693" width="0.0799%" height="15" fill="rgb(228,111,9)" fg:x="243" fg:w="1"/><text x="19.6745%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="19.4245%" y="677" width="0.0799%" height="15" fill="rgb(230,213,21)" fg:x="243" fg:w="1"/><text x="19.6745%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="19.4245%" y="661" width="0.0799%" height="15" fill="rgb(248,50,36)" fg:x="243" fg:w="1"/><text x="19.6745%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="19.4245%" y="645" width="0.0799%" height="15" fill="rgb(226,19,31)" fg:x="243" fg:w="1"/><text x="19.6745%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.4245%" y="629" width="0.0799%" height="15" fill="rgb(205,132,21)" fg:x="243" fg:w="1"/><text x="19.6745%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4245%" y="613" width="0.0799%" height="15" fill="rgb(207,42,19)" fg:x="243" fg:w="1"/><text x="19.6745%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.4245%" y="597" width="0.0799%" height="15" fill="rgb(229,69,35)" fg:x="243" fg:w="1"/><text x="19.6745%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4245%" y="581" width="0.0799%" height="15" fill="rgb(226,96,11)" fg:x="243" fg:w="1"/><text x="19.6745%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.4245%" y="565" width="0.0799%" height="15" fill="rgb(236,133,54)" fg:x="243" fg:w="1"/><text x="19.6745%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4245%" y="549" width="0.0799%" height="15" fill="rgb(247,166,21)" fg:x="243" fg:w="1"/><text x="19.6745%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.4245%" y="533" width="0.0799%" height="15" fill="rgb(220,132,12)" fg:x="243" fg:w="1"/><text x="19.6745%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4245%" y="517" width="0.0799%" height="15" fill="rgb(233,27,30)" fg:x="243" fg:w="1"/><text x="19.6745%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.4245%" y="501" width="0.0799%" height="15" fill="rgb(246,161,27)" fg:x="243" fg:w="1"/><text x="19.6745%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="19.5044%" y="709" width="0.0799%" height="15" fill="rgb(240,56,3)" fg:x="244" fg:w="1"/><text x="19.7544%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="19.5044%" y="693" width="0.0799%" height="15" fill="rgb(242,190,9)" fg:x="244" fg:w="1"/><text x="19.7544%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="19.5044%" y="677" width="0.0799%" height="15" fill="rgb(234,3,52)" fg:x="244" fg:w="1"/><text x="19.7544%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.5044%" y="661" width="0.0799%" height="15" fill="rgb(220,221,19)" fg:x="244" fg:w="1"/><text x="19.7544%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5843%" y="613" width="0.0799%" height="15" fill="rgb(247,178,30)" fg:x="245" fg:w="1"/><text x="19.8343%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5843%" y="597" width="0.0799%" height="15" fill="rgb(234,212,27)" fg:x="245" fg:w="1"/><text x="19.8343%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5843%" y="581" width="0.0799%" height="15" fill="rgb(226,199,38)" fg:x="245" fg:w="1"/><text x="19.8343%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5843%" y="565" width="0.0799%" height="15" fill="rgb(248,114,22)" fg:x="245" fg:w="1"/><text x="19.8343%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5843%" y="549" width="0.0799%" height="15" fill="rgb(221,180,4)" fg:x="245" fg:w="1"/><text x="19.8343%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5843%" y="533" width="0.0799%" height="15" fill="rgb(220,229,24)" fg:x="245" fg:w="1"/><text x="19.8343%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.5843%" y="517" width="0.0799%" height="15" fill="rgb(226,184,27)" fg:x="245" fg:w="1"/><text x="19.8343%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.5843%" y="501" width="0.0799%" height="15" fill="rgb(232,99,15)" fg:x="245" fg:w="1"/><text x="19.8343%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.5843%" y="485" width="0.0799%" height="15" fill="rgb(250,167,16)" fg:x="245" fg:w="1"/><text x="19.8343%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.5843%" y="469" width="0.0799%" height="15" fill="rgb(243,113,6)" fg:x="245" fg:w="1"/><text x="19.8343%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.5843%" y="453" width="0.0799%" height="15" fill="rgb(244,147,52)" fg:x="245" fg:w="1"/><text x="19.8343%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.5843%" y="437" width="0.0799%" height="15" fill="rgb(235,59,50)" fg:x="245" fg:w="1"/><text x="19.8343%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.5843%" y="421" width="0.0799%" height="15" fill="rgb(250,188,6)" fg:x="245" fg:w="1"/><text x="19.8343%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.5843%" y="405" width="0.0799%" height="15" fill="rgb(236,173,11)" fg:x="245" fg:w="1"/><text x="19.8343%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.5843%" y="389" width="0.0799%" height="15" fill="rgb(233,64,3)" fg:x="245" fg:w="1"/><text x="19.8343%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5843%" y="373" width="0.0799%" height="15" fill="rgb(207,92,7)" fg:x="245" fg:w="1"/><text x="19.8343%" y="383.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="19.5843%" y="661" width="0.1599%" height="15" fill="rgb(221,30,19)" fg:x="245" fg:w="2"/><text x="19.8343%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="19.5843%" y="645" width="0.1599%" height="15" fill="rgb(245,22,49)" fg:x="245" fg:w="2"/><text x="19.8343%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="19.5843%" y="629" width="0.1599%" height="15" fill="rgb(218,39,20)" fg:x="245" fg:w="2"/><text x="19.8343%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.6643%" y="613" width="0.0799%" height="15" fill="rgb(222,144,21)" fg:x="246" fg:w="1"/><text x="19.9143%" y="623.50"></text></g><g><title>plugins_core::build::Build::occupying (6 samples, 0.48%)</title><rect x="19.3445%" y="741" width="0.4796%" height="15" fill="rgb(222,78,51)" fg:x="242" fg:w="6"/><text x="19.5945%" y="751.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.32%)</title><rect x="19.5044%" y="725" width="0.3197%" height="15" fill="rgb(248,213,53)" fg:x="244" fg:w="4"/><text x="19.7544%" y="735.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="19.5843%" y="709" width="0.2398%" height="15" fill="rgb(245,28,34)" fg:x="245" fg:w="3"/><text x="19.8343%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="19.5843%" y="693" width="0.2398%" height="15" fill="rgb(229,186,26)" fg:x="245" fg:w="3"/><text x="19.8343%" y="703.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="19.5843%" y="677" width="0.2398%" height="15" fill="rgb(224,0,41)" fg:x="245" fg:w="3"/><text x="19.8343%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="19.7442%" y="661" width="0.0799%" height="15" fill="rgb(223,136,51)" fg:x="247" fg:w="1"/><text x="19.9942%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="19.7442%" y="645" width="0.0799%" height="15" fill="rgb(234,50,9)" fg:x="247" fg:w="1"/><text x="19.9942%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="19.7442%" y="629" width="0.0799%" height="15" fill="rgb(242,164,20)" fg:x="247" fg:w="1"/><text x="19.9942%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7442%" y="613" width="0.0799%" height="15" fill="rgb(230,169,22)" fg:x="247" fg:w="1"/><text x="19.9942%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7442%" y="597" width="0.0799%" height="15" fill="rgb(228,82,26)" fg:x="247" fg:w="1"/><text x="19.9942%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7442%" y="581" width="0.0799%" height="15" fill="rgb(244,220,31)" fg:x="247" fg:w="1"/><text x="19.9942%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7442%" y="565" width="0.0799%" height="15" fill="rgb(214,35,25)" fg:x="247" fg:w="1"/><text x="19.9942%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.7442%" y="549" width="0.0799%" height="15" fill="rgb(245,162,54)" fg:x="247" fg:w="1"/><text x="19.9942%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7442%" y="533" width="0.0799%" height="15" fill="rgb(210,43,24)" fg:x="247" fg:w="1"/><text x="19.9942%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7442%" y="517" width="0.0799%" height="15" fill="rgb(226,145,51)" fg:x="247" fg:w="1"/><text x="19.9942%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.7442%" y="501" width="0.0799%" height="15" fill="rgb(237,52,53)" fg:x="247" fg:w="1"/><text x="19.9942%" y="511.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="19.8241%" y="677" width="0.0799%" height="15" fill="rgb(216,226,7)" fg:x="248" fg:w="1"/><text x="20.0741%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="19.8241%" y="661" width="0.0799%" height="15" fill="rgb(206,223,18)" fg:x="248" fg:w="1"/><text x="20.0741%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="19.8241%" y="645" width="0.0799%" height="15" fill="rgb(221,1,10)" fg:x="248" fg:w="1"/><text x="20.0741%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8241%" y="629" width="0.0799%" height="15" fill="rgb(221,151,42)" fg:x="248" fg:w="1"/><text x="20.0741%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8241%" y="613" width="0.0799%" height="15" fill="rgb(205,183,46)" fg:x="248" fg:w="1"/><text x="20.0741%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8241%" y="597" width="0.0799%" height="15" fill="rgb(239,229,1)" fg:x="248" fg:w="1"/><text x="20.0741%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8241%" y="581" width="0.0799%" height="15" fill="rgb(236,192,23)" fg:x="248" fg:w="1"/><text x="20.0741%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8241%" y="565" width="0.0799%" height="15" fill="rgb(215,146,3)" fg:x="248" fg:w="1"/><text x="20.0741%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8241%" y="549" width="0.0799%" height="15" fill="rgb(235,52,27)" fg:x="248" fg:w="1"/><text x="20.0741%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8241%" y="533" width="0.0799%" height="15" fill="rgb(236,45,20)" fg:x="248" fg:w="1"/><text x="20.0741%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.8241%" y="517" width="0.0799%" height="15" fill="rgb(235,86,41)" fg:x="248" fg:w="1"/><text x="20.0741%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.8241%" y="501" width="0.0799%" height="15" fill="rgb(235,27,27)" fg:x="248" fg:w="1"/><text x="20.0741%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.8241%" y="485" width="0.0799%" height="15" fill="rgb(232,4,34)" fg:x="248" fg:w="1"/><text x="20.0741%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.8241%" y="469" width="0.0799%" height="15" fill="rgb(215,22,10)" fg:x="248" fg:w="1"/><text x="20.0741%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.8241%" y="453" width="0.0799%" height="15" fill="rgb(230,228,27)" fg:x="248" fg:w="1"/><text x="20.0741%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="19.8241%" y="725" width="0.1599%" height="15" fill="rgb(216,26,51)" fg:x="248" fg:w="2"/><text x="20.0741%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="19.8241%" y="709" width="0.1599%" height="15" fill="rgb(225,180,50)" fg:x="248" fg:w="2"/><text x="20.0741%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="19.8241%" y="693" width="0.1599%" height="15" fill="rgb(236,211,2)" fg:x="248" fg:w="2"/><text x="20.0741%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="19.9041%" y="677" width="0.0799%" height="15" fill="rgb(250,51,20)" fg:x="249" fg:w="1"/><text x="20.1541%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="19.9041%" y="661" width="0.0799%" height="15" fill="rgb(232,70,37)" fg:x="249" fg:w="1"/><text x="20.1541%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="19.9041%" y="645" width="0.0799%" height="15" fill="rgb(226,183,39)" fg:x="249" fg:w="1"/><text x="20.1541%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9041%" y="629" width="0.0799%" height="15" fill="rgb(232,228,21)" fg:x="249" fg:w="1"/><text x="20.1541%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9041%" y="613" width="0.0799%" height="15" fill="rgb(251,118,32)" fg:x="249" fg:w="1"/><text x="20.1541%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9041%" y="597" width="0.0799%" height="15" fill="rgb(235,172,38)" fg:x="249" fg:w="1"/><text x="20.1541%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9041%" y="581" width="0.0799%" height="15" fill="rgb(235,63,18)" fg:x="249" fg:w="1"/><text x="20.1541%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.9041%" y="565" width="0.0799%" height="15" fill="rgb(225,4,7)" fg:x="249" fg:w="1"/><text x="20.1541%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9041%" y="549" width="0.0799%" height="15" fill="rgb(231,61,1)" fg:x="249" fg:w="1"/><text x="20.1541%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9041%" y="533" width="0.0799%" height="15" fill="rgb(241,155,22)" fg:x="249" fg:w="1"/><text x="20.1541%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9041%" y="517" width="0.0799%" height="15" fill="rgb(209,100,26)" fg:x="249" fg:w="1"/><text x="20.1541%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9041%" y="501" width="0.0799%" height="15" fill="rgb(248,181,15)" fg:x="249" fg:w="1"/><text x="20.1541%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9041%" y="485" width="0.0799%" height="15" fill="rgb(214,94,31)" fg:x="249" fg:w="1"/><text x="20.1541%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9041%" y="469" width="0.0799%" height="15" fill="rgb(207,16,42)" fg:x="249" fg:w="1"/><text x="20.1541%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9041%" y="453" width="0.0799%" height="15" fill="rgb(208,127,13)" fg:x="249" fg:w="1"/><text x="20.1541%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (127 samples, 10.15%)</title><rect x="9.9121%" y="757" width="10.1519%" height="15" fill="rgb(220,211,18)" fg:x="124" fg:w="127"/><text x="10.1621%" y="767.50">plugins_core::b..</text></g><g><title>plugins_core::build::Build::with_username (3 samples, 0.24%)</title><rect x="19.8241%" y="741" width="0.2398%" height="15" fill="rgb(221,55,38)" fg:x="248" fg:w="3"/><text x="20.0741%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="19.9840%" y="725" width="0.0799%" height="15" fill="rgb(252,219,45)" fg:x="250" fg:w="1"/><text x="20.2340%" y="735.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="19.9840%" y="709" width="0.0799%" height="15" fill="rgb(248,53,35)" fg:x="250" fg:w="1"/><text x="20.2340%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9840%" y="693" width="0.0799%" height="15" fill="rgb(210,87,2)" fg:x="250" fg:w="1"/><text x="20.2340%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="19.9840%" y="677" width="0.0799%" height="15" fill="rgb(239,133,9)" fg:x="250" fg:w="1"/><text x="20.2340%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9840%" y="661" width="0.0799%" height="15" fill="rgb(214,114,5)" fg:x="250" fg:w="1"/><text x="20.2340%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9840%" y="645" width="0.0799%" height="15" fill="rgb(206,124,24)" fg:x="250" fg:w="1"/><text x="20.2340%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="20.0639%" y="709" width="0.0799%" height="15" fill="rgb(212,57,33)" fg:x="251" fg:w="1"/><text x="20.3139%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="20.0639%" y="693" width="0.0799%" height="15" fill="rgb(246,21,20)" fg:x="251" fg:w="1"/><text x="20.3139%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="20.0639%" y="677" width="0.0799%" height="15" fill="rgb(253,210,39)" fg:x="251" fg:w="1"/><text x="20.3139%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="20.0639%" y="661" width="0.0799%" height="15" fill="rgb(209,187,24)" fg:x="251" fg:w="1"/><text x="20.3139%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.0639%" y="645" width="0.0799%" height="15" fill="rgb(246,136,17)" fg:x="251" fg:w="1"/><text x="20.3139%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.0639%" y="629" width="0.0799%" height="15" fill="rgb(211,0,30)" fg:x="251" fg:w="1"/><text x="20.3139%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="20.0639%" y="613" width="0.0799%" height="15" fill="rgb(216,199,7)" fg:x="251" fg:w="1"/><text x="20.3139%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="20.0639%" y="725" width="0.1599%" height="15" fill="rgb(207,210,19)" fg:x="251" fg:w="2"/><text x="20.3139%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="20.1439%" y="709" width="0.0799%" height="15" fill="rgb(237,187,39)" fg:x="252" fg:w="1"/><text x="20.3939%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="20.1439%" y="693" width="0.0799%" height="15" fill="rgb(243,194,42)" fg:x="252" fg:w="1"/><text x="20.3939%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="20.1439%" y="677" width="0.0799%" height="15" fill="rgb(225,194,19)" fg:x="252" fg:w="1"/><text x="20.3939%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="20.1439%" y="661" width="0.0799%" height="15" fill="rgb(224,192,14)" fg:x="252" fg:w="1"/><text x="20.3939%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="20.1439%" y="645" width="0.0799%" height="15" fill="rgb(252,21,18)" fg:x="252" fg:w="1"/><text x="20.3939%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1439%" y="629" width="0.0799%" height="15" fill="rgb(229,69,19)" fg:x="252" fg:w="1"/><text x="20.3939%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.1439%" y="613" width="0.0799%" height="15" fill="rgb(251,31,53)" fg:x="252" fg:w="1"/><text x="20.3939%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1439%" y="597" width="0.0799%" height="15" fill="rgb(218,39,50)" fg:x="252" fg:w="1"/><text x="20.3939%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.1439%" y="581" width="0.0799%" height="15" fill="rgb(231,50,17)" fg:x="252" fg:w="1"/><text x="20.3939%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.1439%" y="565" width="0.0799%" height="15" fill="rgb(223,217,31)" fg:x="252" fg:w="1"/><text x="20.3939%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1439%" y="549" width="0.0799%" height="15" fill="rgb(225,91,12)" fg:x="252" fg:w="1"/><text x="20.3939%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="20.2238%" y="725" width="0.1599%" height="15" fill="rgb(242,58,43)" fg:x="253" fg:w="2"/><text x="20.4738%" y="735.50"></text></g><g><title>kernel::model::Entity::new_blank (2 samples, 0.16%)</title><rect x="20.2238%" y="709" width="0.1599%" height="15" fill="rgb(242,32,21)" fg:x="253" fg:w="2"/><text x="20.4738%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="20.3038%" y="693" width="0.0799%" height="15" fill="rgb(211,127,1)" fg:x="254" fg:w="1"/><text x="20.5538%" y="703.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="20.3038%" y="677" width="0.0799%" height="15" fill="rgb(231,93,13)" fg:x="254" fg:w="1"/><text x="20.5538%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="20.3038%" y="661" width="0.0799%" height="15" fill="rgb(218,83,4)" fg:x="254" fg:w="1"/><text x="20.5538%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="20.3038%" y="645" width="0.0799%" height="15" fill="rgb(230,218,10)" fg:x="254" fg:w="1"/><text x="20.5538%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.3038%" y="629" width="0.0799%" height="15" fill="rgb(235,127,18)" fg:x="254" fg:w="1"/><text x="20.5538%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.3038%" y="613" width="0.0799%" height="15" fill="rgb(213,137,46)" fg:x="254" fg:w="1"/><text x="20.5538%" y="623.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="20.3038%" y="597" width="0.0799%" height="15" fill="rgb(235,179,24)" fg:x="254" fg:w="1"/><text x="20.5538%" y="607.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="20.3837%" y="709" width="0.1599%" height="15" fill="rgb(247,58,49)" fg:x="255" fg:w="2"/><text x="20.6337%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="20.3837%" y="693" width="0.1599%" height="15" fill="rgb(242,222,5)" fg:x="255" fg:w="2"/><text x="20.6337%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="20.3837%" y="677" width="0.1599%" height="15" fill="rgb(230,16,48)" fg:x="255" fg:w="2"/><text x="20.6337%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="20.3837%" y="661" width="0.1599%" height="15" fill="rgb(241,192,16)" fg:x="255" fg:w="2"/><text x="20.6337%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.4636%" y="645" width="0.0799%" height="15" fill="rgb(209,25,37)" fg:x="256" fg:w="1"/><text x="20.7136%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="20.4636%" y="629" width="0.0799%" height="15" fill="rgb(229,215,13)" fg:x="256" fg:w="1"/><text x="20.7136%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.4636%" y="613" width="0.0799%" height="15" fill="rgb(213,199,8)" fg:x="256" fg:w="1"/><text x="20.7136%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.4636%" y="597" width="0.0799%" height="15" fill="rgb(226,151,19)" fg:x="256" fg:w="1"/><text x="20.7136%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.4636%" y="581" width="0.0799%" height="15" fill="rgb(254,183,12)" fg:x="256" fg:w="1"/><text x="20.7136%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.4636%" y="565" width="0.0799%" height="15" fill="rgb(245,8,3)" fg:x="256" fg:w="1"/><text x="20.7136%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="20.4636%" y="549" width="0.0799%" height="15" fill="rgb(229,159,35)" fg:x="256" fg:w="1"/><text x="20.7136%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6235%" y="645" width="0.0799%" height="15" fill="rgb(209,145,1)" fg:x="258" fg:w="1"/><text x="20.8735%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6235%" y="629" width="0.0799%" height="15" fill="rgb(228,183,16)" fg:x="258" fg:w="1"/><text x="20.8735%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6235%" y="613" width="0.0799%" height="15" fill="rgb(222,68,0)" fg:x="258" fg:w="1"/><text x="20.8735%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6235%" y="597" width="0.0799%" height="15" fill="rgb(209,130,50)" fg:x="258" fg:w="1"/><text x="20.8735%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6235%" y="581" width="0.0799%" height="15" fill="rgb(228,176,44)" fg:x="258" fg:w="1"/><text x="20.8735%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.6235%" y="565" width="0.0799%" height="15" fill="rgb(221,164,2)" fg:x="258" fg:w="1"/><text x="20.8735%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.6235%" y="549" width="0.0799%" height="15" fill="rgb(249,199,49)" fg:x="258" fg:w="1"/><text x="20.8735%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.6235%" y="533" width="0.0799%" height="15" fill="rgb(228,205,53)" fg:x="258" fg:w="1"/><text x="20.8735%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6235%" y="517" width="0.0799%" height="15" fill="rgb(235,77,20)" fg:x="258" fg:w="1"/><text x="20.8735%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6235%" y="501" width="0.0799%" height="15" fill="rgb(227,147,34)" fg:x="258" fg:w="1"/><text x="20.8735%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.6235%" y="485" width="0.0799%" height="15" fill="rgb(226,203,52)" fg:x="258" fg:w="1"/><text x="20.8735%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.6235%" y="469" width="0.0799%" height="15" fill="rgb(226,186,23)" fg:x="258" fg:w="1"/><text x="20.8735%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.6235%" y="453" width="0.0799%" height="15" fill="rgb(236,13,30)" fg:x="258" fg:w="1"/><text x="20.8735%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.6235%" y="437" width="0.0799%" height="15" fill="rgb(228,121,22)" fg:x="258" fg:w="1"/><text x="20.8735%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6235%" y="421" width="0.0799%" height="15" fill="rgb(248,222,26)" fg:x="258" fg:w="1"/><text x="20.8735%" y="431.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.5436%" y="693" width="0.3197%" height="15" fill="rgb(251,72,25)" fg:x="257" fg:w="4"/><text x="20.7936%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="20.5436%" y="677" width="0.3197%" height="15" fill="rgb(223,114,24)" fg:x="257" fg:w="4"/><text x="20.7936%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="20.5436%" y="661" width="0.3197%" height="15" fill="rgb(232,190,43)" fg:x="257" fg:w="4"/><text x="20.7936%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.7034%" y="645" width="0.1599%" height="15" fill="rgb(208,90,0)" fg:x="259" fg:w="2"/><text x="20.9534%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.7034%" y="629" width="0.1599%" height="15" fill="rgb(234,149,31)" fg:x="259" fg:w="2"/><text x="20.9534%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.7034%" y="613" width="0.1599%" height="15" fill="rgb(235,188,36)" fg:x="259" fg:w="2"/><text x="20.9534%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.7034%" y="597" width="0.1599%" height="15" fill="rgb(219,59,51)" fg:x="259" fg:w="2"/><text x="20.9534%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.7034%" y="581" width="0.1599%" height="15" fill="rgb(236,101,40)" fg:x="259" fg:w="2"/><text x="20.9534%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.7034%" y="565" width="0.1599%" height="15" fill="rgb(235,33,7)" fg:x="259" fg:w="2"/><text x="20.9534%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.7034%" y="549" width="0.1599%" height="15" fill="rgb(213,169,26)" fg:x="259" fg:w="2"/><text x="20.9534%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.7034%" y="533" width="0.1599%" height="15" fill="rgb(218,99,34)" fg:x="259" fg:w="2"/><text x="20.9534%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.7834%" y="517" width="0.0799%" height="15" fill="rgb(210,57,24)" fg:x="260" fg:w="1"/><text x="21.0334%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8633%" y="597" width="0.0799%" height="15" fill="rgb(231,181,54)" fg:x="261" fg:w="1"/><text x="21.1133%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.8633%" y="581" width="0.0799%" height="15" fill="rgb(251,188,48)" fg:x="261" fg:w="1"/><text x="21.1133%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.8633%" y="565" width="0.0799%" height="15" fill="rgb(243,12,45)" fg:x="261" fg:w="1"/><text x="21.1133%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.8633%" y="549" width="0.0799%" height="15" fill="rgb(250,197,9)" fg:x="261" fg:w="1"/><text x="21.1133%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.8633%" y="533" width="0.0799%" height="15" fill="rgb(235,149,35)" fg:x="261" fg:w="1"/><text x="21.1133%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.8633%" y="517" width="0.0799%" height="15" fill="rgb(219,27,19)" fg:x="261" fg:w="1"/><text x="21.1133%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.8633%" y="501" width="0.0799%" height="15" fill="rgb(244,78,31)" fg:x="261" fg:w="1"/><text x="21.1133%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.8633%" y="485" width="0.0799%" height="15" fill="rgb(241,13,4)" fg:x="261" fg:w="1"/><text x="21.1133%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.8633%" y="469" width="0.0799%" height="15" fill="rgb(212,194,26)" fg:x="261" fg:w="1"/><text x="21.1133%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.8633%" y="453" width="0.0799%" height="15" fill="rgb(236,80,11)" fg:x="261" fg:w="1"/><text x="21.1133%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.8633%" y="437" width="0.0799%" height="15" fill="rgb(206,1,24)" fg:x="261" fg:w="1"/><text x="21.1133%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.8633%" y="421" width="0.0799%" height="15" fill="rgb(238,215,50)" fg:x="261" fg:w="1"/><text x="21.1133%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.8633%" y="405" width="0.0799%" height="15" fill="rgb(254,126,32)" fg:x="261" fg:w="1"/><text x="21.1133%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.8633%" y="389" width="0.0799%" height="15" fill="rgb(206,111,53)" fg:x="261" fg:w="1"/><text x="21.1133%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.8633%" y="645" width="0.2398%" height="15" fill="rgb(218,72,44)" fg:x="261" fg:w="3"/><text x="21.1133%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.8633%" y="629" width="0.2398%" height="15" fill="rgb(238,25,3)" fg:x="261" fg:w="3"/><text x="21.1133%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.8633%" y="613" width="0.2398%" height="15" fill="rgb(250,191,7)" fg:x="261" fg:w="3"/><text x="21.1133%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.9432%" y="597" width="0.1599%" height="15" fill="rgb(238,56,30)" fg:x="262" fg:w="2"/><text x="21.1932%" y="607.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (222 samples, 17.75%)</title><rect x="3.5172%" y="773" width="17.7458%" height="15" fill="rgb(210,27,45)" fg:x="44" fg:w="222"/><text x="3.7672%" y="783.50">&lt;tests::HoldingKeyInVessel a..</text></g><g><title>plugins_core::build::BuildSurroundings::make (15 samples, 1.20%)</title><rect x="20.0639%" y="757" width="1.1990%" height="15" fill="rgb(207,10,50)" fg:x="251" fg:w="15"/><text x="20.3139%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.20%)</title><rect x="20.0639%" y="741" width="1.1990%" height="15" fill="rgb(249,30,23)" fg:x="251" fg:w="15"/><text x="20.3139%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::set_name (11 samples, 0.88%)</title><rect x="20.3837%" y="725" width="0.8793%" height="15" fill="rgb(250,80,12)" fg:x="255" fg:w="11"/><text x="20.6337%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::modified (9 samples, 0.72%)</title><rect x="20.5436%" y="709" width="0.7194%" height="15" fill="rgb(210,221,37)" fg:x="257" fg:w="9"/><text x="20.7936%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="20.8633%" y="693" width="0.3997%" height="15" fill="rgb(205,96,24)" fg:x="261" fg:w="5"/><text x="21.1133%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.40%)</title><rect x="20.8633%" y="677" width="0.3997%" height="15" fill="rgb(247,104,22)" fg:x="261" fg:w="5"/><text x="21.1133%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="20.8633%" y="661" width="0.3997%" height="15" fill="rgb(222,61,53)" fg:x="261" fg:w="5"/><text x="21.1133%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.1031%" y="645" width="0.1599%" height="15" fill="rgb(241,11,53)" fg:x="264" fg:w="2"/><text x="21.3531%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.1031%" y="629" width="0.1599%" height="15" fill="rgb(230,111,47)" fg:x="264" fg:w="2"/><text x="21.3531%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.1031%" y="613" width="0.1599%" height="15" fill="rgb(218,187,29)" fg:x="264" fg:w="2"/><text x="21.3531%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.1031%" y="597" width="0.1599%" height="15" fill="rgb(210,121,46)" fg:x="264" fg:w="2"/><text x="21.3531%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.1831%" y="581" width="0.0799%" height="15" fill="rgb(250,43,19)" fg:x="265" fg:w="1"/><text x="21.4331%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1831%" y="565" width="0.0799%" height="15" fill="rgb(238,61,12)" fg:x="265" fg:w="1"/><text x="21.4331%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.1831%" y="549" width="0.0799%" height="15" fill="rgb(251,198,9)" fg:x="265" fg:w="1"/><text x="21.4331%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1831%" y="533" width="0.0799%" height="15" fill="rgb(214,192,38)" fg:x="265" fg:w="1"/><text x="21.4331%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="21.2630%" y="773" width="0.0799%" height="15" fill="rgb(214,73,19)" fg:x="266" fg:w="1"/><text x="21.5130%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.2630%" y="757" width="0.0799%" height="15" fill="rgb(249,222,49)" fg:x="266" fg:w="1"/><text x="21.5130%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="21.4229%" y="725" width="0.0799%" height="15" fill="rgb(231,181,54)" fg:x="268" fg:w="1"/><text x="21.6729%" y="735.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="21.4229%" y="709" width="0.0799%" height="15" fill="rgb(240,1,13)" fg:x="268" fg:w="1"/><text x="21.6729%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4229%" y="693" width="0.0799%" height="15" fill="rgb(225,21,16)" fg:x="268" fg:w="1"/><text x="21.6729%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4229%" y="677" width="0.0799%" height="15" fill="rgb(246,176,50)" fg:x="268" fg:w="1"/><text x="21.6729%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4229%" y="661" width="0.0799%" height="15" fill="rgb(208,96,50)" fg:x="268" fg:w="1"/><text x="21.6729%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.4229%" y="645" width="0.0799%" height="15" fill="rgb(240,219,19)" fg:x="268" fg:w="1"/><text x="21.6729%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.4229%" y="629" width="0.0799%" height="15" fill="rgb(234,73,5)" fg:x="268" fg:w="1"/><text x="21.6729%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.4229%" y="613" width="0.0799%" height="15" fill="rgb(225,52,53)" fg:x="268" fg:w="1"/><text x="21.6729%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4229%" y="597" width="0.0799%" height="15" fill="rgb(250,12,14)" fg:x="268" fg:w="1"/><text x="21.6729%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4229%" y="581" width="0.0799%" height="15" fill="rgb(242,185,54)" fg:x="268" fg:w="1"/><text x="21.6729%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.4229%" y="565" width="0.0799%" height="15" fill="rgb(211,206,31)" fg:x="268" fg:w="1"/><text x="21.6729%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.4229%" y="549" width="0.0799%" height="15" fill="rgb(252,10,33)" fg:x="268" fg:w="1"/><text x="21.6729%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.4229%" y="533" width="0.0799%" height="15" fill="rgb(216,26,7)" fg:x="268" fg:w="1"/><text x="21.6729%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.4229%" y="517" width="0.0799%" height="15" fill="rgb(228,112,40)" fg:x="268" fg:w="1"/><text x="21.6729%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="21.4229%" y="501" width="0.0799%" height="15" fill="rgb(212,21,16)" fg:x="268" fg:w="1"/><text x="21.6729%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.5028%" y="597" width="0.0799%" height="15" fill="rgb(249,3,29)" fg:x="269" fg:w="1"/><text x="21.7528%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.5028%" y="581" width="0.0799%" height="15" fill="rgb(221,42,51)" fg:x="269" fg:w="1"/><text x="21.7528%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="21.5028%" y="565" width="0.0799%" height="15" fill="rgb(225,90,21)" fg:x="269" fg:w="1"/><text x="21.7528%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="21.5028%" y="549" width="0.0799%" height="15" fill="rgb(242,131,5)" fg:x="269" fg:w="1"/><text x="21.7528%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="21.5028%" y="533" width="0.0799%" height="15" fill="rgb(220,187,28)" fg:x="269" fg:w="1"/><text x="21.7528%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="21.5028%" y="517" width="0.0799%" height="15" fill="rgb(210,75,48)" fg:x="269" fg:w="1"/><text x="21.7528%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.5028%" y="501" width="0.0799%" height="15" fill="rgb(211,91,40)" fg:x="269" fg:w="1"/><text x="21.7528%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="21.4229%" y="741" width="0.2398%" height="15" fill="rgb(205,43,18)" fg:x="268" fg:w="3"/><text x="21.6729%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="21.5028%" y="725" width="0.1599%" height="15" fill="rgb(207,123,11)" fg:x="269" fg:w="2"/><text x="21.7528%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="21.5028%" y="709" width="0.1599%" height="15" fill="rgb(235,89,39)" fg:x="269" fg:w="2"/><text x="21.7528%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="21.5028%" y="693" width="0.1599%" height="15" fill="rgb(245,217,27)" fg:x="269" fg:w="2"/><text x="21.7528%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.5028%" y="677" width="0.1599%" height="15" fill="rgb(216,55,17)" fg:x="269" fg:w="2"/><text x="21.7528%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="21.5028%" y="661" width="0.1599%" height="15" fill="rgb(252,116,44)" fg:x="269" fg:w="2"/><text x="21.7528%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="21.5028%" y="645" width="0.1599%" height="15" fill="rgb(229,153,4)" fg:x="269" fg:w="2"/><text x="21.7528%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="21.5028%" y="629" width="0.1599%" height="15" fill="rgb(222,24,35)" fg:x="269" fg:w="2"/><text x="21.7528%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.5028%" y="613" width="0.1599%" height="15" fill="rgb(214,26,20)" fg:x="269" fg:w="2"/><text x="21.7528%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.5827%" y="597" width="0.0799%" height="15" fill="rgb(215,14,45)" fg:x="270" fg:w="1"/><text x="21.8327%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.5827%" y="581" width="0.0799%" height="15" fill="rgb(217,212,50)" fg:x="270" fg:w="1"/><text x="21.8327%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.5827%" y="565" width="0.0799%" height="15" fill="rgb(230,172,52)" fg:x="270" fg:w="1"/><text x="21.8327%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="21.5827%" y="549" width="0.0799%" height="15" fill="rgb(210,48,36)" fg:x="270" fg:w="1"/><text x="21.8327%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="21.5827%" y="533" width="0.0799%" height="15" fill="rgb(216,213,32)" fg:x="270" fg:w="1"/><text x="21.8327%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="21.5827%" y="517" width="0.0799%" height="15" fill="rgb(237,202,41)" fg:x="270" fg:w="1"/><text x="21.8327%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="21.5827%" y="501" width="0.0799%" height="15" fill="rgb(209,14,29)" fg:x="270" fg:w="1"/><text x="21.8327%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.5827%" y="485" width="0.0799%" height="15" fill="rgb(219,29,3)" fg:x="270" fg:w="1"/><text x="21.8327%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.5827%" y="469" width="0.0799%" height="15" fill="rgb(229,13,49)" fg:x="270" fg:w="1"/><text x="21.8327%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.5827%" y="453" width="0.0799%" height="15" fill="rgb(210,206,2)" fg:x="270" fg:w="1"/><text x="21.8327%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="21.5827%" y="437" width="0.0799%" height="15" fill="rgb(216,154,46)" fg:x="270" fg:w="1"/><text x="21.8327%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.5827%" y="421" width="0.0799%" height="15" fill="rgb(211,170,52)" fg:x="270" fg:w="1"/><text x="21.8327%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="21.5827%" y="405" width="0.0799%" height="15" fill="rgb(233,109,47)" fg:x="270" fg:w="1"/><text x="21.8327%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="21.5827%" y="389" width="0.0799%" height="15" fill="rgb(208,212,30)" fg:x="270" fg:w="1"/><text x="21.8327%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="21.5827%" y="373" width="0.0799%" height="15" fill="rgb(215,190,19)" fg:x="270" fg:w="1"/><text x="21.8327%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.5827%" y="357" width="0.0799%" height="15" fill="rgb(207,164,53)" fg:x="270" fg:w="1"/><text x="21.8327%" y="367.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (7 samples, 0.56%)</title><rect x="21.4229%" y="757" width="0.5596%" height="15" fill="rgb(213,87,49)" fg:x="268" fg:w="7"/><text x="21.6729%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (4 samples, 0.32%)</title><rect x="21.6627%" y="741" width="0.3197%" height="15" fill="rgb(241,216,24)" fg:x="271" fg:w="4"/><text x="21.9127%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="21.7426%" y="725" width="0.2398%" height="15" fill="rgb(241,123,45)" fg:x="272" fg:w="3"/><text x="21.9926%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="21.7426%" y="709" width="0.2398%" height="15" fill="rgb(220,36,15)" fg:x="272" fg:w="3"/><text x="21.9926%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.8225%" y="693" width="0.1599%" height="15" fill="rgb(215,202,9)" fg:x="273" fg:w="2"/><text x="22.0725%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.8225%" y="677" width="0.1599%" height="15" fill="rgb(252,71,26)" fg:x="273" fg:w="2"/><text x="22.0725%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9025%" y="661" width="0.0799%" height="15" fill="rgb(243,195,19)" fg:x="274" fg:w="1"/><text x="22.1525%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9025%" y="645" width="0.0799%" height="15" fill="rgb(207,167,27)" fg:x="274" fg:w="1"/><text x="22.1525%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9025%" y="629" width="0.0799%" height="15" fill="rgb(250,146,54)" fg:x="274" fg:w="1"/><text x="22.1525%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.9025%" y="613" width="0.0799%" height="15" fill="rgb(245,79,9)" fg:x="274" fg:w="1"/><text x="22.1525%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.9025%" y="597" width="0.0799%" height="15" fill="rgb(234,197,22)" fg:x="274" fg:w="1"/><text x="22.1525%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.9025%" y="581" width="0.0799%" height="15" fill="rgb(221,52,48)" fg:x="274" fg:w="1"/><text x="22.1525%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9025%" y="565" width="0.0799%" height="15" fill="rgb(235,80,0)" fg:x="274" fg:w="1"/><text x="22.1525%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9025%" y="549" width="0.0799%" height="15" fill="rgb(221,117,53)" fg:x="274" fg:w="1"/><text x="22.1525%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.9025%" y="533" width="0.0799%" height="15" fill="rgb(239,48,47)" fg:x="274" fg:w="1"/><text x="22.1525%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.9025%" y="517" width="0.0799%" height="15" fill="rgb(227,191,52)" fg:x="274" fg:w="1"/><text x="22.1525%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.9025%" y="501" width="0.0799%" height="15" fill="rgb(241,118,1)" fg:x="274" fg:w="1"/><text x="22.1525%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.9025%" y="485" width="0.0799%" height="15" fill="rgb(240,85,3)" fg:x="274" fg:w="1"/><text x="22.1525%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.9025%" y="469" width="0.0799%" height="15" fill="rgb(237,68,37)" fg:x="274" fg:w="1"/><text x="22.1525%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="21.9824%" y="741" width="0.0799%" height="15" fill="rgb(212,9,20)" fg:x="275" fg:w="1"/><text x="22.2324%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="21.9824%" y="725" width="0.0799%" height="15" fill="rgb(218,84,17)" fg:x="275" fg:w="1"/><text x="22.2324%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="22.0624%" y="741" width="0.0799%" height="15" fill="rgb(235,147,20)" fg:x="276" fg:w="1"/><text x="22.3124%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0624%" y="725" width="0.0799%" height="15" fill="rgb(208,224,1)" fg:x="276" fg:w="1"/><text x="22.3124%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="22.1423%" y="741" width="0.0799%" height="15" fill="rgb(232,97,50)" fg:x="277" fg:w="1"/><text x="22.3923%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="22.1423%" y="725" width="0.0799%" height="15" fill="rgb(238,15,45)" fg:x="277" fg:w="1"/><text x="22.3923%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="22.1423%" y="709" width="0.0799%" height="15" fill="rgb(231,46,18)" fg:x="277" fg:w="1"/><text x="22.3923%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="22.2222%" y="741" width="0.0799%" height="15" fill="rgb(254,169,10)" fg:x="278" fg:w="1"/><text x="22.4722%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2222%" y="725" width="0.0799%" height="15" fill="rgb(243,169,30)" fg:x="278" fg:w="1"/><text x="22.4722%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3022%" y="693" width="0.0799%" height="15" fill="rgb(236,90,49)" fg:x="279" fg:w="1"/><text x="22.5522%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3022%" y="677" width="0.0799%" height="15" fill="rgb(218,80,15)" fg:x="279" fg:w="1"/><text x="22.5522%" y="687.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="22.3022%" y="741" width="0.1599%" height="15" fill="rgb(222,115,37)" fg:x="279" fg:w="2"/><text x="22.5522%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="22.3022%" y="725" width="0.1599%" height="15" fill="rgb(227,0,6)" fg:x="279" fg:w="2"/><text x="22.5522%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="22.3022%" y="709" width="0.1599%" height="15" fill="rgb(217,189,13)" fg:x="279" fg:w="2"/><text x="22.5522%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.3821%" y="693" width="0.0799%" height="15" fill="rgb(220,74,19)" fg:x="280" fg:w="1"/><text x="22.6321%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3821%" y="677" width="0.0799%" height="15" fill="rgb(224,81,18)" fg:x="280" fg:w="1"/><text x="22.6321%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.6219%" y="645" width="0.1599%" height="15" fill="rgb(245,178,48)" fg:x="283" fg:w="2"/><text x="22.8719%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.6219%" y="629" width="0.1599%" height="15" fill="rgb(207,78,24)" fg:x="283" fg:w="2"/><text x="22.8719%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.6219%" y="613" width="0.1599%" height="15" fill="rgb(223,222,30)" fg:x="283" fg:w="2"/><text x="22.8719%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="22.6219%" y="661" width="0.2398%" height="15" fill="rgb(234,101,12)" fg:x="283" fg:w="3"/><text x="22.8719%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.7818%" y="645" width="0.0799%" height="15" fill="rgb(209,80,46)" fg:x="285" fg:w="1"/><text x="23.0318%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.1015%" y="565" width="0.0799%" height="15" fill="rgb(228,79,14)" fg:x="289" fg:w="1"/><text x="23.3515%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.2614%" y="501" width="0.0799%" height="15" fill="rgb(220,219,34)" fg:x="291" fg:w="1"/><text x="23.5114%" y="511.50"></text></g><g><title>kernel::model::scopes::load_props (10 samples, 0.80%)</title><rect x="22.6219%" y="693" width="0.7994%" height="15" fill="rgb(207,80,21)" fg:x="283" fg:w="10"/><text x="22.8719%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 0.80%)</title><rect x="22.6219%" y="677" width="0.7994%" height="15" fill="rgb(210,154,44)" fg:x="283" fg:w="10"/><text x="22.8719%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="22.8617%" y="661" width="0.5596%" height="15" fill="rgb(246,44,39)" fg:x="286" fg:w="7"/><text x="23.1117%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="22.8617%" y="645" width="0.5596%" height="15" fill="rgb(252,175,13)" fg:x="286" fg:w="7"/><text x="23.1117%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="23.0216%" y="629" width="0.3997%" height="15" fill="rgb(211,50,39)" fg:x="288" fg:w="5"/><text x="23.2716%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="23.0216%" y="613" width="0.3997%" height="15" fill="rgb(231,204,27)" fg:x="288" fg:w="5"/><text x="23.2716%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="23.1015%" y="597" width="0.3197%" height="15" fill="rgb(253,26,34)" fg:x="289" fg:w="4"/><text x="23.3515%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="23.1015%" y="581" width="0.3197%" height="15" fill="rgb(207,139,38)" fg:x="289" fg:w="4"/><text x="23.3515%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="23.1815%" y="565" width="0.2398%" height="15" fill="rgb(248,54,27)" fg:x="290" fg:w="3"/><text x="23.4315%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.2614%" y="549" width="0.1599%" height="15" fill="rgb(234,25,33)" fg:x="291" fg:w="2"/><text x="23.5114%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.2614%" y="533" width="0.1599%" height="15" fill="rgb(249,107,47)" fg:x="291" fg:w="2"/><text x="23.5114%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.2614%" y="517" width="0.1599%" height="15" fill="rgb(230,190,31)" fg:x="291" fg:w="2"/><text x="23.5114%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="23.3413%" y="501" width="0.0799%" height="15" fill="rgb(238,173,45)" fg:x="292" fg:w="1"/><text x="23.5913%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="23.3413%" y="485" width="0.0799%" height="15" fill="rgb(222,16,50)" fg:x="292" fg:w="1"/><text x="23.5913%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4213%" y="677" width="0.0799%" height="15" fill="rgb(251,204,47)" fg:x="293" fg:w="1"/><text x="23.6713%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="23.5012%" y="677" width="0.0799%" height="15" fill="rgb(225,12,3)" fg:x="294" fg:w="1"/><text x="23.7512%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5012%" y="661" width="0.0799%" height="15" fill="rgb(214,208,22)" fg:x="294" fg:w="1"/><text x="23.7512%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5811%" y="629" width="0.0799%" height="15" fill="rgb(240,57,32)" fg:x="295" fg:w="1"/><text x="23.8311%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.5811%" y="661" width="0.1599%" height="15" fill="rgb(243,113,48)" fg:x="295" fg:w="2"/><text x="23.8311%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="23.5811%" y="645" width="0.1599%" height="15" fill="rgb(225,135,30)" fg:x="295" fg:w="2"/><text x="23.8311%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6611%" y="629" width="0.0799%" height="15" fill="rgb(222,3,53)" fg:x="296" fg:w="1"/><text x="23.9111%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6611%" y="613" width="0.0799%" height="15" fill="rgb(243,142,2)" fg:x="296" fg:w="1"/><text x="23.9111%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6611%" y="597" width="0.0799%" height="15" fill="rgb(233,67,14)" fg:x="296" fg:w="1"/><text x="23.9111%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.6611%" y="581" width="0.0799%" height="15" fill="rgb(245,125,36)" fg:x="296" fg:w="1"/><text x="23.9111%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9009%" y="581" width="0.0799%" height="15" fill="rgb(225,199,6)" fg:x="299" fg:w="1"/><text x="24.1509%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="23.8209%" y="645" width="0.3197%" height="15" fill="rgb(244,71,6)" fg:x="298" fg:w="4"/><text x="24.0709%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="23.8209%" y="629" width="0.3197%" height="15" fill="rgb(225,62,9)" fg:x="298" fg:w="4"/><text x="24.0709%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="23.8209%" y="613" width="0.3197%" height="15" fill="rgb(246,139,53)" fg:x="298" fg:w="4"/><text x="24.0709%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="23.9009%" y="597" width="0.2398%" height="15" fill="rgb(243,161,46)" fg:x="299" fg:w="3"/><text x="24.1509%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="23.9808%" y="581" width="0.1599%" height="15" fill="rgb(236,153,7)" fg:x="300" fg:w="2"/><text x="24.2308%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.0608%" y="565" width="0.0799%" height="15" fill="rgb(248,42,35)" fg:x="301" fg:w="1"/><text x="24.3108%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="24.0608%" y="549" width="0.0799%" height="15" fill="rgb(250,17,31)" fg:x="301" fg:w="1"/><text x="24.3108%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.0608%" y="533" width="0.0799%" height="15" fill="rgb(248,138,14)" fg:x="301" fg:w="1"/><text x="24.3108%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (20 samples, 1.60%)</title><rect x="22.6219%" y="709" width="1.5987%" height="15" fill="rgb(228,161,3)" fg:x="283" fg:w="20"/><text x="22.8719%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (10 samples, 0.80%)</title><rect x="23.4213%" y="693" width="0.7994%" height="15" fill="rgb(248,116,17)" fg:x="293" fg:w="10"/><text x="23.6713%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (8 samples, 0.64%)</title><rect x="23.5811%" y="677" width="0.6395%" height="15" fill="rgb(207,78,24)" fg:x="295" fg:w="8"/><text x="23.8311%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (6 samples, 0.48%)</title><rect x="23.7410%" y="661" width="0.4796%" height="15" fill="rgb(234,99,48)" fg:x="297" fg:w="6"/><text x="23.9910%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="24.1407%" y="645" width="0.0799%" height="15" fill="rgb(242,22,26)" fg:x="302" fg:w="1"/><text x="24.3907%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="24.2206%" y="693" width="0.3197%" height="15" fill="rgb(227,78,32)" fg:x="303" fg:w="4"/><text x="24.4706%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="24.2206%" y="677" width="0.3197%" height="15" fill="rgb(226,189,43)" fg:x="303" fg:w="4"/><text x="24.4706%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="24.3006%" y="661" width="0.2398%" height="15" fill="rgb(227,218,35)" fg:x="304" fg:w="3"/><text x="24.5506%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.3805%" y="645" width="0.1599%" height="15" fill="rgb(206,111,40)" fg:x="305" fg:w="2"/><text x="24.6305%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="24.3805%" y="629" width="0.1599%" height="15" fill="rgb(208,217,22)" fg:x="305" fg:w="2"/><text x="24.6305%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="24.3805%" y="613" width="0.1599%" height="15" fill="rgb(248,20,20)" fg:x="305" fg:w="2"/><text x="24.6305%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="24.3805%" y="597" width="0.1599%" height="15" fill="rgb(239,155,16)" fg:x="305" fg:w="2"/><text x="24.6305%" y="607.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="24.3805%" y="581" width="0.1599%" height="15" fill="rgb(238,171,46)" fg:x="305" fg:w="2"/><text x="24.6305%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="24.5404%" y="677" width="0.5596%" height="15" fill="rgb(248,11,36)" fg:x="307" fg:w="7"/><text x="24.7904%" y="687.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="24.6203%" y="661" width="0.4796%" height="15" fill="rgb(220,148,37)" fg:x="308" fg:w="6"/><text x="24.8703%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.9400%" y="645" width="0.1599%" height="15" fill="rgb(218,144,42)" fg:x="312" fg:w="2"/><text x="25.1900%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="24.9400%" y="629" width="0.1599%" height="15" fill="rgb(245,20,20)" fg:x="312" fg:w="2"/><text x="25.1900%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.0200%" y="613" width="0.0799%" height="15" fill="rgb(240,111,48)" fg:x="313" fg:w="1"/><text x="25.2700%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.0200%" y="597" width="0.0799%" height="15" fill="rgb(237,225,32)" fg:x="313" fg:w="1"/><text x="25.2700%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.0200%" y="581" width="0.0799%" height="15" fill="rgb(228,161,46)" fg:x="313" fg:w="1"/><text x="25.2700%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.0999%" y="629" width="0.0799%" height="15" fill="rgb(235,196,21)" fg:x="314" fg:w="1"/><text x="25.3499%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1799%" y="629" width="0.0799%" height="15" fill="rgb(250,133,21)" fg:x="315" fg:w="1"/><text x="25.4299%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.1799%" y="613" width="0.0799%" height="15" fill="rgb(236,94,32)" fg:x="315" fg:w="1"/><text x="25.4299%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.1799%" y="597" width="0.0799%" height="15" fill="rgb(219,176,25)" fg:x="315" fg:w="1"/><text x="25.4299%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1799%" y="581" width="0.0799%" height="15" fill="rgb(211,17,43)" fg:x="315" fg:w="1"/><text x="25.4299%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="25.0999%" y="661" width="0.2398%" height="15" fill="rgb(220,75,23)" fg:x="314" fg:w="3"/><text x="25.3499%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="25.0999%" y="645" width="0.2398%" height="15" fill="rgb(215,122,32)" fg:x="314" fg:w="3"/><text x="25.3499%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.2598%" y="629" width="0.0799%" height="15" fill="rgb(218,57,38)" fg:x="316" fg:w="1"/><text x="25.5098%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="25.3397%" y="661" width="0.3197%" height="15" fill="rgb(233,208,46)" fg:x="317" fg:w="4"/><text x="25.5897%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.5795%" y="645" width="0.0799%" height="15" fill="rgb(221,35,50)" fg:x="320" fg:w="1"/><text x="25.8295%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.5795%" y="629" width="0.0799%" height="15" fill="rgb(229,213,29)" fg:x="320" fg:w="1"/><text x="25.8295%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.5795%" y="613" width="0.0799%" height="15" fill="rgb(229,110,40)" fg:x="320" fg:w="1"/><text x="25.8295%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="25.7394%" y="613" width="0.1599%" height="15" fill="rgb(247,206,19)" fg:x="322" fg:w="2"/><text x="25.9894%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.8193%" y="597" width="0.0799%" height="15" fill="rgb(216,229,45)" fg:x="323" fg:w="1"/><text x="26.0693%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.8193%" y="581" width="0.0799%" height="15" fill="rgb(205,184,31)" fg:x="323" fg:w="1"/><text x="26.0693%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="25.8993%" y="613" width="0.1599%" height="15" fill="rgb(213,91,10)" fg:x="324" fg:w="2"/><text x="26.1493%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="25.8993%" y="597" width="0.1599%" height="15" fill="rgb(250,49,8)" fg:x="324" fg:w="2"/><text x="26.1493%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.8993%" y="581" width="0.1599%" height="15" fill="rgb(207,26,8)" fg:x="324" fg:w="2"/><text x="26.1493%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="25.8993%" y="565" width="0.1599%" height="15" fill="rgb(224,2,13)" fg:x="324" fg:w="2"/><text x="26.1493%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.9792%" y="549" width="0.0799%" height="15" fill="rgb(219,108,27)" fg:x="325" fg:w="1"/><text x="26.2292%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="25.0999%" y="677" width="1.0392%" height="15" fill="rgb(240,89,32)" fg:x="314" fg:w="13"/><text x="25.3499%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="25.6595%" y="661" width="0.4796%" height="15" fill="rgb(248,205,3)" fg:x="321" fg:w="6"/><text x="25.9095%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="25.6595%" y="645" width="0.4796%" height="15" fill="rgb(236,197,47)" fg:x="321" fg:w="6"/><text x="25.9095%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="25.6595%" y="629" width="0.4796%" height="15" fill="rgb(244,185,52)" fg:x="321" fg:w="6"/><text x="25.9095%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.0592%" y="613" width="0.0799%" height="15" fill="rgb(210,206,23)" fg:x="326" fg:w="1"/><text x="26.3092%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.0592%" y="597" width="0.0799%" height="15" fill="rgb(251,177,30)" fg:x="326" fg:w="1"/><text x="26.3092%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (27 samples, 2.16%)</title><rect x="24.2206%" y="709" width="2.1583%" height="15" fill="rgb(243,27,45)" fg:x="303" fg:w="27"/><text x="24.4706%" y="719.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="24.5404%" y="693" width="1.8385%" height="15" fill="rgb(248,141,51)" fg:x="307" fg:w="23"/><text x="24.7904%" y="703.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.1391%" y="677" width="0.2398%" height="15" fill="rgb(235,102,15)" fg:x="327" fg:w="3"/><text x="26.3891%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.1391%" y="661" width="0.2398%" height="15" fill="rgb(214,164,53)" fg:x="327" fg:w="3"/><text x="26.3891%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.2190%" y="645" width="0.1599%" height="15" fill="rgb(228,18,51)" fg:x="328" fg:w="2"/><text x="26.4690%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="26.2190%" y="629" width="0.1599%" height="15" fill="rgb(205,211,11)" fg:x="328" fg:w="2"/><text x="26.4690%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.2990%" y="613" width="0.0799%" height="15" fill="rgb(208,63,6)" fg:x="329" fg:w="1"/><text x="26.5490%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.2990%" y="597" width="0.0799%" height="15" fill="rgb(245,76,14)" fg:x="329" fg:w="1"/><text x="26.5490%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3789%" y="661" width="0.0799%" height="15" fill="rgb(234,176,34)" fg:x="330" fg:w="1"/><text x="26.6289%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="26.4588%" y="661" width="0.3197%" height="15" fill="rgb(243,156,42)" fg:x="331" fg:w="4"/><text x="26.7088%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.6187%" y="645" width="0.1599%" height="15" fill="rgb(237,182,10)" fg:x="333" fg:w="2"/><text x="26.8687%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="26.7786%" y="645" width="0.2398%" height="15" fill="rgb(244,117,0)" fg:x="335" fg:w="3"/><text x="27.0286%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.0184%" y="645" width="0.0799%" height="15" fill="rgb(239,91,50)" fg:x="338" fg:w="1"/><text x="27.2684%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0184%" y="629" width="0.0799%" height="15" fill="rgb(206,38,9)" fg:x="338" fg:w="1"/><text x="27.2684%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="27.0983%" y="629" width="0.0799%" height="15" fill="rgb(205,25,10)" fg:x="339" fg:w="1"/><text x="27.3483%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.0983%" y="613" width="0.0799%" height="15" fill="rgb(206,224,7)" fg:x="339" fg:w="1"/><text x="27.3483%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1783%" y="613" width="0.0799%" height="15" fill="rgb(227,157,10)" fg:x="340" fg:w="1"/><text x="27.4283%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="26.3789%" y="709" width="0.9592%" height="15" fill="rgb(214,157,37)" fg:x="330" fg:w="12"/><text x="26.6289%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="26.3789%" y="693" width="0.9592%" height="15" fill="rgb(209,180,35)" fg:x="330" fg:w="12"/><text x="26.6289%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="26.3789%" y="677" width="0.9592%" height="15" fill="rgb(216,174,49)" fg:x="330" fg:w="12"/><text x="26.6289%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="26.7786%" y="661" width="0.5596%" height="15" fill="rgb(205,96,20)" fg:x="335" fg:w="7"/><text x="27.0286%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="27.0983%" y="645" width="0.2398%" height="15" fill="rgb(214,220,39)" fg:x="339" fg:w="3"/><text x="27.3483%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.1783%" y="629" width="0.1599%" height="15" fill="rgb(245,126,30)" fg:x="340" fg:w="2"/><text x="27.4283%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2582%" y="613" width="0.0799%" height="15" fill="rgb(215,88,33)" fg:x="341" fg:w="1"/><text x="27.5082%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2582%" y="597" width="0.0799%" height="15" fill="rgb(210,1,49)" fg:x="341" fg:w="1"/><text x="27.5082%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.2582%" y="581" width="0.0799%" height="15" fill="rgb(207,133,3)" fg:x="341" fg:w="1"/><text x="27.5082%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.4980%" y="645" width="0.1599%" height="15" fill="rgb(231,47,43)" fg:x="344" fg:w="2"/><text x="27.7480%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="27.6579%" y="645" width="0.2398%" height="15" fill="rgb(245,64,1)" fg:x="346" fg:w="3"/><text x="27.9079%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="27.6579%" y="629" width="0.2398%" height="15" fill="rgb(253,145,20)" fg:x="346" fg:w="3"/><text x="27.9079%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="27.9776%" y="629" width="0.2398%" height="15" fill="rgb(211,39,18)" fg:x="350" fg:w="3"/><text x="28.2276%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.2174%" y="613" width="0.1599%" height="15" fill="rgb(223,225,18)" fg:x="353" fg:w="2"/><text x="28.4674%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.3773%" y="613" width="0.0799%" height="15" fill="rgb(210,202,44)" fg:x="355" fg:w="1"/><text x="28.6273%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.3773%" y="597" width="0.0799%" height="15" fill="rgb(231,138,36)" fg:x="355" fg:w="1"/><text x="28.6273%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="27.3381%" y="693" width="1.1990%" height="15" fill="rgb(237,115,25)" fg:x="342" fg:w="15"/><text x="27.5881%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.20%)</title><rect x="27.3381%" y="677" width="1.1990%" height="15" fill="rgb(215,53,48)" fg:x="342" fg:w="15"/><text x="27.5881%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="27.4181%" y="661" width="1.1191%" height="15" fill="rgb(243,193,24)" fg:x="343" fg:w="14"/><text x="27.6681%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="27.8977%" y="645" width="0.6395%" height="15" fill="rgb(210,106,28)" fg:x="349" fg:w="8"/><text x="28.1477%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="28.2174%" y="629" width="0.3197%" height="15" fill="rgb(249,192,0)" fg:x="353" fg:w="4"/><text x="28.4674%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.4572%" y="613" width="0.0799%" height="15" fill="rgb(224,96,21)" fg:x="356" fg:w="1"/><text x="28.7072%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.4572%" y="597" width="0.0799%" height="15" fill="rgb(243,160,19)" fg:x="356" fg:w="1"/><text x="28.7072%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.4572%" y="581" width="0.0799%" height="15" fill="rgb(219,205,50)" fg:x="356" fg:w="1"/><text x="28.7072%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.6171%" y="661" width="0.0799%" height="15" fill="rgb(218,175,44)" fg:x="358" fg:w="1"/><text x="28.8671%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.6970%" y="661" width="0.0799%" height="15" fill="rgb(251,84,47)" fg:x="359" fg:w="1"/><text x="28.9470%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="28.7770%" y="661" width="0.0799%" height="15" fill="rgb(241,14,16)" fg:x="360" fg:w="1"/><text x="29.0270%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="28.7770%" y="645" width="0.0799%" height="15" fill="rgb(207,142,28)" fg:x="360" fg:w="1"/><text x="29.0270%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="28.8569%" y="661" width="0.4796%" height="15" fill="rgb(208,116,22)" fg:x="361" fg:w="6"/><text x="29.1069%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="28.8569%" y="645" width="0.4796%" height="15" fill="rgb(210,0,43)" fg:x="361" fg:w="6"/><text x="29.1069%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="28.9369%" y="629" width="0.3997%" height="15" fill="rgb(246,33,21)" fg:x="362" fg:w="5"/><text x="29.1869%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.1767%" y="613" width="0.1599%" height="15" fill="rgb(208,158,54)" fg:x="365" fg:w="2"/><text x="29.4267%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="29.3365%" y="661" width="0.0799%" height="15" fill="rgb(218,99,29)" fg:x="367" fg:w="1"/><text x="29.5865%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.3365%" y="645" width="0.0799%" height="15" fill="rgb(226,29,7)" fg:x="367" fg:w="1"/><text x="29.5865%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.3365%" y="629" width="0.0799%" height="15" fill="rgb(206,178,46)" fg:x="367" fg:w="1"/><text x="29.5865%" y="639.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="29.4165%" y="645" width="0.3197%" height="15" fill="rgb(205,169,32)" fg:x="368" fg:w="4"/><text x="29.6665%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.8161%" y="613" width="0.1599%" height="15" fill="rgb(217,4,13)" fg:x="373" fg:w="2"/><text x="30.0661%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.8161%" y="597" width="0.1599%" height="15" fill="rgb(210,140,37)" fg:x="373" fg:w="2"/><text x="30.0661%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.8161%" y="581" width="0.1599%" height="15" fill="rgb(229,80,10)" fg:x="373" fg:w="2"/><text x="30.0661%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="29.9760%" y="613" width="0.2398%" height="15" fill="rgb(212,175,34)" fg:x="375" fg:w="3"/><text x="30.2260%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="29.9760%" y="597" width="0.2398%" height="15" fill="rgb(216,207,24)" fg:x="375" fg:w="3"/><text x="30.2260%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="30.0560%" y="581" width="0.1599%" height="15" fill="rgb(234,163,3)" fg:x="376" fg:w="2"/><text x="30.3060%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="30.1359%" y="565" width="0.0799%" height="15" fill="rgb(248,101,16)" fg:x="377" fg:w="1"/><text x="30.3859%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1359%" y="549" width="0.0799%" height="15" fill="rgb(209,152,54)" fg:x="377" fg:w="1"/><text x="30.3859%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="30.2958%" y="597" width="0.0799%" height="15" fill="rgb(229,124,51)" fg:x="379" fg:w="1"/><text x="30.5458%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.5356%" y="549" width="0.0799%" height="15" fill="rgb(219,83,18)" fg:x="382" fg:w="1"/><text x="30.7856%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.5356%" y="533" width="0.0799%" height="15" fill="rgb(206,29,38)" fg:x="382" fg:w="1"/><text x="30.7856%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="30.3757%" y="565" width="0.5596%" height="15" fill="rgb(245,123,23)" fg:x="380" fg:w="7"/><text x="30.6257%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="30.6155%" y="549" width="0.3197%" height="15" fill="rgb(238,50,33)" fg:x="383" fg:w="4"/><text x="30.8655%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="30.6954%" y="533" width="0.2398%" height="15" fill="rgb(234,165,23)" fg:x="384" fg:w="3"/><text x="30.9454%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="30.7754%" y="517" width="0.1599%" height="15" fill="rgb(211,82,31)" fg:x="385" fg:w="2"/><text x="31.0254%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="30.8553%" y="501" width="0.0799%" height="15" fill="rgb(224,166,46)" fg:x="386" fg:w="1"/><text x="31.1053%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.8553%" y="485" width="0.0799%" height="15" fill="rgb(211,13,8)" fg:x="386" fg:w="1"/><text x="31.1053%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (31 samples, 2.48%)</title><rect x="28.5372%" y="693" width="2.4780%" height="15" fill="rgb(212,7,42)" fg:x="357" fg:w="31"/><text x="28.7872%" y="703.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 2.48%)</title><rect x="28.5372%" y="677" width="2.4780%" height="15" fill="rgb(249,102,19)" fg:x="357" fg:w="31"/><text x="28.7872%" y="687.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.60%)</title><rect x="29.4165%" y="661" width="1.5987%" height="15" fill="rgb(225,41,13)" fg:x="368" fg:w="20"/><text x="29.6665%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (16 samples, 1.28%)</title><rect x="29.7362%" y="645" width="1.2790%" height="15" fill="rgb(220,65,27)" fg:x="372" fg:w="16"/><text x="29.9862%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="29.8161%" y="629" width="1.1990%" height="15" fill="rgb(206,4,41)" fg:x="373" fg:w="15"/><text x="30.0661%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="30.2158%" y="613" width="0.7994%" height="15" fill="rgb(219,60,39)" fg:x="378" fg:w="10"/><text x="30.4658%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="30.3757%" y="597" width="0.6395%" height="15" fill="rgb(226,4,38)" fg:x="380" fg:w="8"/><text x="30.6257%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="30.3757%" y="581" width="0.6395%" height="15" fill="rgb(250,52,3)" fg:x="380" fg:w="8"/><text x="30.6257%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="30.9353%" y="565" width="0.0799%" height="15" fill="rgb(234,93,0)" fg:x="387" fg:w="1"/><text x="31.1853%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="31.2550%" y="549" width="0.0799%" height="15" fill="rgb(251,47,47)" fg:x="391" fg:w="1"/><text x="31.5050%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="31.2550%" y="533" width="0.0799%" height="15" fill="rgb(205,166,47)" fg:x="391" fg:w="1"/><text x="31.5050%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2550%" y="517" width="0.0799%" height="15" fill="rgb(231,148,8)" fg:x="391" fg:w="1"/><text x="31.5050%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="31.4948%" y="469" width="0.2398%" height="15" fill="rgb(244,185,19)" fg:x="394" fg:w="3"/><text x="31.7448%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="31.5747%" y="453" width="0.1599%" height="15" fill="rgb(224,201,45)" fg:x="395" fg:w="2"/><text x="31.8247%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6547%" y="437" width="0.0799%" height="15" fill="rgb(240,77,39)" fg:x="396" fg:w="1"/><text x="31.9047%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6547%" y="421" width="0.0799%" height="15" fill="rgb(248,211,29)" fg:x="396" fg:w="1"/><text x="31.9047%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6547%" y="405" width="0.0799%" height="15" fill="rgb(232,214,46)" fg:x="396" fg:w="1"/><text x="31.9047%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.7346%" y="469" width="0.0799%" height="15" fill="rgb(213,99,54)" fg:x="397" fg:w="1"/><text x="31.9846%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="31.4149%" y="501" width="0.4796%" height="15" fill="rgb(240,19,46)" fg:x="393" fg:w="6"/><text x="31.6649%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="31.4149%" y="485" width="0.4796%" height="15" fill="rgb(243,89,10)" fg:x="393" fg:w="6"/><text x="31.6649%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.8145%" y="469" width="0.0799%" height="15" fill="rgb(249,28,32)" fg:x="398" fg:w="1"/><text x="32.0645%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.8945%" y="501" width="0.0799%" height="15" fill="rgb(253,30,9)" fg:x="399" fg:w="1"/><text x="32.1445%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="31.8945%" y="485" width="0.0799%" height="15" fill="rgb(217,2,26)" fg:x="399" fg:w="1"/><text x="32.1445%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="31.3349%" y="533" width="0.7194%" height="15" fill="rgb(220,28,10)" fg:x="392" fg:w="9"/><text x="31.5849%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="31.4149%" y="517" width="0.6395%" height="15" fill="rgb(228,167,49)" fg:x="393" fg:w="8"/><text x="31.6649%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9744%" y="501" width="0.0799%" height="15" fill="rgb(238,212,3)" fg:x="400" fg:w="1"/><text x="32.2244%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9744%" y="485" width="0.0799%" height="15" fill="rgb(229,134,44)" fg:x="400" fg:w="1"/><text x="32.2244%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="31.2550%" y="565" width="0.8793%" height="15" fill="rgb(208,71,4)" fg:x="391" fg:w="11"/><text x="31.5050%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="31.3349%" y="549" width="0.7994%" height="15" fill="rgb(221,205,45)" fg:x="392" fg:w="10"/><text x="31.5849%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.0544%" y="533" width="0.0799%" height="15" fill="rgb(215,132,38)" fg:x="401" fg:w="1"/><text x="32.3044%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.0544%" y="517" width="0.0799%" height="15" fill="rgb(227,158,6)" fg:x="401" fg:w="1"/><text x="32.3044%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0544%" y="501" width="0.0799%" height="15" fill="rgb(250,10,38)" fg:x="401" fg:w="1"/><text x="32.3044%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="31.1751%" y="597" width="1.0392%" height="15" fill="rgb(225,171,40)" fg:x="390" fg:w="13"/><text x="31.4251%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="31.1751%" y="581" width="1.0392%" height="15" fill="rgb(238,17,43)" fg:x="390" fg:w="13"/><text x="31.4251%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.1343%" y="565" width="0.0799%" height="15" fill="rgb(208,145,4)" fg:x="402" fg:w="1"/><text x="32.3843%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1343%" y="549" width="0.0799%" height="15" fill="rgb(232,82,7)" fg:x="402" fg:w="1"/><text x="32.3843%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.2142%" y="597" width="0.0799%" height="15" fill="rgb(205,166,38)" fg:x="403" fg:w="1"/><text x="32.4642%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2142%" y="581" width="0.0799%" height="15" fill="rgb(240,228,4)" fg:x="403" fg:w="1"/><text x="32.4642%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.52%)</title><rect x="31.0152%" y="629" width="1.5188%" height="15" fill="rgb(233,121,40)" fg:x="388" fg:w="19"/><text x="31.2652%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.52%)</title><rect x="31.0152%" y="613" width="1.5188%" height="15" fill="rgb(243,84,30)" fg:x="388" fg:w="19"/><text x="31.2652%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.2942%" y="597" width="0.2398%" height="15" fill="rgb(235,81,48)" fg:x="404" fg:w="3"/><text x="32.5442%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.2942%" y="581" width="0.2398%" height="15" fill="rgb(218,137,0)" fg:x="404" fg:w="3"/><text x="32.5442%" y="591.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="32.2942%" y="565" width="0.2398%" height="15" fill="rgb(223,151,48)" fg:x="404" fg:w="3"/><text x="32.5442%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="32.5340%" y="629" width="0.1599%" height="15" fill="rgb(247,30,19)" fg:x="407" fg:w="2"/><text x="32.7840%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="32.6139%" y="613" width="0.0799%" height="15" fill="rgb(205,129,29)" fg:x="408" fg:w="1"/><text x="32.8639%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (22 samples, 1.76%)</title><rect x="31.0152%" y="693" width="1.7586%" height="15" fill="rgb(222,29,2)" fg:x="388" fg:w="22"/><text x="31.2652%" y="703.50"></text></g><g><title>serde_json::de::from_trait (22 samples, 1.76%)</title><rect x="31.0152%" y="677" width="1.7586%" height="15" fill="rgb(232,145,33)" fg:x="388" fg:w="22"/><text x="31.2652%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.76%)</title><rect x="31.0152%" y="661" width="1.7586%" height="15" fill="rgb(217,30,31)" fg:x="388" fg:w="22"/><text x="31.2652%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.76%)</title><rect x="31.0152%" y="645" width="1.7586%" height="15" fill="rgb(243,22,52)" fg:x="388" fg:w="22"/><text x="31.2652%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6938%" y="629" width="0.0799%" height="15" fill="rgb(254,228,14)" fg:x="409" fg:w="1"/><text x="32.9438%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="33.1735%" y="629" width="0.0799%" height="15" fill="rgb(231,45,50)" fg:x="415" fg:w="1"/><text x="33.4235%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.1735%" y="613" width="0.0799%" height="15" fill="rgb(248,125,3)" fg:x="415" fg:w="1"/><text x="33.4235%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.1735%" y="597" width="0.0799%" height="15" fill="rgb(213,76,9)" fg:x="415" fg:w="1"/><text x="33.4235%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="33.0935%" y="645" width="0.3997%" height="15" fill="rgb(238,108,21)" fg:x="414" fg:w="5"/><text x="33.3435%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="33.2534%" y="629" width="0.2398%" height="15" fill="rgb(229,214,19)" fg:x="416" fg:w="3"/><text x="33.5034%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="33.2534%" y="613" width="0.2398%" height="15" fill="rgb(252,201,5)" fg:x="416" fg:w="3"/><text x="33.5034%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.80%)</title><rect x="32.7738%" y="677" width="0.7994%" height="15" fill="rgb(233,165,49)" fg:x="410" fg:w="10"/><text x="33.0238%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="32.8537%" y="661" width="0.7194%" height="15" fill="rgb(208,165,19)" fg:x="411" fg:w="9"/><text x="33.1037%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.4932%" y="645" width="0.0799%" height="15" fill="rgb(216,220,31)" fg:x="419" fg:w="1"/><text x="33.7432%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.5731%" y="677" width="0.0799%" height="15" fill="rgb(214,8,31)" fg:x="420" fg:w="1"/><text x="33.8231%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="33.6531%" y="677" width="0.0799%" height="15" fill="rgb(220,32,32)" fg:x="421" fg:w="1"/><text x="33.9031%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.6531%" y="661" width="0.0799%" height="15" fill="rgb(237,172,34)" fg:x="421" fg:w="1"/><text x="33.9031%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6531%" y="645" width="0.0799%" height="15" fill="rgb(240,209,5)" fg:x="421" fg:w="1"/><text x="33.9031%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.7330%" y="661" width="0.0799%" height="15" fill="rgb(221,219,1)" fg:x="422" fg:w="1"/><text x="33.9830%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.8129%" y="661" width="0.0799%" height="15" fill="rgb(237,90,36)" fg:x="423" fg:w="1"/><text x="34.0629%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.8129%" y="645" width="0.0799%" height="15" fill="rgb(245,14,51)" fg:x="423" fg:w="1"/><text x="34.0629%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8929%" y="661" width="0.0799%" height="15" fill="rgb(211,71,49)" fg:x="424" fg:w="1"/><text x="34.1429%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8929%" y="645" width="0.0799%" height="15" fill="rgb(230,223,9)" fg:x="424" fg:w="1"/><text x="34.1429%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="33.9728%" y="661" width="0.0799%" height="15" fill="rgb(212,33,31)" fg:x="425" fg:w="1"/><text x="34.2228%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.9728%" y="645" width="0.0799%" height="15" fill="rgb(218,141,5)" fg:x="425" fg:w="1"/><text x="34.2228%" y="655.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (146 samples, 11.67%)</title><rect x="22.4620%" y="741" width="11.6707%" height="15" fill="rgb(239,194,8)" fg:x="281" fg:w="146"/><text x="22.7120%" y="751.50">engine::internal:..</text></g><g><title>engine::session::SavesEntities::check_for_changes (145 samples, 11.59%)</title><rect x="22.5420%" y="725" width="11.5907%" height="15" fill="rgb(225,119,29)" fg:x="282" fg:w="145"/><text x="22.7920%" y="735.50">engine::session::..</text></g><g><title>kernel::compare::any_entity_changes (85 samples, 6.79%)</title><rect x="27.3381%" y="709" width="6.7946%" height="15" fill="rgb(233,32,3)" fg:x="342" fg:w="85"/><text x="27.5881%" y="719.50">kernel::c..</text></g><g><title>treediff::diff::diff (17 samples, 1.36%)</title><rect x="32.7738%" y="693" width="1.3589%" height="15" fill="rgb(248,126,40)" fg:x="410" fg:w="17"/><text x="33.0238%" y="703.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="33.7330%" y="677" width="0.3997%" height="15" fill="rgb(213,102,53)" fg:x="422" fg:w="5"/><text x="33.9830%" y="687.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="34.0528%" y="661" width="0.0799%" height="15" fill="rgb(212,69,15)" fg:x="426" fg:w="1"/><text x="34.3028%" y="671.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="34.0528%" y="645" width="0.0799%" height="15" fill="rgb(253,39,34)" fg:x="426" fg:w="1"/><text x="34.3028%" y="655.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="34.0528%" y="629" width="0.0799%" height="15" fill="rgb(205,189,54)" fg:x="426" fg:w="1"/><text x="34.3028%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.0528%" y="613" width="0.0799%" height="15" fill="rgb(234,229,45)" fg:x="426" fg:w="1"/><text x="34.3028%" y="623.50"></text></g><g><title>engine::session::Session::close (161 samples, 12.87%)</title><rect x="21.3429%" y="773" width="12.8697%" height="15" fill="rgb(243,79,48)" fg:x="267" fg:w="161"/><text x="21.5929%" y="783.50">engine::session::Se..</text></g><g><title>engine::session::Session::save_entity_changes (153 samples, 12.23%)</title><rect x="21.9824%" y="757" width="12.2302%" height="15" fill="rgb(206,71,50)" fg:x="275" fg:w="153"/><text x="22.2324%" y="767.50">engine::session::S..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="34.1327%" y="741" width="0.0799%" height="15" fill="rgb(209,32,17)" fg:x="427" fg:w="1"/><text x="34.3827%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="34.1327%" y="725" width="0.0799%" height="15" fill="rgb(219,229,6)" fg:x="427" fg:w="1"/><text x="34.3827%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="34.1327%" y="709" width="0.0799%" height="15" fill="rgb(226,25,27)" fg:x="427" fg:w="1"/><text x="34.3827%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.1327%" y="693" width="0.0799%" height="15" fill="rgb(218,185,23)" fg:x="427" fg:w="1"/><text x="34.3827%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.1327%" y="677" width="0.0799%" height="15" fill="rgb(242,123,5)" fg:x="427" fg:w="1"/><text x="34.3827%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.1327%" y="661" width="0.0799%" height="15" fill="rgb(215,53,19)" fg:x="427" fg:w="1"/><text x="34.3827%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.1327%" y="645" width="0.0799%" height="15" fill="rgb(233,20,30)" fg:x="427" fg:w="1"/><text x="34.3827%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.1327%" y="629" width="0.0799%" height="15" fill="rgb(209,67,20)" fg:x="427" fg:w="1"/><text x="34.3827%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.1327%" y="613" width="0.0799%" height="15" fill="rgb(227,181,50)" fg:x="427" fg:w="1"/><text x="34.3827%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.1327%" y="597" width="0.0799%" height="15" fill="rgb(252,75,38)" fg:x="427" fg:w="1"/><text x="34.3827%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.1327%" y="581" width="0.0799%" height="15" fill="rgb(235,9,33)" fg:x="427" fg:w="1"/><text x="34.3827%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.1327%" y="565" width="0.0799%" height="15" fill="rgb(208,87,30)" fg:x="427" fg:w="1"/><text x="34.3827%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.1327%" y="549" width="0.0799%" height="15" fill="rgb(215,199,39)" fg:x="427" fg:w="1"/><text x="34.3827%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="34.1327%" y="533" width="0.0799%" height="15" fill="rgb(246,208,12)" fg:x="427" fg:w="1"/><text x="34.3827%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="34.1327%" y="517" width="0.0799%" height="15" fill="rgb(206,195,10)" fg:x="427" fg:w="1"/><text x="34.3827%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="34.1327%" y="501" width="0.0799%" height="15" fill="rgb(244,1,30)" fg:x="427" fg:w="1"/><text x="34.3827%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="34.1327%" y="485" width="0.0799%" height="15" fill="rgb(230,83,5)" fg:x="427" fg:w="1"/><text x="34.3827%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="34.1327%" y="469" width="0.0799%" height="15" fill="rgb(239,62,17)" fg:x="427" fg:w="1"/><text x="34.3827%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="34.1327%" y="453" width="0.0799%" height="15" fill="rgb(252,193,41)" fg:x="427" fg:w="1"/><text x="34.3827%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.1327%" y="437" width="0.0799%" height="15" fill="rgb(216,142,19)" fg:x="427" fg:w="1"/><text x="34.3827%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="34.1327%" y="421" width="0.0799%" height="15" fill="rgb(240,81,38)" fg:x="427" fg:w="1"/><text x="34.3827%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.1327%" y="405" width="0.0799%" height="15" fill="rgb(240,109,40)" fg:x="427" fg:w="1"/><text x="34.3827%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="34.1327%" y="389" width="0.0799%" height="15" fill="rgb(230,123,10)" fg:x="427" fg:w="1"/><text x="34.3827%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="34.1327%" y="373" width="0.0799%" height="15" fill="rgb(253,42,32)" fg:x="427" fg:w="1"/><text x="34.3827%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="34.1327%" y="357" width="0.0799%" height="15" fill="rgb(218,154,8)" fg:x="427" fg:w="1"/><text x="34.3827%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.1327%" y="341" width="0.0799%" height="15" fill="rgb(216,197,10)" fg:x="427" fg:w="1"/><text x="34.3827%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="34.2926%" y="725" width="0.0799%" height="15" fill="rgb(223,107,12)" fg:x="429" fg:w="1"/><text x="34.5426%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.2926%" y="709" width="0.0799%" height="15" fill="rgb(241,174,42)" fg:x="429" fg:w="1"/><text x="34.5426%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.8521%" y="565" width="0.0799%" height="15" fill="rgb(231,78,20)" fg:x="436" fg:w="1"/><text x="35.1021%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.72%)</title><rect x="34.9321%" y="565" width="0.7194%" height="15" fill="rgb(230,208,49)" fg:x="437" fg:w="9"/><text x="35.1821%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.72%)</title><rect x="34.9321%" y="549" width="0.7194%" height="15" fill="rgb(238,11,34)" fg:x="437" fg:w="9"/><text x="35.1821%" y="559.50"></text></g><g><title>realloc (9 samples, 0.72%)</title><rect x="34.9321%" y="533" width="0.7194%" height="15" fill="rgb(210,130,26)" fg:x="437" fg:w="9"/><text x="35.1821%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="35.6515%" y="565" width="0.1599%" height="15" fill="rgb(242,131,11)" fg:x="446" fg:w="2"/><text x="35.9015%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.8114%" y="517" width="0.0799%" height="15" fill="rgb(237,38,28)" fg:x="448" fg:w="1"/><text x="36.0614%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.8114%" y="501" width="0.0799%" height="15" fill="rgb(244,180,43)" fg:x="448" fg:w="1"/><text x="36.0614%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.9712%" y="485" width="0.0799%" height="15" fill="rgb(214,171,19)" fg:x="450" fg:w="1"/><text x="36.2212%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.9712%" y="469" width="0.0799%" height="15" fill="rgb(252,101,45)" fg:x="450" fg:w="1"/><text x="36.2212%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (17 samples, 1.36%)</title><rect x="34.8521%" y="581" width="1.3589%" height="15" fill="rgb(211,96,33)" fg:x="436" fg:w="17"/><text x="35.1021%" y="591.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.40%)</title><rect x="35.8114%" y="565" width="0.3997%" height="15" fill="rgb(207,80,25)" fg:x="448" fg:w="5"/><text x="36.0614%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="35.8114%" y="549" width="0.3997%" height="15" fill="rgb(225,15,35)" fg:x="448" fg:w="5"/><text x="36.0614%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="35.8114%" y="533" width="0.3997%" height="15" fill="rgb(214,93,43)" fg:x="448" fg:w="5"/><text x="36.0614%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="35.8913%" y="517" width="0.3197%" height="15" fill="rgb(248,42,37)" fg:x="449" fg:w="4"/><text x="36.1413%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="35.8913%" y="501" width="0.3197%" height="15" fill="rgb(217,135,32)" fg:x="449" fg:w="4"/><text x="36.1413%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="36.0512%" y="485" width="0.1599%" height="15" fill="rgb(216,74,28)" fg:x="451" fg:w="2"/><text x="36.3012%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="36.0512%" y="469" width="0.1599%" height="15" fill="rgb(247,108,16)" fg:x="451" fg:w="2"/><text x="36.3012%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="36.0512%" y="453" width="0.1599%" height="15" fill="rgb(205,219,30)" fg:x="451" fg:w="2"/><text x="36.3012%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.0512%" y="437" width="0.1599%" height="15" fill="rgb(241,122,9)" fg:x="451" fg:w="2"/><text x="36.3012%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.0512%" y="421" width="0.1599%" height="15" fill="rgb(216,148,50)" fg:x="451" fg:w="2"/><text x="36.3012%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1311%" y="405" width="0.0799%" height="15" fill="rgb(226,154,2)" fg:x="452" fg:w="1"/><text x="36.3811%" y="415.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2110%" y="549" width="0.0799%" height="15" fill="rgb(220,128,1)" fg:x="453" fg:w="1"/><text x="36.4610%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2110%" y="533" width="0.0799%" height="15" fill="rgb(245,185,29)" fg:x="453" fg:w="1"/><text x="36.4610%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2110%" y="517" width="0.0799%" height="15" fill="rgb(243,161,2)" fg:x="453" fg:w="1"/><text x="36.4610%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.2110%" y="501" width="0.0799%" height="15" fill="rgb(249,215,17)" fg:x="453" fg:w="1"/><text x="36.4610%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.2110%" y="485" width="0.0799%" height="15" fill="rgb(237,67,11)" fg:x="453" fg:w="1"/><text x="36.4610%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.2110%" y="469" width="0.0799%" height="15" fill="rgb(239,17,24)" fg:x="453" fg:w="1"/><text x="36.4610%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2110%" y="453" width="0.0799%" height="15" fill="rgb(215,97,29)" fg:x="453" fg:w="1"/><text x="36.4610%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2110%" y="437" width="0.0799%" height="15" fill="rgb(253,228,42)" fg:x="453" fg:w="1"/><text x="36.4610%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="36.2110%" y="565" width="0.3197%" height="15" fill="rgb(240,85,2)" fg:x="453" fg:w="4"/><text x="36.4610%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="36.2910%" y="549" width="0.2398%" height="15" fill="rgb(214,155,4)" fg:x="454" fg:w="3"/><text x="36.5410%" y="559.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="36.5308%" y="501" width="0.0799%" height="15" fill="rgb(247,120,22)" fg:x="457" fg:w="1"/><text x="36.7808%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6906%" y="437" width="0.0799%" height="15" fill="rgb(211,208,6)" fg:x="459" fg:w="1"/><text x="36.9406%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6906%" y="421" width="0.0799%" height="15" fill="rgb(235,99,41)" fg:x="459" fg:w="1"/><text x="36.9406%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6906%" y="405" width="0.0799%" height="15" fill="rgb(223,28,8)" fg:x="459" fg:w="1"/><text x="36.9406%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="36.6906%" y="389" width="0.0799%" height="15" fill="rgb(212,71,20)" fg:x="459" fg:w="1"/><text x="36.9406%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="36.6906%" y="373" width="0.0799%" height="15" fill="rgb(206,85,3)" fg:x="459" fg:w="1"/><text x="36.9406%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="36.6107%" y="469" width="0.2398%" height="15" fill="rgb(244,180,11)" fg:x="458" fg:w="3"/><text x="36.8607%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="36.6107%" y="453" width="0.2398%" height="15" fill="rgb(223,16,21)" fg:x="458" fg:w="3"/><text x="36.8607%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7706%" y="437" width="0.0799%" height="15" fill="rgb(238,85,42)" fg:x="460" fg:w="1"/><text x="37.0206%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8505%" y="469" width="0.0799%" height="15" fill="rgb(205,85,8)" fg:x="461" fg:w="1"/><text x="37.1005%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8505%" y="453" width="0.0799%" height="15" fill="rgb(217,190,15)" fg:x="461" fg:w="1"/><text x="37.1005%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8505%" y="437" width="0.0799%" height="15" fill="rgb(243,192,23)" fg:x="461" fg:w="1"/><text x="37.1005%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8505%" y="421" width="0.0799%" height="15" fill="rgb(223,220,37)" fg:x="461" fg:w="1"/><text x="37.1005%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.8505%" y="405" width="0.0799%" height="15" fill="rgb(208,41,17)" fg:x="461" fg:w="1"/><text x="37.1005%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8505%" y="389" width="0.0799%" height="15" fill="rgb(224,188,7)" fg:x="461" fg:w="1"/><text x="37.1005%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8505%" y="373" width="0.0799%" height="15" fill="rgb(236,16,50)" fg:x="461" fg:w="1"/><text x="37.1005%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8505%" y="357" width="0.0799%" height="15" fill="rgb(238,6,24)" fg:x="461" fg:w="1"/><text x="37.1005%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::name (6 samples, 0.48%)</title><rect x="36.5308%" y="533" width="0.4796%" height="15" fill="rgb(253,67,45)" fg:x="457" fg:w="6"/><text x="36.7808%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="36.5308%" y="517" width="0.4796%" height="15" fill="rgb(210,89,32)" fg:x="457" fg:w="6"/><text x="36.7808%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.40%)</title><rect x="36.6107%" y="501" width="0.3997%" height="15" fill="rgb(208,89,9)" fg:x="458" fg:w="5"/><text x="36.8607%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="36.6107%" y="485" width="0.3997%" height="15" fill="rgb(222,180,44)" fg:x="458" fg:w="5"/><text x="36.8607%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="36.9305%" y="469" width="0.0799%" height="15" fill="rgb(250,181,46)" fg:x="462" fg:w="1"/><text x="37.1805%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="36.9305%" y="453" width="0.0799%" height="15" fill="rgb(210,190,26)" fg:x="462" fg:w="1"/><text x="37.1805%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (28 samples, 2.24%)</title><rect x="34.8521%" y="613" width="2.2382%" height="15" fill="rgb(253,49,13)" fg:x="436" fg:w="28"/><text x="35.1021%" y="623.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (28 samples, 2.24%)</title><rect x="34.8521%" y="597" width="2.2382%" height="15" fill="rgb(240,184,42)" fg:x="436" fg:w="28"/><text x="35.1021%" y="607.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (11 samples, 0.88%)</title><rect x="36.2110%" y="581" width="0.8793%" height="15" fill="rgb(246,59,37)" fg:x="453" fg:w="11"/><text x="36.4610%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (7 samples, 0.56%)</title><rect x="36.5308%" y="565" width="0.5596%" height="15" fill="rgb(207,134,54)" fg:x="457" fg:w="7"/><text x="36.7808%" y="575.50"></text></g><g><title>plugins_core::finding::matches_description (7 samples, 0.56%)</title><rect x="36.5308%" y="549" width="0.5596%" height="15" fill="rgb(250,122,24)" fg:x="457" fg:w="7"/><text x="36.7808%" y="559.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="37.0104%" y="533" width="0.0799%" height="15" fill="rgb(239,206,3)" fg:x="463" fg:w="1"/><text x="37.2604%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="37.0104%" y="517" width="0.0799%" height="15" fill="rgb(253,220,32)" fg:x="463" fg:w="1"/><text x="37.2604%" y="527.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="37.0104%" y="501" width="0.0799%" height="15" fill="rgb(209,217,48)" fg:x="463" fg:w="1"/><text x="37.2604%" y="511.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="37.0104%" y="485" width="0.0799%" height="15" fill="rgb(242,91,39)" fg:x="463" fg:w="1"/><text x="37.2604%" y="495.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.08%)</title><rect x="37.0104%" y="469" width="0.0799%" height="15" fill="rgb(228,4,13)" fg:x="463" fg:w="1"/><text x="37.2604%" y="479.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="37.0903%" y="613" width="0.1599%" height="15" fill="rgb(223,133,4)" fg:x="464" fg:w="2"/><text x="37.3403%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.0903%" y="597" width="0.1599%" height="15" fill="rgb(215,105,30)" fg:x="464" fg:w="2"/><text x="37.3403%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.0903%" y="581" width="0.1599%" height="15" fill="rgb(230,9,4)" fg:x="464" fg:w="2"/><text x="37.3403%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.0903%" y="565" width="0.1599%" height="15" fill="rgb(248,15,2)" fg:x="464" fg:w="2"/><text x="37.3403%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="37.0903%" y="549" width="0.1599%" height="15" fill="rgb(208,210,22)" fg:x="464" fg:w="2"/><text x="37.3403%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="37.0903%" y="533" width="0.1599%" height="15" fill="rgb(208,112,41)" fg:x="464" fg:w="2"/><text x="37.3403%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="37.0903%" y="517" width="0.1599%" height="15" fill="rgb(232,83,14)" fg:x="464" fg:w="2"/><text x="37.3403%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.1703%" y="501" width="0.0799%" height="15" fill="rgb(229,65,11)" fg:x="465" fg:w="1"/><text x="37.4203%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.1703%" y="485" width="0.0799%" height="15" fill="rgb(228,126,24)" fg:x="465" fg:w="1"/><text x="37.4203%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.1703%" y="469" width="0.0799%" height="15" fill="rgb(218,66,33)" fg:x="465" fg:w="1"/><text x="37.4203%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.1703%" y="453" width="0.0799%" height="15" fill="rgb(251,49,52)" fg:x="465" fg:w="1"/><text x="37.4203%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.1703%" y="437" width="0.0799%" height="15" fill="rgb(219,46,37)" fg:x="465" fg:w="1"/><text x="37.4203%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.1703%" y="421" width="0.0799%" height="15" fill="rgb(213,53,49)" fg:x="465" fg:w="1"/><text x="37.4203%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1703%" y="405" width="0.0799%" height="15" fill="rgb(214,134,1)" fg:x="465" fg:w="1"/><text x="37.4203%" y="415.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="37.2502%" y="613" width="0.0799%" height="15" fill="rgb(208,139,43)" fg:x="466" fg:w="1"/><text x="37.5002%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="37.2502%" y="597" width="0.0799%" height="15" fill="rgb(231,105,35)" fg:x="466" fg:w="1"/><text x="37.5002%" y="607.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="37.2502%" y="581" width="0.0799%" height="15" fill="rgb(247,189,9)" fg:x="466" fg:w="1"/><text x="37.5002%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.2502%" y="565" width="0.0799%" height="15" fill="rgb(252,48,51)" fg:x="466" fg:w="1"/><text x="37.5002%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="37.3301%" y="597" width="0.0799%" height="15" fill="rgb(209,121,1)" fg:x="467" fg:w="1"/><text x="37.5801%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="37.3301%" y="581" width="0.0799%" height="15" fill="rgb(231,40,26)" fg:x="467" fg:w="1"/><text x="37.5801%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="37.3301%" y="565" width="0.0799%" height="15" fill="rgb(251,8,13)" fg:x="467" fg:w="1"/><text x="37.5801%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.3301%" y="549" width="0.0799%" height="15" fill="rgb(231,110,2)" fg:x="467" fg:w="1"/><text x="37.5801%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="37.4101%" y="597" width="0.0799%" height="15" fill="rgb(216,153,22)" fg:x="468" fg:w="1"/><text x="37.6601%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="37.4101%" y="581" width="0.0799%" height="15" fill="rgb(249,116,49)" fg:x="468" fg:w="1"/><text x="37.6601%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.4101%" y="565" width="0.0799%" height="15" fill="rgb(230,89,2)" fg:x="468" fg:w="1"/><text x="37.6601%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="37.4900%" y="565" width="0.0799%" height="15" fill="rgb(231,125,23)" fg:x="469" fg:w="1"/><text x="37.7400%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="37.4900%" y="549" width="0.0799%" height="15" fill="rgb(212,217,18)" fg:x="469" fg:w="1"/><text x="37.7400%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="37.4900%" y="533" width="0.0799%" height="15" fill="rgb(210,21,33)" fg:x="469" fg:w="1"/><text x="37.7400%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.4900%" y="517" width="0.0799%" height="15" fill="rgb(241,97,9)" fg:x="469" fg:w="1"/><text x="37.7400%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.4900%" y="501" width="0.0799%" height="15" fill="rgb(221,35,31)" fg:x="469" fg:w="1"/><text x="37.7400%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="37.4900%" y="597" width="0.1599%" height="15" fill="rgb(251,23,23)" fg:x="469" fg:w="2"/><text x="37.7400%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="37.4900%" y="581" width="0.1599%" height="15" fill="rgb(227,165,2)" fg:x="469" fg:w="2"/><text x="37.7400%" y="591.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="37.5699%" y="565" width="0.0799%" height="15" fill="rgb(242,24,2)" fg:x="470" fg:w="1"/><text x="37.8199%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="37.5699%" y="549" width="0.0799%" height="15" fill="rgb(242,138,51)" fg:x="470" fg:w="1"/><text x="37.8199%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="37.5699%" y="533" width="0.0799%" height="15" fill="rgb(220,219,5)" fg:x="470" fg:w="1"/><text x="37.8199%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.5699%" y="517" width="0.0799%" height="15" fill="rgb(247,53,29)" fg:x="470" fg:w="1"/><text x="37.8199%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.5699%" y="501" width="0.0799%" height="15" fill="rgb(233,43,39)" fg:x="470" fg:w="1"/><text x="37.8199%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.5699%" y="485" width="0.0799%" height="15" fill="rgb(230,128,54)" fg:x="470" fg:w="1"/><text x="37.8199%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.5699%" y="469" width="0.0799%" height="15" fill="rgb(218,20,12)" fg:x="470" fg:w="1"/><text x="37.8199%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.5699%" y="453" width="0.0799%" height="15" fill="rgb(206,51,14)" fg:x="470" fg:w="1"/><text x="37.8199%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.5699%" y="437" width="0.0799%" height="15" fill="rgb(223,16,35)" fg:x="470" fg:w="1"/><text x="37.8199%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.5699%" y="421" width="0.0799%" height="15" fill="rgb(226,165,37)" fg:x="470" fg:w="1"/><text x="37.8199%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.5699%" y="405" width="0.0799%" height="15" fill="rgb(240,26,21)" fg:x="470" fg:w="1"/><text x="37.8199%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.5699%" y="389" width="0.0799%" height="15" fill="rgb(240,72,46)" fg:x="470" fg:w="1"/><text x="37.8199%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.5699%" y="373" width="0.0799%" height="15" fill="rgb(211,33,41)" fg:x="470" fg:w="1"/><text x="37.8199%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.5699%" y="357" width="0.0799%" height="15" fill="rgb(224,157,46)" fg:x="470" fg:w="1"/><text x="37.8199%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.5699%" y="341" width="0.0799%" height="15" fill="rgb(223,59,19)" fg:x="470" fg:w="1"/><text x="37.8199%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.5699%" y="325" width="0.0799%" height="15" fill="rgb(239,187,1)" fg:x="470" fg:w="1"/><text x="37.8199%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.5699%" y="309" width="0.0799%" height="15" fill="rgb(226,95,9)" fg:x="470" fg:w="1"/><text x="37.8199%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.5699%" y="293" width="0.0799%" height="15" fill="rgb(234,61,54)" fg:x="470" fg:w="1"/><text x="37.8199%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.5699%" y="277" width="0.0799%" height="15" fill="rgb(205,209,47)" fg:x="470" fg:w="1"/><text x="37.8199%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5699%" y="261" width="0.0799%" height="15" fill="rgb(228,7,43)" fg:x="470" fg:w="1"/><text x="37.8199%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.6499%" y="565" width="0.0799%" height="15" fill="rgb(240,217,52)" fg:x="471" fg:w="1"/><text x="37.8999%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6499%" y="549" width="0.0799%" height="15" fill="rgb(211,178,21)" fg:x="471" fg:w="1"/><text x="37.8999%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.6499%" y="533" width="0.0799%" height="15" fill="rgb(205,25,34)" fg:x="471" fg:w="1"/><text x="37.8999%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="37.6499%" y="597" width="0.1599%" height="15" fill="rgb(209,57,11)" fg:x="471" fg:w="2"/><text x="37.8999%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="37.6499%" y="581" width="0.1599%" height="15" fill="rgb(221,99,2)" fg:x="471" fg:w="2"/><text x="37.8999%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7298%" y="565" width="0.0799%" height="15" fill="rgb(232,79,22)" fg:x="472" fg:w="1"/><text x="37.9798%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7298%" y="549" width="0.0799%" height="15" fill="rgb(221,145,32)" fg:x="472" fg:w="1"/><text x="37.9798%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="37.7298%" y="533" width="0.0799%" height="15" fill="rgb(236,133,36)" fg:x="472" fg:w="1"/><text x="37.9798%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="37.7298%" y="517" width="0.0799%" height="15" fill="rgb(208,224,44)" fg:x="472" fg:w="1"/><text x="37.9798%" y="527.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="37.7298%" y="501" width="0.0799%" height="15" fill="rgb(235,143,15)" fg:x="472" fg:w="1"/><text x="37.9798%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.8098%" y="533" width="0.0799%" height="15" fill="rgb(249,83,27)" fg:x="473" fg:w="1"/><text x="38.0598%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="37.8098%" y="565" width="0.1599%" height="15" fill="rgb(238,226,19)" fg:x="473" fg:w="2"/><text x="38.0598%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="37.8098%" y="549" width="0.1599%" height="15" fill="rgb(226,206,27)" fg:x="473" fg:w="2"/><text x="38.0598%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.8897%" y="533" width="0.0799%" height="15" fill="rgb(251,182,9)" fg:x="474" fg:w="1"/><text x="38.1397%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="37.8897%" y="517" width="0.0799%" height="15" fill="rgb(212,140,41)" fg:x="474" fg:w="1"/><text x="38.1397%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.8897%" y="501" width="0.0799%" height="15" fill="rgb(220,106,18)" fg:x="474" fg:w="1"/><text x="38.1397%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.8897%" y="485" width="0.0799%" height="15" fill="rgb(252,46,41)" fg:x="474" fg:w="1"/><text x="38.1397%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="37.9696%" y="565" width="0.0799%" height="15" fill="rgb(209,222,15)" fg:x="475" fg:w="1"/><text x="38.2196%" y="575.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.40%)</title><rect x="37.8098%" y="597" width="0.3997%" height="15" fill="rgb(233,83,50)" fg:x="473" fg:w="5"/><text x="38.0598%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.40%)</title><rect x="37.8098%" y="581" width="0.3997%" height="15" fill="rgb(205,212,0)" fg:x="473" fg:w="5"/><text x="38.0598%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="38.0496%" y="565" width="0.1599%" height="15" fill="rgb(235,117,51)" fg:x="476" fg:w="2"/><text x="38.2996%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="38.0496%" y="549" width="0.1599%" height="15" fill="rgb(233,133,48)" fg:x="476" fg:w="2"/><text x="38.2996%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="38.0496%" y="533" width="0.1599%" height="15" fill="rgb(219,3,2)" fg:x="476" fg:w="2"/><text x="38.2996%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="38.0496%" y="517" width="0.1599%" height="15" fill="rgb(225,80,52)" fg:x="476" fg:w="2"/><text x="38.2996%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="38.0496%" y="501" width="0.1599%" height="15" fill="rgb(235,195,42)" fg:x="476" fg:w="2"/><text x="38.2996%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.0496%" y="485" width="0.1599%" height="15" fill="rgb(240,207,46)" fg:x="476" fg:w="2"/><text x="38.2996%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="38.2894%" y="581" width="0.0799%" height="15" fill="rgb(236,112,50)" fg:x="479" fg:w="1"/><text x="38.5394%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="38.2894%" y="565" width="0.0799%" height="15" fill="rgb(249,151,27)" fg:x="479" fg:w="1"/><text x="38.5394%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="38.2894%" y="549" width="0.0799%" height="15" fill="rgb(253,223,52)" fg:x="479" fg:w="1"/><text x="38.5394%" y="559.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="38.2894%" y="533" width="0.0799%" height="15" fill="rgb(215,55,33)" fg:x="479" fg:w="1"/><text x="38.5394%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="38.2894%" y="517" width="0.0799%" height="15" fill="rgb(207,24,17)" fg:x="479" fg:w="1"/><text x="38.5394%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="38.2894%" y="501" width="0.0799%" height="15" fill="rgb(218,169,32)" fg:x="479" fg:w="1"/><text x="38.5394%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.2894%" y="485" width="0.0799%" height="15" fill="rgb(209,210,6)" fg:x="479" fg:w="1"/><text x="38.5394%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.2894%" y="469" width="0.0799%" height="15" fill="rgb(225,208,8)" fg:x="479" fg:w="1"/><text x="38.5394%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.2894%" y="453" width="0.0799%" height="15" fill="rgb(238,14,32)" fg:x="479" fg:w="1"/><text x="38.5394%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.2894%" y="437" width="0.0799%" height="15" fill="rgb(211,137,3)" fg:x="479" fg:w="1"/><text x="38.5394%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.2894%" y="421" width="0.0799%" height="15" fill="rgb(207,171,19)" fg:x="479" fg:w="1"/><text x="38.5394%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.2894%" y="405" width="0.0799%" height="15" fill="rgb(250,80,8)" fg:x="479" fg:w="1"/><text x="38.5394%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.2894%" y="389" width="0.0799%" height="15" fill="rgb(209,103,53)" fg:x="479" fg:w="1"/><text x="38.5394%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.2894%" y="373" width="0.0799%" height="15" fill="rgb(233,198,10)" fg:x="479" fg:w="1"/><text x="38.5394%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.2894%" y="357" width="0.0799%" height="15" fill="rgb(236,125,25)" fg:x="479" fg:w="1"/><text x="38.5394%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="38.2894%" y="341" width="0.0799%" height="15" fill="rgb(254,182,48)" fg:x="479" fg:w="1"/><text x="38.5394%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="38.2894%" y="325" width="0.0799%" height="15" fill="rgb(216,108,44)" fg:x="479" fg:w="1"/><text x="38.5394%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="38.2894%" y="309" width="0.0799%" height="15" fill="rgb(222,72,39)" fg:x="479" fg:w="1"/><text x="38.5394%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="38.2894%" y="293" width="0.0799%" height="15" fill="rgb(252,70,39)" fg:x="479" fg:w="1"/><text x="38.5394%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.2894%" y="277" width="0.0799%" height="15" fill="rgb(243,99,34)" fg:x="479" fg:w="1"/><text x="38.5394%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3693%" y="501" width="0.0799%" height="15" fill="rgb(252,109,12)" fg:x="480" fg:w="1"/><text x="38.6193%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3693%" y="485" width="0.0799%" height="15" fill="rgb(211,186,10)" fg:x="480" fg:w="1"/><text x="38.6193%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3693%" y="469" width="0.0799%" height="15" fill="rgb(246,90,8)" fg:x="480" fg:w="1"/><text x="38.6193%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3693%" y="453" width="0.0799%" height="15" fill="rgb(226,91,24)" fg:x="480" fg:w="1"/><text x="38.6193%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3693%" y="437" width="0.0799%" height="15" fill="rgb(216,28,44)" fg:x="480" fg:w="1"/><text x="38.6193%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3693%" y="421" width="0.0799%" height="15" fill="rgb(229,36,0)" fg:x="480" fg:w="1"/><text x="38.6193%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.3693%" y="405" width="0.0799%" height="15" fill="rgb(245,97,18)" fg:x="480" fg:w="1"/><text x="38.6193%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.3693%" y="389" width="0.0799%" height="15" fill="rgb(241,97,54)" fg:x="480" fg:w="1"/><text x="38.6193%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.3693%" y="373" width="0.0799%" height="15" fill="rgb(234,125,17)" fg:x="480" fg:w="1"/><text x="38.6193%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3693%" y="357" width="0.0799%" height="15" fill="rgb(228,172,39)" fg:x="480" fg:w="1"/><text x="38.6193%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3693%" y="341" width="0.0799%" height="15" fill="rgb(227,169,1)" fg:x="480" fg:w="1"/><text x="38.6193%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.3693%" y="325" width="0.0799%" height="15" fill="rgb(206,13,35)" fg:x="480" fg:w="1"/><text x="38.6193%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.3693%" y="309" width="0.0799%" height="15" fill="rgb(211,117,30)" fg:x="480" fg:w="1"/><text x="38.6193%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.3693%" y="293" width="0.0799%" height="15" fill="rgb(230,198,4)" fg:x="480" fg:w="1"/><text x="38.6193%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.3693%" y="277" width="0.0799%" height="15" fill="rgb(213,87,54)" fg:x="480" fg:w="1"/><text x="38.6193%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3693%" y="261" width="0.0799%" height="15" fill="rgb(248,43,22)" fg:x="480" fg:w="1"/><text x="38.6193%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4492%" y="469" width="0.0799%" height="15" fill="rgb(213,175,48)" fg:x="481" fg:w="1"/><text x="38.6992%" y="479.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="38.3693%" y="549" width="0.3197%" height="15" fill="rgb(252,55,9)" fg:x="480" fg:w="4"/><text x="38.6193%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="38.3693%" y="533" width="0.3197%" height="15" fill="rgb(231,72,33)" fg:x="480" fg:w="4"/><text x="38.6193%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="38.3693%" y="517" width="0.3197%" height="15" fill="rgb(213,2,54)" fg:x="480" fg:w="4"/><text x="38.6193%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="38.4492%" y="501" width="0.2398%" height="15" fill="rgb(208,88,25)" fg:x="481" fg:w="3"/><text x="38.6992%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.4492%" y="485" width="0.2398%" height="15" fill="rgb(215,117,13)" fg:x="481" fg:w="3"/><text x="38.6992%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.5292%" y="469" width="0.1599%" height="15" fill="rgb(243,147,21)" fg:x="482" fg:w="2"/><text x="38.7792%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.5292%" y="453" width="0.1599%" height="15" fill="rgb(208,215,36)" fg:x="482" fg:w="2"/><text x="38.7792%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.5292%" y="437" width="0.1599%" height="15" fill="rgb(238,187,24)" fg:x="482" fg:w="2"/><text x="38.7792%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.5292%" y="421" width="0.1599%" height="15" fill="rgb(214,173,11)" fg:x="482" fg:w="2"/><text x="38.7792%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.5292%" y="405" width="0.1599%" height="15" fill="rgb(222,71,20)" fg:x="482" fg:w="2"/><text x="38.7792%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.5292%" y="389" width="0.1599%" height="15" fill="rgb(242,125,4)" fg:x="482" fg:w="2"/><text x="38.7792%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.6091%" y="373" width="0.0799%" height="15" fill="rgb(217,101,52)" fg:x="483" fg:w="1"/><text x="38.8591%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.6890%" y="501" width="0.0799%" height="15" fill="rgb(223,2,50)" fg:x="484" fg:w="1"/><text x="38.9390%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8489%" y="373" width="0.0799%" height="15" fill="rgb(225,197,9)" fg:x="486" fg:w="1"/><text x="39.0989%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.80%)</title><rect x="38.2094%" y="597" width="0.7994%" height="15" fill="rgb(234,76,27)" fg:x="478" fg:w="10"/><text x="38.4594%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="38.3693%" y="581" width="0.6395%" height="15" fill="rgb(213,161,26)" fg:x="480" fg:w="8"/><text x="38.6193%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="38.3693%" y="565" width="0.6395%" height="15" fill="rgb(210,228,2)" fg:x="480" fg:w="8"/><text x="38.6193%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="38.6890%" y="549" width="0.3197%" height="15" fill="rgb(235,4,16)" fg:x="484" fg:w="4"/><text x="38.9390%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="38.6890%" y="533" width="0.3197%" height="15" fill="rgb(235,83,42)" fg:x="484" fg:w="4"/><text x="38.9390%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="38.6890%" y="517" width="0.3197%" height="15" fill="rgb(207,116,39)" fg:x="484" fg:w="4"/><text x="38.9390%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="38.7690%" y="501" width="0.2398%" height="15" fill="rgb(253,206,9)" fg:x="485" fg:w="3"/><text x="39.0190%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.7690%" y="485" width="0.2398%" height="15" fill="rgb(234,32,47)" fg:x="485" fg:w="3"/><text x="39.0190%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="38.7690%" y="469" width="0.2398%" height="15" fill="rgb(247,40,39)" fg:x="485" fg:w="3"/><text x="39.0190%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.7690%" y="453" width="0.2398%" height="15" fill="rgb(236,199,13)" fg:x="485" fg:w="3"/><text x="39.0190%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="38.7690%" y="437" width="0.2398%" height="15" fill="rgb(240,127,44)" fg:x="485" fg:w="3"/><text x="39.0190%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.7690%" y="421" width="0.2398%" height="15" fill="rgb(248,220,47)" fg:x="485" fg:w="3"/><text x="39.0190%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="38.7690%" y="405" width="0.2398%" height="15" fill="rgb(240,78,9)" fg:x="485" fg:w="3"/><text x="39.0190%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.7690%" y="389" width="0.2398%" height="15" fill="rgb(245,119,5)" fg:x="485" fg:w="3"/><text x="39.0190%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.9289%" y="373" width="0.0799%" height="15" fill="rgb(238,175,31)" fg:x="487" fg:w="1"/><text x="39.1789%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.9289%" y="357" width="0.0799%" height="15" fill="rgb(232,140,42)" fg:x="487" fg:w="1"/><text x="39.1789%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.9289%" y="341" width="0.0799%" height="15" fill="rgb(218,179,7)" fg:x="487" fg:w="1"/><text x="39.1789%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (55 samples, 4.40%)</title><rect x="34.6922%" y="629" width="4.3965%" height="15" fill="rgb(232,79,27)" fg:x="434" fg:w="55"/><text x="34.9422%" y="639.50">&lt;plug..</text></g><g><title>plugins_core::tools::move_between (22 samples, 1.76%)</title><rect x="37.3301%" y="613" width="1.7586%" height="15" fill="rgb(247,11,19)" fg:x="467" fg:w="22"/><text x="37.5801%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="39.0088%" y="597" width="0.0799%" height="15" fill="rgb(216,171,54)" fg:x="488" fg:w="1"/><text x="39.2588%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="39.0088%" y="581" width="0.0799%" height="15" fill="rgb(233,158,36)" fg:x="488" fg:w="1"/><text x="39.2588%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="39.0088%" y="565" width="0.0799%" height="15" fill="rgb(215,48,47)" fg:x="488" fg:w="1"/><text x="39.2588%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="39.0088%" y="549" width="0.0799%" height="15" fill="rgb(230,223,15)" fg:x="488" fg:w="1"/><text x="39.2588%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0088%" y="533" width="0.0799%" height="15" fill="rgb(234,49,19)" fg:x="488" fg:w="1"/><text x="39.2588%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="39.2486%" y="581" width="0.0799%" height="15" fill="rgb(232,89,25)" fg:x="491" fg:w="1"/><text x="39.4986%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="39.2486%" y="565" width="0.0799%" height="15" fill="rgb(237,206,28)" fg:x="491" fg:w="1"/><text x="39.4986%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.3285%" y="565" width="0.1599%" height="15" fill="rgb(249,68,37)" fg:x="492" fg:w="2"/><text x="39.5785%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.3285%" y="549" width="0.1599%" height="15" fill="rgb(226,99,43)" fg:x="492" fg:w="2"/><text x="39.5785%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.3285%" y="533" width="0.1599%" height="15" fill="rgb(216,46,28)" fg:x="492" fg:w="2"/><text x="39.5785%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.3285%" y="517" width="0.1599%" height="15" fill="rgb(216,33,9)" fg:x="492" fg:w="2"/><text x="39.5785%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="39.3285%" y="501" width="0.1599%" height="15" fill="rgb(216,129,4)" fg:x="492" fg:w="2"/><text x="39.5785%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="39.3285%" y="485" width="0.1599%" height="15" fill="rgb(216,106,3)" fg:x="492" fg:w="2"/><text x="39.5785%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="39.3285%" y="469" width="0.1599%" height="15" fill="rgb(217,79,45)" fg:x="492" fg:w="2"/><text x="39.5785%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.3285%" y="453" width="0.1599%" height="15" fill="rgb(239,98,13)" fg:x="492" fg:w="2"/><text x="39.5785%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.3285%" y="437" width="0.1599%" height="15" fill="rgb(221,115,4)" fg:x="492" fg:w="2"/><text x="39.5785%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="39.3285%" y="421" width="0.1599%" height="15" fill="rgb(215,85,0)" fg:x="492" fg:w="2"/><text x="39.5785%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="39.3285%" y="405" width="0.1599%" height="15" fill="rgb(230,62,15)" fg:x="492" fg:w="2"/><text x="39.5785%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="39.3285%" y="389" width="0.1599%" height="15" fill="rgb(247,162,2)" fg:x="492" fg:w="2"/><text x="39.5785%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="39.3285%" y="373" width="0.1599%" height="15" fill="rgb(212,112,32)" fg:x="492" fg:w="2"/><text x="39.5785%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.3285%" y="357" width="0.1599%" height="15" fill="rgb(216,137,9)" fg:x="492" fg:w="2"/><text x="39.5785%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.72%)</title><rect x="39.4884%" y="565" width="0.7194%" height="15" fill="rgb(250,149,33)" fg:x="494" fg:w="9"/><text x="39.7384%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.72%)</title><rect x="39.4884%" y="549" width="0.7194%" height="15" fill="rgb(246,124,31)" fg:x="494" fg:w="9"/><text x="39.7384%" y="559.50"></text></g><g><title>realloc (9 samples, 0.72%)</title><rect x="39.4884%" y="533" width="0.7194%" height="15" fill="rgb(216,210,22)" fg:x="494" fg:w="9"/><text x="39.7384%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="40.2078%" y="565" width="0.1599%" height="15" fill="rgb(228,128,36)" fg:x="503" fg:w="2"/><text x="40.4578%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.2078%" y="549" width="0.1599%" height="15" fill="rgb(231,41,0)" fg:x="503" fg:w="2"/><text x="40.4578%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="40.3677%" y="517" width="0.0799%" height="15" fill="rgb(232,61,26)" fg:x="505" fg:w="1"/><text x="40.6177%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="40.3677%" y="501" width="0.0799%" height="15" fill="rgb(217,60,9)" fg:x="505" fg:w="1"/><text x="40.6177%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="40.3677%" y="485" width="0.0799%" height="15" fill="rgb(233,41,35)" fg:x="505" fg:w="1"/><text x="40.6177%" y="495.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (15 samples, 1.20%)</title><rect x="39.3285%" y="581" width="1.1990%" height="15" fill="rgb(253,139,43)" fg:x="492" fg:w="15"/><text x="39.5785%" y="591.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.16%)</title><rect x="40.3677%" y="565" width="0.1599%" height="15" fill="rgb(245,100,51)" fg:x="505" fg:w="2"/><text x="40.6177%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="40.3677%" y="549" width="0.1599%" height="15" fill="rgb(250,208,18)" fg:x="505" fg:w="2"/><text x="40.6177%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="40.3677%" y="533" width="0.1599%" height="15" fill="rgb(245,33,2)" fg:x="505" fg:w="2"/><text x="40.6177%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.4476%" y="517" width="0.0799%" height="15" fill="rgb(244,171,31)" fg:x="506" fg:w="1"/><text x="40.6976%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.4476%" y="501" width="0.0799%" height="15" fill="rgb(229,1,43)" fg:x="506" fg:w="1"/><text x="40.6976%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="40.4476%" y="485" width="0.0799%" height="15" fill="rgb(223,153,28)" fg:x="506" fg:w="1"/><text x="40.6976%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="40.4476%" y="469" width="0.0799%" height="15" fill="rgb(241,4,46)" fg:x="506" fg:w="1"/><text x="40.6976%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.5276%" y="485" width="0.1599%" height="15" fill="rgb(230,81,11)" fg:x="507" fg:w="2"/><text x="40.7776%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.5276%" y="469" width="0.1599%" height="15" fill="rgb(253,204,39)" fg:x="507" fg:w="2"/><text x="40.7776%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.5276%" y="453" width="0.1599%" height="15" fill="rgb(250,96,8)" fg:x="507" fg:w="2"/><text x="40.7776%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6075%" y="437" width="0.0799%" height="15" fill="rgb(219,89,54)" fg:x="508" fg:w="1"/><text x="40.8575%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="40.5276%" y="581" width="0.2398%" height="15" fill="rgb(235,136,39)" fg:x="507" fg:w="3"/><text x="40.7776%" y="591.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="40.5276%" y="565" width="0.2398%" height="15" fill="rgb(230,155,37)" fg:x="507" fg:w="3"/><text x="40.7776%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="40.5276%" y="549" width="0.2398%" height="15" fill="rgb(235,199,50)" fg:x="507" fg:w="3"/><text x="40.7776%" y="559.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="40.5276%" y="533" width="0.2398%" height="15" fill="rgb(227,81,32)" fg:x="507" fg:w="3"/><text x="40.7776%" y="543.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="40.5276%" y="517" width="0.2398%" height="15" fill="rgb(225,6,28)" fg:x="507" fg:w="3"/><text x="40.7776%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="40.5276%" y="501" width="0.2398%" height="15" fill="rgb(207,211,17)" fg:x="507" fg:w="3"/><text x="40.7776%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.6875%" y="485" width="0.0799%" height="15" fill="rgb(228,31,49)" fg:x="509" fg:w="1"/><text x="40.9375%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6875%" y="469" width="0.0799%" height="15" fill="rgb(230,185,3)" fg:x="509" fg:w="1"/><text x="40.9375%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.6875%" y="453" width="0.0799%" height="15" fill="rgb(206,167,15)" fg:x="509" fg:w="1"/><text x="40.9375%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6875%" y="437" width="0.0799%" height="15" fill="rgb(234,2,36)" fg:x="509" fg:w="1"/><text x="40.9375%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.6875%" y="421" width="0.0799%" height="15" fill="rgb(239,160,29)" fg:x="509" fg:w="1"/><text x="40.9375%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6875%" y="405" width="0.0799%" height="15" fill="rgb(236,117,2)" fg:x="509" fg:w="1"/><text x="40.9375%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.6875%" y="389" width="0.0799%" height="15" fill="rgb(215,117,37)" fg:x="509" fg:w="1"/><text x="40.9375%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6875%" y="373" width="0.0799%" height="15" fill="rgb(244,48,36)" fg:x="509" fg:w="1"/><text x="40.9375%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.6875%" y="357" width="0.0799%" height="15" fill="rgb(223,101,37)" fg:x="509" fg:w="1"/><text x="40.9375%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6875%" y="341" width="0.0799%" height="15" fill="rgb(205,200,1)" fg:x="509" fg:w="1"/><text x="40.9375%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (21 samples, 1.68%)</title><rect x="39.1687%" y="613" width="1.6787%" height="15" fill="rgb(209,193,20)" fg:x="490" fg:w="21"/><text x="39.4187%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (21 samples, 1.68%)</title><rect x="39.1687%" y="597" width="1.6787%" height="15" fill="rgb(214,63,13)" fg:x="490" fg:w="21"/><text x="39.4187%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="40.7674%" y="581" width="0.0799%" height="15" fill="rgb(253,113,46)" fg:x="510" fg:w="1"/><text x="41.0174%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7674%" y="565" width="0.0799%" height="15" fill="rgb(237,103,34)" fg:x="510" fg:w="1"/><text x="41.0174%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7674%" y="549" width="0.0799%" height="15" fill="rgb(223,38,25)" fg:x="510" fg:w="1"/><text x="41.0174%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7674%" y="533" width="0.0799%" height="15" fill="rgb(251,32,32)" fg:x="510" fg:w="1"/><text x="41.0174%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.7674%" y="517" width="0.0799%" height="15" fill="rgb(228,65,22)" fg:x="510" fg:w="1"/><text x="41.0174%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.7674%" y="501" width="0.0799%" height="15" fill="rgb(205,11,46)" fg:x="510" fg:w="1"/><text x="41.0174%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.7674%" y="485" width="0.0799%" height="15" fill="rgb(220,35,2)" fg:x="510" fg:w="1"/><text x="41.0174%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.7674%" y="469" width="0.0799%" height="15" fill="rgb(217,151,17)" fg:x="510" fg:w="1"/><text x="41.0174%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.7674%" y="453" width="0.0799%" height="15" fill="rgb(243,227,35)" fg:x="510" fg:w="1"/><text x="41.0174%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.7674%" y="437" width="0.0799%" height="15" fill="rgb(214,0,34)" fg:x="510" fg:w="1"/><text x="41.0174%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.7674%" y="421" width="0.0799%" height="15" fill="rgb(209,42,37)" fg:x="510" fg:w="1"/><text x="41.0174%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.7674%" y="405" width="0.0799%" height="15" fill="rgb(251,176,30)" fg:x="510" fg:w="1"/><text x="41.0174%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.7674%" y="389" width="0.0799%" height="15" fill="rgb(223,64,40)" fg:x="510" fg:w="1"/><text x="41.0174%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7674%" y="373" width="0.0799%" height="15" fill="rgb(227,180,23)" fg:x="510" fg:w="1"/><text x="41.0174%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8473%" y="549" width="0.0799%" height="15" fill="rgb(220,137,31)" fg:x="511" fg:w="1"/><text x="41.0973%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="40.8473%" y="597" width="0.1599%" height="15" fill="rgb(245,124,25)" fg:x="511" fg:w="2"/><text x="41.0973%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="40.8473%" y="581" width="0.1599%" height="15" fill="rgb(217,157,5)" fg:x="511" fg:w="2"/><text x="41.0973%" y="591.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="40.8473%" y="565" width="0.1599%" height="15" fill="rgb(225,59,2)" fg:x="511" fg:w="2"/><text x="41.0973%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="40.9273%" y="549" width="0.0799%" height="15" fill="rgb(220,182,9)" fg:x="512" fg:w="1"/><text x="41.1773%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="40.9273%" y="533" width="0.0799%" height="15" fill="rgb(249,54,24)" fg:x="512" fg:w="1"/><text x="41.1773%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.9273%" y="517" width="0.0799%" height="15" fill="rgb(216,89,17)" fg:x="512" fg:w="1"/><text x="41.1773%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9273%" y="501" width="0.0799%" height="15" fill="rgb(245,20,45)" fg:x="512" fg:w="1"/><text x="41.1773%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.9273%" y="485" width="0.0799%" height="15" fill="rgb(230,83,14)" fg:x="512" fg:w="1"/><text x="41.1773%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9273%" y="469" width="0.0799%" height="15" fill="rgb(246,109,11)" fg:x="512" fg:w="1"/><text x="41.1773%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.9273%" y="453" width="0.0799%" height="15" fill="rgb(235,85,23)" fg:x="512" fg:w="1"/><text x="41.1773%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.9273%" y="437" width="0.0799%" height="15" fill="rgb(215,101,36)" fg:x="512" fg:w="1"/><text x="41.1773%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9273%" y="421" width="0.0799%" height="15" fill="rgb(228,140,31)" fg:x="512" fg:w="1"/><text x="41.1773%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.0072%" y="533" width="0.0799%" height="15" fill="rgb(234,162,37)" fg:x="513" fg:w="1"/><text x="41.2572%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0072%" y="517" width="0.0799%" height="15" fill="rgb(221,0,24)" fg:x="513" fg:w="1"/><text x="41.2572%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0072%" y="501" width="0.0799%" height="15" fill="rgb(230,161,41)" fg:x="513" fg:w="1"/><text x="41.2572%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.0072%" y="485" width="0.0799%" height="15" fill="rgb(224,46,24)" fg:x="513" fg:w="1"/><text x="41.2572%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.0072%" y="469" width="0.0799%" height="15" fill="rgb(205,59,32)" fg:x="513" fg:w="1"/><text x="41.2572%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.0072%" y="453" width="0.0799%" height="15" fill="rgb(239,31,20)" fg:x="513" fg:w="1"/><text x="41.2572%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0072%" y="437" width="0.0799%" height="15" fill="rgb(233,149,44)" fg:x="513" fg:w="1"/><text x="41.2572%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0072%" y="421" width="0.0799%" height="15" fill="rgb(243,47,26)" fg:x="513" fg:w="1"/><text x="41.2572%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.0072%" y="405" width="0.0799%" height="15" fill="rgb(233,107,5)" fg:x="513" fg:w="1"/><text x="41.2572%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.0072%" y="389" width="0.0799%" height="15" fill="rgb(248,140,33)" fg:x="513" fg:w="1"/><text x="41.2572%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.0072%" y="373" width="0.0799%" height="15" fill="rgb(228,178,19)" fg:x="513" fg:w="1"/><text x="41.2572%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.0072%" y="357" width="0.0799%" height="15" fill="rgb(224,39,49)" fg:x="513" fg:w="1"/><text x="41.2572%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0072%" y="341" width="0.0799%" height="15" fill="rgb(246,56,47)" fg:x="513" fg:w="1"/><text x="41.2572%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.0072%" y="565" width="0.1599%" height="15" fill="rgb(220,73,27)" fg:x="513" fg:w="2"/><text x="41.2572%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.0072%" y="549" width="0.1599%" height="15" fill="rgb(239,112,21)" fg:x="513" fg:w="2"/><text x="41.2572%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0871%" y="533" width="0.0799%" height="15" fill="rgb(253,14,51)" fg:x="514" fg:w="1"/><text x="41.3371%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="41.0072%" y="597" width="0.3197%" height="15" fill="rgb(215,58,12)" fg:x="513" fg:w="4"/><text x="41.2572%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="41.0072%" y="581" width="0.3197%" height="15" fill="rgb(207,181,19)" fg:x="513" fg:w="4"/><text x="41.2572%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.1671%" y="565" width="0.1599%" height="15" fill="rgb(211,214,34)" fg:x="515" fg:w="2"/><text x="41.4171%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.1671%" y="549" width="0.1599%" height="15" fill="rgb(243,124,39)" fg:x="515" fg:w="2"/><text x="41.4171%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="41.2470%" y="533" width="0.0799%" height="15" fill="rgb(248,135,21)" fg:x="516" fg:w="1"/><text x="41.4970%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="41.2470%" y="517" width="0.0799%" height="15" fill="rgb(245,218,3)" fg:x="516" fg:w="1"/><text x="41.4970%" y="527.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="41.2470%" y="501" width="0.0799%" height="15" fill="rgb(225,144,22)" fg:x="516" fg:w="1"/><text x="41.4970%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.2470%" y="485" width="0.0799%" height="15" fill="rgb(250,90,15)" fg:x="516" fg:w="1"/><text x="41.4970%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.3269%" y="517" width="0.0799%" height="15" fill="rgb(224,64,29)" fg:x="517" fg:w="1"/><text x="41.5769%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4069%" y="485" width="0.0799%" height="15" fill="rgb(217,50,47)" fg:x="518" fg:w="1"/><text x="41.6569%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="41.3269%" y="565" width="0.2398%" height="15" fill="rgb(231,159,47)" fg:x="517" fg:w="3"/><text x="41.5769%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="41.3269%" y="549" width="0.2398%" height="15" fill="rgb(213,89,29)" fg:x="517" fg:w="3"/><text x="41.5769%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="41.3269%" y="533" width="0.2398%" height="15" fill="rgb(243,90,23)" fg:x="517" fg:w="3"/><text x="41.5769%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="41.4069%" y="517" width="0.1599%" height="15" fill="rgb(213,21,6)" fg:x="518" fg:w="2"/><text x="41.6569%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="41.4069%" y="501" width="0.1599%" height="15" fill="rgb(237,139,17)" fg:x="518" fg:w="2"/><text x="41.6569%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.4868%" y="485" width="0.0799%" height="15" fill="rgb(250,147,17)" fg:x="519" fg:w="1"/><text x="41.7368%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="41.5667%" y="533" width="0.0799%" height="15" fill="rgb(212,208,42)" fg:x="520" fg:w="1"/><text x="41.8167%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.48%)</title><rect x="41.3269%" y="597" width="0.4796%" height="15" fill="rgb(215,229,40)" fg:x="517" fg:w="6"/><text x="41.5769%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (6 samples, 0.48%)</title><rect x="41.3269%" y="581" width="0.4796%" height="15" fill="rgb(206,204,1)" fg:x="517" fg:w="6"/><text x="41.5769%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="41.5667%" y="565" width="0.2398%" height="15" fill="rgb(230,62,32)" fg:x="520" fg:w="3"/><text x="41.8167%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="41.5667%" y="549" width="0.2398%" height="15" fill="rgb(223,22,42)" fg:x="520" fg:w="3"/><text x="41.8167%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="41.6467%" y="533" width="0.1599%" height="15" fill="rgb(244,6,23)" fg:x="521" fg:w="2"/><text x="41.8967%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="41.6467%" y="517" width="0.1599%" height="15" fill="rgb(240,221,42)" fg:x="521" fg:w="2"/><text x="41.8967%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.7266%" y="501" width="0.0799%" height="15" fill="rgb(222,74,7)" fg:x="522" fg:w="1"/><text x="41.9766%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.7266%" y="485" width="0.0799%" height="15" fill="rgb(227,191,38)" fg:x="522" fg:w="1"/><text x="41.9766%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.7266%" y="469" width="0.0799%" height="15" fill="rgb(227,89,34)" fg:x="522" fg:w="1"/><text x="41.9766%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.7266%" y="453" width="0.0799%" height="15" fill="rgb(215,153,25)" fg:x="522" fg:w="1"/><text x="41.9766%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8066%" y="549" width="0.0799%" height="15" fill="rgb(215,153,46)" fg:x="523" fg:w="1"/><text x="42.0566%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8066%" y="533" width="0.0799%" height="15" fill="rgb(242,38,52)" fg:x="523" fg:w="1"/><text x="42.0566%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8066%" y="517" width="0.0799%" height="15" fill="rgb(218,112,4)" fg:x="523" fg:w="1"/><text x="42.0566%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8066%" y="501" width="0.0799%" height="15" fill="rgb(231,210,31)" fg:x="523" fg:w="1"/><text x="42.0566%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8066%" y="485" width="0.0799%" height="15" fill="rgb(245,223,36)" fg:x="523" fg:w="1"/><text x="42.0566%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8066%" y="469" width="0.0799%" height="15" fill="rgb(246,41,2)" fg:x="523" fg:w="1"/><text x="42.0566%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8066%" y="453" width="0.0799%" height="15" fill="rgb(227,51,31)" fg:x="523" fg:w="1"/><text x="42.0566%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.8066%" y="437" width="0.0799%" height="15" fill="rgb(222,95,26)" fg:x="523" fg:w="1"/><text x="42.0566%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.8066%" y="421" width="0.0799%" height="15" fill="rgb(224,190,1)" fg:x="523" fg:w="1"/><text x="42.0566%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.8066%" y="405" width="0.0799%" height="15" fill="rgb(209,90,42)" fg:x="523" fg:w="1"/><text x="42.0566%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.8066%" y="389" width="0.0799%" height="15" fill="rgb(232,225,50)" fg:x="523" fg:w="1"/><text x="42.0566%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8066%" y="373" width="0.0799%" height="15" fill="rgb(239,89,47)" fg:x="523" fg:w="1"/><text x="42.0566%" y="383.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="41.8865%" y="549" width="0.0799%" height="15" fill="rgb(230,212,50)" fg:x="524" fg:w="1"/><text x="42.1365%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="41.8865%" y="533" width="0.0799%" height="15" fill="rgb(252,1,27)" fg:x="524" fg:w="1"/><text x="42.1365%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="41.8865%" y="517" width="0.0799%" height="15" fill="rgb(237,179,41)" fg:x="524" fg:w="1"/><text x="42.1365%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8865%" y="501" width="0.0799%" height="15" fill="rgb(214,151,37)" fg:x="524" fg:w="1"/><text x="42.1365%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8865%" y="485" width="0.0799%" height="15" fill="rgb(211,74,11)" fg:x="524" fg:w="1"/><text x="42.1365%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8865%" y="469" width="0.0799%" height="15" fill="rgb(242,21,21)" fg:x="524" fg:w="1"/><text x="42.1365%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8865%" y="453" width="0.0799%" height="15" fill="rgb(226,106,43)" fg:x="524" fg:w="1"/><text x="42.1365%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8865%" y="437" width="0.0799%" height="15" fill="rgb(229,162,39)" fg:x="524" fg:w="1"/><text x="42.1365%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8865%" y="421" width="0.0799%" height="15" fill="rgb(228,159,25)" fg:x="524" fg:w="1"/><text x="42.1365%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9664%" y="405" width="0.0799%" height="15" fill="rgb(237,32,23)" fg:x="525" fg:w="1"/><text x="42.2164%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9664%" y="389" width="0.0799%" height="15" fill="rgb(212,35,32)" fg:x="525" fg:w="1"/><text x="42.2164%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="41.8066%" y="597" width="0.3197%" height="15" fill="rgb(215,199,1)" fg:x="523" fg:w="4"/><text x="42.0566%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="41.8066%" y="581" width="0.3197%" height="15" fill="rgb(215,67,13)" fg:x="523" fg:w="4"/><text x="42.0566%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="41.8066%" y="565" width="0.3197%" height="15" fill="rgb(216,20,47)" fg:x="523" fg:w="4"/><text x="42.0566%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="41.9664%" y="549" width="0.1599%" height="15" fill="rgb(249,183,48)" fg:x="525" fg:w="2"/><text x="42.2164%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="41.9664%" y="533" width="0.1599%" height="15" fill="rgb(208,86,37)" fg:x="525" fg:w="2"/><text x="42.2164%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="41.9664%" y="517" width="0.1599%" height="15" fill="rgb(251,192,7)" fg:x="525" fg:w="2"/><text x="42.2164%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.9664%" y="501" width="0.1599%" height="15" fill="rgb(234,196,3)" fg:x="525" fg:w="2"/><text x="42.2164%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.9664%" y="485" width="0.1599%" height="15" fill="rgb(229,150,39)" fg:x="525" fg:w="2"/><text x="42.2164%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.9664%" y="469" width="0.1599%" height="15" fill="rgb(226,19,29)" fg:x="525" fg:w="2"/><text x="42.2164%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.9664%" y="453" width="0.1599%" height="15" fill="rgb(226,222,2)" fg:x="525" fg:w="2"/><text x="42.2164%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.9664%" y="437" width="0.1599%" height="15" fill="rgb(235,85,29)" fg:x="525" fg:w="2"/><text x="42.2164%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.9664%" y="421" width="0.1599%" height="15" fill="rgb(237,194,43)" fg:x="525" fg:w="2"/><text x="42.2164%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.0464%" y="405" width="0.0799%" height="15" fill="rgb(211,4,42)" fg:x="526" fg:w="1"/><text x="42.2964%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0464%" y="389" width="0.0799%" height="15" fill="rgb(221,80,37)" fg:x="526" fg:w="1"/><text x="42.2964%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.0464%" y="373" width="0.0799%" height="15" fill="rgb(222,47,31)" fg:x="526" fg:w="1"/><text x="42.2964%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.1263%" y="549" width="0.0799%" height="15" fill="rgb(249,82,52)" fg:x="527" fg:w="1"/><text x="42.3763%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="42.1263%" y="581" width="0.1599%" height="15" fill="rgb(218,203,2)" fg:x="527" fg:w="2"/><text x="42.3763%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="42.1263%" y="565" width="0.1599%" height="15" fill="rgb(210,175,14)" fg:x="527" fg:w="2"/><text x="42.3763%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="42.2062%" y="549" width="0.0799%" height="15" fill="rgb(216,210,12)" fg:x="528" fg:w="1"/><text x="42.4562%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.2862%" y="581" width="0.0799%" height="15" fill="rgb(229,120,18)" fg:x="529" fg:w="1"/><text x="42.5362%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (42 samples, 3.36%)</title><rect x="39.0887%" y="629" width="3.3573%" height="15" fill="rgb(231,174,12)" fg:x="489" fg:w="42"/><text x="39.3387%" y="639.50">&lt;pl..</text></g><g><title>plugins_core::tools::move_between (20 samples, 1.60%)</title><rect x="40.8473%" y="613" width="1.5987%" height="15" fill="rgb(214,101,53)" fg:x="511" fg:w="20"/><text x="41.0973%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (4 samples, 0.32%)</title><rect x="42.1263%" y="597" width="0.3197%" height="15" fill="rgb(246,89,43)" fg:x="527" fg:w="4"/><text x="42.3763%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="42.3661%" y="581" width="0.0799%" height="15" fill="rgb(222,9,51)" fg:x="530" fg:w="1"/><text x="42.6161%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3661%" y="565" width="0.0799%" height="15" fill="rgb(252,221,9)" fg:x="530" fg:w="1"/><text x="42.6161%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.6059%" y="565" width="0.0799%" height="15" fill="rgb(248,28,15)" fg:x="533" fg:w="1"/><text x="42.8559%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.6059%" y="549" width="0.0799%" height="15" fill="rgb(213,54,52)" fg:x="533" fg:w="1"/><text x="42.8559%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.6859%" y="469" width="0.0799%" height="15" fill="rgb(240,3,45)" fg:x="534" fg:w="1"/><text x="42.9359%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.6859%" y="453" width="0.0799%" height="15" fill="rgb(239,138,24)" fg:x="534" fg:w="1"/><text x="42.9359%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.6859%" y="437" width="0.0799%" height="15" fill="rgb(233,45,54)" fg:x="534" fg:w="1"/><text x="42.9359%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.6859%" y="421" width="0.0799%" height="15" fill="rgb(220,131,2)" fg:x="534" fg:w="1"/><text x="42.9359%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6859%" y="405" width="0.0799%" height="15" fill="rgb(240,154,36)" fg:x="534" fg:w="1"/><text x="42.9359%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6859%" y="389" width="0.0799%" height="15" fill="rgb(251,221,1)" fg:x="534" fg:w="1"/><text x="42.9359%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.6859%" y="373" width="0.0799%" height="15" fill="rgb(225,217,1)" fg:x="534" fg:w="1"/><text x="42.9359%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.6859%" y="357" width="0.0799%" height="15" fill="rgb(241,105,49)" fg:x="534" fg:w="1"/><text x="42.9359%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.6859%" y="341" width="0.0799%" height="15" fill="rgb(215,44,32)" fg:x="534" fg:w="1"/><text x="42.9359%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.6859%" y="325" width="0.0799%" height="15" fill="rgb(213,222,14)" fg:x="534" fg:w="1"/><text x="42.9359%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.6859%" y="309" width="0.0799%" height="15" fill="rgb(207,99,52)" fg:x="534" fg:w="1"/><text x="42.9359%" y="319.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="42.6859%" y="517" width="0.2398%" height="15" fill="rgb(214,208,52)" fg:x="534" fg:w="3"/><text x="42.9359%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="42.6859%" y="501" width="0.2398%" height="15" fill="rgb(244,169,0)" fg:x="534" fg:w="3"/><text x="42.9359%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="42.6859%" y="485" width="0.2398%" height="15" fill="rgb(216,193,37)" fg:x="534" fg:w="3"/><text x="42.9359%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.7658%" y="469" width="0.1599%" height="15" fill="rgb(212,158,10)" fg:x="535" fg:w="2"/><text x="43.0158%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.7658%" y="453" width="0.1599%" height="15" fill="rgb(213,110,20)" fg:x="535" fg:w="2"/><text x="43.0158%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.7658%" y="437" width="0.1599%" height="15" fill="rgb(226,5,42)" fg:x="535" fg:w="2"/><text x="43.0158%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.7658%" y="421" width="0.1599%" height="15" fill="rgb(211,93,8)" fg:x="535" fg:w="2"/><text x="43.0158%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.7658%" y="405" width="0.1599%" height="15" fill="rgb(240,208,12)" fg:x="535" fg:w="2"/><text x="43.0158%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.7658%" y="389" width="0.1599%" height="15" fill="rgb(233,127,50)" fg:x="535" fg:w="2"/><text x="43.0158%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8457%" y="373" width="0.0799%" height="15" fill="rgb(227,199,53)" fg:x="536" fg:w="1"/><text x="43.0957%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8457%" y="357" width="0.0799%" height="15" fill="rgb(235,199,10)" fg:x="536" fg:w="1"/><text x="43.0957%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8457%" y="341" width="0.0799%" height="15" fill="rgb(228,148,35)" fg:x="536" fg:w="1"/><text x="43.0957%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8457%" y="325" width="0.0799%" height="15" fill="rgb(217,87,19)" fg:x="536" fg:w="1"/><text x="43.0957%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="42.8457%" y="309" width="0.0799%" height="15" fill="rgb(239,9,32)" fg:x="536" fg:w="1"/><text x="43.0957%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="42.8457%" y="293" width="0.0799%" height="15" fill="rgb(229,101,29)" fg:x="536" fg:w="1"/><text x="43.0957%" y="303.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="42.9257%" y="485" width="0.0799%" height="15" fill="rgb(208,143,26)" fg:x="537" fg:w="1"/><text x="43.1757%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="42.9257%" y="469" width="0.0799%" height="15" fill="rgb(214,10,2)" fg:x="537" fg:w="1"/><text x="43.1757%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="42.9257%" y="517" width="0.1599%" height="15" fill="rgb(254,203,30)" fg:x="537" fg:w="2"/><text x="43.1757%" y="527.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="42.9257%" y="501" width="0.1599%" height="15" fill="rgb(242,45,3)" fg:x="537" fg:w="2"/><text x="43.1757%" y="511.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="43.0056%" y="485" width="0.0799%" height="15" fill="rgb(209,146,51)" fg:x="538" fg:w="1"/><text x="43.2556%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0056%" y="469" width="0.0799%" height="15" fill="rgb(222,80,5)" fg:x="538" fg:w="1"/><text x="43.2556%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.0855%" y="389" width="0.0799%" height="15" fill="rgb(252,80,35)" fg:x="539" fg:w="1"/><text x="43.3355%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.0855%" y="373" width="0.0799%" height="15" fill="rgb(246,125,28)" fg:x="539" fg:w="1"/><text x="43.3355%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.0855%" y="357" width="0.0799%" height="15" fill="rgb(224,143,51)" fg:x="539" fg:w="1"/><text x="43.3355%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.0855%" y="341" width="0.0799%" height="15" fill="rgb(205,24,17)" fg:x="539" fg:w="1"/><text x="43.3355%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.0855%" y="325" width="0.0799%" height="15" fill="rgb(253,128,30)" fg:x="539" fg:w="1"/><text x="43.3355%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.0855%" y="309" width="0.0799%" height="15" fill="rgb(214,153,25)" fg:x="539" fg:w="1"/><text x="43.3355%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.0855%" y="293" width="0.0799%" height="15" fill="rgb(214,4,28)" fg:x="539" fg:w="1"/><text x="43.3355%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.0855%" y="277" width="0.0799%" height="15" fill="rgb(235,179,52)" fg:x="539" fg:w="1"/><text x="43.3355%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.0855%" y="261" width="0.0799%" height="15" fill="rgb(233,27,42)" fg:x="539" fg:w="1"/><text x="43.3355%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.0855%" y="245" width="0.0799%" height="15" fill="rgb(238,35,25)" fg:x="539" fg:w="1"/><text x="43.3355%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="43.1655%" y="389" width="0.1599%" height="15" fill="rgb(227,44,31)" fg:x="540" fg:w="2"/><text x="43.4155%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="43.1655%" y="373" width="0.1599%" height="15" fill="rgb(232,201,13)" fg:x="540" fg:w="2"/><text x="43.4155%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="43.1655%" y="357" width="0.1599%" height="15" fill="rgb(224,172,52)" fg:x="540" fg:w="2"/><text x="43.4155%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="43.1655%" y="341" width="0.1599%" height="15" fill="rgb(214,27,26)" fg:x="540" fg:w="2"/><text x="43.4155%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="43.2454%" y="325" width="0.0799%" height="15" fill="rgb(210,185,52)" fg:x="541" fg:w="1"/><text x="43.4954%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2454%" y="309" width="0.0799%" height="15" fill="rgb(249,59,32)" fg:x="541" fg:w="1"/><text x="43.4954%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="43.0855%" y="437" width="0.3197%" height="15" fill="rgb(242,209,18)" fg:x="539" fg:w="4"/><text x="43.3355%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="43.0855%" y="421" width="0.3197%" height="15" fill="rgb(229,0,18)" fg:x="539" fg:w="4"/><text x="43.3355%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="43.0855%" y="405" width="0.3197%" height="15" fill="rgb(217,138,29)" fg:x="539" fg:w="4"/><text x="43.3355%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3253%" y="389" width="0.0799%" height="15" fill="rgb(215,72,42)" fg:x="542" fg:w="1"/><text x="43.5753%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.3253%" y="373" width="0.0799%" height="15" fill="rgb(254,115,11)" fg:x="542" fg:w="1"/><text x="43.5753%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="43.3253%" y="357" width="0.0799%" height="15" fill="rgb(205,133,39)" fg:x="542" fg:w="1"/><text x="43.5753%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3253%" y="341" width="0.0799%" height="15" fill="rgb(211,36,27)" fg:x="542" fg:w="1"/><text x="43.5753%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.3253%" y="325" width="0.0799%" height="15" fill="rgb(221,48,10)" fg:x="542" fg:w="1"/><text x="43.5753%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="43.3253%" y="309" width="0.0799%" height="15" fill="rgb(230,172,50)" fg:x="542" fg:w="1"/><text x="43.5753%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3253%" y="293" width="0.0799%" height="15" fill="rgb(249,72,18)" fg:x="542" fg:w="1"/><text x="43.5753%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.3253%" y="277" width="0.0799%" height="15" fill="rgb(237,58,48)" fg:x="542" fg:w="1"/><text x="43.5753%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="43.3253%" y="261" width="0.0799%" height="15" fill="rgb(242,123,3)" fg:x="542" fg:w="1"/><text x="43.5753%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3253%" y="245" width="0.0799%" height="15" fill="rgb(232,111,32)" fg:x="542" fg:w="1"/><text x="43.5753%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.3253%" y="229" width="0.0799%" height="15" fill="rgb(229,108,3)" fg:x="542" fg:w="1"/><text x="43.5753%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="43.3253%" y="213" width="0.0799%" height="15" fill="rgb(222,158,10)" fg:x="542" fg:w="1"/><text x="43.5753%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3253%" y="197" width="0.0799%" height="15" fill="rgb(205,34,49)" fg:x="542" fg:w="1"/><text x="43.5753%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.3253%" y="181" width="0.0799%" height="15" fill="rgb(232,21,14)" fg:x="542" fg:w="1"/><text x="43.5753%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.3253%" y="165" width="0.0799%" height="15" fill="rgb(229,127,44)" fg:x="542" fg:w="1"/><text x="43.5753%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.3253%" y="149" width="0.0799%" height="15" fill="rgb(232,171,4)" fg:x="542" fg:w="1"/><text x="43.5753%" y="159.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="43.0855%" y="501" width="0.3997%" height="15" fill="rgb(250,92,16)" fg:x="539" fg:w="5"/><text x="43.3355%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="43.0855%" y="485" width="0.3997%" height="15" fill="rgb(230,103,38)" fg:x="539" fg:w="5"/><text x="43.3355%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="43.0855%" y="469" width="0.3997%" height="15" fill="rgb(253,167,9)" fg:x="539" fg:w="5"/><text x="43.3355%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="43.0855%" y="453" width="0.3997%" height="15" fill="rgb(222,118,11)" fg:x="539" fg:w="5"/><text x="43.3355%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.4053%" y="437" width="0.0799%" height="15" fill="rgb(240,202,0)" fg:x="543" fg:w="1"/><text x="43.6553%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4053%" y="421" width="0.0799%" height="15" fill="rgb(236,124,4)" fg:x="543" fg:w="1"/><text x="43.6553%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.4053%" y="405" width="0.0799%" height="15" fill="rgb(244,128,18)" fg:x="543" fg:w="1"/><text x="43.6553%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.4053%" y="389" width="0.0799%" height="15" fill="rgb(231,206,5)" fg:x="543" fg:w="1"/><text x="43.6553%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.4852%" y="421" width="0.0799%" height="15" fill="rgb(237,111,8)" fg:x="544" fg:w="1"/><text x="43.7352%" y="431.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="43.4852%" y="405" width="0.0799%" height="15" fill="rgb(225,127,3)" fg:x="544" fg:w="1"/><text x="43.7352%" y="415.50"></text></g><g><title>engine::internal::Entities::add_persisted (12 samples, 0.96%)</title><rect x="42.6859%" y="533" width="0.9592%" height="15" fill="rgb(222,85,48)" fg:x="534" fg:w="12"/><text x="42.9359%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.56%)</title><rect x="43.0855%" y="517" width="0.5596%" height="15" fill="rgb(221,108,37)" fg:x="539" fg:w="7"/><text x="43.3355%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="43.4852%" y="501" width="0.1599%" height="15" fill="rgb(226,169,36)" fg:x="544" fg:w="2"/><text x="43.7352%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.4852%" y="485" width="0.1599%" height="15" fill="rgb(237,76,12)" fg:x="544" fg:w="2"/><text x="43.7352%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.4852%" y="469" width="0.1599%" height="15" fill="rgb(210,227,32)" fg:x="544" fg:w="2"/><text x="43.7352%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.4852%" y="453" width="0.1599%" height="15" fill="rgb(214,117,20)" fg:x="544" fg:w="2"/><text x="43.7352%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.4852%" y="437" width="0.1599%" height="15" fill="rgb(234,119,41)" fg:x="544" fg:w="2"/><text x="43.7352%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.5651%" y="421" width="0.0799%" height="15" fill="rgb(230,130,47)" fg:x="545" fg:w="1"/><text x="43.8151%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.5651%" y="405" width="0.0799%" height="15" fill="rgb(215,21,41)" fg:x="545" fg:w="1"/><text x="43.8151%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.5651%" y="389" width="0.0799%" height="15" fill="rgb(226,26,53)" fg:x="545" fg:w="1"/><text x="43.8151%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.5651%" y="373" width="0.0799%" height="15" fill="rgb(221,92,23)" fg:x="545" fg:w="1"/><text x="43.8151%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.04%)</title><rect x="42.6859%" y="549" width="1.0392%" height="15" fill="rgb(213,156,21)" fg:x="534" fg:w="13"/><text x="42.9359%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="43.6451%" y="533" width="0.0799%" height="15" fill="rgb(254,166,29)" fg:x="546" fg:w="1"/><text x="43.8951%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.12%)</title><rect x="42.6859%" y="565" width="1.1191%" height="15" fill="rgb(213,71,1)" fg:x="534" fg:w="14"/><text x="42.9359%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="43.7250%" y="549" width="0.0799%" height="15" fill="rgb(245,8,13)" fg:x="547" fg:w="1"/><text x="43.9750%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.7250%" y="533" width="0.0799%" height="15" fill="rgb(213,32,32)" fg:x="547" fg:w="1"/><text x="43.9750%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.7250%" y="517" width="0.0799%" height="15" fill="rgb(251,86,50)" fg:x="547" fg:w="1"/><text x="43.9750%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.7250%" y="501" width="0.0799%" height="15" fill="rgb(252,92,41)" fg:x="547" fg:w="1"/><text x="43.9750%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.7250%" y="485" width="0.0799%" height="15" fill="rgb(234,70,35)" fg:x="547" fg:w="1"/><text x="43.9750%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.7250%" y="469" width="0.0799%" height="15" fill="rgb(210,157,19)" fg:x="547" fg:w="1"/><text x="43.9750%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.7250%" y="453" width="0.0799%" height="15" fill="rgb(206,20,45)" fg:x="547" fg:w="1"/><text x="43.9750%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.7250%" y="437" width="0.0799%" height="15" fill="rgb(207,34,7)" fg:x="547" fg:w="1"/><text x="43.9750%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.7250%" y="421" width="0.0799%" height="15" fill="rgb(253,151,14)" fg:x="547" fg:w="1"/><text x="43.9750%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.7250%" y="405" width="0.0799%" height="15" fill="rgb(252,1,18)" fg:x="547" fg:w="1"/><text x="43.9750%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.7250%" y="389" width="0.0799%" height="15" fill="rgb(214,77,52)" fg:x="547" fg:w="1"/><text x="43.9750%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.7250%" y="373" width="0.0799%" height="15" fill="rgb(254,106,35)" fg:x="547" fg:w="1"/><text x="43.9750%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.7250%" y="357" width="0.0799%" height="15" fill="rgb(212,67,40)" fg:x="547" fg:w="1"/><text x="43.9750%" y="367.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (18 samples, 1.44%)</title><rect x="42.4460%" y="613" width="1.4388%" height="15" fill="rgb(228,76,23)" fg:x="531" fg:w="18"/><text x="42.6960%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (18 samples, 1.44%)</title><rect x="42.4460%" y="597" width="1.4388%" height="15" fill="rgb(250,198,5)" fg:x="531" fg:w="18"/><text x="42.6960%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (18 samples, 1.44%)</title><rect x="42.4460%" y="581" width="1.4388%" height="15" fill="rgb(209,20,25)" fg:x="531" fg:w="18"/><text x="42.6960%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.8050%" y="565" width="0.0799%" height="15" fill="rgb(236,32,4)" fg:x="548" fg:w="1"/><text x="44.0550%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.8050%" y="549" width="0.0799%" height="15" fill="rgb(215,31,6)" fg:x="548" fg:w="1"/><text x="44.0550%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.8050%" y="533" width="0.0799%" height="15" fill="rgb(207,186,49)" fg:x="548" fg:w="1"/><text x="44.0550%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.8050%" y="517" width="0.0799%" height="15" fill="rgb(211,212,49)" fg:x="548" fg:w="1"/><text x="44.0550%" y="527.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (19 samples, 1.52%)</title><rect x="42.4460%" y="629" width="1.5188%" height="15" fill="rgb(229,51,41)" fg:x="531" fg:w="19"/><text x="42.6960%" y="639.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="43.8849%" y="613" width="0.0799%" height="15" fill="rgb(205,225,36)" fg:x="549" fg:w="1"/><text x="44.1349%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="43.8849%" y="597" width="0.0799%" height="15" fill="rgb(209,213,45)" fg:x="549" fg:w="1"/><text x="44.1349%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="44.4444%" y="485" width="0.1599%" height="15" fill="rgb(219,35,49)" fg:x="556" fg:w="2"/><text x="44.6944%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.4444%" y="469" width="0.1599%" height="15" fill="rgb(215,205,22)" fg:x="556" fg:w="2"/><text x="44.6944%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="44.4444%" y="501" width="0.3197%" height="15" fill="rgb(248,204,34)" fg:x="556" fg:w="4"/><text x="44.6944%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.6043%" y="485" width="0.1599%" height="15" fill="rgb(219,223,31)" fg:x="558" fg:w="2"/><text x="44.8543%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="44.4444%" y="517" width="0.5596%" height="15" fill="rgb(236,14,8)" fg:x="556" fg:w="7"/><text x="44.6944%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="44.7642%" y="501" width="0.2398%" height="15" fill="rgb(243,129,23)" fg:x="560" fg:w="3"/><text x="45.0142%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="44.4444%" y="533" width="0.6395%" height="15" fill="rgb(205,204,5)" fg:x="556" fg:w="8"/><text x="44.6944%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0040%" y="517" width="0.0799%" height="15" fill="rgb(244,115,32)" fg:x="563" fg:w="1"/><text x="45.2540%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="45.0839%" y="533" width="0.2398%" height="15" fill="rgb(229,123,14)" fg:x="564" fg:w="3"/><text x="45.3339%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="44.3645%" y="549" width="1.1191%" height="15" fill="rgb(250,85,1)" fg:x="555" fg:w="14"/><text x="44.6145%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="45.3237%" y="533" width="0.1599%" height="15" fill="rgb(209,141,54)" fg:x="567" fg:w="2"/><text x="45.5737%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="45.4037%" y="517" width="0.0799%" height="15" fill="rgb(244,107,39)" fg:x="568" fg:w="1"/><text x="45.6537%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.4836%" y="549" width="0.1599%" height="15" fill="rgb(230,68,26)" fg:x="569" fg:w="2"/><text x="45.7336%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="44.0448%" y="565" width="1.6787%" height="15" fill="rgb(220,178,33)" fg:x="551" fg:w="21"/><text x="44.2948%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="45.6435%" y="549" width="0.0799%" height="15" fill="rgb(220,77,53)" fg:x="571" fg:w="1"/><text x="45.8935%" y="559.50"></text></g><g><title>__libc_free (8 samples, 0.64%)</title><rect x="45.7234%" y="565" width="0.6395%" height="15" fill="rgb(224,108,19)" fg:x="572" fg:w="8"/><text x="45.9734%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.40%)</title><rect x="44.0448%" y="581" width="2.3981%" height="15" fill="rgb(223,203,27)" fg:x="551" fg:w="30"/><text x="44.2948%" y="591.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="46.3629%" y="565" width="0.0799%" height="15" fill="rgb(211,32,46)" fg:x="580" fg:w="1"/><text x="46.6129%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (31 samples, 2.48%)</title><rect x="44.0448%" y="597" width="2.4780%" height="15" fill="rgb(240,101,27)" fg:x="551" fg:w="31"/><text x="44.2948%" y="607.50">co..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.4428%" y="581" width="0.0799%" height="15" fill="rgb(217,210,11)" fg:x="581" fg:w="1"/><text x="46.6928%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="46.5228%" y="549" width="0.1599%" height="15" fill="rgb(236,130,21)" fg:x="582" fg:w="2"/><text x="46.7728%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6827%" y="549" width="0.0799%" height="15" fill="rgb(250,136,8)" fg:x="584" fg:w="1"/><text x="46.9327%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="46.5228%" y="565" width="0.3197%" height="15" fill="rgb(243,223,36)" fg:x="582" fg:w="4"/><text x="46.7728%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="46.7626%" y="549" width="0.0799%" height="15" fill="rgb(246,184,8)" fg:x="585" fg:w="1"/><text x="47.0126%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.7626%" y="533" width="0.0799%" height="15" fill="rgb(222,158,36)" fg:x="585" fg:w="1"/><text x="47.0126%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="46.7626%" y="517" width="0.0799%" height="15" fill="rgb(210,220,19)" fg:x="585" fg:w="1"/><text x="47.0126%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="46.8425%" y="565" width="0.0799%" height="15" fill="rgb(246,44,38)" fg:x="586" fg:w="1"/><text x="47.0925%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.0823%" y="517" width="0.0799%" height="15" fill="rgb(246,186,14)" fg:x="589" fg:w="1"/><text x="47.3323%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="46.9225%" y="565" width="0.3197%" height="15" fill="rgb(233,193,20)" fg:x="587" fg:w="4"/><text x="47.1725%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="46.9225%" y="549" width="0.3197%" height="15" fill="rgb(215,60,5)" fg:x="587" fg:w="4"/><text x="47.1725%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="47.0024%" y="533" width="0.2398%" height="15" fill="rgb(207,128,10)" fg:x="588" fg:w="3"/><text x="47.2524%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="47.1623%" y="517" width="0.0799%" height="15" fill="rgb(238,84,54)" fg:x="590" fg:w="1"/><text x="47.4123%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.4021%" y="325" width="0.0799%" height="15" fill="rgb(213,130,11)" fg:x="593" fg:w="1"/><text x="47.6521%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.4021%" y="309" width="0.0799%" height="15" fill="rgb(235,62,9)" fg:x="593" fg:w="1"/><text x="47.6521%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.4021%" y="293" width="0.0799%" height="15" fill="rgb(222,64,24)" fg:x="593" fg:w="1"/><text x="47.6521%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.4021%" y="277" width="0.0799%" height="15" fill="rgb(238,193,42)" fg:x="593" fg:w="1"/><text x="47.6521%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.4021%" y="261" width="0.0799%" height="15" fill="rgb(243,204,46)" fg:x="593" fg:w="1"/><text x="47.6521%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.4021%" y="245" width="0.0799%" height="15" fill="rgb(243,196,11)" fg:x="593" fg:w="1"/><text x="47.6521%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.4021%" y="229" width="0.0799%" height="15" fill="rgb(232,77,22)" fg:x="593" fg:w="1"/><text x="47.6521%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="47.4021%" y="469" width="0.1599%" height="15" fill="rgb(215,80,25)" fg:x="593" fg:w="2"/><text x="47.6521%" y="479.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="47.4021%" y="453" width="0.1599%" height="15" fill="rgb(210,173,7)" fg:x="593" fg:w="2"/><text x="47.6521%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="47.4021%" y="437" width="0.1599%" height="15" fill="rgb(207,101,10)" fg:x="593" fg:w="2"/><text x="47.6521%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="47.4021%" y="421" width="0.1599%" height="15" fill="rgb(246,57,48)" fg:x="593" fg:w="2"/><text x="47.6521%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.4021%" y="405" width="0.1599%" height="15" fill="rgb(236,184,40)" fg:x="593" fg:w="2"/><text x="47.6521%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.4021%" y="389" width="0.1599%" height="15" fill="rgb(210,205,13)" fg:x="593" fg:w="2"/><text x="47.6521%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="47.4021%" y="373" width="0.1599%" height="15" fill="rgb(231,129,42)" fg:x="593" fg:w="2"/><text x="47.6521%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="47.4021%" y="357" width="0.1599%" height="15" fill="rgb(220,229,54)" fg:x="593" fg:w="2"/><text x="47.6521%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="47.4021%" y="341" width="0.1599%" height="15" fill="rgb(230,192,26)" fg:x="593" fg:w="2"/><text x="47.6521%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="47.4820%" y="325" width="0.0799%" height="15" fill="rgb(253,18,30)" fg:x="594" fg:w="1"/><text x="47.7320%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="47.4820%" y="309" width="0.0799%" height="15" fill="rgb(216,62,53)" fg:x="594" fg:w="1"/><text x="47.7320%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="47.4021%" y="485" width="0.2398%" height="15" fill="rgb(230,79,29)" fg:x="593" fg:w="3"/><text x="47.6521%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="47.5620%" y="469" width="0.0799%" height="15" fill="rgb(242,26,26)" fg:x="595" fg:w="1"/><text x="47.8120%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="47.5620%" y="453" width="0.0799%" height="15" fill="rgb(227,125,21)" fg:x="595" fg:w="1"/><text x="47.8120%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.7218%" y="453" width="0.0799%" height="15" fill="rgb(229,93,26)" fg:x="597" fg:w="1"/><text x="47.9718%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.0416%" y="213" width="0.0799%" height="15" fill="rgb(227,228,8)" fg:x="601" fg:w="1"/><text x="48.2916%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.9616%" y="421" width="0.2398%" height="15" fill="rgb(233,56,0)" fg:x="600" fg:w="3"/><text x="48.2116%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.0416%" y="405" width="0.1599%" height="15" fill="rgb(225,185,17)" fg:x="601" fg:w="2"/><text x="48.2916%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="48.0416%" y="389" width="0.1599%" height="15" fill="rgb(238,202,30)" fg:x="601" fg:w="2"/><text x="48.2916%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="48.0416%" y="373" width="0.1599%" height="15" fill="rgb(236,60,13)" fg:x="601" fg:w="2"/><text x="48.2916%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="48.0416%" y="357" width="0.1599%" height="15" fill="rgb(244,92,0)" fg:x="601" fg:w="2"/><text x="48.2916%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="48.0416%" y="341" width="0.1599%" height="15" fill="rgb(225,57,15)" fg:x="601" fg:w="2"/><text x="48.2916%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="48.0416%" y="325" width="0.1599%" height="15" fill="rgb(228,5,28)" fg:x="601" fg:w="2"/><text x="48.2916%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="48.0416%" y="309" width="0.1599%" height="15" fill="rgb(252,34,51)" fg:x="601" fg:w="2"/><text x="48.2916%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="48.0416%" y="293" width="0.1599%" height="15" fill="rgb(235,58,7)" fg:x="601" fg:w="2"/><text x="48.2916%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="48.0416%" y="277" width="0.1599%" height="15" fill="rgb(250,132,20)" fg:x="601" fg:w="2"/><text x="48.2916%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="48.0416%" y="261" width="0.1599%" height="15" fill="rgb(217,164,0)" fg:x="601" fg:w="2"/><text x="48.2916%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="48.0416%" y="245" width="0.1599%" height="15" fill="rgb(208,220,35)" fg:x="601" fg:w="2"/><text x="48.2916%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="48.0416%" y="229" width="0.1599%" height="15" fill="rgb(227,42,51)" fg:x="601" fg:w="2"/><text x="48.2916%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="48.1215%" y="213" width="0.0799%" height="15" fill="rgb(225,146,38)" fg:x="602" fg:w="1"/><text x="48.3715%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="48.1215%" y="197" width="0.0799%" height="15" fill="rgb(252,108,37)" fg:x="602" fg:w="1"/><text x="48.3715%" y="207.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="48.2014%" y="373" width="0.0799%" height="15" fill="rgb(244,101,24)" fg:x="603" fg:w="1"/><text x="48.4514%" y="383.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="48.2014%" y="357" width="0.0799%" height="15" fill="rgb(213,161,50)" fg:x="603" fg:w="1"/><text x="48.4514%" y="367.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="48.2014%" y="341" width="0.0799%" height="15" fill="rgb(248,159,19)" fg:x="603" fg:w="1"/><text x="48.4514%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.2014%" y="325" width="0.0799%" height="15" fill="rgb(233,179,15)" fg:x="603" fg:w="1"/><text x="48.4514%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2014%" y="309" width="0.0799%" height="15" fill="rgb(248,178,3)" fg:x="603" fg:w="1"/><text x="48.4514%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.2014%" y="293" width="0.0799%" height="15" fill="rgb(245,190,41)" fg:x="603" fg:w="1"/><text x="48.4514%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2014%" y="277" width="0.0799%" height="15" fill="rgb(218,151,19)" fg:x="603" fg:w="1"/><text x="48.4514%" y="287.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.2014%" y="261" width="0.0799%" height="15" fill="rgb(245,25,44)" fg:x="603" fg:w="1"/><text x="48.4514%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2014%" y="245" width="0.0799%" height="15" fill="rgb(235,172,47)" fg:x="603" fg:w="1"/><text x="48.4514%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.2014%" y="229" width="0.0799%" height="15" fill="rgb(246,33,12)" fg:x="603" fg:w="1"/><text x="48.4514%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2014%" y="213" width="0.0799%" height="15" fill="rgb(214,124,7)" fg:x="603" fg:w="1"/><text x="48.4514%" y="223.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="48.2814%" y="341" width="0.0799%" height="15" fill="rgb(246,186,18)" fg:x="604" fg:w="1"/><text x="48.5314%" y="351.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="48.2814%" y="325" width="0.0799%" height="15" fill="rgb(231,94,1)" fg:x="604" fg:w="1"/><text x="48.5314%" y="335.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="48.2814%" y="309" width="0.0799%" height="15" fill="rgb(208,33,48)" fg:x="604" fg:w="1"/><text x="48.5314%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.2814%" y="293" width="0.0799%" height="15" fill="rgb(208,195,44)" fg:x="604" fg:w="1"/><text x="48.5314%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2814%" y="277" width="0.0799%" height="15" fill="rgb(226,13,52)" fg:x="604" fg:w="1"/><text x="48.5314%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.2814%" y="261" width="0.0799%" height="15" fill="rgb(217,219,45)" fg:x="604" fg:w="1"/><text x="48.5314%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2814%" y="245" width="0.0799%" height="15" fill="rgb(223,45,25)" fg:x="604" fg:w="1"/><text x="48.5314%" y="255.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.2814%" y="229" width="0.0799%" height="15" fill="rgb(241,163,0)" fg:x="604" fg:w="1"/><text x="48.5314%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2814%" y="213" width="0.0799%" height="15" fill="rgb(216,68,47)" fg:x="604" fg:w="1"/><text x="48.5314%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.2814%" y="197" width="0.0799%" height="15" fill="rgb(236,119,45)" fg:x="604" fg:w="1"/><text x="48.5314%" y="207.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="48.2814%" y="373" width="0.1599%" height="15" fill="rgb(209,188,24)" fg:x="604" fg:w="2"/><text x="48.5314%" y="383.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="48.2814%" y="357" width="0.1599%" height="15" fill="rgb(221,118,7)" fg:x="604" fg:w="2"/><text x="48.5314%" y="367.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="48.3613%" y="341" width="0.0799%" height="15" fill="rgb(213,148,43)" fg:x="605" fg:w="1"/><text x="48.6113%" y="351.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="48.3613%" y="325" width="0.0799%" height="15" fill="rgb(231,21,43)" fg:x="605" fg:w="1"/><text x="48.6113%" y="335.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="48.3613%" y="309" width="0.0799%" height="15" fill="rgb(232,213,43)" fg:x="605" fg:w="1"/><text x="48.6113%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.3613%" y="293" width="0.0799%" height="15" fill="rgb(239,145,50)" fg:x="605" fg:w="1"/><text x="48.6113%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.3613%" y="277" width="0.0799%" height="15" fill="rgb(222,131,18)" fg:x="605" fg:w="1"/><text x="48.6113%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.3613%" y="261" width="0.0799%" height="15" fill="rgb(243,181,13)" fg:x="605" fg:w="1"/><text x="48.6113%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.3613%" y="245" width="0.0799%" height="15" fill="rgb(212,74,41)" fg:x="605" fg:w="1"/><text x="48.6113%" y="255.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.3613%" y="229" width="0.0799%" height="15" fill="rgb(237,143,34)" fg:x="605" fg:w="1"/><text x="48.6113%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.3613%" y="213" width="0.0799%" height="15" fill="rgb(228,139,0)" fg:x="605" fg:w="1"/><text x="48.6113%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.3613%" y="197" width="0.0799%" height="15" fill="rgb(227,214,11)" fg:x="605" fg:w="1"/><text x="48.6113%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5212%" y="293" width="0.0799%" height="15" fill="rgb(228,118,39)" fg:x="607" fg:w="1"/><text x="48.7712%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="48.4412%" y="357" width="0.2398%" height="15" fill="rgb(207,117,22)" fg:x="606" fg:w="3"/><text x="48.6912%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="48.4412%" y="341" width="0.2398%" height="15" fill="rgb(225,91,8)" fg:x="606" fg:w="3"/><text x="48.6912%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="48.4412%" y="325" width="0.2398%" height="15" fill="rgb(230,219,48)" fg:x="606" fg:w="3"/><text x="48.6912%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.4412%" y="309" width="0.2398%" height="15" fill="rgb(244,0,23)" fg:x="606" fg:w="3"/><text x="48.6912%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.6011%" y="293" width="0.0799%" height="15" fill="rgb(206,212,23)" fg:x="608" fg:w="1"/><text x="48.8511%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6011%" y="277" width="0.0799%" height="15" fill="rgb(254,62,10)" fg:x="608" fg:w="1"/><text x="48.8511%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.6011%" y="261" width="0.0799%" height="15" fill="rgb(236,58,8)" fg:x="608" fg:w="1"/><text x="48.8511%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6011%" y="245" width="0.0799%" height="15" fill="rgb(232,212,17)" fg:x="608" fg:w="1"/><text x="48.8511%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.6011%" y="229" width="0.0799%" height="15" fill="rgb(206,132,9)" fg:x="608" fg:w="1"/><text x="48.8511%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="48.6011%" y="213" width="0.0799%" height="15" fill="rgb(234,97,28)" fg:x="608" fg:w="1"/><text x="48.8511%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6011%" y="197" width="0.0799%" height="15" fill="rgb(254,144,9)" fg:x="608" fg:w="1"/><text x="48.8511%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.6011%" y="181" width="0.0799%" height="15" fill="rgb(244,204,43)" fg:x="608" fg:w="1"/><text x="48.8511%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="48.6011%" y="165" width="0.0799%" height="15" fill="rgb(248,177,16)" fg:x="608" fg:w="1"/><text x="48.8511%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6011%" y="149" width="0.0799%" height="15" fill="rgb(219,110,15)" fg:x="608" fg:w="1"/><text x="48.8511%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.6011%" y="133" width="0.0799%" height="15" fill="rgb(212,203,25)" fg:x="608" fg:w="1"/><text x="48.8511%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="48.6011%" y="117" width="0.0799%" height="15" fill="rgb(205,50,1)" fg:x="608" fg:w="1"/><text x="48.8511%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6011%" y="101" width="0.0799%" height="15" fill="rgb(222,152,41)" fg:x="608" fg:w="1"/><text x="48.8511%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.6011%" y="85" width="0.0799%" height="15" fill="rgb(236,83,3)" fg:x="608" fg:w="1"/><text x="48.8511%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="48.6011%" y="69" width="0.0799%" height="15" fill="rgb(214,30,54)" fg:x="608" fg:w="1"/><text x="48.8511%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.6011%" y="53" width="0.0799%" height="15" fill="rgb(250,117,31)" fg:x="608" fg:w="1"/><text x="48.8511%" y="63.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="48.6011%" y="37" width="0.0799%" height="15" fill="rgb(228,77,14)" fg:x="608" fg:w="1"/><text x="48.8511%" y="47.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.6811%" y="133" width="0.0799%" height="15" fill="rgb(241,3,28)" fg:x="609" fg:w="1"/><text x="48.9311%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6811%" y="117" width="0.0799%" height="15" fill="rgb(221,175,52)" fg:x="609" fg:w="1"/><text x="48.9311%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6811%" y="101" width="0.0799%" height="15" fill="rgb(237,91,6)" fg:x="609" fg:w="1"/><text x="48.9311%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6811%" y="85" width="0.0799%" height="15" fill="rgb(246,46,42)" fg:x="609" fg:w="1"/><text x="48.9311%" y="95.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (13 samples, 1.04%)</title><rect x="47.8018%" y="453" width="1.0392%" height="15" fill="rgb(235,199,0)" fg:x="598" fg:w="13"/><text x="48.0518%" y="463.50"></text></g><g><title>kernel::model::Entity::load_scope (13 samples, 1.04%)</title><rect x="47.8018%" y="437" width="1.0392%" height="15" fill="rgb(224,44,40)" fg:x="598" fg:w="13"/><text x="48.0518%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="48.2014%" y="421" width="0.6395%" height="15" fill="rgb(209,24,35)" fg:x="603" fg:w="8"/><text x="48.4514%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.64%)</title><rect x="48.2014%" y="405" width="0.6395%" height="15" fill="rgb(244,46,22)" fg:x="603" fg:w="8"/><text x="48.4514%" y="415.50"></text></g><g><title>engine::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="48.2014%" y="389" width="0.6395%" height="15" fill="rgb(235,99,8)" fg:x="603" fg:w="8"/><text x="48.4514%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.40%)</title><rect x="48.4412%" y="373" width="0.3997%" height="15" fill="rgb(218,127,36)" fg:x="606" fg:w="5"/><text x="48.6912%" y="383.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="48.6811%" y="357" width="0.1599%" height="15" fill="rgb(238,47,46)" fg:x="609" fg:w="2"/><text x="48.9311%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.6811%" y="341" width="0.1599%" height="15" fill="rgb(233,65,17)" fg:x="609" fg:w="2"/><text x="48.9311%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.6811%" y="325" width="0.1599%" height="15" fill="rgb(239,22,33)" fg:x="609" fg:w="2"/><text x="48.9311%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.6811%" y="309" width="0.1599%" height="15" fill="rgb(243,66,43)" fg:x="609" fg:w="2"/><text x="48.9311%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.6811%" y="293" width="0.1599%" height="15" fill="rgb(235,210,28)" fg:x="609" fg:w="2"/><text x="48.9311%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.6811%" y="277" width="0.1599%" height="15" fill="rgb(205,191,50)" fg:x="609" fg:w="2"/><text x="48.9311%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.6811%" y="261" width="0.1599%" height="15" fill="rgb(251,217,19)" fg:x="609" fg:w="2"/><text x="48.9311%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.6811%" y="245" width="0.1599%" height="15" fill="rgb(205,174,37)" fg:x="609" fg:w="2"/><text x="48.9311%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.6811%" y="229" width="0.1599%" height="15" fill="rgb(212,158,42)" fg:x="609" fg:w="2"/><text x="48.9311%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.6811%" y="213" width="0.1599%" height="15" fill="rgb(212,208,51)" fg:x="609" fg:w="2"/><text x="48.9311%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.6811%" y="197" width="0.1599%" height="15" fill="rgb(225,198,20)" fg:x="609" fg:w="2"/><text x="48.9311%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.6811%" y="181" width="0.1599%" height="15" fill="rgb(247,41,44)" fg:x="609" fg:w="2"/><text x="48.9311%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.6811%" y="165" width="0.1599%" height="15" fill="rgb(228,33,41)" fg:x="609" fg:w="2"/><text x="48.9311%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.6811%" y="149" width="0.1599%" height="15" fill="rgb(215,47,52)" fg:x="609" fg:w="2"/><text x="48.9311%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7610%" y="133" width="0.0799%" height="15" fill="rgb(248,106,37)" fg:x="610" fg:w="1"/><text x="49.0110%" y="143.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 1.52%)</title><rect x="47.4021%" y="501" width="1.5188%" height="15" fill="rgb(238,91,29)" fg:x="593" fg:w="19"/><text x="47.6521%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="47.6419%" y="485" width="1.2790%" height="15" fill="rgb(226,111,40)" fg:x="596" fg:w="16"/><text x="47.8919%" y="495.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (15 samples, 1.20%)</title><rect x="47.7218%" y="469" width="1.1990%" height="15" fill="rgb(229,159,36)" fg:x="597" fg:w="15"/><text x="47.9718%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="48.8409%" y="453" width="0.0799%" height="15" fill="rgb(221,109,4)" fg:x="611" fg:w="1"/><text x="49.0909%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="48.8409%" y="437" width="0.0799%" height="15" fill="rgb(236,56,25)" fg:x="611" fg:w="1"/><text x="49.0909%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="48.9209%" y="501" width="0.0799%" height="15" fill="rgb(244,113,23)" fg:x="612" fg:w="1"/><text x="49.1709%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="48.9209%" y="485" width="0.0799%" height="15" fill="rgb(249,132,2)" fg:x="612" fg:w="1"/><text x="49.1709%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0008%" y="453" width="0.0799%" height="15" fill="rgb(205,185,21)" fg:x="613" fg:w="1"/><text x="49.2508%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0008%" y="437" width="0.0799%" height="15" fill="rgb(245,130,2)" fg:x="613" fg:w="1"/><text x="49.2508%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.0008%" y="421" width="0.0799%" height="15" fill="rgb(246,71,26)" fg:x="613" fg:w="1"/><text x="49.2508%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.0008%" y="405" width="0.0799%" height="15" fill="rgb(234,194,6)" fg:x="613" fg:w="1"/><text x="49.2508%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.0008%" y="389" width="0.0799%" height="15" fill="rgb(206,24,32)" fg:x="613" fg:w="1"/><text x="49.2508%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.0008%" y="373" width="0.0799%" height="15" fill="rgb(233,7,54)" fg:x="613" fg:w="1"/><text x="49.2508%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.0008%" y="357" width="0.0799%" height="15" fill="rgb(252,46,1)" fg:x="613" fg:w="1"/><text x="49.2508%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="49.0008%" y="469" width="0.3997%" height="15" fill="rgb(216,113,53)" fg:x="613" fg:w="5"/><text x="49.2508%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="49.0807%" y="453" width="0.3197%" height="15" fill="rgb(215,40,24)" fg:x="614" fg:w="4"/><text x="49.3307%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="49.0807%" y="437" width="0.3197%" height="15" fill="rgb(233,222,8)" fg:x="614" fg:w="4"/><text x="49.3307%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="49.0807%" y="421" width="0.3197%" height="15" fill="rgb(248,73,28)" fg:x="614" fg:w="4"/><text x="49.3307%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="49.0807%" y="405" width="0.3197%" height="15" fill="rgb(247,126,28)" fg:x="614" fg:w="4"/><text x="49.3307%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="49.0807%" y="389" width="0.3197%" height="15" fill="rgb(242,173,54)" fg:x="614" fg:w="4"/><text x="49.3307%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="49.0807%" y="373" width="0.3197%" height="15" fill="rgb(244,186,22)" fg:x="614" fg:w="4"/><text x="49.3307%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="49.0807%" y="357" width="0.3197%" height="15" fill="rgb(231,187,4)" fg:x="614" fg:w="4"/><text x="49.3307%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="49.0807%" y="341" width="0.3197%" height="15" fill="rgb(252,66,47)" fg:x="614" fg:w="4"/><text x="49.3307%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="49.0807%" y="325" width="0.3197%" height="15" fill="rgb(240,228,28)" fg:x="614" fg:w="4"/><text x="49.3307%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="49.0807%" y="309" width="0.3197%" height="15" fill="rgb(237,63,43)" fg:x="614" fg:w="4"/><text x="49.3307%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="49.0807%" y="293" width="0.3197%" height="15" fill="rgb(214,1,44)" fg:x="614" fg:w="4"/><text x="49.3307%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="49.0807%" y="277" width="0.3197%" height="15" fill="rgb(212,2,46)" fg:x="614" fg:w="4"/><text x="49.3307%" y="287.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="49.0807%" y="261" width="0.3197%" height="15" fill="rgb(213,142,5)" fg:x="614" fg:w="4"/><text x="49.3307%" y="271.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="49.0807%" y="245" width="0.3197%" height="15" fill="rgb(229,135,1)" fg:x="614" fg:w="4"/><text x="49.3307%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="49.4005%" y="389" width="0.0799%" height="15" fill="rgb(252,98,38)" fg:x="618" fg:w="1"/><text x="49.6505%" y="399.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="49.4005%" y="373" width="0.0799%" height="15" fill="rgb(206,89,40)" fg:x="618" fg:w="1"/><text x="49.6505%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.4005%" y="357" width="0.0799%" height="15" fill="rgb(219,73,36)" fg:x="618" fg:w="1"/><text x="49.6505%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="49.4005%" y="341" width="0.0799%" height="15" fill="rgb(207,168,32)" fg:x="618" fg:w="1"/><text x="49.6505%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="49.4005%" y="453" width="0.1599%" height="15" fill="rgb(215,113,21)" fg:x="618" fg:w="2"/><text x="49.6505%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="49.4005%" y="437" width="0.1599%" height="15" fill="rgb(217,144,43)" fg:x="618" fg:w="2"/><text x="49.6505%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="49.4005%" y="421" width="0.1599%" height="15" fill="rgb(249,48,50)" fg:x="618" fg:w="2"/><text x="49.6505%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="49.4005%" y="405" width="0.1599%" height="15" fill="rgb(242,1,26)" fg:x="618" fg:w="2"/><text x="49.6505%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="49.4804%" y="389" width="0.0799%" height="15" fill="rgb(231,167,42)" fg:x="619" fg:w="1"/><text x="49.7304%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.4804%" y="373" width="0.0799%" height="15" fill="rgb(242,177,45)" fg:x="619" fg:w="1"/><text x="49.7304%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.4804%" y="357" width="0.0799%" height="15" fill="rgb(232,121,42)" fg:x="619" fg:w="1"/><text x="49.7304%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.4804%" y="341" width="0.0799%" height="15" fill="rgb(205,8,42)" fg:x="619" fg:w="1"/><text x="49.7304%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.4804%" y="325" width="0.0799%" height="15" fill="rgb(238,199,24)" fg:x="619" fg:w="1"/><text x="49.7304%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.4804%" y="309" width="0.0799%" height="15" fill="rgb(228,112,2)" fg:x="619" fg:w="1"/><text x="49.7304%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.4804%" y="293" width="0.0799%" height="15" fill="rgb(215,115,33)" fg:x="619" fg:w="1"/><text x="49.7304%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.4804%" y="277" width="0.0799%" height="15" fill="rgb(230,209,34)" fg:x="619" fg:w="1"/><text x="49.7304%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="49.4005%" y="469" width="0.3197%" height="15" fill="rgb(246,76,12)" fg:x="618" fg:w="4"/><text x="49.6505%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="49.5604%" y="453" width="0.1599%" height="15" fill="rgb(240,110,9)" fg:x="620" fg:w="2"/><text x="49.8104%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="49.5604%" y="437" width="0.1599%" height="15" fill="rgb(224,94,46)" fg:x="620" fg:w="2"/><text x="49.8104%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.7202%" y="469" width="0.0799%" height="15" fill="rgb(247,150,22)" fg:x="622" fg:w="1"/><text x="49.9702%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="49.7202%" y="453" width="0.0799%" height="15" fill="rgb(249,85,13)" fg:x="622" fg:w="1"/><text x="49.9702%" y="463.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="49.8002%" y="469" width="0.0799%" height="15" fill="rgb(208,77,41)" fg:x="623" fg:w="1"/><text x="50.0502%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.9600%" y="437" width="0.0799%" height="15" fill="rgb(240,42,44)" fg:x="625" fg:w="1"/><text x="50.2100%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9600%" y="421" width="0.0799%" height="15" fill="rgb(222,10,51)" fg:x="625" fg:w="1"/><text x="50.2100%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.1998%" y="357" width="0.0799%" height="15" fill="rgb(208,146,53)" fg:x="628" fg:w="1"/><text x="50.4498%" y="367.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (38 samples, 3.04%)</title><rect x="47.3221%" y="517" width="3.0376%" height="15" fill="rgb(236,162,23)" fg:x="592" fg:w="38"/><text x="47.5721%" y="527.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.36%)</title><rect x="49.0008%" y="501" width="1.3589%" height="15" fill="rgb(218,66,21)" fg:x="613" fg:w="17"/><text x="49.2508%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (17 samples, 1.36%)</title><rect x="49.0008%" y="485" width="1.3589%" height="15" fill="rgb(233,6,47)" fg:x="613" fg:w="17"/><text x="49.2508%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="49.8801%" y="469" width="0.4796%" height="15" fill="rgb(236,59,51)" fg:x="624" fg:w="6"/><text x="50.1301%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="49.8801%" y="453" width="0.4796%" height="15" fill="rgb(242,12,46)" fg:x="624" fg:w="6"/><text x="50.1301%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="50.0400%" y="437" width="0.3197%" height="15" fill="rgb(243,142,19)" fg:x="626" fg:w="4"/><text x="50.2900%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="50.0400%" y="421" width="0.3197%" height="15" fill="rgb(217,28,17)" fg:x="626" fg:w="4"/><text x="50.2900%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="50.0400%" y="405" width="0.3197%" height="15" fill="rgb(228,2,27)" fg:x="626" fg:w="4"/><text x="50.2900%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="50.1199%" y="389" width="0.2398%" height="15" fill="rgb(214,221,4)" fg:x="627" fg:w="3"/><text x="50.3699%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.1199%" y="373" width="0.2398%" height="15" fill="rgb(224,69,26)" fg:x="627" fg:w="3"/><text x="50.3699%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="50.2798%" y="357" width="0.0799%" height="15" fill="rgb(219,70,4)" fg:x="629" fg:w="1"/><text x="50.5298%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="50.5995%" y="453" width="0.2398%" height="15" fill="rgb(218,157,39)" fg:x="633" fg:w="3"/><text x="50.8495%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="50.5995%" y="437" width="0.2398%" height="15" fill="rgb(238,36,28)" fg:x="633" fg:w="3"/><text x="50.8495%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="50.5995%" y="421" width="0.2398%" height="15" fill="rgb(232,29,0)" fg:x="633" fg:w="3"/><text x="50.8495%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="50.5995%" y="405" width="0.2398%" height="15" fill="rgb(243,138,46)" fg:x="633" fg:w="3"/><text x="50.8495%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="50.5995%" y="389" width="0.2398%" height="15" fill="rgb(232,186,41)" fg:x="633" fg:w="3"/><text x="50.8495%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="50.5995%" y="373" width="0.2398%" height="15" fill="rgb(252,166,17)" fg:x="633" fg:w="3"/><text x="50.8495%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="50.5995%" y="357" width="0.2398%" height="15" fill="rgb(228,179,12)" fg:x="633" fg:w="3"/><text x="50.8495%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="50.5995%" y="341" width="0.2398%" height="15" fill="rgb(254,205,53)" fg:x="633" fg:w="3"/><text x="50.8495%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="50.5995%" y="325" width="0.2398%" height="15" fill="rgb(224,163,47)" fg:x="633" fg:w="3"/><text x="50.8495%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="50.5995%" y="309" width="0.2398%" height="15" fill="rgb(208,43,47)" fg:x="633" fg:w="3"/><text x="50.8495%" y="319.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="50.5995%" y="293" width="0.2398%" height="15" fill="rgb(224,198,38)" fg:x="633" fg:w="3"/><text x="50.8495%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="50.5995%" y="277" width="0.2398%" height="15" fill="rgb(234,12,40)" fg:x="633" fg:w="3"/><text x="50.8495%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="50.5995%" y="469" width="0.3997%" height="15" fill="rgb(237,212,39)" fg:x="633" fg:w="5"/><text x="50.8495%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.8393%" y="453" width="0.1599%" height="15" fill="rgb(253,2,33)" fg:x="636" fg:w="2"/><text x="51.0893%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.8393%" y="437" width="0.1599%" height="15" fill="rgb(251,29,16)" fg:x="636" fg:w="2"/><text x="51.0893%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.8393%" y="421" width="0.1599%" height="15" fill="rgb(214,38,29)" fg:x="636" fg:w="2"/><text x="51.0893%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.8393%" y="405" width="0.1599%" height="15" fill="rgb(226,226,29)" fg:x="636" fg:w="2"/><text x="51.0893%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="50.8393%" y="389" width="0.1599%" height="15" fill="rgb(236,79,42)" fg:x="636" fg:w="2"/><text x="51.0893%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="50.8393%" y="373" width="0.1599%" height="15" fill="rgb(222,12,36)" fg:x="636" fg:w="2"/><text x="51.0893%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="50.8393%" y="357" width="0.1599%" height="15" fill="rgb(232,123,44)" fg:x="636" fg:w="2"/><text x="51.0893%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.8393%" y="341" width="0.1599%" height="15" fill="rgb(234,93,50)" fg:x="636" fg:w="2"/><text x="51.0893%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.8393%" y="325" width="0.1599%" height="15" fill="rgb(210,86,49)" fg:x="636" fg:w="2"/><text x="51.0893%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="50.8393%" y="309" width="0.1599%" height="15" fill="rgb(224,91,54)" fg:x="636" fg:w="2"/><text x="51.0893%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="50.8393%" y="293" width="0.1599%" height="15" fill="rgb(239,169,9)" fg:x="636" fg:w="2"/><text x="51.0893%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="50.8393%" y="277" width="0.1599%" height="15" fill="rgb(238,29,17)" fg:x="636" fg:w="2"/><text x="51.0893%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="50.8393%" y="261" width="0.1599%" height="15" fill="rgb(227,160,22)" fg:x="636" fg:w="2"/><text x="51.0893%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.8393%" y="245" width="0.1599%" height="15" fill="rgb(231,129,52)" fg:x="636" fg:w="2"/><text x="51.0893%" y="255.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="51.1591%" y="373" width="0.0799%" height="15" fill="rgb(241,184,9)" fg:x="640" fg:w="1"/><text x="51.4091%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="51.2390%" y="341" width="0.0799%" height="15" fill="rgb(217,43,48)" fg:x="641" fg:w="1"/><text x="51.4890%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.2390%" y="325" width="0.0799%" height="15" fill="rgb(213,49,1)" fg:x="641" fg:w="1"/><text x="51.4890%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.3989%" y="213" width="0.0799%" height="15" fill="rgb(223,79,39)" fg:x="643" fg:w="1"/><text x="51.6489%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.3989%" y="197" width="0.0799%" height="15" fill="rgb(228,227,46)" fg:x="643" fg:w="1"/><text x="51.6489%" y="207.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="51.2390%" y="357" width="0.3197%" height="15" fill="rgb(245,89,41)" fg:x="641" fg:w="4"/><text x="51.4890%" y="367.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="51.3189%" y="341" width="0.2398%" height="15" fill="rgb(253,83,21)" fg:x="642" fg:w="3"/><text x="51.5689%" y="351.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="51.3189%" y="325" width="0.2398%" height="15" fill="rgb(229,116,51)" fg:x="642" fg:w="3"/><text x="51.5689%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.3189%" y="309" width="0.2398%" height="15" fill="rgb(246,67,26)" fg:x="642" fg:w="3"/><text x="51.5689%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.3189%" y="293" width="0.2398%" height="15" fill="rgb(250,117,20)" fg:x="642" fg:w="3"/><text x="51.5689%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.3189%" y="277" width="0.2398%" height="15" fill="rgb(207,88,17)" fg:x="642" fg:w="3"/><text x="51.5689%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.3189%" y="261" width="0.2398%" height="15" fill="rgb(212,98,36)" fg:x="642" fg:w="3"/><text x="51.5689%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="51.3189%" y="245" width="0.2398%" height="15" fill="rgb(221,72,6)" fg:x="642" fg:w="3"/><text x="51.5689%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.3189%" y="229" width="0.2398%" height="15" fill="rgb(235,129,19)" fg:x="642" fg:w="3"/><text x="51.5689%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.4788%" y="213" width="0.0799%" height="15" fill="rgb(237,200,6)" fg:x="644" fg:w="1"/><text x="51.7288%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.4788%" y="197" width="0.0799%" height="15" fill="rgb(239,69,54)" fg:x="644" fg:w="1"/><text x="51.7288%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.4788%" y="181" width="0.0799%" height="15" fill="rgb(214,68,45)" fg:x="644" fg:w="1"/><text x="51.7288%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.4788%" y="165" width="0.0799%" height="15" fill="rgb(254,160,8)" fg:x="644" fg:w="1"/><text x="51.7288%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="51.4788%" y="149" width="0.0799%" height="15" fill="rgb(215,226,31)" fg:x="644" fg:w="1"/><text x="51.7288%" y="159.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="51.4788%" y="133" width="0.0799%" height="15" fill="rgb(253,6,35)" fg:x="644" fg:w="1"/><text x="51.7288%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.5588%" y="261" width="0.1599%" height="15" fill="rgb(219,96,42)" fg:x="645" fg:w="2"/><text x="51.8088%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.6387%" y="245" width="0.0799%" height="15" fill="rgb(207,170,13)" fg:x="646" fg:w="1"/><text x="51.8887%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.6387%" y="229" width="0.0799%" height="15" fill="rgb(239,101,5)" fg:x="646" fg:w="1"/><text x="51.8887%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.5588%" y="277" width="0.2398%" height="15" fill="rgb(228,183,34)" fg:x="645" fg:w="3"/><text x="51.8088%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.7186%" y="261" width="0.0799%" height="15" fill="rgb(205,28,31)" fg:x="647" fg:w="1"/><text x="51.9686%" y="271.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="51.5588%" y="325" width="0.3197%" height="15" fill="rgb(214,118,50)" fg:x="645" fg:w="4"/><text x="51.8088%" y="335.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.32%)</title><rect x="51.5588%" y="309" width="0.3197%" height="15" fill="rgb(213,108,51)" fg:x="645" fg:w="4"/><text x="51.8088%" y="319.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="51.5588%" y="293" width="0.3197%" height="15" fill="rgb(238,56,37)" fg:x="645" fg:w="4"/><text x="51.8088%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.7986%" y="277" width="0.0799%" height="15" fill="rgb(214,136,28)" fg:x="648" fg:w="1"/><text x="52.0486%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.7986%" y="261" width="0.0799%" height="15" fill="rgb(221,201,54)" fg:x="648" fg:w="1"/><text x="52.0486%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.7986%" y="245" width="0.0799%" height="15" fill="rgb(228,216,39)" fg:x="648" fg:w="1"/><text x="52.0486%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.7986%" y="229" width="0.0799%" height="15" fill="rgb(207,229,49)" fg:x="648" fg:w="1"/><text x="52.0486%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.7986%" y="213" width="0.0799%" height="15" fill="rgb(224,23,43)" fg:x="648" fg:w="1"/><text x="52.0486%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.7986%" y="197" width="0.0799%" height="15" fill="rgb(247,97,18)" fg:x="648" fg:w="1"/><text x="52.0486%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8785%" y="277" width="0.0799%" height="15" fill="rgb(232,53,32)" fg:x="649" fg:w="1"/><text x="52.1285%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8785%" y="261" width="0.0799%" height="15" fill="rgb(247,38,23)" fg:x="649" fg:w="1"/><text x="52.1285%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8785%" y="245" width="0.0799%" height="15" fill="rgb(228,101,52)" fg:x="649" fg:w="1"/><text x="52.1285%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8785%" y="229" width="0.0799%" height="15" fill="rgb(231,45,36)" fg:x="649" fg:w="1"/><text x="52.1285%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8785%" y="213" width="0.0799%" height="15" fill="rgb(221,183,50)" fg:x="649" fg:w="1"/><text x="52.1285%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8785%" y="197" width="0.0799%" height="15" fill="rgb(251,132,12)" fg:x="649" fg:w="1"/><text x="52.1285%" y="207.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="51.5588%" y="357" width="0.5596%" height="15" fill="rgb(252,50,16)" fg:x="645" fg:w="7"/><text x="51.8088%" y="367.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="51.5588%" y="341" width="0.5596%" height="15" fill="rgb(224,60,15)" fg:x="645" fg:w="7"/><text x="51.8088%" y="351.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="51.8785%" y="325" width="0.2398%" height="15" fill="rgb(254,2,34)" fg:x="649" fg:w="3"/><text x="52.1285%" y="335.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="51.8785%" y="309" width="0.2398%" height="15" fill="rgb(232,154,8)" fg:x="649" fg:w="3"/><text x="52.1285%" y="319.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="51.8785%" y="293" width="0.2398%" height="15" fill="rgb(235,190,52)" fg:x="649" fg:w="3"/><text x="52.1285%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.9584%" y="277" width="0.1599%" height="15" fill="rgb(213,218,38)" fg:x="650" fg:w="2"/><text x="52.2084%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.9584%" y="261" width="0.1599%" height="15" fill="rgb(237,50,37)" fg:x="650" fg:w="2"/><text x="52.2084%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.9584%" y="245" width="0.1599%" height="15" fill="rgb(235,51,35)" fg:x="650" fg:w="2"/><text x="52.2084%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.9584%" y="229" width="0.1599%" height="15" fill="rgb(244,40,52)" fg:x="650" fg:w="2"/><text x="52.2084%" y="239.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="51.9584%" y="213" width="0.1599%" height="15" fill="rgb(217,225,45)" fg:x="650" fg:w="2"/><text x="52.2084%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.9584%" y="197" width="0.1599%" height="15" fill="rgb(247,191,36)" fg:x="650" fg:w="2"/><text x="52.2084%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.9584%" y="181" width="0.1599%" height="15" fill="rgb(251,144,31)" fg:x="650" fg:w="2"/><text x="52.2084%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.0384%" y="165" width="0.0799%" height="15" fill="rgb(227,155,41)" fg:x="651" fg:w="1"/><text x="52.2884%" y="175.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="52.0384%" y="149" width="0.0799%" height="15" fill="rgb(236,121,36)" fg:x="651" fg:w="1"/><text x="52.2884%" y="159.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="52.1183%" y="357" width="0.1599%" height="15" fill="rgb(221,128,28)" fg:x="652" fg:w="2"/><text x="52.3683%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1982%" y="341" width="0.0799%" height="15" fill="rgb(249,67,50)" fg:x="653" fg:w="1"/><text x="52.4482%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="52.1982%" y="325" width="0.0799%" height="15" fill="rgb(241,126,38)" fg:x="653" fg:w="1"/><text x="52.4482%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.2782%" y="277" width="0.1599%" height="15" fill="rgb(239,33,14)" fg:x="654" fg:w="2"/><text x="52.5282%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.5180%" y="245" width="0.0799%" height="15" fill="rgb(207,221,54)" fg:x="657" fg:w="1"/><text x="52.7680%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.5180%" y="229" width="0.0799%" height="15" fill="rgb(242,138,43)" fg:x="657" fg:w="1"/><text x="52.7680%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.5979%" y="229" width="0.0799%" height="15" fill="rgb(231,118,19)" fg:x="658" fg:w="1"/><text x="52.8479%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="52.5979%" y="213" width="0.0799%" height="15" fill="rgb(214,128,54)" fg:x="658" fg:w="1"/><text x="52.8479%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.5979%" y="245" width="0.1599%" height="15" fill="rgb(236,136,6)" fg:x="658" fg:w="2"/><text x="52.8479%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6779%" y="229" width="0.0799%" height="15" fill="rgb(247,30,38)" fg:x="659" fg:w="1"/><text x="52.9279%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="52.8377%" y="133" width="0.0799%" height="15" fill="rgb(249,189,40)" fg:x="661" fg:w="1"/><text x="53.0877%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.8377%" y="117" width="0.0799%" height="15" fill="rgb(247,179,7)" fg:x="661" fg:w="1"/><text x="53.0877%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="52.8377%" y="101" width="0.0799%" height="15" fill="rgb(239,46,52)" fg:x="661" fg:w="1"/><text x="53.0877%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="52.8377%" y="85" width="0.0799%" height="15" fill="rgb(225,28,52)" fg:x="661" fg:w="1"/><text x="53.0877%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="52.8377%" y="165" width="0.1599%" height="15" fill="rgb(217,208,44)" fg:x="661" fg:w="2"/><text x="53.0877%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.8377%" y="149" width="0.1599%" height="15" fill="rgb(224,11,34)" fg:x="661" fg:w="2"/><text x="53.0877%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="52.9177%" y="133" width="0.0799%" height="15" fill="rgb(205,134,17)" fg:x="662" fg:w="1"/><text x="53.1677%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="52.8377%" y="197" width="0.2398%" height="15" fill="rgb(237,125,9)" fg:x="661" fg:w="3"/><text x="53.0877%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="52.8377%" y="181" width="0.2398%" height="15" fill="rgb(208,139,47)" fg:x="661" fg:w="3"/><text x="53.0877%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="52.9976%" y="165" width="0.0799%" height="15" fill="rgb(242,5,5)" fg:x="663" fg:w="1"/><text x="53.2476%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="52.8377%" y="229" width="0.3197%" height="15" fill="rgb(218,78,2)" fg:x="661" fg:w="4"/><text x="53.0877%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="52.8377%" y="213" width="0.3197%" height="15" fill="rgb(217,75,16)" fg:x="661" fg:w="4"/><text x="53.0877%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.0775%" y="197" width="0.0799%" height="15" fill="rgb(212,56,17)" fg:x="664" fg:w="1"/><text x="53.3275%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.0775%" y="181" width="0.0799%" height="15" fill="rgb(228,61,29)" fg:x="664" fg:w="1"/><text x="53.3275%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.0775%" y="165" width="0.0799%" height="15" fill="rgb(247,202,38)" fg:x="664" fg:w="1"/><text x="53.3275%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.0775%" y="149" width="0.0799%" height="15" fill="rgb(211,216,43)" fg:x="664" fg:w="1"/><text x="53.3275%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="53.0775%" y="133" width="0.0799%" height="15" fill="rgb(220,7,49)" fg:x="664" fg:w="1"/><text x="53.3275%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="53.1575%" y="229" width="0.0799%" height="15" fill="rgb(219,158,7)" fg:x="665" fg:w="1"/><text x="53.4075%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.1575%" y="213" width="0.0799%" height="15" fill="rgb(206,127,9)" fg:x="665" fg:w="1"/><text x="53.4075%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="53.1575%" y="197" width="0.0799%" height="15" fill="rgb(206,103,43)" fg:x="665" fg:w="1"/><text x="53.4075%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.1575%" y="181" width="0.0799%" height="15" fill="rgb(240,108,41)" fg:x="665" fg:w="1"/><text x="53.4075%" y="191.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (13 samples, 1.04%)</title><rect x="52.2782%" y="341" width="1.0392%" height="15" fill="rgb(252,212,6)" fg:x="654" fg:w="13"/><text x="52.5282%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (13 samples, 1.04%)</title><rect x="52.2782%" y="325" width="1.0392%" height="15" fill="rgb(248,105,31)" fg:x="654" fg:w="13"/><text x="52.5282%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.04%)</title><rect x="52.2782%" y="309" width="1.0392%" height="15" fill="rgb(241,123,4)" fg:x="654" fg:w="13"/><text x="52.5282%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="52.2782%" y="293" width="1.0392%" height="15" fill="rgb(223,74,37)" fg:x="654" fg:w="13"/><text x="52.5282%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (11 samples, 0.88%)</title><rect x="52.4380%" y="277" width="0.8793%" height="15" fill="rgb(251,219,28)" fg:x="656" fg:w="11"/><text x="52.6880%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="52.4380%" y="261" width="0.8793%" height="15" fill="rgb(218,36,31)" fg:x="656" fg:w="11"/><text x="52.6880%" y="271.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="52.7578%" y="245" width="0.5596%" height="15" fill="rgb(229,40,15)" fg:x="660" fg:w="7"/><text x="53.0078%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.2374%" y="229" width="0.0799%" height="15" fill="rgb(208,138,37)" fg:x="666" fg:w="1"/><text x="53.4874%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.2374%" y="213" width="0.0799%" height="15" fill="rgb(208,40,52)" fg:x="666" fg:w="1"/><text x="53.4874%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.2374%" y="197" width="0.0799%" height="15" fill="rgb(246,181,48)" fg:x="666" fg:w="1"/><text x="53.4874%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.3173%" y="261" width="0.0799%" height="15" fill="rgb(253,178,36)" fg:x="667" fg:w="1"/><text x="53.5673%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.3173%" y="245" width="0.0799%" height="15" fill="rgb(210,170,6)" fg:x="667" fg:w="1"/><text x="53.5673%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3973%" y="261" width="0.0799%" height="15" fill="rgb(243,62,22)" fg:x="668" fg:w="1"/><text x="53.6473%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3973%" y="245" width="0.0799%" height="15" fill="rgb(213,145,26)" fg:x="668" fg:w="1"/><text x="53.6473%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.3973%" y="229" width="0.0799%" height="15" fill="rgb(237,177,23)" fg:x="668" fg:w="1"/><text x="53.6473%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.5572%" y="229" width="0.0799%" height="15" fill="rgb(252,5,24)" fg:x="670" fg:w="1"/><text x="53.8072%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.5572%" y="213" width="0.0799%" height="15" fill="rgb(230,108,54)" fg:x="670" fg:w="1"/><text x="53.8072%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.6371%" y="229" width="0.0799%" height="15" fill="rgb(252,192,41)" fg:x="671" fg:w="1"/><text x="53.8871%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.6371%" y="213" width="0.0799%" height="15" fill="rgb(218,125,20)" fg:x="671" fg:w="1"/><text x="53.8871%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6371%" y="197" width="0.0799%" height="15" fill="rgb(230,223,15)" fg:x="671" fg:w="1"/><text x="53.8871%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.7970%" y="133" width="0.0799%" height="15" fill="rgb(239,99,47)" fg:x="673" fg:w="1"/><text x="54.0470%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.8769%" y="133" width="0.0799%" height="15" fill="rgb(222,214,23)" fg:x="674" fg:w="1"/><text x="54.1269%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.8769%" y="117" width="0.0799%" height="15" fill="rgb(250,98,43)" fg:x="674" fg:w="1"/><text x="54.1269%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8769%" y="101" width="0.0799%" height="15" fill="rgb(226,140,11)" fg:x="674" fg:w="1"/><text x="54.1269%" y="111.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (37 samples, 2.96%)</title><rect x="51.0791%" y="389" width="2.9576%" height="15" fill="rgb(239,2,22)" fg:x="639" fg:w="37"/><text x="51.3291%" y="399.50">&lt;en..</text></g><g><title>engine::internal::Entities::add_persisted (35 samples, 2.80%)</title><rect x="51.2390%" y="373" width="2.7978%" height="15" fill="rgb(209,106,26)" fg:x="641" fg:w="35"/><text x="51.4890%" y="383.50">en..</text></g><g><title>kernel::model::deserialize_entity (22 samples, 1.76%)</title><rect x="52.2782%" y="357" width="1.7586%" height="15" fill="rgb(209,135,11)" fg:x="654" fg:w="22"/><text x="52.5282%" y="367.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="53.3173%" y="341" width="0.7194%" height="15" fill="rgb(241,58,6)" fg:x="667" fg:w="9"/><text x="53.5673%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="53.3173%" y="325" width="0.7194%" height="15" fill="rgb(214,78,1)" fg:x="667" fg:w="9"/><text x="53.5673%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="53.3173%" y="309" width="0.7194%" height="15" fill="rgb(229,135,33)" fg:x="667" fg:w="9"/><text x="53.5673%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="53.3173%" y="293" width="0.7194%" height="15" fill="rgb(245,87,50)" fg:x="667" fg:w="9"/><text x="53.5673%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="53.3173%" y="277" width="0.7194%" height="15" fill="rgb(222,222,8)" fg:x="667" fg:w="9"/><text x="53.5673%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="53.4772%" y="261" width="0.5596%" height="15" fill="rgb(214,97,50)" fg:x="669" fg:w="7"/><text x="53.7272%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="53.5572%" y="245" width="0.4796%" height="15" fill="rgb(244,161,51)" fg:x="670" fg:w="6"/><text x="53.8072%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="53.7170%" y="229" width="0.3197%" height="15" fill="rgb(225,17,4)" fg:x="672" fg:w="4"/><text x="53.9670%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="53.7170%" y="213" width="0.3197%" height="15" fill="rgb(238,10,13)" fg:x="672" fg:w="4"/><text x="53.9670%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="53.7170%" y="197" width="0.3197%" height="15" fill="rgb(239,169,14)" fg:x="672" fg:w="4"/><text x="53.9670%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="53.7170%" y="181" width="0.3197%" height="15" fill="rgb(213,105,25)" fg:x="672" fg:w="4"/><text x="53.9670%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="53.7170%" y="165" width="0.3197%" height="15" fill="rgb(233,4,17)" fg:x="672" fg:w="4"/><text x="53.9670%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="53.7170%" y="149" width="0.3197%" height="15" fill="rgb(212,5,35)" fg:x="672" fg:w="4"/><text x="53.9670%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.9568%" y="133" width="0.0799%" height="15" fill="rgb(216,3,14)" fg:x="675" fg:w="1"/><text x="54.2068%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.9568%" y="117" width="0.0799%" height="15" fill="rgb(240,105,33)" fg:x="675" fg:w="1"/><text x="54.2068%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.9568%" y="101" width="0.0799%" height="15" fill="rgb(216,73,0)" fg:x="675" fg:w="1"/><text x="54.2068%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.9568%" y="85" width="0.0799%" height="15" fill="rgb(217,153,48)" fg:x="675" fg:w="1"/><text x="54.2068%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.9568%" y="69" width="0.0799%" height="15" fill="rgb(218,180,8)" fg:x="675" fg:w="1"/><text x="54.2068%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 3.12%)</title><rect x="50.9992%" y="421" width="3.1175%" height="15" fill="rgb(252,168,2)" fg:x="638" fg:w="39"/><text x="51.2492%" y="431.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (39 samples, 3.12%)</title><rect x="50.9992%" y="405" width="3.1175%" height="15" fill="rgb(224,116,33)" fg:x="638" fg:w="39"/><text x="51.2492%" y="415.50">&lt;en..</text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="54.0368%" y="389" width="0.0799%" height="15" fill="rgb(229,205,17)" fg:x="676" fg:w="1"/><text x="54.2868%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0368%" y="373" width="0.0799%" height="15" fill="rgb(234,1,41)" fg:x="676" fg:w="1"/><text x="54.2868%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0368%" y="357" width="0.0799%" height="15" fill="rgb(244,185,8)" fg:x="676" fg:w="1"/><text x="54.2868%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.0368%" y="341" width="0.0799%" height="15" fill="rgb(248,51,21)" fg:x="676" fg:w="1"/><text x="54.2868%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.0368%" y="325" width="0.0799%" height="15" fill="rgb(248,157,31)" fg:x="676" fg:w="1"/><text x="54.2868%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.0368%" y="309" width="0.0799%" height="15" fill="rgb(210,34,47)" fg:x="676" fg:w="1"/><text x="54.2868%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="54.0368%" y="293" width="0.0799%" height="15" fill="rgb(227,139,53)" fg:x="676" fg:w="1"/><text x="54.2868%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.0368%" y="277" width="0.0799%" height="15" fill="rgb(232,211,37)" fg:x="676" fg:w="1"/><text x="54.2868%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (40 samples, 3.20%)</title><rect x="50.9992%" y="453" width="3.1974%" height="15" fill="rgb(236,133,10)" fg:x="638" fg:w="40"/><text x="51.2492%" y="463.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 3.20%)</title><rect x="50.9992%" y="437" width="3.1974%" height="15" fill="rgb(243,202,25)" fg:x="638" fg:w="40"/><text x="51.2492%" y="447.50">&lt;al..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1167%" y="421" width="0.0799%" height="15" fill="rgb(224,59,9)" fg:x="677" fg:w="1"/><text x="54.3667%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (41 samples, 3.28%)</title><rect x="50.9992%" y="469" width="3.2774%" height="15" fill="rgb(206,146,16)" fg:x="638" fg:w="41"/><text x="51.2492%" y="479.50">&lt;pl..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="54.1966%" y="453" width="0.0799%" height="15" fill="rgb(220,47,2)" fg:x="678" fg:w="1"/><text x="54.4466%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.3565%" y="437" width="0.1599%" height="15" fill="rgb(225,124,51)" fg:x="680" fg:w="2"/><text x="54.6065%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.5164%" y="437" width="0.0799%" height="15" fill="rgb(241,220,50)" fg:x="682" fg:w="1"/><text x="54.7664%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5164%" y="421" width="0.0799%" height="15" fill="rgb(232,168,5)" fg:x="682" fg:w="1"/><text x="54.7664%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="54.5963%" y="437" width="0.2398%" height="15" fill="rgb(243,90,22)" fg:x="683" fg:w="3"/><text x="54.8463%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6763%" y="421" width="0.1599%" height="15" fill="rgb(223,153,32)" fg:x="684" fg:w="2"/><text x="54.9263%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.7562%" y="405" width="0.0799%" height="15" fill="rgb(243,124,20)" fg:x="685" fg:w="1"/><text x="55.0062%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.7562%" y="389" width="0.0799%" height="15" fill="rgb(246,168,39)" fg:x="685" fg:w="1"/><text x="55.0062%" y="399.50"></text></g><g><title>plugins_core::tools::get_contained_keys (57 samples, 4.56%)</title><rect x="50.3597%" y="517" width="4.5564%" height="15" fill="rgb(222,165,54)" fg:x="630" fg:w="57"/><text x="50.6097%" y="527.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (56 samples, 4.48%)</title><rect x="50.4396%" y="501" width="4.4764%" height="15" fill="rgb(251,142,27)" fg:x="631" fg:w="56"/><text x="50.6896%" y="511.50">kerne..</text></g><g><title>kernel::model::Entity::load_scope (56 samples, 4.48%)</title><rect x="50.4396%" y="485" width="4.4764%" height="15" fill="rgb(207,168,50)" fg:x="631" fg:w="56"/><text x="50.6896%" y="495.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="54.2766%" y="469" width="0.6395%" height="15" fill="rgb(250,139,25)" fg:x="679" fg:w="8"/><text x="54.5266%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="54.2766%" y="453" width="0.6395%" height="15" fill="rgb(214,194,48)" fg:x="679" fg:w="8"/><text x="54.5266%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="54.8361%" y="437" width="0.0799%" height="15" fill="rgb(227,138,47)" fg:x="686" fg:w="1"/><text x="55.0861%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="54.8361%" y="421" width="0.0799%" height="15" fill="rgb(250,162,5)" fg:x="686" fg:w="1"/><text x="55.0861%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="54.8361%" y="405" width="0.0799%" height="15" fill="rgb(229,74,25)" fg:x="686" fg:w="1"/><text x="55.0861%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.8361%" y="389" width="0.0799%" height="15" fill="rgb(221,124,34)" fg:x="686" fg:w="1"/><text x="55.0861%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.8361%" y="373" width="0.0799%" height="15" fill="rgb(225,94,25)" fg:x="686" fg:w="1"/><text x="55.0861%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9161%" y="485" width="0.0799%" height="15" fill="rgb(210,100,12)" fg:x="687" fg:w="1"/><text x="55.1661%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="54.9161%" y="501" width="0.1599%" height="15" fill="rgb(206,62,48)" fg:x="687" fg:w="2"/><text x="55.1661%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="54.9960%" y="485" width="0.0799%" height="15" fill="rgb(222,181,9)" fg:x="688" fg:w="1"/><text x="55.2460%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="54.9960%" y="469" width="0.0799%" height="15" fill="rgb(248,42,38)" fg:x="688" fg:w="1"/><text x="55.2460%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.1559%" y="469" width="0.0799%" height="15" fill="rgb(213,40,6)" fg:x="690" fg:w="1"/><text x="55.4059%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1559%" y="453" width="0.0799%" height="15" fill="rgb(211,108,15)" fg:x="690" fg:w="1"/><text x="55.4059%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.1559%" y="437" width="0.0799%" height="15" fill="rgb(249,62,9)" fg:x="690" fg:w="1"/><text x="55.4059%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1559%" y="421" width="0.0799%" height="15" fill="rgb(233,26,54)" fg:x="690" fg:w="1"/><text x="55.4059%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1559%" y="405" width="0.0799%" height="15" fill="rgb(210,175,26)" fg:x="690" fg:w="1"/><text x="55.4059%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.1559%" y="389" width="0.0799%" height="15" fill="rgb(210,43,33)" fg:x="690" fg:w="1"/><text x="55.4059%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.1559%" y="373" width="0.0799%" height="15" fill="rgb(224,46,17)" fg:x="690" fg:w="1"/><text x="55.4059%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.1559%" y="357" width="0.0799%" height="15" fill="rgb(254,24,38)" fg:x="690" fg:w="1"/><text x="55.4059%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.1559%" y="341" width="0.0799%" height="15" fill="rgb(248,32,0)" fg:x="690" fg:w="1"/><text x="55.4059%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.1559%" y="325" width="0.0799%" height="15" fill="rgb(224,37,41)" fg:x="690" fg:w="1"/><text x="55.4059%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.1559%" y="309" width="0.0799%" height="15" fill="rgb(252,70,22)" fg:x="690" fg:w="1"/><text x="55.4059%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.1559%" y="293" width="0.0799%" height="15" fill="rgb(241,123,50)" fg:x="690" fg:w="1"/><text x="55.4059%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.1559%" y="277" width="0.0799%" height="15" fill="rgb(246,138,33)" fg:x="690" fg:w="1"/><text x="55.4059%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.1559%" y="261" width="0.0799%" height="15" fill="rgb(218,39,32)" fg:x="690" fg:w="1"/><text x="55.4059%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.1559%" y="245" width="0.0799%" height="15" fill="rgb(241,229,10)" fg:x="690" fg:w="1"/><text x="55.4059%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (101 samples, 8.07%)</title><rect x="47.3221%" y="549" width="8.0735%" height="15" fill="rgb(212,160,10)" fg:x="592" fg:w="101"/><text x="47.5721%" y="559.50">&lt;alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (101 samples, 8.07%)</title><rect x="47.3221%" y="533" width="8.0735%" height="15" fill="rgb(227,48,51)" fg:x="592" fg:w="101"/><text x="47.5721%" y="543.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.48%)</title><rect x="54.9161%" y="517" width="0.4796%" height="15" fill="rgb(238,159,21)" fg:x="687" fg:w="6"/><text x="55.1661%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="55.0759%" y="501" width="0.3197%" height="15" fill="rgb(216,1,10)" fg:x="689" fg:w="4"/><text x="55.3259%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="55.0759%" y="485" width="0.3197%" height="15" fill="rgb(209,228,25)" fg:x="689" fg:w="4"/><text x="55.3259%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.2358%" y="469" width="0.1599%" height="15" fill="rgb(234,160,10)" fg:x="691" fg:w="2"/><text x="55.4858%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.2358%" y="453" width="0.1599%" height="15" fill="rgb(212,66,25)" fg:x="691" fg:w="2"/><text x="55.4858%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.3157%" y="437" width="0.0799%" height="15" fill="rgb(254,121,18)" fg:x="692" fg:w="1"/><text x="55.5657%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7954%" y="517" width="0.0799%" height="15" fill="rgb(219,127,1)" fg:x="698" fg:w="1"/><text x="56.0454%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="56.1151%" y="421" width="0.3997%" height="15" fill="rgb(219,224,42)" fg:x="702" fg:w="5"/><text x="56.3651%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="56.1151%" y="405" width="0.3997%" height="15" fill="rgb(253,130,22)" fg:x="702" fg:w="5"/><text x="56.3651%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.40%)</title><rect x="56.1151%" y="389" width="0.3997%" height="15" fill="rgb(253,39,28)" fg:x="702" fg:w="5"/><text x="56.3651%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.40%)</title><rect x="56.1151%" y="373" width="0.3997%" height="15" fill="rgb(231,126,37)" fg:x="702" fg:w="5"/><text x="56.3651%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.40%)</title><rect x="56.1151%" y="357" width="0.3997%" height="15" fill="rgb(251,145,14)" fg:x="702" fg:w="5"/><text x="56.3651%" y="367.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.40%)</title><rect x="56.1151%" y="341" width="0.3997%" height="15" fill="rgb(229,164,30)" fg:x="702" fg:w="5"/><text x="56.3651%" y="351.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="56.1151%" y="325" width="0.3997%" height="15" fill="rgb(233,227,54)" fg:x="702" fg:w="5"/><text x="56.3651%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="56.0352%" y="501" width="0.5596%" height="15" fill="rgb(240,94,22)" fg:x="701" fg:w="7"/><text x="56.2852%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="56.1151%" y="485" width="0.4796%" height="15" fill="rgb(217,56,16)" fg:x="702" fg:w="6"/><text x="56.3651%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.48%)</title><rect x="56.1151%" y="469" width="0.4796%" height="15" fill="rgb(229,133,38)" fg:x="702" fg:w="6"/><text x="56.3651%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.48%)</title><rect x="56.1151%" y="453" width="0.4796%" height="15" fill="rgb(225,139,35)" fg:x="702" fg:w="6"/><text x="56.3651%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.48%)</title><rect x="56.1151%" y="437" width="0.4796%" height="15" fill="rgb(223,100,16)" fg:x="702" fg:w="6"/><text x="56.3651%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.5148%" y="421" width="0.0799%" height="15" fill="rgb(207,43,50)" fg:x="707" fg:w="1"/><text x="56.7648%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.5148%" y="405" width="0.0799%" height="15" fill="rgb(237,221,9)" fg:x="707" fg:w="1"/><text x="56.7648%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="56.7546%" y="485" width="0.2398%" height="15" fill="rgb(236,134,24)" fg:x="710" fg:w="3"/><text x="57.0046%" y="495.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="56.7546%" y="469" width="0.2398%" height="15" fill="rgb(222,173,4)" fg:x="710" fg:w="3"/><text x="57.0046%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="56.9944%" y="485" width="0.0799%" height="15" fill="rgb(234,144,52)" fg:x="713" fg:w="1"/><text x="57.2444%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9944%" y="469" width="0.0799%" height="15" fill="rgb(223,41,7)" fg:x="713" fg:w="1"/><text x="57.2444%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9944%" y="453" width="0.0799%" height="15" fill="rgb(226,143,9)" fg:x="713" fg:w="1"/><text x="57.2444%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.9944%" y="437" width="0.0799%" height="15" fill="rgb(234,43,37)" fg:x="713" fg:w="1"/><text x="57.2444%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.9944%" y="421" width="0.0799%" height="15" fill="rgb(224,188,11)" fg:x="713" fg:w="1"/><text x="57.2444%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.9944%" y="405" width="0.0799%" height="15" fill="rgb(233,113,28)" fg:x="713" fg:w="1"/><text x="57.2444%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9944%" y="389" width="0.0799%" height="15" fill="rgb(215,16,1)" fg:x="713" fg:w="1"/><text x="57.2444%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9944%" y="373" width="0.0799%" height="15" fill="rgb(238,74,38)" fg:x="713" fg:w="1"/><text x="57.2444%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.9944%" y="357" width="0.0799%" height="15" fill="rgb(221,66,35)" fg:x="713" fg:w="1"/><text x="57.2444%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.9944%" y="341" width="0.0799%" height="15" fill="rgb(251,225,2)" fg:x="713" fg:w="1"/><text x="57.2444%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.9944%" y="325" width="0.0799%" height="15" fill="rgb(240,169,18)" fg:x="713" fg:w="1"/><text x="57.2444%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.9944%" y="309" width="0.0799%" height="15" fill="rgb(243,130,50)" fg:x="713" fg:w="1"/><text x="57.2444%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9944%" y="293" width="0.0799%" height="15" fill="rgb(228,75,13)" fg:x="713" fg:w="1"/><text x="57.2444%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.2342%" y="357" width="0.0799%" height="15" fill="rgb(252,95,35)" fg:x="716" fg:w="1"/><text x="57.4842%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.2342%" y="341" width="0.0799%" height="15" fill="rgb(222,180,54)" fg:x="716" fg:w="1"/><text x="57.4842%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="57.2342%" y="325" width="0.0799%" height="15" fill="rgb(250,110,34)" fg:x="716" fg:w="1"/><text x="57.4842%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="57.2342%" y="309" width="0.0799%" height="15" fill="rgb(208,100,21)" fg:x="716" fg:w="1"/><text x="57.4842%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="57.2342%" y="293" width="0.0799%" height="15" fill="rgb(209,123,47)" fg:x="716" fg:w="1"/><text x="57.4842%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="57.2342%" y="277" width="0.0799%" height="15" fill="rgb(237,147,9)" fg:x="716" fg:w="1"/><text x="57.4842%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.2342%" y="261" width="0.0799%" height="15" fill="rgb(228,206,23)" fg:x="716" fg:w="1"/><text x="57.4842%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.2342%" y="245" width="0.0799%" height="15" fill="rgb(217,174,46)" fg:x="716" fg:w="1"/><text x="57.4842%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.2342%" y="229" width="0.0799%" height="15" fill="rgb(231,126,21)" fg:x="716" fg:w="1"/><text x="57.4842%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="57.2342%" y="213" width="0.0799%" height="15" fill="rgb(245,26,1)" fg:x="716" fg:w="1"/><text x="57.4842%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.2342%" y="197" width="0.0799%" height="15" fill="rgb(224,138,39)" fg:x="716" fg:w="1"/><text x="57.4842%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2342%" y="181" width="0.0799%" height="15" fill="rgb(208,97,3)" fg:x="716" fg:w="1"/><text x="57.4842%" y="191.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.4740%" y="277" width="0.0799%" height="15" fill="rgb(222,77,29)" fg:x="719" fg:w="1"/><text x="57.7240%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.4740%" y="261" width="0.0799%" height="15" fill="rgb(243,188,36)" fg:x="719" fg:w="1"/><text x="57.7240%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="57.4740%" y="245" width="0.0799%" height="15" fill="rgb(218,214,3)" fg:x="719" fg:w="1"/><text x="57.7240%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="57.4740%" y="229" width="0.0799%" height="15" fill="rgb(211,183,45)" fg:x="719" fg:w="1"/><text x="57.7240%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="57.4740%" y="213" width="0.0799%" height="15" fill="rgb(230,218,25)" fg:x="719" fg:w="1"/><text x="57.7240%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="57.4740%" y="197" width="0.0799%" height="15" fill="rgb(233,86,6)" fg:x="719" fg:w="1"/><text x="57.7240%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.4740%" y="181" width="0.0799%" height="15" fill="rgb(220,59,24)" fg:x="719" fg:w="1"/><text x="57.7240%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.4740%" y="165" width="0.0799%" height="15" fill="rgb(227,60,1)" fg:x="719" fg:w="1"/><text x="57.7240%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.4740%" y="149" width="0.0799%" height="15" fill="rgb(216,212,54)" fg:x="719" fg:w="1"/><text x="57.7240%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="57.4740%" y="133" width="0.0799%" height="15" fill="rgb(227,81,54)" fg:x="719" fg:w="1"/><text x="57.7240%" y="143.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="57.4740%" y="117" width="0.0799%" height="15" fill="rgb(206,204,43)" fg:x="719" fg:w="1"/><text x="57.7240%" y="127.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="57.4740%" y="101" width="0.0799%" height="15" fill="rgb(219,29,26)" fg:x="719" fg:w="1"/><text x="57.7240%" y="111.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="57.4740%" y="85" width="0.0799%" height="15" fill="rgb(252,40,36)" fg:x="719" fg:w="1"/><text x="57.7240%" y="95.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (13 samples, 1.04%)</title><rect x="56.5947%" y="501" width="1.0392%" height="15" fill="rgb(224,205,39)" fg:x="708" fg:w="13"/><text x="56.8447%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="57.0743%" y="485" width="0.5596%" height="15" fill="rgb(222,13,21)" fg:x="714" fg:w="7"/><text x="57.3243%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.48%)</title><rect x="57.1543%" y="469" width="0.4796%" height="15" fill="rgb(243,139,6)" fg:x="715" fg:w="6"/><text x="57.4043%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.48%)</title><rect x="57.1543%" y="453" width="0.4796%" height="15" fill="rgb(237,101,11)" fg:x="715" fg:w="6"/><text x="57.4043%" y="463.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="57.1543%" y="437" width="0.4796%" height="15" fill="rgb(254,49,28)" fg:x="715" fg:w="6"/><text x="57.4043%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.48%)</title><rect x="57.1543%" y="421" width="0.4796%" height="15" fill="rgb(223,41,21)" fg:x="715" fg:w="6"/><text x="57.4043%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.48%)</title><rect x="57.1543%" y="405" width="0.4796%" height="15" fill="rgb(225,103,29)" fg:x="715" fg:w="6"/><text x="57.4043%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.48%)</title><rect x="57.1543%" y="389" width="0.4796%" height="15" fill="rgb(244,82,43)" fg:x="715" fg:w="6"/><text x="57.4043%" y="399.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="57.2342%" y="373" width="0.3997%" height="15" fill="rgb(217,39,3)" fg:x="716" fg:w="5"/><text x="57.4842%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="57.3141%" y="357" width="0.3197%" height="15" fill="rgb(239,128,25)" fg:x="717" fg:w="4"/><text x="57.5641%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (4 samples, 0.32%)</title><rect x="57.3141%" y="341" width="0.3197%" height="15" fill="rgb(210,192,37)" fg:x="717" fg:w="4"/><text x="57.5641%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="57.4740%" y="325" width="0.1599%" height="15" fill="rgb(219,98,18)" fg:x="719" fg:w="2"/><text x="57.7240%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="57.4740%" y="309" width="0.1599%" height="15" fill="rgb(224,228,38)" fg:x="719" fg:w="2"/><text x="57.7240%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="57.4740%" y="293" width="0.1599%" height="15" fill="rgb(241,129,43)" fg:x="719" fg:w="2"/><text x="57.7240%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="57.5540%" y="277" width="0.0799%" height="15" fill="rgb(223,8,51)" fg:x="720" fg:w="1"/><text x="57.8040%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="60.1918%" y="149" width="0.0799%" height="15" fill="rgb(233,76,24)" fg:x="753" fg:w="1"/><text x="60.4418%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.2718%" y="149" width="0.0799%" height="15" fill="rgb(219,115,10)" fg:x="754" fg:w="1"/><text x="60.5218%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.48%)</title><rect x="59.9520%" y="197" width="0.4796%" height="15" fill="rgb(222,137,12)" fg:x="750" fg:w="6"/><text x="60.2020%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="60.1918%" y="181" width="0.2398%" height="15" fill="rgb(216,192,16)" fg:x="753" fg:w="3"/><text x="60.4418%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="60.1918%" y="165" width="0.2398%" height="15" fill="rgb(247,6,27)" fg:x="753" fg:w="3"/><text x="60.4418%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3517%" y="149" width="0.0799%" height="15" fill="rgb(254,39,44)" fg:x="755" fg:w="1"/><text x="60.6017%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3517%" y="133" width="0.0799%" height="15" fill="rgb(251,116,35)" fg:x="755" fg:w="1"/><text x="60.6017%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.4317%" y="197" width="0.0799%" height="15" fill="rgb(208,61,44)" fg:x="756" fg:w="1"/><text x="60.6817%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4317%" y="181" width="0.0799%" height="15" fill="rgb(250,34,5)" fg:x="756" fg:w="1"/><text x="60.6817%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.88%)</title><rect x="59.8721%" y="213" width="0.8793%" height="15" fill="rgb(241,40,15)" fg:x="749" fg:w="11"/><text x="60.1221%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="60.5116%" y="197" width="0.2398%" height="15" fill="rgb(229,182,2)" fg:x="757" fg:w="3"/><text x="60.7616%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="60.5915%" y="181" width="0.1599%" height="15" fill="rgb(244,148,52)" fg:x="758" fg:w="2"/><text x="60.8415%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.28%)</title><rect x="59.7922%" y="261" width="1.2790%" height="15" fill="rgb(225,211,4)" fg:x="748" fg:w="16"/><text x="60.0422%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (15 samples, 1.20%)</title><rect x="59.8721%" y="245" width="1.1990%" height="15" fill="rgb(208,222,47)" fg:x="749" fg:w="15"/><text x="60.1221%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 1.20%)</title><rect x="59.8721%" y="229" width="1.1990%" height="15" fill="rgb(233,162,0)" fg:x="749" fg:w="15"/><text x="60.1221%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="60.7514%" y="213" width="0.3197%" height="15" fill="rgb(241,54,13)" fg:x="760" fg:w="4"/><text x="61.0014%" y="223.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="60.8313%" y="197" width="0.2398%" height="15" fill="rgb(213,89,18)" fg:x="761" fg:w="3"/><text x="61.0813%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (17 samples, 1.36%)</title><rect x="59.7922%" y="293" width="1.3589%" height="15" fill="rgb(215,170,37)" fg:x="748" fg:w="17"/><text x="60.0422%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.36%)</title><rect x="59.7922%" y="277" width="1.3589%" height="15" fill="rgb(216,133,15)" fg:x="748" fg:w="17"/><text x="60.0422%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="61.0711%" y="261" width="0.0799%" height="15" fill="rgb(230,42,19)" fg:x="764" fg:w="1"/><text x="61.3211%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.1511%" y="293" width="0.0799%" height="15" fill="rgb(221,103,41)" fg:x="765" fg:w="1"/><text x="61.4011%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 1.60%)</title><rect x="59.7122%" y="309" width="1.5987%" height="15" fill="rgb(220,142,31)" fg:x="747" fg:w="20"/><text x="59.9622%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.2310%" y="293" width="0.0799%" height="15" fill="rgb(239,218,4)" fg:x="766" fg:w="1"/><text x="61.4810%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (23 samples, 1.84%)</title><rect x="59.6323%" y="325" width="1.8385%" height="15" fill="rgb(232,16,4)" fg:x="746" fg:w="23"/><text x="59.8823%" y="335.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="61.3110%" y="309" width="0.1599%" height="15" fill="rgb(226,213,25)" fg:x="767" fg:w="2"/><text x="61.5610%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.3110%" y="293" width="0.1599%" height="15" fill="rgb(235,135,19)" fg:x="767" fg:w="2"/><text x="61.5610%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (26 samples, 2.08%)</title><rect x="59.4724%" y="341" width="2.0783%" height="15" fill="rgb(240,107,29)" fg:x="744" fg:w="26"/><text x="59.7224%" y="351.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.4708%" y="325" width="0.0799%" height="15" fill="rgb(206,164,44)" fg:x="769" fg:w="1"/><text x="61.7208%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="61.4708%" y="309" width="0.0799%" height="15" fill="rgb(210,23,48)" fg:x="769" fg:w="1"/><text x="61.7208%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="61.5508%" y="341" width="0.1599%" height="15" fill="rgb(212,138,25)" fg:x="770" fg:w="2"/><text x="61.8008%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="61.5508%" y="325" width="0.1599%" height="15" fill="rgb(224,152,3)" fg:x="770" fg:w="2"/><text x="61.8008%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 2.56%)</title><rect x="59.2326%" y="357" width="2.5580%" height="15" fill="rgb(214,38,23)" fg:x="741" fg:w="32"/><text x="59.4826%" y="367.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.7106%" y="341" width="0.0799%" height="15" fill="rgb(215,161,10)" fg:x="772" fg:w="1"/><text x="61.9606%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (35 samples, 2.80%)</title><rect x="59.0727%" y="389" width="2.7978%" height="15" fill="rgb(240,185,7)" fg:x="739" fg:w="35"/><text x="59.3227%" y="399.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (33 samples, 2.64%)</title><rect x="59.2326%" y="373" width="2.6379%" height="15" fill="rgb(244,104,25)" fg:x="741" fg:w="33"/><text x="59.4826%" y="383.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="61.7906%" y="357" width="0.0799%" height="15" fill="rgb(242,140,44)" fg:x="773" fg:w="1"/><text x="62.0406%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7906%" y="341" width="0.0799%" height="15" fill="rgb(245,30,19)" fg:x="773" fg:w="1"/><text x="62.0406%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="61.8705%" y="389" width="0.2398%" height="15" fill="rgb(219,208,35)" fg:x="774" fg:w="3"/><text x="62.1205%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="61.9504%" y="373" width="0.1599%" height="15" fill="rgb(235,200,7)" fg:x="775" fg:w="2"/><text x="62.2004%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.2702%" y="373" width="0.0799%" height="15" fill="rgb(220,193,10)" fg:x="779" fg:w="1"/><text x="62.5202%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 4.08%)</title><rect x="58.4333%" y="405" width="4.0767%" height="15" fill="rgb(212,216,39)" fg:x="731" fg:w="51"/><text x="58.6833%" y="415.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="62.1103%" y="389" width="0.3997%" height="15" fill="rgb(212,134,19)" fg:x="777" fg:w="5"/><text x="62.3603%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.3501%" y="373" width="0.1599%" height="15" fill="rgb(230,57,24)" fg:x="780" fg:w="2"/><text x="62.6001%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (61 samples, 4.88%)</title><rect x="58.1135%" y="437" width="4.8761%" height="15" fill="rgb(238,209,37)" fg:x="727" fg:w="61"/><text x="58.3635%" y="447.50">&lt;rpc_p..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (58 samples, 4.64%)</title><rect x="58.3533%" y="421" width="4.6363%" height="15" fill="rgb(247,11,45)" fg:x="730" fg:w="58"/><text x="58.6033%" y="431.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="62.5100%" y="405" width="0.4796%" height="15" fill="rgb(222,126,6)" fg:x="782" fg:w="6"/><text x="62.7600%" y="415.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="62.5899%" y="389" width="0.3997%" height="15" fill="rgb(245,77,24)" fg:x="783" fg:w="5"/><text x="62.8399%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="63.0695%" y="421" width="0.3197%" height="15" fill="rgb(227,14,24)" fg:x="789" fg:w="4"/><text x="63.3195%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="63.3094%" y="405" width="0.0799%" height="15" fill="rgb(211,112,42)" fg:x="792" fg:w="1"/><text x="63.5594%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70 samples, 5.60%)</title><rect x="57.8737%" y="453" width="5.5955%" height="15" fill="rgb(230,103,42)" fg:x="724" fg:w="70"/><text x="58.1237%" y="463.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="62.9896%" y="437" width="0.4796%" height="15" fill="rgb(228,125,42)" fg:x="788" fg:w="6"/><text x="63.2396%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3893%" y="421" width="0.0799%" height="15" fill="rgb(243,33,6)" fg:x="793" fg:w="1"/><text x="63.6393%" y="431.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (80 samples, 6.39%)</title><rect x="57.7138%" y="485" width="6.3949%" height="15" fill="rgb(231,2,40)" fg:x="722" fg:w="80"/><text x="57.9638%" y="495.50">&lt;rpc_pro..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (79 samples, 6.31%)</title><rect x="57.7938%" y="469" width="6.3149%" height="15" fill="rgb(224,200,53)" fg:x="723" fg:w="79"/><text x="58.0438%" y="479.50">&lt;std::co..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.64%)</title><rect x="63.4692%" y="453" width="0.6395%" height="15" fill="rgb(215,116,36)" fg:x="794" fg:w="8"/><text x="63.7192%" y="463.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="63.5492%" y="437" width="0.5596%" height="15" fill="rgb(240,23,51)" fg:x="795" fg:w="7"/><text x="63.7992%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="64.1087%" y="453" width="0.0799%" height="15" fill="rgb(221,72,5)" fg:x="802" fg:w="1"/><text x="64.3587%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5084%" y="437" width="0.0799%" height="15" fill="rgb(245,142,9)" fg:x="807" fg:w="1"/><text x="64.7584%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="64.5883%" y="437" width="0.3997%" height="15" fill="rgb(207,34,16)" fg:x="808" fg:w="5"/><text x="64.8383%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="64.7482%" y="421" width="0.2398%" height="15" fill="rgb(252,101,12)" fg:x="810" fg:w="3"/><text x="64.9982%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="64.9081%" y="405" width="0.0799%" height="15" fill="rgb(239,89,37)" fg:x="812" fg:w="1"/><text x="65.1581%" y="415.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="64.9880%" y="437" width="0.0799%" height="15" fill="rgb(252,227,37)" fg:x="813" fg:w="1"/><text x="65.2380%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="65.0679%" y="437" width="0.2398%" height="15" fill="rgb(212,164,17)" fg:x="814" fg:w="3"/><text x="65.3179%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="65.1479%" y="421" width="0.1599%" height="15" fill="rgb(240,86,13)" fg:x="815" fg:w="2"/><text x="65.3979%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="65.2278%" y="405" width="0.0799%" height="15" fill="rgb(233,183,32)" fg:x="816" fg:w="1"/><text x="65.4778%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="65.2278%" y="389" width="0.0799%" height="15" fill="rgb(205,201,38)" fg:x="816" fg:w="1"/><text x="65.4778%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="65.3078%" y="437" width="0.0799%" height="15" fill="rgb(210,122,38)" fg:x="817" fg:w="1"/><text x="65.5578%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="65.3078%" y="421" width="0.0799%" height="15" fill="rgb(241,174,26)" fg:x="817" fg:w="1"/><text x="65.5578%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3078%" y="405" width="0.0799%" height="15" fill="rgb(219,89,7)" fg:x="817" fg:w="1"/><text x="65.5578%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="65.3877%" y="437" width="0.1599%" height="15" fill="rgb(246,9,24)" fg:x="818" fg:w="2"/><text x="65.6377%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="65.4676%" y="421" width="0.0799%" height="15" fill="rgb(205,132,21)" fg:x="819" fg:w="1"/><text x="65.7176%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.4676%" y="405" width="0.0799%" height="15" fill="rgb(210,11,17)" fg:x="819" fg:w="1"/><text x="65.7176%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="65.6275%" y="421" width="0.0799%" height="15" fill="rgb(226,138,14)" fg:x="821" fg:w="1"/><text x="65.8775%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (4 samples, 0.32%)</title><rect x="65.5476%" y="437" width="0.3197%" height="15" fill="rgb(224,108,44)" fg:x="820" fg:w="4"/><text x="65.7976%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="65.7074%" y="421" width="0.1599%" height="15" fill="rgb(247,114,36)" fg:x="822" fg:w="2"/><text x="65.9574%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7874%" y="405" width="0.0799%" height="15" fill="rgb(231,183,14)" fg:x="823" fg:w="1"/><text x="66.0374%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.1071%" y="421" width="0.1599%" height="15" fill="rgb(218,168,4)" fg:x="827" fg:w="2"/><text x="66.3571%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.2670%" y="421" width="0.0799%" height="15" fill="rgb(210,8,3)" fg:x="829" fg:w="1"/><text x="66.5170%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.2670%" y="405" width="0.0799%" height="15" fill="rgb(216,165,0)" fg:x="829" fg:w="1"/><text x="66.5170%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2670%" y="389" width="0.0799%" height="15" fill="rgb(245,120,5)" fg:x="829" fg:w="1"/><text x="66.5170%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.3469%" y="389" width="0.0799%" height="15" fill="rgb(249,121,32)" fg:x="830" fg:w="1"/><text x="66.5969%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.3469%" y="373" width="0.0799%" height="15" fill="rgb(211,55,33)" fg:x="830" fg:w="1"/><text x="66.5969%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="66.7466%" y="357" width="0.0799%" height="15" fill="rgb(254,46,35)" fg:x="835" fg:w="1"/><text x="66.9966%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="66.8265%" y="357" width="0.0799%" height="15" fill="rgb(213,213,19)" fg:x="836" fg:w="1"/><text x="67.0765%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="66.4269%" y="389" width="0.5596%" height="15" fill="rgb(207,152,44)" fg:x="831" fg:w="7"/><text x="66.6769%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="66.5867%" y="373" width="0.3997%" height="15" fill="rgb(227,195,36)" fg:x="833" fg:w="5"/><text x="66.8367%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.9065%" y="357" width="0.0799%" height="15" fill="rgb(210,137,36)" fg:x="837" fg:w="1"/><text x="67.1565%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="67.1463%" y="357" width="0.2398%" height="15" fill="rgb(253,47,47)" fg:x="840" fg:w="3"/><text x="67.3963%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.2262%" y="341" width="0.1599%" height="15" fill="rgb(230,147,18)" fg:x="841" fg:w="2"/><text x="67.4762%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.2262%" y="325" width="0.1599%" height="15" fill="rgb(247,33,49)" fg:x="841" fg:w="2"/><text x="67.4762%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.6259%" y="341" width="0.0799%" height="15" fill="rgb(239,26,29)" fg:x="846" fg:w="1"/><text x="67.8759%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8657%" y="325" width="0.0799%" height="15" fill="rgb(245,145,52)" fg:x="849" fg:w="1"/><text x="68.1157%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8657%" y="309" width="0.0799%" height="15" fill="rgb(224,139,32)" fg:x="849" fg:w="1"/><text x="68.1157%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8657%" y="293" width="0.0799%" height="15" fill="rgb(238,202,19)" fg:x="849" fg:w="1"/><text x="68.1157%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.9456%" y="309" width="0.0799%" height="15" fill="rgb(249,211,53)" fg:x="850" fg:w="1"/><text x="68.1956%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="68.2654%" y="277" width="0.1599%" height="15" fill="rgb(237,229,33)" fg:x="854" fg:w="2"/><text x="68.5154%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.2654%" y="261" width="0.1599%" height="15" fill="rgb(208,97,40)" fg:x="854" fg:w="2"/><text x="68.5154%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4253%" y="277" width="0.0799%" height="15" fill="rgb(254,36,16)" fg:x="856" fg:w="1"/><text x="68.6753%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="68.0256%" y="309" width="0.5596%" height="15" fill="rgb(221,7,12)" fg:x="851" fg:w="7"/><text x="68.2756%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="68.1855%" y="293" width="0.3997%" height="15" fill="rgb(205,11,12)" fg:x="853" fg:w="5"/><text x="68.4355%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="68.5052%" y="277" width="0.0799%" height="15" fill="rgb(227,72,28)" fg:x="857" fg:w="1"/><text x="68.7552%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="68.5052%" y="261" width="0.0799%" height="15" fill="rgb(228,7,34)" fg:x="857" fg:w="1"/><text x="68.7552%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.04%)</title><rect x="67.7058%" y="341" width="1.0392%" height="15" fill="rgb(230,52,42)" fg:x="847" fg:w="13"/><text x="67.9558%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="67.9456%" y="325" width="0.7994%" height="15" fill="rgb(219,177,53)" fg:x="850" fg:w="10"/><text x="68.1956%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.5851%" y="309" width="0.1599%" height="15" fill="rgb(243,196,34)" fg:x="858" fg:w="2"/><text x="68.8351%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 1.76%)</title><rect x="67.0663%" y="373" width="1.7586%" height="15" fill="rgb(213,66,49)" fg:x="839" fg:w="22"/><text x="67.3163%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.44%)</title><rect x="67.3861%" y="357" width="1.4388%" height="15" fill="rgb(233,11,50)" fg:x="843" fg:w="18"/><text x="67.6361%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.7450%" y="341" width="0.0799%" height="15" fill="rgb(235,190,6)" fg:x="860" fg:w="1"/><text x="68.9950%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (34 samples, 2.72%)</title><rect x="66.3469%" y="405" width="2.7178%" height="15" fill="rgb(212,64,44)" fg:x="830" fg:w="34"/><text x="66.5969%" y="415.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (26 samples, 2.08%)</title><rect x="66.9864%" y="389" width="2.0783%" height="15" fill="rgb(206,95,44)" fg:x="838" fg:w="26"/><text x="67.2364%" y="399.50">s..</text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="68.8249%" y="373" width="0.2398%" height="15" fill="rgb(227,136,25)" fg:x="861" fg:w="3"/><text x="69.0749%" y="383.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (147 samples, 11.75%)</title><rect x="57.6339%" y="501" width="11.7506%" height="15" fill="rgb(206,178,17)" fg:x="721" fg:w="147"/><text x="57.8839%" y="511.50">&lt;rpc_proto::Json ..</text></g><g><title>kernel::model::EntityPtr::to_json_value (66 samples, 5.28%)</title><rect x="64.1087%" y="485" width="5.2758%" height="15" fill="rgb(208,168,35)" fg:x="802" fg:w="66"/><text x="64.3587%" y="495.50">kernel..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (66 samples, 5.28%)</title><rect x="64.1087%" y="469" width="5.2758%" height="15" fill="rgb(213,210,40)" fg:x="802" fg:w="66"/><text x="64.3587%" y="479.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (65 samples, 5.20%)</title><rect x="64.1886%" y="453" width="5.1958%" height="15" fill="rgb(236,60,6)" fg:x="803" fg:w="65"/><text x="64.4386%" y="463.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (44 samples, 3.52%)</title><rect x="65.8673%" y="437" width="3.5172%" height="15" fill="rgb(220,186,36)" fg:x="824" fg:w="44"/><text x="66.1173%" y="447.50">ser..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (38 samples, 3.04%)</title><rect x="66.3469%" y="421" width="3.0376%" height="15" fill="rgb(225,120,49)" fg:x="830" fg:w="38"/><text x="66.5969%" y="431.50">ker..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="69.0647%" y="405" width="0.3197%" height="15" fill="rgb(250,115,20)" fg:x="864" fg:w="4"/><text x="69.3147%" y="415.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="69.0647%" y="389" width="0.3197%" height="15" fill="rgb(207,214,23)" fg:x="864" fg:w="4"/><text x="69.3147%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.3845%" y="501" width="0.0799%" height="15" fill="rgb(240,9,18)" fg:x="868" fg:w="1"/><text x="69.6345%" y="511.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (289 samples, 23.10%)</title><rect x="46.5228%" y="581" width="23.1015%" height="15" fill="rgb(232,170,48)" fg:x="582" fg:w="289"/><text x="46.7728%" y="591.50">&lt;plugins_rpc::sessions::SessionServic..</text></g><g><title>core::iter::adapters::try_process (280 samples, 22.38%)</title><rect x="47.2422%" y="565" width="22.3821%" height="15" fill="rgb(236,149,23)" fg:x="591" fg:w="280"/><text x="47.4922%" y="575.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (178 samples, 14.23%)</title><rect x="55.3957%" y="549" width="14.2286%" height="15" fill="rgb(210,125,42)" fg:x="693" fg:w="178"/><text x="55.6457%" y="559.50">alloc::vec::in_place_c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (174 samples, 13.91%)</title><rect x="55.7154%" y="533" width="13.9089%" height="15" fill="rgb(207,201,52)" fg:x="697" fg:w="174"/><text x="55.9654%" y="543.50">&lt;core::iter::adapters..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (172 samples, 13.75%)</title><rect x="55.8753%" y="517" width="13.7490%" height="15" fill="rgb(250,187,37)" fg:x="699" fg:w="172"/><text x="56.1253%" y="527.50">plugins_rpc::sessions..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="69.4644%" y="501" width="0.1599%" height="15" fill="rgb(214,186,2)" fg:x="869" fg:w="2"/><text x="69.7144%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="69.4644%" y="485" width="0.1599%" height="15" fill="rgb(207,189,15)" fg:x="869" fg:w="2"/><text x="69.7144%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5444%" y="469" width="0.0799%" height="15" fill="rgb(221,99,21)" fg:x="870" fg:w="1"/><text x="69.7944%" y="479.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (3 samples, 0.24%)</title><rect x="69.6243%" y="581" width="0.2398%" height="15" fill="rgb(212,67,18)" fg:x="871" fg:w="3"/><text x="69.8743%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="69.6243%" y="565" width="0.2398%" height="15" fill="rgb(226,24,24)" fg:x="871" fg:w="3"/><text x="69.8743%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="69.7042%" y="549" width="0.1599%" height="15" fill="rgb(252,123,31)" fg:x="872" fg:w="2"/><text x="69.9542%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="69.7042%" y="533" width="0.1599%" height="15" fill="rgb(251,227,47)" fg:x="872" fg:w="2"/><text x="69.9542%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="69.7042%" y="517" width="0.1599%" height="15" fill="rgb(233,84,53)" fg:x="872" fg:w="2"/><text x="69.9542%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="69.7042%" y="501" width="0.1599%" height="15" fill="rgb(228,57,19)" fg:x="872" fg:w="2"/><text x="69.9542%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="69.7042%" y="485" width="0.1599%" height="15" fill="rgb(251,81,5)" fg:x="872" fg:w="2"/><text x="69.9542%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="69.7042%" y="469" width="0.1599%" height="15" fill="rgb(236,211,27)" fg:x="872" fg:w="2"/><text x="69.9542%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.7042%" y="453" width="0.1599%" height="15" fill="rgb(218,21,6)" fg:x="872" fg:w="2"/><text x="69.9542%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="69.8641%" y="581" width="0.0799%" height="15" fill="rgb(239,104,19)" fg:x="874" fg:w="1"/><text x="70.1141%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.8641%" y="565" width="0.0799%" height="15" fill="rgb(234,179,27)" fg:x="874" fg:w="1"/><text x="70.1141%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="69.8641%" y="549" width="0.0799%" height="15" fill="rgb(221,154,39)" fg:x="874" fg:w="1"/><text x="70.1141%" y="559.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (443 samples, 35.41%)</title><rect x="34.6123%" y="645" width="35.4117%" height="15" fill="rgb(228,190,1)" fg:x="433" fg:w="443"/><text x="34.8623%" y="655.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Per..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (326 samples, 26.06%)</title><rect x="43.9648%" y="629" width="26.0592%" height="15" fill="rgb(244,122,33)" fg:x="550" fg:w="326"/><text x="44.2148%" y="639.50">kernel::plugins::SessionPlugins::have_surr..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (326 samples, 26.06%)</title><rect x="43.9648%" y="613" width="26.0592%" height="15" fill="rgb(227,56,37)" fg:x="550" fg:w="326"/><text x="44.2148%" y="623.50">&lt;plugins_dynlib::DynamicPlugin as kernel::..</text></g><g><title>plugins_rpc::querying::have_surroundings (294 samples, 23.50%)</title><rect x="46.5228%" y="597" width="23.5012%" height="15" fill="rgb(207,158,16)" fg:x="582" fg:w="294"/><text x="46.7728%" y="607.50">plugins_rpc::querying::have_surroundi..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="69.9440%" y="581" width="0.0799%" height="15" fill="rgb(251,222,30)" fg:x="875" fg:w="1"/><text x="70.1940%" y="591.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="69.9440%" y="565" width="0.0799%" height="15" fill="rgb(240,22,49)" fg:x="875" fg:w="1"/><text x="70.1940%" y="575.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="69.9440%" y="549" width="0.0799%" height="15" fill="rgb(224,207,37)" fg:x="875" fg:w="1"/><text x="70.1940%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="69.9440%" y="533" width="0.0799%" height="15" fill="rgb(249,188,40)" fg:x="875" fg:w="1"/><text x="70.1940%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.9440%" y="517" width="0.0799%" height="15" fill="rgb(254,141,11)" fg:x="875" fg:w="1"/><text x="70.1940%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.9440%" y="501" width="0.0799%" height="15" fill="rgb(231,177,6)" fg:x="875" fg:w="1"/><text x="70.1940%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.9440%" y="485" width="0.0799%" height="15" fill="rgb(241,6,16)" fg:x="875" fg:w="1"/><text x="70.1940%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.9440%" y="469" width="0.0799%" height="15" fill="rgb(230,50,14)" fg:x="875" fg:w="1"/><text x="70.1940%" y="479.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.1039%" y="581" width="0.0799%" height="15" fill="rgb(254,36,3)" fg:x="877" fg:w="1"/><text x="70.3539%" y="591.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="70.1039%" y="565" width="0.0799%" height="15" fill="rgb(226,149,37)" fg:x="877" fg:w="1"/><text x="70.3539%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="70.1039%" y="549" width="0.0799%" height="15" fill="rgb(253,49,27)" fg:x="877" fg:w="1"/><text x="70.3539%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.1039%" y="533" width="0.0799%" height="15" fill="rgb(249,182,52)" fg:x="877" fg:w="1"/><text x="70.3539%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1839%" y="501" width="0.0799%" height="15" fill="rgb(223,42,15)" fg:x="878" fg:w="1"/><text x="70.4339%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1839%" y="485" width="0.0799%" height="15" fill="rgb(232,31,42)" fg:x="878" fg:w="1"/><text x="70.4339%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1839%" y="469" width="0.0799%" height="15" fill="rgb(233,56,46)" fg:x="878" fg:w="1"/><text x="70.4339%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1839%" y="453" width="0.0799%" height="15" fill="rgb(241,143,21)" fg:x="878" fg:w="1"/><text x="70.4339%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1839%" y="437" width="0.0799%" height="15" fill="rgb(251,222,15)" fg:x="878" fg:w="1"/><text x="70.4339%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.1839%" y="421" width="0.0799%" height="15" fill="rgb(242,101,40)" fg:x="878" fg:w="1"/><text x="70.4339%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="70.1839%" y="581" width="0.1599%" height="15" fill="rgb(247,60,44)" fg:x="878" fg:w="2"/><text x="70.4339%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="70.1839%" y="565" width="0.1599%" height="15" fill="rgb(254,48,47)" fg:x="878" fg:w="2"/><text x="70.4339%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="70.1839%" y="549" width="0.1599%" height="15" fill="rgb(253,30,33)" fg:x="878" fg:w="2"/><text x="70.4339%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="70.1839%" y="533" width="0.1599%" height="15" fill="rgb(253,214,47)" fg:x="878" fg:w="2"/><text x="70.4339%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="70.1839%" y="517" width="0.1599%" height="15" fill="rgb(241,108,29)" fg:x="878" fg:w="2"/><text x="70.4339%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2638%" y="501" width="0.0799%" height="15" fill="rgb(240,36,2)" fg:x="879" fg:w="1"/><text x="70.5138%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2638%" y="485" width="0.0799%" height="15" fill="rgb(243,198,24)" fg:x="879" fg:w="1"/><text x="70.5138%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.2638%" y="469" width="0.0799%" height="15" fill="rgb(225,98,27)" fg:x="879" fg:w="1"/><text x="70.5138%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.3437%" y="501" width="0.0799%" height="15" fill="rgb(208,86,30)" fg:x="880" fg:w="1"/><text x="70.5937%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.4237%" y="421" width="0.0799%" height="15" fill="rgb(242,157,11)" fg:x="881" fg:w="1"/><text x="70.6737%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.4237%" y="405" width="0.0799%" height="15" fill="rgb(244,84,16)" fg:x="881" fg:w="1"/><text x="70.6737%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4237%" y="389" width="0.0799%" height="15" fill="rgb(247,20,46)" fg:x="881" fg:w="1"/><text x="70.6737%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.4237%" y="501" width="0.1599%" height="15" fill="rgb(240,157,20)" fg:x="881" fg:w="2"/><text x="70.6737%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.4237%" y="485" width="0.1599%" height="15" fill="rgb(212,151,38)" fg:x="881" fg:w="2"/><text x="70.6737%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.4237%" y="469" width="0.1599%" height="15" fill="rgb(233,197,14)" fg:x="881" fg:w="2"/><text x="70.6737%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="70.4237%" y="453" width="0.1599%" height="15" fill="rgb(226,148,28)" fg:x="881" fg:w="2"/><text x="70.6737%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.4237%" y="437" width="0.1599%" height="15" fill="rgb(244,141,30)" fg:x="881" fg:w="2"/><text x="70.6737%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="70.5036%" y="421" width="0.0799%" height="15" fill="rgb(215,73,38)" fg:x="882" fg:w="1"/><text x="70.7536%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.5036%" y="405" width="0.0799%" height="15" fill="rgb(230,148,29)" fg:x="882" fg:w="1"/><text x="70.7536%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.5036%" y="389" width="0.0799%" height="15" fill="rgb(250,41,52)" fg:x="882" fg:w="1"/><text x="70.7536%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.5036%" y="373" width="0.0799%" height="15" fill="rgb(215,48,1)" fg:x="882" fg:w="1"/><text x="70.7536%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="70.5036%" y="357" width="0.0799%" height="15" fill="rgb(205,223,38)" fg:x="882" fg:w="1"/><text x="70.7536%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="70.3437%" y="565" width="0.3197%" height="15" fill="rgb(213,51,8)" fg:x="880" fg:w="4"/><text x="70.5937%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="70.3437%" y="549" width="0.3197%" height="15" fill="rgb(248,53,11)" fg:x="880" fg:w="4"/><text x="70.5937%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="70.3437%" y="533" width="0.3197%" height="15" fill="rgb(218,140,4)" fg:x="880" fg:w="4"/><text x="70.5937%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="70.3437%" y="517" width="0.3197%" height="15" fill="rgb(248,161,31)" fg:x="880" fg:w="4"/><text x="70.5937%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.5835%" y="501" width="0.0799%" height="15" fill="rgb(239,88,32)" fg:x="883" fg:w="1"/><text x="70.8335%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.5835%" y="485" width="0.0799%" height="15" fill="rgb(234,14,28)" fg:x="883" fg:w="1"/><text x="70.8335%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.5835%" y="469" width="0.0799%" height="15" fill="rgb(235,173,11)" fg:x="883" fg:w="1"/><text x="70.8335%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.5835%" y="453" width="0.0799%" height="15" fill="rgb(222,70,2)" fg:x="883" fg:w="1"/><text x="70.8335%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.6635%" y="453" width="0.0799%" height="15" fill="rgb(228,196,41)" fg:x="884" fg:w="1"/><text x="70.9135%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.6635%" y="437" width="0.0799%" height="15" fill="rgb(249,19,9)" fg:x="884" fg:w="1"/><text x="70.9135%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.6635%" y="421" width="0.0799%" height="15" fill="rgb(221,16,43)" fg:x="884" fg:w="1"/><text x="70.9135%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="70.1039%" y="613" width="0.7194%" height="15" fill="rgb(225,207,6)" fg:x="877" fg:w="9"/><text x="70.3539%" y="623.50"></text></g><g><title>engine::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="70.1039%" y="597" width="0.7194%" height="15" fill="rgb(249,32,32)" fg:x="877" fg:w="9"/><text x="70.3539%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="70.3437%" y="581" width="0.4796%" height="15" fill="rgb(232,163,43)" fg:x="880" fg:w="6"/><text x="70.5937%" y="591.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="70.6635%" y="565" width="0.1599%" height="15" fill="rgb(236,158,54)" fg:x="884" fg:w="2"/><text x="70.9135%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.6635%" y="549" width="0.1599%" height="15" fill="rgb(205,126,44)" fg:x="884" fg:w="2"/><text x="70.9135%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.6635%" y="533" width="0.1599%" height="15" fill="rgb(210,162,12)" fg:x="884" fg:w="2"/><text x="70.9135%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.6635%" y="517" width="0.1599%" height="15" fill="rgb(218,156,48)" fg:x="884" fg:w="2"/><text x="70.9135%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.6635%" y="501" width="0.1599%" height="15" fill="rgb(248,210,3)" fg:x="884" fg:w="2"/><text x="70.9135%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.6635%" y="485" width="0.1599%" height="15" fill="rgb(212,43,27)" fg:x="884" fg:w="2"/><text x="70.9135%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.6635%" y="469" width="0.1599%" height="15" fill="rgb(241,52,6)" fg:x="884" fg:w="2"/><text x="70.9135%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.7434%" y="453" width="0.0799%" height="15" fill="rgb(222,178,35)" fg:x="885" fg:w="1"/><text x="70.9934%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.7434%" y="437" width="0.0799%" height="15" fill="rgb(205,121,46)" fg:x="885" fg:w="1"/><text x="70.9934%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7434%" y="421" width="0.0799%" height="15" fill="rgb(249,67,1)" fg:x="885" fg:w="1"/><text x="70.9934%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.80%)</title><rect x="70.1039%" y="629" width="0.7994%" height="15" fill="rgb(238,168,42)" fg:x="877" fg:w="10"/><text x="70.3539%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="70.8233%" y="613" width="0.0799%" height="15" fill="rgb(205,36,48)" fg:x="886" fg:w="1"/><text x="71.0733%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="70.8233%" y="597" width="0.0799%" height="15" fill="rgb(240,85,12)" fg:x="886" fg:w="1"/><text x="71.0733%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="70.8233%" y="581" width="0.0799%" height="15" fill="rgb(245,27,39)" fg:x="886" fg:w="1"/><text x="71.0733%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.8233%" y="565" width="0.0799%" height="15" fill="rgb(218,129,34)" fg:x="886" fg:w="1"/><text x="71.0733%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.8233%" y="549" width="0.0799%" height="15" fill="rgb(221,157,12)" fg:x="886" fg:w="1"/><text x="71.0733%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="70.8233%" y="533" width="0.0799%" height="15" fill="rgb(213,206,20)" fg:x="886" fg:w="1"/><text x="71.0733%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="70.8233%" y="517" width="0.0799%" height="15" fill="rgb(227,115,30)" fg:x="886" fg:w="1"/><text x="71.0733%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.8233%" y="501" width="0.0799%" height="15" fill="rgb(221,40,47)" fg:x="886" fg:w="1"/><text x="71.0733%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.8233%" y="485" width="0.0799%" height="15" fill="rgb(239,96,49)" fg:x="886" fg:w="1"/><text x="71.0733%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="70.8233%" y="469" width="0.0799%" height="15" fill="rgb(223,24,38)" fg:x="886" fg:w="1"/><text x="71.0733%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="70.8233%" y="453" width="0.0799%" height="15" fill="rgb(242,35,45)" fg:x="886" fg:w="1"/><text x="71.0733%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.8233%" y="437" width="0.0799%" height="15" fill="rgb(236,20,9)" fg:x="886" fg:w="1"/><text x="71.0733%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.8233%" y="421" width="0.0799%" height="15" fill="rgb(239,124,8)" fg:x="886" fg:w="1"/><text x="71.0733%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.8233%" y="405" width="0.0799%" height="15" fill="rgb(228,92,29)" fg:x="886" fg:w="1"/><text x="71.0733%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.8233%" y="389" width="0.0799%" height="15" fill="rgb(251,53,39)" fg:x="886" fg:w="1"/><text x="71.0733%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="70.8233%" y="373" width="0.0799%" height="15" fill="rgb(224,44,10)" fg:x="886" fg:w="1"/><text x="71.0733%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="70.8233%" y="357" width="0.0799%" height="15" fill="rgb(254,10,15)" fg:x="886" fg:w="1"/><text x="71.0733%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="70.8233%" y="341" width="0.0799%" height="15" fill="rgb(245,173,6)" fg:x="886" fg:w="1"/><text x="71.0733%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="70.8233%" y="325" width="0.0799%" height="15" fill="rgb(228,74,0)" fg:x="886" fg:w="1"/><text x="71.0733%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.8233%" y="309" width="0.0799%" height="15" fill="rgb(206,138,29)" fg:x="886" fg:w="1"/><text x="71.0733%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.8233%" y="293" width="0.0799%" height="15" fill="rgb(253,27,43)" fg:x="886" fg:w="1"/><text x="71.0733%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.8233%" y="277" width="0.0799%" height="15" fill="rgb(231,73,0)" fg:x="886" fg:w="1"/><text x="71.0733%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="70.8233%" y="261" width="0.0799%" height="15" fill="rgb(218,9,23)" fg:x="886" fg:w="1"/><text x="71.0733%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.8233%" y="245" width="0.0799%" height="15" fill="rgb(251,55,29)" fg:x="886" fg:w="1"/><text x="71.0733%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="70.8233%" y="229" width="0.0799%" height="15" fill="rgb(223,180,22)" fg:x="886" fg:w="1"/><text x="71.0733%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="70.8233%" y="213" width="0.0799%" height="15" fill="rgb(223,29,21)" fg:x="886" fg:w="1"/><text x="71.0733%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="70.8233%" y="197" width="0.0799%" height="15" fill="rgb(251,103,37)" fg:x="886" fg:w="1"/><text x="71.0733%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.8233%" y="181" width="0.0799%" height="15" fill="rgb(214,11,21)" fg:x="886" fg:w="1"/><text x="71.0733%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9832%" y="565" width="0.0799%" height="15" fill="rgb(205,137,13)" fg:x="888" fg:w="1"/><text x="71.2332%" y="575.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (457 samples, 36.53%)</title><rect x="34.6123%" y="661" width="36.5308%" height="15" fill="rgb(225,58,47)" fg:x="433" fg:w="457"/><text x="34.8623%" y="671.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Perf..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (14 samples, 1.12%)</title><rect x="70.0240%" y="645" width="1.1191%" height="15" fill="rgb(222,197,14)" fg:x="876" fg:w="14"/><text x="70.2740%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.24%)</title><rect x="70.9033%" y="629" width="0.2398%" height="15" fill="rgb(215,210,33)" fg:x="887" fg:w="3"/><text x="71.1533%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="70.9033%" y="613" width="0.2398%" height="15" fill="rgb(242,13,9)" fg:x="887" fg:w="3"/><text x="71.1533%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="70.9033%" y="597" width="0.2398%" height="15" fill="rgb(218,31,39)" fg:x="887" fg:w="3"/><text x="71.1533%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="70.9832%" y="581" width="0.1599%" height="15" fill="rgb(211,214,23)" fg:x="888" fg:w="2"/><text x="71.2332%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0631%" y="565" width="0.0799%" height="15" fill="rgb(237,92,14)" fg:x="889" fg:w="1"/><text x="71.3131%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0631%" y="549" width="0.0799%" height="15" fill="rgb(220,78,5)" fg:x="889" fg:w="1"/><text x="71.3131%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.0631%" y="533" width="0.0799%" height="15" fill="rgb(237,23,21)" fg:x="889" fg:w="1"/><text x="71.3131%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0631%" y="517" width="0.0799%" height="15" fill="rgb(251,207,51)" fg:x="889" fg:w="1"/><text x="71.3131%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (460 samples, 36.77%)</title><rect x="34.4524%" y="677" width="36.7706%" height="15" fill="rgb(249,206,18)" fg:x="431" fg:w="460"/><text x="34.7024%" y="687.50">&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="71.1431%" y="661" width="0.0799%" height="15" fill="rgb(236,20,19)" fg:x="890" fg:w="1"/><text x="71.3931%" y="671.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (463 samples, 37.01%)</title><rect x="34.2926%" y="741" width="37.0104%" height="15" fill="rgb(214,227,29)" fg:x="429" fg:w="463"/><text x="34.5426%" y="751.50">&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluat..</text></g><g><title>core::iter::adapters::try_process (462 samples, 36.93%)</title><rect x="34.3725%" y="725" width="36.9305%" height="15" fill="rgb(209,183,4)" fg:x="430" fg:w="462"/><text x="34.6225%" y="735.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (461 samples, 36.85%)</title><rect x="34.4524%" y="709" width="36.8505%" height="15" fill="rgb(233,111,23)" fg:x="431" fg:w="461"/><text x="34.7024%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromI..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (461 samples, 36.85%)</title><rect x="34.4524%" y="693" width="36.8505%" height="15" fill="rgb(238,121,27)" fg:x="431" fg:w="461"/><text x="34.7024%" y="703.50">&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::trai..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="71.2230%" y="677" width="0.0799%" height="15" fill="rgb(236,120,41)" fg:x="891" fg:w="1"/><text x="71.4730%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (893 samples, 71.38%)</title><rect x="0.0000%" y="821" width="71.3829%" height="15" fill="rgb(241,143,10)" fg:x="0" fg:w="893"/><text x="0.2500%" y="831.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (893 samples, 71.38%)</title><rect x="0.0000%" y="805" width="71.3829%" height="15" fill="rgb(224,86,31)" fg:x="0" fg:w="893"/><text x="0.2500%" y="815.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (893 samples, 71.38%)</title><rect x="0.0000%" y="789" width="71.3829%" height="15" fill="rgb(236,212,27)" fg:x="0" fg:w="893"/><text x="0.2500%" y="799.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (465 samples, 37.17%)</title><rect x="34.2126%" y="773" width="37.1703%" height="15" fill="rgb(219,43,51)" fg:x="428" fg:w="465"/><text x="34.4626%" y="783.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (465 samples, 37.17%)</title><rect x="34.2126%" y="757" width="37.1703%" height="15" fill="rgb(232,216,8)" fg:x="428" fg:w="465"/><text x="34.4626%" y="767.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="71.3030%" y="741" width="0.0799%" height="15" fill="rgb(206,222,39)" fg:x="892" fg:w="1"/><text x="71.5530%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.3030%" y="725" width="0.0799%" height="15" fill="rgb(209,149,48)" fg:x="892" fg:w="1"/><text x="71.5530%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.3030%" y="709" width="0.0799%" height="15" fill="rgb(229,155,21)" fg:x="892" fg:w="1"/><text x="71.5530%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.3030%" y="693" width="0.0799%" height="15" fill="rgb(246,152,26)" fg:x="892" fg:w="1"/><text x="71.5530%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="71.3030%" y="677" width="0.0799%" height="15" fill="rgb(206,70,42)" fg:x="892" fg:w="1"/><text x="71.5530%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="71.3030%" y="661" width="0.0799%" height="15" fill="rgb(236,9,11)" fg:x="892" fg:w="1"/><text x="71.5530%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="71.3030%" y="645" width="0.0799%" height="15" fill="rgb(238,145,47)" fg:x="892" fg:w="1"/><text x="71.5530%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.3030%" y="629" width="0.0799%" height="15" fill="rgb(252,189,7)" fg:x="892" fg:w="1"/><text x="71.5530%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.3030%" y="613" width="0.0799%" height="15" fill="rgb(254,168,51)" fg:x="892" fg:w="1"/><text x="71.5530%" y="623.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="71.3030%" y="597" width="0.0799%" height="15" fill="rgb(227,105,46)" fg:x="892" fg:w="1"/><text x="71.5530%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4628%" y="645" width="0.0799%" height="15" fill="rgb(227,74,30)" fg:x="894" fg:w="1"/><text x="71.7128%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5428%" y="629" width="0.0799%" height="15" fill="rgb(206,212,44)" fg:x="895" fg:w="1"/><text x="71.7928%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7026%" y="613" width="0.0799%" height="15" fill="rgb(252,69,11)" fg:x="897" fg:w="1"/><text x="71.9526%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7826%" y="597" width="0.0799%" height="15" fill="rgb(239,116,0)" fg:x="898" fg:w="1"/><text x="72.0326%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="71.3829%" y="773" width="0.5596%" height="15" fill="rgb(246,189,23)" fg:x="893" fg:w="7"/><text x="71.6329%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (7 samples, 0.56%)</title><rect x="71.3829%" y="757" width="0.5596%" height="15" fill="rgb(229,50,41)" fg:x="893" fg:w="7"/><text x="71.6329%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="71.3829%" y="741" width="0.5596%" height="15" fill="rgb(214,66,37)" fg:x="893" fg:w="7"/><text x="71.6329%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="71.3829%" y="725" width="0.5596%" height="15" fill="rgb(226,28,6)" fg:x="893" fg:w="7"/><text x="71.6329%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="71.3829%" y="709" width="0.5596%" height="15" fill="rgb(239,154,0)" fg:x="893" fg:w="7"/><text x="71.6329%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="71.3829%" y="693" width="0.5596%" height="15" fill="rgb(233,97,11)" fg:x="893" fg:w="7"/><text x="71.6329%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="71.4628%" y="677" width="0.4796%" height="15" fill="rgb(236,215,16)" fg:x="894" fg:w="6"/><text x="71.7128%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="71.4628%" y="661" width="0.4796%" height="15" fill="rgb(246,188,29)" fg:x="894" fg:w="6"/><text x="71.7128%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="71.5428%" y="645" width="0.3997%" height="15" fill="rgb(207,7,29)" fg:x="895" fg:w="5"/><text x="71.7928%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="71.6227%" y="629" width="0.3197%" height="15" fill="rgb(238,112,43)" fg:x="896" fg:w="4"/><text x="71.8727%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.7826%" y="613" width="0.1599%" height="15" fill="rgb(230,110,32)" fg:x="898" fg:w="2"/><text x="72.0326%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.8625%" y="597" width="0.0799%" height="15" fill="rgb(218,197,32)" fg:x="899" fg:w="1"/><text x="72.1125%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.8625%" y="581" width="0.0799%" height="15" fill="rgb(252,61,9)" fg:x="899" fg:w="1"/><text x="72.1125%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorageFactory as engine::storage::EntityStorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="71.9424%" y="757" width="0.0799%" height="15" fill="rgb(244,140,14)" fg:x="900" fg:w="1"/><text x="72.1924%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.9424%" y="741" width="0.0799%" height="15" fill="rgb(216,14,47)" fg:x="900" fg:w="1"/><text x="72.1924%" y="751.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.0224%" y="693" width="0.0799%" height="15" fill="rgb(224,130,52)" fg:x="901" fg:w="1"/><text x="72.2724%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="72.0224%" y="677" width="0.0799%" height="15" fill="rgb(210,229,51)" fg:x="901" fg:w="1"/><text x="72.2724%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="72.0224%" y="661" width="0.0799%" height="15" fill="rgb(242,13,9)" fg:x="901" fg:w="1"/><text x="72.2724%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0224%" y="645" width="0.0799%" height="15" fill="rgb(252,71,50)" fg:x="901" fg:w="1"/><text x="72.2724%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0224%" y="629" width="0.0799%" height="15" fill="rgb(218,225,6)" fg:x="901" fg:w="1"/><text x="72.2724%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0224%" y="613" width="0.0799%" height="15" fill="rgb(219,27,35)" fg:x="901" fg:w="1"/><text x="72.2724%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0224%" y="597" width="0.0799%" height="15" fill="rgb(226,30,1)" fg:x="901" fg:w="1"/><text x="72.2724%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.0224%" y="581" width="0.0799%" height="15" fill="rgb(227,164,34)" fg:x="901" fg:w="1"/><text x="72.2724%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0224%" y="565" width="0.0799%" height="15" fill="rgb(206,103,4)" fg:x="901" fg:w="1"/><text x="72.2724%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0224%" y="549" width="0.0799%" height="15" fill="rgb(214,166,19)" fg:x="901" fg:w="1"/><text x="72.2724%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0224%" y="533" width="0.0799%" height="15" fill="rgb(240,56,20)" fg:x="901" fg:w="1"/><text x="72.2724%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.0224%" y="517" width="0.0799%" height="15" fill="rgb(224,25,3)" fg:x="901" fg:w="1"/><text x="72.2724%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="72.1023%" y="677" width="0.1599%" height="15" fill="rgb(216,206,54)" fg:x="902" fg:w="2"/><text x="72.3523%" y="687.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="72.1023%" y="661" width="0.1599%" height="15" fill="rgb(225,142,10)" fg:x="902" fg:w="2"/><text x="72.3523%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.1023%" y="645" width="0.1599%" height="15" fill="rgb(246,9,18)" fg:x="902" fg:w="2"/><text x="72.3523%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.1023%" y="629" width="0.1599%" height="15" fill="rgb(247,140,18)" fg:x="902" fg:w="2"/><text x="72.3523%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.1823%" y="613" width="0.0799%" height="15" fill="rgb(239,184,22)" fg:x="903" fg:w="1"/><text x="72.4323%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1823%" y="597" width="0.0799%" height="15" fill="rgb(227,94,44)" fg:x="903" fg:w="1"/><text x="72.4323%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.1823%" y="581" width="0.0799%" height="15" fill="rgb(219,43,3)" fg:x="903" fg:w="1"/><text x="72.4323%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="72.1823%" y="565" width="0.0799%" height="15" fill="rgb(210,76,31)" fg:x="903" fg:w="1"/><text x="72.4323%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.1823%" y="549" width="0.0799%" height="15" fill="rgb(225,85,12)" fg:x="903" fg:w="1"/><text x="72.4323%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="72.1823%" y="533" width="0.0799%" height="15" fill="rgb(214,191,28)" fg:x="903" fg:w="1"/><text x="72.4323%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (5 samples, 0.40%)</title><rect x="71.9424%" y="773" width="0.3997%" height="15" fill="rgb(214,43,14)" fg:x="900" fg:w="5"/><text x="72.1924%" y="783.50"></text></g><g><title>engine::session::Session::new (4 samples, 0.32%)</title><rect x="72.0224%" y="757" width="0.3197%" height="15" fill="rgb(253,117,5)" fg:x="901" fg:w="4"/><text x="72.2724%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="72.0224%" y="741" width="0.3197%" height="15" fill="rgb(208,124,26)" fg:x="901" fg:w="4"/><text x="72.2724%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="72.0224%" y="725" width="0.3197%" height="15" fill="rgb(228,208,39)" fg:x="901" fg:w="4"/><text x="72.2724%" y="735.50"></text></g><g><title>engine::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="72.0224%" y="709" width="0.3197%" height="15" fill="rgb(206,180,39)" fg:x="901" fg:w="4"/><text x="72.2724%" y="719.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="72.1023%" y="693" width="0.2398%" height="15" fill="rgb(205,111,37)" fg:x="902" fg:w="3"/><text x="72.3523%" y="703.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="72.2622%" y="677" width="0.0799%" height="15" fill="rgb(208,121,24)" fg:x="904" fg:w="1"/><text x="72.5122%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.2622%" y="661" width="0.0799%" height="15" fill="rgb(218,215,32)" fg:x="904" fg:w="1"/><text x="72.5122%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.2622%" y="645" width="0.0799%" height="15" fill="rgb(244,168,53)" fg:x="904" fg:w="1"/><text x="72.5122%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.2622%" y="629" width="0.0799%" height="15" fill="rgb(214,9,36)" fg:x="904" fg:w="1"/><text x="72.5122%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.2622%" y="613" width="0.0799%" height="15" fill="rgb(231,4,34)" fg:x="904" fg:w="1"/><text x="72.5122%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.2622%" y="597" width="0.0799%" height="15" fill="rgb(210,83,51)" fg:x="904" fg:w="1"/><text x="72.5122%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.3421%" y="645" width="0.0799%" height="15" fill="rgb(224,112,1)" fg:x="905" fg:w="1"/><text x="72.5921%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.3421%" y="629" width="0.0799%" height="15" fill="rgb(216,33,41)" fg:x="905" fg:w="1"/><text x="72.5921%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3421%" y="613" width="0.0799%" height="15" fill="rgb(215,179,42)" fg:x="905" fg:w="1"/><text x="72.5921%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3421%" y="597" width="0.0799%" height="15" fill="rgb(205,81,48)" fg:x="905" fg:w="1"/><text x="72.5921%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.3421%" y="581" width="0.0799%" height="15" fill="rgb(246,17,30)" fg:x="905" fg:w="1"/><text x="72.5921%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.3421%" y="565" width="0.0799%" height="15" fill="rgb(226,19,16)" fg:x="905" fg:w="1"/><text x="72.5921%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.3421%" y="549" width="0.0799%" height="15" fill="rgb(207,3,14)" fg:x="905" fg:w="1"/><text x="72.5921%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.3421%" y="533" width="0.0799%" height="15" fill="rgb(226,77,12)" fg:x="905" fg:w="1"/><text x="72.5921%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.3421%" y="517" width="0.0799%" height="15" fill="rgb(226,76,25)" fg:x="905" fg:w="1"/><text x="72.5921%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.3421%" y="501" width="0.0799%" height="15" fill="rgb(217,216,25)" fg:x="905" fg:w="1"/><text x="72.5921%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.3421%" y="485" width="0.0799%" height="15" fill="rgb(247,127,42)" fg:x="905" fg:w="1"/><text x="72.5921%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.3421%" y="469" width="0.0799%" height="15" fill="rgb(226,10,34)" fg:x="905" fg:w="1"/><text x="72.5921%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.3421%" y="453" width="0.0799%" height="15" fill="rgb(249,78,0)" fg:x="905" fg:w="1"/><text x="72.5921%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3421%" y="437" width="0.0799%" height="15" fill="rgb(226,218,38)" fg:x="905" fg:w="1"/><text x="72.5921%" y="447.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="72.3421%" y="677" width="0.1599%" height="15" fill="rgb(240,92,1)" fg:x="905" fg:w="2"/><text x="72.5921%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="72.3421%" y="661" width="0.1599%" height="15" fill="rgb(237,224,33)" fg:x="905" fg:w="2"/><text x="72.5921%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.4221%" y="645" width="0.0799%" height="15" fill="rgb(211,46,1)" fg:x="906" fg:w="1"/><text x="72.6721%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.4221%" y="629" width="0.0799%" height="15" fill="rgb(239,190,4)" fg:x="906" fg:w="1"/><text x="72.6721%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.4221%" y="613" width="0.0799%" height="15" fill="rgb(221,50,22)" fg:x="906" fg:w="1"/><text x="72.6721%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.4221%" y="597" width="0.0799%" height="15" fill="rgb(207,176,8)" fg:x="906" fg:w="1"/><text x="72.6721%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.4221%" y="581" width="0.0799%" height="15" fill="rgb(244,114,50)" fg:x="906" fg:w="1"/><text x="72.6721%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4221%" y="565" width="0.0799%" height="15" fill="rgb(226,206,19)" fg:x="906" fg:w="1"/><text x="72.6721%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5020%" y="645" width="0.0799%" height="15" fill="rgb(208,199,16)" fg:x="907" fg:w="1"/><text x="72.7520%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.5020%" y="629" width="0.0799%" height="15" fill="rgb(208,38,14)" fg:x="907" fg:w="1"/><text x="72.7520%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5020%" y="613" width="0.0799%" height="15" fill="rgb(221,211,49)" fg:x="907" fg:w="1"/><text x="72.7520%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5020%" y="597" width="0.0799%" height="15" fill="rgb(227,214,34)" fg:x="907" fg:w="1"/><text x="72.7520%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5020%" y="581" width="0.0799%" height="15" fill="rgb(234,5,54)" fg:x="907" fg:w="1"/><text x="72.7520%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5020%" y="565" width="0.0799%" height="15" fill="rgb(236,215,22)" fg:x="907" fg:w="1"/><text x="72.7520%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5020%" y="549" width="0.0799%" height="15" fill="rgb(244,0,11)" fg:x="907" fg:w="1"/><text x="72.7520%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="72.5020%" y="533" width="0.0799%" height="15" fill="rgb(212,140,16)" fg:x="907" fg:w="1"/><text x="72.7520%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5819%" y="581" width="0.0799%" height="15" fill="rgb(238,101,37)" fg:x="908" fg:w="1"/><text x="72.8319%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5819%" y="565" width="0.0799%" height="15" fill="rgb(247,46,3)" fg:x="908" fg:w="1"/><text x="72.8319%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5819%" y="549" width="0.0799%" height="15" fill="rgb(208,106,19)" fg:x="908" fg:w="1"/><text x="72.8319%" y="559.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="72.3421%" y="693" width="0.3997%" height="15" fill="rgb(240,227,15)" fg:x="905" fg:w="5"/><text x="72.5921%" y="703.50"></text></g><g><title>kernel::model::scopes::save_props (3 samples, 0.24%)</title><rect x="72.5020%" y="677" width="0.2398%" height="15" fill="rgb(226,173,6)" fg:x="907" fg:w="3"/><text x="72.7520%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="72.5020%" y="661" width="0.2398%" height="15" fill="rgb(213,191,1)" fg:x="907" fg:w="3"/><text x="72.7520%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="72.5819%" y="645" width="0.1599%" height="15" fill="rgb(246,51,36)" fg:x="908" fg:w="2"/><text x="72.8319%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.5819%" y="629" width="0.1599%" height="15" fill="rgb(238,40,32)" fg:x="908" fg:w="2"/><text x="72.8319%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="72.5819%" y="613" width="0.1599%" height="15" fill="rgb(208,126,27)" fg:x="908" fg:w="2"/><text x="72.8319%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.5819%" y="597" width="0.1599%" height="15" fill="rgb(227,117,38)" fg:x="908" fg:w="2"/><text x="72.8319%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="72.6619%" y="581" width="0.0799%" height="15" fill="rgb(232,16,1)" fg:x="909" fg:w="1"/><text x="72.9119%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="72.6619%" y="565" width="0.0799%" height="15" fill="rgb(212,111,31)" fg:x="909" fg:w="1"/><text x="72.9119%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.6619%" y="549" width="0.0799%" height="15" fill="rgb(253,227,2)" fg:x="909" fg:w="1"/><text x="72.9119%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="72.6619%" y="533" width="0.0799%" height="15" fill="rgb(216,122,17)" fg:x="909" fg:w="1"/><text x="72.9119%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="72.8217%" y="677" width="0.0799%" height="15" fill="rgb(227,37,2)" fg:x="911" fg:w="1"/><text x="73.0717%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.8217%" y="661" width="0.0799%" height="15" fill="rgb(244,113,40)" fg:x="911" fg:w="1"/><text x="73.0717%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.8217%" y="645" width="0.0799%" height="15" fill="rgb(217,193,34)" fg:x="911" fg:w="1"/><text x="73.0717%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.9017%" y="661" width="0.0799%" height="15" fill="rgb(212,223,15)" fg:x="912" fg:w="1"/><text x="73.1517%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.9017%" y="645" width="0.0799%" height="15" fill="rgb(238,143,18)" fg:x="912" fg:w="1"/><text x="73.1517%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.9017%" y="629" width="0.0799%" height="15" fill="rgb(231,18,49)" fg:x="912" fg:w="1"/><text x="73.1517%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.9017%" y="613" width="0.0799%" height="15" fill="rgb(249,122,4)" fg:x="912" fg:w="1"/><text x="73.1517%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="72.9816%" y="645" width="0.0799%" height="15" fill="rgb(245,138,54)" fg:x="913" fg:w="1"/><text x="73.2316%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.9816%" y="629" width="0.0799%" height="15" fill="rgb(218,130,18)" fg:x="913" fg:w="1"/><text x="73.2316%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.9816%" y="613" width="0.0799%" height="15" fill="rgb(235,94,13)" fg:x="913" fg:w="1"/><text x="73.2316%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.9816%" y="597" width="0.0799%" height="15" fill="rgb(247,143,5)" fg:x="913" fg:w="1"/><text x="73.2316%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.9816%" y="581" width="0.0799%" height="15" fill="rgb(212,59,54)" fg:x="913" fg:w="1"/><text x="73.2316%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.9816%" y="565" width="0.0799%" height="15" fill="rgb(206,121,24)" fg:x="913" fg:w="1"/><text x="73.2316%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.0616%" y="629" width="0.1599%" height="15" fill="rgb(235,38,8)" fg:x="914" fg:w="2"/><text x="73.3116%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.1415%" y="613" width="0.0799%" height="15" fill="rgb(227,102,26)" fg:x="915" fg:w="1"/><text x="73.3915%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.1415%" y="597" width="0.0799%" height="15" fill="rgb(240,183,46)" fg:x="915" fg:w="1"/><text x="73.3915%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.1415%" y="581" width="0.0799%" height="15" fill="rgb(208,177,23)" fg:x="915" fg:w="1"/><text x="73.3915%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.2214%" y="629" width="0.1599%" height="15" fill="rgb(216,152,5)" fg:x="916" fg:w="2"/><text x="73.4714%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.2214%" y="613" width="0.1599%" height="15" fill="rgb(238,199,2)" fg:x="916" fg:w="2"/><text x="73.4714%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.2214%" y="597" width="0.1599%" height="15" fill="rgb(235,142,28)" fg:x="916" fg:w="2"/><text x="73.4714%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.2214%" y="581" width="0.1599%" height="15" fill="rgb(225,97,25)" fg:x="916" fg:w="2"/><text x="73.4714%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.2214%" y="565" width="0.1599%" height="15" fill="rgb(208,75,46)" fg:x="916" fg:w="2"/><text x="73.4714%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="72.9816%" y="661" width="0.4796%" height="15" fill="rgb(240,136,15)" fg:x="913" fg:w="6"/><text x="73.2316%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="73.0616%" y="645" width="0.3997%" height="15" fill="rgb(235,36,27)" fg:x="914" fg:w="5"/><text x="73.3116%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.3813%" y="629" width="0.0799%" height="15" fill="rgb(231,132,23)" fg:x="918" fg:w="1"/><text x="73.6313%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.3813%" y="613" width="0.0799%" height="15" fill="rgb(205,208,20)" fg:x="918" fg:w="1"/><text x="73.6313%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.4612%" y="629" width="0.0799%" height="15" fill="rgb(215,26,40)" fg:x="919" fg:w="1"/><text x="73.7112%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="72.7418%" y="693" width="0.9592%" height="15" fill="rgb(238,183,34)" fg:x="910" fg:w="12"/><text x="72.9918%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="72.9017%" y="677" width="0.7994%" height="15" fill="rgb(207,96,10)" fg:x="912" fg:w="10"/><text x="73.1517%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="73.4612%" y="661" width="0.2398%" height="15" fill="rgb(218,88,6)" fg:x="919" fg:w="3"/><text x="73.7112%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="73.4612%" y="645" width="0.2398%" height="15" fill="rgb(217,22,49)" fg:x="919" fg:w="3"/><text x="73.7112%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="73.5412%" y="629" width="0.1599%" height="15" fill="rgb(240,195,14)" fg:x="920" fg:w="2"/><text x="73.7912%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="73.7810%" y="645" width="0.1599%" height="15" fill="rgb(229,48,27)" fg:x="923" fg:w="2"/><text x="74.0310%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.7810%" y="629" width="0.1599%" height="15" fill="rgb(220,194,45)" fg:x="923" fg:w="2"/><text x="74.0310%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.7010%" y="693" width="0.3197%" height="15" fill="rgb(252,60,20)" fg:x="922" fg:w="4"/><text x="73.9510%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="73.7010%" y="677" width="0.3197%" height="15" fill="rgb(244,169,33)" fg:x="922" fg:w="4"/><text x="73.9510%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.7010%" y="661" width="0.3197%" height="15" fill="rgb(234,141,34)" fg:x="922" fg:w="4"/><text x="73.9510%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9408%" y="645" width="0.0799%" height="15" fill="rgb(241,141,9)" fg:x="925" fg:w="1"/><text x="74.1908%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9408%" y="629" width="0.0799%" height="15" fill="rgb(246,27,36)" fg:x="925" fg:w="1"/><text x="74.1908%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.9408%" y="613" width="0.0799%" height="15" fill="rgb(216,188,42)" fg:x="925" fg:w="1"/><text x="74.1908%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9408%" y="597" width="0.0799%" height="15" fill="rgb(234,205,22)" fg:x="925" fg:w="1"/><text x="74.1908%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.1007%" y="645" width="0.0799%" height="15" fill="rgb(210,202,32)" fg:x="927" fg:w="1"/><text x="74.3507%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.1007%" y="629" width="0.0799%" height="15" fill="rgb(217,0,48)" fg:x="927" fg:w="1"/><text x="74.3507%" y="639.50"></text></g><g><title>engine::session::Session::flush (24 samples, 1.92%)</title><rect x="72.3421%" y="757" width="1.9185%" height="15" fill="rgb(207,115,37)" fg:x="905" fg:w="24"/><text x="72.5921%" y="767.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (24 samples, 1.92%)</title><rect x="72.3421%" y="741" width="1.9185%" height="15" fill="rgb(237,221,44)" fg:x="905" fg:w="24"/><text x="72.5921%" y="751.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (24 samples, 1.92%)</title><rect x="72.3421%" y="725" width="1.9185%" height="15" fill="rgb(249,78,2)" fg:x="905" fg:w="24"/><text x="72.5921%" y="735.50">e..</text></g><g><title>engine::session::SavesEntities::check_for_changes (24 samples, 1.92%)</title><rect x="72.3421%" y="709" width="1.9185%" height="15" fill="rgb(211,169,23)" fg:x="905" fg:w="24"/><text x="72.5921%" y="719.50">e..</text></g><g><title>kernel::compare::any_entity_changes (3 samples, 0.24%)</title><rect x="74.0208%" y="693" width="0.2398%" height="15" fill="rgb(207,116,29)" fg:x="926" fg:w="3"/><text x="74.2708%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="74.1007%" y="677" width="0.1599%" height="15" fill="rgb(240,84,33)" fg:x="927" fg:w="2"/><text x="74.3507%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="74.1007%" y="661" width="0.1599%" height="15" fill="rgb(229,224,31)" fg:x="927" fg:w="2"/><text x="74.3507%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="74.1807%" y="645" width="0.0799%" height="15" fill="rgb(227,90,31)" fg:x="928" fg:w="1"/><text x="74.4307%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1807%" y="629" width="0.0799%" height="15" fill="rgb(249,22,41)" fg:x="928" fg:w="1"/><text x="74.4307%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.1807%" y="613" width="0.0799%" height="15" fill="rgb(239,65,11)" fg:x="928" fg:w="1"/><text x="74.4307%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1807%" y="597" width="0.0799%" height="15" fill="rgb(205,5,23)" fg:x="928" fg:w="1"/><text x="74.4307%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.1807%" y="581" width="0.0799%" height="15" fill="rgb(254,78,52)" fg:x="928" fg:w="1"/><text x="74.4307%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1807%" y="565" width="0.0799%" height="15" fill="rgb(214,156,33)" fg:x="928" fg:w="1"/><text x="74.4307%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.1807%" y="549" width="0.0799%" height="15" fill="rgb(208,20,30)" fg:x="928" fg:w="1"/><text x="74.4307%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1807%" y="533" width="0.0799%" height="15" fill="rgb(223,133,18)" fg:x="928" fg:w="1"/><text x="74.4307%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.1807%" y="517" width="0.0799%" height="15" fill="rgb(222,91,41)" fg:x="928" fg:w="1"/><text x="74.4307%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1807%" y="501" width="0.0799%" height="15" fill="rgb(247,137,48)" fg:x="928" fg:w="1"/><text x="74.4307%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="74.2606%" y="725" width="0.0799%" height="15" fill="rgb(239,156,11)" fg:x="929" fg:w="1"/><text x="74.5106%" y="735.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="74.2606%" y="709" width="0.0799%" height="15" fill="rgb(244,56,26)" fg:x="929" fg:w="1"/><text x="74.5106%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.2606%" y="693" width="0.0799%" height="15" fill="rgb(205,131,49)" fg:x="929" fg:w="1"/><text x="74.5106%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.2606%" y="677" width="0.0799%" height="15" fill="rgb(224,0,2)" fg:x="929" fg:w="1"/><text x="74.5106%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.2606%" y="661" width="0.0799%" height="15" fill="rgb(247,59,36)" fg:x="929" fg:w="1"/><text x="74.5106%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2606%" y="645" width="0.0799%" height="15" fill="rgb(215,4,47)" fg:x="929" fg:w="1"/><text x="74.5106%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2606%" y="629" width="0.0799%" height="15" fill="rgb(242,72,42)" fg:x="929" fg:w="1"/><text x="74.5106%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2606%" y="613" width="0.0799%" height="15" fill="rgb(232,145,44)" fg:x="929" fg:w="1"/><text x="74.5106%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2606%" y="597" width="0.0799%" height="15" fill="rgb(205,108,43)" fg:x="929" fg:w="1"/><text x="74.5106%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.16%)</title><rect x="74.2606%" y="757" width="0.1599%" height="15" fill="rgb(215,190,17)" fg:x="929" fg:w="2"/><text x="74.5106%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="74.2606%" y="741" width="0.1599%" height="15" fill="rgb(223,90,34)" fg:x="929" fg:w="2"/><text x="74.5106%" y="751.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="74.3405%" y="725" width="0.0799%" height="15" fill="rgb(216,25,0)" fg:x="930" fg:w="1"/><text x="74.5905%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="74.3405%" y="709" width="0.0799%" height="15" fill="rgb(223,51,28)" fg:x="930" fg:w="1"/><text x="74.5905%" y="719.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="74.3405%" y="693" width="0.0799%" height="15" fill="rgb(227,131,7)" fg:x="930" fg:w="1"/><text x="74.5905%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.3405%" y="677" width="0.0799%" height="15" fill="rgb(216,72,36)" fg:x="930" fg:w="1"/><text x="74.5905%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.3405%" y="661" width="0.0799%" height="15" fill="rgb(243,158,40)" fg:x="930" fg:w="1"/><text x="74.5905%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.3405%" y="645" width="0.0799%" height="15" fill="rgb(218,60,54)" fg:x="930" fg:w="1"/><text x="74.5905%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3405%" y="629" width="0.0799%" height="15" fill="rgb(230,15,46)" fg:x="930" fg:w="1"/><text x="74.5905%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3405%" y="613" width="0.0799%" height="15" fill="rgb(250,22,26)" fg:x="930" fg:w="1"/><text x="74.5905%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3405%" y="597" width="0.0799%" height="15" fill="rgb(239,194,40)" fg:x="930" fg:w="1"/><text x="74.5905%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3405%" y="581" width="0.0799%" height="15" fill="rgb(219,62,9)" fg:x="930" fg:w="1"/><text x="74.5905%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="74.4205%" y="757" width="0.0799%" height="15" fill="rgb(228,45,21)" fg:x="931" fg:w="1"/><text x="74.6705%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="74.4205%" y="741" width="0.0799%" height="15" fill="rgb(242,56,44)" fg:x="931" fg:w="1"/><text x="74.6705%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="74.4205%" y="725" width="0.0799%" height="15" fill="rgb(239,170,14)" fg:x="931" fg:w="1"/><text x="74.6705%" y="735.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="74.4205%" y="709" width="0.0799%" height="15" fill="rgb(236,150,13)" fg:x="931" fg:w="1"/><text x="74.6705%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.4205%" y="693" width="0.0799%" height="15" fill="rgb(228,15,30)" fg:x="931" fg:w="1"/><text x="74.6705%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.4205%" y="677" width="0.0799%" height="15" fill="rgb(217,43,28)" fg:x="931" fg:w="1"/><text x="74.6705%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.4205%" y="661" width="0.0799%" height="15" fill="rgb(246,223,1)" fg:x="931" fg:w="1"/><text x="74.6705%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4205%" y="645" width="0.0799%" height="15" fill="rgb(247,103,7)" fg:x="931" fg:w="1"/><text x="74.6705%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4205%" y="629" width="0.0799%" height="15" fill="rgb(205,105,39)" fg:x="931" fg:w="1"/><text x="74.6705%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4205%" y="613" width="0.0799%" height="15" fill="rgb(216,134,18)" fg:x="931" fg:w="1"/><text x="74.6705%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4205%" y="597" width="0.0799%" height="15" fill="rgb(226,139,50)" fg:x="931" fg:w="1"/><text x="74.6705%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4205%" y="581" width="0.0799%" height="15" fill="rgb(251,152,38)" fg:x="931" fg:w="1"/><text x="74.6705%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4205%" y="565" width="0.0799%" height="15" fill="rgb(222,63,15)" fg:x="931" fg:w="1"/><text x="74.6705%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4205%" y="549" width="0.0799%" height="15" fill="rgb(212,198,28)" fg:x="931" fg:w="1"/><text x="74.6705%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.4205%" y="533" width="0.0799%" height="15" fill="rgb(216,93,38)" fg:x="931" fg:w="1"/><text x="74.6705%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.4205%" y="517" width="0.0799%" height="15" fill="rgb(247,202,44)" fg:x="931" fg:w="1"/><text x="74.6705%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.4205%" y="501" width="0.0799%" height="15" fill="rgb(237,204,46)" fg:x="931" fg:w="1"/><text x="74.6705%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4205%" y="485" width="0.0799%" height="15" fill="rgb(224,98,48)" fg:x="931" fg:w="1"/><text x="74.6705%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4205%" y="469" width="0.0799%" height="15" fill="rgb(247,105,21)" fg:x="931" fg:w="1"/><text x="74.6705%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.4205%" y="453" width="0.0799%" height="15" fill="rgb(212,137,52)" fg:x="931" fg:w="1"/><text x="74.6705%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.4205%" y="437" width="0.0799%" height="15" fill="rgb(223,76,33)" fg:x="931" fg:w="1"/><text x="74.6705%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.4205%" y="421" width="0.0799%" height="15" fill="rgb(209,156,27)" fg:x="931" fg:w="1"/><text x="74.6705%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.4205%" y="405" width="0.0799%" height="15" fill="rgb(249,81,54)" fg:x="931" fg:w="1"/><text x="74.6705%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4205%" y="389" width="0.0799%" height="15" fill="rgb(241,46,29)" fg:x="931" fg:w="1"/><text x="74.6705%" y="399.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="74.5004%" y="757" width="0.0799%" height="15" fill="rgb(213,193,39)" fg:x="932" fg:w="1"/><text x="74.7504%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="74.5004%" y="741" width="0.0799%" height="15" fill="rgb(214,85,16)" fg:x="932" fg:w="1"/><text x="74.7504%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="74.5004%" y="725" width="0.0799%" height="15" fill="rgb(216,184,17)" fg:x="932" fg:w="1"/><text x="74.7504%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.5004%" y="709" width="0.0799%" height="15" fill="rgb(254,219,29)" fg:x="932" fg:w="1"/><text x="74.7504%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.5004%" y="693" width="0.0799%" height="15" fill="rgb(209,148,34)" fg:x="932" fg:w="1"/><text x="74.7504%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.5004%" y="677" width="0.0799%" height="15" fill="rgb(253,215,11)" fg:x="932" fg:w="1"/><text x="74.7504%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.5004%" y="661" width="0.0799%" height="15" fill="rgb(232,126,20)" fg:x="932" fg:w="1"/><text x="74.7504%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.5004%" y="645" width="0.0799%" height="15" fill="rgb(248,118,51)" fg:x="932" fg:w="1"/><text x="74.7504%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.5004%" y="629" width="0.0799%" height="15" fill="rgb(226,121,21)" fg:x="932" fg:w="1"/><text x="74.7504%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.5004%" y="613" width="0.0799%" height="15" fill="rgb(216,128,16)" fg:x="932" fg:w="1"/><text x="74.7504%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.5004%" y="597" width="0.0799%" height="15" fill="rgb(205,17,9)" fg:x="932" fg:w="1"/><text x="74.7504%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.5004%" y="581" width="0.0799%" height="15" fill="rgb(206,197,21)" fg:x="932" fg:w="1"/><text x="74.7504%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.5004%" y="565" width="0.0799%" height="15" fill="rgb(212,202,9)" fg:x="932" fg:w="1"/><text x="74.7504%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.5004%" y="549" width="0.0799%" height="15" fill="rgb(241,131,50)" fg:x="932" fg:w="1"/><text x="74.7504%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="74.5803%" y="741" width="0.0799%" height="15" fill="rgb(228,115,51)" fg:x="933" fg:w="1"/><text x="74.8303%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="74.5803%" y="725" width="0.0799%" height="15" fill="rgb(237,209,8)" fg:x="933" fg:w="1"/><text x="74.8303%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="74.5803%" y="709" width="0.0799%" height="15" fill="rgb(241,121,28)" fg:x="933" fg:w="1"/><text x="74.8303%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="74.7402%" y="693" width="0.0799%" height="15" fill="rgb(238,194,51)" fg:x="935" fg:w="1"/><text x="74.9902%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="74.7402%" y="677" width="0.0799%" height="15" fill="rgb(208,41,39)" fg:x="935" fg:w="1"/><text x="74.9902%" y="687.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="74.7402%" y="661" width="0.0799%" height="15" fill="rgb(223,95,44)" fg:x="935" fg:w="1"/><text x="74.9902%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7402%" y="645" width="0.0799%" height="15" fill="rgb(253,98,40)" fg:x="935" fg:w="1"/><text x="74.9902%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.7402%" y="629" width="0.0799%" height="15" fill="rgb(210,5,12)" fg:x="935" fg:w="1"/><text x="74.9902%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.7402%" y="613" width="0.0799%" height="15" fill="rgb(233,201,23)" fg:x="935" fg:w="1"/><text x="74.9902%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9001%" y="613" width="0.0799%" height="15" fill="rgb(251,68,15)" fg:x="937" fg:w="1"/><text x="75.1501%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="74.8201%" y="693" width="0.2398%" height="15" fill="rgb(243,10,46)" fg:x="936" fg:w="3"/><text x="75.0701%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="74.8201%" y="677" width="0.2398%" height="15" fill="rgb(253,130,44)" fg:x="936" fg:w="3"/><text x="75.0701%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="74.8201%" y="661" width="0.2398%" height="15" fill="rgb(244,5,26)" fg:x="936" fg:w="3"/><text x="75.0701%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="74.8201%" y="645" width="0.2398%" height="15" fill="rgb(220,126,20)" fg:x="936" fg:w="3"/><text x="75.0701%" y="655.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="74.8201%" y="629" width="0.2398%" height="15" fill="rgb(212,188,29)" fg:x="936" fg:w="3"/><text x="75.0701%" y="639.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="74.9800%" y="613" width="0.0799%" height="15" fill="rgb(227,194,48)" fg:x="938" fg:w="1"/><text x="75.2300%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="75.0600%" y="661" width="0.0799%" height="15" fill="rgb(245,64,28)" fg:x="939" fg:w="1"/><text x="75.3100%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="75.0600%" y="645" width="0.0799%" height="15" fill="rgb(205,44,7)" fg:x="939" fg:w="1"/><text x="75.3100%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0600%" y="629" width="0.0799%" height="15" fill="rgb(213,193,11)" fg:x="939" fg:w="1"/><text x="75.3100%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1399%" y="581" width="0.0799%" height="15" fill="rgb(238,157,6)" fg:x="940" fg:w="1"/><text x="75.3899%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1399%" y="565" width="0.0799%" height="15" fill="rgb(222,73,7)" fg:x="940" fg:w="1"/><text x="75.3899%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1399%" y="549" width="0.0799%" height="15" fill="rgb(224,78,15)" fg:x="940" fg:w="1"/><text x="75.3899%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="75.0600%" y="677" width="0.3197%" height="15" fill="rgb(218,149,46)" fg:x="939" fg:w="4"/><text x="75.3100%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="75.1399%" y="661" width="0.2398%" height="15" fill="rgb(218,175,44)" fg:x="940" fg:w="3"/><text x="75.3899%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="75.1399%" y="645" width="0.2398%" height="15" fill="rgb(215,183,45)" fg:x="940" fg:w="3"/><text x="75.3899%" y="655.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="75.1399%" y="629" width="0.2398%" height="15" fill="rgb(226,116,37)" fg:x="940" fg:w="3"/><text x="75.3899%" y="639.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.24%)</title><rect x="75.1399%" y="613" width="0.2398%" height="15" fill="rgb(252,224,12)" fg:x="940" fg:w="3"/><text x="75.3899%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="75.1399%" y="597" width="0.2398%" height="15" fill="rgb(232,212,21)" fg:x="940" fg:w="3"/><text x="75.3899%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.2198%" y="581" width="0.1599%" height="15" fill="rgb(226,191,16)" fg:x="941" fg:w="2"/><text x="75.4698%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2198%" y="565" width="0.1599%" height="15" fill="rgb(231,156,11)" fg:x="941" fg:w="2"/><text x="75.4698%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.2198%" y="549" width="0.1599%" height="15" fill="rgb(225,134,49)" fg:x="941" fg:w="2"/><text x="75.4698%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2198%" y="533" width="0.1599%" height="15" fill="rgb(254,55,32)" fg:x="941" fg:w="2"/><text x="75.4698%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.2998%" y="517" width="0.0799%" height="15" fill="rgb(242,195,29)" fg:x="942" fg:w="1"/><text x="75.5498%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2998%" y="501" width="0.0799%" height="15" fill="rgb(210,155,20)" fg:x="942" fg:w="1"/><text x="75.5498%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.3797%" y="581" width="0.0799%" height="15" fill="rgb(243,170,23)" fg:x="943" fg:w="1"/><text x="75.6297%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.3797%" y="565" width="0.0799%" height="15" fill="rgb(242,197,51)" fg:x="943" fg:w="1"/><text x="75.6297%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.3797%" y="549" width="0.0799%" height="15" fill="rgb(248,48,13)" fg:x="943" fg:w="1"/><text x="75.6297%" y="559.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="75.0600%" y="693" width="0.4796%" height="15" fill="rgb(221,185,15)" fg:x="939" fg:w="6"/><text x="75.3100%" y="703.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="75.3797%" y="677" width="0.1599%" height="15" fill="rgb(244,49,7)" fg:x="943" fg:w="2"/><text x="75.6297%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="75.3797%" y="661" width="0.1599%" height="15" fill="rgb(213,182,52)" fg:x="943" fg:w="2"/><text x="75.6297%" y="671.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="75.3797%" y="645" width="0.1599%" height="15" fill="rgb(209,15,45)" fg:x="943" fg:w="2"/><text x="75.6297%" y="655.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.3797%" y="629" width="0.1599%" height="15" fill="rgb(233,23,44)" fg:x="943" fg:w="2"/><text x="75.6297%" y="639.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="75.3797%" y="613" width="0.1599%" height="15" fill="rgb(220,182,30)" fg:x="943" fg:w="2"/><text x="75.6297%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="75.3797%" y="597" width="0.1599%" height="15" fill="rgb(219,116,33)" fg:x="943" fg:w="2"/><text x="75.6297%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.4596%" y="581" width="0.0799%" height="15" fill="rgb(231,15,21)" fg:x="944" fg:w="1"/><text x="75.7096%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4596%" y="565" width="0.0799%" height="15" fill="rgb(238,119,25)" fg:x="944" fg:w="1"/><text x="75.7096%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.4596%" y="549" width="0.0799%" height="15" fill="rgb(232,30,39)" fg:x="944" fg:w="1"/><text x="75.7096%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4596%" y="533" width="0.0799%" height="15" fill="rgb(241,26,30)" fg:x="944" fg:w="1"/><text x="75.7096%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.4596%" y="517" width="0.0799%" height="15" fill="rgb(234,154,4)" fg:x="944" fg:w="1"/><text x="75.7096%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4596%" y="501" width="0.0799%" height="15" fill="rgb(229,199,39)" fg:x="944" fg:w="1"/><text x="75.7096%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.4596%" y="485" width="0.0799%" height="15" fill="rgb(236,213,10)" fg:x="944" fg:w="1"/><text x="75.7096%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4596%" y="469" width="0.0799%" height="15" fill="rgb(247,28,19)" fg:x="944" fg:w="1"/><text x="75.7096%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.4596%" y="453" width="0.0799%" height="15" fill="rgb(239,199,24)" fg:x="944" fg:w="1"/><text x="75.7096%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4596%" y="437" width="0.0799%" height="15" fill="rgb(246,122,13)" fg:x="944" fg:w="1"/><text x="75.7096%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.4596%" y="421" width="0.0799%" height="15" fill="rgb(210,203,29)" fg:x="944" fg:w="1"/><text x="75.7096%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.4596%" y="405" width="0.0799%" height="15" fill="rgb(218,4,50)" fg:x="944" fg:w="1"/><text x="75.7096%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.96%)</title><rect x="74.6603%" y="741" width="0.9592%" height="15" fill="rgb(236,142,48)" fg:x="934" fg:w="12"/><text x="74.9103%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="74.7402%" y="725" width="0.8793%" height="15" fill="rgb(245,173,2)" fg:x="935" fg:w="11"/><text x="74.9902%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.88%)</title><rect x="74.7402%" y="709" width="0.8793%" height="15" fill="rgb(244,196,18)" fg:x="935" fg:w="11"/><text x="74.9902%" y="719.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="75.5396%" y="693" width="0.0799%" height="15" fill="rgb(221,27,33)" fg:x="945" fg:w="1"/><text x="75.7896%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5396%" y="677" width="0.0799%" height="15" fill="rgb(210,206,16)" fg:x="945" fg:w="1"/><text x="75.7896%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5396%" y="661" width="0.0799%" height="15" fill="rgb(238,161,34)" fg:x="945" fg:w="1"/><text x="75.7896%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5396%" y="645" width="0.0799%" height="15" fill="rgb(243,118,39)" fg:x="945" fg:w="1"/><text x="75.7896%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.5396%" y="629" width="0.0799%" height="15" fill="rgb(234,126,9)" fg:x="945" fg:w="1"/><text x="75.7896%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.5396%" y="613" width="0.0799%" height="15" fill="rgb(234,167,42)" fg:x="945" fg:w="1"/><text x="75.7896%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.5396%" y="597" width="0.0799%" height="15" fill="rgb(238,54,48)" fg:x="945" fg:w="1"/><text x="75.7896%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="75.5396%" y="581" width="0.0799%" height="15" fill="rgb(226,105,2)" fg:x="945" fg:w="1"/><text x="75.7896%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="75.5396%" y="565" width="0.0799%" height="15" fill="rgb(223,95,23)" fg:x="945" fg:w="1"/><text x="75.7896%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.6195%" y="533" width="0.0799%" height="15" fill="rgb(249,212,19)" fg:x="946" fg:w="1"/><text x="75.8695%" y="543.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="75.6195%" y="661" width="0.1599%" height="15" fill="rgb(234,158,54)" fg:x="946" fg:w="2"/><text x="75.8695%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="75.6195%" y="645" width="0.1599%" height="15" fill="rgb(247,114,32)" fg:x="946" fg:w="2"/><text x="75.8695%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.6195%" y="629" width="0.1599%" height="15" fill="rgb(250,68,44)" fg:x="946" fg:w="2"/><text x="75.8695%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.6195%" y="613" width="0.1599%" height="15" fill="rgb(242,3,15)" fg:x="946" fg:w="2"/><text x="75.8695%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.6195%" y="597" width="0.1599%" height="15" fill="rgb(223,110,32)" fg:x="946" fg:w="2"/><text x="75.8695%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.6195%" y="581" width="0.1599%" height="15" fill="rgb(216,26,54)" fg:x="946" fg:w="2"/><text x="75.8695%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.6195%" y="565" width="0.1599%" height="15" fill="rgb(209,145,42)" fg:x="946" fg:w="2"/><text x="75.8695%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.6195%" y="549" width="0.1599%" height="15" fill="rgb(240,111,53)" fg:x="946" fg:w="2"/><text x="75.8695%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.6994%" y="533" width="0.0799%" height="15" fill="rgb(209,101,4)" fg:x="947" fg:w="1"/><text x="75.9494%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.7794%" y="549" width="0.0799%" height="15" fill="rgb(231,74,29)" fg:x="948" fg:w="1"/><text x="76.0294%" y="559.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="75.6195%" y="677" width="0.3997%" height="15" fill="rgb(223,12,12)" fg:x="946" fg:w="5"/><text x="75.8695%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (3 samples, 0.24%)</title><rect x="75.7794%" y="661" width="0.2398%" height="15" fill="rgb(207,162,2)" fg:x="948" fg:w="3"/><text x="76.0294%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="75.7794%" y="645" width="0.2398%" height="15" fill="rgb(230,152,0)" fg:x="948" fg:w="3"/><text x="76.0294%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.7794%" y="629" width="0.2398%" height="15" fill="rgb(254,156,19)" fg:x="948" fg:w="3"/><text x="76.0294%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="75.7794%" y="613" width="0.2398%" height="15" fill="rgb(250,28,0)" fg:x="948" fg:w="3"/><text x="76.0294%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.7794%" y="597" width="0.2398%" height="15" fill="rgb(253,27,5)" fg:x="948" fg:w="3"/><text x="76.0294%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.7794%" y="581" width="0.2398%" height="15" fill="rgb(244,154,7)" fg:x="948" fg:w="3"/><text x="76.0294%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.7794%" y="565" width="0.2398%" height="15" fill="rgb(242,108,21)" fg:x="948" fg:w="3"/><text x="76.0294%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.8593%" y="549" width="0.1599%" height="15" fill="rgb(254,200,38)" fg:x="949" fg:w="2"/><text x="76.1093%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.0192%" y="661" width="0.0799%" height="15" fill="rgb(250,145,41)" fg:x="951" fg:w="1"/><text x="76.2692%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.0192%" y="645" width="0.0799%" height="15" fill="rgb(235,136,31)" fg:x="951" fg:w="1"/><text x="76.2692%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.0192%" y="629" width="0.0799%" height="15" fill="rgb(215,13,18)" fg:x="951" fg:w="1"/><text x="76.2692%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.0991%" y="629" width="0.0799%" height="15" fill="rgb(238,199,12)" fg:x="952" fg:w="1"/><text x="76.3491%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="76.0991%" y="613" width="0.0799%" height="15" fill="rgb(242,179,49)" fg:x="952" fg:w="1"/><text x="76.3491%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.1791%" y="613" width="0.0799%" height="15" fill="rgb(214,10,44)" fg:x="953" fg:w="1"/><text x="76.4291%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="76.0991%" y="645" width="0.2398%" height="15" fill="rgb(229,181,11)" fg:x="952" fg:w="3"/><text x="76.3491%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="76.1791%" y="629" width="0.1599%" height="15" fill="rgb(244,155,10)" fg:x="953" fg:w="2"/><text x="76.4291%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.2590%" y="613" width="0.0799%" height="15" fill="rgb(254,13,48)" fg:x="954" fg:w="1"/><text x="76.5090%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.2590%" y="597" width="0.0799%" height="15" fill="rgb(210,164,6)" fg:x="954" fg:w="1"/><text x="76.5090%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.2590%" y="581" width="0.0799%" height="15" fill="rgb(216,187,40)" fg:x="954" fg:w="1"/><text x="76.5090%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.40%)</title><rect x="76.0192%" y="677" width="0.3997%" height="15" fill="rgb(208,143,21)" fg:x="951" fg:w="5"/><text x="76.2692%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="76.0991%" y="661" width="0.3197%" height="15" fill="rgb(211,73,41)" fg:x="952" fg:w="4"/><text x="76.3491%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.3389%" y="645" width="0.0799%" height="15" fill="rgb(244,69,21)" fg:x="955" fg:w="1"/><text x="76.5889%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.3389%" y="629" width="0.0799%" height="15" fill="rgb(230,152,32)" fg:x="955" fg:w="1"/><text x="76.5889%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="76.4189%" y="677" width="0.2398%" height="15" fill="rgb(208,110,18)" fg:x="956" fg:w="3"/><text x="76.6689%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="76.4189%" y="661" width="0.2398%" height="15" fill="rgb(214,201,49)" fg:x="956" fg:w="3"/><text x="76.6689%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.4988%" y="645" width="0.1599%" height="15" fill="rgb(253,153,27)" fg:x="957" fg:w="2"/><text x="76.7488%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.4988%" y="629" width="0.1599%" height="15" fill="rgb(238,61,11)" fg:x="957" fg:w="2"/><text x="76.7488%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5787%" y="613" width="0.0799%" height="15" fill="rgb(227,84,2)" fg:x="958" fg:w="1"/><text x="76.8287%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5787%" y="597" width="0.0799%" height="15" fill="rgb(233,52,8)" fg:x="958" fg:w="1"/><text x="76.8287%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="76.7386%" y="629" width="0.0799%" height="15" fill="rgb(209,136,13)" fg:x="960" fg:w="1"/><text x="76.9886%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.7386%" y="613" width="0.0799%" height="15" fill="rgb(229,86,25)" fg:x="960" fg:w="1"/><text x="76.9886%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8985%" y="581" width="0.0799%" height="15" fill="rgb(235,47,16)" fg:x="962" fg:w="1"/><text x="77.1485%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8985%" y="565" width="0.0799%" height="15" fill="rgb(231,186,4)" fg:x="962" fg:w="1"/><text x="77.1485%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8985%" y="549" width="0.0799%" height="15" fill="rgb(209,213,23)" fg:x="962" fg:w="1"/><text x="77.1485%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.9784%" y="549" width="0.0799%" height="15" fill="rgb(212,142,47)" fg:x="963" fg:w="1"/><text x="77.2284%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="76.9784%" y="581" width="0.1599%" height="15" fill="rgb(251,86,24)" fg:x="963" fg:w="2"/><text x="77.2284%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="76.9784%" y="565" width="0.1599%" height="15" fill="rgb(206,217,17)" fg:x="963" fg:w="2"/><text x="77.2284%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.0584%" y="549" width="0.0799%" height="15" fill="rgb(248,92,38)" fg:x="964" fg:w="1"/><text x="77.3084%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0584%" y="533" width="0.0799%" height="15" fill="rgb(214,25,29)" fg:x="964" fg:w="1"/><text x="77.3084%" y="543.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (20 samples, 1.60%)</title><rect x="75.6195%" y="709" width="1.5987%" height="15" fill="rgb(245,117,13)" fg:x="946" fg:w="20"/><text x="75.8695%" y="719.50"></text></g><g><title>engine::session::SavesEntities::check_for_changes (20 samples, 1.60%)</title><rect x="75.6195%" y="693" width="1.5987%" height="15" fill="rgb(205,169,9)" fg:x="946" fg:w="20"/><text x="75.8695%" y="703.50"></text></g><g><title>kernel::compare::any_entity_changes (7 samples, 0.56%)</title><rect x="76.6587%" y="677" width="0.5596%" height="15" fill="rgb(223,134,38)" fg:x="959" fg:w="7"/><text x="76.9087%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="76.6587%" y="661" width="0.5596%" height="15" fill="rgb(249,129,49)" fg:x="959" fg:w="7"/><text x="76.9087%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="76.7386%" y="645" width="0.4796%" height="15" fill="rgb(229,157,45)" fg:x="960" fg:w="6"/><text x="76.9886%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="76.8185%" y="629" width="0.3997%" height="15" fill="rgb(232,159,11)" fg:x="961" fg:w="5"/><text x="77.0685%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (5 samples, 0.40%)</title><rect x="76.8185%" y="613" width="0.3997%" height="15" fill="rgb(230,134,26)" fg:x="961" fg:w="5"/><text x="77.0685%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="76.8985%" y="597" width="0.3197%" height="15" fill="rgb(234,149,40)" fg:x="962" fg:w="4"/><text x="77.1485%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.1383%" y="581" width="0.0799%" height="15" fill="rgb(221,122,15)" fg:x="965" fg:w="1"/><text x="77.3883%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="77.1383%" y="565" width="0.0799%" height="15" fill="rgb(228,127,0)" fg:x="965" fg:w="1"/><text x="77.3883%" y="575.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="77.2182%" y="709" width="0.0799%" height="15" fill="rgb(248,37,7)" fg:x="966" fg:w="1"/><text x="77.4682%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="77.2182%" y="693" width="0.0799%" height="15" fill="rgb(215,140,49)" fg:x="966" fg:w="1"/><text x="77.4682%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="77.2182%" y="677" width="0.0799%" height="15" fill="rgb(236,65,39)" fg:x="966" fg:w="1"/><text x="77.4682%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2182%" y="661" width="0.0799%" height="15" fill="rgb(253,102,38)" fg:x="966" fg:w="1"/><text x="77.4682%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2182%" y="645" width="0.0799%" height="15" fill="rgb(244,100,34)" fg:x="966" fg:w="1"/><text x="77.4682%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.2182%" y="629" width="0.0799%" height="15" fill="rgb(210,179,47)" fg:x="966" fg:w="1"/><text x="77.4682%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.2182%" y="613" width="0.0799%" height="15" fill="rgb(231,41,37)" fg:x="966" fg:w="1"/><text x="77.4682%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.2182%" y="597" width="0.0799%" height="15" fill="rgb(226,209,17)" fg:x="966" fg:w="1"/><text x="77.4682%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="77.2182%" y="581" width="0.0799%" height="15" fill="rgb(231,154,20)" fg:x="966" fg:w="1"/><text x="77.4682%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="77.2182%" y="565" width="0.0799%" height="15" fill="rgb(216,134,24)" fg:x="966" fg:w="1"/><text x="77.4682%" y="575.50"></text></g><g><title>engine::session::Session::flush (22 samples, 1.76%)</title><rect x="75.6195%" y="741" width="1.7586%" height="15" fill="rgb(224,71,42)" fg:x="946" fg:w="22"/><text x="75.8695%" y="751.50"></text></g><g><title>engine::session::Session::save_entity_changes (22 samples, 1.76%)</title><rect x="75.6195%" y="725" width="1.7586%" height="15" fill="rgb(250,65,23)" fg:x="946" fg:w="22"/><text x="75.8695%" y="735.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="77.2982%" y="709" width="0.0799%" height="15" fill="rgb(209,160,35)" fg:x="967" fg:w="1"/><text x="77.5482%" y="719.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="77.2982%" y="693" width="0.0799%" height="15" fill="rgb(215,8,11)" fg:x="967" fg:w="1"/><text x="77.5482%" y="703.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="77.2982%" y="677" width="0.0799%" height="15" fill="rgb(227,27,12)" fg:x="967" fg:w="1"/><text x="77.5482%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="77.2982%" y="661" width="0.0799%" height="15" fill="rgb(226,111,41)" fg:x="967" fg:w="1"/><text x="77.5482%" y="671.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="77.2982%" y="645" width="0.0799%" height="15" fill="rgb(212,195,15)" fg:x="967" fg:w="1"/><text x="77.5482%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="77.2982%" y="629" width="0.0799%" height="15" fill="rgb(216,191,17)" fg:x="967" fg:w="1"/><text x="77.5482%" y="639.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="77.3781%" y="693" width="0.0799%" height="15" fill="rgb(215,57,44)" fg:x="968" fg:w="1"/><text x="77.6281%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="77.3781%" y="677" width="0.0799%" height="15" fill="rgb(209,38,4)" fg:x="968" fg:w="1"/><text x="77.6281%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="77.3781%" y="661" width="0.0799%" height="15" fill="rgb(238,49,31)" fg:x="968" fg:w="1"/><text x="77.6281%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="77.3781%" y="645" width="0.0799%" height="15" fill="rgb(219,48,39)" fg:x="968" fg:w="1"/><text x="77.6281%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3781%" y="629" width="0.0799%" height="15" fill="rgb(252,223,43)" fg:x="968" fg:w="1"/><text x="77.6281%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.3781%" y="613" width="0.0799%" height="15" fill="rgb(247,205,46)" fg:x="968" fg:w="1"/><text x="77.6281%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3781%" y="597" width="0.0799%" height="15" fill="rgb(231,16,40)" fg:x="968" fg:w="1"/><text x="77.6281%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3781%" y="581" width="0.0799%" height="15" fill="rgb(231,115,5)" fg:x="968" fg:w="1"/><text x="77.6281%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3781%" y="565" width="0.0799%" height="15" fill="rgb(206,127,43)" fg:x="968" fg:w="1"/><text x="77.6281%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.3781%" y="549" width="0.0799%" height="15" fill="rgb(218,101,9)" fg:x="968" fg:w="1"/><text x="77.6281%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.3781%" y="533" width="0.0799%" height="15" fill="rgb(235,138,50)" fg:x="968" fg:w="1"/><text x="77.6281%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.4580%" y="645" width="0.0799%" height="15" fill="rgb(214,197,52)" fg:x="969" fg:w="1"/><text x="77.7080%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="77.3781%" y="725" width="0.2398%" height="15" fill="rgb(230,80,19)" fg:x="968" fg:w="3"/><text x="77.6281%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="77.3781%" y="709" width="0.2398%" height="15" fill="rgb(224,77,16)" fg:x="968" fg:w="3"/><text x="77.6281%" y="719.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="77.4580%" y="693" width="0.1599%" height="15" fill="rgb(246,4,13)" fg:x="969" fg:w="2"/><text x="77.7080%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.4580%" y="677" width="0.1599%" height="15" fill="rgb(220,177,26)" fg:x="969" fg:w="2"/><text x="77.7080%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="77.4580%" y="661" width="0.1599%" height="15" fill="rgb(215,114,45)" fg:x="969" fg:w="2"/><text x="77.7080%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.5380%" y="645" width="0.0799%" height="15" fill="rgb(215,71,54)" fg:x="970" fg:w="1"/><text x="77.7880%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.5380%" y="629" width="0.0799%" height="15" fill="rgb(211,155,22)" fg:x="970" fg:w="1"/><text x="77.7880%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.6179%" y="629" width="0.0799%" height="15" fill="rgb(245,206,18)" fg:x="971" fg:w="1"/><text x="77.8679%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.6179%" y="613" width="0.0799%" height="15" fill="rgb(248,216,48)" fg:x="971" fg:w="1"/><text x="77.8679%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.6179%" y="597" width="0.0799%" height="15" fill="rgb(244,84,45)" fg:x="971" fg:w="1"/><text x="77.8679%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.6179%" y="581" width="0.0799%" height="15" fill="rgb(245,13,45)" fg:x="971" fg:w="1"/><text x="77.8679%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.6179%" y="565" width="0.0799%" height="15" fill="rgb(247,163,2)" fg:x="971" fg:w="1"/><text x="77.8679%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.6179%" y="549" width="0.0799%" height="15" fill="rgb(211,175,10)" fg:x="971" fg:w="1"/><text x="77.8679%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.6179%" y="533" width="0.0799%" height="15" fill="rgb(215,186,31)" fg:x="971" fg:w="1"/><text x="77.8679%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.6179%" y="517" width="0.0799%" height="15" fill="rgb(207,42,11)" fg:x="971" fg:w="1"/><text x="77.8679%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.6179%" y="501" width="0.0799%" height="15" fill="rgb(224,197,20)" fg:x="971" fg:w="1"/><text x="77.8679%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.6179%" y="485" width="0.0799%" height="15" fill="rgb(244,119,36)" fg:x="971" fg:w="1"/><text x="77.8679%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.6179%" y="469" width="0.0799%" height="15" fill="rgb(250,60,27)" fg:x="971" fg:w="1"/><text x="77.8679%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.6179%" y="453" width="0.0799%" height="15" fill="rgb(252,202,1)" fg:x="971" fg:w="1"/><text x="77.8679%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.6179%" y="437" width="0.0799%" height="15" fill="rgb(206,53,25)" fg:x="971" fg:w="1"/><text x="77.8679%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.6179%" y="421" width="0.0799%" height="15" fill="rgb(210,88,4)" fg:x="971" fg:w="1"/><text x="77.8679%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6179%" y="405" width="0.0799%" height="15" fill="rgb(211,144,28)" fg:x="971" fg:w="1"/><text x="77.8679%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="77.6179%" y="709" width="0.1599%" height="15" fill="rgb(247,81,32)" fg:x="971" fg:w="2"/><text x="77.8679%" y="719.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="77.6179%" y="693" width="0.1599%" height="15" fill="rgb(225,192,11)" fg:x="971" fg:w="2"/><text x="77.8679%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="77.6179%" y="677" width="0.1599%" height="15" fill="rgb(232,212,27)" fg:x="971" fg:w="2"/><text x="77.8679%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="77.6179%" y="661" width="0.1599%" height="15" fill="rgb(239,3,29)" fg:x="971" fg:w="2"/><text x="77.8679%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="77.6179%" y="645" width="0.1599%" height="15" fill="rgb(252,225,29)" fg:x="971" fg:w="2"/><text x="77.8679%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6978%" y="629" width="0.0799%" height="15" fill="rgb(205,151,9)" fg:x="972" fg:w="1"/><text x="77.9478%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6978%" y="613" width="0.0799%" height="15" fill="rgb(216,171,47)" fg:x="972" fg:w="1"/><text x="77.9478%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6978%" y="597" width="0.0799%" height="15" fill="rgb(206,181,1)" fg:x="972" fg:w="1"/><text x="77.9478%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6978%" y="581" width="0.0799%" height="15" fill="rgb(232,218,10)" fg:x="972" fg:w="1"/><text x="77.9478%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.6978%" y="565" width="0.0799%" height="15" fill="rgb(244,222,51)" fg:x="972" fg:w="1"/><text x="77.9478%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6978%" y="549" width="0.0799%" height="15" fill="rgb(252,215,16)" fg:x="972" fg:w="1"/><text x="77.9478%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6978%" y="533" width="0.0799%" height="15" fill="rgb(212,130,13)" fg:x="972" fg:w="1"/><text x="77.9478%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6978%" y="517" width="0.0799%" height="15" fill="rgb(227,103,37)" fg:x="972" fg:w="1"/><text x="77.9478%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="77.7778%" y="709" width="0.0799%" height="15" fill="rgb(249,48,15)" fg:x="973" fg:w="1"/><text x="78.0278%" y="719.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="77.8577%" y="677" width="0.0799%" height="15" fill="rgb(225,96,9)" fg:x="974" fg:w="1"/><text x="78.1077%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.8577%" y="661" width="0.0799%" height="15" fill="rgb(213,81,41)" fg:x="974" fg:w="1"/><text x="78.1077%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.8577%" y="645" width="0.0799%" height="15" fill="rgb(230,15,12)" fg:x="974" fg:w="1"/><text x="78.1077%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="77.8577%" y="629" width="0.0799%" height="15" fill="rgb(218,106,37)" fg:x="974" fg:w="1"/><text x="78.1077%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8577%" y="613" width="0.0799%" height="15" fill="rgb(223,172,47)" fg:x="974" fg:w="1"/><text x="78.1077%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="77.8577%" y="709" width="0.1599%" height="15" fill="rgb(246,180,49)" fg:x="974" fg:w="2"/><text x="78.1077%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="77.8577%" y="693" width="0.1599%" height="15" fill="rgb(231,63,37)" fg:x="974" fg:w="2"/><text x="78.1077%" y="703.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="77.9376%" y="677" width="0.0799%" height="15" fill="rgb(235,70,40)" fg:x="975" fg:w="1"/><text x="78.1876%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.0176%" y="661" width="0.0799%" height="15" fill="rgb(250,54,26)" fg:x="976" fg:w="1"/><text x="78.2676%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="78.0176%" y="645" width="0.0799%" height="15" fill="rgb(214,190,1)" fg:x="976" fg:w="1"/><text x="78.2676%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="78.0176%" y="629" width="0.0799%" height="15" fill="rgb(212,40,35)" fg:x="976" fg:w="1"/><text x="78.2676%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.0176%" y="613" width="0.0799%" height="15" fill="rgb(239,183,47)" fg:x="976" fg:w="1"/><text x="78.2676%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0176%" y="597" width="0.0799%" height="15" fill="rgb(211,171,49)" fg:x="976" fg:w="1"/><text x="78.2676%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.0176%" y="581" width="0.0799%" height="15" fill="rgb(249,186,27)" fg:x="976" fg:w="1"/><text x="78.2676%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0176%" y="565" width="0.0799%" height="15" fill="rgb(223,23,48)" fg:x="976" fg:w="1"/><text x="78.2676%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.0176%" y="549" width="0.0799%" height="15" fill="rgb(209,203,21)" fg:x="976" fg:w="1"/><text x="78.2676%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0176%" y="533" width="0.0799%" height="15" fill="rgb(229,33,27)" fg:x="976" fg:w="1"/><text x="78.2676%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.0176%" y="517" width="0.0799%" height="15" fill="rgb(207,8,53)" fg:x="976" fg:w="1"/><text x="78.2676%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.0176%" y="501" width="0.0799%" height="15" fill="rgb(221,42,0)" fg:x="976" fg:w="1"/><text x="78.2676%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="78.0176%" y="485" width="0.0799%" height="15" fill="rgb(223,115,3)" fg:x="976" fg:w="1"/><text x="78.2676%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0975%" y="613" width="0.0799%" height="15" fill="rgb(239,35,26)" fg:x="977" fg:w="1"/><text x="78.3475%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0975%" y="597" width="0.0799%" height="15" fill="rgb(233,22,9)" fg:x="977" fg:w="1"/><text x="78.3475%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0975%" y="581" width="0.0799%" height="15" fill="rgb(236,221,48)" fg:x="977" fg:w="1"/><text x="78.3475%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0975%" y="565" width="0.0799%" height="15" fill="rgb(235,52,30)" fg:x="977" fg:w="1"/><text x="78.3475%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0975%" y="549" width="0.0799%" height="15" fill="rgb(238,133,51)" fg:x="977" fg:w="1"/><text x="78.3475%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.88%)</title><rect x="77.3781%" y="741" width="0.8793%" height="15" fill="rgb(213,122,23)" fg:x="968" fg:w="11"/><text x="77.6281%" y="751.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.64%)</title><rect x="77.6179%" y="725" width="0.6395%" height="15" fill="rgb(225,8,15)" fg:x="971" fg:w="8"/><text x="77.8679%" y="735.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="78.0176%" y="709" width="0.2398%" height="15" fill="rgb(219,126,35)" fg:x="976" fg:w="3"/><text x="78.2676%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="78.0176%" y="693" width="0.2398%" height="15" fill="rgb(246,113,21)" fg:x="976" fg:w="3"/><text x="78.2676%" y="703.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="78.0176%" y="677" width="0.2398%" height="15" fill="rgb(241,193,32)" fg:x="976" fg:w="3"/><text x="78.2676%" y="687.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.0975%" y="661" width="0.1599%" height="15" fill="rgb(218,99,18)" fg:x="977" fg:w="2"/><text x="78.3475%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="78.0975%" y="645" width="0.1599%" height="15" fill="rgb(225,114,4)" fg:x="977" fg:w="2"/><text x="78.3475%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="78.0975%" y="629" width="0.1599%" height="15" fill="rgb(235,0,15)" fg:x="977" fg:w="2"/><text x="78.3475%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.1775%" y="613" width="0.0799%" height="15" fill="rgb(247,45,27)" fg:x="978" fg:w="1"/><text x="78.4275%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="78.2574%" y="741" width="0.0799%" height="15" fill="rgb(249,88,53)" fg:x="979" fg:w="1"/><text x="78.5074%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="78.2574%" y="725" width="0.0799%" height="15" fill="rgb(207,58,45)" fg:x="979" fg:w="1"/><text x="78.5074%" y="735.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="78.2574%" y="709" width="0.0799%" height="15" fill="rgb(216,7,11)" fg:x="979" fg:w="1"/><text x="78.5074%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="78.2574%" y="693" width="0.0799%" height="15" fill="rgb(230,40,33)" fg:x="979" fg:w="1"/><text x="78.5074%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="78.2574%" y="677" width="0.0799%" height="15" fill="rgb(232,24,46)" fg:x="979" fg:w="1"/><text x="78.5074%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="78.2574%" y="661" width="0.0799%" height="15" fill="rgb(219,222,45)" fg:x="979" fg:w="1"/><text x="78.5074%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.2574%" y="645" width="0.0799%" height="15" fill="rgb(229,85,44)" fg:x="979" fg:w="1"/><text x="78.5074%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.2574%" y="629" width="0.0799%" height="15" fill="rgb(243,71,36)" fg:x="979" fg:w="1"/><text x="78.5074%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.2574%" y="613" width="0.0799%" height="15" fill="rgb(230,203,45)" fg:x="979" fg:w="1"/><text x="78.5074%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.2574%" y="597" width="0.0799%" height="15" fill="rgb(224,77,49)" fg:x="979" fg:w="1"/><text x="78.5074%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="78.3373%" y="725" width="0.0799%" height="15" fill="rgb(210,186,47)" fg:x="980" fg:w="1"/><text x="78.5873%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="78.3373%" y="709" width="0.0799%" height="15" fill="rgb(232,146,10)" fg:x="980" fg:w="1"/><text x="78.5873%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="78.3373%" y="693" width="0.0799%" height="15" fill="rgb(236,185,51)" fg:x="980" fg:w="1"/><text x="78.5873%" y="703.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.3373%" y="677" width="0.0799%" height="15" fill="rgb(223,206,43)" fg:x="980" fg:w="1"/><text x="78.5873%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="78.3373%" y="661" width="0.0799%" height="15" fill="rgb(227,212,9)" fg:x="980" fg:w="1"/><text x="78.5873%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="78.3373%" y="645" width="0.0799%" height="15" fill="rgb(205,82,3)" fg:x="980" fg:w="1"/><text x="78.5873%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3373%" y="629" width="0.0799%" height="15" fill="rgb(214,2,27)" fg:x="980" fg:w="1"/><text x="78.5873%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3373%" y="613" width="0.0799%" height="15" fill="rgb(241,37,22)" fg:x="980" fg:w="1"/><text x="78.5873%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.3373%" y="597" width="0.0799%" height="15" fill="rgb(219,182,1)" fg:x="980" fg:w="1"/><text x="78.5873%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="78.4173%" y="709" width="0.0799%" height="15" fill="rgb(208,224,23)" fg:x="981" fg:w="1"/><text x="78.6673%" y="719.50"></text></g><g><title>plugins_core::build::Build::occupying (3 samples, 0.24%)</title><rect x="78.3373%" y="741" width="0.2398%" height="15" fill="rgb(219,121,32)" fg:x="980" fg:w="3"/><text x="78.5873%" y="751.50"></text></g><g><title>plugins_core::tools::set_occupying (2 samples, 0.16%)</title><rect x="78.4173%" y="725" width="0.1599%" height="15" fill="rgb(253,13,40)" fg:x="981" fg:w="2"/><text x="78.6673%" y="735.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="78.4972%" y="709" width="0.0799%" height="15" fill="rgb(233,6,28)" fg:x="982" fg:w="1"/><text x="78.7472%" y="719.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="78.4972%" y="693" width="0.0799%" height="15" fill="rgb(233,73,8)" fg:x="982" fg:w="1"/><text x="78.7472%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="78.4972%" y="677" width="0.0799%" height="15" fill="rgb(223,48,27)" fg:x="982" fg:w="1"/><text x="78.7472%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.4972%" y="661" width="0.0799%" height="15" fill="rgb(231,98,37)" fg:x="982" fg:w="1"/><text x="78.7472%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5771%" y="693" width="0.0799%" height="15" fill="rgb(249,43,32)" fg:x="983" fg:w="1"/><text x="78.8271%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="78.5771%" y="709" width="0.1599%" height="15" fill="rgb(246,184,20)" fg:x="983" fg:w="2"/><text x="78.8271%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.6571%" y="693" width="0.0799%" height="15" fill="rgb(251,216,0)" fg:x="984" fg:w="1"/><text x="78.9071%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.6571%" y="677" width="0.0799%" height="15" fill="rgb(238,41,42)" fg:x="984" fg:w="1"/><text x="78.9071%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.6571%" y="661" width="0.0799%" height="15" fill="rgb(227,224,50)" fg:x="984" fg:w="1"/><text x="78.9071%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.6571%" y="645" width="0.0799%" height="15" fill="rgb(237,189,18)" fg:x="984" fg:w="1"/><text x="78.9071%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.6571%" y="629" width="0.0799%" height="15" fill="rgb(238,108,6)" fg:x="984" fg:w="1"/><text x="78.9071%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.6571%" y="613" width="0.0799%" height="15" fill="rgb(214,197,53)" fg:x="984" fg:w="1"/><text x="78.9071%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.6571%" y="597" width="0.0799%" height="15" fill="rgb(206,183,15)" fg:x="984" fg:w="1"/><text x="78.9071%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.6571%" y="581" width="0.0799%" height="15" fill="rgb(208,130,32)" fg:x="984" fg:w="1"/><text x="78.9071%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.6571%" y="565" width="0.0799%" height="15" fill="rgb(226,128,52)" fg:x="984" fg:w="1"/><text x="78.9071%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.6571%" y="549" width="0.0799%" height="15" fill="rgb(231,183,21)" fg:x="984" fg:w="1"/><text x="78.9071%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.6571%" y="533" width="0.0799%" height="15" fill="rgb(216,8,35)" fg:x="984" fg:w="1"/><text x="78.9071%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.6571%" y="517" width="0.0799%" height="15" fill="rgb(224,221,8)" fg:x="984" fg:w="1"/><text x="78.9071%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.6571%" y="501" width="0.0799%" height="15" fill="rgb(210,111,33)" fg:x="984" fg:w="1"/><text x="78.9071%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.6571%" y="485" width="0.0799%" height="15" fill="rgb(232,211,38)" fg:x="984" fg:w="1"/><text x="78.9071%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.6571%" y="469" width="0.0799%" height="15" fill="rgb(216,190,27)" fg:x="984" fg:w="1"/><text x="78.9071%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.6571%" y="453" width="0.0799%" height="15" fill="rgb(237,215,27)" fg:x="984" fg:w="1"/><text x="78.9071%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.6571%" y="437" width="0.0799%" height="15" fill="rgb(251,121,39)" fg:x="984" fg:w="1"/><text x="78.9071%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.6571%" y="421" width="0.0799%" height="15" fill="rgb(244,21,14)" fg:x="984" fg:w="1"/><text x="78.9071%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.6571%" y="405" width="0.0799%" height="15" fill="rgb(221,192,22)" fg:x="984" fg:w="1"/><text x="78.9071%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.6571%" y="389" width="0.0799%" height="15" fill="rgb(251,190,28)" fg:x="984" fg:w="1"/><text x="78.9071%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.6571%" y="373" width="0.0799%" height="15" fill="rgb(217,4,51)" fg:x="984" fg:w="1"/><text x="78.9071%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.6571%" y="357" width="0.0799%" height="15" fill="rgb(215,183,49)" fg:x="984" fg:w="1"/><text x="78.9071%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.6571%" y="341" width="0.0799%" height="15" fill="rgb(249,28,49)" fg:x="984" fg:w="1"/><text x="78.9071%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.6571%" y="325" width="0.0799%" height="15" fill="rgb(214,42,20)" fg:x="984" fg:w="1"/><text x="78.9071%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="78.6571%" y="309" width="0.0799%" height="15" fill="rgb(222,77,27)" fg:x="984" fg:w="1"/><text x="78.9071%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="78.6571%" y="293" width="0.0799%" height="15" fill="rgb(252,198,32)" fg:x="984" fg:w="1"/><text x="78.9071%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="78.6571%" y="277" width="0.0799%" height="15" fill="rgb(207,140,50)" fg:x="984" fg:w="1"/><text x="78.9071%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.6571%" y="261" width="0.0799%" height="15" fill="rgb(251,170,16)" fg:x="984" fg:w="1"/><text x="78.9071%" y="271.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (53 samples, 4.24%)</title><rect x="74.5803%" y="757" width="4.2366%" height="15" fill="rgb(249,111,45)" fg:x="933" fg:w="53"/><text x="74.8303%" y="767.50">plugi..</text></g><g><title>plugins_core::build::Build::with_username (3 samples, 0.24%)</title><rect x="78.5771%" y="741" width="0.2398%" height="15" fill="rgb(241,99,35)" fg:x="983" fg:w="3"/><text x="78.8271%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="78.5771%" y="725" width="0.2398%" height="15" fill="rgb(216,188,17)" fg:x="983" fg:w="3"/><text x="78.8271%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="78.7370%" y="709" width="0.0799%" height="15" fill="rgb(254,209,53)" fg:x="985" fg:w="1"/><text x="78.9870%" y="719.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="78.7370%" y="693" width="0.0799%" height="15" fill="rgb(231,105,41)" fg:x="985" fg:w="1"/><text x="78.9870%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.08%)</title><rect x="78.8169%" y="757" width="0.0799%" height="15" fill="rgb(242,93,23)" fg:x="986" fg:w="1"/><text x="79.0669%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="78.8169%" y="741" width="0.0799%" height="15" fill="rgb(218,159,11)" fg:x="986" fg:w="1"/><text x="79.0669%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="78.8169%" y="725" width="0.0799%" height="15" fill="rgb(209,90,32)" fg:x="986" fg:w="1"/><text x="79.0669%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="78.8169%" y="709" width="0.0799%" height="15" fill="rgb(253,118,46)" fg:x="986" fg:w="1"/><text x="79.0669%" y="719.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.8169%" y="693" width="0.0799%" height="15" fill="rgb(219,121,2)" fg:x="986" fg:w="1"/><text x="79.0669%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="78.8169%" y="677" width="0.0799%" height="15" fill="rgb(207,57,47)" fg:x="986" fg:w="1"/><text x="79.0669%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="78.8169%" y="661" width="0.0799%" height="15" fill="rgb(235,113,43)" fg:x="986" fg:w="1"/><text x="79.0669%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8169%" y="645" width="0.0799%" height="15" fill="rgb(238,30,50)" fg:x="986" fg:w="1"/><text x="79.0669%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8169%" y="629" width="0.0799%" height="15" fill="rgb(237,47,29)" fg:x="986" fg:w="1"/><text x="79.0669%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8169%" y="613" width="0.0799%" height="15" fill="rgb(245,102,24)" fg:x="986" fg:w="1"/><text x="79.0669%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8169%" y="597" width="0.0799%" height="15" fill="rgb(245,152,9)" fg:x="986" fg:w="1"/><text x="79.0669%" y="607.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (83 samples, 6.63%)</title><rect x="72.3421%" y="773" width="6.6347%" height="15" fill="rgb(223,213,17)" fg:x="905" fg:w="83"/><text x="72.5921%" y="783.50">&lt;tests::H..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="78.8969%" y="757" width="0.0799%" height="15" fill="rgb(241,164,4)" fg:x="987" fg:w="1"/><text x="79.1469%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.8969%" y="741" width="0.0799%" height="15" fill="rgb(205,209,31)" fg:x="987" fg:w="1"/><text x="79.1469%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.9768%" y="725" width="0.0799%" height="15" fill="rgb(248,173,2)" fg:x="988" fg:w="1"/><text x="79.2268%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9768%" y="709" width="0.0799%" height="15" fill="rgb(207,67,32)" fg:x="988" fg:w="1"/><text x="79.2268%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9768%" y="693" width="0.0799%" height="15" fill="rgb(239,109,13)" fg:x="988" fg:w="1"/><text x="79.2268%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.9768%" y="677" width="0.0799%" height="15" fill="rgb(233,123,24)" fg:x="988" fg:w="1"/><text x="79.2268%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.9768%" y="661" width="0.0799%" height="15" fill="rgb(232,120,19)" fg:x="988" fg:w="1"/><text x="79.2268%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.9768%" y="645" width="0.0799%" height="15" fill="rgb(225,17,50)" fg:x="988" fg:w="1"/><text x="79.2268%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.9768%" y="629" width="0.0799%" height="15" fill="rgb(239,216,13)" fg:x="988" fg:w="1"/><text x="79.2268%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.9768%" y="613" width="0.0799%" height="15" fill="rgb(232,213,26)" fg:x="988" fg:w="1"/><text x="79.2268%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.9768%" y="597" width="0.0799%" height="15" fill="rgb(244,59,39)" fg:x="988" fg:w="1"/><text x="79.2268%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.9768%" y="581" width="0.0799%" height="15" fill="rgb(234,61,35)" fg:x="988" fg:w="1"/><text x="79.2268%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.9768%" y="565" width="0.0799%" height="15" fill="rgb(245,94,24)" fg:x="988" fg:w="1"/><text x="79.2268%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.9768%" y="549" width="0.0799%" height="15" fill="rgb(238,190,44)" fg:x="988" fg:w="1"/><text x="79.2268%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.9768%" y="533" width="0.0799%" height="15" fill="rgb(205,145,25)" fg:x="988" fg:w="1"/><text x="79.2268%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0568%" y="693" width="0.0799%" height="15" fill="rgb(229,158,41)" fg:x="989" fg:w="1"/><text x="79.3068%" y="703.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="79.1367%" y="693" width="0.0799%" height="15" fill="rgb(224,121,5)" fg:x="990" fg:w="1"/><text x="79.3867%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="79.1367%" y="677" width="0.0799%" height="15" fill="rgb(238,168,35)" fg:x="990" fg:w="1"/><text x="79.3867%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1367%" y="661" width="0.0799%" height="15" fill="rgb(231,11,42)" fg:x="990" fg:w="1"/><text x="79.3867%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (4 samples, 0.32%)</title><rect x="78.9768%" y="757" width="0.3197%" height="15" fill="rgb(241,105,19)" fg:x="988" fg:w="4"/><text x="79.2268%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (4 samples, 0.32%)</title><rect x="78.9768%" y="741" width="0.3197%" height="15" fill="rgb(253,210,20)" fg:x="988" fg:w="4"/><text x="79.2268%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="79.0568%" y="725" width="0.2398%" height="15" fill="rgb(215,72,52)" fg:x="989" fg:w="3"/><text x="79.3068%" y="735.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="79.0568%" y="709" width="0.2398%" height="15" fill="rgb(223,225,30)" fg:x="989" fg:w="3"/><text x="79.3068%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.2166%" y="693" width="0.0799%" height="15" fill="rgb(220,138,44)" fg:x="991" fg:w="1"/><text x="79.4666%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.2166%" y="677" width="0.0799%" height="15" fill="rgb(206,128,12)" fg:x="991" fg:w="1"/><text x="79.4666%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="79.2166%" y="661" width="0.0799%" height="15" fill="rgb(245,194,0)" fg:x="991" fg:w="1"/><text x="79.4666%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.2966%" y="757" width="0.0799%" height="15" fill="rgb(235,175,41)" fg:x="992" fg:w="1"/><text x="79.5466%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.2966%" y="741" width="0.0799%" height="15" fill="rgb(216,15,48)" fg:x="992" fg:w="1"/><text x="79.5466%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.2966%" y="725" width="0.0799%" height="15" fill="rgb(223,179,5)" fg:x="992" fg:w="1"/><text x="79.5466%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.2966%" y="709" width="0.0799%" height="15" fill="rgb(220,80,15)" fg:x="992" fg:w="1"/><text x="79.5466%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="79.2966%" y="693" width="0.0799%" height="15" fill="rgb(228,20,30)" fg:x="992" fg:w="1"/><text x="79.5466%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="79.2966%" y="677" width="0.0799%" height="15" fill="rgb(229,194,27)" fg:x="992" fg:w="1"/><text x="79.5466%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::RaisedEvent&gt; (1 samples, 0.08%)</title><rect x="79.3765%" y="757" width="0.0799%" height="15" fill="rgb(238,202,32)" fg:x="993" fg:w="1"/><text x="79.6265%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (1 samples, 0.08%)</title><rect x="79.3765%" y="741" width="0.0799%" height="15" fill="rgb(207,82,27)" fg:x="993" fg:w="1"/><text x="79.6265%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="79.3765%" y="725" width="0.0799%" height="15" fill="rgb(246,122,46)" fg:x="993" fg:w="1"/><text x="79.6265%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3765%" y="709" width="0.0799%" height="15" fill="rgb(220,101,26)" fg:x="993" fg:w="1"/><text x="79.6265%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.4564%" y="741" width="0.0799%" height="15" fill="rgb(251,63,9)" fg:x="994" fg:w="1"/><text x="79.7064%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="79.4564%" y="725" width="0.0799%" height="15" fill="rgb(235,186,5)" fg:x="994" fg:w="1"/><text x="79.7064%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.5364%" y="741" width="0.0799%" height="15" fill="rgb(241,139,37)" fg:x="995" fg:w="1"/><text x="79.7864%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="79.5364%" y="725" width="0.0799%" height="15" fill="rgb(252,177,51)" fg:x="995" fg:w="1"/><text x="79.7864%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5364%" y="709" width="0.0799%" height="15" fill="rgb(214,131,22)" fg:x="995" fg:w="1"/><text x="79.7864%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="79.6163%" y="693" width="0.0799%" height="15" fill="rgb(246,53,19)" fg:x="996" fg:w="1"/><text x="79.8663%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="79.6163%" y="677" width="0.0799%" height="15" fill="rgb(231,158,27)" fg:x="996" fg:w="1"/><text x="79.8663%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.6163%" y="661" width="0.0799%" height="15" fill="rgb(226,166,46)" fg:x="996" fg:w="1"/><text x="79.8663%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.6163%" y="645" width="0.0799%" height="15" fill="rgb(218,178,26)" fg:x="996" fg:w="1"/><text x="79.8663%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.6163%" y="629" width="0.0799%" height="15" fill="rgb(206,25,39)" fg:x="996" fg:w="1"/><text x="79.8663%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.6163%" y="613" width="0.0799%" height="15" fill="rgb(232,218,41)" fg:x="996" fg:w="1"/><text x="79.8663%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="79.6163%" y="597" width="0.0799%" height="15" fill="rgb(212,151,15)" fg:x="996" fg:w="1"/><text x="79.8663%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.6163%" y="581" width="0.0799%" height="15" fill="rgb(213,49,22)" fg:x="996" fg:w="1"/><text x="79.8663%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.6163%" y="565" width="0.0799%" height="15" fill="rgb(247,116,21)" fg:x="996" fg:w="1"/><text x="79.8663%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6962%" y="677" width="0.0799%" height="15" fill="rgb(248,98,14)" fg:x="997" fg:w="1"/><text x="79.9462%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="79.7762%" y="677" width="0.0799%" height="15" fill="rgb(247,72,6)" fg:x="998" fg:w="1"/><text x="80.0262%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7762%" y="661" width="0.0799%" height="15" fill="rgb(213,9,22)" fg:x="998" fg:w="1"/><text x="80.0262%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.8561%" y="613" width="0.0799%" height="15" fill="rgb(213,122,30)" fg:x="999" fg:w="1"/><text x="80.1061%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.8561%" y="661" width="0.1599%" height="15" fill="rgb(244,11,30)" fg:x="999" fg:w="2"/><text x="80.1061%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="79.8561%" y="645" width="0.1599%" height="15" fill="rgb(236,102,26)" fg:x="999" fg:w="2"/><text x="80.1061%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.8561%" y="629" width="0.1599%" height="15" fill="rgb(231,166,37)" fg:x="999" fg:w="2"/><text x="80.1061%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9361%" y="613" width="0.0799%" height="15" fill="rgb(220,224,29)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9361%" y="597" width="0.0799%" height="15" fill="rgb(227,30,40)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9361%" y="581" width="0.0799%" height="15" fill="rgb(235,8,36)" fg:x="1000" fg:w="1"/><text x="80.1861%" y="591.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (9 samples, 0.72%)</title><rect x="79.6163%" y="709" width="0.7194%" height="15" fill="rgb(232,175,19)" fg:x="996" fg:w="9"/><text x="79.8663%" y="719.50"></text></g><g><title>kernel::model::scopes::save_props (8 samples, 0.64%)</title><rect x="79.6962%" y="693" width="0.6395%" height="15" fill="rgb(217,114,10)" fg:x="997" fg:w="8"/><text x="79.9462%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (6 samples, 0.48%)</title><rect x="79.8561%" y="677" width="0.4796%" height="15" fill="rgb(214,112,41)" fg:x="999" fg:w="6"/><text x="80.1061%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="80.0160%" y="661" width="0.3197%" height="15" fill="rgb(226,69,34)" fg:x="1001" fg:w="4"/><text x="80.2660%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="80.0160%" y="645" width="0.3197%" height="15" fill="rgb(219,23,46)" fg:x="1001" fg:w="4"/><text x="80.2660%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="80.0160%" y="629" width="0.3197%" height="15" fill="rgb(233,3,8)" fg:x="1001" fg:w="4"/><text x="80.2660%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="80.0160%" y="613" width="0.3197%" height="15" fill="rgb(251,34,42)" fg:x="1001" fg:w="4"/><text x="80.2660%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="80.0160%" y="597" width="0.3197%" height="15" fill="rgb(215,84,9)" fg:x="1001" fg:w="4"/><text x="80.2660%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="80.1759%" y="581" width="0.1599%" height="15" fill="rgb(231,75,52)" fg:x="1003" fg:w="2"/><text x="80.4259%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="80.1759%" y="565" width="0.1599%" height="15" fill="rgb(247,201,31)" fg:x="1003" fg:w="2"/><text x="80.4259%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.3357%" y="693" width="0.0799%" height="15" fill="rgb(215,171,37)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.3357%" y="677" width="0.0799%" height="15" fill="rgb(208,208,44)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.3357%" y="661" width="0.0799%" height="15" fill="rgb(247,146,54)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.3357%" y="645" width="0.0799%" height="15" fill="rgb(209,0,40)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.3357%" y="629" width="0.0799%" height="15" fill="rgb(221,59,4)" fg:x="1005" fg:w="1"/><text x="80.5857%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.4157%" y="677" width="0.1599%" height="15" fill="rgb(227,153,47)" fg:x="1006" fg:w="2"/><text x="80.6657%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.4157%" y="661" width="0.1599%" height="15" fill="rgb(253,225,10)" fg:x="1006" fg:w="2"/><text x="80.6657%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.4157%" y="645" width="0.1599%" height="15" fill="rgb(237,201,24)" fg:x="1006" fg:w="2"/><text x="80.6657%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.4956%" y="629" width="0.0799%" height="15" fill="rgb(238,23,27)" fg:x="1007" fg:w="1"/><text x="80.7456%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.5755%" y="661" width="0.0799%" height="15" fill="rgb(236,54,50)" fg:x="1008" fg:w="1"/><text x="80.8255%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.6555%" y="613" width="0.0799%" height="15" fill="rgb(216,106,0)" fg:x="1009" fg:w="1"/><text x="80.9055%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.6555%" y="597" width="0.0799%" height="15" fill="rgb(234,179,35)" fg:x="1009" fg:w="1"/><text x="80.9055%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7354%" y="597" width="0.0799%" height="15" fill="rgb(210,35,8)" fg:x="1010" fg:w="1"/><text x="80.9854%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.7354%" y="613" width="0.2398%" height="15" fill="rgb(238,144,16)" fg:x="1010" fg:w="3"/><text x="80.9854%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.8153%" y="597" width="0.1599%" height="15" fill="rgb(244,54,7)" fg:x="1011" fg:w="2"/><text x="81.0653%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.72%)</title><rect x="80.3357%" y="709" width="0.7194%" height="15" fill="rgb(233,225,40)" fg:x="1005" fg:w="9"/><text x="80.5857%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="80.4157%" y="693" width="0.6395%" height="15" fill="rgb(249,227,23)" fg:x="1006" fg:w="8"/><text x="80.6657%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="80.5755%" y="677" width="0.4796%" height="15" fill="rgb(215,42,44)" fg:x="1008" fg:w="6"/><text x="80.8255%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="80.6555%" y="661" width="0.3997%" height="15" fill="rgb(220,145,40)" fg:x="1009" fg:w="5"/><text x="80.9055%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="80.6555%" y="645" width="0.3997%" height="15" fill="rgb(228,218,40)" fg:x="1009" fg:w="5"/><text x="80.9055%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="80.6555%" y="629" width="0.3997%" height="15" fill="rgb(217,52,54)" fg:x="1009" fg:w="5"/><text x="80.9055%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9752%" y="613" width="0.0799%" height="15" fill="rgb(223,90,22)" fg:x="1013" fg:w="1"/><text x="81.2252%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9752%" y="597" width="0.0799%" height="15" fill="rgb(232,114,35)" fg:x="1013" fg:w="1"/><text x="81.2252%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="81.3749%" y="629" width="0.0799%" height="15" fill="rgb(227,223,50)" fg:x="1018" fg:w="1"/><text x="81.6249%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.3749%" y="613" width="0.0799%" height="15" fill="rgb(249,175,7)" fg:x="1018" fg:w="1"/><text x="81.6249%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3749%" y="597" width="0.0799%" height="15" fill="rgb(249,173,15)" fg:x="1018" fg:w="1"/><text x="81.6249%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.4548%" y="613" width="0.0799%" height="15" fill="rgb(240,131,6)" fg:x="1019" fg:w="1"/><text x="81.7048%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.0552%" y="709" width="0.5596%" height="15" fill="rgb(246,117,16)" fg:x="1014" fg:w="7"/><text x="81.3052%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="81.0552%" y="693" width="0.5596%" height="15" fill="rgb(209,32,16)" fg:x="1014" fg:w="7"/><text x="81.3052%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.0552%" y="677" width="0.5596%" height="15" fill="rgb(207,45,44)" fg:x="1014" fg:w="7"/><text x="81.3052%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="81.1351%" y="661" width="0.4796%" height="15" fill="rgb(210,66,3)" fg:x="1015" fg:w="6"/><text x="81.3851%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="81.2950%" y="645" width="0.3197%" height="15" fill="rgb(246,133,30)" fg:x="1017" fg:w="4"/><text x="81.5450%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.4548%" y="629" width="0.1599%" height="15" fill="rgb(224,37,17)" fg:x="1019" fg:w="2"/><text x="81.7048%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5348%" y="613" width="0.0799%" height="15" fill="rgb(237,218,18)" fg:x="1020" fg:w="1"/><text x="81.7848%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.5348%" y="597" width="0.0799%" height="15" fill="rgb(240,57,8)" fg:x="1020" fg:w="1"/><text x="81.7848%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6147%" y="693" width="0.0799%" height="15" fill="rgb(231,51,38)" fg:x="1021" fg:w="1"/><text x="81.8647%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6946%" y="661" width="0.0799%" height="15" fill="rgb(230,89,50)" fg:x="1022" fg:w="1"/><text x="81.9446%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6946%" y="645" width="0.0799%" height="15" fill="rgb(234,103,34)" fg:x="1022" fg:w="1"/><text x="81.9446%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.7746%" y="645" width="0.0799%" height="15" fill="rgb(220,45,48)" fg:x="1023" fg:w="1"/><text x="82.0246%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.6946%" y="693" width="0.2398%" height="15" fill="rgb(250,210,3)" fg:x="1022" fg:w="3"/><text x="81.9446%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="81.6946%" y="677" width="0.2398%" height="15" fill="rgb(210,118,12)" fg:x="1022" fg:w="3"/><text x="81.9446%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.7746%" y="661" width="0.1599%" height="15" fill="rgb(238,154,21)" fg:x="1023" fg:w="2"/><text x="82.0246%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.8545%" y="645" width="0.0799%" height="15" fill="rgb(227,220,4)" fg:x="1024" fg:w="1"/><text x="82.1045%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.8545%" y="629" width="0.0799%" height="15" fill="rgb(207,179,27)" fg:x="1024" fg:w="1"/><text x="82.1045%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.8545%" y="613" width="0.0799%" height="15" fill="rgb(240,111,30)" fg:x="1024" fg:w="1"/><text x="82.1045%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9345%" y="661" width="0.0799%" height="15" fill="rgb(251,29,1)" fg:x="1025" fg:w="1"/><text x="82.1845%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0144%" y="661" width="0.0799%" height="15" fill="rgb(224,141,39)" fg:x="1026" fg:w="1"/><text x="82.2644%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0144%" y="645" width="0.0799%" height="15" fill="rgb(207,98,26)" fg:x="1026" fg:w="1"/><text x="82.2644%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.0144%" y="629" width="0.0799%" height="15" fill="rgb(221,37,6)" fg:x="1026" fg:w="1"/><text x="82.2644%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0943%" y="661" width="0.0799%" height="15" fill="rgb(217,32,44)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="82.0943%" y="645" width="0.0799%" height="15" fill="rgb(253,149,2)" fg:x="1027" fg:w="1"/><text x="82.3443%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="82.1743%" y="645" width="0.0799%" height="15" fill="rgb(220,165,39)" fg:x="1028" fg:w="1"/><text x="82.4243%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="82.1743%" y="661" width="0.1599%" height="15" fill="rgb(235,33,48)" fg:x="1028" fg:w="2"/><text x="82.4243%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2542%" y="645" width="0.0799%" height="15" fill="rgb(221,89,6)" fg:x="1029" fg:w="1"/><text x="82.5042%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3341%" y="645" width="0.0799%" height="15" fill="rgb(215,214,6)" fg:x="1030" fg:w="1"/><text x="82.5841%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.4940%" y="613" width="0.0799%" height="15" fill="rgb(241,1,30)" fg:x="1032" fg:w="1"/><text x="82.7440%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.5739%" y="581" width="0.1599%" height="15" fill="rgb(211,140,32)" fg:x="1033" fg:w="2"/><text x="82.8239%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7338%" y="549" width="0.0799%" height="15" fill="rgb(232,48,21)" fg:x="1035" fg:w="1"/><text x="82.9838%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7338%" y="533" width="0.0799%" height="15" fill="rgb(252,217,9)" fg:x="1035" fg:w="1"/><text x="82.9838%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="81.9345%" y="693" width="0.9592%" height="15" fill="rgb(206,123,34)" fg:x="1025" fg:w="12"/><text x="82.1845%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="81.9345%" y="677" width="0.9592%" height="15" fill="rgb(245,161,38)" fg:x="1025" fg:w="12"/><text x="82.1845%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="82.3341%" y="661" width="0.5596%" height="15" fill="rgb(233,205,7)" fg:x="1030" fg:w="7"/><text x="82.5841%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.48%)</title><rect x="82.4141%" y="645" width="0.4796%" height="15" fill="rgb(217,119,18)" fg:x="1031" fg:w="6"/><text x="82.6641%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="82.4940%" y="629" width="0.3997%" height="15" fill="rgb(252,126,3)" fg:x="1032" fg:w="5"/><text x="82.7440%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="82.5739%" y="613" width="0.3197%" height="15" fill="rgb(252,188,15)" fg:x="1033" fg:w="4"/><text x="82.8239%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="82.5739%" y="597" width="0.3197%" height="15" fill="rgb(228,1,48)" fg:x="1033" fg:w="4"/><text x="82.8239%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.7338%" y="581" width="0.1599%" height="15" fill="rgb(205,187,8)" fg:x="1035" fg:w="2"/><text x="82.9838%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.7338%" y="565" width="0.1599%" height="15" fill="rgb(205,105,50)" fg:x="1035" fg:w="2"/><text x="82.9838%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8137%" y="549" width="0.0799%" height="15" fill="rgb(211,31,46)" fg:x="1036" fg:w="1"/><text x="83.0637%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="83.1335%" y="581" width="0.0799%" height="15" fill="rgb(213,126,5)" fg:x="1040" fg:w="1"/><text x="83.3835%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="83.3733%" y="517" width="0.0799%" height="15" fill="rgb(231,87,9)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3733%" y="501" width="0.0799%" height="15" fill="rgb(219,224,20)" fg:x="1043" fg:w="1"/><text x="83.6233%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="83.3733%" y="549" width="0.1599%" height="15" fill="rgb(230,84,21)" fg:x="1043" fg:w="2"/><text x="83.6233%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="83.3733%" y="533" width="0.1599%" height="15" fill="rgb(224,169,42)" fg:x="1043" fg:w="2"/><text x="83.6233%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.4532%" y="517" width="0.0799%" height="15" fill="rgb(227,182,13)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="83.4532%" y="501" width="0.0799%" height="15" fill="rgb(249,57,41)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="83.4532%" y="485" width="0.0799%" height="15" fill="rgb(214,93,52)" fg:x="1044" fg:w="1"/><text x="83.7032%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="83.6131%" y="469" width="0.0799%" height="15" fill="rgb(229,161,34)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="83.6131%" y="453" width="0.0799%" height="15" fill="rgb(227,193,17)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.6131%" y="437" width="0.0799%" height="15" fill="rgb(242,164,46)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6131%" y="421" width="0.0799%" height="15" fill="rgb(242,142,47)" fg:x="1046" fg:w="1"/><text x="83.8631%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="83.5332%" y="533" width="0.2398%" height="15" fill="rgb(208,23,18)" fg:x="1045" fg:w="3"/><text x="83.7832%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="83.6131%" y="517" width="0.1599%" height="15" fill="rgb(219,54,38)" fg:x="1046" fg:w="2"/><text x="83.8631%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="83.6131%" y="501" width="0.1599%" height="15" fill="rgb(206,97,35)" fg:x="1046" fg:w="2"/><text x="83.8631%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="83.6131%" y="485" width="0.1599%" height="15" fill="rgb(208,76,8)" fg:x="1046" fg:w="2"/><text x="83.8631%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6930%" y="469" width="0.0799%" height="15" fill="rgb(220,92,28)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6930%" y="453" width="0.0799%" height="15" fill="rgb(209,158,39)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6930%" y="437" width="0.0799%" height="15" fill="rgb(238,175,9)" fg:x="1047" fg:w="1"/><text x="83.9430%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="83.2934%" y="565" width="0.5596%" height="15" fill="rgb(240,116,17)" fg:x="1042" fg:w="7"/><text x="83.5434%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="83.5332%" y="549" width="0.3197%" height="15" fill="rgb(208,7,2)" fg:x="1045" fg:w="4"/><text x="83.7832%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.7730%" y="533" width="0.0799%" height="15" fill="rgb(252,52,4)" fg:x="1048" fg:w="1"/><text x="84.0230%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="82.9736%" y="629" width="0.9592%" height="15" fill="rgb(222,68,34)" fg:x="1038" fg:w="12"/><text x="83.2236%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="82.9736%" y="613" width="0.9592%" height="15" fill="rgb(242,154,35)" fg:x="1038" fg:w="12"/><text x="83.2236%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="83.0536%" y="597" width="0.8793%" height="15" fill="rgb(210,125,54)" fg:x="1039" fg:w="11"/><text x="83.3036%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="83.2134%" y="581" width="0.7194%" height="15" fill="rgb(247,121,18)" fg:x="1041" fg:w="9"/><text x="83.4634%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8529%" y="565" width="0.0799%" height="15" fill="rgb(223,48,51)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8529%" y="549" width="0.0799%" height="15" fill="rgb(211,156,48)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8529%" y="533" width="0.0799%" height="15" fill="rgb(236,56,31)" fg:x="1049" fg:w="1"/><text x="84.1029%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.9329%" y="629" width="0.0799%" height="15" fill="rgb(247,157,52)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="83.9329%" y="613" width="0.0799%" height="15" fill="rgb(244,121,39)" fg:x="1050" fg:w="1"/><text x="84.1829%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (16 samples, 1.28%)</title><rect x="82.8937%" y="693" width="1.2790%" height="15" fill="rgb(239,4,40)" fg:x="1037" fg:w="16"/><text x="83.1437%" y="703.50"></text></g><g><title>serde_json::de::from_trait (16 samples, 1.28%)</title><rect x="82.8937%" y="677" width="1.2790%" height="15" fill="rgb(213,204,45)" fg:x="1037" fg:w="16"/><text x="83.1437%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.28%)</title><rect x="82.8937%" y="661" width="1.2790%" height="15" fill="rgb(242,107,0)" fg:x="1037" fg:w="16"/><text x="83.1437%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.28%)</title><rect x="82.8937%" y="645" width="1.2790%" height="15" fill="rgb(215,152,25)" fg:x="1037" fg:w="16"/><text x="83.1437%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.0128%" y="629" width="0.1599%" height="15" fill="rgb(233,151,6)" fg:x="1051" fg:w="2"/><text x="84.2628%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.0128%" y="613" width="0.1599%" height="15" fill="rgb(206,126,44)" fg:x="1051" fg:w="2"/><text x="84.2628%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.0927%" y="597" width="0.0799%" height="15" fill="rgb(209,145,15)" fg:x="1052" fg:w="1"/><text x="84.3427%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="84.1727%" y="677" width="0.2398%" height="15" fill="rgb(235,214,8)" fg:x="1053" fg:w="3"/><text x="84.4227%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="84.1727%" y="661" width="0.2398%" height="15" fill="rgb(216,140,51)" fg:x="1053" fg:w="3"/><text x="84.4227%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="84.3325%" y="645" width="0.0799%" height="15" fill="rgb(213,83,34)" fg:x="1055" fg:w="1"/><text x="84.5825%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.3325%" y="629" width="0.0799%" height="15" fill="rgb(218,186,44)" fg:x="1055" fg:w="1"/><text x="84.5825%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="84.4125%" y="677" width="0.0799%" height="15" fill="rgb(225,147,10)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4125%" y="661" width="0.0799%" height="15" fill="rgb(209,214,20)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4125%" y="645" width="0.0799%" height="15" fill="rgb(252,61,32)" fg:x="1056" fg:w="1"/><text x="84.6625%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.4924%" y="677" width="0.0799%" height="15" fill="rgb(237,204,10)" fg:x="1057" fg:w="1"/><text x="84.7424%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="84.5723%" y="645" width="0.0799%" height="15" fill="rgb(246,118,16)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="84.5723%" y="629" width="0.0799%" height="15" fill="rgb(214,50,9)" fg:x="1058" fg:w="1"/><text x="84.8223%" y="639.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="84.5723%" y="661" width="0.1599%" height="15" fill="rgb(212,41,1)" fg:x="1058" fg:w="2"/><text x="84.8223%" y="671.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="84.6523%" y="645" width="0.0799%" height="15" fill="rgb(228,172,32)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="655.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="84.6523%" y="629" width="0.0799%" height="15" fill="rgb(231,85,38)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.6523%" y="613" width="0.0799%" height="15" fill="rgb(223,120,31)" fg:x="1059" fg:w="1"/><text x="84.9023%" y="623.50"></text></g><g><title>engine::session::Session::close (73 samples, 5.84%)</title><rect x="78.9768%" y="773" width="5.8353%" height="15" fill="rgb(254,174,9)" fg:x="988" fg:w="73"/><text x="79.2268%" y="783.50">engine:..</text></g><g><title>engine::session::Session::save_entity_changes (67 samples, 5.36%)</title><rect x="79.4564%" y="757" width="5.3557%" height="15" fill="rgb(243,197,0)" fg:x="994" fg:w="67"/><text x="79.7064%" y="767.50">engine:..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (65 samples, 5.20%)</title><rect x="79.6163%" y="741" width="5.1958%" height="15" fill="rgb(226,186,17)" fg:x="996" fg:w="65"/><text x="79.8663%" y="751.50">engine..</text></g><g><title>engine::session::SavesEntities::check_for_changes (65 samples, 5.20%)</title><rect x="79.6163%" y="725" width="5.1958%" height="15" fill="rgb(229,38,38)" fg:x="996" fg:w="65"/><text x="79.8663%" y="735.50">engine..</text></g><g><title>kernel::compare::any_entity_changes (40 samples, 3.20%)</title><rect x="81.6147%" y="709" width="3.1974%" height="15" fill="rgb(238,82,14)" fg:x="1021" fg:w="40"/><text x="81.8647%" y="719.50">ker..</text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="84.1727%" y="693" width="0.6395%" height="15" fill="rgb(230,154,54)" fg:x="1053" fg:w="8"/><text x="84.4227%" y="703.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="84.5723%" y="677" width="0.2398%" height="15" fill="rgb(243,84,17)" fg:x="1058" fg:w="3"/><text x="84.8223%" y="687.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="84.7322%" y="661" width="0.0799%" height="15" fill="rgb(226,41,37)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7322%" y="645" width="0.0799%" height="15" fill="rgb(219,20,18)" fg:x="1060" fg:w="1"/><text x="84.9822%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.8921%" y="741" width="0.0799%" height="15" fill="rgb(243,173,39)" fg:x="1062" fg:w="1"/><text x="85.1421%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.9720%" y="725" width="0.0799%" height="15" fill="rgb(245,79,20)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.9720%" y="709" width="0.0799%" height="15" fill="rgb(229,101,45)" fg:x="1063" fg:w="1"/><text x="85.2220%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="85.4516%" y="565" width="0.2398%" height="15" fill="rgb(215,123,52)" fg:x="1069" fg:w="3"/><text x="85.7016%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="85.4516%" y="549" width="0.2398%" height="15" fill="rgb(215,11,33)" fg:x="1069" fg:w="3"/><text x="85.7016%" y="559.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="85.4516%" y="533" width="0.2398%" height="15" fill="rgb(245,105,20)" fg:x="1069" fg:w="3"/><text x="85.7016%" y="543.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="85.6914%" y="549" width="0.0799%" height="15" fill="rgb(231,132,30)" fg:x="1072" fg:w="1"/><text x="85.9414%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="85.6914%" y="533" width="0.0799%" height="15" fill="rgb(224,62,21)" fg:x="1072" fg:w="1"/><text x="85.9414%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.6914%" y="517" width="0.0799%" height="15" fill="rgb(209,221,38)" fg:x="1072" fg:w="1"/><text x="85.9414%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.6914%" y="501" width="0.0799%" height="15" fill="rgb(229,200,30)" fg:x="1072" fg:w="1"/><text x="85.9414%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (6 samples, 0.48%)</title><rect x="85.3717%" y="581" width="0.4796%" height="15" fill="rgb(237,142,41)" fg:x="1068" fg:w="6"/><text x="85.6217%" y="591.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.16%)</title><rect x="85.6914%" y="565" width="0.1599%" height="15" fill="rgb(238,37,22)" fg:x="1072" fg:w="2"/><text x="85.9414%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="85.7714%" y="549" width="0.0799%" height="15" fill="rgb(234,182,17)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="85.7714%" y="533" width="0.0799%" height="15" fill="rgb(237,58,48)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="85.7714%" y="517" width="0.0799%" height="15" fill="rgb(226,112,37)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="85.7714%" y="501" width="0.0799%" height="15" fill="rgb(230,201,20)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.7714%" y="485" width="0.0799%" height="15" fill="rgb(252,95,39)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="85.7714%" y="469" width="0.0799%" height="15" fill="rgb(240,150,33)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="85.7714%" y="453" width="0.0799%" height="15" fill="rgb(208,202,37)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="85.7714%" y="437" width="0.0799%" height="15" fill="rgb(251,37,12)" fg:x="1073" fg:w="1"/><text x="86.0214%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="85.8513%" y="565" width="0.0799%" height="15" fill="rgb(247,150,26)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="85.8513%" y="549" width="0.0799%" height="15" fill="rgb(232,28,8)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.8513%" y="533" width="0.0799%" height="15" fill="rgb(226,121,34)" fg:x="1074" fg:w="1"/><text x="86.1013%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9313%" y="549" width="0.0799%" height="15" fill="rgb(237,23,13)" fg:x="1075" fg:w="1"/><text x="86.1813%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (10 samples, 0.80%)</title><rect x="85.3717%" y="613" width="0.7994%" height="15" fill="rgb(214,42,29)" fg:x="1068" fg:w="10"/><text x="85.6217%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (10 samples, 0.80%)</title><rect x="85.3717%" y="597" width="0.7994%" height="15" fill="rgb(246,204,29)" fg:x="1068" fg:w="10"/><text x="85.6217%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="85.8513%" y="581" width="0.3197%" height="15" fill="rgb(242,28,40)" fg:x="1074" fg:w="4"/><text x="86.1013%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="85.9313%" y="565" width="0.2398%" height="15" fill="rgb(243,64,49)" fg:x="1075" fg:w="3"/><text x="86.1813%" y="575.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="86.0112%" y="549" width="0.1599%" height="15" fill="rgb(226,93,13)" fg:x="1076" fg:w="2"/><text x="86.2612%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="86.0112%" y="533" width="0.1599%" height="15" fill="rgb(241,113,26)" fg:x="1076" fg:w="2"/><text x="86.2612%" y="543.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.0112%" y="517" width="0.1599%" height="15" fill="rgb(209,209,0)" fg:x="1076" fg:w="2"/><text x="86.2612%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="86.0112%" y="501" width="0.1599%" height="15" fill="rgb(251,183,50)" fg:x="1076" fg:w="2"/><text x="86.2612%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="86.0112%" y="485" width="0.1599%" height="15" fill="rgb(248,24,43)" fg:x="1076" fg:w="2"/><text x="86.2612%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0911%" y="469" width="0.0799%" height="15" fill="rgb(218,102,9)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0911%" y="453" width="0.0799%" height="15" fill="rgb(249,209,39)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0911%" y="437" width="0.0799%" height="15" fill="rgb(210,37,6)" fg:x="1077" fg:w="1"/><text x="86.3411%" y="447.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="86.1711%" y="613" width="0.0799%" height="15" fill="rgb(212,99,4)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1711%" y="597" width="0.0799%" height="15" fill="rgb(253,59,46)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1711%" y="581" width="0.0799%" height="15" fill="rgb(229,96,9)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1711%" y="565" width="0.0799%" height="15" fill="rgb(207,103,49)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.1711%" y="549" width="0.0799%" height="15" fill="rgb(250,226,20)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.1711%" y="533" width="0.0799%" height="15" fill="rgb(238,220,11)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.1711%" y="517" width="0.0799%" height="15" fill="rgb(236,74,15)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.1711%" y="501" width="0.0799%" height="15" fill="rgb(218,43,40)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.1711%" y="485" width="0.0799%" height="15" fill="rgb(245,206,37)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.1711%" y="469" width="0.0799%" height="15" fill="rgb(206,30,3)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.1711%" y="453" width="0.0799%" height="15" fill="rgb(211,29,35)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.1711%" y="437" width="0.0799%" height="15" fill="rgb(218,49,50)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.1711%" y="421" width="0.0799%" height="15" fill="rgb(211,114,30)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1711%" y="405" width="0.0799%" height="15" fill="rgb(238,70,33)" fg:x="1078" fg:w="1"/><text x="86.4211%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="86.2510%" y="597" width="0.0799%" height="15" fill="rgb(238,141,50)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="86.2510%" y="581" width="0.0799%" height="15" fill="rgb(205,69,6)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="591.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.2510%" y="565" width="0.0799%" height="15" fill="rgb(229,65,0)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="86.2510%" y="549" width="0.0799%" height="15" fill="rgb(211,3,37)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="86.2510%" y="533" width="0.0799%" height="15" fill="rgb(223,196,42)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2510%" y="517" width="0.0799%" height="15" fill="rgb(227,191,15)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2510%" y="501" width="0.0799%" height="15" fill="rgb(229,210,53)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2510%" y="485" width="0.0799%" height="15" fill="rgb(250,203,10)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2510%" y="469" width="0.0799%" height="15" fill="rgb(247,8,37)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.2510%" y="453" width="0.0799%" height="15" fill="rgb(240,52,9)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2510%" y="437" width="0.0799%" height="15" fill="rgb(243,100,52)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2510%" y="421" width="0.0799%" height="15" fill="rgb(224,149,30)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2510%" y="405" width="0.0799%" height="15" fill="rgb(232,27,45)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2510%" y="389" width="0.0799%" height="15" fill="rgb(242,161,36)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2510%" y="373" width="0.0799%" height="15" fill="rgb(235,223,32)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.2510%" y="357" width="0.0799%" height="15" fill="rgb(242,78,19)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2510%" y="341" width="0.0799%" height="15" fill="rgb(233,157,47)" fg:x="1079" fg:w="1"/><text x="86.5010%" y="351.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3309%" y="581" width="0.0799%" height="15" fill="rgb(251,213,5)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3309%" y="565" width="0.0799%" height="15" fill="rgb(215,223,5)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3309%" y="549" width="0.0799%" height="15" fill="rgb(230,14,7)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.3309%" y="533" width="0.0799%" height="15" fill="rgb(249,179,20)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.3309%" y="517" width="0.0799%" height="15" fill="rgb(230,204,44)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.3309%" y="501" width="0.0799%" height="15" fill="rgb(233,229,46)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.3309%" y="485" width="0.0799%" height="15" fill="rgb(210,154,35)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.3309%" y="469" width="0.0799%" height="15" fill="rgb(220,178,16)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.3309%" y="453" width="0.0799%" height="15" fill="rgb(243,0,53)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.3309%" y="437" width="0.0799%" height="15" fill="rgb(223,221,47)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.3309%" y="421" width="0.0799%" height="15" fill="rgb(233,82,15)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.3309%" y="405" width="0.0799%" height="15" fill="rgb(222,8,38)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3309%" y="389" width="0.0799%" height="15" fill="rgb(241,28,48)" fg:x="1080" fg:w="1"/><text x="86.5809%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="86.3309%" y="597" width="0.1599%" height="15" fill="rgb(209,227,15)" fg:x="1080" fg:w="2"/><text x="86.5809%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="86.4109%" y="581" width="0.0799%" height="15" fill="rgb(234,189,48)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="591.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="86.4109%" y="565" width="0.0799%" height="15" fill="rgb(212,27,44)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="86.4109%" y="549" width="0.0799%" height="15" fill="rgb(249,55,42)" fg:x="1081" fg:w="1"/><text x="86.6609%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="86.4908%" y="597" width="0.0799%" height="15" fill="rgb(215,211,28)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="86.4908%" y="581" width="0.0799%" height="15" fill="rgb(221,155,16)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4908%" y="565" width="0.0799%" height="15" fill="rgb(247,106,30)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.4908%" y="549" width="0.0799%" height="15" fill="rgb(230,76,31)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.4908%" y="533" width="0.0799%" height="15" fill="rgb(222,6,48)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4908%" y="517" width="0.0799%" height="15" fill="rgb(228,82,3)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.4908%" y="501" width="0.0799%" height="15" fill="rgb(245,208,52)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4908%" y="485" width="0.0799%" height="15" fill="rgb(218,65,17)" fg:x="1082" fg:w="1"/><text x="86.7408%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="86.5707%" y="581" width="0.0799%" height="15" fill="rgb(242,63,26)" fg:x="1083" fg:w="1"/><text x="86.8207%" y="591.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.6507%" y="549" width="0.0799%" height="15" fill="rgb(224,119,39)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="86.6507%" y="533" width="0.0799%" height="15" fill="rgb(229,106,3)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="86.6507%" y="517" width="0.0799%" height="15" fill="rgb(248,6,33)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.6507%" y="501" width="0.0799%" height="15" fill="rgb(226,3,49)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6507%" y="485" width="0.0799%" height="15" fill="rgb(228,142,14)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.6507%" y="469" width="0.0799%" height="15" fill="rgb(241,141,54)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6507%" y="453" width="0.0799%" height="15" fill="rgb(252,17,50)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.6507%" y="437" width="0.0799%" height="15" fill="rgb(221,120,48)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6507%" y="421" width="0.0799%" height="15" fill="rgb(229,171,33)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6507%" y="405" width="0.0799%" height="15" fill="rgb(236,207,21)" fg:x="1084" fg:w="1"/><text x="86.9007%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="86.5707%" y="597" width="0.2398%" height="15" fill="rgb(218,93,35)" fg:x="1083" fg:w="3"/><text x="86.8207%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="86.6507%" y="581" width="0.1599%" height="15" fill="rgb(207,101,8)" fg:x="1084" fg:w="2"/><text x="86.9007%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="86.6507%" y="565" width="0.1599%" height="15" fill="rgb(237,67,44)" fg:x="1084" fg:w="2"/><text x="86.9007%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.7306%" y="549" width="0.0799%" height="15" fill="rgb(236,218,7)" fg:x="1085" fg:w="1"/><text x="86.9806%" y="559.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="86.7306%" y="533" width="0.0799%" height="15" fill="rgb(252,207,10)" fg:x="1085" fg:w="1"/><text x="86.9806%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.7306%" y="517" width="0.0799%" height="15" fill="rgb(221,175,6)" fg:x="1085" fg:w="1"/><text x="86.9806%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.7306%" y="501" width="0.0799%" height="15" fill="rgb(230,105,53)" fg:x="1085" fg:w="1"/><text x="86.9806%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (20 samples, 1.60%)</title><rect x="85.2918%" y="629" width="1.5987%" height="15" fill="rgb(253,83,6)" fg:x="1067" fg:w="20"/><text x="85.5418%" y="639.50"></text></g><g><title>plugins_core::tools::move_between (8 samples, 0.64%)</title><rect x="86.2510%" y="613" width="0.6395%" height="15" fill="rgb(206,198,44)" fg:x="1079" fg:w="8"/><text x="86.5010%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="86.8106%" y="597" width="0.0799%" height="15" fill="rgb(206,164,29)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.8106%" y="581" width="0.0799%" height="15" fill="rgb(215,2,50)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="86.8106%" y="565" width="0.0799%" height="15" fill="rgb(246,127,18)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.8106%" y="549" width="0.0799%" height="15" fill="rgb(232,6,21)" fg:x="1086" fg:w="1"/><text x="87.0606%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (2 samples, 0.16%)</title><rect x="86.8905%" y="581" width="0.1599%" height="15" fill="rgb(224,154,1)" fg:x="1087" fg:w="2"/><text x="87.1405%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="86.8905%" y="565" width="0.1599%" height="15" fill="rgb(248,135,32)" fg:x="1087" fg:w="2"/><text x="87.1405%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="86.8905%" y="549" width="0.1599%" height="15" fill="rgb(253,129,38)" fg:x="1087" fg:w="2"/><text x="87.1405%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="86.8905%" y="533" width="0.1599%" height="15" fill="rgb(214,110,11)" fg:x="1087" fg:w="2"/><text x="87.1405%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="87.0504%" y="581" width="0.1599%" height="15" fill="rgb(246,150,22)" fg:x="1089" fg:w="2"/><text x="87.3004%" y="591.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="87.0504%" y="565" width="0.1599%" height="15" fill="rgb(219,170,39)" fg:x="1089" fg:w="2"/><text x="87.3004%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="87.0504%" y="549" width="0.1599%" height="15" fill="rgb(221,143,52)" fg:x="1089" fg:w="2"/><text x="87.3004%" y="559.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.0504%" y="533" width="0.1599%" height="15" fill="rgb(237,122,11)" fg:x="1089" fg:w="2"/><text x="87.3004%" y="543.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="87.0504%" y="517" width="0.1599%" height="15" fill="rgb(217,114,13)" fg:x="1089" fg:w="2"/><text x="87.3004%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="87.0504%" y="501" width="0.1599%" height="15" fill="rgb(218,184,28)" fg:x="1089" fg:w="2"/><text x="87.3004%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.0504%" y="485" width="0.1599%" height="15" fill="rgb(237,33,22)" fg:x="1089" fg:w="2"/><text x="87.3004%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1303%" y="469" width="0.0799%" height="15" fill="rgb(224,56,42)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1303%" y="453" width="0.0799%" height="15" fill="rgb(216,138,53)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.1303%" y="437" width="0.0799%" height="15" fill="rgb(233,229,40)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.1303%" y="421" width="0.0799%" height="15" fill="rgb(252,105,0)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.1303%" y="405" width="0.0799%" height="15" fill="rgb(212,75,24)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.1303%" y="389" width="0.0799%" height="15" fill="rgb(235,168,50)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.1303%" y="373" width="0.0799%" height="15" fill="rgb(247,204,12)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.1303%" y="357" width="0.0799%" height="15" fill="rgb(250,203,27)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.1303%" y="341" width="0.0799%" height="15" fill="rgb(221,215,2)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.1303%" y="325" width="0.0799%" height="15" fill="rgb(242,163,47)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.1303%" y="309" width="0.0799%" height="15" fill="rgb(237,136,50)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.1303%" y="293" width="0.0799%" height="15" fill="rgb(217,201,47)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.1303%" y="277" width="0.0799%" height="15" fill="rgb(212,38,47)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.1303%" y="261" width="0.0799%" height="15" fill="rgb(254,113,41)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1303%" y="245" width="0.0799%" height="15" fill="rgb(236,7,22)" fg:x="1090" fg:w="1"/><text x="87.3803%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (5 samples, 0.40%)</title><rect x="86.8905%" y="613" width="0.3997%" height="15" fill="rgb(235,81,25)" fg:x="1087" fg:w="5"/><text x="87.1405%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (5 samples, 0.40%)</title><rect x="86.8905%" y="597" width="0.3997%" height="15" fill="rgb(216,41,31)" fg:x="1087" fg:w="5"/><text x="87.1405%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="87.2102%" y="581" width="0.0799%" height="15" fill="rgb(249,219,15)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2102%" y="565" width="0.0799%" height="15" fill="rgb(248,201,3)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2102%" y="549" width="0.0799%" height="15" fill="rgb(249,141,18)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2102%" y="533" width="0.0799%" height="15" fill="rgb(222,32,39)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.2102%" y="517" width="0.0799%" height="15" fill="rgb(237,139,51)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.2102%" y="501" width="0.0799%" height="15" fill="rgb(218,210,4)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.2102%" y="485" width="0.0799%" height="15" fill="rgb(217,199,13)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="87.2102%" y="469" width="0.0799%" height="15" fill="rgb(222,118,25)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.2102%" y="453" width="0.0799%" height="15" fill="rgb(241,70,28)" fg:x="1091" fg:w="1"/><text x="87.4602%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="87.3701%" y="597" width="0.0799%" height="15" fill="rgb(205,51,41)" fg:x="1093" fg:w="1"/><text x="87.6201%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4500%" y="533" width="0.0799%" height="15" fill="rgb(237,165,49)" fg:x="1094" fg:w="1"/><text x="87.7000%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="87.4500%" y="597" width="0.1599%" height="15" fill="rgb(213,10,51)" fg:x="1094" fg:w="2"/><text x="87.7000%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="87.4500%" y="581" width="0.1599%" height="15" fill="rgb(245,89,32)" fg:x="1094" fg:w="2"/><text x="87.7000%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="87.4500%" y="565" width="0.1599%" height="15" fill="rgb(249,81,54)" fg:x="1094" fg:w="2"/><text x="87.7000%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.4500%" y="549" width="0.1599%" height="15" fill="rgb(223,134,14)" fg:x="1094" fg:w="2"/><text x="87.7000%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.5300%" y="533" width="0.0799%" height="15" fill="rgb(233,62,37)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="87.5300%" y="517" width="0.0799%" height="15" fill="rgb(219,117,42)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.5300%" y="501" width="0.0799%" height="15" fill="rgb(248,40,28)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.5300%" y="485" width="0.0799%" height="15" fill="rgb(246,66,35)" fg:x="1095" fg:w="1"/><text x="87.7800%" y="495.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.6099%" y="549" width="0.0799%" height="15" fill="rgb(250,229,22)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::Property)&gt; (1 samples, 0.08%)</title><rect x="87.6099%" y="533" width="0.0799%" height="15" fill="rgb(213,89,18)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6099%" y="517" width="0.0799%" height="15" fill="rgb(213,122,9)" fg:x="1096" fg:w="1"/><text x="87.8599%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (11 samples, 0.88%)</title><rect x="86.8905%" y="629" width="0.8793%" height="15" fill="rgb(220,213,48)" fg:x="1087" fg:w="11"/><text x="87.1405%" y="639.50"></text></g><g><title>plugins_core::tools::move_between (6 samples, 0.48%)</title><rect x="87.2902%" y="613" width="0.4796%" height="15" fill="rgb(244,109,54)" fg:x="1092" fg:w="6"/><text x="87.5402%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="87.6099%" y="597" width="0.1599%" height="15" fill="rgb(254,104,49)" fg:x="1096" fg:w="2"/><text x="87.8599%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="87.6099%" y="581" width="0.1599%" height="15" fill="rgb(219,28,32)" fg:x="1096" fg:w="2"/><text x="87.8599%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="87.6099%" y="565" width="0.1599%" height="15" fill="rgb(249,153,33)" fg:x="1096" fg:w="2"/><text x="87.8599%" y="575.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.6898%" y="549" width="0.0799%" height="15" fill="rgb(230,116,21)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="87.6898%" y="533" width="0.0799%" height="15" fill="rgb(247,110,3)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.6898%" y="517" width="0.0799%" height="15" fill="rgb(227,128,3)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6898%" y="501" width="0.0799%" height="15" fill="rgb(208,21,1)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6898%" y="485" width="0.0799%" height="15" fill="rgb(225,24,20)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6898%" y="469" width="0.0799%" height="15" fill="rgb(250,159,24)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6898%" y="453" width="0.0799%" height="15" fill="rgb(214,30,53)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6898%" y="437" width="0.0799%" height="15" fill="rgb(243,198,11)" fg:x="1097" fg:w="1"/><text x="87.9398%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7698%" y="629" width="0.0799%" height="15" fill="rgb(232,33,1)" fg:x="1098" fg:w="1"/><text x="88.0198%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.8497%" y="613" width="0.0799%" height="15" fill="rgb(242,60,11)" fg:x="1099" fg:w="1"/><text x="88.0997%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="87.9297%" y="565" width="0.0799%" height="15" fill="rgb(241,229,34)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="87.9297%" y="549" width="0.0799%" height="15" fill="rgb(230,92,51)" fg:x="1100" fg:w="1"/><text x="88.1797%" y="559.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="87.9297%" y="597" width="0.1599%" height="15" fill="rgb(212,209,8)" fg:x="1100" fg:w="2"/><text x="88.1797%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="87.9297%" y="581" width="0.1599%" height="15" fill="rgb(241,55,35)" fg:x="1100" fg:w="2"/><text x="88.1797%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.0096%" y="565" width="0.0799%" height="15" fill="rgb(208,187,52)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.0096%" y="549" width="0.0799%" height="15" fill="rgb(251,110,17)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.0096%" y="533" width="0.0799%" height="15" fill="rgb(246,225,54)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.0096%" y="517" width="0.0799%" height="15" fill="rgb(220,109,6)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.0096%" y="501" width="0.0799%" height="15" fill="rgb(228,56,50)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.0096%" y="485" width="0.0799%" height="15" fill="rgb(230,34,30)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.0096%" y="469" width="0.0799%" height="15" fill="rgb(205,28,42)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.0096%" y="453" width="0.0799%" height="15" fill="rgb(215,68,0)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.0096%" y="437" width="0.0799%" height="15" fill="rgb(206,91,47)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.0096%" y="421" width="0.0799%" height="15" fill="rgb(241,159,43)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="88.0096%" y="405" width="0.0799%" height="15" fill="rgb(232,191,38)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="88.0096%" y="389" width="0.0799%" height="15" fill="rgb(212,180,41)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="88.0096%" y="373" width="0.0799%" height="15" fill="rgb(236,134,49)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="88.0096%" y="357" width="0.0799%" height="15" fill="rgb(221,83,26)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="88.0096%" y="341" width="0.0799%" height="15" fill="rgb(215,87,39)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="88.0096%" y="325" width="0.0799%" height="15" fill="rgb(242,28,29)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.0096%" y="309" width="0.0799%" height="15" fill="rgb(212,219,47)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="88.0096%" y="293" width="0.0799%" height="15" fill="rgb(221,35,20)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.0096%" y="277" width="0.0799%" height="15" fill="rgb(234,144,13)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="88.0096%" y="261" width="0.0799%" height="15" fill="rgb(237,41,27)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="88.0096%" y="245" width="0.0799%" height="15" fill="rgb(253,175,5)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="88.0096%" y="229" width="0.0799%" height="15" fill="rgb(235,210,51)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.0096%" y="213" width="0.0799%" height="15" fill="rgb(241,180,35)" fg:x="1101" fg:w="1"/><text x="88.2596%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0895%" y="565" width="0.0799%" height="15" fill="rgb(219,45,16)" fg:x="1102" fg:w="1"/><text x="88.3395%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0895%" y="549" width="0.0799%" height="15" fill="rgb(247,212,4)" fg:x="1102" fg:w="1"/><text x="88.3395%" y="559.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="88.1695%" y="517" width="0.0799%" height="15" fill="rgb(224,211,1)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1695%" y="501" width="0.0799%" height="15" fill="rgb(210,193,36)" fg:x="1103" fg:w="1"/><text x="88.4195%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="88.1695%" y="565" width="0.2398%" height="15" fill="rgb(215,121,20)" fg:x="1103" fg:w="3"/><text x="88.4195%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="88.1695%" y="549" width="0.2398%" height="15" fill="rgb(238,146,2)" fg:x="1103" fg:w="3"/><text x="88.4195%" y="559.50"></text></g><g><title>engine::internal::Entities::add_persisted (3 samples, 0.24%)</title><rect x="88.1695%" y="533" width="0.2398%" height="15" fill="rgb(254,123,45)" fg:x="1103" fg:w="3"/><text x="88.4195%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="88.2494%" y="517" width="0.1599%" height="15" fill="rgb(225,126,11)" fg:x="1104" fg:w="2"/><text x="88.4994%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="88.2494%" y="501" width="0.1599%" height="15" fill="rgb(239,12,5)" fg:x="1104" fg:w="2"/><text x="88.4994%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.2494%" y="485" width="0.1599%" height="15" fill="rgb(241,207,14)" fg:x="1104" fg:w="2"/><text x="88.4994%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.2494%" y="469" width="0.1599%" height="15" fill="rgb(227,134,33)" fg:x="1104" fg:w="2"/><text x="88.4994%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.2494%" y="453" width="0.1599%" height="15" fill="rgb(221,40,52)" fg:x="1104" fg:w="2"/><text x="88.4994%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.2494%" y="437" width="0.1599%" height="15" fill="rgb(206,93,8)" fg:x="1104" fg:w="2"/><text x="88.4994%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.2494%" y="421" width="0.1599%" height="15" fill="rgb(242,160,22)" fg:x="1104" fg:w="2"/><text x="88.4994%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.2494%" y="405" width="0.1599%" height="15" fill="rgb(232,204,40)" fg:x="1104" fg:w="2"/><text x="88.4994%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3293%" y="389" width="0.0799%" height="15" fill="rgb(247,210,47)" fg:x="1105" fg:w="1"/><text x="88.5793%" y="399.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (8 samples, 0.64%)</title><rect x="87.9297%" y="613" width="0.6395%" height="15" fill="rgb(211,91,7)" fg:x="1100" fg:w="8"/><text x="88.1797%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="88.0895%" y="597" width="0.4796%" height="15" fill="rgb(252,160,34)" fg:x="1102" fg:w="6"/><text x="88.3395%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="88.0895%" y="581" width="0.4796%" height="15" fill="rgb(220,34,39)" fg:x="1102" fg:w="6"/><text x="88.3395%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.4093%" y="565" width="0.1599%" height="15" fill="rgb(247,49,38)" fg:x="1106" fg:w="2"/><text x="88.6593%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.4093%" y="549" width="0.1599%" height="15" fill="rgb(228,175,44)" fg:x="1106" fg:w="2"/><text x="88.6593%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.4892%" y="533" width="0.0799%" height="15" fill="rgb(218,214,32)" fg:x="1107" fg:w="1"/><text x="88.7392%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4892%" y="517" width="0.0799%" height="15" fill="rgb(213,50,12)" fg:x="1107" fg:w="1"/><text x="88.7392%" y="527.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (10 samples, 0.80%)</title><rect x="87.8497%" y="629" width="0.7994%" height="15" fill="rgb(219,35,41)" fg:x="1099" fg:w="10"/><text x="88.0997%" y="639.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="88.5691%" y="613" width="0.0799%" height="15" fill="rgb(219,18,38)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="88.5691%" y="597" width="0.0799%" height="15" fill="rgb(223,217,6)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.5691%" y="581" width="0.0799%" height="15" fill="rgb(208,193,35)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.5691%" y="565" width="0.0799%" height="15" fill="rgb(254,212,54)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.5691%" y="549" width="0.0799%" height="15" fill="rgb(205,10,2)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.5691%" y="533" width="0.0799%" height="15" fill="rgb(230,133,29)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.5691%" y="517" width="0.0799%" height="15" fill="rgb(226,14,15)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.5691%" y="501" width="0.0799%" height="15" fill="rgb(226,140,54)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.5691%" y="485" width="0.0799%" height="15" fill="rgb(250,47,41)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.5691%" y="469" width="0.0799%" height="15" fill="rgb(227,218,41)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.5691%" y="453" width="0.0799%" height="15" fill="rgb(254,183,7)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="88.5691%" y="437" width="0.0799%" height="15" fill="rgb(206,84,53)" fg:x="1108" fg:w="1"/><text x="88.8191%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="88.8889%" y="485" width="0.1599%" height="15" fill="rgb(213,177,2)" fg:x="1112" fg:w="2"/><text x="89.1389%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9688%" y="469" width="0.0799%" height="15" fill="rgb(234,28,29)" fg:x="1113" fg:w="1"/><text x="89.2188%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="88.8090%" y="501" width="0.3197%" height="15" fill="rgb(248,211,38)" fg:x="1111" fg:w="4"/><text x="89.0590%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0488%" y="485" width="0.0799%" height="15" fill="rgb(246,30,0)" fg:x="1114" fg:w="1"/><text x="89.2988%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="88.6491%" y="533" width="0.5596%" height="15" fill="rgb(244,115,24)" fg:x="1109" fg:w="7"/><text x="88.8991%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="88.8090%" y="517" width="0.3997%" height="15" fill="rgb(226,193,14)" fg:x="1111" fg:w="5"/><text x="89.0590%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1287%" y="501" width="0.0799%" height="15" fill="rgb(211,196,48)" fg:x="1115" fg:w="1"/><text x="89.3787%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2086%" y="533" width="0.0799%" height="15" fill="rgb(235,32,20)" fg:x="1116" fg:w="1"/><text x="89.4586%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="88.6491%" y="549" width="0.7194%" height="15" fill="rgb(251,151,49)" fg:x="1109" fg:w="9"/><text x="88.8991%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="89.2886%" y="533" width="0.0799%" height="15" fill="rgb(254,141,38)" fg:x="1117" fg:w="1"/><text x="89.5386%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.2886%" y="517" width="0.0799%" height="15" fill="rgb(209,118,44)" fg:x="1117" fg:w="1"/><text x="89.5386%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2886%" y="501" width="0.0799%" height="15" fill="rgb(205,81,4)" fg:x="1117" fg:w="1"/><text x="89.5386%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="88.6491%" y="565" width="0.7994%" height="15" fill="rgb(241,25,6)" fg:x="1109" fg:w="10"/><text x="88.8991%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3685%" y="549" width="0.0799%" height="15" fill="rgb(212,179,29)" fg:x="1118" fg:w="1"/><text x="89.6185%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (12 samples, 0.96%)</title><rect x="88.6491%" y="597" width="0.9592%" height="15" fill="rgb(241,40,32)" fg:x="1109" fg:w="12"/><text x="88.8991%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="88.6491%" y="581" width="0.9592%" height="15" fill="rgb(223,35,2)" fg:x="1109" fg:w="12"/><text x="88.8991%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.4484%" y="565" width="0.1599%" height="15" fill="rgb(221,125,54)" fg:x="1119" fg:w="2"/><text x="89.6984%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="89.6882%" y="549" width="0.0799%" height="15" fill="rgb(230,5,49)" fg:x="1122" fg:w="1"/><text x="89.9382%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.6882%" y="533" width="0.0799%" height="15" fill="rgb(221,157,7)" fg:x="1122" fg:w="1"/><text x="89.9382%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7682%" y="549" width="0.0799%" height="15" fill="rgb(242,163,10)" fg:x="1123" fg:w="1"/><text x="90.0182%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="89.6083%" y="565" width="0.3197%" height="15" fill="rgb(232,30,2)" fg:x="1121" fg:w="4"/><text x="89.8583%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="89.8481%" y="549" width="0.0799%" height="15" fill="rgb(245,102,40)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="89.8481%" y="533" width="0.0799%" height="15" fill="rgb(242,10,41)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.8481%" y="517" width="0.0799%" height="15" fill="rgb(236,184,36)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.8481%" y="501" width="0.0799%" height="15" fill="rgb(247,147,48)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.8481%" y="485" width="0.0799%" height="15" fill="rgb(226,166,2)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.8481%" y="469" width="0.0799%" height="15" fill="rgb(251,196,7)" fg:x="1124" fg:w="1"/><text x="90.0981%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="89.9281%" y="565" width="0.0799%" height="15" fill="rgb(241,40,13)" fg:x="1125" fg:w="1"/><text x="90.1781%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="89.9281%" y="549" width="0.0799%" height="15" fill="rgb(254,4,12)" fg:x="1125" fg:w="1"/><text x="90.1781%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.9281%" y="533" width="0.0799%" height="15" fill="rgb(244,139,49)" fg:x="1125" fg:w="1"/><text x="90.1781%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="89.9281%" y="517" width="0.0799%" height="15" fill="rgb(227,28,42)" fg:x="1125" fg:w="1"/><text x="90.1781%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9281%" y="501" width="0.0799%" height="15" fill="rgb(231,135,32)" fg:x="1125" fg:w="1"/><text x="90.1781%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="90.1679%" y="437" width="0.0799%" height="15" fill="rgb(244,182,3)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="90.1679%" y="421" width="0.0799%" height="15" fill="rgb(247,46,19)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1679%" y="405" width="0.0799%" height="15" fill="rgb(251,179,10)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1679%" y="389" width="0.0799%" height="15" fill="rgb(229,222,18)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.1679%" y="373" width="0.0799%" height="15" fill="rgb(251,107,20)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.1679%" y="357" width="0.0799%" height="15" fill="rgb(233,193,19)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.1679%" y="341" width="0.0799%" height="15" fill="rgb(229,146,53)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.1679%" y="325" width="0.0799%" height="15" fill="rgb(244,52,11)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.1679%" y="309" width="0.0799%" height="15" fill="rgb(245,211,46)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.1679%" y="293" width="0.0799%" height="15" fill="rgb(213,8,31)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.1679%" y="277" width="0.0799%" height="15" fill="rgb(205,101,39)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.1679%" y="261" width="0.0799%" height="15" fill="rgb(212,157,1)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.1679%" y="245" width="0.0799%" height="15" fill="rgb(232,30,46)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1679%" y="229" width="0.0799%" height="15" fill="rgb(216,201,6)" fg:x="1128" fg:w="1"/><text x="90.4179%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="90.1679%" y="485" width="0.1599%" height="15" fill="rgb(209,18,6)" fg:x="1128" fg:w="2"/><text x="90.4179%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="90.1679%" y="469" width="0.1599%" height="15" fill="rgb(219,138,3)" fg:x="1128" fg:w="2"/><text x="90.4179%" y="479.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="90.1679%" y="453" width="0.1599%" height="15" fill="rgb(210,91,46)" fg:x="1128" fg:w="2"/><text x="90.4179%" y="463.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="90.2478%" y="437" width="0.0799%" height="15" fill="rgb(241,80,44)" fg:x="1129" fg:w="1"/><text x="90.4978%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.3277%" y="421" width="0.0799%" height="15" fill="rgb(236,205,36)" fg:x="1130" fg:w="1"/><text x="90.5777%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.3277%" y="405" width="0.0799%" height="15" fill="rgb(205,59,37)" fg:x="1130" fg:w="1"/><text x="90.5777%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3277%" y="389" width="0.0799%" height="15" fill="rgb(239,166,39)" fg:x="1130" fg:w="1"/><text x="90.5777%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4077%" y="293" width="0.0799%" height="15" fill="rgb(239,146,40)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4077%" y="277" width="0.0799%" height="15" fill="rgb(231,11,52)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4077%" y="261" width="0.0799%" height="15" fill="rgb(253,21,37)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.4077%" y="245" width="0.0799%" height="15" fill="rgb(224,87,39)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.4077%" y="229" width="0.0799%" height="15" fill="rgb(249,15,46)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.4077%" y="213" width="0.0799%" height="15" fill="rgb(250,37,51)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.4077%" y="197" width="0.0799%" height="15" fill="rgb(205,185,43)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.4077%" y="181" width="0.0799%" height="15" fill="rgb(206,65,41)" fg:x="1131" fg:w="1"/><text x="90.6577%" y="191.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="90.4077%" y="357" width="0.1599%" height="15" fill="rgb(236,159,32)" fg:x="1131" fg:w="2"/><text x="90.6577%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="90.4077%" y="341" width="0.1599%" height="15" fill="rgb(228,199,27)" fg:x="1131" fg:w="2"/><text x="90.6577%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.4077%" y="325" width="0.1599%" height="15" fill="rgb(212,0,37)" fg:x="1131" fg:w="2"/><text x="90.6577%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.4077%" y="309" width="0.1599%" height="15" fill="rgb(248,50,11)" fg:x="1131" fg:w="2"/><text x="90.6577%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4876%" y="293" width="0.0799%" height="15" fill="rgb(231,164,25)" fg:x="1132" fg:w="1"/><text x="90.7376%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4876%" y="277" width="0.0799%" height="15" fill="rgb(238,38,39)" fg:x="1132" fg:w="1"/><text x="90.7376%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="90.1679%" y="501" width="0.4796%" height="15" fill="rgb(210,15,50)" fg:x="1128" fg:w="6"/><text x="90.4179%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="90.3277%" y="485" width="0.3197%" height="15" fill="rgb(251,126,36)" fg:x="1130" fg:w="4"/><text x="90.5777%" y="495.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (4 samples, 0.32%)</title><rect x="90.3277%" y="469" width="0.3197%" height="15" fill="rgb(243,59,26)" fg:x="1130" fg:w="4"/><text x="90.5777%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (4 samples, 0.32%)</title><rect x="90.3277%" y="453" width="0.3197%" height="15" fill="rgb(215,24,30)" fg:x="1130" fg:w="4"/><text x="90.5777%" y="463.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="90.3277%" y="437" width="0.3197%" height="15" fill="rgb(253,50,51)" fg:x="1130" fg:w="4"/><text x="90.5777%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="90.4077%" y="421" width="0.2398%" height="15" fill="rgb(252,2,16)" fg:x="1131" fg:w="3"/><text x="90.6577%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="90.4077%" y="405" width="0.2398%" height="15" fill="rgb(209,123,36)" fg:x="1131" fg:w="3"/><text x="90.6577%" y="415.50"></text></g><g><title>engine::internal::Entities::add_persisted (3 samples, 0.24%)</title><rect x="90.4077%" y="389" width="0.2398%" height="15" fill="rgb(245,60,15)" fg:x="1131" fg:w="3"/><text x="90.6577%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="90.4077%" y="373" width="0.2398%" height="15" fill="rgb(246,4,13)" fg:x="1131" fg:w="3"/><text x="90.6577%" y="383.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="90.5675%" y="357" width="0.0799%" height="15" fill="rgb(210,223,46)" fg:x="1133" fg:w="1"/><text x="90.8175%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.5675%" y="341" width="0.0799%" height="15" fill="rgb(248,1,9)" fg:x="1133" fg:w="1"/><text x="90.8175%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.5675%" y="325" width="0.0799%" height="15" fill="rgb(254,2,34)" fg:x="1133" fg:w="1"/><text x="90.8175%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.5675%" y="309" width="0.0799%" height="15" fill="rgb(239,176,1)" fg:x="1133" fg:w="1"/><text x="90.8175%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5675%" y="293" width="0.0799%" height="15" fill="rgb(250,25,32)" fg:x="1133" fg:w="1"/><text x="90.8175%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7274%" y="469" width="0.0799%" height="15" fill="rgb(225,28,39)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.7274%" y="453" width="0.0799%" height="15" fill="rgb(230,166,37)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.7274%" y="437" width="0.0799%" height="15" fill="rgb(246,220,4)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.7274%" y="421" width="0.0799%" height="15" fill="rgb(219,119,33)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.7274%" y="405" width="0.0799%" height="15" fill="rgb(221,207,38)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.7274%" y="389" width="0.0799%" height="15" fill="rgb(214,153,5)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.7274%" y="373" width="0.0799%" height="15" fill="rgb(223,50,16)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.7274%" y="357" width="0.0799%" height="15" fill="rgb(209,207,12)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.7274%" y="341" width="0.0799%" height="15" fill="rgb(207,3,46)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.7274%" y="325" width="0.0799%" height="15" fill="rgb(232,45,53)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.7274%" y="309" width="0.0799%" height="15" fill="rgb(206,140,15)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.7274%" y="293" width="0.0799%" height="15" fill="rgb(245,66,17)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7274%" y="277" width="0.0799%" height="15" fill="rgb(221,25,37)" fg:x="1135" fg:w="1"/><text x="90.9774%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="90.8074%" y="469" width="0.1599%" height="15" fill="rgb(215,99,47)" fg:x="1136" fg:w="2"/><text x="91.0574%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="90.8074%" y="453" width="0.1599%" height="15" fill="rgb(219,154,44)" fg:x="1136" fg:w="2"/><text x="91.0574%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="90.8074%" y="437" width="0.1599%" height="15" fill="rgb(210,197,36)" fg:x="1136" fg:w="2"/><text x="91.0574%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="90.8873%" y="421" width="0.0799%" height="15" fill="rgb(217,137,10)" fg:x="1137" fg:w="1"/><text x="91.1373%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="90.8873%" y="405" width="0.0799%" height="15" fill="rgb(240,216,26)" fg:x="1137" fg:w="1"/><text x="91.1373%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="90.8873%" y="389" width="0.0799%" height="15" fill="rgb(242,76,17)" fg:x="1137" fg:w="1"/><text x="91.1373%" y="399.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="90.8873%" y="373" width="0.0799%" height="15" fill="rgb(243,142,51)" fg:x="1137" fg:w="1"/><text x="91.1373%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8873%" y="357" width="0.0799%" height="15" fill="rgb(233,109,46)" fg:x="1137" fg:w="1"/><text x="91.1373%" y="367.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (11 samples, 0.88%)</title><rect x="90.1679%" y="517" width="0.8793%" height="15" fill="rgb(252,45,32)" fg:x="1128" fg:w="11"/><text x="90.4179%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="90.6475%" y="501" width="0.3997%" height="15" fill="rgb(210,69,52)" fg:x="1134" fg:w="5"/><text x="90.8975%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="90.6475%" y="485" width="0.3997%" height="15" fill="rgb(242,30,2)" fg:x="1134" fg:w="5"/><text x="90.8975%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9672%" y="469" width="0.0799%" height="15" fill="rgb(246,137,1)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9672%" y="453" width="0.0799%" height="15" fill="rgb(221,205,25)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="90.9672%" y="437" width="0.0799%" height="15" fill="rgb(224,44,43)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="90.9672%" y="421" width="0.0799%" height="15" fill="rgb(209,81,13)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="90.9672%" y="405" width="0.0799%" height="15" fill="rgb(227,88,4)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9672%" y="389" width="0.0799%" height="15" fill="rgb(228,118,49)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9672%" y="373" width="0.0799%" height="15" fill="rgb(225,215,27)" fg:x="1138" fg:w="1"/><text x="91.2172%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="91.1271%" y="501" width="0.0799%" height="15" fill="rgb(235,226,1)" fg:x="1140" fg:w="1"/><text x="91.3771%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.2870%" y="453" width="0.0799%" height="15" fill="rgb(205,107,17)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.2870%" y="437" width="0.0799%" height="15" fill="rgb(247,85,8)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.2870%" y="421" width="0.0799%" height="15" fill="rgb(230,220,20)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.2870%" y="405" width="0.0799%" height="15" fill="rgb(237,22,6)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.2870%" y="389" width="0.0799%" height="15" fill="rgb(253,39,1)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.2870%" y="373" width="0.0799%" height="15" fill="rgb(251,206,50)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.2870%" y="357" width="0.0799%" height="15" fill="rgb(239,162,11)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.2870%" y="341" width="0.0799%" height="15" fill="rgb(234,164,6)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.2870%" y="325" width="0.0799%" height="15" fill="rgb(238,112,10)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.2870%" y="309" width="0.0799%" height="15" fill="rgb(232,78,29)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.2870%" y="293" width="0.0799%" height="15" fill="rgb(232,20,13)" fg:x="1142" fg:w="1"/><text x="91.5370%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="91.2870%" y="469" width="0.2398%" height="15" fill="rgb(222,175,9)" fg:x="1142" fg:w="3"/><text x="91.5370%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.3669%" y="453" width="0.1599%" height="15" fill="rgb(233,61,14)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.3669%" y="437" width="0.1599%" height="15" fill="rgb(224,152,29)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.3669%" y="421" width="0.1599%" height="15" fill="rgb(232,26,6)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.3669%" y="405" width="0.1599%" height="15" fill="rgb(210,116,11)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="91.3669%" y="389" width="0.1599%" height="15" fill="rgb(238,213,15)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="91.3669%" y="373" width="0.1599%" height="15" fill="rgb(236,177,32)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="91.3669%" y="357" width="0.1599%" height="15" fill="rgb(230,36,43)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="91.3669%" y="341" width="0.1599%" height="15" fill="rgb(212,76,23)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="91.3669%" y="325" width="0.1599%" height="15" fill="rgb(225,168,24)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="91.3669%" y="309" width="0.1599%" height="15" fill="rgb(206,40,44)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="91.3669%" y="293" width="0.1599%" height="15" fill="rgb(251,213,6)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="91.3669%" y="277" width="0.1599%" height="15" fill="rgb(220,7,47)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="91.3669%" y="261" width="0.1599%" height="15" fill="rgb(254,130,53)" fg:x="1143" fg:w="2"/><text x="91.6169%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4468%" y="245" width="0.0799%" height="15" fill="rgb(240,2,46)" fg:x="1144" fg:w="1"/><text x="91.6968%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5268%" y="453" width="0.0799%" height="15" fill="rgb(252,144,40)" fg:x="1145" fg:w="1"/><text x="91.7768%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="91.6067%" y="373" width="0.0799%" height="15" fill="rgb(226,23,10)" fg:x="1146" fg:w="1"/><text x="91.8567%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6867%" y="245" width="0.0799%" height="15" fill="rgb(212,204,35)" fg:x="1147" fg:w="1"/><text x="91.9367%" y="255.50"></text></g><g><title>&lt;kernel::model::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="91.6867%" y="357" width="0.1599%" height="15" fill="rgb(218,201,15)" fg:x="1147" fg:w="2"/><text x="91.9367%" y="367.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="91.6867%" y="341" width="0.1599%" height="15" fill="rgb(224,197,5)" fg:x="1147" fg:w="2"/><text x="91.9367%" y="351.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="91.6867%" y="325" width="0.1599%" height="15" fill="rgb(224,185,18)" fg:x="1147" fg:w="2"/><text x="91.9367%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.6867%" y="309" width="0.1599%" height="15" fill="rgb(251,71,45)" fg:x="1147" fg:w="2"/><text x="91.9367%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.6867%" y="293" width="0.1599%" height="15" fill="rgb(216,74,24)" fg:x="1147" fg:w="2"/><text x="91.9367%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.6867%" y="277" width="0.1599%" height="15" fill="rgb(250,36,51)" fg:x="1147" fg:w="2"/><text x="91.9367%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.6867%" y="261" width="0.1599%" height="15" fill="rgb(209,224,28)" fg:x="1147" fg:w="2"/><text x="91.9367%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7666%" y="245" width="0.0799%" height="15" fill="rgb(228,5,10)" fg:x="1148" fg:w="1"/><text x="92.0166%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.9265%" y="245" width="0.0799%" height="15" fill="rgb(250,57,40)" fg:x="1150" fg:w="1"/><text x="92.1765%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.0064%" y="197" width="0.1599%" height="15" fill="rgb(228,194,41)" fg:x="1151" fg:w="2"/><text x="92.2564%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0863%" y="181" width="0.0799%" height="15" fill="rgb(206,68,23)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0863%" y="165" width="0.0799%" height="15" fill="rgb(230,33,29)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0863%" y="149" width="0.0799%" height="15" fill="rgb(210,39,32)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0863%" y="133" width="0.0799%" height="15" fill="rgb(236,89,23)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0863%" y="117" width="0.0799%" height="15" fill="rgb(218,52,52)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.0863%" y="101" width="0.0799%" height="15" fill="rgb(235,154,5)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0863%" y="85" width="0.0799%" height="15" fill="rgb(223,168,9)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="92.0863%" y="69" width="0.0799%" height="15" fill="rgb(220,8,33)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="79.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="92.0863%" y="53" width="0.0799%" height="15" fill="rgb(216,176,3)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="63.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.0863%" y="37" width="0.0799%" height="15" fill="rgb(254,150,22)" fg:x="1152" fg:w="1"/><text x="92.3363%" y="47.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="92.0064%" y="229" width="0.2398%" height="15" fill="rgb(231,61,53)" fg:x="1151" fg:w="3"/><text x="92.2564%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.0064%" y="213" width="0.2398%" height="15" fill="rgb(249,177,41)" fg:x="1151" fg:w="3"/><text x="92.2564%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1663%" y="197" width="0.0799%" height="15" fill="rgb(221,122,7)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1663%" y="181" width="0.0799%" height="15" fill="rgb(215,115,7)" fg:x="1153" fg:w="1"/><text x="92.4163%" y="191.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.48%)</title><rect x="91.8465%" y="341" width="0.4796%" height="15" fill="rgb(218,108,33)" fg:x="1149" fg:w="6"/><text x="92.0965%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.48%)</title><rect x="91.8465%" y="325" width="0.4796%" height="15" fill="rgb(221,205,39)" fg:x="1149" fg:w="6"/><text x="92.0965%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="91.8465%" y="309" width="0.4796%" height="15" fill="rgb(220,171,18)" fg:x="1149" fg:w="6"/><text x="92.0965%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="91.8465%" y="293" width="0.4796%" height="15" fill="rgb(236,188,29)" fg:x="1149" fg:w="6"/><text x="92.0965%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (6 samples, 0.48%)</title><rect x="91.8465%" y="277" width="0.4796%" height="15" fill="rgb(239,29,5)" fg:x="1149" fg:w="6"/><text x="92.0965%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="91.8465%" y="261" width="0.4796%" height="15" fill="rgb(236,114,44)" fg:x="1149" fg:w="6"/><text x="92.0965%" y="271.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.0064%" y="245" width="0.3197%" height="15" fill="rgb(239,214,48)" fg:x="1151" fg:w="4"/><text x="92.2564%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="92.2462%" y="229" width="0.0799%" height="15" fill="rgb(241,56,8)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.2462%" y="213" width="0.0799%" height="15" fill="rgb(228,201,0)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="92.2462%" y="197" width="0.0799%" height="15" fill="rgb(226,219,34)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.2462%" y="181" width="0.0799%" height="15" fill="rgb(209,204,54)" fg:x="1154" fg:w="1"/><text x="92.4962%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.3261%" y="229" width="0.0799%" height="15" fill="rgb(251,160,17)" fg:x="1155" fg:w="1"/><text x="92.5761%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3261%" y="213" width="0.0799%" height="15" fill="rgb(235,15,25)" fg:x="1155" fg:w="1"/><text x="92.5761%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.4860%" y="133" width="0.0799%" height="15" fill="rgb(216,209,28)" fg:x="1157" fg:w="1"/><text x="92.7360%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.4860%" y="117" width="0.0799%" height="15" fill="rgb(248,123,21)" fg:x="1157" fg:w="1"/><text x="92.7360%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5659%" y="133" width="0.0799%" height="15" fill="rgb(226,138,44)" fg:x="1158" fg:w="1"/><text x="92.8159%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5659%" y="117" width="0.0799%" height="15" fill="rgb(211,104,54)" fg:x="1158" fg:w="1"/><text x="92.8159%" y="127.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (15 samples, 1.20%)</title><rect x="91.5268%" y="469" width="1.1990%" height="15" fill="rgb(241,198,15)" fg:x="1145" fg:w="15"/><text x="91.7768%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.12%)</title><rect x="91.6067%" y="453" width="1.1191%" height="15" fill="rgb(227,155,54)" fg:x="1146" fg:w="14"/><text x="91.8567%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="91.6067%" y="437" width="1.1191%" height="15" fill="rgb(225,131,31)" fg:x="1146" fg:w="14"/><text x="91.8567%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 1.12%)</title><rect x="91.6067%" y="421" width="1.1191%" height="15" fill="rgb(242,40,17)" fg:x="1146" fg:w="14"/><text x="91.8567%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.12%)</title><rect x="91.6067%" y="405" width="1.1191%" height="15" fill="rgb(254,57,35)" fg:x="1146" fg:w="14"/><text x="91.8567%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.12%)</title><rect x="91.6067%" y="389" width="1.1191%" height="15" fill="rgb(240,64,32)" fg:x="1146" fg:w="14"/><text x="91.8567%" y="399.50"></text></g><g><title>engine::internal::Entities::add_persisted (13 samples, 1.04%)</title><rect x="91.6867%" y="373" width="1.0392%" height="15" fill="rgb(251,136,26)" fg:x="1147" fg:w="13"/><text x="91.9367%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.88%)</title><rect x="91.8465%" y="357" width="0.8793%" height="15" fill="rgb(208,60,54)" fg:x="1149" fg:w="11"/><text x="92.0965%" y="367.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="92.3261%" y="341" width="0.3997%" height="15" fill="rgb(220,13,12)" fg:x="1155" fg:w="5"/><text x="92.5761%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="92.3261%" y="325" width="0.3997%" height="15" fill="rgb(213,149,1)" fg:x="1155" fg:w="5"/><text x="92.5761%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="92.3261%" y="309" width="0.3997%" height="15" fill="rgb(212,191,39)" fg:x="1155" fg:w="5"/><text x="92.5761%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="92.3261%" y="293" width="0.3997%" height="15" fill="rgb(215,221,42)" fg:x="1155" fg:w="5"/><text x="92.5761%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="92.3261%" y="277" width="0.3997%" height="15" fill="rgb(244,79,23)" fg:x="1155" fg:w="5"/><text x="92.5761%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="92.3261%" y="261" width="0.3997%" height="15" fill="rgb(247,17,29)" fg:x="1155" fg:w="5"/><text x="92.5761%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="92.3261%" y="245" width="0.3997%" height="15" fill="rgb(251,221,21)" fg:x="1155" fg:w="5"/><text x="92.5761%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.4061%" y="229" width="0.3197%" height="15" fill="rgb(207,202,34)" fg:x="1156" fg:w="4"/><text x="92.6561%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.4061%" y="213" width="0.3197%" height="15" fill="rgb(217,4,34)" fg:x="1156" fg:w="4"/><text x="92.6561%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.4061%" y="197" width="0.3197%" height="15" fill="rgb(253,17,16)" fg:x="1156" fg:w="4"/><text x="92.6561%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.4061%" y="181" width="0.3197%" height="15" fill="rgb(223,91,48)" fg:x="1156" fg:w="4"/><text x="92.6561%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.4860%" y="165" width="0.2398%" height="15" fill="rgb(244,191,22)" fg:x="1157" fg:w="3"/><text x="92.7360%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.4860%" y="149" width="0.2398%" height="15" fill="rgb(211,107,14)" fg:x="1157" fg:w="3"/><text x="92.7360%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.6459%" y="133" width="0.0799%" height="15" fill="rgb(232,81,23)" fg:x="1159" fg:w="1"/><text x="92.8959%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="92.7258%" y="469" width="0.0799%" height="15" fill="rgb(237,126,14)" fg:x="1160" fg:w="1"/><text x="92.9758%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="92.8058%" y="437" width="0.0799%" height="15" fill="rgb(230,65,39)" fg:x="1161" fg:w="1"/><text x="93.0558%" y="447.50"></text></g><g><title>plugins_core::tools::get_contained_keys (24 samples, 1.92%)</title><rect x="91.0472%" y="517" width="1.9185%" height="15" fill="rgb(208,106,41)" fg:x="1139" fg:w="24"/><text x="91.2972%" y="527.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (22 samples, 1.76%)</title><rect x="91.2070%" y="501" width="1.7586%" height="15" fill="rgb(206,125,25)" fg:x="1141" fg:w="22"/><text x="91.4570%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (22 samples, 1.76%)</title><rect x="91.2070%" y="485" width="1.7586%" height="15" fill="rgb(250,24,29)" fg:x="1141" fg:w="22"/><text x="91.4570%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.8058%" y="469" width="0.1599%" height="15" fill="rgb(226,49,32)" fg:x="1161" fg:w="2"/><text x="93.0558%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.8058%" y="453" width="0.1599%" height="15" fill="rgb(217,110,16)" fg:x="1161" fg:w="2"/><text x="93.0558%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="92.8857%" y="437" width="0.0799%" height="15" fill="rgb(252,16,53)" fg:x="1162" fg:w="1"/><text x="93.1357%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="92.8857%" y="421" width="0.0799%" height="15" fill="rgb(238,163,11)" fg:x="1162" fg:w="1"/><text x="93.1357%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="92.8857%" y="405" width="0.0799%" height="15" fill="rgb(206,210,1)" fg:x="1162" fg:w="1"/><text x="93.1357%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8857%" y="389" width="0.0799%" height="15" fill="rgb(229,8,25)" fg:x="1162" fg:w="1"/><text x="93.1357%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8857%" y="373" width="0.0799%" height="15" fill="rgb(247,155,23)" fg:x="1162" fg:w="1"/><text x="93.1357%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="92.9656%" y="501" width="0.0799%" height="15" fill="rgb(207,26,7)" fg:x="1163" fg:w="1"/><text x="93.2156%" y="511.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="93.0456%" y="469" width="0.0799%" height="15" fill="rgb(215,179,12)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.0456%" y="453" width="0.0799%" height="15" fill="rgb(238,208,11)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="93.0456%" y="437" width="0.0799%" height="15" fill="rgb(238,102,42)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="93.0456%" y="421" width="0.0799%" height="15" fill="rgb(239,35,9)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="93.0456%" y="405" width="0.0799%" height="15" fill="rgb(244,182,30)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0456%" y="389" width="0.0799%" height="15" fill="rgb(232,181,23)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0456%" y="373" width="0.0799%" height="15" fill="rgb(242,154,29)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.0456%" y="357" width="0.0799%" height="15" fill="rgb(219,23,2)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.0456%" y="341" width="0.0799%" height="15" fill="rgb(234,94,43)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.0456%" y="325" width="0.0799%" height="15" fill="rgb(223,55,45)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0456%" y="309" width="0.0799%" height="15" fill="rgb(241,215,54)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0456%" y="293" width="0.0799%" height="15" fill="rgb(247,63,53)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.0456%" y="277" width="0.0799%" height="15" fill="rgb(220,166,7)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.0456%" y="261" width="0.0799%" height="15" fill="rgb(248,53,45)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.0456%" y="245" width="0.0799%" height="15" fill="rgb(224,207,20)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.0456%" y="229" width="0.0799%" height="15" fill="rgb(244,185,11)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0456%" y="213" width="0.0799%" height="15" fill="rgb(230,13,42)" fg:x="1164" fg:w="1"/><text x="93.2956%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 3.12%)</title><rect x="90.0879%" y="549" width="3.1175%" height="15" fill="rgb(243,191,18)" fg:x="1127" fg:w="39"/><text x="90.3379%" y="559.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 3.12%)</title><rect x="90.0879%" y="533" width="3.1175%" height="15" fill="rgb(249,135,15)" fg:x="1127" fg:w="39"/><text x="90.3379%" y="543.50">&lt;co..</text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.24%)</title><rect x="92.9656%" y="517" width="0.2398%" height="15" fill="rgb(229,26,35)" fg:x="1163" fg:w="3"/><text x="93.2156%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="93.0456%" y="501" width="0.1599%" height="15" fill="rgb(216,191,16)" fg:x="1164" fg:w="2"/><text x="93.2956%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="93.0456%" y="485" width="0.1599%" height="15" fill="rgb(242,18,7)" fg:x="1164" fg:w="2"/><text x="93.2956%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.1255%" y="469" width="0.0799%" height="15" fill="rgb(205,128,17)" fg:x="1165" fg:w="1"/><text x="93.3755%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="93.1255%" y="453" width="0.0799%" height="15" fill="rgb(229,199,44)" fg:x="1165" fg:w="1"/><text x="93.3755%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="93.3653%" y="485" width="0.0799%" height="15" fill="rgb(234,222,3)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="495.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.3653%" y="469" width="0.0799%" height="15" fill="rgb(220,170,20)" fg:x="1168" fg:w="1"/><text x="93.6153%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="93.2854%" y="501" width="0.2398%" height="15" fill="rgb(207,138,8)" fg:x="1167" fg:w="3"/><text x="93.5354%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="93.4452%" y="485" width="0.0799%" height="15" fill="rgb(244,130,36)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="93.4452%" y="469" width="0.0799%" height="15" fill="rgb(207,197,52)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="93.4452%" y="453" width="0.0799%" height="15" fill="rgb(206,9,21)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.4452%" y="437" width="0.0799%" height="15" fill="rgb(250,15,47)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.4452%" y="421" width="0.0799%" height="15" fill="rgb(235,202,14)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.4452%" y="405" width="0.0799%" height="15" fill="rgb(211,180,47)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.4452%" y="389" width="0.0799%" height="15" fill="rgb(209,61,11)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.4452%" y="373" width="0.0799%" height="15" fill="rgb(243,197,29)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.4452%" y="357" width="0.0799%" height="15" fill="rgb(216,185,16)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4452%" y="341" width="0.0799%" height="15" fill="rgb(248,5,15)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4452%" y="325" width="0.0799%" height="15" fill="rgb(240,39,41)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.4452%" y="309" width="0.0799%" height="15" fill="rgb(224,220,43)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.4452%" y="293" width="0.0799%" height="15" fill="rgb(215,21,24)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.4452%" y="277" width="0.0799%" height="15" fill="rgb(220,102,8)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.4452%" y="261" width="0.0799%" height="15" fill="rgb(225,185,10)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.4452%" y="245" width="0.0799%" height="15" fill="rgb(212,108,24)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.4452%" y="229" width="0.0799%" height="15" fill="rgb(237,27,0)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.4452%" y="213" width="0.0799%" height="15" fill="rgb(212,106,38)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="93.4452%" y="197" width="0.0799%" height="15" fill="rgb(210,125,30)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.4452%" y="181" width="0.0799%" height="15" fill="rgb(215,219,1)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="93.4452%" y="165" width="0.0799%" height="15" fill="rgb(223,10,12)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="93.4452%" y="149" width="0.0799%" height="15" fill="rgb(245,40,34)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="93.4452%" y="133" width="0.0799%" height="15" fill="rgb(211,185,19)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.4452%" y="117" width="0.0799%" height="15" fill="rgb(243,190,43)" fg:x="1169" fg:w="1"/><text x="93.6952%" y="127.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="94.4045%" y="197" width="0.3197%" height="15" fill="rgb(232,208,29)" fg:x="1181" fg:w="4"/><text x="94.6545%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="94.5643%" y="181" width="0.1599%" height="15" fill="rgb(234,134,27)" fg:x="1183" fg:w="2"/><text x="94.8143%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="94.5643%" y="165" width="0.1599%" height="15" fill="rgb(225,41,29)" fg:x="1183" fg:w="2"/><text x="94.8143%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.5643%" y="149" width="0.1599%" height="15" fill="rgb(241,214,44)" fg:x="1183" fg:w="2"/><text x="94.8143%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.6443%" y="133" width="0.0799%" height="15" fill="rgb(205,219,41)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.6443%" y="117" width="0.0799%" height="15" fill="rgb(226,15,26)" fg:x="1184" fg:w="1"/><text x="94.8943%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.7242%" y="197" width="0.0799%" height="15" fill="rgb(210,83,41)" fg:x="1185" fg:w="1"/><text x="94.9742%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (8 samples, 0.64%)</title><rect x="94.2446%" y="245" width="0.6395%" height="15" fill="rgb(247,9,39)" fg:x="1179" fg:w="8"/><text x="94.4946%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="94.2446%" y="229" width="0.6395%" height="15" fill="rgb(209,37,30)" fg:x="1179" fg:w="8"/><text x="94.4946%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="94.2446%" y="213" width="0.6395%" height="15" fill="rgb(248,170,46)" fg:x="1179" fg:w="8"/><text x="94.4946%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.8042%" y="197" width="0.0799%" height="15" fill="rgb(237,129,44)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.8042%" y="181" width="0.0799%" height="15" fill="rgb(225,117,51)" fg:x="1186" fg:w="1"/><text x="95.0542%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.88%)</title><rect x="94.1647%" y="261" width="0.8793%" height="15" fill="rgb(212,165,2)" fg:x="1178" fg:w="11"/><text x="94.4147%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.8841%" y="245" width="0.1599%" height="15" fill="rgb(213,53,45)" fg:x="1187" fg:w="2"/><text x="95.1341%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="94.8841%" y="229" width="0.1599%" height="15" fill="rgb(220,148,3)" fg:x="1187" fg:w="2"/><text x="95.1341%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.9640%" y="213" width="0.0799%" height="15" fill="rgb(228,37,29)" fg:x="1188" fg:w="1"/><text x="95.2140%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.96%)</title><rect x="94.1647%" y="293" width="0.9592%" height="15" fill="rgb(209,76,29)" fg:x="1178" fg:w="12"/><text x="94.4147%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="94.1647%" y="277" width="0.9592%" height="15" fill="rgb(215,90,5)" fg:x="1178" fg:w="12"/><text x="94.4147%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.0440%" y="261" width="0.0799%" height="15" fill="rgb(227,207,32)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0440%" y="245" width="0.0799%" height="15" fill="rgb(251,218,44)" fg:x="1189" fg:w="1"/><text x="95.2940%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.1239%" y="293" width="0.0799%" height="15" fill="rgb(211,44,16)" fg:x="1190" fg:w="1"/><text x="95.3739%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.2838%" y="277" width="0.0799%" height="15" fill="rgb(242,170,37)" fg:x="1192" fg:w="1"/><text x="95.5338%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.36%)</title><rect x="94.0847%" y="309" width="1.3589%" height="15" fill="rgb(205,181,22)" fg:x="1177" fg:w="17"/><text x="94.3347%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="95.2038%" y="293" width="0.2398%" height="15" fill="rgb(228,130,19)" fg:x="1191" fg:w="3"/><text x="95.4538%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3637%" y="277" width="0.0799%" height="15" fill="rgb(228,9,15)" fg:x="1193" fg:w="1"/><text x="95.6137%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (20 samples, 1.60%)</title><rect x="94.0048%" y="325" width="1.5987%" height="15" fill="rgb(219,66,48)" fg:x="1176" fg:w="20"/><text x="94.2548%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="95.4436%" y="309" width="0.1599%" height="15" fill="rgb(234,203,10)" fg:x="1194" fg:w="2"/><text x="95.6936%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.4436%" y="293" width="0.1599%" height="15" fill="rgb(219,209,1)" fg:x="1194" fg:w="2"/><text x="95.6936%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (23 samples, 1.84%)</title><rect x="93.9249%" y="341" width="1.8385%" height="15" fill="rgb(206,167,9)" fg:x="1175" fg:w="23"/><text x="94.1749%" y="351.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="95.6035%" y="325" width="0.1599%" height="15" fill="rgb(210,11,39)" fg:x="1196" fg:w="2"/><text x="95.8535%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="95.6035%" y="309" width="0.1599%" height="15" fill="rgb(251,90,47)" fg:x="1196" fg:w="2"/><text x="95.8535%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="95.6035%" y="293" width="0.1599%" height="15" fill="rgb(237,7,4)" fg:x="1196" fg:w="2"/><text x="95.8535%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="95.6035%" y="277" width="0.1599%" height="15" fill="rgb(232,205,47)" fg:x="1196" fg:w="2"/><text x="95.8535%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.7634%" y="341" width="0.0799%" height="15" fill="rgb(215,86,48)" fg:x="1198" fg:w="1"/><text x="96.0134%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7634%" y="325" width="0.0799%" height="15" fill="rgb(232,14,47)" fg:x="1198" fg:w="1"/><text x="96.0134%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 2.16%)</title><rect x="93.9249%" y="357" width="2.1583%" height="15" fill="rgb(240,28,46)" fg:x="1175" fg:w="27"/><text x="94.1749%" y="367.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="95.8433%" y="341" width="0.2398%" height="15" fill="rgb(224,85,5)" fg:x="1199" fg:w="3"/><text x="96.0933%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="95.9233%" y="325" width="0.1599%" height="15" fill="rgb(219,34,25)" fg:x="1200" fg:w="2"/><text x="96.1733%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.0032%" y="309" width="0.0799%" height="15" fill="rgb(247,137,45)" fg:x="1201" fg:w="1"/><text x="96.2532%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (31 samples, 2.48%)</title><rect x="93.6851%" y="389" width="2.4780%" height="15" fill="rgb(237,121,47)" fg:x="1172" fg:w="31"/><text x="93.9351%" y="399.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (29 samples, 2.32%)</title><rect x="93.8449%" y="373" width="2.3181%" height="15" fill="rgb(247,148,27)" fg:x="1174" fg:w="29"/><text x="94.0949%" y="383.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.0831%" y="357" width="0.0799%" height="15" fill="rgb(220,44,0)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0831%" y="341" width="0.0799%" height="15" fill="rgb(236,61,29)" fg:x="1202" fg:w="1"/><text x="96.3331%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 2.72%)</title><rect x="93.6051%" y="405" width="2.7178%" height="15" fill="rgb(244,180,35)" fg:x="1171" fg:w="34"/><text x="93.8551%" y="415.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.1631%" y="389" width="0.1599%" height="15" fill="rgb(242,14,54)" fg:x="1203" fg:w="2"/><text x="96.4131%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (39 samples, 3.12%)</title><rect x="93.5252%" y="437" width="3.1175%" height="15" fill="rgb(206,24,45)" fg:x="1170" fg:w="39"/><text x="93.7752%" y="447.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (38 samples, 3.04%)</title><rect x="93.6051%" y="421" width="3.0376%" height="15" fill="rgb(215,211,6)" fg:x="1171" fg:w="38"/><text x="93.8551%" y="431.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="96.3229%" y="405" width="0.3197%" height="15" fill="rgb(207,56,2)" fg:x="1205" fg:w="4"/><text x="96.5729%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="96.4029%" y="389" width="0.2398%" height="15" fill="rgb(220,135,9)" fg:x="1206" fg:w="3"/><text x="96.6529%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 3.36%)</title><rect x="93.5252%" y="453" width="3.3573%" height="15" fill="rgb(214,145,52)" fg:x="1170" fg:w="42"/><text x="93.7752%" y="463.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="96.6427%" y="437" width="0.2398%" height="15" fill="rgb(241,83,53)" fg:x="1209" fg:w="3"/><text x="96.8927%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="96.7226%" y="421" width="0.1599%" height="15" fill="rgb(222,66,13)" fg:x="1210" fg:w="2"/><text x="96.9726%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.8026%" y="405" width="0.0799%" height="15" fill="rgb(239,164,54)" fg:x="1211" fg:w="1"/><text x="97.0526%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (47 samples, 3.76%)</title><rect x="93.5252%" y="485" width="3.7570%" height="15" fill="rgb(216,189,13)" fg:x="1170" fg:w="47"/><text x="93.7752%" y="495.50">&lt;rpc..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (47 samples, 3.76%)</title><rect x="93.5252%" y="469" width="3.7570%" height="15" fill="rgb(228,212,51)" fg:x="1170" fg:w="47"/><text x="93.7752%" y="479.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="96.8825%" y="453" width="0.3997%" height="15" fill="rgb(207,190,21)" fg:x="1212" fg:w="5"/><text x="97.1325%" y="463.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="96.9624%" y="437" width="0.3197%" height="15" fill="rgb(245,28,35)" fg:x="1213" fg:w="4"/><text x="97.2124%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2822%" y="437" width="0.0799%" height="15" fill="rgb(239,23,40)" fg:x="1217" fg:w="1"/><text x="97.5322%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4420%" y="405" width="0.0799%" height="15" fill="rgb(242,10,51)" fg:x="1219" fg:w="1"/><text x="97.6920%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="97.3621%" y="437" width="0.2398%" height="15" fill="rgb(207,186,5)" fg:x="1218" fg:w="3"/><text x="97.6121%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.4420%" y="421" width="0.1599%" height="15" fill="rgb(242,21,16)" fg:x="1219" fg:w="2"/><text x="97.6920%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="97.5220%" y="405" width="0.0799%" height="15" fill="rgb(237,0,53)" fg:x="1220" fg:w="1"/><text x="97.7720%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="97.6019%" y="437" width="0.0799%" height="15" fill="rgb(215,8,52)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.6019%" y="421" width="0.0799%" height="15" fill="rgb(248,62,44)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6019%" y="405" width="0.0799%" height="15" fill="rgb(224,83,15)" fg:x="1221" fg:w="1"/><text x="97.8519%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="97.6819%" y="437" width="0.0799%" height="15" fill="rgb(249,100,46)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.6819%" y="421" width="0.0799%" height="15" fill="rgb(213,35,48)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6819%" y="405" width="0.0799%" height="15" fill="rgb(251,2,13)" fg:x="1222" fg:w="1"/><text x="97.9319%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.8417%" y="421" width="0.0799%" height="15" fill="rgb(212,132,21)" fg:x="1224" fg:w="1"/><text x="98.0917%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9217%" y="421" width="0.0799%" height="15" fill="rgb(247,17,21)" fg:x="1225" fg:w="1"/><text x="98.1717%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.0016%" y="405" width="0.0799%" height="15" fill="rgb(220,177,38)" fg:x="1226" fg:w="1"/><text x="98.2516%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.1615%" y="389" width="0.1599%" height="15" fill="rgb(233,219,21)" fg:x="1228" fg:w="2"/><text x="98.4115%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2414%" y="373" width="0.0799%" height="15" fill="rgb(246,17,7)" fg:x="1229" fg:w="1"/><text x="98.4914%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2414%" y="357" width="0.0799%" height="15" fill="rgb(212,4,22)" fg:x="1229" fg:w="1"/><text x="98.4914%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="98.3213%" y="373" width="0.0799%" height="15" fill="rgb(243,85,21)" fg:x="1230" fg:w="1"/><text x="98.5713%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="98.3213%" y="389" width="0.2398%" height="15" fill="rgb(232,218,2)" fg:x="1230" fg:w="3"/><text x="98.5713%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="98.4013%" y="373" width="0.1599%" height="15" fill="rgb(253,168,47)" fg:x="1231" fg:w="2"/><text x="98.6513%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="98.4812%" y="357" width="0.0799%" height="15" fill="rgb(238,101,25)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4812%" y="341" width="0.0799%" height="15" fill="rgb(251,86,12)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4812%" y="325" width="0.0799%" height="15" fill="rgb(241,112,44)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4812%" y="309" width="0.0799%" height="15" fill="rgb(224,28,25)" fg:x="1232" fg:w="1"/><text x="98.7312%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5612%" y="357" width="0.0799%" height="15" fill="rgb(209,201,1)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5612%" y="341" width="0.0799%" height="15" fill="rgb(231,30,22)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.5612%" y="325" width="0.0799%" height="15" fill="rgb(247,96,31)" fg:x="1233" fg:w="1"/><text x="98.8112%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6411%" y="325" width="0.0799%" height="15" fill="rgb(251,100,12)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6411%" y="309" width="0.0799%" height="15" fill="rgb(224,174,7)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6411%" y="293" width="0.0799%" height="15" fill="rgb(231,168,19)" fg:x="1234" fg:w="1"/><text x="98.8911%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.7210%" y="277" width="0.0799%" height="15" fill="rgb(226,85,5)" fg:x="1235" fg:w="1"/><text x="98.9710%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="98.8010%" y="277" width="0.0799%" height="15" fill="rgb(210,215,5)" fg:x="1236" fg:w="1"/><text x="99.0510%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="98.8010%" y="261" width="0.0799%" height="15" fill="rgb(233,70,8)" fg:x="1236" fg:w="1"/><text x="99.0510%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="98.8010%" y="245" width="0.0799%" height="15" fill="rgb(229,109,53)" fg:x="1236" fg:w="1"/><text x="99.0510%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="98.7210%" y="309" width="0.2398%" height="15" fill="rgb(213,125,35)" fg:x="1235" fg:w="3"/><text x="98.9710%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="98.7210%" y="293" width="0.2398%" height="15" fill="rgb(215,12,48)" fg:x="1235" fg:w="3"/><text x="98.9710%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8809%" y="277" width="0.0799%" height="15" fill="rgb(207,12,38)" fg:x="1237" fg:w="1"/><text x="99.1309%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="98.0815%" y="405" width="0.9592%" height="15" fill="rgb(216,229,2)" fg:x="1227" fg:w="12"/><text x="98.3315%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="98.5612%" y="389" width="0.4796%" height="15" fill="rgb(229,209,31)" fg:x="1233" fg:w="6"/><text x="98.8112%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="98.5612%" y="373" width="0.4796%" height="15" fill="rgb(239,57,22)" fg:x="1233" fg:w="6"/><text x="98.8112%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="98.6411%" y="357" width="0.3997%" height="15" fill="rgb(239,119,54)" fg:x="1234" fg:w="5"/><text x="98.8911%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="98.6411%" y="341" width="0.3997%" height="15" fill="rgb(231,80,45)" fg:x="1234" fg:w="5"/><text x="98.8911%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="98.7210%" y="325" width="0.3197%" height="15" fill="rgb(219,138,19)" fg:x="1235" fg:w="4"/><text x="98.9710%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9608%" y="309" width="0.0799%" height="15" fill="rgb(216,53,26)" fg:x="1238" fg:w="1"/><text x="99.2108%" y="319.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (71 samples, 5.68%)</title><rect x="93.5252%" y="501" width="5.6755%" height="15" fill="rgb(224,30,16)" fg:x="1170" fg:w="71"/><text x="93.7752%" y="511.50">&lt;rpc_pr..</text></g><g><title>kernel::model::EntityPtr::to_json_value (24 samples, 1.92%)</title><rect x="97.2822%" y="485" width="1.9185%" height="15" fill="rgb(224,151,24)" fg:x="1217" fg:w="24"/><text x="97.5322%" y="495.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (24 samples, 1.92%)</title><rect x="97.2822%" y="469" width="1.9185%" height="15" fill="rgb(236,75,7)" fg:x="1217" fg:w="24"/><text x="97.5322%" y="479.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.92%)</title><rect x="97.2822%" y="453" width="1.9185%" height="15" fill="rgb(248,106,42)" fg:x="1217" fg:w="24"/><text x="97.5322%" y="463.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.44%)</title><rect x="97.7618%" y="437" width="1.4388%" height="15" fill="rgb(222,217,11)" fg:x="1223" fg:w="18"/><text x="98.0118%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (15 samples, 1.20%)</title><rect x="98.0016%" y="421" width="1.1990%" height="15" fill="rgb(234,143,31)" fg:x="1226" fg:w="15"/><text x="98.2516%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="99.0408%" y="405" width="0.1599%" height="15" fill="rgb(237,148,28)" fg:x="1239" fg:w="2"/><text x="99.2908%" y="415.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (121 samples, 9.67%)</title><rect x="89.6083%" y="581" width="9.6723%" height="15" fill="rgb(241,151,6)" fg:x="1121" fg:w="121"/><text x="89.8583%" y="591.50">&lt;plugins_rpc::..</text></g><g><title>core::iter::adapters::try_process (116 samples, 9.27%)</title><rect x="90.0080%" y="565" width="9.2726%" height="15" fill="rgb(226,55,18)" fg:x="1126" fg:w="116"/><text x="90.2580%" y="575.50">core::iter::a..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (76 samples, 6.08%)</title><rect x="93.2054%" y="549" width="6.0751%" height="15" fill="rgb(226,196,6)" fg:x="1166" fg:w="76"/><text x="93.4554%" y="559.50">alloc::v..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 6.08%)</title><rect x="93.2054%" y="533" width="6.0751%" height="15" fill="rgb(251,228,11)" fg:x="1166" fg:w="76"/><text x="93.4554%" y="543.50">&lt;core::i..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (75 samples, 6.00%)</title><rect x="93.2854%" y="517" width="5.9952%" height="15" fill="rgb(219,197,15)" fg:x="1167" fg:w="75"/><text x="93.5354%" y="527.50">plugins_..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="99.2006%" y="501" width="0.0799%" height="15" fill="rgb(243,105,44)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.2006%" y="485" width="0.0799%" height="15" fill="rgb(205,183,40)" fg:x="1241" fg:w="1"/><text x="99.4506%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2806%" y="549" width="0.0799%" height="15" fill="rgb(232,138,46)" fg:x="1242" fg:w="1"/><text x="99.5306%" y="559.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (178 samples, 14.23%)</title><rect x="85.2118%" y="645" width="14.2286%" height="15" fill="rgb(234,161,14)" fg:x="1066" fg:w="178"/><text x="85.4618%" y="655.50">&lt;engine::perform::Stan..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (135 samples, 10.79%)</title><rect x="88.6491%" y="629" width="10.7914%" height="15" fill="rgb(238,211,18)" fg:x="1109" fg:w="135"/><text x="88.8991%" y="639.50">kernel::plugins:..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (135 samples, 10.79%)</title><rect x="88.6491%" y="613" width="10.7914%" height="15" fill="rgb(217,130,2)" fg:x="1109" fg:w="135"/><text x="88.8991%" y="623.50">&lt;plugins_dynlib:..</text></g><g><title>plugins_rpc::querying::have_surroundings (123 samples, 9.83%)</title><rect x="89.6083%" y="597" width="9.8321%" height="15" fill="rgb(251,17,29)" fg:x="1121" fg:w="123"/><text x="89.8583%" y="607.50">plugins_rpc::q..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="99.2806%" y="581" width="0.1599%" height="15" fill="rgb(243,18,0)" fg:x="1242" fg:w="2"/><text x="99.5306%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="99.2806%" y="565" width="0.1599%" height="15" fill="rgb(227,220,45)" fg:x="1242" fg:w="2"/><text x="99.5306%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.3605%" y="549" width="0.0799%" height="15" fill="rgb(212,34,2)" fg:x="1243" fg:w="1"/><text x="99.6105%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4404%" y="469" width="0.0799%" height="15" fill="rgb(236,23,8)" fg:x="1244" fg:w="1"/><text x="99.6904%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.4404%" y="453" width="0.0799%" height="15" fill="rgb(210,113,39)" fg:x="1244" fg:w="1"/><text x="99.6904%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="99.4404%" y="613" width="0.1599%" height="15" fill="rgb(243,123,48)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="623.50"></text></g><g><title>engine::internal::Entities::add_persisted (2 samples, 0.16%)</title><rect x="99.4404%" y="597" width="0.1599%" height="15" fill="rgb(223,175,36)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="99.4404%" y="581" width="0.1599%" height="15" fill="rgb(226,100,30)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="99.4404%" y="565" width="0.1599%" height="15" fill="rgb(221,225,39)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="99.4404%" y="549" width="0.1599%" height="15" fill="rgb(224,222,42)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.4404%" y="533" width="0.1599%" height="15" fill="rgb(221,53,1)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.4404%" y="517" width="0.1599%" height="15" fill="rgb(216,187,48)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.4404%" y="501" width="0.1599%" height="15" fill="rgb(220,108,2)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.4404%" y="485" width="0.1599%" height="15" fill="rgb(216,13,42)" fg:x="1244" fg:w="2"/><text x="99.6904%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5204%" y="469" width="0.0799%" height="15" fill="rgb(205,14,29)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.5204%" y="453" width="0.0799%" height="15" fill="rgb(217,168,30)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.5204%" y="437" width="0.0799%" height="15" fill="rgb(246,173,54)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.5204%" y="421" width="0.0799%" height="15" fill="rgb(227,177,11)" fg:x="1245" fg:w="1"/><text x="99.7704%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="99.4404%" y="629" width="0.2398%" height="15" fill="rgb(223,215,51)" fg:x="1244" fg:w="3"/><text x="99.6904%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.6003%" y="613" width="0.0799%" height="15" fill="rgb(253,4,17)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6003%" y="597" width="0.0799%" height="15" fill="rgb(206,150,43)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6003%" y="581" width="0.0799%" height="15" fill="rgb(241,100,52)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.6003%" y="565" width="0.0799%" height="15" fill="rgb(234,120,21)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.6003%" y="549" width="0.0799%" height="15" fill="rgb(231,60,11)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.6003%" y="533" width="0.0799%" height="15" fill="rgb(247,77,50)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6003%" y="517" width="0.0799%" height="15" fill="rgb(251,199,54)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6003%" y="501" width="0.0799%" height="15" fill="rgb(212,120,38)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.6003%" y="485" width="0.0799%" height="15" fill="rgb(250,161,37)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.6003%" y="469" width="0.0799%" height="15" fill="rgb(232,158,45)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.6003%" y="453" width="0.0799%" height="15" fill="rgb(233,114,2)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.6003%" y="437" width="0.0799%" height="15" fill="rgb(248,139,0)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="99.6003%" y="421" width="0.0799%" height="15" fill="rgb(222,164,18)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="99.6003%" y="405" width="0.0799%" height="15" fill="rgb(221,140,42)" fg:x="1246" fg:w="1"/><text x="99.8503%" y="415.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (2 samples, 0.16%)</title><rect x="99.6803%" y="629" width="0.1599%" height="15" fill="rgb(209,186,11)" fg:x="1247" fg:w="2"/><text x="99.9303%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.6803%" y="613" width="0.1599%" height="15" fill="rgb(254,212,38)" fg:x="1247" fg:w="2"/><text x="99.9303%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.7602%" y="597" width="0.0799%" height="15" fill="rgb(219,156,31)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="99.7602%" y="581" width="0.0799%" height="15" fill="rgb(222,148,42)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.7602%" y="565" width="0.0799%" height="15" fill="rgb(225,65,5)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.7602%" y="549" width="0.0799%" height="15" fill="rgb(235,28,12)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.7602%" y="533" width="0.0799%" height="15" fill="rgb(245,58,4)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.7602%" y="517" width="0.0799%" height="15" fill="rgb(235,118,5)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7602%" y="501" width="0.0799%" height="15" fill="rgb(253,196,3)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7602%" y="485" width="0.0799%" height="15" fill="rgb(238,90,28)" fg:x="1248" fg:w="1"/><text x="100.0102%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="99.8401%" y="597" width="0.0799%" height="15" fill="rgb(254,227,4)" fg:x="1249" fg:w="1"/><text x="100.0901%" y="607.50"></text></g><g><title>all (1,251 samples, 100%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(237,114,35)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1135.50"></text></g><g><title>simple-bd24e590 (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(221,147,29)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1119.50">simple-bd24e590</text></g><g><title>_start (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(216,201,17)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1103.50">_start</text></g><g><title>__libc_start_main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(251,46,50)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1087.50">__libc_start_main</text></g><g><title>main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(216,143,48)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1071.50">main</text></g><g><title>std::rt::lang_start_internal (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(224,62,51)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(232,152,20)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(233,194,7)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(207,33,22)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="1007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(226,54,34)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="991.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,251 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(227,161,47)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,251 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(218,58,37)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,251 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(208,173,18)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,251 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(230,159,11)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,251 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(238,90,51)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="911.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,251 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(225,97,36)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="895.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,251 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(211,205,42)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="879.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,251 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(219,152,7)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="863.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,251 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(222,79,10)" fg:x="0" fg:w="1251"/><text x="0.2500%" y="847.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (358 samples, 28.62%)</title><rect x="71.3829%" y="821" width="28.6171%" height="15" fill="rgb(242,13,11)" fg:x="893" fg:w="358"/><text x="71.6329%" y="831.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criter..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (358 samples, 28.62%)</title><rect x="71.3829%" y="805" width="28.6171%" height="15" fill="rgb(231,143,41)" fg:x="893" fg:w="358"/><text x="71.6329%" y="815.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (358 samples, 28.62%)</title><rect x="71.3829%" y="789" width="28.6171%" height="15" fill="rgb(222,147,19)" fg:x="893" fg:w="358"/><text x="71.6329%" y="799.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (190 samples, 15.19%)</title><rect x="84.8122%" y="773" width="15.1878%" height="15" fill="rgb(235,5,39)" fg:x="1061" fg:w="190"/><text x="85.0622%" y="783.50">engine::session::Sessio..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (190 samples, 15.19%)</title><rect x="84.8122%" y="757" width="15.1878%" height="15" fill="rgb(246,155,51)" fg:x="1061" fg:w="190"/><text x="85.0622%" y="767.50">engine::perform::Standa..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (188 samples, 15.03%)</title><rect x="84.9720%" y="741" width="15.0280%" height="15" fill="rgb(218,157,4)" fg:x="1063" fg:w="188"/><text x="85.2220%" y="751.50">&lt;kernel::plugins::Sessi..</text></g><g><title>core::iter::adapters::try_process (187 samples, 14.95%)</title><rect x="85.0520%" y="725" width="14.9480%" height="15" fill="rgb(226,184,4)" fg:x="1064" fg:w="187"/><text x="85.3020%" y="735.50">core::iter::adapters::t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (187 samples, 14.95%)</title><rect x="85.0520%" y="709" width="14.9480%" height="15" fill="rgb(210,103,26)" fg:x="1064" fg:w="187"/><text x="85.3020%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as ..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (187 samples, 14.95%)</title><rect x="85.0520%" y="693" width="14.9480%" height="15" fill="rgb(228,23,31)" fg:x="1064" fg:w="187"/><text x="85.3020%" y="703.50">&lt;core::iter::adapters::..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (187 samples, 14.95%)</title><rect x="85.0520%" y="677" width="14.9480%" height="15" fill="rgb(205,176,34)" fg:x="1064" fg:w="187"/><text x="85.3020%" y="687.50">&lt;plugins_core::carrying..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (185 samples, 14.79%)</title><rect x="85.2118%" y="661" width="14.7882%" height="15" fill="rgb(246,213,37)" fg:x="1066" fg:w="185"/><text x="85.4618%" y="671.50">&lt;engine::perform::Stand..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (7 samples, 0.56%)</title><rect x="99.4404%" y="645" width="0.5596%" height="15" fill="rgb(213,52,45)" fg:x="1244" fg:w="7"/><text x="99.6904%" y="655.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="99.8401%" y="629" width="0.1599%" height="15" fill="rgb(249,9,52)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="99.8401%" y="613" width="0.1599%" height="15" fill="rgb(205,97,16)" fg:x="1249" fg:w="2"/><text x="100.0901%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="99.9201%" y="597" width="0.0799%" height="15" fill="rgb(214,11,46)" fg:x="1250" fg:w="1"/><text x="100.1701%" y="607.50"></text></g></svg></svg>