<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1205.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="1248"><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4006%" y="709" width="0.1603%" height="15" fill="rgb(227,147,34)" fg:x="5" fg:w="2"/><text x="0.6506%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.5609%" y="709" width="0.0801%" height="15" fill="rgb(226,203,52)" fg:x="7" fg:w="1"/><text x="0.8109%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6410%" y="677" width="0.0801%" height="15" fill="rgb(226,186,23)" fg:x="8" fg:w="1"/><text x="0.8910%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.6410%" y="693" width="0.1603%" height="15" fill="rgb(236,13,30)" fg:x="8" fg:w="2"/><text x="0.8910%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.7212%" y="677" width="0.0801%" height="15" fill="rgb(228,121,22)" fg:x="9" fg:w="1"/><text x="0.9712%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.8013%" y="693" width="0.1603%" height="15" fill="rgb(248,222,26)" fg:x="10" fg:w="2"/><text x="1.0513%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8814%" y="677" width="0.0801%" height="15" fill="rgb(251,72,25)" fg:x="11" fg:w="1"/><text x="1.1314%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.9615%" y="677" width="0.1603%" height="15" fill="rgb(223,114,24)" fg:x="12" fg:w="2"/><text x="1.2115%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="0.3205%" y="725" width="1.0417%" height="15" fill="rgb(232,190,43)" fg:x="4" fg:w="13"/><text x="0.5705%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="0.6410%" y="709" width="0.7212%" height="15" fill="rgb(208,90,0)" fg:x="8" fg:w="9"/><text x="0.8910%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="0.9615%" y="693" width="0.4006%" height="15" fill="rgb(234,149,31)" fg:x="12" fg:w="5"/><text x="1.2115%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.1218%" y="677" width="0.2404%" height="15" fill="rgb(235,188,36)" fg:x="14" fg:w="3"/><text x="1.3718%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.20%)</title><rect x="0.2404%" y="741" width="1.2019%" height="15" fill="rgb(219,59,51)" fg:x="3" fg:w="15"/><text x="0.4904%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3622%" y="725" width="0.0801%" height="15" fill="rgb(236,101,40)" fg:x="17" fg:w="1"/><text x="1.6122%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.44%)</title><rect x="0.1603%" y="821" width="1.4423%" height="15" fill="rgb(235,33,7)" fg:x="2" fg:w="18"/><text x="0.4103%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (17 samples, 1.36%)</title><rect x="0.2404%" y="805" width="1.3622%" height="15" fill="rgb(213,169,26)" fg:x="3" fg:w="17"/><text x="0.4904%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="0.2404%" y="789" width="1.3622%" height="15" fill="rgb(218,99,34)" fg:x="3" fg:w="17"/><text x="0.4904%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (17 samples, 1.36%)</title><rect x="0.2404%" y="773" width="1.3622%" height="15" fill="rgb(210,57,24)" fg:x="3" fg:w="17"/><text x="0.4904%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="0.2404%" y="757" width="1.3622%" height="15" fill="rgb(231,181,54)" fg:x="3" fg:w="17"/><text x="0.4904%" y="767.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.4423%" y="741" width="0.1603%" height="15" fill="rgb(251,188,48)" fg:x="18" fg:w="2"/><text x="1.6923%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.6026%" y="773" width="0.0801%" height="15" fill="rgb(243,12,45)" fg:x="20" fg:w="1"/><text x="1.8526%" y="783.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (2 samples, 0.16%)</title><rect x="1.6827%" y="773" width="0.1603%" height="15" fill="rgb(250,197,9)" fg:x="21" fg:w="2"/><text x="1.9327%" y="783.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="1.6827%" y="757" width="0.1603%" height="15" fill="rgb(235,149,35)" fg:x="21" fg:w="2"/><text x="1.9327%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::initialize (1 samples, 0.08%)</title><rect x="2.0833%" y="741" width="0.0801%" height="15" fill="rgb(219,27,19)" fg:x="26" fg:w="1"/><text x="2.3333%" y="751.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="2.3237%" y="677" width="0.0801%" height="15" fill="rgb(244,78,31)" fg:x="29" fg:w="1"/><text x="2.5737%" y="687.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="2.1635%" y="709" width="0.3205%" height="15" fill="rgb(241,13,4)" fg:x="27" fg:w="4"/><text x="2.4135%" y="719.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="2.2436%" y="693" width="0.2404%" height="15" fill="rgb(212,194,26)" fg:x="28" fg:w="3"/><text x="2.4936%" y="703.50"></text></g><g><title>__tfind (1 samples, 0.08%)</title><rect x="2.4038%" y="677" width="0.0801%" height="15" fill="rgb(236,80,11)" fg:x="30" fg:w="1"/><text x="2.6538%" y="687.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.12%)</title><rect x="2.4840%" y="661" width="1.1218%" height="15" fill="rgb(206,1,24)" fg:x="31" fg:w="14"/><text x="2.7340%" y="671.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.12%)</title><rect x="2.4840%" y="645" width="1.1218%" height="15" fill="rgb(238,215,50)" fg:x="31" fg:w="14"/><text x="2.7340%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (19 samples, 1.52%)</title><rect x="2.1635%" y="741" width="1.5224%" height="15" fill="rgb(254,126,32)" fg:x="27" fg:w="19"/><text x="2.4135%" y="751.50"></text></g><g><title>libloading::safe::Library::new (19 samples, 1.52%)</title><rect x="2.1635%" y="725" width="1.5224%" height="15" fill="rgb(206,111,53)" fg:x="27" fg:w="19"/><text x="2.4135%" y="735.50"></text></g><g><title>dlopen (15 samples, 1.20%)</title><rect x="2.4840%" y="709" width="1.2019%" height="15" fill="rgb(218,72,44)" fg:x="31" fg:w="15"/><text x="2.7340%" y="719.50"></text></g><g><title>_dl_catch_error (15 samples, 1.20%)</title><rect x="2.4840%" y="693" width="1.2019%" height="15" fill="rgb(238,25,3)" fg:x="31" fg:w="15"/><text x="2.7340%" y="703.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.20%)</title><rect x="2.4840%" y="677" width="1.2019%" height="15" fill="rgb(250,191,7)" fg:x="31" fg:w="15"/><text x="2.7340%" y="687.50"></text></g><g><title>_dl_signal_exception (1 samples, 0.08%)</title><rect x="3.6058%" y="661" width="0.0801%" height="15" fill="rgb(238,56,30)" fg:x="45" fg:w="1"/><text x="3.8558%" y="671.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (22 samples, 1.76%)</title><rect x="2.0032%" y="757" width="1.7628%" height="15" fill="rgb(210,27,45)" fg:x="25" fg:w="22"/><text x="2.2532%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.6859%" y="741" width="0.0801%" height="15" fill="rgb(207,10,50)" fg:x="46" fg:w="1"/><text x="3.9359%" y="751.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.6859%" y="725" width="0.0801%" height="15" fill="rgb(249,30,23)" fg:x="46" fg:w="1"/><text x="3.9359%" y="735.50"></text></g><g><title>engine::session::Session::initialize (25 samples, 2.00%)</title><rect x="1.8429%" y="773" width="2.0032%" height="15" fill="rgb(250,80,12)" fg:x="23" fg:w="25"/><text x="2.0929%" y="783.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="3.7660%" y="757" width="0.0801%" height="15" fill="rgb(210,221,37)" fg:x="47" fg:w="1"/><text x="4.0160%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.7660%" y="741" width="0.0801%" height="15" fill="rgb(205,96,24)" fg:x="47" fg:w="1"/><text x="4.0160%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.7660%" y="725" width="0.0801%" height="15" fill="rgb(247,104,22)" fg:x="47" fg:w="1"/><text x="4.0160%" y="735.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (29 samples, 2.32%)</title><rect x="1.6026%" y="821" width="2.3237%" height="15" fill="rgb(222,61,53)" fg:x="20" fg:w="29"/><text x="1.8526%" y="831.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (29 samples, 2.32%)</title><rect x="1.6026%" y="805" width="2.3237%" height="15" fill="rgb(241,11,53)" fg:x="20" fg:w="29"/><text x="1.8526%" y="815.50">e..</text></g><g><title>engine::session::Session::new (29 samples, 2.32%)</title><rect x="1.6026%" y="789" width="2.3237%" height="15" fill="rgb(230,111,47)" fg:x="20" fg:w="29"/><text x="1.8526%" y="799.50">e..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.8462%" y="773" width="0.0801%" height="15" fill="rgb(218,187,29)" fg:x="48" fg:w="1"/><text x="4.0962%" y="783.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.8462%" y="757" width="0.0801%" height="15" fill="rgb(210,121,46)" fg:x="48" fg:w="1"/><text x="4.0962%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.0064%" y="805" width="0.0801%" height="15" fill="rgb(250,43,19)" fg:x="50" fg:w="1"/><text x="4.2564%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="4.0064%" y="789" width="0.0801%" height="15" fill="rgb(238,61,12)" fg:x="50" fg:w="1"/><text x="4.2564%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="4.0865%" y="805" width="0.0801%" height="15" fill="rgb(251,198,9)" fg:x="51" fg:w="1"/><text x="4.3365%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0865%" y="789" width="0.0801%" height="15" fill="rgb(214,192,38)" fg:x="51" fg:w="1"/><text x="4.3365%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="4.1667%" y="789" width="0.0801%" height="15" fill="rgb(214,73,19)" fg:x="52" fg:w="1"/><text x="4.4167%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.2468%" y="773" width="0.0801%" height="15" fill="rgb(249,222,49)" fg:x="53" fg:w="1"/><text x="4.4968%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.2468%" y="757" width="0.0801%" height="15" fill="rgb(231,181,54)" fg:x="53" fg:w="1"/><text x="4.4968%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.2468%" y="741" width="0.0801%" height="15" fill="rgb(240,1,13)" fg:x="53" fg:w="1"/><text x="4.4968%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.2468%" y="725" width="0.0801%" height="15" fill="rgb(225,21,16)" fg:x="53" fg:w="1"/><text x="4.4968%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.2468%" y="709" width="0.0801%" height="15" fill="rgb(246,176,50)" fg:x="53" fg:w="1"/><text x="4.4968%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.2468%" y="693" width="0.0801%" height="15" fill="rgb(208,96,50)" fg:x="53" fg:w="1"/><text x="4.4968%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.2468%" y="677" width="0.0801%" height="15" fill="rgb(240,219,19)" fg:x="53" fg:w="1"/><text x="4.4968%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.2468%" y="661" width="0.0801%" height="15" fill="rgb(234,73,5)" fg:x="53" fg:w="1"/><text x="4.4968%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.2468%" y="645" width="0.0801%" height="15" fill="rgb(225,52,53)" fg:x="53" fg:w="1"/><text x="4.4968%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.2468%" y="629" width="0.0801%" height="15" fill="rgb(250,12,14)" fg:x="53" fg:w="1"/><text x="4.4968%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.2468%" y="613" width="0.0801%" height="15" fill="rgb(242,185,54)" fg:x="53" fg:w="1"/><text x="4.4968%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.2468%" y="597" width="0.0801%" height="15" fill="rgb(211,206,31)" fg:x="53" fg:w="1"/><text x="4.4968%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.3269%" y="773" width="0.1603%" height="15" fill="rgb(252,10,33)" fg:x="54" fg:w="2"/><text x="4.5769%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (5 samples, 0.40%)</title><rect x="4.2468%" y="789" width="0.4006%" height="15" fill="rgb(216,26,7)" fg:x="53" fg:w="5"/><text x="4.4968%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="4.4872%" y="773" width="0.1603%" height="15" fill="rgb(228,112,40)" fg:x="56" fg:w="2"/><text x="4.7372%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.7276%" y="757" width="0.0801%" height="15" fill="rgb(212,21,16)" fg:x="59" fg:w="1"/><text x="4.9776%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.8077%" y="757" width="0.0801%" height="15" fill="rgb(249,3,29)" fg:x="60" fg:w="1"/><text x="5.0577%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="4.8077%" y="741" width="0.0801%" height="15" fill="rgb(221,42,51)" fg:x="60" fg:w="1"/><text x="5.0577%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="4.8878%" y="741" width="0.0801%" height="15" fill="rgb(225,90,21)" fg:x="61" fg:w="1"/><text x="5.1378%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.0481%" y="725" width="0.0801%" height="15" fill="rgb(242,131,5)" fg:x="63" fg:w="1"/><text x="5.2981%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.0481%" y="709" width="0.0801%" height="15" fill="rgb(220,187,28)" fg:x="63" fg:w="1"/><text x="5.2981%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.0481%" y="693" width="0.0801%" height="15" fill="rgb(210,75,48)" fg:x="63" fg:w="1"/><text x="5.2981%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.0481%" y="677" width="0.0801%" height="15" fill="rgb(211,91,40)" fg:x="63" fg:w="1"/><text x="5.2981%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.0481%" y="661" width="0.0801%" height="15" fill="rgb(205,43,18)" fg:x="63" fg:w="1"/><text x="5.2981%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.0481%" y="645" width="0.0801%" height="15" fill="rgb(207,123,11)" fg:x="63" fg:w="1"/><text x="5.2981%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.0481%" y="629" width="0.0801%" height="15" fill="rgb(235,89,39)" fg:x="63" fg:w="1"/><text x="5.2981%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.0481%" y="613" width="0.0801%" height="15" fill="rgb(245,217,27)" fg:x="63" fg:w="1"/><text x="5.2981%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.0481%" y="597" width="0.0801%" height="15" fill="rgb(216,55,17)" fg:x="63" fg:w="1"/><text x="5.2981%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.0481%" y="581" width="0.0801%" height="15" fill="rgb(252,116,44)" fg:x="63" fg:w="1"/><text x="5.2981%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.0481%" y="565" width="0.0801%" height="15" fill="rgb(229,153,4)" fg:x="63" fg:w="1"/><text x="5.2981%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0481%" y="549" width="0.0801%" height="15" fill="rgb(222,24,35)" fg:x="63" fg:w="1"/><text x="5.2981%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.2083%" y="693" width="0.1603%" height="15" fill="rgb(214,26,20)" fg:x="65" fg:w="2"/><text x="5.4583%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.2083%" y="677" width="0.1603%" height="15" fill="rgb(215,14,45)" fg:x="65" fg:w="2"/><text x="5.4583%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.2083%" y="661" width="0.1603%" height="15" fill="rgb(217,212,50)" fg:x="65" fg:w="2"/><text x="5.4583%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.2083%" y="645" width="0.1603%" height="15" fill="rgb(230,172,52)" fg:x="65" fg:w="2"/><text x="5.4583%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="5.2083%" y="709" width="0.4808%" height="15" fill="rgb(210,48,36)" fg:x="65" fg:w="6"/><text x="5.4583%" y="719.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.3686%" y="693" width="0.3205%" height="15" fill="rgb(216,213,32)" fg:x="67" fg:w="4"/><text x="5.6186%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.4487%" y="677" width="0.2404%" height="15" fill="rgb(237,202,41)" fg:x="68" fg:w="3"/><text x="5.6987%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.5288%" y="661" width="0.1603%" height="15" fill="rgb(209,14,29)" fg:x="69" fg:w="2"/><text x="5.7788%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.8494%" y="693" width="0.0801%" height="15" fill="rgb(219,29,3)" fg:x="73" fg:w="1"/><text x="6.0994%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.9295%" y="645" width="0.1603%" height="15" fill="rgb(229,13,49)" fg:x="74" fg:w="2"/><text x="6.1795%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.9295%" y="629" width="0.1603%" height="15" fill="rgb(210,206,2)" fg:x="74" fg:w="2"/><text x="6.1795%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.0096%" y="613" width="0.0801%" height="15" fill="rgb(216,154,46)" fg:x="75" fg:w="1"/><text x="6.2596%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.0096%" y="597" width="0.0801%" height="15" fill="rgb(211,170,52)" fg:x="75" fg:w="1"/><text x="6.2596%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.0096%" y="581" width="0.0801%" height="15" fill="rgb(233,109,47)" fg:x="75" fg:w="1"/><text x="6.2596%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.0096%" y="565" width="0.0801%" height="15" fill="rgb(208,212,30)" fg:x="75" fg:w="1"/><text x="6.2596%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.0096%" y="549" width="0.0801%" height="15" fill="rgb(215,190,19)" fg:x="75" fg:w="1"/><text x="6.2596%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="5.9295%" y="677" width="0.2404%" height="15" fill="rgb(207,164,53)" fg:x="74" fg:w="3"/><text x="6.1795%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="5.9295%" y="661" width="0.2404%" height="15" fill="rgb(213,87,49)" fg:x="74" fg:w="3"/><text x="6.1795%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.0897%" y="645" width="0.0801%" height="15" fill="rgb(241,216,24)" fg:x="76" fg:w="1"/><text x="6.3397%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.0897%" y="629" width="0.0801%" height="15" fill="rgb(241,123,45)" fg:x="76" fg:w="1"/><text x="6.3397%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.0897%" y="613" width="0.0801%" height="15" fill="rgb(220,36,15)" fg:x="76" fg:w="1"/><text x="6.3397%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.1699%" y="677" width="0.1603%" height="15" fill="rgb(215,202,9)" fg:x="77" fg:w="2"/><text x="6.4199%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.1699%" y="661" width="0.1603%" height="15" fill="rgb(252,71,26)" fg:x="77" fg:w="2"/><text x="6.4199%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.2500%" y="645" width="0.0801%" height="15" fill="rgb(243,195,19)" fg:x="78" fg:w="1"/><text x="6.5000%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.2500%" y="629" width="0.0801%" height="15" fill="rgb(207,167,27)" fg:x="78" fg:w="1"/><text x="6.5000%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.2500%" y="613" width="0.0801%" height="15" fill="rgb(250,146,54)" fg:x="78" fg:w="1"/><text x="6.5000%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.2500%" y="597" width="0.0801%" height="15" fill="rgb(245,79,9)" fg:x="78" fg:w="1"/><text x="6.5000%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.2500%" y="581" width="0.0801%" height="15" fill="rgb(234,197,22)" fg:x="78" fg:w="1"/><text x="6.5000%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.4103%" y="661" width="0.2404%" height="15" fill="rgb(221,52,48)" fg:x="80" fg:w="3"/><text x="6.6603%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.4904%" y="645" width="0.1603%" height="15" fill="rgb(235,80,0)" fg:x="81" fg:w="2"/><text x="6.7404%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5705%" y="629" width="0.0801%" height="15" fill="rgb(221,117,53)" fg:x="82" fg:w="1"/><text x="6.8205%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.5705%" y="613" width="0.0801%" height="15" fill="rgb(239,48,47)" fg:x="82" fg:w="1"/><text x="6.8205%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.6506%" y="645" width="0.1603%" height="15" fill="rgb(227,191,52)" fg:x="83" fg:w="2"/><text x="6.9006%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.6506%" y="629" width="0.1603%" height="15" fill="rgb(241,118,1)" fg:x="83" fg:w="2"/><text x="6.9006%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.7308%" y="613" width="0.0801%" height="15" fill="rgb(240,85,3)" fg:x="84" fg:w="1"/><text x="6.9808%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.8109%" y="645" width="0.0801%" height="15" fill="rgb(237,68,37)" fg:x="85" fg:w="1"/><text x="7.0609%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="6.6506%" y="661" width="0.5609%" height="15" fill="rgb(212,9,20)" fg:x="83" fg:w="7"/><text x="6.9006%" y="671.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="6.8910%" y="645" width="0.3205%" height="15" fill="rgb(218,84,17)" fg:x="86" fg:w="4"/><text x="7.1410%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.1314%" y="629" width="0.0801%" height="15" fill="rgb(235,147,20)" fg:x="89" fg:w="1"/><text x="7.3814%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.1314%" y="613" width="0.0801%" height="15" fill="rgb(208,224,1)" fg:x="89" fg:w="1"/><text x="7.3814%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3718%" y="629" width="0.0801%" height="15" fill="rgb(232,97,50)" fg:x="92" fg:w="1"/><text x="7.6218%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="5.9295%" y="693" width="1.6026%" height="15" fill="rgb(238,15,45)" fg:x="74" fg:w="20"/><text x="6.1795%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="6.3301%" y="677" width="1.2019%" height="15" fill="rgb(231,46,18)" fg:x="79" fg:w="15"/><text x="6.5801%" y="687.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="7.2115%" y="661" width="0.3205%" height="15" fill="rgb(254,169,10)" fg:x="90" fg:w="4"/><text x="7.4615%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.2917%" y="645" width="0.2404%" height="15" fill="rgb(243,169,30)" fg:x="91" fg:w="3"/><text x="7.5417%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.4519%" y="629" width="0.0801%" height="15" fill="rgb(236,90,49)" fg:x="93" fg:w="1"/><text x="7.7019%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.56%)</title><rect x="5.1282%" y="725" width="2.5641%" height="15" fill="rgb(218,80,15)" fg:x="64" fg:w="32"/><text x="5.3782%" y="735.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.00%)</title><rect x="5.6891%" y="709" width="2.0032%" height="15" fill="rgb(222,115,37)" fg:x="71" fg:w="25"/><text x="5.9391%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.5321%" y="693" width="0.1603%" height="15" fill="rgb(227,0,6)" fg:x="94" fg:w="2"/><text x="7.7821%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.5321%" y="677" width="0.1603%" height="15" fill="rgb(217,189,13)" fg:x="94" fg:w="2"/><text x="7.7821%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.5321%" y="661" width="0.1603%" height="15" fill="rgb(220,74,19)" fg:x="94" fg:w="2"/><text x="7.7821%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="7.5321%" y="645" width="0.1603%" height="15" fill="rgb(224,81,18)" fg:x="94" fg:w="2"/><text x="7.7821%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="7.5321%" y="629" width="0.1603%" height="15" fill="rgb(245,178,48)" fg:x="94" fg:w="2"/><text x="7.7821%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="7.5321%" y="613" width="0.1603%" height="15" fill="rgb(207,78,24)" fg:x="94" fg:w="2"/><text x="7.7821%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.9327%" y="677" width="0.0801%" height="15" fill="rgb(223,222,30)" fg:x="99" fg:w="1"/><text x="8.1827%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.0128%" y="661" width="0.0801%" height="15" fill="rgb(234,101,12)" fg:x="100" fg:w="1"/><text x="8.2628%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="7.6923%" y="725" width="0.6410%" height="15" fill="rgb(209,80,46)" fg:x="96" fg:w="8"/><text x="7.9423%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="7.6923%" y="709" width="0.6410%" height="15" fill="rgb(228,79,14)" fg:x="96" fg:w="8"/><text x="7.9423%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="7.6923%" y="693" width="0.6410%" height="15" fill="rgb(220,219,34)" fg:x="96" fg:w="8"/><text x="7.9423%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="8.0128%" y="677" width="0.3205%" height="15" fill="rgb(207,80,21)" fg:x="100" fg:w="4"/><text x="8.2628%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="8.0929%" y="661" width="0.2404%" height="15" fill="rgb(210,154,44)" fg:x="101" fg:w="3"/><text x="8.3429%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.1731%" y="645" width="0.1603%" height="15" fill="rgb(246,44,39)" fg:x="102" fg:w="2"/><text x="8.4231%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.2532%" y="629" width="0.0801%" height="15" fill="rgb(252,175,13)" fg:x="103" fg:w="1"/><text x="8.5032%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="8.3333%" y="709" width="0.0801%" height="15" fill="rgb(211,50,39)" fg:x="104" fg:w="1"/><text x="8.5833%" y="719.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="8.3333%" y="693" width="0.0801%" height="15" fill="rgb(231,204,27)" fg:x="104" fg:w="1"/><text x="8.5833%" y="703.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="8.3333%" y="677" width="0.0801%" height="15" fill="rgb(253,26,34)" fg:x="104" fg:w="1"/><text x="8.5833%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.3333%" y="661" width="0.0801%" height="15" fill="rgb(207,139,38)" fg:x="104" fg:w="1"/><text x="8.5833%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.4135%" y="677" width="0.2404%" height="15" fill="rgb(248,54,27)" fg:x="105" fg:w="3"/><text x="8.6635%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.5737%" y="661" width="0.0801%" height="15" fill="rgb(234,25,33)" fg:x="107" fg:w="1"/><text x="8.8237%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="8.6538%" y="677" width="0.1603%" height="15" fill="rgb(249,107,47)" fg:x="108" fg:w="2"/><text x="8.9038%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.7340%" y="661" width="0.0801%" height="15" fill="rgb(230,190,31)" fg:x="109" fg:w="1"/><text x="8.9840%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="8.8141%" y="677" width="0.0801%" height="15" fill="rgb(238,173,45)" fg:x="110" fg:w="1"/><text x="9.0641%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.8141%" y="661" width="0.0801%" height="15" fill="rgb(222,16,50)" fg:x="110" fg:w="1"/><text x="9.0641%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8141%" y="645" width="0.0801%" height="15" fill="rgb(251,204,47)" fg:x="110" fg:w="1"/><text x="9.0641%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.0545%" y="629" width="0.0801%" height="15" fill="rgb(225,12,3)" fg:x="113" fg:w="1"/><text x="9.3045%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.0545%" y="613" width="0.0801%" height="15" fill="rgb(214,208,22)" fg:x="113" fg:w="1"/><text x="9.3045%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.4551%" y="581" width="0.0801%" height="15" fill="rgb(240,57,32)" fg:x="118" fg:w="1"/><text x="9.7051%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4551%" y="565" width="0.0801%" height="15" fill="rgb(243,113,48)" fg:x="118" fg:w="1"/><text x="9.7051%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4551%" y="549" width="0.0801%" height="15" fill="rgb(225,135,30)" fg:x="118" fg:w="1"/><text x="9.7051%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="9.2147%" y="613" width="0.4006%" height="15" fill="rgb(222,3,53)" fg:x="115" fg:w="5"/><text x="9.4647%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.3750%" y="597" width="0.2404%" height="15" fill="rgb(243,142,2)" fg:x="117" fg:w="3"/><text x="9.6250%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5353%" y="581" width="0.0801%" height="15" fill="rgb(233,67,14)" fg:x="119" fg:w="1"/><text x="9.7853%" y="591.50"></text></g><g><title>engine::session::Session::flush (69 samples, 5.53%)</title><rect x="4.1667%" y="805" width="5.5288%" height="15" fill="rgb(245,125,36)" fg:x="52" fg:w="69"/><text x="4.4167%" y="815.50">engine:..</text></g><g><title>engine::session::state::State::close (63 samples, 5.05%)</title><rect x="4.6474%" y="789" width="5.0481%" height="15" fill="rgb(225,199,6)" fg:x="58" fg:w="63"/><text x="4.8974%" y="799.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (63 samples, 5.05%)</title><rect x="4.6474%" y="773" width="5.0481%" height="15" fill="rgb(244,71,6)" fg:x="58" fg:w="63"/><text x="4.8974%" y="783.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (60 samples, 4.81%)</title><rect x="4.8878%" y="757" width="4.8077%" height="15" fill="rgb(225,62,9)" fg:x="61" fg:w="60"/><text x="5.1378%" y="767.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (59 samples, 4.73%)</title><rect x="4.9679%" y="741" width="4.7276%" height="15" fill="rgb(246,139,53)" fg:x="62" fg:w="59"/><text x="5.2179%" y="751.50">engine..</text></g><g><title>kernel::model::any_entity_changes (17 samples, 1.36%)</title><rect x="8.3333%" y="725" width="1.3622%" height="15" fill="rgb(243,161,46)" fg:x="104" fg:w="17"/><text x="8.5833%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="8.4135%" y="709" width="1.2821%" height="15" fill="rgb(236,153,7)" fg:x="105" fg:w="16"/><text x="8.6635%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="8.4135%" y="693" width="1.2821%" height="15" fill="rgb(248,42,35)" fg:x="105" fg:w="16"/><text x="8.6635%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="8.8942%" y="677" width="0.8013%" height="15" fill="rgb(250,17,31)" fg:x="111" fg:w="10"/><text x="9.1442%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="8.9744%" y="661" width="0.7212%" height="15" fill="rgb(248,138,14)" fg:x="112" fg:w="9"/><text x="9.2244%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="9.0545%" y="645" width="0.6410%" height="15" fill="rgb(228,161,3)" fg:x="113" fg:w="8"/><text x="9.3045%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="9.1346%" y="629" width="0.5609%" height="15" fill="rgb(248,116,17)" fg:x="114" fg:w="7"/><text x="9.3846%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.6154%" y="613" width="0.0801%" height="15" fill="rgb(207,78,24)" fg:x="120" fg:w="1"/><text x="9.8654%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="9.6955%" y="757" width="0.0801%" height="15" fill="rgb(234,99,48)" fg:x="121" fg:w="1"/><text x="9.9455%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="9.6955%" y="741" width="0.0801%" height="15" fill="rgb(242,22,26)" fg:x="121" fg:w="1"/><text x="9.9455%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="9.7756%" y="757" width="0.1603%" height="15" fill="rgb(227,78,32)" fg:x="122" fg:w="2"/><text x="10.0256%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="9.7756%" y="741" width="0.1603%" height="15" fill="rgb(226,189,43)" fg:x="122" fg:w="2"/><text x="10.0256%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="9.7756%" y="725" width="0.1603%" height="15" fill="rgb(227,218,35)" fg:x="122" fg:w="2"/><text x="10.0256%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="9.7756%" y="709" width="0.1603%" height="15" fill="rgb(206,111,40)" fg:x="122" fg:w="2"/><text x="10.0256%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.8558%" y="693" width="0.0801%" height="15" fill="rgb(208,217,22)" fg:x="123" fg:w="1"/><text x="10.1058%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="9.6955%" y="773" width="0.3205%" height="15" fill="rgb(248,20,20)" fg:x="121" fg:w="4"/><text x="9.9455%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="9.9359%" y="757" width="0.0801%" height="15" fill="rgb(239,155,16)" fg:x="124" fg:w="1"/><text x="10.1859%" y="767.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="9.9359%" y="741" width="0.0801%" height="15" fill="rgb(238,171,46)" fg:x="124" fg:w="1"/><text x="10.1859%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.9359%" y="725" width="0.0801%" height="15" fill="rgb(248,11,36)" fg:x="124" fg:w="1"/><text x="10.1859%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.9359%" y="709" width="0.0801%" height="15" fill="rgb(220,148,37)" fg:x="124" fg:w="1"/><text x="10.1859%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.9359%" y="693" width="0.0801%" height="15" fill="rgb(218,144,42)" fg:x="124" fg:w="1"/><text x="10.1859%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.9359%" y="677" width="0.0801%" height="15" fill="rgb(245,20,20)" fg:x="124" fg:w="1"/><text x="10.1859%" y="687.50"></text></g><g><title>__libc_malloc (16 samples, 1.28%)</title><rect x="10.0160%" y="693" width="1.2821%" height="15" fill="rgb(240,111,48)" fg:x="125" fg:w="16"/><text x="10.2660%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (21 samples, 1.68%)</title><rect x="9.6955%" y="789" width="1.6827%" height="15" fill="rgb(237,225,32)" fg:x="121" fg:w="21"/><text x="9.9455%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (17 samples, 1.36%)</title><rect x="10.0160%" y="773" width="1.3622%" height="15" fill="rgb(228,161,46)" fg:x="125" fg:w="17"/><text x="10.2660%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (17 samples, 1.36%)</title><rect x="10.0160%" y="757" width="1.3622%" height="15" fill="rgb(235,196,21)" fg:x="125" fg:w="17"/><text x="10.2660%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 1.36%)</title><rect x="10.0160%" y="741" width="1.3622%" height="15" fill="rgb(250,133,21)" fg:x="125" fg:w="17"/><text x="10.2660%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (17 samples, 1.36%)</title><rect x="10.0160%" y="725" width="1.3622%" height="15" fill="rgb(236,94,32)" fg:x="125" fg:w="17"/><text x="10.2660%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 1.36%)</title><rect x="10.0160%" y="709" width="1.3622%" height="15" fill="rgb(219,176,25)" fg:x="125" fg:w="17"/><text x="10.2660%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.2981%" y="693" width="0.0801%" height="15" fill="rgb(211,17,43)" fg:x="141" fg:w="1"/><text x="11.5481%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="11.2981%" y="677" width="0.0801%" height="15" fill="rgb(220,75,23)" fg:x="141" fg:w="1"/><text x="11.5481%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3782%" y="645" width="0.0801%" height="15" fill="rgb(215,122,32)" fg:x="142" fg:w="1"/><text x="11.6282%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.3782%" y="629" width="0.0801%" height="15" fill="rgb(218,57,38)" fg:x="142" fg:w="1"/><text x="11.6282%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="11.3782%" y="773" width="0.1603%" height="15" fill="rgb(233,208,46)" fg:x="142" fg:w="2"/><text x="11.6282%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="11.3782%" y="757" width="0.1603%" height="15" fill="rgb(221,35,50)" fg:x="142" fg:w="2"/><text x="11.6282%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="11.3782%" y="741" width="0.1603%" height="15" fill="rgb(229,213,29)" fg:x="142" fg:w="2"/><text x="11.6282%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.3782%" y="725" width="0.1603%" height="15" fill="rgb(229,110,40)" fg:x="142" fg:w="2"/><text x="11.6282%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="11.3782%" y="709" width="0.1603%" height="15" fill="rgb(247,206,19)" fg:x="142" fg:w="2"/><text x="11.6282%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.3782%" y="693" width="0.1603%" height="15" fill="rgb(216,229,45)" fg:x="142" fg:w="2"/><text x="11.6282%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="11.3782%" y="677" width="0.1603%" height="15" fill="rgb(205,184,31)" fg:x="142" fg:w="2"/><text x="11.6282%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.3782%" y="661" width="0.1603%" height="15" fill="rgb(213,91,10)" fg:x="142" fg:w="2"/><text x="11.6282%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.4583%" y="645" width="0.0801%" height="15" fill="rgb(250,49,8)" fg:x="143" fg:w="1"/><text x="11.7083%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.4583%" y="629" width="0.0801%" height="15" fill="rgb(207,26,8)" fg:x="143" fg:w="1"/><text x="11.7083%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="11.5385%" y="773" width="0.0801%" height="15" fill="rgb(224,2,13)" fg:x="144" fg:w="1"/><text x="11.7885%" y="783.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.5385%" y="757" width="0.0801%" height="15" fill="rgb(219,108,27)" fg:x="144" fg:w="1"/><text x="11.7885%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.5385%" y="741" width="0.0801%" height="15" fill="rgb(240,89,32)" fg:x="144" fg:w="1"/><text x="11.7885%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.5385%" y="725" width="0.0801%" height="15" fill="rgb(248,205,3)" fg:x="144" fg:w="1"/><text x="11.7885%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.5385%" y="709" width="0.0801%" height="15" fill="rgb(236,197,47)" fg:x="144" fg:w="1"/><text x="11.7885%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.5385%" y="693" width="0.0801%" height="15" fill="rgb(244,185,52)" fg:x="144" fg:w="1"/><text x="11.7885%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.5385%" y="677" width="0.0801%" height="15" fill="rgb(210,206,23)" fg:x="144" fg:w="1"/><text x="11.7885%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="11.5385%" y="661" width="0.0801%" height="15" fill="rgb(251,177,30)" fg:x="144" fg:w="1"/><text x="11.7885%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="11.5385%" y="645" width="0.0801%" height="15" fill="rgb(243,27,45)" fg:x="144" fg:w="1"/><text x="11.7885%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.6186%" y="773" width="0.0801%" height="15" fill="rgb(248,141,51)" fg:x="145" fg:w="1"/><text x="11.8686%" y="783.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="11.6186%" y="757" width="0.0801%" height="15" fill="rgb(235,102,15)" fg:x="145" fg:w="1"/><text x="11.8686%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.6186%" y="741" width="0.0801%" height="15" fill="rgb(214,164,53)" fg:x="145" fg:w="1"/><text x="11.8686%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.6987%" y="725" width="0.0801%" height="15" fill="rgb(228,18,51)" fg:x="146" fg:w="1"/><text x="11.9487%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.6987%" y="709" width="0.0801%" height="15" fill="rgb(205,211,11)" fg:x="146" fg:w="1"/><text x="11.9487%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.6987%" y="693" width="0.0801%" height="15" fill="rgb(208,63,6)" fg:x="146" fg:w="1"/><text x="11.9487%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.6987%" y="677" width="0.0801%" height="15" fill="rgb(245,76,14)" fg:x="146" fg:w="1"/><text x="11.9487%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.6987%" y="661" width="0.0801%" height="15" fill="rgb(234,176,34)" fg:x="146" fg:w="1"/><text x="11.9487%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.6987%" y="645" width="0.0801%" height="15" fill="rgb(243,156,42)" fg:x="146" fg:w="1"/><text x="11.9487%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.6987%" y="629" width="0.0801%" height="15" fill="rgb(237,182,10)" fg:x="146" fg:w="1"/><text x="11.9487%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.6987%" y="613" width="0.0801%" height="15" fill="rgb(244,117,0)" fg:x="146" fg:w="1"/><text x="11.9487%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.6987%" y="597" width="0.0801%" height="15" fill="rgb(239,91,50)" fg:x="146" fg:w="1"/><text x="11.9487%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.6987%" y="581" width="0.0801%" height="15" fill="rgb(206,38,9)" fg:x="146" fg:w="1"/><text x="11.9487%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.6987%" y="565" width="0.0801%" height="15" fill="rgb(205,25,10)" fg:x="146" fg:w="1"/><text x="11.9487%" y="575.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="11.6987%" y="549" width="0.0801%" height="15" fill="rgb(206,224,7)" fg:x="146" fg:w="1"/><text x="11.9487%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.6987%" y="533" width="0.0801%" height="15" fill="rgb(227,157,10)" fg:x="146" fg:w="1"/><text x="11.9487%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.7788%" y="725" width="0.0801%" height="15" fill="rgb(214,157,37)" fg:x="147" fg:w="1"/><text x="12.0288%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.7788%" y="709" width="0.0801%" height="15" fill="rgb(209,180,35)" fg:x="147" fg:w="1"/><text x="12.0288%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.7788%" y="693" width="0.0801%" height="15" fill="rgb(216,174,49)" fg:x="147" fg:w="1"/><text x="12.0288%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="11.6987%" y="773" width="0.3205%" height="15" fill="rgb(205,96,20)" fg:x="146" fg:w="4"/><text x="11.9487%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="11.6987%" y="757" width="0.3205%" height="15" fill="rgb(214,220,39)" fg:x="146" fg:w="4"/><text x="11.9487%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="11.6987%" y="741" width="0.3205%" height="15" fill="rgb(245,126,30)" fg:x="146" fg:w="4"/><text x="11.9487%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="11.8590%" y="725" width="0.1603%" height="15" fill="rgb(215,88,33)" fg:x="148" fg:w="2"/><text x="12.1090%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.8590%" y="709" width="0.1603%" height="15" fill="rgb(210,1,49)" fg:x="148" fg:w="2"/><text x="12.1090%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="11.8590%" y="693" width="0.1603%" height="15" fill="rgb(207,133,3)" fg:x="148" fg:w="2"/><text x="12.1090%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.8590%" y="677" width="0.1603%" height="15" fill="rgb(231,47,43)" fg:x="148" fg:w="2"/><text x="12.1090%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.9391%" y="661" width="0.0801%" height="15" fill="rgb(245,64,1)" fg:x="149" fg:w="1"/><text x="12.1891%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9391%" y="645" width="0.0801%" height="15" fill="rgb(253,145,20)" fg:x="149" fg:w="1"/><text x="12.1891%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (30 samples, 2.40%)</title><rect x="9.6955%" y="805" width="2.4038%" height="15" fill="rgb(211,39,18)" fg:x="121" fg:w="30"/><text x="9.9455%" y="815.50">pl..</text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="11.3782%" y="789" width="0.7212%" height="15" fill="rgb(223,225,18)" fg:x="142" fg:w="9"/><text x="11.6282%" y="799.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="12.0192%" y="773" width="0.0801%" height="15" fill="rgb(210,202,44)" fg:x="150" fg:w="1"/><text x="12.2692%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.0192%" y="757" width="0.0801%" height="15" fill="rgb(231,138,36)" fg:x="150" fg:w="1"/><text x="12.2692%" y="767.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="12.0192%" y="741" width="0.0801%" height="15" fill="rgb(237,115,25)" fg:x="150" fg:w="1"/><text x="12.2692%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.0192%" y="725" width="0.0801%" height="15" fill="rgb(215,53,48)" fg:x="150" fg:w="1"/><text x="12.2692%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="12.0192%" y="709" width="0.0801%" height="15" fill="rgb(243,193,24)" fg:x="150" fg:w="1"/><text x="12.2692%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.0192%" y="693" width="0.0801%" height="15" fill="rgb(210,106,28)" fg:x="150" fg:w="1"/><text x="12.2692%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.1795%" y="773" width="0.0801%" height="15" fill="rgb(249,192,0)" fg:x="152" fg:w="1"/><text x="12.4295%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.1795%" y="757" width="0.0801%" height="15" fill="rgb(224,96,21)" fg:x="152" fg:w="1"/><text x="12.4295%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.1795%" y="741" width="0.0801%" height="15" fill="rgb(243,160,19)" fg:x="152" fg:w="1"/><text x="12.4295%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.1795%" y="725" width="0.0801%" height="15" fill="rgb(219,205,50)" fg:x="152" fg:w="1"/><text x="12.4295%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.1795%" y="709" width="0.0801%" height="15" fill="rgb(218,175,44)" fg:x="152" fg:w="1"/><text x="12.4295%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.1795%" y="693" width="0.0801%" height="15" fill="rgb(251,84,47)" fg:x="152" fg:w="1"/><text x="12.4295%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.1795%" y="677" width="0.0801%" height="15" fill="rgb(241,14,16)" fg:x="152" fg:w="1"/><text x="12.4295%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.1795%" y="661" width="0.0801%" height="15" fill="rgb(207,142,28)" fg:x="152" fg:w="1"/><text x="12.4295%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.1795%" y="645" width="0.0801%" height="15" fill="rgb(208,116,22)" fg:x="152" fg:w="1"/><text x="12.4295%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.1795%" y="629" width="0.0801%" height="15" fill="rgb(210,0,43)" fg:x="152" fg:w="1"/><text x="12.4295%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.1795%" y="613" width="0.0801%" height="15" fill="rgb(246,33,21)" fg:x="152" fg:w="1"/><text x="12.4295%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.1795%" y="597" width="0.0801%" height="15" fill="rgb(208,158,54)" fg:x="152" fg:w="1"/><text x="12.4295%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.1795%" y="581" width="0.0801%" height="15" fill="rgb(218,99,29)" fg:x="152" fg:w="1"/><text x="12.4295%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.1795%" y="565" width="0.0801%" height="15" fill="rgb(226,29,7)" fg:x="152" fg:w="1"/><text x="12.4295%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.1795%" y="549" width="0.0801%" height="15" fill="rgb(206,178,46)" fg:x="152" fg:w="1"/><text x="12.4295%" y="559.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="12.1795%" y="533" width="0.0801%" height="15" fill="rgb(205,169,32)" fg:x="152" fg:w="1"/><text x="12.4295%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="12.2596%" y="757" width="0.0801%" height="15" fill="rgb(217,4,13)" fg:x="153" fg:w="1"/><text x="12.5096%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.2596%" y="741" width="0.0801%" height="15" fill="rgb(210,140,37)" fg:x="153" fg:w="1"/><text x="12.5096%" y="751.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="12.2596%" y="725" width="0.0801%" height="15" fill="rgb(229,80,10)" fg:x="153" fg:w="1"/><text x="12.5096%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2596%" y="709" width="0.0801%" height="15" fill="rgb(212,175,34)" fg:x="153" fg:w="1"/><text x="12.5096%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2596%" y="693" width="0.0801%" height="15" fill="rgb(216,207,24)" fg:x="153" fg:w="1"/><text x="12.5096%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2596%" y="677" width="0.0801%" height="15" fill="rgb(234,163,3)" fg:x="153" fg:w="1"/><text x="12.5096%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="12.2596%" y="773" width="0.1603%" height="15" fill="rgb(248,101,16)" fg:x="153" fg:w="2"/><text x="12.5096%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.3397%" y="757" width="0.0801%" height="15" fill="rgb(209,152,54)" fg:x="154" fg:w="1"/><text x="12.5897%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="12.3397%" y="741" width="0.0801%" height="15" fill="rgb(229,124,51)" fg:x="154" fg:w="1"/><text x="12.5897%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.3397%" y="725" width="0.0801%" height="15" fill="rgb(219,83,18)" fg:x="154" fg:w="1"/><text x="12.5897%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.3397%" y="709" width="0.0801%" height="15" fill="rgb(206,29,38)" fg:x="154" fg:w="1"/><text x="12.5897%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="12.4199%" y="773" width="0.1603%" height="15" fill="rgb(245,123,23)" fg:x="155" fg:w="2"/><text x="12.6699%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="12.4199%" y="757" width="0.1603%" height="15" fill="rgb(238,50,33)" fg:x="155" fg:w="2"/><text x="12.6699%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="12.4199%" y="741" width="0.1603%" height="15" fill="rgb(234,165,23)" fg:x="155" fg:w="2"/><text x="12.6699%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.4199%" y="725" width="0.1603%" height="15" fill="rgb(211,82,31)" fg:x="155" fg:w="2"/><text x="12.6699%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.4199%" y="709" width="0.1603%" height="15" fill="rgb(224,166,46)" fg:x="155" fg:w="2"/><text x="12.6699%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.4199%" y="693" width="0.1603%" height="15" fill="rgb(211,13,8)" fg:x="155" fg:w="2"/><text x="12.6699%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.4199%" y="677" width="0.1603%" height="15" fill="rgb(212,7,42)" fg:x="155" fg:w="2"/><text x="12.6699%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5000%" y="661" width="0.0801%" height="15" fill="rgb(249,102,19)" fg:x="156" fg:w="1"/><text x="12.7500%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5000%" y="645" width="0.0801%" height="15" fill="rgb(225,41,13)" fg:x="156" fg:w="1"/><text x="12.7500%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.5000%" y="629" width="0.0801%" height="15" fill="rgb(220,65,27)" fg:x="156" fg:w="1"/><text x="12.7500%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.5000%" y="613" width="0.0801%" height="15" fill="rgb(206,4,41)" fg:x="156" fg:w="1"/><text x="12.7500%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.5000%" y="597" width="0.0801%" height="15" fill="rgb(219,60,39)" fg:x="156" fg:w="1"/><text x="12.7500%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5000%" y="581" width="0.0801%" height="15" fill="rgb(226,4,38)" fg:x="156" fg:w="1"/><text x="12.7500%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5000%" y="565" width="0.0801%" height="15" fill="rgb(250,52,3)" fg:x="156" fg:w="1"/><text x="12.7500%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.5000%" y="549" width="0.0801%" height="15" fill="rgb(234,93,0)" fg:x="156" fg:w="1"/><text x="12.7500%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.5000%" y="533" width="0.0801%" height="15" fill="rgb(251,47,47)" fg:x="156" fg:w="1"/><text x="12.7500%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.5000%" y="517" width="0.0801%" height="15" fill="rgb(205,166,47)" fg:x="156" fg:w="1"/><text x="12.7500%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.5000%" y="501" width="0.0801%" height="15" fill="rgb(231,148,8)" fg:x="156" fg:w="1"/><text x="12.7500%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5000%" y="485" width="0.0801%" height="15" fill="rgb(244,185,19)" fg:x="156" fg:w="1"/><text x="12.7500%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="12.0994%" y="805" width="0.5609%" height="15" fill="rgb(224,201,45)" fg:x="151" fg:w="7"/><text x="12.3494%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="12.0994%" y="789" width="0.5609%" height="15" fill="rgb(240,77,39)" fg:x="151" fg:w="7"/><text x="12.3494%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="12.5801%" y="773" width="0.0801%" height="15" fill="rgb(248,211,29)" fg:x="157" fg:w="1"/><text x="12.8301%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5801%" y="757" width="0.0801%" height="15" fill="rgb(232,214,46)" fg:x="157" fg:w="1"/><text x="12.8301%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5801%" y="741" width="0.0801%" height="15" fill="rgb(213,99,54)" fg:x="157" fg:w="1"/><text x="12.8301%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.5801%" y="725" width="0.0801%" height="15" fill="rgb(240,19,46)" fg:x="157" fg:w="1"/><text x="12.8301%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.5801%" y="709" width="0.0801%" height="15" fill="rgb(243,89,10)" fg:x="157" fg:w="1"/><text x="12.8301%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.5801%" y="693" width="0.0801%" height="15" fill="rgb(249,28,32)" fg:x="157" fg:w="1"/><text x="12.8301%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5801%" y="677" width="0.0801%" height="15" fill="rgb(253,30,9)" fg:x="157" fg:w="1"/><text x="12.8301%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5801%" y="661" width="0.0801%" height="15" fill="rgb(217,2,26)" fg:x="157" fg:w="1"/><text x="12.8301%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.5801%" y="645" width="0.0801%" height="15" fill="rgb(220,28,10)" fg:x="157" fg:w="1"/><text x="12.8301%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.5801%" y="629" width="0.0801%" height="15" fill="rgb(228,167,49)" fg:x="157" fg:w="1"/><text x="12.8301%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.5801%" y="613" width="0.0801%" height="15" fill="rgb(238,212,3)" fg:x="157" fg:w="1"/><text x="12.8301%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.5801%" y="597" width="0.0801%" height="15" fill="rgb(229,134,44)" fg:x="157" fg:w="1"/><text x="12.8301%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6603%" y="741" width="0.0801%" height="15" fill="rgb(208,71,4)" fg:x="158" fg:w="1"/><text x="12.9103%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6603%" y="725" width="0.0801%" height="15" fill="rgb(221,205,45)" fg:x="158" fg:w="1"/><text x="12.9103%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6603%" y="709" width="0.0801%" height="15" fill="rgb(215,132,38)" fg:x="158" fg:w="1"/><text x="12.9103%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.6603%" y="693" width="0.0801%" height="15" fill="rgb(227,158,6)" fg:x="158" fg:w="1"/><text x="12.9103%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.6603%" y="677" width="0.0801%" height="15" fill="rgb(250,10,38)" fg:x="158" fg:w="1"/><text x="12.9103%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.6603%" y="661" width="0.0801%" height="15" fill="rgb(225,171,40)" fg:x="158" fg:w="1"/><text x="12.9103%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6603%" y="645" width="0.0801%" height="15" fill="rgb(238,17,43)" fg:x="158" fg:w="1"/><text x="12.9103%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6603%" y="629" width="0.0801%" height="15" fill="rgb(208,145,4)" fg:x="158" fg:w="1"/><text x="12.9103%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.6603%" y="613" width="0.0801%" height="15" fill="rgb(232,82,7)" fg:x="158" fg:w="1"/><text x="12.9103%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.6603%" y="597" width="0.0801%" height="15" fill="rgb(205,166,38)" fg:x="158" fg:w="1"/><text x="12.9103%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.6603%" y="581" width="0.0801%" height="15" fill="rgb(240,228,4)" fg:x="158" fg:w="1"/><text x="12.9103%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.6603%" y="565" width="0.0801%" height="15" fill="rgb(233,121,40)" fg:x="158" fg:w="1"/><text x="12.9103%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6603%" y="549" width="0.0801%" height="15" fill="rgb(243,84,30)" fg:x="158" fg:w="1"/><text x="12.9103%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="12.6603%" y="805" width="0.1603%" height="15" fill="rgb(235,81,48)" fg:x="158" fg:w="2"/><text x="12.9103%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="12.6603%" y="789" width="0.1603%" height="15" fill="rgb(218,137,0)" fg:x="158" fg:w="2"/><text x="12.9103%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="12.6603%" y="773" width="0.1603%" height="15" fill="rgb(223,151,48)" fg:x="158" fg:w="2"/><text x="12.9103%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.6603%" y="757" width="0.1603%" height="15" fill="rgb(247,30,19)" fg:x="158" fg:w="2"/><text x="12.9103%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7404%" y="741" width="0.0801%" height="15" fill="rgb(205,129,29)" fg:x="159" fg:w="1"/><text x="12.9904%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.7404%" y="725" width="0.0801%" height="15" fill="rgb(222,29,2)" fg:x="159" fg:w="1"/><text x="12.9904%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="12.7404%" y="709" width="0.0801%" height="15" fill="rgb(232,145,33)" fg:x="159" fg:w="1"/><text x="12.9904%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7404%" y="693" width="0.0801%" height="15" fill="rgb(217,30,31)" fg:x="159" fg:w="1"/><text x="12.9904%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.7404%" y="677" width="0.0801%" height="15" fill="rgb(243,22,52)" fg:x="159" fg:w="1"/><text x="12.9904%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7404%" y="661" width="0.0801%" height="15" fill="rgb(254,228,14)" fg:x="159" fg:w="1"/><text x="12.9904%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.8205%" y="741" width="0.0801%" height="15" fill="rgb(231,45,50)" fg:x="160" fg:w="1"/><text x="13.0705%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.8205%" y="725" width="0.0801%" height="15" fill="rgb(248,125,3)" fg:x="160" fg:w="1"/><text x="13.0705%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.8205%" y="709" width="0.0801%" height="15" fill="rgb(213,76,9)" fg:x="160" fg:w="1"/><text x="13.0705%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="12.8205%" y="789" width="0.1603%" height="15" fill="rgb(238,108,21)" fg:x="160" fg:w="2"/><text x="13.0705%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.8205%" y="773" width="0.1603%" height="15" fill="rgb(229,214,19)" fg:x="160" fg:w="2"/><text x="13.0705%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.8205%" y="757" width="0.1603%" height="15" fill="rgb(252,201,5)" fg:x="160" fg:w="2"/><text x="13.0705%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.9006%" y="741" width="0.0801%" height="15" fill="rgb(233,165,49)" fg:x="161" fg:w="1"/><text x="13.1506%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9006%" y="725" width="0.0801%" height="15" fill="rgb(208,165,19)" fg:x="161" fg:w="1"/><text x="13.1506%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.9006%" y="709" width="0.0801%" height="15" fill="rgb(216,220,31)" fg:x="161" fg:w="1"/><text x="13.1506%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9006%" y="693" width="0.0801%" height="15" fill="rgb(214,8,31)" fg:x="161" fg:w="1"/><text x="13.1506%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="12.9006%" y="677" width="0.0801%" height="15" fill="rgb(220,32,32)" fg:x="161" fg:w="1"/><text x="13.1506%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="12.9808%" y="789" width="0.2404%" height="15" fill="rgb(237,172,34)" fg:x="162" fg:w="3"/><text x="13.2308%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="13.0609%" y="773" width="0.1603%" height="15" fill="rgb(240,209,5)" fg:x="163" fg:w="2"/><text x="13.3109%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="13.0609%" y="757" width="0.1603%" height="15" fill="rgb(221,219,1)" fg:x="163" fg:w="2"/><text x="13.3109%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="13.0609%" y="741" width="0.1603%" height="15" fill="rgb(237,90,36)" fg:x="163" fg:w="2"/><text x="13.3109%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="13.0609%" y="725" width="0.1603%" height="15" fill="rgb(245,14,51)" fg:x="163" fg:w="2"/><text x="13.3109%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="13.0609%" y="709" width="0.1603%" height="15" fill="rgb(211,71,49)" fg:x="163" fg:w="2"/><text x="13.3109%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="13.0609%" y="693" width="0.1603%" height="15" fill="rgb(230,223,9)" fg:x="163" fg:w="2"/><text x="13.3109%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="13.0609%" y="677" width="0.1603%" height="15" fill="rgb(212,33,31)" fg:x="163" fg:w="2"/><text x="13.3109%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="13.2212%" y="789" width="0.2404%" height="15" fill="rgb(218,141,5)" fg:x="165" fg:w="3"/><text x="13.4712%" y="799.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="13.2212%" y="773" width="0.2404%" height="15" fill="rgb(239,194,8)" fg:x="165" fg:w="3"/><text x="13.4712%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.3814%" y="757" width="0.0801%" height="15" fill="rgb(225,119,29)" fg:x="167" fg:w="1"/><text x="13.6314%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="13.4615%" y="741" width="0.0801%" height="15" fill="rgb(233,32,3)" fg:x="168" fg:w="1"/><text x="13.7115%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.4615%" y="725" width="0.0801%" height="15" fill="rgb(248,126,40)" fg:x="168" fg:w="1"/><text x="13.7115%" y="735.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="13.5417%" y="741" width="0.0801%" height="15" fill="rgb(213,102,53)" fg:x="169" fg:w="1"/><text x="13.7917%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="13.5417%" y="725" width="0.0801%" height="15" fill="rgb(212,69,15)" fg:x="169" fg:w="1"/><text x="13.7917%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.5417%" y="709" width="0.0801%" height="15" fill="rgb(253,39,34)" fg:x="169" fg:w="1"/><text x="13.7917%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.5417%" y="693" width="0.0801%" height="15" fill="rgb(205,189,54)" fg:x="169" fg:w="1"/><text x="13.7917%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.5417%" y="677" width="0.0801%" height="15" fill="rgb(234,229,45)" fg:x="169" fg:w="1"/><text x="13.7917%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5417%" y="661" width="0.0801%" height="15" fill="rgb(243,79,48)" fg:x="169" fg:w="1"/><text x="13.7917%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.5417%" y="645" width="0.0801%" height="15" fill="rgb(206,71,50)" fg:x="169" fg:w="1"/><text x="13.7917%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5417%" y="629" width="0.0801%" height="15" fill="rgb(209,32,17)" fg:x="169" fg:w="1"/><text x="13.7917%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.5417%" y="613" width="0.0801%" height="15" fill="rgb(219,229,6)" fg:x="169" fg:w="1"/><text x="13.7917%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5417%" y="597" width="0.0801%" height="15" fill="rgb(226,25,27)" fg:x="169" fg:w="1"/><text x="13.7917%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5417%" y="581" width="0.0801%" height="15" fill="rgb(218,185,23)" fg:x="169" fg:w="1"/><text x="13.7917%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.6218%" y="677" width="0.0801%" height="15" fill="rgb(242,123,5)" fg:x="170" fg:w="1"/><text x="13.8718%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.6218%" y="661" width="0.0801%" height="15" fill="rgb(215,53,19)" fg:x="170" fg:w="1"/><text x="13.8718%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6218%" y="645" width="0.0801%" height="15" fill="rgb(233,20,30)" fg:x="170" fg:w="1"/><text x="13.8718%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.6218%" y="709" width="0.1603%" height="15" fill="rgb(209,67,20)" fg:x="170" fg:w="2"/><text x="13.8718%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.6218%" y="693" width="0.1603%" height="15" fill="rgb(227,181,50)" fg:x="170" fg:w="2"/><text x="13.8718%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.7019%" y="677" width="0.0801%" height="15" fill="rgb(252,75,38)" fg:x="171" fg:w="1"/><text x="13.9519%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7019%" y="661" width="0.0801%" height="15" fill="rgb(235,9,33)" fg:x="171" fg:w="1"/><text x="13.9519%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.7019%" y="645" width="0.0801%" height="15" fill="rgb(208,87,30)" fg:x="171" fg:w="1"/><text x="13.9519%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7019%" y="629" width="0.0801%" height="15" fill="rgb(215,199,39)" fg:x="171" fg:w="1"/><text x="13.9519%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.7019%" y="613" width="0.0801%" height="15" fill="rgb(246,208,12)" fg:x="171" fg:w="1"/><text x="13.9519%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7019%" y="597" width="0.0801%" height="15" fill="rgb(206,195,10)" fg:x="171" fg:w="1"/><text x="13.9519%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="13.7821%" y="709" width="0.0801%" height="15" fill="rgb(244,1,30)" fg:x="172" fg:w="1"/><text x="14.0321%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.7821%" y="693" width="0.0801%" height="15" fill="rgb(230,83,5)" fg:x="172" fg:w="1"/><text x="14.0321%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.7821%" y="677" width="0.0801%" height="15" fill="rgb(239,62,17)" fg:x="172" fg:w="1"/><text x="14.0321%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="13.6218%" y="725" width="0.3205%" height="15" fill="rgb(252,193,41)" fg:x="170" fg:w="4"/><text x="13.8718%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="13.8622%" y="709" width="0.0801%" height="15" fill="rgb(216,142,19)" fg:x="173" fg:w="1"/><text x="14.1122%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="13.8622%" y="693" width="0.0801%" height="15" fill="rgb(240,81,38)" fg:x="173" fg:w="1"/><text x="14.1122%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="13.8622%" y="677" width="0.0801%" height="15" fill="rgb(240,109,40)" fg:x="173" fg:w="1"/><text x="14.1122%" y="687.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="13.8622%" y="661" width="0.0801%" height="15" fill="rgb(230,123,10)" fg:x="173" fg:w="1"/><text x="14.1122%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.8622%" y="645" width="0.0801%" height="15" fill="rgb(253,42,32)" fg:x="173" fg:w="1"/><text x="14.1122%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9423%" y="709" width="0.0801%" height="15" fill="rgb(218,154,8)" fg:x="174" fg:w="1"/><text x="14.1923%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="14.0224%" y="709" width="0.0801%" height="15" fill="rgb(216,197,10)" fg:x="175" fg:w="1"/><text x="14.2724%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="14.0224%" y="693" width="0.0801%" height="15" fill="rgb(223,107,12)" fg:x="175" fg:w="1"/><text x="14.2724%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.1026%" y="677" width="0.0801%" height="15" fill="rgb(241,174,42)" fg:x="176" fg:w="1"/><text x="14.3526%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.1026%" y="661" width="0.0801%" height="15" fill="rgb(231,78,20)" fg:x="176" fg:w="1"/><text x="14.3526%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1026%" y="645" width="0.0801%" height="15" fill="rgb(230,208,49)" fg:x="176" fg:w="1"/><text x="14.3526%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="14.1026%" y="709" width="0.1603%" height="15" fill="rgb(238,11,34)" fg:x="176" fg:w="2"/><text x="14.3526%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="14.1026%" y="693" width="0.1603%" height="15" fill="rgb(210,130,26)" fg:x="176" fg:w="2"/><text x="14.3526%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="14.1827%" y="677" width="0.0801%" height="15" fill="rgb(242,131,11)" fg:x="177" fg:w="1"/><text x="14.4327%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.1827%" y="661" width="0.0801%" height="15" fill="rgb(237,38,28)" fg:x="177" fg:w="1"/><text x="14.4327%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1827%" y="645" width="0.0801%" height="15" fill="rgb(244,180,43)" fg:x="177" fg:w="1"/><text x="14.4327%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1827%" y="629" width="0.0801%" height="15" fill="rgb(214,171,19)" fg:x="177" fg:w="1"/><text x="14.4327%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1827%" y="613" width="0.0801%" height="15" fill="rgb(252,101,45)" fg:x="177" fg:w="1"/><text x="14.4327%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1827%" y="597" width="0.0801%" height="15" fill="rgb(211,96,33)" fg:x="177" fg:w="1"/><text x="14.4327%" y="607.50"></text></g><g><title>plugins_core::build::Build::leads_to (11 samples, 0.88%)</title><rect x="13.6218%" y="741" width="0.8814%" height="15" fill="rgb(207,80,25)" fg:x="170" fg:w="11"/><text x="13.8718%" y="751.50"></text></g><g><title>plugins_core::tools::leads_to (7 samples, 0.56%)</title><rect x="13.9423%" y="725" width="0.5609%" height="15" fill="rgb(225,15,35)" fg:x="174" fg:w="7"/><text x="14.1923%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="14.2628%" y="709" width="0.2404%" height="15" fill="rgb(214,93,43)" fg:x="178" fg:w="3"/><text x="14.5128%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (3 samples, 0.24%)</title><rect x="14.2628%" y="693" width="0.2404%" height="15" fill="rgb(248,42,37)" fg:x="178" fg:w="3"/><text x="14.5128%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="14.2628%" y="677" width="0.2404%" height="15" fill="rgb(217,135,32)" fg:x="178" fg:w="3"/><text x="14.5128%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="14.2628%" y="661" width="0.2404%" height="15" fill="rgb(216,74,28)" fg:x="178" fg:w="3"/><text x="14.5128%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="14.2628%" y="645" width="0.2404%" height="15" fill="rgb(247,108,16)" fg:x="178" fg:w="3"/><text x="14.5128%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.3429%" y="629" width="0.1603%" height="15" fill="rgb(205,219,30)" fg:x="179" fg:w="2"/><text x="14.5929%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.3429%" y="613" width="0.1603%" height="15" fill="rgb(241,122,9)" fg:x="179" fg:w="2"/><text x="14.5929%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="14.4231%" y="597" width="0.0801%" height="15" fill="rgb(216,148,50)" fg:x="180" fg:w="1"/><text x="14.6731%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.12%)</title><rect x="13.4615%" y="789" width="1.1218%" height="15" fill="rgb(226,154,2)" fg:x="168" fg:w="14"/><text x="13.7115%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="13.4615%" y="773" width="1.1218%" height="15" fill="rgb(220,128,1)" fg:x="168" fg:w="14"/><text x="13.7115%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (14 samples, 1.12%)</title><rect x="13.4615%" y="757" width="1.1218%" height="15" fill="rgb(245,185,29)" fg:x="168" fg:w="14"/><text x="13.7115%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="14.5032%" y="741" width="0.0801%" height="15" fill="rgb(243,161,2)" fg:x="181" fg:w="1"/><text x="14.7532%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5032%" y="725" width="0.0801%" height="15" fill="rgb(249,215,17)" fg:x="181" fg:w="1"/><text x="14.7532%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5032%" y="709" width="0.0801%" height="15" fill="rgb(237,67,11)" fg:x="181" fg:w="1"/><text x="14.7532%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5032%" y="693" width="0.0801%" height="15" fill="rgb(239,17,24)" fg:x="181" fg:w="1"/><text x="14.7532%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.5032%" y="677" width="0.0801%" height="15" fill="rgb(215,97,29)" fg:x="181" fg:w="1"/><text x="14.7532%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.5032%" y="661" width="0.0801%" height="15" fill="rgb(253,228,42)" fg:x="181" fg:w="1"/><text x="14.7532%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.5032%" y="645" width="0.0801%" height="15" fill="rgb(240,85,2)" fg:x="181" fg:w="1"/><text x="14.7532%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.5032%" y="629" width="0.0801%" height="15" fill="rgb(214,155,4)" fg:x="181" fg:w="1"/><text x="14.7532%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.5032%" y="613" width="0.0801%" height="15" fill="rgb(247,120,22)" fg:x="181" fg:w="1"/><text x="14.7532%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.5032%" y="597" width="0.0801%" height="15" fill="rgb(211,208,6)" fg:x="181" fg:w="1"/><text x="14.7532%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.5032%" y="581" width="0.0801%" height="15" fill="rgb(235,99,41)" fg:x="181" fg:w="1"/><text x="14.7532%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.5032%" y="565" width="0.0801%" height="15" fill="rgb(223,28,8)" fg:x="181" fg:w="1"/><text x="14.7532%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.5032%" y="549" width="0.0801%" height="15" fill="rgb(212,71,20)" fg:x="181" fg:w="1"/><text x="14.7532%" y="559.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="14.5032%" y="533" width="0.0801%" height="15" fill="rgb(206,85,3)" fg:x="181" fg:w="1"/><text x="14.7532%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="14.5833%" y="789" width="0.0801%" height="15" fill="rgb(244,180,11)" fg:x="182" fg:w="1"/><text x="14.8333%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="14.5833%" y="773" width="0.0801%" height="15" fill="rgb(223,16,21)" fg:x="182" fg:w="1"/><text x="14.8333%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6635%" y="757" width="0.0801%" height="15" fill="rgb(238,85,42)" fg:x="183" fg:w="1"/><text x="14.9135%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6635%" y="741" width="0.0801%" height="15" fill="rgb(205,85,8)" fg:x="183" fg:w="1"/><text x="14.9135%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.6635%" y="725" width="0.0801%" height="15" fill="rgb(217,190,15)" fg:x="183" fg:w="1"/><text x="14.9135%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.6635%" y="709" width="0.0801%" height="15" fill="rgb(243,192,23)" fg:x="183" fg:w="1"/><text x="14.9135%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.6635%" y="693" width="0.0801%" height="15" fill="rgb(223,220,37)" fg:x="183" fg:w="1"/><text x="14.9135%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6635%" y="677" width="0.0801%" height="15" fill="rgb(208,41,17)" fg:x="183" fg:w="1"/><text x="14.9135%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6635%" y="661" width="0.0801%" height="15" fill="rgb(224,188,7)" fg:x="183" fg:w="1"/><text x="14.9135%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.6635%" y="645" width="0.0801%" height="15" fill="rgb(236,16,50)" fg:x="183" fg:w="1"/><text x="14.9135%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.6635%" y="629" width="0.0801%" height="15" fill="rgb(238,6,24)" fg:x="183" fg:w="1"/><text x="14.9135%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.6635%" y="613" width="0.0801%" height="15" fill="rgb(253,67,45)" fg:x="183" fg:w="1"/><text x="14.9135%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.6635%" y="597" width="0.0801%" height="15" fill="rgb(210,89,32)" fg:x="183" fg:w="1"/><text x="14.9135%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6635%" y="581" width="0.0801%" height="15" fill="rgb(208,89,9)" fg:x="183" fg:w="1"/><text x="14.9135%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="14.6635%" y="773" width="0.1603%" height="15" fill="rgb(222,180,44)" fg:x="183" fg:w="2"/><text x="14.9135%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7436%" y="757" width="0.0801%" height="15" fill="rgb(250,181,46)" fg:x="184" fg:w="1"/><text x="14.9936%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.7436%" y="741" width="0.0801%" height="15" fill="rgb(210,190,26)" fg:x="184" fg:w="1"/><text x="14.9936%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="14.8237%" y="725" width="0.1603%" height="15" fill="rgb(253,49,13)" fg:x="185" fg:w="2"/><text x="15.0737%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.9038%" y="709" width="0.0801%" height="15" fill="rgb(240,184,42)" fg:x="186" fg:w="1"/><text x="15.1538%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.9038%" y="693" width="0.0801%" height="15" fill="rgb(246,59,37)" fg:x="186" fg:w="1"/><text x="15.1538%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.9038%" y="677" width="0.0801%" height="15" fill="rgb(207,134,54)" fg:x="186" fg:w="1"/><text x="15.1538%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="14.9840%" y="725" width="0.0801%" height="15" fill="rgb(250,122,24)" fg:x="187" fg:w="1"/><text x="15.2340%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="14.9840%" y="709" width="0.0801%" height="15" fill="rgb(239,206,3)" fg:x="187" fg:w="1"/><text x="15.2340%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="14.9840%" y="693" width="0.0801%" height="15" fill="rgb(253,220,32)" fg:x="187" fg:w="1"/><text x="15.2340%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="14.9840%" y="677" width="0.0801%" height="15" fill="rgb(209,217,48)" fg:x="187" fg:w="1"/><text x="15.2340%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0641%" y="693" width="0.0801%" height="15" fill="rgb(242,91,39)" fg:x="188" fg:w="1"/><text x="15.3141%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0641%" y="677" width="0.0801%" height="15" fill="rgb(228,4,13)" fg:x="188" fg:w="1"/><text x="15.3141%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.0641%" y="661" width="0.0801%" height="15" fill="rgb(223,133,4)" fg:x="188" fg:w="1"/><text x="15.3141%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.0641%" y="645" width="0.0801%" height="15" fill="rgb(215,105,30)" fg:x="188" fg:w="1"/><text x="15.3141%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.0641%" y="629" width="0.0801%" height="15" fill="rgb(230,9,4)" fg:x="188" fg:w="1"/><text x="15.3141%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0641%" y="613" width="0.0801%" height="15" fill="rgb(248,15,2)" fg:x="188" fg:w="1"/><text x="15.3141%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0641%" y="597" width="0.0801%" height="15" fill="rgb(208,210,22)" fg:x="188" fg:w="1"/><text x="15.3141%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.0641%" y="581" width="0.0801%" height="15" fill="rgb(208,112,41)" fg:x="188" fg:w="1"/><text x="15.3141%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.0641%" y="565" width="0.0801%" height="15" fill="rgb(232,83,14)" fg:x="188" fg:w="1"/><text x="15.3141%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.0641%" y="549" width="0.0801%" height="15" fill="rgb(229,65,11)" fg:x="188" fg:w="1"/><text x="15.3141%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.0641%" y="533" width="0.0801%" height="15" fill="rgb(228,126,24)" fg:x="188" fg:w="1"/><text x="15.3141%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0641%" y="517" width="0.0801%" height="15" fill="rgb(218,66,33)" fg:x="188" fg:w="1"/><text x="15.3141%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.1442%" y="693" width="0.0801%" height="15" fill="rgb(251,49,52)" fg:x="189" fg:w="1"/><text x="15.3942%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.1442%" y="677" width="0.0801%" height="15" fill="rgb(219,46,37)" fg:x="189" fg:w="1"/><text x="15.3942%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.1442%" y="661" width="0.0801%" height="15" fill="rgb(213,53,49)" fg:x="189" fg:w="1"/><text x="15.3942%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.1442%" y="645" width="0.0801%" height="15" fill="rgb(214,134,1)" fg:x="189" fg:w="1"/><text x="15.3942%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.1442%" y="629" width="0.0801%" height="15" fill="rgb(208,139,43)" fg:x="189" fg:w="1"/><text x="15.3942%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.1442%" y="613" width="0.0801%" height="15" fill="rgb(231,105,35)" fg:x="189" fg:w="1"/><text x="15.3942%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.1442%" y="597" width="0.0801%" height="15" fill="rgb(247,189,9)" fg:x="189" fg:w="1"/><text x="15.3942%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1442%" y="581" width="0.0801%" height="15" fill="rgb(252,48,51)" fg:x="189" fg:w="1"/><text x="15.3942%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.3045%" y="677" width="0.0801%" height="15" fill="rgb(209,121,1)" fg:x="191" fg:w="1"/><text x="15.5545%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="15.3846%" y="661" width="0.2404%" height="15" fill="rgb(231,40,26)" fg:x="192" fg:w="3"/><text x="15.6346%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="15.3846%" y="677" width="0.3205%" height="15" fill="rgb(251,8,13)" fg:x="192" fg:w="4"/><text x="15.6346%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.6250%" y="661" width="0.0801%" height="15" fill="rgb(231,110,2)" fg:x="195" fg:w="1"/><text x="15.8750%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.6250%" y="645" width="0.0801%" height="15" fill="rgb(216,153,22)" fg:x="195" fg:w="1"/><text x="15.8750%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.6250%" y="629" width="0.0801%" height="15" fill="rgb(249,116,49)" fg:x="195" fg:w="1"/><text x="15.8750%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.7051%" y="661" width="0.0801%" height="15" fill="rgb(230,89,2)" fg:x="196" fg:w="1"/><text x="15.9551%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.7051%" y="645" width="0.0801%" height="15" fill="rgb(231,125,23)" fg:x="196" fg:w="1"/><text x="15.9551%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.7051%" y="629" width="0.0801%" height="15" fill="rgb(212,217,18)" fg:x="196" fg:w="1"/><text x="15.9551%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="15.7853%" y="661" width="0.3205%" height="15" fill="rgb(210,21,33)" fg:x="197" fg:w="4"/><text x="16.0353%" y="671.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.7853%" y="645" width="0.3205%" height="15" fill="rgb(241,97,9)" fg:x="197" fg:w="4"/><text x="16.0353%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.9455%" y="629" width="0.1603%" height="15" fill="rgb(221,35,31)" fg:x="199" fg:w="2"/><text x="16.1955%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.0256%" y="613" width="0.0801%" height="15" fill="rgb(251,23,23)" fg:x="200" fg:w="1"/><text x="16.2756%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="16.1058%" y="645" width="0.1603%" height="15" fill="rgb(227,165,2)" fg:x="201" fg:w="2"/><text x="16.3558%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="16.1058%" y="629" width="0.1603%" height="15" fill="rgb(242,24,2)" fg:x="201" fg:w="2"/><text x="16.3558%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.1058%" y="613" width="0.1603%" height="15" fill="rgb(242,138,51)" fg:x="201" fg:w="2"/><text x="16.3558%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.1058%" y="597" width="0.1603%" height="15" fill="rgb(220,219,5)" fg:x="201" fg:w="2"/><text x="16.3558%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.1859%" y="581" width="0.0801%" height="15" fill="rgb(247,53,29)" fg:x="202" fg:w="1"/><text x="16.4359%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.1859%" y="565" width="0.0801%" height="15" fill="rgb(233,43,39)" fg:x="202" fg:w="1"/><text x="16.4359%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.1859%" y="549" width="0.0801%" height="15" fill="rgb(230,128,54)" fg:x="202" fg:w="1"/><text x="16.4359%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.1859%" y="533" width="0.0801%" height="15" fill="rgb(218,20,12)" fg:x="202" fg:w="1"/><text x="16.4359%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.1859%" y="517" width="0.0801%" height="15" fill="rgb(206,51,14)" fg:x="202" fg:w="1"/><text x="16.4359%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="16.2660%" y="645" width="0.3205%" height="15" fill="rgb(223,16,35)" fg:x="203" fg:w="4"/><text x="16.5160%" y="655.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="16.2660%" y="629" width="0.3205%" height="15" fill="rgb(226,165,37)" fg:x="203" fg:w="4"/><text x="16.5160%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="16.2660%" y="613" width="0.3205%" height="15" fill="rgb(240,26,21)" fg:x="203" fg:w="4"/><text x="16.5160%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.4263%" y="597" width="0.1603%" height="15" fill="rgb(240,72,46)" fg:x="205" fg:w="2"/><text x="16.6763%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.9872%" y="581" width="0.0801%" height="15" fill="rgb(211,33,41)" fg:x="212" fg:w="1"/><text x="17.2372%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="16.7468%" y="629" width="0.4006%" height="15" fill="rgb(224,157,46)" fg:x="209" fg:w="5"/><text x="16.9968%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.9071%" y="613" width="0.2404%" height="15" fill="rgb(223,59,19)" fg:x="211" fg:w="3"/><text x="17.1571%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.9872%" y="597" width="0.1603%" height="15" fill="rgb(239,187,1)" fg:x="212" fg:w="2"/><text x="17.2372%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.0673%" y="581" width="0.0801%" height="15" fill="rgb(226,95,9)" fg:x="213" fg:w="1"/><text x="17.3173%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="17.1474%" y="613" width="0.0801%" height="15" fill="rgb(234,61,54)" fg:x="214" fg:w="1"/><text x="17.3974%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.2276%" y="613" width="0.0801%" height="15" fill="rgb(205,209,47)" fg:x="215" fg:w="1"/><text x="17.4776%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.2276%" y="597" width="0.0801%" height="15" fill="rgb(228,7,43)" fg:x="215" fg:w="1"/><text x="17.4776%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.2276%" y="581" width="0.0801%" height="15" fill="rgb(240,217,52)" fg:x="215" fg:w="1"/><text x="17.4776%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.2276%" y="565" width="0.0801%" height="15" fill="rgb(211,178,21)" fg:x="215" fg:w="1"/><text x="17.4776%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="17.3077%" y="613" width="0.0801%" height="15" fill="rgb(205,25,34)" fg:x="216" fg:w="1"/><text x="17.5577%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.3077%" y="597" width="0.0801%" height="15" fill="rgb(209,57,11)" fg:x="216" fg:w="1"/><text x="17.5577%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="17.1474%" y="629" width="0.3205%" height="15" fill="rgb(221,99,2)" fg:x="214" fg:w="4"/><text x="17.3974%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.3878%" y="613" width="0.0801%" height="15" fill="rgb(232,79,22)" fg:x="217" fg:w="1"/><text x="17.6378%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.3878%" y="597" width="0.0801%" height="15" fill="rgb(221,145,32)" fg:x="217" fg:w="1"/><text x="17.6378%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.3878%" y="581" width="0.0801%" height="15" fill="rgb(236,133,36)" fg:x="217" fg:w="1"/><text x="17.6378%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="16.5865%" y="645" width="0.9615%" height="15" fill="rgb(208,224,44)" fg:x="207" fg:w="12"/><text x="16.8365%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.4679%" y="629" width="0.0801%" height="15" fill="rgb(235,143,15)" fg:x="218" fg:w="1"/><text x="17.7179%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.4679%" y="613" width="0.0801%" height="15" fill="rgb(249,83,27)" fg:x="218" fg:w="1"/><text x="17.7179%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.4679%" y="597" width="0.0801%" height="15" fill="rgb(238,226,19)" fg:x="218" fg:w="1"/><text x="17.7179%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="16.1058%" y="661" width="1.6026%" height="15" fill="rgb(226,206,27)" fg:x="201" fg:w="20"/><text x="16.3558%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.5481%" y="645" width="0.1603%" height="15" fill="rgb(251,182,9)" fg:x="219" fg:w="2"/><text x="17.7981%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.24%)</title><rect x="15.7051%" y="677" width="2.2436%" height="15" fill="rgb(212,140,41)" fg:x="196" fg:w="28"/><text x="15.9551%" y="687.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.7083%" y="661" width="0.2404%" height="15" fill="rgb(220,106,18)" fg:x="221" fg:w="3"/><text x="17.9583%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.7885%" y="645" width="0.1603%" height="15" fill="rgb(252,46,41)" fg:x="222" fg:w="2"/><text x="18.0385%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.7885%" y="629" width="0.1603%" height="15" fill="rgb(209,222,15)" fg:x="222" fg:w="2"/><text x="18.0385%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="17.7885%" y="613" width="0.1603%" height="15" fill="rgb(233,83,50)" fg:x="222" fg:w="2"/><text x="18.0385%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.8686%" y="597" width="0.0801%" height="15" fill="rgb(205,212,0)" fg:x="223" fg:w="1"/><text x="18.1186%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.8686%" y="581" width="0.0801%" height="15" fill="rgb(235,117,51)" fg:x="223" fg:w="1"/><text x="18.1186%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (35 samples, 2.80%)</title><rect x="15.2244%" y="693" width="2.8045%" height="15" fill="rgb(233,133,48)" fg:x="190" fg:w="35"/><text x="15.4744%" y="703.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.9487%" y="677" width="0.0801%" height="15" fill="rgb(219,3,2)" fg:x="224" fg:w="1"/><text x="18.1987%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.9487%" y="661" width="0.0801%" height="15" fill="rgb(225,80,52)" fg:x="224" fg:w="1"/><text x="18.1987%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.9487%" y="645" width="0.0801%" height="15" fill="rgb(235,195,42)" fg:x="224" fg:w="1"/><text x="18.1987%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1090%" y="661" width="0.0801%" height="15" fill="rgb(240,207,46)" fg:x="226" fg:w="1"/><text x="18.3590%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1891%" y="645" width="0.0801%" height="15" fill="rgb(236,112,50)" fg:x="227" fg:w="1"/><text x="18.4391%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.2692%" y="629" width="0.0801%" height="15" fill="rgb(249,151,27)" fg:x="228" fg:w="1"/><text x="18.5192%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2692%" y="613" width="0.0801%" height="15" fill="rgb(253,223,52)" fg:x="228" fg:w="1"/><text x="18.5192%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3494%" y="613" width="0.0801%" height="15" fill="rgb(215,55,33)" fg:x="229" fg:w="1"/><text x="18.5994%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.4295%" y="613" width="0.0801%" height="15" fill="rgb(207,24,17)" fg:x="230" fg:w="1"/><text x="18.6795%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="18.0288%" y="693" width="0.5609%" height="15" fill="rgb(218,169,32)" fg:x="225" fg:w="7"/><text x="18.2788%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="18.0288%" y="677" width="0.5609%" height="15" fill="rgb(209,210,6)" fg:x="225" fg:w="7"/><text x="18.2788%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="18.1891%" y="661" width="0.4006%" height="15" fill="rgb(225,208,8)" fg:x="227" fg:w="5"/><text x="18.4391%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="18.2692%" y="645" width="0.3205%" height="15" fill="rgb(238,14,32)" fg:x="228" fg:w="4"/><text x="18.5192%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="18.3494%" y="629" width="0.2404%" height="15" fill="rgb(211,137,3)" fg:x="229" fg:w="3"/><text x="18.5994%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.5096%" y="613" width="0.0801%" height="15" fill="rgb(207,171,19)" fg:x="231" fg:w="1"/><text x="18.7596%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.5096%" y="597" width="0.0801%" height="15" fill="rgb(250,80,8)" fg:x="231" fg:w="1"/><text x="18.7596%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="18.5897%" y="645" width="0.0801%" height="15" fill="rgb(209,103,53)" fg:x="232" fg:w="1"/><text x="18.8397%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.5897%" y="629" width="0.0801%" height="15" fill="rgb(233,198,10)" fg:x="232" fg:w="1"/><text x="18.8397%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="18.5897%" y="677" width="0.1603%" height="15" fill="rgb(236,125,25)" fg:x="232" fg:w="2"/><text x="18.8397%" y="687.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="18.5897%" y="661" width="0.1603%" height="15" fill="rgb(254,182,48)" fg:x="232" fg:w="2"/><text x="18.8397%" y="671.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="18.6699%" y="645" width="0.0801%" height="15" fill="rgb(216,108,44)" fg:x="233" fg:w="1"/><text x="18.9199%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6699%" y="629" width="0.0801%" height="15" fill="rgb(222,72,39)" fg:x="233" fg:w="1"/><text x="18.9199%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8301%" y="645" width="0.0801%" height="15" fill="rgb(252,70,39)" fg:x="235" fg:w="1"/><text x="19.0801%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9103%" y="645" width="0.0801%" height="15" fill="rgb(243,99,34)" fg:x="236" fg:w="1"/><text x="19.1603%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9103%" y="629" width="0.0801%" height="15" fill="rgb(252,109,12)" fg:x="236" fg:w="1"/><text x="19.1603%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9103%" y="613" width="0.0801%" height="15" fill="rgb(211,186,10)" fg:x="236" fg:w="1"/><text x="19.1603%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9904%" y="645" width="0.0801%" height="15" fill="rgb(246,90,8)" fg:x="237" fg:w="1"/><text x="19.2404%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9904%" y="629" width="0.0801%" height="15" fill="rgb(226,91,24)" fg:x="237" fg:w="1"/><text x="19.2404%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9904%" y="613" width="0.0801%" height="15" fill="rgb(216,28,44)" fg:x="237" fg:w="1"/><text x="19.2404%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9904%" y="597" width="0.0801%" height="15" fill="rgb(229,36,0)" fg:x="237" fg:w="1"/><text x="19.2404%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="19.1506%" y="629" width="0.1603%" height="15" fill="rgb(245,97,18)" fg:x="239" fg:w="2"/><text x="19.4006%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.3910%" y="597" width="0.0801%" height="15" fill="rgb(241,97,54)" fg:x="242" fg:w="1"/><text x="19.6410%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.3910%" y="581" width="0.0801%" height="15" fill="rgb(234,125,17)" fg:x="242" fg:w="1"/><text x="19.6410%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3910%" y="565" width="0.0801%" height="15" fill="rgb(228,172,39)" fg:x="242" fg:w="1"/><text x="19.6410%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.4712%" y="597" width="0.0801%" height="15" fill="rgb(227,169,1)" fg:x="243" fg:w="1"/><text x="19.7212%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.4712%" y="581" width="0.0801%" height="15" fill="rgb(206,13,35)" fg:x="243" fg:w="1"/><text x="19.7212%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.4712%" y="565" width="0.0801%" height="15" fill="rgb(211,117,30)" fg:x="243" fg:w="1"/><text x="19.7212%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4712%" y="549" width="0.0801%" height="15" fill="rgb(230,198,4)" fg:x="243" fg:w="1"/><text x="19.7212%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4712%" y="533" width="0.0801%" height="15" fill="rgb(213,87,54)" fg:x="243" fg:w="1"/><text x="19.7212%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4712%" y="517" width="0.0801%" height="15" fill="rgb(248,43,22)" fg:x="243" fg:w="1"/><text x="19.7212%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6314%" y="565" width="0.0801%" height="15" fill="rgb(213,175,48)" fg:x="245" fg:w="1"/><text x="19.8814%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.7115%" y="549" width="0.0801%" height="15" fill="rgb(252,55,9)" fg:x="246" fg:w="1"/><text x="19.9615%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="19.7917%" y="549" width="0.0801%" height="15" fill="rgb(231,72,33)" fg:x="247" fg:w="1"/><text x="20.0417%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="19.5513%" y="581" width="0.4006%" height="15" fill="rgb(213,2,54)" fg:x="244" fg:w="5"/><text x="19.8013%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="19.7115%" y="565" width="0.2404%" height="15" fill="rgb(208,88,25)" fg:x="246" fg:w="3"/><text x="19.9615%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8718%" y="549" width="0.0801%" height="15" fill="rgb(215,117,13)" fg:x="248" fg:w="1"/><text x="20.1218%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="19.3910%" y="613" width="0.6410%" height="15" fill="rgb(243,147,21)" fg:x="242" fg:w="8"/><text x="19.6410%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="19.5513%" y="597" width="0.4808%" height="15" fill="rgb(208,215,36)" fg:x="244" fg:w="6"/><text x="19.8013%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="19.9519%" y="581" width="0.0801%" height="15" fill="rgb(238,187,24)" fg:x="249" fg:w="1"/><text x="20.2019%" y="591.50"></text></g><g><title>engine::session::Session::flush (68 samples, 5.45%)</title><rect x="14.6635%" y="789" width="5.4487%" height="15" fill="rgb(214,173,11)" fg:x="183" fg:w="68"/><text x="14.9135%" y="799.50">engine:..</text></g><g><title>engine::session::Session::save_changes (66 samples, 5.29%)</title><rect x="14.8237%" y="773" width="5.2885%" height="15" fill="rgb(222,71,20)" fg:x="185" fg:w="66"/><text x="15.0737%" y="783.50">engine..</text></g><g><title>engine::session::state::State::close (66 samples, 5.29%)</title><rect x="14.8237%" y="757" width="5.2885%" height="15" fill="rgb(242,125,4)" fg:x="185" fg:w="66"/><text x="15.0737%" y="767.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (66 samples, 5.29%)</title><rect x="14.8237%" y="741" width="5.2885%" height="15" fill="rgb(217,101,52)" fg:x="185" fg:w="66"/><text x="15.0737%" y="751.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (63 samples, 5.05%)</title><rect x="15.0641%" y="725" width="5.0481%" height="15" fill="rgb(223,2,50)" fg:x="188" fg:w="63"/><text x="15.3141%" y="735.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (63 samples, 5.05%)</title><rect x="15.0641%" y="709" width="5.0481%" height="15" fill="rgb(225,197,9)" fg:x="188" fg:w="63"/><text x="15.3141%" y="719.50">engine..</text></g><g><title>kernel::model::any_entity_changes (19 samples, 1.52%)</title><rect x="18.5897%" y="693" width="1.5224%" height="15" fill="rgb(234,76,27)" fg:x="232" fg:w="19"/><text x="18.8397%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.36%)</title><rect x="18.7500%" y="677" width="1.3622%" height="15" fill="rgb(213,161,26)" fg:x="234" fg:w="17"/><text x="19.0000%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.36%)</title><rect x="18.7500%" y="661" width="1.3622%" height="15" fill="rgb(210,228,2)" fg:x="234" fg:w="17"/><text x="19.0000%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="19.0705%" y="645" width="1.0417%" height="15" fill="rgb(235,4,16)" fg:x="238" fg:w="13"/><text x="19.3205%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="19.3109%" y="629" width="0.8013%" height="15" fill="rgb(235,83,42)" fg:x="241" fg:w="10"/><text x="19.5609%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="20.0321%" y="613" width="0.0801%" height="15" fill="rgb(207,116,39)" fg:x="250" fg:w="1"/><text x="20.2821%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0321%" y="597" width="0.0801%" height="15" fill="rgb(253,206,9)" fg:x="250" fg:w="1"/><text x="20.2821%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="20.1122%" y="789" width="0.1603%" height="15" fill="rgb(234,32,47)" fg:x="251" fg:w="2"/><text x="20.3622%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="20.1122%" y="773" width="0.1603%" height="15" fill="rgb(247,40,39)" fg:x="251" fg:w="2"/><text x="20.3622%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="20.1122%" y="757" width="0.1603%" height="15" fill="rgb(236,199,13)" fg:x="251" fg:w="2"/><text x="20.3622%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.1122%" y="741" width="0.1603%" height="15" fill="rgb(240,127,44)" fg:x="251" fg:w="2"/><text x="20.3622%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="20.2724%" y="757" width="0.1603%" height="15" fill="rgb(248,220,47)" fg:x="253" fg:w="2"/><text x="20.5224%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="20.2724%" y="741" width="0.1603%" height="15" fill="rgb(240,78,9)" fg:x="253" fg:w="2"/><text x="20.5224%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="20.2724%" y="725" width="0.1603%" height="15" fill="rgb(245,119,5)" fg:x="253" fg:w="2"/><text x="20.5224%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="20.2724%" y="709" width="0.1603%" height="15" fill="rgb(238,175,31)" fg:x="253" fg:w="2"/><text x="20.5224%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.2724%" y="693" width="0.1603%" height="15" fill="rgb(232,140,42)" fg:x="253" fg:w="2"/><text x="20.5224%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="20.2724%" y="677" width="0.1603%" height="15" fill="rgb(218,179,7)" fg:x="253" fg:w="2"/><text x="20.5224%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="20.2724%" y="661" width="0.1603%" height="15" fill="rgb(232,79,27)" fg:x="253" fg:w="2"/><text x="20.5224%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="20.2724%" y="645" width="0.1603%" height="15" fill="rgb(247,11,19)" fg:x="253" fg:w="2"/><text x="20.5224%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.2724%" y="629" width="0.1603%" height="15" fill="rgb(216,171,54)" fg:x="253" fg:w="2"/><text x="20.5224%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="20.2724%" y="613" width="0.1603%" height="15" fill="rgb(233,158,36)" fg:x="253" fg:w="2"/><text x="20.5224%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="20.2724%" y="597" width="0.1603%" height="15" fill="rgb(215,48,47)" fg:x="253" fg:w="2"/><text x="20.5224%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="20.2724%" y="581" width="0.1603%" height="15" fill="rgb(230,223,15)" fg:x="253" fg:w="2"/><text x="20.5224%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.2724%" y="565" width="0.1603%" height="15" fill="rgb(234,49,19)" fg:x="253" fg:w="2"/><text x="20.5224%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="20.2724%" y="549" width="0.1603%" height="15" fill="rgb(232,89,25)" fg:x="253" fg:w="2"/><text x="20.5224%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.2724%" y="533" width="0.1603%" height="15" fill="rgb(237,206,28)" fg:x="253" fg:w="2"/><text x="20.5224%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.2724%" y="517" width="0.1603%" height="15" fill="rgb(249,68,37)" fg:x="253" fg:w="2"/><text x="20.5224%" y="527.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="20.2724%" y="501" width="0.1603%" height="15" fill="rgb(226,99,43)" fg:x="253" fg:w="2"/><text x="20.5224%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="20.2724%" y="485" width="0.1603%" height="15" fill="rgb(216,46,28)" fg:x="253" fg:w="2"/><text x="20.5224%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="20.2724%" y="469" width="0.1603%" height="15" fill="rgb(216,33,9)" fg:x="253" fg:w="2"/><text x="20.5224%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="20.2724%" y="453" width="0.1603%" height="15" fill="rgb(216,129,4)" fg:x="253" fg:w="2"/><text x="20.5224%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="20.2724%" y="437" width="0.1603%" height="15" fill="rgb(216,106,3)" fg:x="253" fg:w="2"/><text x="20.5224%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.4327%" y="709" width="0.0801%" height="15" fill="rgb(217,79,45)" fg:x="255" fg:w="1"/><text x="20.6827%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.4327%" y="693" width="0.0801%" height="15" fill="rgb(239,98,13)" fg:x="255" fg:w="1"/><text x="20.6827%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.4327%" y="677" width="0.0801%" height="15" fill="rgb(221,115,4)" fg:x="255" fg:w="1"/><text x="20.6827%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.4327%" y="661" width="0.0801%" height="15" fill="rgb(215,85,0)" fg:x="255" fg:w="1"/><text x="20.6827%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.4327%" y="645" width="0.0801%" height="15" fill="rgb(230,62,15)" fg:x="255" fg:w="1"/><text x="20.6827%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4327%" y="629" width="0.0801%" height="15" fill="rgb(247,162,2)" fg:x="255" fg:w="1"/><text x="20.6827%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.4327%" y="613" width="0.0801%" height="15" fill="rgb(212,112,32)" fg:x="255" fg:w="1"/><text x="20.6827%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.4327%" y="597" width="0.0801%" height="15" fill="rgb(216,137,9)" fg:x="255" fg:w="1"/><text x="20.6827%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.4327%" y="581" width="0.0801%" height="15" fill="rgb(250,149,33)" fg:x="255" fg:w="1"/><text x="20.6827%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.4327%" y="565" width="0.0801%" height="15" fill="rgb(246,124,31)" fg:x="255" fg:w="1"/><text x="20.6827%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.4327%" y="549" width="0.0801%" height="15" fill="rgb(216,210,22)" fg:x="255" fg:w="1"/><text x="20.6827%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.4327%" y="533" width="0.0801%" height="15" fill="rgb(228,128,36)" fg:x="255" fg:w="1"/><text x="20.6827%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="20.4327%" y="757" width="0.1603%" height="15" fill="rgb(231,41,0)" fg:x="255" fg:w="2"/><text x="20.6827%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.4327%" y="741" width="0.1603%" height="15" fill="rgb(232,61,26)" fg:x="255" fg:w="2"/><text x="20.6827%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.4327%" y="725" width="0.1603%" height="15" fill="rgb(217,60,9)" fg:x="255" fg:w="2"/><text x="20.6827%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.5128%" y="709" width="0.0801%" height="15" fill="rgb(233,41,35)" fg:x="256" fg:w="1"/><text x="20.7628%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="20.5929%" y="741" width="0.0801%" height="15" fill="rgb(253,139,43)" fg:x="257" fg:w="1"/><text x="20.8429%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.5929%" y="725" width="0.0801%" height="15" fill="rgb(245,100,51)" fg:x="257" fg:w="1"/><text x="20.8429%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="20.5929%" y="709" width="0.0801%" height="15" fill="rgb(250,208,18)" fg:x="257" fg:w="1"/><text x="20.8429%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.5929%" y="693" width="0.0801%" height="15" fill="rgb(245,33,2)" fg:x="257" fg:w="1"/><text x="20.8429%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.5929%" y="677" width="0.0801%" height="15" fill="rgb(244,171,31)" fg:x="257" fg:w="1"/><text x="20.8429%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5929%" y="661" width="0.0801%" height="15" fill="rgb(229,1,43)" fg:x="257" fg:w="1"/><text x="20.8429%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="20.5929%" y="757" width="0.1603%" height="15" fill="rgb(223,153,28)" fg:x="257" fg:w="2"/><text x="20.8429%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.6731%" y="741" width="0.0801%" height="15" fill="rgb(241,4,46)" fg:x="258" fg:w="1"/><text x="20.9231%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6731%" y="725" width="0.0801%" height="15" fill="rgb(230,81,11)" fg:x="258" fg:w="1"/><text x="20.9231%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="20.7532%" y="725" width="0.0801%" height="15" fill="rgb(253,204,39)" fg:x="259" fg:w="1"/><text x="21.0032%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.7532%" y="709" width="0.0801%" height="15" fill="rgb(250,96,8)" fg:x="259" fg:w="1"/><text x="21.0032%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7532%" y="693" width="0.0801%" height="15" fill="rgb(219,89,54)" fg:x="259" fg:w="1"/><text x="21.0032%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7532%" y="677" width="0.0801%" height="15" fill="rgb(235,136,39)" fg:x="259" fg:w="1"/><text x="21.0032%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.7532%" y="661" width="0.0801%" height="15" fill="rgb(230,155,37)" fg:x="259" fg:w="1"/><text x="21.0032%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7532%" y="645" width="0.0801%" height="15" fill="rgb(235,199,50)" fg:x="259" fg:w="1"/><text x="21.0032%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="20.7532%" y="629" width="0.0801%" height="15" fill="rgb(227,81,32)" fg:x="259" fg:w="1"/><text x="21.0032%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="20.2724%" y="773" width="0.6410%" height="15" fill="rgb(225,6,28)" fg:x="253" fg:w="8"/><text x="20.5224%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="20.7532%" y="757" width="0.1603%" height="15" fill="rgb(207,211,17)" fg:x="259" fg:w="2"/><text x="21.0032%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="20.7532%" y="741" width="0.1603%" height="15" fill="rgb(228,31,49)" fg:x="259" fg:w="2"/><text x="21.0032%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="20.8333%" y="725" width="0.0801%" height="15" fill="rgb(230,185,3)" fg:x="260" fg:w="1"/><text x="21.0833%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="20.9135%" y="757" width="0.0801%" height="15" fill="rgb(206,167,15)" fg:x="261" fg:w="1"/><text x="21.1635%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9135%" y="741" width="0.0801%" height="15" fill="rgb(234,2,36)" fg:x="261" fg:w="1"/><text x="21.1635%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="20.9936%" y="709" width="0.0801%" height="15" fill="rgb(239,160,29)" fg:x="262" fg:w="1"/><text x="21.2436%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9936%" y="693" width="0.0801%" height="15" fill="rgb(236,117,2)" fg:x="262" fg:w="1"/><text x="21.2436%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1538%" y="693" width="0.0801%" height="15" fill="rgb(215,117,37)" fg:x="264" fg:w="1"/><text x="21.4038%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1538%" y="677" width="0.0801%" height="15" fill="rgb(244,48,36)" fg:x="264" fg:w="1"/><text x="21.4038%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1538%" y="661" width="0.0801%" height="15" fill="rgb(223,101,37)" fg:x="264" fg:w="1"/><text x="21.4038%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.1538%" y="645" width="0.0801%" height="15" fill="rgb(205,200,1)" fg:x="264" fg:w="1"/><text x="21.4038%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.1538%" y="629" width="0.0801%" height="15" fill="rgb(209,193,20)" fg:x="264" fg:w="1"/><text x="21.4038%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.1538%" y="613" width="0.0801%" height="15" fill="rgb(214,63,13)" fg:x="264" fg:w="1"/><text x="21.4038%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.1538%" y="597" width="0.0801%" height="15" fill="rgb(253,113,46)" fg:x="264" fg:w="1"/><text x="21.4038%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.1538%" y="581" width="0.0801%" height="15" fill="rgb(237,103,34)" fg:x="264" fg:w="1"/><text x="21.4038%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.1538%" y="565" width="0.0801%" height="15" fill="rgb(223,38,25)" fg:x="264" fg:w="1"/><text x="21.4038%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.1538%" y="549" width="0.0801%" height="15" fill="rgb(251,32,32)" fg:x="264" fg:w="1"/><text x="21.4038%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.1538%" y="533" width="0.0801%" height="15" fill="rgb(228,65,22)" fg:x="264" fg:w="1"/><text x="21.4038%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.1538%" y="517" width="0.0801%" height="15" fill="rgb(205,11,46)" fg:x="264" fg:w="1"/><text x="21.4038%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.1538%" y="501" width="0.0801%" height="15" fill="rgb(220,35,2)" fg:x="264" fg:w="1"/><text x="21.4038%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.1538%" y="485" width="0.0801%" height="15" fill="rgb(217,151,17)" fg:x="264" fg:w="1"/><text x="21.4038%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1538%" y="469" width="0.0801%" height="15" fill="rgb(243,227,35)" fg:x="264" fg:w="1"/><text x="21.4038%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.9936%" y="725" width="0.3205%" height="15" fill="rgb(214,0,34)" fg:x="262" fg:w="4"/><text x="21.2436%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="21.0737%" y="709" width="0.2404%" height="15" fill="rgb(209,42,37)" fg:x="263" fg:w="3"/><text x="21.3237%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.2340%" y="693" width="0.0801%" height="15" fill="rgb(251,176,30)" fg:x="265" fg:w="1"/><text x="21.4840%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2340%" y="677" width="0.0801%" height="15" fill="rgb(223,64,40)" fg:x="265" fg:w="1"/><text x="21.4840%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.2340%" y="661" width="0.0801%" height="15" fill="rgb(227,180,23)" fg:x="265" fg:w="1"/><text x="21.4840%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2340%" y="645" width="0.0801%" height="15" fill="rgb(220,137,31)" fg:x="265" fg:w="1"/><text x="21.4840%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.2340%" y="629" width="0.0801%" height="15" fill="rgb(245,124,25)" fg:x="265" fg:w="1"/><text x="21.4840%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.2340%" y="613" width="0.0801%" height="15" fill="rgb(217,157,5)" fg:x="265" fg:w="1"/><text x="21.4840%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.3141%" y="661" width="0.0801%" height="15" fill="rgb(225,59,2)" fg:x="266" fg:w="1"/><text x="21.5641%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3141%" y="645" width="0.0801%" height="15" fill="rgb(220,182,9)" fg:x="266" fg:w="1"/><text x="21.5641%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="20.9936%" y="757" width="0.4808%" height="15" fill="rgb(249,54,24)" fg:x="262" fg:w="6"/><text x="21.2436%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="20.9936%" y="741" width="0.4808%" height="15" fill="rgb(216,89,17)" fg:x="262" fg:w="6"/><text x="21.2436%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="21.3141%" y="725" width="0.1603%" height="15" fill="rgb(245,20,45)" fg:x="266" fg:w="2"/><text x="21.5641%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.3141%" y="709" width="0.1603%" height="15" fill="rgb(230,83,14)" fg:x="266" fg:w="2"/><text x="21.5641%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.3141%" y="693" width="0.1603%" height="15" fill="rgb(246,109,11)" fg:x="266" fg:w="2"/><text x="21.5641%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.3141%" y="677" width="0.1603%" height="15" fill="rgb(235,85,23)" fg:x="266" fg:w="2"/><text x="21.5641%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.3942%" y="661" width="0.0801%" height="15" fill="rgb(215,101,36)" fg:x="267" fg:w="1"/><text x="21.6442%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.3942%" y="645" width="0.0801%" height="15" fill="rgb(228,140,31)" fg:x="267" fg:w="1"/><text x="21.6442%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.3942%" y="629" width="0.0801%" height="15" fill="rgb(234,162,37)" fg:x="267" fg:w="1"/><text x="21.6442%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.3942%" y="613" width="0.0801%" height="15" fill="rgb(221,0,24)" fg:x="267" fg:w="1"/><text x="21.6442%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="21.4744%" y="757" width="0.0801%" height="15" fill="rgb(230,161,41)" fg:x="268" fg:w="1"/><text x="21.7244%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.4744%" y="741" width="0.0801%" height="15" fill="rgb(224,46,24)" fg:x="268" fg:w="1"/><text x="21.7244%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.4744%" y="725" width="0.0801%" height="15" fill="rgb(205,59,32)" fg:x="268" fg:w="1"/><text x="21.7244%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.4744%" y="709" width="0.0801%" height="15" fill="rgb(239,31,20)" fg:x="268" fg:w="1"/><text x="21.7244%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.5545%" y="741" width="0.0801%" height="15" fill="rgb(233,149,44)" fg:x="269" fg:w="1"/><text x="21.8045%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="21.6346%" y="709" width="0.2404%" height="15" fill="rgb(243,47,26)" fg:x="270" fg:w="3"/><text x="21.8846%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.7147%" y="693" width="0.1603%" height="15" fill="rgb(233,107,5)" fg:x="271" fg:w="2"/><text x="21.9647%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.7147%" y="677" width="0.1603%" height="15" fill="rgb(248,140,33)" fg:x="271" fg:w="2"/><text x="21.9647%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.7147%" y="661" width="0.1603%" height="15" fill="rgb(228,178,19)" fg:x="271" fg:w="2"/><text x="21.9647%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="21.7147%" y="645" width="0.1603%" height="15" fill="rgb(224,39,49)" fg:x="271" fg:w="2"/><text x="21.9647%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.7147%" y="629" width="0.1603%" height="15" fill="rgb(246,56,47)" fg:x="271" fg:w="2"/><text x="21.9647%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.7147%" y="613" width="0.1603%" height="15" fill="rgb(220,73,27)" fg:x="271" fg:w="2"/><text x="21.9647%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="21.7147%" y="597" width="0.1603%" height="15" fill="rgb(239,112,21)" fg:x="271" fg:w="2"/><text x="21.9647%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="21.6346%" y="741" width="0.3205%" height="15" fill="rgb(253,14,51)" fg:x="270" fg:w="4"/><text x="21.8846%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="21.6346%" y="725" width="0.3205%" height="15" fill="rgb(215,58,12)" fg:x="270" fg:w="4"/><text x="21.8846%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="21.8750%" y="709" width="0.0801%" height="15" fill="rgb(207,181,19)" fg:x="273" fg:w="1"/><text x="22.1250%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.8750%" y="693" width="0.0801%" height="15" fill="rgb(211,214,34)" fg:x="273" fg:w="1"/><text x="22.1250%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.8750%" y="677" width="0.0801%" height="15" fill="rgb(243,124,39)" fg:x="273" fg:w="1"/><text x="22.1250%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8750%" y="661" width="0.0801%" height="15" fill="rgb(248,135,21)" fg:x="273" fg:w="1"/><text x="22.1250%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.8750%" y="645" width="0.0801%" height="15" fill="rgb(245,218,3)" fg:x="273" fg:w="1"/><text x="22.1250%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8750%" y="629" width="0.0801%" height="15" fill="rgb(225,144,22)" fg:x="273" fg:w="1"/><text x="22.1250%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.8750%" y="613" width="0.0801%" height="15" fill="rgb(250,90,15)" fg:x="273" fg:w="1"/><text x="22.1250%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8750%" y="597" width="0.0801%" height="15" fill="rgb(224,64,29)" fg:x="273" fg:w="1"/><text x="22.1250%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (23 samples, 1.84%)</title><rect x="20.2724%" y="789" width="1.8429%" height="15" fill="rgb(217,50,47)" fg:x="253" fg:w="23"/><text x="20.5224%" y="799.50">p..</text></g><g><title>plugins_core::tools::set_container (15 samples, 1.20%)</title><rect x="20.9135%" y="773" width="1.2019%" height="15" fill="rgb(231,159,47)" fg:x="261" fg:w="15"/><text x="21.1635%" y="783.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="21.5545%" y="757" width="0.5609%" height="15" fill="rgb(213,89,29)" fg:x="269" fg:w="7"/><text x="21.8045%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="21.9551%" y="741" width="0.1603%" height="15" fill="rgb(243,90,23)" fg:x="274" fg:w="2"/><text x="22.2051%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.9551%" y="725" width="0.1603%" height="15" fill="rgb(213,21,6)" fg:x="274" fg:w="2"/><text x="22.2051%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="21.9551%" y="709" width="0.1603%" height="15" fill="rgb(237,139,17)" fg:x="274" fg:w="2"/><text x="22.2051%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="21.9551%" y="693" width="0.1603%" height="15" fill="rgb(250,147,17)" fg:x="274" fg:w="2"/><text x="22.2051%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.0353%" y="677" width="0.0801%" height="15" fill="rgb(212,208,42)" fg:x="275" fg:w="1"/><text x="22.2853%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.0353%" y="661" width="0.0801%" height="15" fill="rgb(215,229,40)" fg:x="275" fg:w="1"/><text x="22.2853%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.0353%" y="645" width="0.0801%" height="15" fill="rgb(206,204,1)" fg:x="275" fg:w="1"/><text x="22.2853%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.0353%" y="629" width="0.0801%" height="15" fill="rgb(230,62,32)" fg:x="275" fg:w="1"/><text x="22.2853%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="22.1154%" y="725" width="0.3205%" height="15" fill="rgb(223,22,42)" fg:x="276" fg:w="4"/><text x="22.3654%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.2756%" y="709" width="0.1603%" height="15" fill="rgb(244,6,23)" fg:x="278" fg:w="2"/><text x="22.5256%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.2756%" y="693" width="0.1603%" height="15" fill="rgb(240,221,42)" fg:x="278" fg:w="2"/><text x="22.5256%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3558%" y="677" width="0.0801%" height="15" fill="rgb(222,74,7)" fg:x="279" fg:w="1"/><text x="22.6058%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="22.1154%" y="789" width="0.4006%" height="15" fill="rgb(227,191,38)" fg:x="276" fg:w="5"/><text x="22.3654%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="22.1154%" y="773" width="0.4006%" height="15" fill="rgb(227,89,34)" fg:x="276" fg:w="5"/><text x="22.3654%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="22.1154%" y="757" width="0.4006%" height="15" fill="rgb(215,153,25)" fg:x="276" fg:w="5"/><text x="22.3654%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="22.1154%" y="741" width="0.4006%" height="15" fill="rgb(215,153,46)" fg:x="276" fg:w="5"/><text x="22.3654%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4359%" y="725" width="0.0801%" height="15" fill="rgb(242,38,52)" fg:x="280" fg:w="1"/><text x="22.6859%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4359%" y="709" width="0.0801%" height="15" fill="rgb(218,112,4)" fg:x="280" fg:w="1"/><text x="22.6859%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.4359%" y="693" width="0.0801%" height="15" fill="rgb(231,210,31)" fg:x="280" fg:w="1"/><text x="22.6859%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4359%" y="677" width="0.0801%" height="15" fill="rgb(245,223,36)" fg:x="280" fg:w="1"/><text x="22.6859%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4359%" y="661" width="0.0801%" height="15" fill="rgb(246,41,2)" fg:x="280" fg:w="1"/><text x="22.6859%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4359%" y="645" width="0.0801%" height="15" fill="rgb(227,51,31)" fg:x="280" fg:w="1"/><text x="22.6859%" y="655.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="22.5160%" y="757" width="0.1603%" height="15" fill="rgb(222,95,26)" fg:x="281" fg:w="2"/><text x="22.7660%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="22.5160%" y="741" width="0.1603%" height="15" fill="rgb(224,190,1)" fg:x="281" fg:w="2"/><text x="22.7660%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="22.5160%" y="725" width="0.1603%" height="15" fill="rgb(209,90,42)" fg:x="281" fg:w="2"/><text x="22.7660%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.5160%" y="709" width="0.1603%" height="15" fill="rgb(232,225,50)" fg:x="281" fg:w="2"/><text x="22.7660%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="22.5160%" y="693" width="0.1603%" height="15" fill="rgb(239,89,47)" fg:x="281" fg:w="2"/><text x="22.7660%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="22.5160%" y="677" width="0.1603%" height="15" fill="rgb(230,212,50)" fg:x="281" fg:w="2"/><text x="22.7660%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.5160%" y="661" width="0.1603%" height="15" fill="rgb(252,1,27)" fg:x="281" fg:w="2"/><text x="22.7660%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5962%" y="645" width="0.0801%" height="15" fill="rgb(237,179,41)" fg:x="282" fg:w="1"/><text x="22.8462%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6763%" y="741" width="0.0801%" height="15" fill="rgb(214,151,37)" fg:x="283" fg:w="1"/><text x="22.9263%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="22.5160%" y="789" width="0.3205%" height="15" fill="rgb(211,74,11)" fg:x="281" fg:w="4"/><text x="22.7660%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="22.5160%" y="773" width="0.3205%" height="15" fill="rgb(242,21,21)" fg:x="281" fg:w="4"/><text x="22.7660%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.6763%" y="757" width="0.1603%" height="15" fill="rgb(226,106,43)" fg:x="283" fg:w="2"/><text x="22.9263%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7564%" y="741" width="0.0801%" height="15" fill="rgb(229,162,39)" fg:x="284" fg:w="1"/><text x="23.0064%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7564%" y="725" width="0.0801%" height="15" fill="rgb(228,159,25)" fg:x="284" fg:w="1"/><text x="23.0064%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.7564%" y="709" width="0.0801%" height="15" fill="rgb(237,32,23)" fg:x="284" fg:w="1"/><text x="23.0064%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7564%" y="693" width="0.0801%" height="15" fill="rgb(212,35,32)" fg:x="284" fg:w="1"/><text x="23.0064%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="22.8365%" y="757" width="0.1603%" height="15" fill="rgb(215,199,1)" fg:x="285" fg:w="2"/><text x="23.0865%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="22.8365%" y="741" width="0.1603%" height="15" fill="rgb(215,67,13)" fg:x="285" fg:w="2"/><text x="23.0865%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="22.8365%" y="725" width="0.1603%" height="15" fill="rgb(216,20,47)" fg:x="285" fg:w="2"/><text x="23.0865%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="22.8365%" y="709" width="0.1603%" height="15" fill="rgb(249,183,48)" fg:x="285" fg:w="2"/><text x="23.0865%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="22.8365%" y="693" width="0.1603%" height="15" fill="rgb(208,86,37)" fg:x="285" fg:w="2"/><text x="23.0865%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="22.8365%" y="677" width="0.1603%" height="15" fill="rgb(251,192,7)" fg:x="285" fg:w="2"/><text x="23.0865%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="22.8365%" y="661" width="0.1603%" height="15" fill="rgb(234,196,3)" fg:x="285" fg:w="2"/><text x="23.0865%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="22.8365%" y="645" width="0.1603%" height="15" fill="rgb(229,150,39)" fg:x="285" fg:w="2"/><text x="23.0865%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="22.8365%" y="629" width="0.1603%" height="15" fill="rgb(226,19,29)" fg:x="285" fg:w="2"/><text x="23.0865%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="22.8365%" y="613" width="0.1603%" height="15" fill="rgb(226,222,2)" fg:x="285" fg:w="2"/><text x="23.0865%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="22.8365%" y="597" width="0.1603%" height="15" fill="rgb(235,85,29)" fg:x="285" fg:w="2"/><text x="23.0865%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="22.8365%" y="581" width="0.1603%" height="15" fill="rgb(237,194,43)" fg:x="285" fg:w="2"/><text x="23.0865%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="22.8365%" y="565" width="0.1603%" height="15" fill="rgb(211,4,42)" fg:x="285" fg:w="2"/><text x="23.0865%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="22.8365%" y="549" width="0.1603%" height="15" fill="rgb(221,80,37)" fg:x="285" fg:w="2"/><text x="23.0865%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="22.8365%" y="533" width="0.1603%" height="15" fill="rgb(222,47,31)" fg:x="285" fg:w="2"/><text x="23.0865%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.9167%" y="517" width="0.0801%" height="15" fill="rgb(249,82,52)" fg:x="286" fg:w="1"/><text x="23.1667%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.9167%" y="501" width="0.0801%" height="15" fill="rgb(218,203,2)" fg:x="286" fg:w="1"/><text x="23.1667%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.9167%" y="485" width="0.0801%" height="15" fill="rgb(210,175,14)" fg:x="286" fg:w="1"/><text x="23.1667%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.9167%" y="469" width="0.0801%" height="15" fill="rgb(216,210,12)" fg:x="286" fg:w="1"/><text x="23.1667%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.9167%" y="453" width="0.0801%" height="15" fill="rgb(229,120,18)" fg:x="286" fg:w="1"/><text x="23.1667%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="22.9167%" y="437" width="0.0801%" height="15" fill="rgb(231,174,12)" fg:x="286" fg:w="1"/><text x="23.1667%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="22.9167%" y="421" width="0.0801%" height="15" fill="rgb(214,101,53)" fg:x="286" fg:w="1"/><text x="23.1667%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="22.9167%" y="405" width="0.0801%" height="15" fill="rgb(246,89,43)" fg:x="286" fg:w="1"/><text x="23.1667%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="22.9167%" y="389" width="0.0801%" height="15" fill="rgb(222,9,51)" fg:x="286" fg:w="1"/><text x="23.1667%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.9167%" y="373" width="0.0801%" height="15" fill="rgb(252,221,9)" fg:x="286" fg:w="1"/><text x="23.1667%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.9167%" y="357" width="0.0801%" height="15" fill="rgb(248,28,15)" fg:x="286" fg:w="1"/><text x="23.1667%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.9167%" y="341" width="0.0801%" height="15" fill="rgb(213,54,52)" fg:x="286" fg:w="1"/><text x="23.1667%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="22.9167%" y="325" width="0.0801%" height="15" fill="rgb(240,3,45)" fg:x="286" fg:w="1"/><text x="23.1667%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.9167%" y="309" width="0.0801%" height="15" fill="rgb(239,138,24)" fg:x="286" fg:w="1"/><text x="23.1667%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="22.9167%" y="293" width="0.0801%" height="15" fill="rgb(233,45,54)" fg:x="286" fg:w="1"/><text x="23.1667%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="22.9167%" y="277" width="0.0801%" height="15" fill="rgb(220,131,2)" fg:x="286" fg:w="1"/><text x="23.1667%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="22.9167%" y="261" width="0.0801%" height="15" fill="rgb(240,154,36)" fg:x="286" fg:w="1"/><text x="23.1667%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.9167%" y="245" width="0.0801%" height="15" fill="rgb(251,221,1)" fg:x="286" fg:w="1"/><text x="23.1667%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="22.9968%" y="741" width="0.0801%" height="15" fill="rgb(225,217,1)" fg:x="287" fg:w="1"/><text x="23.2468%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="23.0769%" y="661" width="0.0801%" height="15" fill="rgb(241,105,49)" fg:x="288" fg:w="1"/><text x="23.3269%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.0769%" y="645" width="0.0801%" height="15" fill="rgb(215,44,32)" fg:x="288" fg:w="1"/><text x="23.3269%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.0769%" y="629" width="0.0801%" height="15" fill="rgb(213,222,14)" fg:x="288" fg:w="1"/><text x="23.3269%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="22.9968%" y="757" width="0.2404%" height="15" fill="rgb(207,99,52)" fg:x="287" fg:w="3"/><text x="23.2468%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.0769%" y="741" width="0.1603%" height="15" fill="rgb(214,208,52)" fg:x="288" fg:w="2"/><text x="23.3269%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.0769%" y="725" width="0.1603%" height="15" fill="rgb(244,169,0)" fg:x="288" fg:w="2"/><text x="23.3269%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.0769%" y="709" width="0.1603%" height="15" fill="rgb(216,193,37)" fg:x="288" fg:w="2"/><text x="23.3269%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="23.0769%" y="693" width="0.1603%" height="15" fill="rgb(212,158,10)" fg:x="288" fg:w="2"/><text x="23.3269%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.0769%" y="677" width="0.1603%" height="15" fill="rgb(213,110,20)" fg:x="288" fg:w="2"/><text x="23.3269%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.1571%" y="661" width="0.0801%" height="15" fill="rgb(226,5,42)" fg:x="289" fg:w="1"/><text x="23.4071%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.1571%" y="645" width="0.0801%" height="15" fill="rgb(211,93,8)" fg:x="289" fg:w="1"/><text x="23.4071%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2372%" y="725" width="0.0801%" height="15" fill="rgb(240,208,12)" fg:x="290" fg:w="1"/><text x="23.4872%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2372%" y="709" width="0.0801%" height="15" fill="rgb(233,127,50)" fg:x="290" fg:w="1"/><text x="23.4872%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2372%" y="693" width="0.0801%" height="15" fill="rgb(227,199,53)" fg:x="290" fg:w="1"/><text x="23.4872%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="23.2372%" y="757" width="0.1603%" height="15" fill="rgb(235,199,10)" fg:x="290" fg:w="2"/><text x="23.4872%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.2372%" y="741" width="0.1603%" height="15" fill="rgb(228,148,35)" fg:x="290" fg:w="2"/><text x="23.4872%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="23.3173%" y="725" width="0.0801%" height="15" fill="rgb(217,87,19)" fg:x="291" fg:w="1"/><text x="23.5673%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.3173%" y="709" width="0.0801%" height="15" fill="rgb(239,9,32)" fg:x="291" fg:w="1"/><text x="23.5673%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.3173%" y="693" width="0.0801%" height="15" fill="rgb(229,101,29)" fg:x="291" fg:w="1"/><text x="23.5673%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3974%" y="677" width="0.0801%" height="15" fill="rgb(208,143,26)" fg:x="292" fg:w="1"/><text x="23.6474%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.3974%" y="661" width="0.0801%" height="15" fill="rgb(214,10,2)" fg:x="292" fg:w="1"/><text x="23.6474%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3974%" y="645" width="0.0801%" height="15" fill="rgb(254,203,30)" fg:x="292" fg:w="1"/><text x="23.6474%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.3974%" y="629" width="0.0801%" height="15" fill="rgb(242,45,3)" fg:x="292" fg:w="1"/><text x="23.6474%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.4776%" y="613" width="0.0801%" height="15" fill="rgb(209,146,51)" fg:x="293" fg:w="1"/><text x="23.7276%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="23.3974%" y="709" width="0.2404%" height="15" fill="rgb(222,80,5)" fg:x="292" fg:w="3"/><text x="23.6474%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="23.3974%" y="693" width="0.2404%" height="15" fill="rgb(252,80,35)" fg:x="292" fg:w="3"/><text x="23.6474%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="23.4776%" y="677" width="0.1603%" height="15" fill="rgb(246,125,28)" fg:x="293" fg:w="2"/><text x="23.7276%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.4776%" y="661" width="0.1603%" height="15" fill="rgb(224,143,51)" fg:x="293" fg:w="2"/><text x="23.7276%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="23.4776%" y="645" width="0.1603%" height="15" fill="rgb(205,24,17)" fg:x="293" fg:w="2"/><text x="23.7276%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="23.4776%" y="629" width="0.1603%" height="15" fill="rgb(253,128,30)" fg:x="293" fg:w="2"/><text x="23.7276%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5577%" y="613" width="0.0801%" height="15" fill="rgb(214,153,25)" fg:x="294" fg:w="1"/><text x="23.8077%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5577%" y="597" width="0.0801%" height="15" fill="rgb(214,4,28)" fg:x="294" fg:w="1"/><text x="23.8077%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="22.8365%" y="773" width="0.8814%" height="15" fill="rgb(235,179,52)" fg:x="285" fg:w="11"/><text x="23.0865%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="23.3974%" y="757" width="0.3205%" height="15" fill="rgb(233,27,42)" fg:x="292" fg:w="4"/><text x="23.6474%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="23.3974%" y="741" width="0.3205%" height="15" fill="rgb(238,35,25)" fg:x="292" fg:w="4"/><text x="23.6474%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="23.3974%" y="725" width="0.3205%" height="15" fill="rgb(227,44,31)" fg:x="292" fg:w="4"/><text x="23.6474%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.6378%" y="709" width="0.0801%" height="15" fill="rgb(232,201,13)" fg:x="295" fg:w="1"/><text x="23.8878%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.6378%" y="693" width="0.0801%" height="15" fill="rgb(224,172,52)" fg:x="295" fg:w="1"/><text x="23.8878%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6378%" y="677" width="0.0801%" height="15" fill="rgb(214,27,26)" fg:x="295" fg:w="1"/><text x="23.8878%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.6378%" y="661" width="0.0801%" height="15" fill="rgb(210,185,52)" fg:x="295" fg:w="1"/><text x="23.8878%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6378%" y="645" width="0.0801%" height="15" fill="rgb(249,59,32)" fg:x="295" fg:w="1"/><text x="23.8878%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7179%" y="725" width="0.0801%" height="15" fill="rgb(242,209,18)" fg:x="296" fg:w="1"/><text x="23.9679%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7179%" y="709" width="0.0801%" height="15" fill="rgb(229,0,18)" fg:x="296" fg:w="1"/><text x="23.9679%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.7179%" y="693" width="0.0801%" height="15" fill="rgb(217,138,29)" fg:x="296" fg:w="1"/><text x="23.9679%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.7179%" y="677" width="0.0801%" height="15" fill="rgb(215,72,42)" fg:x="296" fg:w="1"/><text x="23.9679%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.7179%" y="661" width="0.0801%" height="15" fill="rgb(254,115,11)" fg:x="296" fg:w="1"/><text x="23.9679%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.7179%" y="645" width="0.0801%" height="15" fill="rgb(205,133,39)" fg:x="296" fg:w="1"/><text x="23.9679%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.7179%" y="629" width="0.0801%" height="15" fill="rgb(211,36,27)" fg:x="296" fg:w="1"/><text x="23.9679%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.7981%" y="661" width="0.0801%" height="15" fill="rgb(221,48,10)" fg:x="297" fg:w="1"/><text x="24.0481%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7981%" y="645" width="0.0801%" height="15" fill="rgb(230,172,50)" fg:x="297" fg:w="1"/><text x="24.0481%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7981%" y="629" width="0.0801%" height="15" fill="rgb(249,72,18)" fg:x="297" fg:w="1"/><text x="24.0481%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.7981%" y="613" width="0.0801%" height="15" fill="rgb(237,58,48)" fg:x="297" fg:w="1"/><text x="24.0481%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.7981%" y="597" width="0.0801%" height="15" fill="rgb(242,123,3)" fg:x="297" fg:w="1"/><text x="24.0481%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.7981%" y="581" width="0.0801%" height="15" fill="rgb(232,111,32)" fg:x="297" fg:w="1"/><text x="24.0481%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7981%" y="565" width="0.0801%" height="15" fill="rgb(229,108,3)" fg:x="297" fg:w="1"/><text x="24.0481%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7981%" y="549" width="0.0801%" height="15" fill="rgb(222,158,10)" fg:x="297" fg:w="1"/><text x="24.0481%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.7981%" y="533" width="0.0801%" height="15" fill="rgb(205,34,49)" fg:x="297" fg:w="1"/><text x="24.0481%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.7981%" y="517" width="0.0801%" height="15" fill="rgb(232,21,14)" fg:x="297" fg:w="1"/><text x="24.0481%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.7981%" y="501" width="0.0801%" height="15" fill="rgb(229,127,44)" fg:x="297" fg:w="1"/><text x="24.0481%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.7981%" y="485" width="0.0801%" height="15" fill="rgb(232,171,4)" fg:x="297" fg:w="1"/><text x="24.0481%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="23.7179%" y="757" width="0.2404%" height="15" fill="rgb(250,92,16)" fg:x="296" fg:w="3"/><text x="23.9679%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="23.7179%" y="741" width="0.2404%" height="15" fill="rgb(230,103,38)" fg:x="296" fg:w="3"/><text x="23.9679%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.7981%" y="725" width="0.1603%" height="15" fill="rgb(253,167,9)" fg:x="297" fg:w="2"/><text x="24.0481%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.7981%" y="709" width="0.1603%" height="15" fill="rgb(222,118,11)" fg:x="297" fg:w="2"/><text x="24.0481%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.7981%" y="693" width="0.1603%" height="15" fill="rgb(240,202,0)" fg:x="297" fg:w="2"/><text x="24.0481%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.7981%" y="677" width="0.1603%" height="15" fill="rgb(236,124,4)" fg:x="297" fg:w="2"/><text x="24.0481%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.8782%" y="661" width="0.0801%" height="15" fill="rgb(244,128,18)" fg:x="298" fg:w="1"/><text x="24.1282%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.8782%" y="645" width="0.0801%" height="15" fill="rgb(231,206,5)" fg:x="298" fg:w="1"/><text x="24.1282%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.8782%" y="629" width="0.0801%" height="15" fill="rgb(237,111,8)" fg:x="298" fg:w="1"/><text x="24.1282%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.8782%" y="613" width="0.0801%" height="15" fill="rgb(225,127,3)" fg:x="298" fg:w="1"/><text x="24.1282%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.8782%" y="597" width="0.0801%" height="15" fill="rgb(222,85,48)" fg:x="298" fg:w="1"/><text x="24.1282%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.8782%" y="581" width="0.0801%" height="15" fill="rgb(221,108,37)" fg:x="298" fg:w="1"/><text x="24.1282%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.8782%" y="565" width="0.0801%" height="15" fill="rgb(226,169,36)" fg:x="298" fg:w="1"/><text x="24.1282%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.8782%" y="549" width="0.0801%" height="15" fill="rgb(237,76,12)" fg:x="298" fg:w="1"/><text x="24.1282%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.8782%" y="533" width="0.0801%" height="15" fill="rgb(210,227,32)" fg:x="298" fg:w="1"/><text x="24.1282%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.8782%" y="517" width="0.0801%" height="15" fill="rgb(214,117,20)" fg:x="298" fg:w="1"/><text x="24.1282%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.8782%" y="501" width="0.0801%" height="15" fill="rgb(234,119,41)" fg:x="298" fg:w="1"/><text x="24.1282%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8782%" y="485" width="0.0801%" height="15" fill="rgb(230,130,47)" fg:x="298" fg:w="1"/><text x="24.1282%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0385%" y="709" width="0.0801%" height="15" fill="rgb(215,21,41)" fg:x="300" fg:w="1"/><text x="24.2885%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="23.9583%" y="741" width="0.2404%" height="15" fill="rgb(226,26,53)" fg:x="299" fg:w="3"/><text x="24.2083%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="23.9583%" y="725" width="0.2404%" height="15" fill="rgb(221,92,23)" fg:x="299" fg:w="3"/><text x="24.2083%" y="735.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="24.1186%" y="709" width="0.0801%" height="15" fill="rgb(213,156,21)" fg:x="301" fg:w="1"/><text x="24.3686%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.1186%" y="693" width="0.0801%" height="15" fill="rgb(254,166,29)" fg:x="301" fg:w="1"/><text x="24.3686%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1186%" y="677" width="0.0801%" height="15" fill="rgb(213,71,1)" fg:x="301" fg:w="1"/><text x="24.3686%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1186%" y="661" width="0.0801%" height="15" fill="rgb(245,8,13)" fg:x="301" fg:w="1"/><text x="24.3686%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1186%" y="645" width="0.0801%" height="15" fill="rgb(213,32,32)" fg:x="301" fg:w="1"/><text x="24.3686%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="23.9583%" y="757" width="0.4808%" height="15" fill="rgb(251,86,50)" fg:x="299" fg:w="6"/><text x="24.2083%" y="767.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (3 samples, 0.24%)</title><rect x="24.1987%" y="741" width="0.2404%" height="15" fill="rgb(252,92,41)" fg:x="302" fg:w="3"/><text x="24.4487%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.1987%" y="725" width="0.2404%" height="15" fill="rgb(234,70,35)" fg:x="302" fg:w="3"/><text x="24.4487%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="24.1987%" y="709" width="0.2404%" height="15" fill="rgb(210,157,19)" fg:x="302" fg:w="3"/><text x="24.4487%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.1987%" y="693" width="0.2404%" height="15" fill="rgb(206,20,45)" fg:x="302" fg:w="3"/><text x="24.4487%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3590%" y="677" width="0.0801%" height="15" fill="rgb(207,34,7)" fg:x="304" fg:w="1"/><text x="24.6090%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.4391%" y="677" width="0.1603%" height="15" fill="rgb(253,151,14)" fg:x="305" fg:w="2"/><text x="24.6891%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.4391%" y="661" width="0.1603%" height="15" fill="rgb(252,1,18)" fg:x="305" fg:w="2"/><text x="24.6891%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5192%" y="645" width="0.0801%" height="15" fill="rgb(214,77,52)" fg:x="306" fg:w="1"/><text x="24.7692%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5192%" y="629" width="0.0801%" height="15" fill="rgb(254,106,35)" fg:x="306" fg:w="1"/><text x="24.7692%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5192%" y="613" width="0.0801%" height="15" fill="rgb(212,67,40)" fg:x="306" fg:w="1"/><text x="24.7692%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.5192%" y="597" width="0.0801%" height="15" fill="rgb(228,76,23)" fg:x="306" fg:w="1"/><text x="24.7692%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.5192%" y="581" width="0.0801%" height="15" fill="rgb(250,198,5)" fg:x="306" fg:w="1"/><text x="24.7692%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.5192%" y="565" width="0.0801%" height="15" fill="rgb(209,20,25)" fg:x="306" fg:w="1"/><text x="24.7692%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5192%" y="549" width="0.0801%" height="15" fill="rgb(236,32,4)" fg:x="306" fg:w="1"/><text x="24.7692%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5192%" y="533" width="0.0801%" height="15" fill="rgb(215,31,6)" fg:x="306" fg:w="1"/><text x="24.7692%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.5192%" y="517" width="0.0801%" height="15" fill="rgb(207,186,49)" fg:x="306" fg:w="1"/><text x="24.7692%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.5192%" y="501" width="0.0801%" height="15" fill="rgb(211,212,49)" fg:x="306" fg:w="1"/><text x="24.7692%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.5192%" y="485" width="0.0801%" height="15" fill="rgb(229,51,41)" fg:x="306" fg:w="1"/><text x="24.7692%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.5192%" y="469" width="0.0801%" height="15" fill="rgb(205,225,36)" fg:x="306" fg:w="1"/><text x="24.7692%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5192%" y="453" width="0.0801%" height="15" fill="rgb(209,213,45)" fg:x="306" fg:w="1"/><text x="24.7692%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="24.4391%" y="709" width="0.2404%" height="15" fill="rgb(219,35,49)" fg:x="305" fg:w="3"/><text x="24.6891%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="24.4391%" y="693" width="0.2404%" height="15" fill="rgb(215,205,22)" fg:x="305" fg:w="3"/><text x="24.6891%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.5994%" y="677" width="0.0801%" height="15" fill="rgb(248,204,34)" fg:x="307" fg:w="1"/><text x="24.8494%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.5994%" y="661" width="0.0801%" height="15" fill="rgb(219,223,31)" fg:x="307" fg:w="1"/><text x="24.8494%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (150 samples, 12.02%)</title><rect x="12.8205%" y="805" width="12.0192%" height="15" fill="rgb(236,14,8)" fg:x="160" fg:w="150"/><text x="13.0705%" y="815.50">plugins_core::buil..</text></g><g><title>plugins_core::build::Build::occupying (25 samples, 2.00%)</title><rect x="22.8365%" y="789" width="2.0032%" height="15" fill="rgb(243,129,23)" fg:x="285" fg:w="25"/><text x="23.0865%" y="799.50">p..</text></g><g><title>plugins_core::tools::set_occupying (14 samples, 1.12%)</title><rect x="23.7179%" y="773" width="1.1218%" height="15" fill="rgb(205,204,5)" fg:x="296" fg:w="14"/><text x="23.9679%" y="783.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (5 samples, 0.40%)</title><rect x="24.4391%" y="757" width="0.4006%" height="15" fill="rgb(244,115,32)" fg:x="305" fg:w="5"/><text x="24.6891%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="24.4391%" y="741" width="0.4006%" height="15" fill="rgb(229,123,14)" fg:x="305" fg:w="5"/><text x="24.6891%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="24.4391%" y="725" width="0.4006%" height="15" fill="rgb(250,85,1)" fg:x="305" fg:w="5"/><text x="24.6891%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="24.6795%" y="709" width="0.1603%" height="15" fill="rgb(209,141,54)" fg:x="308" fg:w="2"/><text x="24.9295%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.6795%" y="693" width="0.1603%" height="15" fill="rgb(244,107,39)" fg:x="308" fg:w="2"/><text x="24.9295%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.6795%" y="677" width="0.1603%" height="15" fill="rgb(230,68,26)" fg:x="308" fg:w="2"/><text x="24.9295%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.6795%" y="661" width="0.1603%" height="15" fill="rgb(220,178,33)" fg:x="308" fg:w="2"/><text x="24.9295%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.6795%" y="645" width="0.1603%" height="15" fill="rgb(220,77,53)" fg:x="308" fg:w="2"/><text x="24.9295%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7596%" y="629" width="0.0801%" height="15" fill="rgb(224,108,19)" fg:x="309" fg:w="1"/><text x="25.0096%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7596%" y="613" width="0.0801%" height="15" fill="rgb(223,203,27)" fg:x="309" fg:w="1"/><text x="25.0096%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.7596%" y="597" width="0.0801%" height="15" fill="rgb(211,32,46)" fg:x="309" fg:w="1"/><text x="25.0096%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.7596%" y="581" width="0.0801%" height="15" fill="rgb(240,101,27)" fg:x="309" fg:w="1"/><text x="25.0096%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.7596%" y="565" width="0.0801%" height="15" fill="rgb(217,210,11)" fg:x="309" fg:w="1"/><text x="25.0096%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7596%" y="549" width="0.0801%" height="15" fill="rgb(236,130,21)" fg:x="309" fg:w="1"/><text x="25.0096%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7596%" y="533" width="0.0801%" height="15" fill="rgb(250,136,8)" fg:x="309" fg:w="1"/><text x="25.0096%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.7596%" y="517" width="0.0801%" height="15" fill="rgb(243,223,36)" fg:x="309" fg:w="1"/><text x="25.0096%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.7596%" y="501" width="0.0801%" height="15" fill="rgb(246,184,8)" fg:x="309" fg:w="1"/><text x="25.0096%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.7596%" y="485" width="0.0801%" height="15" fill="rgb(222,158,36)" fg:x="309" fg:w="1"/><text x="25.0096%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.7596%" y="469" width="0.0801%" height="15" fill="rgb(210,220,19)" fg:x="309" fg:w="1"/><text x="25.0096%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7596%" y="453" width="0.0801%" height="15" fill="rgb(246,44,38)" fg:x="309" fg:w="1"/><text x="25.0096%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="24.8397%" y="757" width="0.0801%" height="15" fill="rgb(246,186,14)" fg:x="310" fg:w="1"/><text x="25.0897%" y="767.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="24.8397%" y="741" width="0.0801%" height="15" fill="rgb(233,193,20)" fg:x="310" fg:w="1"/><text x="25.0897%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="24.8397%" y="773" width="0.1603%" height="15" fill="rgb(215,60,5)" fg:x="310" fg:w="2"/><text x="25.0897%" y="783.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="24.9199%" y="757" width="0.0801%" height="15" fill="rgb(207,128,10)" fg:x="311" fg:w="1"/><text x="25.1699%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="24.9199%" y="741" width="0.0801%" height="15" fill="rgb(238,84,54)" fg:x="311" fg:w="1"/><text x="25.1699%" y="751.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="24.8397%" y="805" width="0.2404%" height="15" fill="rgb(213,130,11)" fg:x="310" fg:w="3"/><text x="25.0897%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="24.8397%" y="789" width="0.2404%" height="15" fill="rgb(235,62,9)" fg:x="310" fg:w="3"/><text x="25.0897%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="25.0000%" y="773" width="0.0801%" height="15" fill="rgb(222,64,24)" fg:x="312" fg:w="1"/><text x="25.2500%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0000%" y="757" width="0.0801%" height="15" fill="rgb(238,193,42)" fg:x="312" fg:w="1"/><text x="25.2500%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0000%" y="741" width="0.0801%" height="15" fill="rgb(243,204,46)" fg:x="312" fg:w="1"/><text x="25.2500%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.0000%" y="725" width="0.0801%" height="15" fill="rgb(243,196,11)" fg:x="312" fg:w="1"/><text x="25.2500%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.0000%" y="709" width="0.0801%" height="15" fill="rgb(232,77,22)" fg:x="312" fg:w="1"/><text x="25.2500%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.0000%" y="693" width="0.0801%" height="15" fill="rgb(215,80,25)" fg:x="312" fg:w="1"/><text x="25.2500%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0000%" y="677" width="0.0801%" height="15" fill="rgb(210,173,7)" fg:x="312" fg:w="1"/><text x="25.2500%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0000%" y="661" width="0.0801%" height="15" fill="rgb(207,101,10)" fg:x="312" fg:w="1"/><text x="25.2500%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.0000%" y="645" width="0.0801%" height="15" fill="rgb(246,57,48)" fg:x="312" fg:w="1"/><text x="25.2500%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.0000%" y="629" width="0.0801%" height="15" fill="rgb(236,184,40)" fg:x="312" fg:w="1"/><text x="25.2500%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.0000%" y="613" width="0.0801%" height="15" fill="rgb(210,205,13)" fg:x="312" fg:w="1"/><text x="25.2500%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.0000%" y="597" width="0.0801%" height="15" fill="rgb(231,129,42)" fg:x="312" fg:w="1"/><text x="25.2500%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0000%" y="581" width="0.0801%" height="15" fill="rgb(220,229,54)" fg:x="312" fg:w="1"/><text x="25.2500%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="25.1603%" y="757" width="0.0801%" height="15" fill="rgb(230,192,26)" fg:x="314" fg:w="1"/><text x="25.4103%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="25.1603%" y="741" width="0.0801%" height="15" fill="rgb(253,18,30)" fg:x="314" fg:w="1"/><text x="25.4103%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.1603%" y="725" width="0.0801%" height="15" fill="rgb(216,62,53)" fg:x="314" fg:w="1"/><text x="25.4103%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.1603%" y="709" width="0.0801%" height="15" fill="rgb(230,79,29)" fg:x="314" fg:w="1"/><text x="25.4103%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.1603%" y="693" width="0.0801%" height="15" fill="rgb(242,26,26)" fg:x="314" fg:w="1"/><text x="25.4103%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.1603%" y="677" width="0.0801%" height="15" fill="rgb(227,125,21)" fg:x="314" fg:w="1"/><text x="25.4103%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.1603%" y="661" width="0.0801%" height="15" fill="rgb(229,93,26)" fg:x="314" fg:w="1"/><text x="25.4103%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.1603%" y="645" width="0.0801%" height="15" fill="rgb(227,228,8)" fg:x="314" fg:w="1"/><text x="25.4103%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.1603%" y="629" width="0.0801%" height="15" fill="rgb(233,56,0)" fg:x="314" fg:w="1"/><text x="25.4103%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.1603%" y="613" width="0.0801%" height="15" fill="rgb(225,185,17)" fg:x="314" fg:w="1"/><text x="25.4103%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.1603%" y="597" width="0.0801%" height="15" fill="rgb(238,202,30)" fg:x="314" fg:w="1"/><text x="25.4103%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.1603%" y="581" width="0.0801%" height="15" fill="rgb(236,60,13)" fg:x="314" fg:w="1"/><text x="25.4103%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.1603%" y="565" width="0.0801%" height="15" fill="rgb(244,92,0)" fg:x="314" fg:w="1"/><text x="25.4103%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1603%" y="549" width="0.0801%" height="15" fill="rgb(225,57,15)" fg:x="314" fg:w="1"/><text x="25.4103%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1603%" y="533" width="0.0801%" height="15" fill="rgb(228,5,28)" fg:x="314" fg:w="1"/><text x="25.4103%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.1603%" y="517" width="0.0801%" height="15" fill="rgb(252,34,51)" fg:x="314" fg:w="1"/><text x="25.4103%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.1603%" y="501" width="0.0801%" height="15" fill="rgb(235,58,7)" fg:x="314" fg:w="1"/><text x="25.4103%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.1603%" y="485" width="0.0801%" height="15" fill="rgb(250,132,20)" fg:x="314" fg:w="1"/><text x="25.4103%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.1603%" y="469" width="0.0801%" height="15" fill="rgb(217,164,0)" fg:x="314" fg:w="1"/><text x="25.4103%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.1603%" y="453" width="0.0801%" height="15" fill="rgb(208,220,35)" fg:x="314" fg:w="1"/><text x="25.4103%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.1603%" y="437" width="0.0801%" height="15" fill="rgb(227,42,51)" fg:x="314" fg:w="1"/><text x="25.4103%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.1603%" y="421" width="0.0801%" height="15" fill="rgb(225,146,38)" fg:x="314" fg:w="1"/><text x="25.4103%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="25.1603%" y="405" width="0.0801%" height="15" fill="rgb(252,108,37)" fg:x="314" fg:w="1"/><text x="25.4103%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.1603%" y="389" width="0.0801%" height="15" fill="rgb(244,101,24)" fg:x="314" fg:w="1"/><text x="25.4103%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1603%" y="373" width="0.0801%" height="15" fill="rgb(213,161,50)" fg:x="314" fg:w="1"/><text x="25.4103%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.2404%" y="757" width="0.0801%" height="15" fill="rgb(248,159,19)" fg:x="315" fg:w="1"/><text x="25.4904%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.2404%" y="741" width="0.0801%" height="15" fill="rgb(233,179,15)" fg:x="315" fg:w="1"/><text x="25.4904%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.2404%" y="725" width="0.0801%" height="15" fill="rgb(248,178,3)" fg:x="315" fg:w="1"/><text x="25.4904%" y="735.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="25.3205%" y="757" width="0.0801%" height="15" fill="rgb(245,190,41)" fg:x="316" fg:w="1"/><text x="25.5705%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.3205%" y="741" width="0.0801%" height="15" fill="rgb(218,151,19)" fg:x="316" fg:w="1"/><text x="25.5705%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="25.4006%" y="725" width="0.0801%" height="15" fill="rgb(245,25,44)" fg:x="317" fg:w="1"/><text x="25.6506%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.4006%" y="709" width="0.0801%" height="15" fill="rgb(235,172,47)" fg:x="317" fg:w="1"/><text x="25.6506%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4006%" y="693" width="0.0801%" height="15" fill="rgb(246,33,12)" fg:x="317" fg:w="1"/><text x="25.6506%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4006%" y="677" width="0.0801%" height="15" fill="rgb(214,124,7)" fg:x="317" fg:w="1"/><text x="25.6506%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.4006%" y="661" width="0.0801%" height="15" fill="rgb(246,186,18)" fg:x="317" fg:w="1"/><text x="25.6506%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4006%" y="645" width="0.0801%" height="15" fill="rgb(231,94,1)" fg:x="317" fg:w="1"/><text x="25.6506%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.4006%" y="629" width="0.0801%" height="15" fill="rgb(208,33,48)" fg:x="317" fg:w="1"/><text x="25.6506%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.4006%" y="613" width="0.0801%" height="15" fill="rgb(208,195,44)" fg:x="317" fg:w="1"/><text x="25.6506%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.4006%" y="597" width="0.0801%" height="15" fill="rgb(226,13,52)" fg:x="317" fg:w="1"/><text x="25.6506%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="25.4006%" y="741" width="0.1603%" height="15" fill="rgb(217,219,45)" fg:x="317" fg:w="2"/><text x="25.6506%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="25.4808%" y="725" width="0.0801%" height="15" fill="rgb(223,45,25)" fg:x="318" fg:w="1"/><text x="25.7308%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="25.1603%" y="773" width="0.4808%" height="15" fill="rgb(241,163,0)" fg:x="314" fg:w="6"/><text x="25.4103%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="25.4006%" y="757" width="0.2404%" height="15" fill="rgb(216,68,47)" fg:x="317" fg:w="3"/><text x="25.6506%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="25.5609%" y="741" width="0.0801%" height="15" fill="rgb(236,119,45)" fg:x="319" fg:w="1"/><text x="25.8109%" y="751.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.64%)</title><rect x="25.0801%" y="805" width="0.6410%" height="15" fill="rgb(209,188,24)" fg:x="313" fg:w="8"/><text x="25.3301%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="25.0801%" y="789" width="0.6410%" height="15" fill="rgb(221,118,7)" fg:x="313" fg:w="8"/><text x="25.3301%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="25.6410%" y="773" width="0.0801%" height="15" fill="rgb(213,148,43)" fg:x="320" fg:w="1"/><text x="25.8910%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="25.6410%" y="757" width="0.0801%" height="15" fill="rgb(231,21,43)" fg:x="320" fg:w="1"/><text x="25.8910%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="25.6410%" y="741" width="0.0801%" height="15" fill="rgb(232,213,43)" fg:x="320" fg:w="1"/><text x="25.8910%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.6410%" y="725" width="0.0801%" height="15" fill="rgb(239,145,50)" fg:x="320" fg:w="1"/><text x="25.8910%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6410%" y="709" width="0.0801%" height="15" fill="rgb(222,131,18)" fg:x="320" fg:w="1"/><text x="25.8910%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6410%" y="693" width="0.0801%" height="15" fill="rgb(243,181,13)" fg:x="320" fg:w="1"/><text x="25.8910%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6410%" y="677" width="0.0801%" height="15" fill="rgb(212,74,41)" fg:x="320" fg:w="1"/><text x="25.8910%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.6410%" y="661" width="0.0801%" height="15" fill="rgb(237,143,34)" fg:x="320" fg:w="1"/><text x="25.8910%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.6410%" y="645" width="0.0801%" height="15" fill="rgb(228,139,0)" fg:x="320" fg:w="1"/><text x="25.8910%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.6410%" y="629" width="0.0801%" height="15" fill="rgb(227,214,11)" fg:x="320" fg:w="1"/><text x="25.8910%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.6410%" y="613" width="0.0801%" height="15" fill="rgb(228,118,39)" fg:x="320" fg:w="1"/><text x="25.8910%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.6410%" y="597" width="0.0801%" height="15" fill="rgb(207,117,22)" fg:x="320" fg:w="1"/><text x="25.8910%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.6410%" y="581" width="0.0801%" height="15" fill="rgb(225,91,8)" fg:x="320" fg:w="1"/><text x="25.8910%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.6410%" y="565" width="0.0801%" height="15" fill="rgb(230,219,48)" fg:x="320" fg:w="1"/><text x="25.8910%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.6410%" y="549" width="0.0801%" height="15" fill="rgb(244,0,23)" fg:x="320" fg:w="1"/><text x="25.8910%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.6410%" y="533" width="0.0801%" height="15" fill="rgb(206,212,23)" fg:x="320" fg:w="1"/><text x="25.8910%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.6410%" y="517" width="0.0801%" height="15" fill="rgb(254,62,10)" fg:x="320" fg:w="1"/><text x="25.8910%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="25.8013%" y="773" width="0.0801%" height="15" fill="rgb(236,58,8)" fg:x="322" fg:w="1"/><text x="26.0513%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="25.8013%" y="757" width="0.0801%" height="15" fill="rgb(232,212,17)" fg:x="322" fg:w="1"/><text x="26.0513%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.8013%" y="741" width="0.0801%" height="15" fill="rgb(206,132,9)" fg:x="322" fg:w="1"/><text x="26.0513%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.8013%" y="725" width="0.0801%" height="15" fill="rgb(234,97,28)" fg:x="322" fg:w="1"/><text x="26.0513%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.8013%" y="709" width="0.0801%" height="15" fill="rgb(254,144,9)" fg:x="322" fg:w="1"/><text x="26.0513%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.8013%" y="693" width="0.0801%" height="15" fill="rgb(244,204,43)" fg:x="322" fg:w="1"/><text x="26.0513%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.8013%" y="677" width="0.0801%" height="15" fill="rgb(248,177,16)" fg:x="322" fg:w="1"/><text x="26.0513%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.8013%" y="661" width="0.0801%" height="15" fill="rgb(219,110,15)" fg:x="322" fg:w="1"/><text x="26.0513%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.8013%" y="645" width="0.0801%" height="15" fill="rgb(212,203,25)" fg:x="322" fg:w="1"/><text x="26.0513%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.8013%" y="629" width="0.0801%" height="15" fill="rgb(205,50,1)" fg:x="322" fg:w="1"/><text x="26.0513%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.8013%" y="613" width="0.0801%" height="15" fill="rgb(222,152,41)" fg:x="322" fg:w="1"/><text x="26.0513%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.8013%" y="597" width="0.0801%" height="15" fill="rgb(236,83,3)" fg:x="322" fg:w="1"/><text x="26.0513%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.8013%" y="581" width="0.0801%" height="15" fill="rgb(214,30,54)" fg:x="322" fg:w="1"/><text x="26.0513%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.8013%" y="565" width="0.0801%" height="15" fill="rgb(250,117,31)" fg:x="322" fg:w="1"/><text x="26.0513%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.8013%" y="549" width="0.0801%" height="15" fill="rgb(228,77,14)" fg:x="322" fg:w="1"/><text x="26.0513%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.8013%" y="533" width="0.0801%" height="15" fill="rgb(241,3,28)" fg:x="322" fg:w="1"/><text x="26.0513%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.8013%" y="517" width="0.0801%" height="15" fill="rgb(221,175,52)" fg:x="322" fg:w="1"/><text x="26.0513%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.8013%" y="501" width="0.0801%" height="15" fill="rgb(237,91,6)" fg:x="322" fg:w="1"/><text x="26.0513%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.8013%" y="485" width="0.0801%" height="15" fill="rgb(246,46,42)" fg:x="322" fg:w="1"/><text x="26.0513%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.8013%" y="469" width="0.0801%" height="15" fill="rgb(235,199,0)" fg:x="322" fg:w="1"/><text x="26.0513%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.8013%" y="453" width="0.0801%" height="15" fill="rgb(224,44,40)" fg:x="322" fg:w="1"/><text x="26.0513%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.8013%" y="437" width="0.0801%" height="15" fill="rgb(209,24,35)" fg:x="322" fg:w="1"/><text x="26.0513%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="25.8013%" y="421" width="0.0801%" height="15" fill="rgb(244,46,22)" fg:x="322" fg:w="1"/><text x="26.0513%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.8013%" y="405" width="0.0801%" height="15" fill="rgb(235,99,8)" fg:x="322" fg:w="1"/><text x="26.0513%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.8013%" y="389" width="0.0801%" height="15" fill="rgb(218,127,36)" fg:x="322" fg:w="1"/><text x="26.0513%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.8814%" y="741" width="0.0801%" height="15" fill="rgb(238,47,46)" fg:x="323" fg:w="1"/><text x="26.1314%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.8814%" y="725" width="0.0801%" height="15" fill="rgb(233,65,17)" fg:x="323" fg:w="1"/><text x="26.1314%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="25.8814%" y="773" width="0.1603%" height="15" fill="rgb(239,22,33)" fg:x="323" fg:w="2"/><text x="26.1314%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.8814%" y="757" width="0.1603%" height="15" fill="rgb(243,66,43)" fg:x="323" fg:w="2"/><text x="26.1314%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9615%" y="741" width="0.0801%" height="15" fill="rgb(235,210,28)" fg:x="324" fg:w="1"/><text x="26.2115%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9615%" y="725" width="0.0801%" height="15" fill="rgb(205,191,50)" fg:x="324" fg:w="1"/><text x="26.2115%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="26.0417%" y="725" width="0.0801%" height="15" fill="rgb(251,217,19)" fg:x="325" fg:w="1"/><text x="26.2917%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.0417%" y="709" width="0.0801%" height="15" fill="rgb(205,174,37)" fg:x="325" fg:w="1"/><text x="26.2917%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="26.0417%" y="693" width="0.0801%" height="15" fill="rgb(212,158,42)" fg:x="325" fg:w="1"/><text x="26.2917%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.0417%" y="677" width="0.0801%" height="15" fill="rgb(212,208,51)" fg:x="325" fg:w="1"/><text x="26.2917%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.0417%" y="661" width="0.0801%" height="15" fill="rgb(225,198,20)" fg:x="325" fg:w="1"/><text x="26.2917%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="26.0417%" y="645" width="0.0801%" height="15" fill="rgb(247,41,44)" fg:x="325" fg:w="1"/><text x="26.2917%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.0417%" y="629" width="0.0801%" height="15" fill="rgb(228,33,41)" fg:x="325" fg:w="1"/><text x="26.2917%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0417%" y="613" width="0.0801%" height="15" fill="rgb(215,47,52)" fg:x="325" fg:w="1"/><text x="26.2917%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0417%" y="597" width="0.0801%" height="15" fill="rgb(248,106,37)" fg:x="325" fg:w="1"/><text x="26.2917%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="26.0417%" y="757" width="0.1603%" height="15" fill="rgb(238,91,29)" fg:x="325" fg:w="2"/><text x="26.2917%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="26.0417%" y="741" width="0.1603%" height="15" fill="rgb(226,111,40)" fg:x="325" fg:w="2"/><text x="26.2917%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.1218%" y="725" width="0.0801%" height="15" fill="rgb(229,159,36)" fg:x="326" fg:w="1"/><text x="26.3718%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.1218%" y="709" width="0.0801%" height="15" fill="rgb(221,109,4)" fg:x="326" fg:w="1"/><text x="26.3718%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="25.8013%" y="789" width="0.4808%" height="15" fill="rgb(236,56,25)" fg:x="322" fg:w="6"/><text x="26.0513%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="26.0417%" y="773" width="0.2404%" height="15" fill="rgb(244,113,23)" fg:x="325" fg:w="3"/><text x="26.2917%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="26.2019%" y="757" width="0.0801%" height="15" fill="rgb(249,132,2)" fg:x="327" fg:w="1"/><text x="26.4519%" y="767.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="26.2821%" y="757" width="0.0801%" height="15" fill="rgb(205,185,21)" fg:x="328" fg:w="1"/><text x="26.5321%" y="767.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="26.2821%" y="741" width="0.0801%" height="15" fill="rgb(245,130,2)" fg:x="328" fg:w="1"/><text x="26.5321%" y="751.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="26.2821%" y="725" width="0.0801%" height="15" fill="rgb(246,71,26)" fg:x="328" fg:w="1"/><text x="26.5321%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="26.2821%" y="789" width="0.1603%" height="15" fill="rgb(234,194,6)" fg:x="328" fg:w="2"/><text x="26.5321%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="26.2821%" y="773" width="0.1603%" height="15" fill="rgb(206,24,32)" fg:x="328" fg:w="2"/><text x="26.5321%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="26.3622%" y="757" width="0.0801%" height="15" fill="rgb(233,7,54)" fg:x="329" fg:w="1"/><text x="26.6122%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.3622%" y="741" width="0.0801%" height="15" fill="rgb(252,46,1)" fg:x="329" fg:w="1"/><text x="26.6122%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="26.4423%" y="773" width="0.0801%" height="15" fill="rgb(216,113,53)" fg:x="330" fg:w="1"/><text x="26.6923%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="26.4423%" y="757" width="0.0801%" height="15" fill="rgb(215,40,24)" fg:x="330" fg:w="1"/><text x="26.6923%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.4423%" y="741" width="0.0801%" height="15" fill="rgb(233,222,8)" fg:x="330" fg:w="1"/><text x="26.6923%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.4423%" y="725" width="0.0801%" height="15" fill="rgb(248,73,28)" fg:x="330" fg:w="1"/><text x="26.6923%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="26.4423%" y="709" width="0.0801%" height="15" fill="rgb(247,126,28)" fg:x="330" fg:w="1"/><text x="26.6923%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.5224%" y="709" width="0.0801%" height="15" fill="rgb(242,173,54)" fg:x="331" fg:w="1"/><text x="26.7724%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5224%" y="693" width="0.0801%" height="15" fill="rgb(244,186,22)" fg:x="331" fg:w="1"/><text x="26.7724%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (12 samples, 0.96%)</title><rect x="25.7212%" y="805" width="0.9615%" height="15" fill="rgb(231,187,4)" fg:x="321" fg:w="12"/><text x="25.9712%" y="815.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="26.4423%" y="789" width="0.2404%" height="15" fill="rgb(252,66,47)" fg:x="330" fg:w="3"/><text x="26.6923%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="26.5224%" y="773" width="0.1603%" height="15" fill="rgb(240,228,28)" fg:x="331" fg:w="2"/><text x="26.7724%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="26.5224%" y="757" width="0.1603%" height="15" fill="rgb(237,63,43)" fg:x="331" fg:w="2"/><text x="26.7724%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="26.5224%" y="741" width="0.1603%" height="15" fill="rgb(214,1,44)" fg:x="331" fg:w="2"/><text x="26.7724%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.5224%" y="725" width="0.1603%" height="15" fill="rgb(212,2,46)" fg:x="331" fg:w="2"/><text x="26.7724%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.6026%" y="709" width="0.0801%" height="15" fill="rgb(213,142,5)" fg:x="332" fg:w="1"/><text x="26.8526%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.6026%" y="693" width="0.0801%" height="15" fill="rgb(229,135,1)" fg:x="332" fg:w="1"/><text x="26.8526%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.6026%" y="677" width="0.0801%" height="15" fill="rgb(252,98,38)" fg:x="332" fg:w="1"/><text x="26.8526%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.6026%" y="661" width="0.0801%" height="15" fill="rgb(206,89,40)" fg:x="332" fg:w="1"/><text x="26.8526%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (285 samples, 22.84%)</title><rect x="3.9263%" y="821" width="22.8365%" height="15" fill="rgb(219,73,36)" fg:x="49" fg:w="285"/><text x="4.1763%" y="831.50">&lt;tests::HoldingKeyInVessel as tests:..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="26.6827%" y="805" width="0.0801%" height="15" fill="rgb(207,168,32)" fg:x="333" fg:w="1"/><text x="26.9327%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.6827%" y="789" width="0.0801%" height="15" fill="rgb(215,113,21)" fg:x="333" fg:w="1"/><text x="26.9327%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7628%" y="805" width="0.0801%" height="15" fill="rgb(217,144,43)" fg:x="334" fg:w="1"/><text x="27.0128%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="26.7628%" y="821" width="0.1603%" height="15" fill="rgb(249,48,50)" fg:x="334" fg:w="2"/><text x="27.0128%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="26.8429%" y="805" width="0.0801%" height="15" fill="rgb(242,1,26)" fg:x="335" fg:w="1"/><text x="27.0929%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="26.8429%" y="789" width="0.0801%" height="15" fill="rgb(231,167,42)" fg:x="335" fg:w="1"/><text x="27.0929%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.8429%" y="773" width="0.0801%" height="15" fill="rgb(242,177,45)" fg:x="335" fg:w="1"/><text x="27.0929%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.8429%" y="757" width="0.0801%" height="15" fill="rgb(232,121,42)" fg:x="335" fg:w="1"/><text x="27.0929%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="26.9231%" y="693" width="0.1603%" height="15" fill="rgb(205,8,42)" fg:x="336" fg:w="2"/><text x="27.1731%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="26.9231%" y="677" width="0.1603%" height="15" fill="rgb(238,199,24)" fg:x="336" fg:w="2"/><text x="27.1731%" y="687.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="27.0032%" y="661" width="0.0801%" height="15" fill="rgb(228,112,2)" fg:x="337" fg:w="1"/><text x="27.2532%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.0032%" y="645" width="0.0801%" height="15" fill="rgb(215,115,33)" fg:x="337" fg:w="1"/><text x="27.2532%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.0032%" y="629" width="0.0801%" height="15" fill="rgb(230,209,34)" fg:x="337" fg:w="1"/><text x="27.2532%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.0032%" y="613" width="0.0801%" height="15" fill="rgb(246,76,12)" fg:x="337" fg:w="1"/><text x="27.2532%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="27.0032%" y="597" width="0.0801%" height="15" fill="rgb(240,110,9)" fg:x="337" fg:w="1"/><text x="27.2532%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="27.0032%" y="581" width="0.0801%" height="15" fill="rgb(224,94,46)" fg:x="337" fg:w="1"/><text x="27.2532%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="27.0032%" y="565" width="0.0801%" height="15" fill="rgb(247,150,22)" fg:x="337" fg:w="1"/><text x="27.2532%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="27.0032%" y="549" width="0.0801%" height="15" fill="rgb(249,85,13)" fg:x="337" fg:w="1"/><text x="27.2532%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.0032%" y="533" width="0.0801%" height="15" fill="rgb(208,77,41)" fg:x="337" fg:w="1"/><text x="27.2532%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="26.9231%" y="805" width="0.2404%" height="15" fill="rgb(240,42,44)" fg:x="336" fg:w="3"/><text x="27.1731%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="26.9231%" y="789" width="0.2404%" height="15" fill="rgb(222,10,51)" fg:x="336" fg:w="3"/><text x="27.1731%" y="799.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="26.9231%" y="773" width="0.2404%" height="15" fill="rgb(208,146,53)" fg:x="336" fg:w="3"/><text x="27.1731%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="26.9231%" y="757" width="0.2404%" height="15" fill="rgb(236,162,23)" fg:x="336" fg:w="3"/><text x="27.1731%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="26.9231%" y="741" width="0.2404%" height="15" fill="rgb(218,66,21)" fg:x="336" fg:w="3"/><text x="27.1731%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="26.9231%" y="725" width="0.2404%" height="15" fill="rgb(233,6,47)" fg:x="336" fg:w="3"/><text x="27.1731%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (3 samples, 0.24%)</title><rect x="26.9231%" y="709" width="0.2404%" height="15" fill="rgb(236,59,51)" fg:x="336" fg:w="3"/><text x="27.1731%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.0833%" y="693" width="0.0801%" height="15" fill="rgb(242,12,46)" fg:x="338" fg:w="1"/><text x="27.3333%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.0833%" y="677" width="0.0801%" height="15" fill="rgb(243,142,19)" fg:x="338" fg:w="1"/><text x="27.3333%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="27.0833%" y="661" width="0.0801%" height="15" fill="rgb(217,28,17)" fg:x="338" fg:w="1"/><text x="27.3333%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="27.0833%" y="645" width="0.0801%" height="15" fill="rgb(228,2,27)" fg:x="338" fg:w="1"/><text x="27.3333%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.0833%" y="629" width="0.0801%" height="15" fill="rgb(214,221,4)" fg:x="338" fg:w="1"/><text x="27.3333%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.0833%" y="613" width="0.0801%" height="15" fill="rgb(224,69,26)" fg:x="338" fg:w="1"/><text x="27.3333%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="27.0833%" y="597" width="0.0801%" height="15" fill="rgb(219,70,4)" fg:x="338" fg:w="1"/><text x="27.3333%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="27.0833%" y="581" width="0.0801%" height="15" fill="rgb(218,157,39)" fg:x="338" fg:w="1"/><text x="27.3333%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="27.0833%" y="565" width="0.0801%" height="15" fill="rgb(238,36,28)" fg:x="338" fg:w="1"/><text x="27.3333%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="27.0833%" y="549" width="0.0801%" height="15" fill="rgb(232,29,0)" fg:x="338" fg:w="1"/><text x="27.3333%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.0833%" y="533" width="0.0801%" height="15" fill="rgb(243,138,46)" fg:x="338" fg:w="1"/><text x="27.3333%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.0833%" y="517" width="0.0801%" height="15" fill="rgb(232,186,41)" fg:x="338" fg:w="1"/><text x="27.3333%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.0833%" y="501" width="0.0801%" height="15" fill="rgb(252,166,17)" fg:x="338" fg:w="1"/><text x="27.3333%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="27.0833%" y="485" width="0.0801%" height="15" fill="rgb(228,179,12)" fg:x="338" fg:w="1"/><text x="27.3333%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="27.0833%" y="469" width="0.0801%" height="15" fill="rgb(254,205,53)" fg:x="338" fg:w="1"/><text x="27.3333%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="27.0833%" y="453" width="0.0801%" height="15" fill="rgb(224,163,47)" fg:x="338" fg:w="1"/><text x="27.3333%" y="463.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="27.1635%" y="805" width="0.1603%" height="15" fill="rgb(208,43,47)" fg:x="339" fg:w="2"/><text x="27.4135%" y="815.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="27.1635%" y="789" width="0.1603%" height="15" fill="rgb(224,198,38)" fg:x="339" fg:w="2"/><text x="27.4135%" y="799.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="27.1635%" y="773" width="0.1603%" height="15" fill="rgb(234,12,40)" fg:x="339" fg:w="2"/><text x="27.4135%" y="783.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="27.1635%" y="757" width="0.1603%" height="15" fill="rgb(237,212,39)" fg:x="339" fg:w="2"/><text x="27.4135%" y="767.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="27.1635%" y="741" width="0.1603%" height="15" fill="rgb(253,2,33)" fg:x="339" fg:w="2"/><text x="27.4135%" y="751.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="27.1635%" y="725" width="0.1603%" height="15" fill="rgb(251,29,16)" fg:x="339" fg:w="2"/><text x="27.4135%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="27.2436%" y="709" width="0.0801%" height="15" fill="rgb(214,38,29)" fg:x="340" fg:w="1"/><text x="27.4936%" y="719.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="27.2436%" y="693" width="0.0801%" height="15" fill="rgb(226,226,29)" fg:x="340" fg:w="1"/><text x="27.4936%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="27.3237%" y="757" width="0.0801%" height="15" fill="rgb(236,79,42)" fg:x="341" fg:w="1"/><text x="27.5737%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="27.3237%" y="741" width="0.0801%" height="15" fill="rgb(222,12,36)" fg:x="341" fg:w="1"/><text x="27.5737%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.3237%" y="725" width="0.0801%" height="15" fill="rgb(232,123,44)" fg:x="341" fg:w="1"/><text x="27.5737%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="27.3237%" y="773" width="0.1603%" height="15" fill="rgb(234,93,50)" fg:x="341" fg:w="2"/><text x="27.5737%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="27.4038%" y="757" width="0.0801%" height="15" fill="rgb(210,86,49)" fg:x="342" fg:w="1"/><text x="27.6538%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.4038%" y="741" width="0.0801%" height="15" fill="rgb(224,91,54)" fg:x="342" fg:w="1"/><text x="27.6538%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.4038%" y="725" width="0.0801%" height="15" fill="rgb(239,169,9)" fg:x="342" fg:w="1"/><text x="27.6538%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.4038%" y="709" width="0.0801%" height="15" fill="rgb(238,29,17)" fg:x="342" fg:w="1"/><text x="27.6538%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.4038%" y="693" width="0.0801%" height="15" fill="rgb(227,160,22)" fg:x="342" fg:w="1"/><text x="27.6538%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.4038%" y="677" width="0.0801%" height="15" fill="rgb(231,129,52)" fg:x="342" fg:w="1"/><text x="27.6538%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.4038%" y="661" width="0.0801%" height="15" fill="rgb(241,184,9)" fg:x="342" fg:w="1"/><text x="27.6538%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.4038%" y="645" width="0.0801%" height="15" fill="rgb(217,43,48)" fg:x="342" fg:w="1"/><text x="27.6538%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.4038%" y="629" width="0.0801%" height="15" fill="rgb(213,49,1)" fg:x="342" fg:w="1"/><text x="27.6538%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.4038%" y="613" width="0.0801%" height="15" fill="rgb(223,79,39)" fg:x="342" fg:w="1"/><text x="27.6538%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.4038%" y="597" width="0.0801%" height="15" fill="rgb(228,227,46)" fg:x="342" fg:w="1"/><text x="27.6538%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.4038%" y="581" width="0.0801%" height="15" fill="rgb(245,89,41)" fg:x="342" fg:w="1"/><text x="27.6538%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4038%" y="565" width="0.0801%" height="15" fill="rgb(253,83,21)" fg:x="342" fg:w="1"/><text x="27.6538%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="27.4840%" y="773" width="0.0801%" height="15" fill="rgb(229,116,51)" fg:x="343" fg:w="1"/><text x="27.7340%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4840%" y="757" width="0.0801%" height="15" fill="rgb(246,67,26)" fg:x="343" fg:w="1"/><text x="27.7340%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="27.5641%" y="757" width="0.0801%" height="15" fill="rgb(250,117,20)" fg:x="344" fg:w="1"/><text x="27.8141%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5641%" y="741" width="0.0801%" height="15" fill="rgb(207,88,17)" fg:x="344" fg:w="1"/><text x="27.8141%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5641%" y="725" width="0.0801%" height="15" fill="rgb(212,98,36)" fg:x="344" fg:w="1"/><text x="27.8141%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.5641%" y="709" width="0.0801%" height="15" fill="rgb(221,72,6)" fg:x="344" fg:w="1"/><text x="27.8141%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.5641%" y="693" width="0.0801%" height="15" fill="rgb(235,129,19)" fg:x="344" fg:w="1"/><text x="27.8141%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.5641%" y="677" width="0.0801%" height="15" fill="rgb(237,200,6)" fg:x="344" fg:w="1"/><text x="27.8141%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="27.5641%" y="661" width="0.0801%" height="15" fill="rgb(239,69,54)" fg:x="344" fg:w="1"/><text x="27.8141%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.5641%" y="645" width="0.0801%" height="15" fill="rgb(214,68,45)" fg:x="344" fg:w="1"/><text x="27.8141%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="27.6442%" y="757" width="0.0801%" height="15" fill="rgb(254,160,8)" fg:x="345" fg:w="1"/><text x="27.8942%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="27.6442%" y="741" width="0.0801%" height="15" fill="rgb(215,226,31)" fg:x="345" fg:w="1"/><text x="27.8942%" y="751.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8045%" y="725" width="0.0801%" height="15" fill="rgb(253,6,35)" fg:x="347" fg:w="1"/><text x="28.0545%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8045%" y="709" width="0.0801%" height="15" fill="rgb(219,96,42)" fg:x="347" fg:w="1"/><text x="28.0545%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8045%" y="693" width="0.0801%" height="15" fill="rgb(207,170,13)" fg:x="347" fg:w="1"/><text x="28.0545%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8045%" y="677" width="0.0801%" height="15" fill="rgb(239,101,5)" fg:x="347" fg:w="1"/><text x="28.0545%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8045%" y="661" width="0.0801%" height="15" fill="rgb(228,183,34)" fg:x="347" fg:w="1"/><text x="28.0545%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8045%" y="645" width="0.0801%" height="15" fill="rgb(205,28,31)" fg:x="347" fg:w="1"/><text x="28.0545%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.8045%" y="629" width="0.0801%" height="15" fill="rgb(214,118,50)" fg:x="347" fg:w="1"/><text x="28.0545%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.8045%" y="613" width="0.0801%" height="15" fill="rgb(213,108,51)" fg:x="347" fg:w="1"/><text x="28.0545%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.8045%" y="597" width="0.0801%" height="15" fill="rgb(238,56,37)" fg:x="347" fg:w="1"/><text x="28.0545%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8045%" y="581" width="0.0801%" height="15" fill="rgb(214,136,28)" fg:x="347" fg:w="1"/><text x="28.0545%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8045%" y="565" width="0.0801%" height="15" fill="rgb(221,201,54)" fg:x="347" fg:w="1"/><text x="28.0545%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.8045%" y="549" width="0.0801%" height="15" fill="rgb(228,216,39)" fg:x="347" fg:w="1"/><text x="28.0545%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.8045%" y="533" width="0.0801%" height="15" fill="rgb(207,229,49)" fg:x="347" fg:w="1"/><text x="28.0545%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.8045%" y="517" width="0.0801%" height="15" fill="rgb(224,23,43)" fg:x="347" fg:w="1"/><text x="28.0545%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.8045%" y="501" width="0.0801%" height="15" fill="rgb(247,97,18)" fg:x="347" fg:w="1"/><text x="28.0545%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.8045%" y="485" width="0.0801%" height="15" fill="rgb(232,53,32)" fg:x="347" fg:w="1"/><text x="28.0545%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="27.8846%" y="725" width="0.0801%" height="15" fill="rgb(247,38,23)" fg:x="348" fg:w="1"/><text x="28.1346%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="27.8846%" y="709" width="0.0801%" height="15" fill="rgb(228,101,52)" fg:x="348" fg:w="1"/><text x="28.1346%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="27.8846%" y="693" width="0.0801%" height="15" fill="rgb(231,45,36)" fg:x="348" fg:w="1"/><text x="28.1346%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="27.8846%" y="677" width="0.0801%" height="15" fill="rgb(221,183,50)" fg:x="348" fg:w="1"/><text x="28.1346%" y="687.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="27.8846%" y="661" width="0.0801%" height="15" fill="rgb(251,132,12)" fg:x="348" fg:w="1"/><text x="28.1346%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8846%" y="645" width="0.0801%" height="15" fill="rgb(252,50,16)" fg:x="348" fg:w="1"/><text x="28.1346%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (11 samples, 0.88%)</title><rect x="27.3237%" y="789" width="0.8814%" height="15" fill="rgb(224,60,15)" fg:x="341" fg:w="11"/><text x="27.5737%" y="799.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (8 samples, 0.64%)</title><rect x="27.5641%" y="773" width="0.6410%" height="15" fill="rgb(254,2,34)" fg:x="344" fg:w="8"/><text x="27.8141%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="27.7244%" y="757" width="0.4808%" height="15" fill="rgb(232,154,8)" fg:x="346" fg:w="6"/><text x="27.9744%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="27.7244%" y="741" width="0.4808%" height="15" fill="rgb(235,190,52)" fg:x="346" fg:w="6"/><text x="27.9744%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.9647%" y="725" width="0.2404%" height="15" fill="rgb(213,218,38)" fg:x="349" fg:w="3"/><text x="28.2147%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.9647%" y="709" width="0.2404%" height="15" fill="rgb(237,50,37)" fg:x="349" fg:w="3"/><text x="28.2147%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="28.0449%" y="693" width="0.1603%" height="15" fill="rgb(235,51,35)" fg:x="350" fg:w="2"/><text x="28.2949%" y="703.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="28.0449%" y="677" width="0.1603%" height="15" fill="rgb(244,40,52)" fg:x="350" fg:w="2"/><text x="28.2949%" y="687.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="28.0449%" y="661" width="0.1603%" height="15" fill="rgb(217,225,45)" fg:x="350" fg:w="2"/><text x="28.2949%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.1250%" y="645" width="0.0801%" height="15" fill="rgb(247,191,36)" fg:x="351" fg:w="1"/><text x="28.3750%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.1250%" y="629" width="0.0801%" height="15" fill="rgb(251,144,31)" fg:x="351" fg:w="1"/><text x="28.3750%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.2051%" y="789" width="0.1603%" height="15" fill="rgb(227,155,41)" fg:x="352" fg:w="2"/><text x="28.4551%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="28.3654%" y="789" width="0.0801%" height="15" fill="rgb(236,121,36)" fg:x="354" fg:w="1"/><text x="28.6154%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.3654%" y="773" width="0.0801%" height="15" fill="rgb(221,128,28)" fg:x="354" fg:w="1"/><text x="28.6154%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="28.4455%" y="773" width="0.0801%" height="15" fill="rgb(249,67,50)" fg:x="355" fg:w="1"/><text x="28.6955%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4455%" y="757" width="0.0801%" height="15" fill="rgb(241,126,38)" fg:x="355" fg:w="1"/><text x="28.6955%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="28.5256%" y="741" width="0.0801%" height="15" fill="rgb(239,33,14)" fg:x="356" fg:w="1"/><text x="28.7756%" y="751.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="28.5256%" y="773" width="0.1603%" height="15" fill="rgb(207,221,54)" fg:x="356" fg:w="2"/><text x="28.7756%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="28.5256%" y="757" width="0.1603%" height="15" fill="rgb(242,138,43)" fg:x="356" fg:w="2"/><text x="28.7756%" y="767.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="28.6058%" y="741" width="0.0801%" height="15" fill="rgb(231,118,19)" fg:x="357" fg:w="1"/><text x="28.8558%" y="751.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="28.6058%" y="725" width="0.0801%" height="15" fill="rgb(214,128,54)" fg:x="357" fg:w="1"/><text x="28.8558%" y="735.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="28.6058%" y="709" width="0.0801%" height="15" fill="rgb(236,136,6)" fg:x="357" fg:w="1"/><text x="28.8558%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="28.6058%" y="693" width="0.0801%" height="15" fill="rgb(247,30,38)" fg:x="357" fg:w="1"/><text x="28.8558%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="28.6859%" y="757" width="0.0801%" height="15" fill="rgb(249,189,40)" fg:x="358" fg:w="1"/><text x="28.9359%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.6859%" y="741" width="0.0801%" height="15" fill="rgb(247,179,7)" fg:x="358" fg:w="1"/><text x="28.9359%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.6859%" y="725" width="0.0801%" height="15" fill="rgb(239,46,52)" fg:x="358" fg:w="1"/><text x="28.9359%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.8462%" y="725" width="0.0801%" height="15" fill="rgb(225,28,52)" fg:x="360" fg:w="1"/><text x="29.0962%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="29.0865%" y="709" width="0.2404%" height="15" fill="rgb(217,208,44)" fg:x="363" fg:w="3"/><text x="29.3365%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.2468%" y="693" width="0.0801%" height="15" fill="rgb(224,11,34)" fg:x="365" fg:w="1"/><text x="29.4968%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="28.9263%" y="725" width="0.6410%" height="15" fill="rgb(205,134,17)" fg:x="361" fg:w="8"/><text x="29.1763%" y="735.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.3269%" y="709" width="0.2404%" height="15" fill="rgb(237,125,9)" fg:x="366" fg:w="3"/><text x="29.5769%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.4071%" y="693" width="0.1603%" height="15" fill="rgb(208,139,47)" fg:x="367" fg:w="2"/><text x="29.6571%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.4071%" y="677" width="0.1603%" height="15" fill="rgb(242,5,5)" fg:x="367" fg:w="2"/><text x="29.6571%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.5673%" y="709" width="0.0801%" height="15" fill="rgb(218,78,2)" fg:x="369" fg:w="1"/><text x="29.8173%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.6474%" y="709" width="0.0801%" height="15" fill="rgb(217,75,16)" fg:x="370" fg:w="1"/><text x="29.8974%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.6474%" y="693" width="0.0801%" height="15" fill="rgb(212,56,17)" fg:x="370" fg:w="1"/><text x="29.8974%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="29.7276%" y="709" width="0.5609%" height="15" fill="rgb(228,61,29)" fg:x="371" fg:w="7"/><text x="29.9776%" y="719.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="29.7276%" y="693" width="0.5609%" height="15" fill="rgb(247,202,38)" fg:x="371" fg:w="7"/><text x="29.9776%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="29.8878%" y="677" width="0.4006%" height="15" fill="rgb(211,216,43)" fg:x="373" fg:w="5"/><text x="30.1378%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="30.0481%" y="661" width="0.2404%" height="15" fill="rgb(220,7,49)" fg:x="375" fg:w="3"/><text x="30.2981%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.2885%" y="693" width="0.0801%" height="15" fill="rgb(219,158,7)" fg:x="378" fg:w="1"/><text x="30.5385%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="30.2885%" y="677" width="0.0801%" height="15" fill="rgb(206,127,9)" fg:x="378" fg:w="1"/><text x="30.5385%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="30.2885%" y="661" width="0.0801%" height="15" fill="rgb(206,103,43)" fg:x="378" fg:w="1"/><text x="30.5385%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="30.2885%" y="645" width="0.0801%" height="15" fill="rgb(240,108,41)" fg:x="378" fg:w="1"/><text x="30.5385%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.2885%" y="629" width="0.0801%" height="15" fill="rgb(252,212,6)" fg:x="378" fg:w="1"/><text x="30.5385%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.2885%" y="613" width="0.0801%" height="15" fill="rgb(248,105,31)" fg:x="378" fg:w="1"/><text x="30.5385%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.2885%" y="597" width="0.0801%" height="15" fill="rgb(241,123,4)" fg:x="378" fg:w="1"/><text x="30.5385%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="30.3686%" y="693" width="0.1603%" height="15" fill="rgb(223,74,37)" fg:x="379" fg:w="2"/><text x="30.6186%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.3686%" y="677" width="0.1603%" height="15" fill="rgb(251,219,28)" fg:x="379" fg:w="2"/><text x="30.6186%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.3686%" y="661" width="0.1603%" height="15" fill="rgb(218,36,31)" fg:x="379" fg:w="2"/><text x="30.6186%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.3686%" y="645" width="0.1603%" height="15" fill="rgb(229,40,15)" fg:x="379" fg:w="2"/><text x="30.6186%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.4487%" y="629" width="0.0801%" height="15" fill="rgb(208,138,37)" fg:x="380" fg:w="1"/><text x="30.6987%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.4487%" y="613" width="0.0801%" height="15" fill="rgb(208,40,52)" fg:x="380" fg:w="1"/><text x="30.6987%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.4487%" y="597" width="0.0801%" height="15" fill="rgb(246,181,48)" fg:x="380" fg:w="1"/><text x="30.6987%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.5288%" y="677" width="0.0801%" height="15" fill="rgb(253,178,36)" fg:x="381" fg:w="1"/><text x="30.7788%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="30.6090%" y="661" width="0.0801%" height="15" fill="rgb(210,170,6)" fg:x="382" fg:w="1"/><text x="30.8590%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.6090%" y="645" width="0.0801%" height="15" fill="rgb(243,62,22)" fg:x="382" fg:w="1"/><text x="30.8590%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="30.6891%" y="645" width="0.0801%" height="15" fill="rgb(213,145,26)" fg:x="383" fg:w="1"/><text x="30.9391%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="30.6891%" y="661" width="0.1603%" height="15" fill="rgb(237,177,23)" fg:x="383" fg:w="2"/><text x="30.9391%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.7692%" y="645" width="0.0801%" height="15" fill="rgb(252,5,24)" fg:x="384" fg:w="1"/><text x="31.0192%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.7692%" y="629" width="0.0801%" height="15" fill="rgb(230,108,54)" fg:x="384" fg:w="1"/><text x="31.0192%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="30.7692%" y="613" width="0.0801%" height="15" fill="rgb(252,192,41)" fg:x="384" fg:w="1"/><text x="31.0192%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="30.6090%" y="677" width="0.4006%" height="15" fill="rgb(218,125,20)" fg:x="382" fg:w="5"/><text x="30.8590%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.8494%" y="661" width="0.1603%" height="15" fill="rgb(230,223,15)" fg:x="385" fg:w="2"/><text x="31.0994%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.8494%" y="645" width="0.1603%" height="15" fill="rgb(239,99,47)" fg:x="385" fg:w="2"/><text x="31.0994%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="30.5288%" y="693" width="0.5609%" height="15" fill="rgb(222,214,23)" fg:x="381" fg:w="7"/><text x="30.7788%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.0096%" y="677" width="0.0801%" height="15" fill="rgb(250,98,43)" fg:x="387" fg:w="1"/><text x="31.2596%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="30.2885%" y="709" width="0.8814%" height="15" fill="rgb(226,140,11)" fg:x="378" fg:w="11"/><text x="30.5385%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.0897%" y="693" width="0.0801%" height="15" fill="rgb(239,2,22)" fg:x="388" fg:w="1"/><text x="31.3397%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.0897%" y="677" width="0.0801%" height="15" fill="rgb(209,106,26)" fg:x="388" fg:w="1"/><text x="31.3397%" y="687.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.72%)</title><rect x="28.8462%" y="741" width="2.7244%" height="15" fill="rgb(209,135,11)" fg:x="360" fg:w="34"/><text x="29.0962%" y="751.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.00%)</title><rect x="29.5673%" y="725" width="2.0032%" height="15" fill="rgb(241,58,6)" fg:x="369" fg:w="25"/><text x="29.8173%" y="735.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="31.1699%" y="709" width="0.4006%" height="15" fill="rgb(214,78,1)" fg:x="389" fg:w="5"/><text x="31.4199%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="31.2500%" y="693" width="0.3205%" height="15" fill="rgb(229,135,33)" fg:x="390" fg:w="4"/><text x="31.5000%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="31.2500%" y="677" width="0.3205%" height="15" fill="rgb(245,87,50)" fg:x="390" fg:w="4"/><text x="31.5000%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="31.2500%" y="661" width="0.3205%" height="15" fill="rgb(222,222,8)" fg:x="390" fg:w="4"/><text x="31.5000%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="31.2500%" y="645" width="0.3205%" height="15" fill="rgb(214,97,50)" fg:x="390" fg:w="4"/><text x="31.5000%" y="655.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="31.2500%" y="629" width="0.3205%" height="15" fill="rgb(244,161,51)" fg:x="390" fg:w="4"/><text x="31.5000%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.5705%" y="725" width="0.0801%" height="15" fill="rgb(225,17,4)" fg:x="394" fg:w="1"/><text x="31.8205%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.7308%" y="709" width="0.1603%" height="15" fill="rgb(238,10,13)" fg:x="396" fg:w="2"/><text x="31.9808%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.9712%" y="693" width="0.1603%" height="15" fill="rgb(239,169,14)" fg:x="399" fg:w="2"/><text x="32.2212%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="32.1314%" y="677" width="0.1603%" height="15" fill="rgb(213,105,25)" fg:x="401" fg:w="2"/><text x="32.3814%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.2115%" y="661" width="0.0801%" height="15" fill="rgb(233,4,17)" fg:x="402" fg:w="1"/><text x="32.4615%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3718%" y="661" width="0.0801%" height="15" fill="rgb(212,5,35)" fg:x="404" fg:w="1"/><text x="32.6218%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.4519%" y="661" width="0.0801%" height="15" fill="rgb(216,3,14)" fg:x="405" fg:w="1"/><text x="32.7019%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="32.5321%" y="661" width="0.0801%" height="15" fill="rgb(240,105,33)" fg:x="406" fg:w="1"/><text x="32.7821%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.5321%" y="645" width="0.0801%" height="15" fill="rgb(216,73,0)" fg:x="406" fg:w="1"/><text x="32.7821%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.5321%" y="629" width="0.0801%" height="15" fill="rgb(217,153,48)" fg:x="406" fg:w="1"/><text x="32.7821%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.5321%" y="613" width="0.0801%" height="15" fill="rgb(218,180,8)" fg:x="406" fg:w="1"/><text x="32.7821%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="31.5705%" y="741" width="1.1218%" height="15" fill="rgb(252,168,2)" fg:x="394" fg:w="14"/><text x="31.8205%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="31.6506%" y="725" width="1.0417%" height="15" fill="rgb(224,116,33)" fg:x="395" fg:w="13"/><text x="31.9006%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="31.8910%" y="709" width="0.8013%" height="15" fill="rgb(229,205,17)" fg:x="398" fg:w="10"/><text x="32.1410%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="32.1314%" y="693" width="0.5609%" height="15" fill="rgb(234,1,41)" fg:x="401" fg:w="7"/><text x="32.3814%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="32.2917%" y="677" width="0.4006%" height="15" fill="rgb(244,185,8)" fg:x="403" fg:w="5"/><text x="32.5417%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.6122%" y="661" width="0.0801%" height="15" fill="rgb(248,51,21)" fg:x="407" fg:w="1"/><text x="32.8622%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.6122%" y="645" width="0.0801%" height="15" fill="rgb(248,157,31)" fg:x="407" fg:w="1"/><text x="32.8622%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="32.7724%" y="677" width="0.2404%" height="15" fill="rgb(210,34,47)" fg:x="409" fg:w="3"/><text x="33.0224%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9327%" y="661" width="0.0801%" height="15" fill="rgb(227,139,53)" fg:x="411" fg:w="1"/><text x="33.1827%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.1731%" y="661" width="0.0801%" height="15" fill="rgb(232,211,37)" fg:x="414" fg:w="1"/><text x="33.4231%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="33.3333%" y="645" width="0.1603%" height="15" fill="rgb(236,133,10)" fg:x="416" fg:w="2"/><text x="33.5833%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="33.5737%" y="629" width="0.2404%" height="15" fill="rgb(243,202,25)" fg:x="419" fg:w="3"/><text x="33.8237%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="33.8141%" y="629" width="0.1603%" height="15" fill="rgb(224,59,9)" fg:x="422" fg:w="2"/><text x="34.0641%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.8141%" y="613" width="0.1603%" height="15" fill="rgb(206,146,16)" fg:x="422" fg:w="2"/><text x="34.0641%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8942%" y="597" width="0.0801%" height="15" fill="rgb(220,47,2)" fg:x="423" fg:w="1"/><text x="34.1442%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.0545%" y="613" width="0.0801%" height="15" fill="rgb(225,124,51)" fg:x="425" fg:w="1"/><text x="34.3045%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.0545%" y="597" width="0.0801%" height="15" fill="rgb(241,220,50)" fg:x="425" fg:w="1"/><text x="34.3045%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.52%)</title><rect x="32.6923%" y="709" width="1.5224%" height="15" fill="rgb(232,168,5)" fg:x="408" fg:w="19"/><text x="32.9423%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.52%)</title><rect x="32.6923%" y="693" width="1.5224%" height="15" fill="rgb(243,90,22)" fg:x="408" fg:w="19"/><text x="32.9423%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="33.0128%" y="677" width="1.2019%" height="15" fill="rgb(223,153,32)" fg:x="412" fg:w="15"/><text x="33.2628%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="33.2532%" y="661" width="0.9615%" height="15" fill="rgb(243,124,20)" fg:x="415" fg:w="12"/><text x="33.5032%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="33.4936%" y="645" width="0.7212%" height="15" fill="rgb(246,168,39)" fg:x="418" fg:w="9"/><text x="33.7436%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="33.9744%" y="629" width="0.2404%" height="15" fill="rgb(222,165,54)" fg:x="424" fg:w="3"/><text x="34.2244%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.1346%" y="613" width="0.0801%" height="15" fill="rgb(251,142,27)" fg:x="426" fg:w="1"/><text x="34.3846%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="34.3750%" y="645" width="0.0801%" height="15" fill="rgb(207,168,50)" fg:x="429" fg:w="1"/><text x="34.6250%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.3750%" y="629" width="0.0801%" height="15" fill="rgb(250,139,25)" fg:x="429" fg:w="1"/><text x="34.6250%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="34.2147%" y="677" width="0.3205%" height="15" fill="rgb(214,194,48)" fg:x="427" fg:w="4"/><text x="34.4647%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="34.2147%" y="661" width="0.3205%" height="15" fill="rgb(227,138,47)" fg:x="427" fg:w="4"/><text x="34.4647%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.4551%" y="645" width="0.0801%" height="15" fill="rgb(250,162,5)" fg:x="430" fg:w="1"/><text x="34.7051%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="34.2147%" y="693" width="0.4006%" height="15" fill="rgb(229,74,25)" fg:x="427" fg:w="5"/><text x="34.4647%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.5353%" y="677" width="0.0801%" height="15" fill="rgb(221,124,34)" fg:x="431" fg:w="1"/><text x="34.7853%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="34.6154%" y="693" width="0.0801%" height="15" fill="rgb(225,94,25)" fg:x="432" fg:w="1"/><text x="34.8654%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.6955%" y="693" width="0.0801%" height="15" fill="rgb(210,100,12)" fg:x="433" fg:w="1"/><text x="34.9455%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.6955%" y="677" width="0.0801%" height="15" fill="rgb(206,62,48)" fg:x="433" fg:w="1"/><text x="34.9455%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.6955%" y="661" width="0.0801%" height="15" fill="rgb(222,181,9)" fg:x="433" fg:w="1"/><text x="34.9455%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.6955%" y="645" width="0.0801%" height="15" fill="rgb(248,42,38)" fg:x="433" fg:w="1"/><text x="34.9455%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.6955%" y="629" width="0.0801%" height="15" fill="rgb(213,40,6)" fg:x="433" fg:w="1"/><text x="34.9455%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.6955%" y="613" width="0.0801%" height="15" fill="rgb(211,108,15)" fg:x="433" fg:w="1"/><text x="34.9455%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.6955%" y="597" width="0.0801%" height="15" fill="rgb(249,62,9)" fg:x="433" fg:w="1"/><text x="34.9455%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.6955%" y="581" width="0.0801%" height="15" fill="rgb(233,26,54)" fg:x="433" fg:w="1"/><text x="34.9455%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.6955%" y="565" width="0.0801%" height="15" fill="rgb(210,175,26)" fg:x="433" fg:w="1"/><text x="34.9455%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.6955%" y="549" width="0.0801%" height="15" fill="rgb(210,43,33)" fg:x="433" fg:w="1"/><text x="34.9455%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.6955%" y="533" width="0.0801%" height="15" fill="rgb(224,46,17)" fg:x="433" fg:w="1"/><text x="34.9455%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.7756%" y="693" width="0.0801%" height="15" fill="rgb(254,24,38)" fg:x="434" fg:w="1"/><text x="35.0256%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="34.8558%" y="693" width="0.0801%" height="15" fill="rgb(248,32,0)" fg:x="435" fg:w="1"/><text x="35.1058%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.8558%" y="677" width="0.0801%" height="15" fill="rgb(224,37,41)" fg:x="435" fg:w="1"/><text x="35.1058%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8558%" y="661" width="0.0801%" height="15" fill="rgb(252,70,22)" fg:x="435" fg:w="1"/><text x="35.1058%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9359%" y="677" width="0.0801%" height="15" fill="rgb(241,123,50)" fg:x="436" fg:w="1"/><text x="35.1859%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9359%" y="661" width="0.0801%" height="15" fill="rgb(246,138,33)" fg:x="436" fg:w="1"/><text x="35.1859%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.9359%" y="645" width="0.0801%" height="15" fill="rgb(218,39,32)" fg:x="436" fg:w="1"/><text x="35.1859%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.9359%" y="629" width="0.0801%" height="15" fill="rgb(241,229,10)" fg:x="436" fg:w="1"/><text x="35.1859%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.9359%" y="613" width="0.0801%" height="15" fill="rgb(212,160,10)" fg:x="436" fg:w="1"/><text x="35.1859%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9359%" y="597" width="0.0801%" height="15" fill="rgb(227,48,51)" fg:x="436" fg:w="1"/><text x="35.1859%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9359%" y="581" width="0.0801%" height="15" fill="rgb(238,159,21)" fg:x="436" fg:w="1"/><text x="35.1859%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.9359%" y="565" width="0.0801%" height="15" fill="rgb(216,1,10)" fg:x="436" fg:w="1"/><text x="35.1859%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.9359%" y="549" width="0.0801%" height="15" fill="rgb(209,228,25)" fg:x="436" fg:w="1"/><text x="35.1859%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.9359%" y="533" width="0.0801%" height="15" fill="rgb(234,160,10)" fg:x="436" fg:w="1"/><text x="35.1859%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.9359%" y="517" width="0.0801%" height="15" fill="rgb(212,66,25)" fg:x="436" fg:w="1"/><text x="35.1859%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9359%" y="501" width="0.0801%" height="15" fill="rgb(254,121,18)" fg:x="436" fg:w="1"/><text x="35.1859%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0160%" y="677" width="0.0801%" height="15" fill="rgb(219,127,1)" fg:x="437" fg:w="1"/><text x="35.2660%" y="687.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="35.0962%" y="677" width="0.0801%" height="15" fill="rgb(219,224,42)" fg:x="438" fg:w="1"/><text x="35.3462%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="35.1763%" y="677" width="0.0801%" height="15" fill="rgb(253,130,22)" fg:x="439" fg:w="1"/><text x="35.4263%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="35.4968%" y="661" width="0.0801%" height="15" fill="rgb(253,39,28)" fg:x="443" fg:w="1"/><text x="35.7468%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.4968%" y="645" width="0.0801%" height="15" fill="rgb(231,126,37)" fg:x="443" fg:w="1"/><text x="35.7468%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.4968%" y="629" width="0.0801%" height="15" fill="rgb(251,145,14)" fg:x="443" fg:w="1"/><text x="35.7468%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.4968%" y="613" width="0.0801%" height="15" fill="rgb(229,164,30)" fg:x="443" fg:w="1"/><text x="35.7468%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5769%" y="661" width="0.0801%" height="15" fill="rgb(233,227,54)" fg:x="444" fg:w="1"/><text x="35.8269%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6571%" y="645" width="0.0801%" height="15" fill="rgb(240,94,22)" fg:x="445" fg:w="1"/><text x="35.9071%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6571%" y="629" width="0.0801%" height="15" fill="rgb(217,56,16)" fg:x="445" fg:w="1"/><text x="35.9071%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6571%" y="613" width="0.0801%" height="15" fill="rgb(229,133,38)" fg:x="445" fg:w="1"/><text x="35.9071%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.6571%" y="597" width="0.0801%" height="15" fill="rgb(225,139,35)" fg:x="445" fg:w="1"/><text x="35.9071%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.6571%" y="581" width="0.0801%" height="15" fill="rgb(223,100,16)" fg:x="445" fg:w="1"/><text x="35.9071%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.6571%" y="565" width="0.0801%" height="15" fill="rgb(207,43,50)" fg:x="445" fg:w="1"/><text x="35.9071%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6571%" y="549" width="0.0801%" height="15" fill="rgb(237,221,9)" fg:x="445" fg:w="1"/><text x="35.9071%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6571%" y="533" width="0.0801%" height="15" fill="rgb(236,134,24)" fg:x="445" fg:w="1"/><text x="35.9071%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.6571%" y="517" width="0.0801%" height="15" fill="rgb(222,173,4)" fg:x="445" fg:w="1"/><text x="35.9071%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.6571%" y="501" width="0.0801%" height="15" fill="rgb(234,144,52)" fg:x="445" fg:w="1"/><text x="35.9071%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.6571%" y="485" width="0.0801%" height="15" fill="rgb(223,41,7)" fg:x="445" fg:w="1"/><text x="35.9071%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.6571%" y="469" width="0.0801%" height="15" fill="rgb(226,143,9)" fg:x="445" fg:w="1"/><text x="35.9071%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6571%" y="453" width="0.0801%" height="15" fill="rgb(234,43,37)" fg:x="445" fg:w="1"/><text x="35.9071%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="35.7372%" y="645" width="0.0801%" height="15" fill="rgb(224,188,11)" fg:x="446" fg:w="1"/><text x="35.9872%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.7372%" y="629" width="0.0801%" height="15" fill="rgb(233,113,28)" fg:x="446" fg:w="1"/><text x="35.9872%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.7372%" y="613" width="0.0801%" height="15" fill="rgb(215,16,1)" fg:x="446" fg:w="1"/><text x="35.9872%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7372%" y="597" width="0.0801%" height="15" fill="rgb(238,74,38)" fg:x="446" fg:w="1"/><text x="35.9872%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8173%" y="645" width="0.0801%" height="15" fill="rgb(221,66,35)" fg:x="447" fg:w="1"/><text x="36.0673%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.9776%" y="629" width="0.0801%" height="15" fill="rgb(251,225,2)" fg:x="449" fg:w="1"/><text x="36.2276%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (43 samples, 3.45%)</title><rect x="32.6923%" y="725" width="3.4455%" height="15" fill="rgb(240,169,18)" fg:x="408" fg:w="43"/><text x="32.9423%" y="735.50">&lt;ke..</text></g><g><title>treediff::diff::diff (24 samples, 1.92%)</title><rect x="34.2147%" y="709" width="1.9231%" height="15" fill="rgb(243,130,50)" fg:x="427" fg:w="24"/><text x="34.4647%" y="719.50">t..</text></g><g><title>treediff::diff::diff (15 samples, 1.20%)</title><rect x="34.9359%" y="693" width="1.2019%" height="15" fill="rgb(228,75,13)" fg:x="436" fg:w="15"/><text x="35.1859%" y="703.50"></text></g><g><title>treediff::diff::diff (11 samples, 0.88%)</title><rect x="35.2564%" y="677" width="0.8814%" height="15" fill="rgb(252,95,35)" fg:x="440" fg:w="11"/><text x="35.5064%" y="687.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="35.6571%" y="661" width="0.4808%" height="15" fill="rgb(222,180,54)" fg:x="445" fg:w="6"/><text x="35.9071%" y="671.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="35.8974%" y="645" width="0.2404%" height="15" fill="rgb(250,110,34)" fg:x="448" fg:w="3"/><text x="36.1474%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.0577%" y="629" width="0.0801%" height="15" fill="rgb(208,100,21)" fg:x="450" fg:w="1"/><text x="36.3077%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.0577%" y="613" width="0.0801%" height="15" fill="rgb(209,123,47)" fg:x="450" fg:w="1"/><text x="36.3077%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.0577%" y="597" width="0.0801%" height="15" fill="rgb(237,147,9)" fg:x="450" fg:w="1"/><text x="36.3077%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.0577%" y="581" width="0.0801%" height="15" fill="rgb(228,206,23)" fg:x="450" fg:w="1"/><text x="36.3077%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.0577%" y="565" width="0.0801%" height="15" fill="rgb(217,174,46)" fg:x="450" fg:w="1"/><text x="36.3077%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0577%" y="549" width="0.0801%" height="15" fill="rgb(231,126,21)" fg:x="450" fg:w="1"/><text x="36.3077%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.0577%" y="533" width="0.0801%" height="15" fill="rgb(245,26,1)" fg:x="450" fg:w="1"/><text x="36.3077%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.0577%" y="517" width="0.0801%" height="15" fill="rgb(224,138,39)" fg:x="450" fg:w="1"/><text x="36.3077%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.0577%" y="501" width="0.0801%" height="15" fill="rgb(208,97,3)" fg:x="450" fg:w="1"/><text x="36.3077%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.0577%" y="485" width="0.0801%" height="15" fill="rgb(222,77,29)" fg:x="450" fg:w="1"/><text x="36.3077%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.0577%" y="469" width="0.0801%" height="15" fill="rgb(243,188,36)" fg:x="450" fg:w="1"/><text x="36.3077%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.0577%" y="453" width="0.0801%" height="15" fill="rgb(218,214,3)" fg:x="450" fg:w="1"/><text x="36.3077%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="36.5385%" y="693" width="0.2404%" height="15" fill="rgb(211,183,45)" fg:x="456" fg:w="3"/><text x="36.7885%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="36.7788%" y="693" width="0.2404%" height="15" fill="rgb(230,218,25)" fg:x="459" fg:w="3"/><text x="37.0288%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9391%" y="677" width="0.0801%" height="15" fill="rgb(233,86,6)" fg:x="461" fg:w="1"/><text x="37.1891%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.0192%" y="661" width="0.0801%" height="15" fill="rgb(220,59,24)" fg:x="462" fg:w="1"/><text x="37.2692%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="37.0192%" y="693" width="0.1603%" height="15" fill="rgb(227,60,1)" fg:x="462" fg:w="2"/><text x="37.2692%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.0192%" y="677" width="0.1603%" height="15" fill="rgb(216,212,54)" fg:x="462" fg:w="2"/><text x="37.2692%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.0994%" y="661" width="0.0801%" height="15" fill="rgb(227,81,54)" fg:x="463" fg:w="1"/><text x="37.3494%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="37.1795%" y="693" width="0.0801%" height="15" fill="rgb(206,204,43)" fg:x="464" fg:w="1"/><text x="37.4295%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.1795%" y="677" width="0.0801%" height="15" fill="rgb(219,29,26)" fg:x="464" fg:w="1"/><text x="37.4295%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1795%" y="661" width="0.0801%" height="15" fill="rgb(252,40,36)" fg:x="464" fg:w="1"/><text x="37.4295%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="37.5801%" y="661" width="0.0801%" height="15" fill="rgb(224,205,39)" fg:x="469" fg:w="1"/><text x="37.8301%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="37.6603%" y="661" width="0.0801%" height="15" fill="rgb(222,13,21)" fg:x="470" fg:w="1"/><text x="37.9103%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.8205%" y="645" width="0.1603%" height="15" fill="rgb(243,139,6)" fg:x="472" fg:w="2"/><text x="38.0705%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.8205%" y="629" width="0.1603%" height="15" fill="rgb(237,101,11)" fg:x="472" fg:w="2"/><text x="38.0705%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.8205%" y="613" width="0.1603%" height="15" fill="rgb(254,49,28)" fg:x="472" fg:w="2"/><text x="38.0705%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="38.0609%" y="613" width="0.1603%" height="15" fill="rgb(223,41,21)" fg:x="475" fg:w="2"/><text x="38.3109%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="37.9808%" y="645" width="0.3205%" height="15" fill="rgb(225,103,29)" fg:x="474" fg:w="4"/><text x="38.2308%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="38.0609%" y="629" width="0.2404%" height="15" fill="rgb(244,82,43)" fg:x="475" fg:w="3"/><text x="38.3109%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2212%" y="613" width="0.0801%" height="15" fill="rgb(217,39,3)" fg:x="477" fg:w="1"/><text x="38.4712%" y="623.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="38.4615%" y="581" width="0.2404%" height="15" fill="rgb(239,128,25)" fg:x="480" fg:w="3"/><text x="38.7115%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="38.4615%" y="613" width="0.4006%" height="15" fill="rgb(210,192,37)" fg:x="480" fg:w="5"/><text x="38.7115%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="38.4615%" y="597" width="0.4006%" height="15" fill="rgb(219,98,18)" fg:x="480" fg:w="5"/><text x="38.7115%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="38.7019%" y="581" width="0.1603%" height="15" fill="rgb(224,228,38)" fg:x="483" fg:w="2"/><text x="38.9519%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.1827%" y="597" width="0.0801%" height="15" fill="rgb(241,129,43)" fg:x="489" fg:w="1"/><text x="39.4327%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="39.2628%" y="597" width="0.2404%" height="15" fill="rgb(223,8,51)" fg:x="490" fg:w="3"/><text x="39.5128%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.3429%" y="581" width="0.1603%" height="15" fill="rgb(233,76,24)" fg:x="491" fg:w="2"/><text x="39.5929%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.3429%" y="565" width="0.1603%" height="15" fill="rgb(219,115,10)" fg:x="491" fg:w="2"/><text x="39.5929%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4231%" y="549" width="0.0801%" height="15" fill="rgb(222,137,12)" fg:x="492" fg:w="1"/><text x="39.6731%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="38.4615%" y="629" width="1.3622%" height="15" fill="rgb(216,192,16)" fg:x="480" fg:w="17"/><text x="38.7115%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="38.8622%" y="613" width="0.9615%" height="15" fill="rgb(247,6,27)" fg:x="485" fg:w="12"/><text x="39.1122%" y="623.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="39.5032%" y="597" width="0.3205%" height="15" fill="rgb(254,39,44)" fg:x="493" fg:w="4"/><text x="39.7532%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 2.48%)</title><rect x="37.4199%" y="677" width="2.4840%" height="15" fill="rgb(251,116,35)" fg:x="467" fg:w="31"/><text x="37.6699%" y="687.50">&lt;s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.16%)</title><rect x="37.7404%" y="661" width="2.1635%" height="15" fill="rgb(208,61,44)" fg:x="471" fg:w="27"/><text x="37.9904%" y="671.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.60%)</title><rect x="38.3013%" y="645" width="1.6026%" height="15" fill="rgb(250,34,5)" fg:x="478" fg:w="20"/><text x="38.5513%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8237%" y="629" width="0.0801%" height="15" fill="rgb(241,40,15)" fg:x="497" fg:w="1"/><text x="40.0737%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9038%" y="645" width="0.0801%" height="15" fill="rgb(229,182,2)" fg:x="498" fg:w="1"/><text x="40.1538%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (49 samples, 3.93%)</title><rect x="36.1378%" y="725" width="3.9263%" height="15" fill="rgb(244,148,52)" fg:x="451" fg:w="49"/><text x="36.3878%" y="735.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 3.85%)</title><rect x="36.2179%" y="709" width="3.8462%" height="15" fill="rgb(225,211,4)" fg:x="452" fg:w="48"/><text x="36.4679%" y="719.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (35 samples, 2.80%)</title><rect x="37.2596%" y="693" width="2.8045%" height="15" fill="rgb(208,222,47)" fg:x="465" fg:w="35"/><text x="37.5096%" y="703.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.9038%" y="677" width="0.1603%" height="15" fill="rgb(233,162,0)" fg:x="498" fg:w="2"/><text x="40.1538%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.9038%" y="661" width="0.1603%" height="15" fill="rgb(241,54,13)" fg:x="498" fg:w="2"/><text x="40.1538%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="39.9840%" y="645" width="0.0801%" height="15" fill="rgb(213,89,18)" fg:x="499" fg:w="1"/><text x="40.2340%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.2244%" y="581" width="0.0801%" height="15" fill="rgb(215,170,37)" fg:x="502" fg:w="1"/><text x="40.4744%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.2244%" y="565" width="0.0801%" height="15" fill="rgb(216,133,15)" fg:x="502" fg:w="1"/><text x="40.4744%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.2244%" y="549" width="0.0801%" height="15" fill="rgb(230,42,19)" fg:x="502" fg:w="1"/><text x="40.4744%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="40.3045%" y="565" width="0.1603%" height="15" fill="rgb(221,103,41)" fg:x="503" fg:w="2"/><text x="40.5545%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.3045%" y="549" width="0.1603%" height="15" fill="rgb(220,142,31)" fg:x="503" fg:w="2"/><text x="40.5545%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.3846%" y="533" width="0.0801%" height="15" fill="rgb(239,218,4)" fg:x="504" fg:w="1"/><text x="40.6346%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="40.3846%" y="517" width="0.0801%" height="15" fill="rgb(232,16,4)" fg:x="504" fg:w="1"/><text x="40.6346%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="40.2244%" y="597" width="0.3205%" height="15" fill="rgb(226,213,25)" fg:x="502" fg:w="4"/><text x="40.4744%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="40.3045%" y="581" width="0.2404%" height="15" fill="rgb(235,135,19)" fg:x="503" fg:w="3"/><text x="40.5545%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.4647%" y="565" width="0.0801%" height="15" fill="rgb(240,107,29)" fg:x="505" fg:w="1"/><text x="40.7147%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4647%" y="549" width="0.0801%" height="15" fill="rgb(206,164,44)" fg:x="505" fg:w="1"/><text x="40.7147%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="40.1442%" y="613" width="0.4808%" height="15" fill="rgb(210,23,48)" fg:x="501" fg:w="6"/><text x="40.3942%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.5449%" y="597" width="0.0801%" height="15" fill="rgb(212,138,25)" fg:x="506" fg:w="1"/><text x="40.7949%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.5449%" y="581" width="0.0801%" height="15" fill="rgb(224,152,3)" fg:x="506" fg:w="1"/><text x="40.7949%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="40.1442%" y="629" width="0.5609%" height="15" fill="rgb(214,38,23)" fg:x="501" fg:w="7"/><text x="40.3942%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6250%" y="613" width="0.0801%" height="15" fill="rgb(215,161,10)" fg:x="507" fg:w="1"/><text x="40.8750%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.7051%" y="629" width="0.0801%" height="15" fill="rgb(240,185,7)" fg:x="508" fg:w="1"/><text x="40.9551%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="40.7051%" y="613" width="0.0801%" height="15" fill="rgb(244,104,25)" fg:x="508" fg:w="1"/><text x="40.9551%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="40.0641%" y="661" width="0.8814%" height="15" fill="rgb(242,140,44)" fg:x="500" fg:w="11"/><text x="40.3141%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="40.1442%" y="645" width="0.8013%" height="15" fill="rgb(245,30,19)" fg:x="501" fg:w="10"/><text x="40.3942%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.7853%" y="629" width="0.1603%" height="15" fill="rgb(219,208,35)" fg:x="509" fg:w="2"/><text x="41.0353%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0256%" y="645" width="0.0801%" height="15" fill="rgb(235,200,7)" fg:x="512" fg:w="1"/><text x="41.2756%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="41.1058%" y="645" width="0.0801%" height="15" fill="rgb(220,193,10)" fg:x="513" fg:w="1"/><text x="41.3558%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="41.1058%" y="629" width="0.0801%" height="15" fill="rgb(212,216,39)" fg:x="513" fg:w="1"/><text x="41.3558%" y="639.50"></text></g><g><title>kernel::model::any_entity_changes (107 samples, 8.57%)</title><rect x="32.6923%" y="741" width="8.5737%" height="15" fill="rgb(212,134,19)" fg:x="408" fg:w="107"/><text x="32.9423%" y="751.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (15 samples, 1.20%)</title><rect x="40.0641%" y="725" width="1.2019%" height="15" fill="rgb(230,57,24)" fg:x="500" fg:w="15"/><text x="40.3141%" y="735.50"></text></g><g><title>serde_json::de::from_trait (15 samples, 1.20%)</title><rect x="40.0641%" y="709" width="1.2019%" height="15" fill="rgb(238,209,37)" fg:x="500" fg:w="15"/><text x="40.3141%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.20%)</title><rect x="40.0641%" y="693" width="1.2019%" height="15" fill="rgb(247,11,45)" fg:x="500" fg:w="15"/><text x="40.3141%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.20%)</title><rect x="40.0641%" y="677" width="1.2019%" height="15" fill="rgb(222,126,6)" fg:x="500" fg:w="15"/><text x="40.3141%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="40.9455%" y="661" width="0.3205%" height="15" fill="rgb(245,77,24)" fg:x="511" fg:w="4"/><text x="41.1955%" y="671.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="41.1859%" y="645" width="0.0801%" height="15" fill="rgb(227,14,24)" fg:x="514" fg:w="1"/><text x="41.4359%" y="655.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.1859%" y="629" width="0.0801%" height="15" fill="rgb(211,112,42)" fg:x="514" fg:w="1"/><text x="41.4359%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.3462%" y="661" width="0.0801%" height="15" fill="rgb(230,103,42)" fg:x="516" fg:w="1"/><text x="41.5962%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3462%" y="645" width="0.0801%" height="15" fill="rgb(228,125,42)" fg:x="516" fg:w="1"/><text x="41.5962%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3462%" y="629" width="0.0801%" height="15" fill="rgb(243,33,6)" fg:x="516" fg:w="1"/><text x="41.5962%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.3462%" y="613" width="0.0801%" height="15" fill="rgb(231,2,40)" fg:x="516" fg:w="1"/><text x="41.5962%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.3462%" y="597" width="0.0801%" height="15" fill="rgb(224,200,53)" fg:x="516" fg:w="1"/><text x="41.5962%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.3462%" y="581" width="0.0801%" height="15" fill="rgb(215,116,36)" fg:x="516" fg:w="1"/><text x="41.5962%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.3462%" y="565" width="0.0801%" height="15" fill="rgb(240,23,51)" fg:x="516" fg:w="1"/><text x="41.5962%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.3462%" y="549" width="0.0801%" height="15" fill="rgb(221,72,5)" fg:x="516" fg:w="1"/><text x="41.5962%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.3462%" y="533" width="0.0801%" height="15" fill="rgb(245,142,9)" fg:x="516" fg:w="1"/><text x="41.5962%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.3462%" y="517" width="0.0801%" height="15" fill="rgb(207,34,16)" fg:x="516" fg:w="1"/><text x="41.5962%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.3462%" y="501" width="0.0801%" height="15" fill="rgb(252,101,12)" fg:x="516" fg:w="1"/><text x="41.5962%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.3462%" y="485" width="0.0801%" height="15" fill="rgb(239,89,37)" fg:x="516" fg:w="1"/><text x="41.5962%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3462%" y="469" width="0.0801%" height="15" fill="rgb(252,227,37)" fg:x="516" fg:w="1"/><text x="41.5962%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="41.2660%" y="693" width="0.2404%" height="15" fill="rgb(212,164,17)" fg:x="515" fg:w="3"/><text x="41.5160%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.3462%" y="677" width="0.1603%" height="15" fill="rgb(240,86,13)" fg:x="516" fg:w="2"/><text x="41.5962%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.4263%" y="661" width="0.0801%" height="15" fill="rgb(233,183,32)" fg:x="517" fg:w="1"/><text x="41.6763%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.2660%" y="709" width="0.3205%" height="15" fill="rgb(205,201,38)" fg:x="515" fg:w="4"/><text x="41.5160%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5064%" y="693" width="0.0801%" height="15" fill="rgb(210,122,38)" fg:x="518" fg:w="1"/><text x="41.7564%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5064%" y="677" width="0.0801%" height="15" fill="rgb(241,174,26)" fg:x="518" fg:w="1"/><text x="41.7564%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.5064%" y="661" width="0.0801%" height="15" fill="rgb(219,89,7)" fg:x="518" fg:w="1"/><text x="41.7564%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.5064%" y="645" width="0.0801%" height="15" fill="rgb(246,9,24)" fg:x="518" fg:w="1"/><text x="41.7564%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.5064%" y="629" width="0.0801%" height="15" fill="rgb(205,132,21)" fg:x="518" fg:w="1"/><text x="41.7564%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5064%" y="613" width="0.0801%" height="15" fill="rgb(210,11,17)" fg:x="518" fg:w="1"/><text x="41.7564%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5064%" y="597" width="0.0801%" height="15" fill="rgb(226,138,14)" fg:x="518" fg:w="1"/><text x="41.7564%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.5064%" y="581" width="0.0801%" height="15" fill="rgb(224,108,44)" fg:x="518" fg:w="1"/><text x="41.7564%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.5064%" y="565" width="0.0801%" height="15" fill="rgb(247,114,36)" fg:x="518" fg:w="1"/><text x="41.7564%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.5064%" y="549" width="0.0801%" height="15" fill="rgb(231,183,14)" fg:x="518" fg:w="1"/><text x="41.7564%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.5064%" y="533" width="0.0801%" height="15" fill="rgb(218,168,4)" fg:x="518" fg:w="1"/><text x="41.7564%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5064%" y="517" width="0.0801%" height="15" fill="rgb(210,8,3)" fg:x="518" fg:w="1"/><text x="41.7564%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="41.2660%" y="725" width="0.4006%" height="15" fill="rgb(216,165,0)" fg:x="515" fg:w="5"/><text x="41.5160%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5865%" y="709" width="0.0801%" height="15" fill="rgb(245,120,5)" fg:x="519" fg:w="1"/><text x="41.8365%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.6667%" y="693" width="0.0801%" height="15" fill="rgb(249,121,32)" fg:x="520" fg:w="1"/><text x="41.9167%" y="703.50"></text></g><g><title>kernel::perms::AclProtection::prefix (1 samples, 0.08%)</title><rect x="41.7468%" y="693" width="0.0801%" height="15" fill="rgb(211,55,33)" fg:x="521" fg:w="1"/><text x="41.9968%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.7468%" y="677" width="0.0801%" height="15" fill="rgb(254,46,35)" fg:x="521" fg:w="1"/><text x="41.9968%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9071%" y="645" width="0.0801%" height="15" fill="rgb(213,213,19)" fg:x="523" fg:w="1"/><text x="42.1571%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9071%" y="629" width="0.0801%" height="15" fill="rgb(207,152,44)" fg:x="523" fg:w="1"/><text x="42.1571%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.9071%" y="613" width="0.0801%" height="15" fill="rgb(227,195,36)" fg:x="523" fg:w="1"/><text x="42.1571%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.9071%" y="597" width="0.0801%" height="15" fill="rgb(210,137,36)" fg:x="523" fg:w="1"/><text x="42.1571%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.9071%" y="581" width="0.0801%" height="15" fill="rgb(253,47,47)" fg:x="523" fg:w="1"/><text x="42.1571%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9071%" y="565" width="0.0801%" height="15" fill="rgb(230,147,18)" fg:x="523" fg:w="1"/><text x="42.1571%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.9071%" y="549" width="0.0801%" height="15" fill="rgb(247,33,49)" fg:x="523" fg:w="1"/><text x="42.1571%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.9071%" y="533" width="0.0801%" height="15" fill="rgb(239,26,29)" fg:x="523" fg:w="1"/><text x="42.1571%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.9071%" y="517" width="0.0801%" height="15" fill="rgb(245,145,52)" fg:x="523" fg:w="1"/><text x="42.1571%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.9071%" y="501" width="0.0801%" height="15" fill="rgb(224,139,32)" fg:x="523" fg:w="1"/><text x="42.1571%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.9071%" y="485" width="0.0801%" height="15" fill="rgb(238,202,19)" fg:x="523" fg:w="1"/><text x="42.1571%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9071%" y="469" width="0.0801%" height="15" fill="rgb(249,211,53)" fg:x="523" fg:w="1"/><text x="42.1571%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="41.8269%" y="677" width="0.2404%" height="15" fill="rgb(237,229,33)" fg:x="522" fg:w="3"/><text x="42.0769%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="41.8269%" y="661" width="0.2404%" height="15" fill="rgb(208,97,40)" fg:x="522" fg:w="3"/><text x="42.0769%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9872%" y="645" width="0.0801%" height="15" fill="rgb(254,36,16)" fg:x="524" fg:w="1"/><text x="42.2372%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9872%" y="629" width="0.0801%" height="15" fill="rgb(221,7,12)" fg:x="524" fg:w="1"/><text x="42.2372%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9872%" y="613" width="0.0801%" height="15" fill="rgb(205,11,12)" fg:x="524" fg:w="1"/><text x="42.2372%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9872%" y="597" width="0.0801%" height="15" fill="rgb(227,72,28)" fg:x="524" fg:w="1"/><text x="42.2372%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.9872%" y="581" width="0.0801%" height="15" fill="rgb(228,7,34)" fg:x="524" fg:w="1"/><text x="42.2372%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.9872%" y="565" width="0.0801%" height="15" fill="rgb(230,52,42)" fg:x="524" fg:w="1"/><text x="42.2372%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.9872%" y="549" width="0.0801%" height="15" fill="rgb(219,177,53)" fg:x="524" fg:w="1"/><text x="42.2372%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.9872%" y="533" width="0.0801%" height="15" fill="rgb(243,196,34)" fg:x="524" fg:w="1"/><text x="42.2372%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.9872%" y="517" width="0.0801%" height="15" fill="rgb(213,66,49)" fg:x="524" fg:w="1"/><text x="42.2372%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="42.0673%" y="629" width="0.2404%" height="15" fill="rgb(233,11,50)" fg:x="525" fg:w="3"/><text x="42.3173%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.1474%" y="613" width="0.1603%" height="15" fill="rgb(235,190,6)" fg:x="526" fg:w="2"/><text x="42.3974%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.1474%" y="597" width="0.1603%" height="15" fill="rgb(212,64,44)" fg:x="526" fg:w="2"/><text x="42.3974%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.3077%" y="597" width="0.0801%" height="15" fill="rgb(206,95,44)" fg:x="528" fg:w="1"/><text x="42.5577%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.4679%" y="581" width="0.0801%" height="15" fill="rgb(227,136,25)" fg:x="530" fg:w="1"/><text x="42.7179%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.4679%" y="565" width="0.0801%" height="15" fill="rgb(206,178,17)" fg:x="530" fg:w="1"/><text x="42.7179%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7083%" y="533" width="0.0801%" height="15" fill="rgb(208,168,35)" fg:x="533" fg:w="1"/><text x="42.9583%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7083%" y="517" width="0.0801%" height="15" fill="rgb(213,210,40)" fg:x="533" fg:w="1"/><text x="42.9583%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7083%" y="501" width="0.0801%" height="15" fill="rgb(236,60,6)" fg:x="533" fg:w="1"/><text x="42.9583%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.7083%" y="485" width="0.0801%" height="15" fill="rgb(220,186,36)" fg:x="533" fg:w="1"/><text x="42.9583%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.7083%" y="469" width="0.0801%" height="15" fill="rgb(225,120,49)" fg:x="533" fg:w="1"/><text x="42.9583%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.7083%" y="453" width="0.0801%" height="15" fill="rgb(250,115,20)" fg:x="533" fg:w="1"/><text x="42.9583%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.7083%" y="437" width="0.0801%" height="15" fill="rgb(207,214,23)" fg:x="533" fg:w="1"/><text x="42.9583%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.7083%" y="421" width="0.0801%" height="15" fill="rgb(240,9,18)" fg:x="533" fg:w="1"/><text x="42.9583%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.7083%" y="405" width="0.0801%" height="15" fill="rgb(232,170,48)" fg:x="533" fg:w="1"/><text x="42.9583%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.7083%" y="389" width="0.0801%" height="15" fill="rgb(236,149,23)" fg:x="533" fg:w="1"/><text x="42.9583%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.7083%" y="373" width="0.0801%" height="15" fill="rgb(210,125,42)" fg:x="533" fg:w="1"/><text x="42.9583%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.7083%" y="357" width="0.0801%" height="15" fill="rgb(207,201,52)" fg:x="533" fg:w="1"/><text x="42.9583%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7083%" y="341" width="0.0801%" height="15" fill="rgb(250,187,37)" fg:x="533" fg:w="1"/><text x="42.9583%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="42.7885%" y="533" width="0.0801%" height="15" fill="rgb(214,186,2)" fg:x="534" fg:w="1"/><text x="43.0385%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.7885%" y="517" width="0.0801%" height="15" fill="rgb(207,189,15)" fg:x="534" fg:w="1"/><text x="43.0385%" y="527.50"></text></g><g><title>kernel::perms::find_acls (1 samples, 0.08%)</title><rect x="42.7885%" y="501" width="0.0801%" height="15" fill="rgb(221,99,21)" fg:x="534" fg:w="1"/><text x="43.0385%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="42.0673%" y="677" width="0.8814%" height="15" fill="rgb(212,67,18)" fg:x="525" fg:w="11"/><text x="42.3173%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.88%)</title><rect x="42.0673%" y="661" width="0.8814%" height="15" fill="rgb(226,24,24)" fg:x="525" fg:w="11"/><text x="42.3173%" y="671.50"></text></g><g><title>kernel::perms::find_acls (11 samples, 0.88%)</title><rect x="42.0673%" y="645" width="0.8814%" height="15" fill="rgb(252,123,31)" fg:x="525" fg:w="11"/><text x="42.3173%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="42.3077%" y="629" width="0.6410%" height="15" fill="rgb(251,227,47)" fg:x="528" fg:w="8"/><text x="42.5577%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="42.3077%" y="613" width="0.6410%" height="15" fill="rgb(233,84,53)" fg:x="528" fg:w="8"/><text x="42.5577%" y="623.50"></text></g><g><title>kernel::perms::find_acls (7 samples, 0.56%)</title><rect x="42.3878%" y="597" width="0.5609%" height="15" fill="rgb(228,57,19)" fg:x="529" fg:w="7"/><text x="42.6378%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="42.5481%" y="581" width="0.4006%" height="15" fill="rgb(251,81,5)" fg:x="531" fg:w="5"/><text x="42.7981%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="42.5481%" y="565" width="0.4006%" height="15" fill="rgb(236,211,27)" fg:x="531" fg:w="5"/><text x="42.7981%" y="575.50"></text></g><g><title>kernel::perms::find_acls (3 samples, 0.24%)</title><rect x="42.7083%" y="549" width="0.2404%" height="15" fill="rgb(218,21,6)" fg:x="533" fg:w="3"/><text x="42.9583%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8686%" y="533" width="0.0801%" height="15" fill="rgb(239,104,19)" fg:x="535" fg:w="1"/><text x="43.1186%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8686%" y="517" width="0.0801%" height="15" fill="rgb(234,179,27)" fg:x="535" fg:w="1"/><text x="43.1186%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.8686%" y="501" width="0.0801%" height="15" fill="rgb(221,154,39)" fg:x="535" fg:w="1"/><text x="43.1186%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.36%)</title><rect x="41.6667%" y="725" width="1.3622%" height="15" fill="rgb(228,190,1)" fg:x="520" fg:w="17"/><text x="41.9167%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 1.36%)</title><rect x="41.6667%" y="709" width="1.3622%" height="15" fill="rgb(244,122,33)" fg:x="520" fg:w="17"/><text x="41.9167%" y="719.50"></text></g><g><title>kernel::perms::find_acls (15 samples, 1.20%)</title><rect x="41.8269%" y="693" width="1.2019%" height="15" fill="rgb(227,56,37)" fg:x="522" fg:w="15"/><text x="42.0769%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.9487%" y="677" width="0.0801%" height="15" fill="rgb(207,158,16)" fg:x="536" fg:w="1"/><text x="43.1987%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.9487%" y="661" width="0.0801%" height="15" fill="rgb(251,222,30)" fg:x="536" fg:w="1"/><text x="43.1987%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.9487%" y="645" width="0.0801%" height="15" fill="rgb(240,22,49)" fg:x="536" fg:w="1"/><text x="43.1987%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.9487%" y="629" width="0.0801%" height="15" fill="rgb(224,207,37)" fg:x="536" fg:w="1"/><text x="43.1987%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.9487%" y="613" width="0.0801%" height="15" fill="rgb(249,188,40)" fg:x="536" fg:w="1"/><text x="43.1987%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="42.9487%" y="597" width="0.0801%" height="15" fill="rgb(254,141,11)" fg:x="536" fg:w="1"/><text x="43.1987%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.9487%" y="581" width="0.0801%" height="15" fill="rgb(231,177,6)" fg:x="536" fg:w="1"/><text x="43.1987%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.9487%" y="565" width="0.0801%" height="15" fill="rgb(241,6,16)" fg:x="536" fg:w="1"/><text x="43.1987%" y="575.50"></text></g><g><title>engine::session::state::State::close (197 samples, 15.79%)</title><rect x="27.3237%" y="805" width="15.7853%" height="15" fill="rgb(230,50,14)" fg:x="341" fg:w="197"/><text x="27.5737%" y="815.50">engine::session::state::..</text></g><g><title>engine::session::state::State::flush_entities (183 samples, 14.66%)</title><rect x="28.4455%" y="789" width="14.6635%" height="15" fill="rgb(254,36,3)" fg:x="355" fg:w="183"/><text x="28.6955%" y="799.50">engine::session::state..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (180 samples, 14.42%)</title><rect x="28.6859%" y="773" width="14.4231%" height="15" fill="rgb(226,149,37)" fg:x="358" fg:w="180"/><text x="28.9359%" y="783.50">engine::session::inter..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (179 samples, 14.34%)</title><rect x="28.7660%" y="757" width="14.3429%" height="15" fill="rgb(253,49,27)" fg:x="359" fg:w="179"/><text x="29.0160%" y="767.50">engine::session::state..</text></g><g><title>kernel::perms::find_acls (23 samples, 1.84%)</title><rect x="41.2660%" y="741" width="1.8429%" height="15" fill="rgb(249,182,52)" fg:x="515" fg:w="23"/><text x="41.5160%" y="751.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0288%" y="725" width="0.0801%" height="15" fill="rgb(223,42,15)" fg:x="537" fg:w="1"/><text x="43.2788%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0288%" y="709" width="0.0801%" height="15" fill="rgb(232,31,42)" fg:x="537" fg:w="1"/><text x="43.2788%" y="719.50"></text></g><g><title>serde::de::Error::missing_field (1 samples, 0.08%)</title><rect x="43.0288%" y="693" width="0.0801%" height="15" fill="rgb(233,56,46)" fg:x="537" fg:w="1"/><text x="43.2788%" y="703.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="43.0288%" y="677" width="0.0801%" height="15" fill="rgb(241,143,21)" fg:x="537" fg:w="1"/><text x="43.2788%" y="687.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="43.0288%" y="661" width="0.0801%" height="15" fill="rgb(251,222,15)" fg:x="537" fg:w="1"/><text x="43.2788%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="43.0288%" y="645" width="0.0801%" height="15" fill="rgb(242,101,40)" fg:x="537" fg:w="1"/><text x="43.2788%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="43.0288%" y="629" width="0.0801%" height="15" fill="rgb(247,60,44)" fg:x="537" fg:w="1"/><text x="43.2788%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="43.1090%" y="805" width="0.0801%" height="15" fill="rgb(254,48,47)" fg:x="538" fg:w="1"/><text x="43.3590%" y="815.50"></text></g><g><title>engine::session::Session::close (204 samples, 16.35%)</title><rect x="26.9231%" y="821" width="16.3462%" height="15" fill="rgb(253,30,33)" fg:x="336" fg:w="204"/><text x="27.1731%" y="831.50">engine::session::Session:..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="43.1891%" y="805" width="0.0801%" height="15" fill="rgb(253,214,47)" fg:x="539" fg:w="1"/><text x="43.4391%" y="815.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="43.1891%" y="789" width="0.0801%" height="15" fill="rgb(241,108,29)" fg:x="539" fg:w="1"/><text x="43.4391%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="43.1891%" y="773" width="0.0801%" height="15" fill="rgb(240,36,2)" fg:x="539" fg:w="1"/><text x="43.4391%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="43.1891%" y="757" width="0.0801%" height="15" fill="rgb(243,198,24)" fg:x="539" fg:w="1"/><text x="43.4391%" y="767.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="43.1891%" y="741" width="0.0801%" height="15" fill="rgb(225,98,27)" fg:x="539" fg:w="1"/><text x="43.4391%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="43.5096%" y="693" width="0.0801%" height="15" fill="rgb(208,86,30)" fg:x="543" fg:w="1"/><text x="43.7596%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="43.5096%" y="677" width="0.0801%" height="15" fill="rgb(242,157,11)" fg:x="543" fg:w="1"/><text x="43.7596%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="43.5096%" y="661" width="0.0801%" height="15" fill="rgb(244,84,16)" fg:x="543" fg:w="1"/><text x="43.7596%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="43.5897%" y="565" width="0.0801%" height="15" fill="rgb(247,20,46)" fg:x="544" fg:w="1"/><text x="43.8397%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.5897%" y="549" width="0.0801%" height="15" fill="rgb(240,157,20)" fg:x="544" fg:w="1"/><text x="43.8397%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="43.5897%" y="533" width="0.0801%" height="15" fill="rgb(212,151,38)" fg:x="544" fg:w="1"/><text x="43.8397%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="43.5897%" y="613" width="0.1603%" height="15" fill="rgb(233,197,14)" fg:x="544" fg:w="2"/><text x="43.8397%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="43.5897%" y="597" width="0.1603%" height="15" fill="rgb(226,148,28)" fg:x="544" fg:w="2"/><text x="43.8397%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="43.5897%" y="581" width="0.1603%" height="15" fill="rgb(244,141,30)" fg:x="544" fg:w="2"/><text x="43.8397%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.6699%" y="565" width="0.0801%" height="15" fill="rgb(215,73,38)" fg:x="545" fg:w="1"/><text x="43.9199%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.6699%" y="549" width="0.0801%" height="15" fill="rgb(230,148,29)" fg:x="545" fg:w="1"/><text x="43.9199%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.6699%" y="533" width="0.0801%" height="15" fill="rgb(250,41,52)" fg:x="545" fg:w="1"/><text x="43.9199%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.6699%" y="517" width="0.0801%" height="15" fill="rgb(215,48,1)" fg:x="545" fg:w="1"/><text x="43.9199%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6699%" y="501" width="0.0801%" height="15" fill="rgb(205,223,38)" fg:x="545" fg:w="1"/><text x="43.9199%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6699%" y="485" width="0.0801%" height="15" fill="rgb(213,51,8)" fg:x="545" fg:w="1"/><text x="43.9199%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.6699%" y="469" width="0.0801%" height="15" fill="rgb(248,53,11)" fg:x="545" fg:w="1"/><text x="43.9199%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.6699%" y="453" width="0.0801%" height="15" fill="rgb(218,140,4)" fg:x="545" fg:w="1"/><text x="43.9199%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.6699%" y="437" width="0.0801%" height="15" fill="rgb(248,161,31)" fg:x="545" fg:w="1"/><text x="43.9199%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.6699%" y="421" width="0.0801%" height="15" fill="rgb(239,88,32)" fg:x="545" fg:w="1"/><text x="43.9199%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.6699%" y="405" width="0.0801%" height="15" fill="rgb(234,14,28)" fg:x="545" fg:w="1"/><text x="43.9199%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.6699%" y="389" width="0.0801%" height="15" fill="rgb(235,173,11)" fg:x="545" fg:w="1"/><text x="43.9199%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.6699%" y="373" width="0.0801%" height="15" fill="rgb(222,70,2)" fg:x="545" fg:w="1"/><text x="43.9199%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.6699%" y="357" width="0.0801%" height="15" fill="rgb(228,196,41)" fg:x="545" fg:w="1"/><text x="43.9199%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.6699%" y="341" width="0.0801%" height="15" fill="rgb(249,19,9)" fg:x="545" fg:w="1"/><text x="43.9199%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.6699%" y="325" width="0.0801%" height="15" fill="rgb(221,16,43)" fg:x="545" fg:w="1"/><text x="43.9199%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.8301%" y="517" width="0.0801%" height="15" fill="rgb(225,207,6)" fg:x="547" fg:w="1"/><text x="44.0801%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.8301%" y="501" width="0.0801%" height="15" fill="rgb(249,32,32)" fg:x="547" fg:w="1"/><text x="44.0801%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.9103%" y="517" width="0.0801%" height="15" fill="rgb(232,163,43)" fg:x="548" fg:w="1"/><text x="44.1603%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="43.8301%" y="597" width="0.2404%" height="15" fill="rgb(236,158,54)" fg:x="547" fg:w="3"/><text x="44.0801%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="43.8301%" y="581" width="0.2404%" height="15" fill="rgb(205,126,44)" fg:x="547" fg:w="3"/><text x="44.0801%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="43.8301%" y="565" width="0.2404%" height="15" fill="rgb(210,162,12)" fg:x="547" fg:w="3"/><text x="44.0801%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="43.8301%" y="549" width="0.2404%" height="15" fill="rgb(218,156,48)" fg:x="547" fg:w="3"/><text x="44.0801%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="43.8301%" y="533" width="0.2404%" height="15" fill="rgb(248,210,3)" fg:x="547" fg:w="3"/><text x="44.0801%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.9904%" y="517" width="0.0801%" height="15" fill="rgb(212,43,27)" fg:x="549" fg:w="1"/><text x="44.2404%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.9904%" y="501" width="0.0801%" height="15" fill="rgb(241,52,6)" fg:x="549" fg:w="1"/><text x="44.2404%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.9904%" y="485" width="0.0801%" height="15" fill="rgb(222,178,35)" fg:x="549" fg:w="1"/><text x="44.2404%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.9904%" y="469" width="0.0801%" height="15" fill="rgb(205,121,46)" fg:x="549" fg:w="1"/><text x="44.2404%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.9904%" y="453" width="0.0801%" height="15" fill="rgb(249,67,1)" fg:x="549" fg:w="1"/><text x="44.2404%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="44.0705%" y="517" width="0.0801%" height="15" fill="rgb(238,168,42)" fg:x="550" fg:w="1"/><text x="44.3205%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="44.0705%" y="501" width="0.0801%" height="15" fill="rgb(205,36,48)" fg:x="550" fg:w="1"/><text x="44.3205%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="44.0705%" y="485" width="0.0801%" height="15" fill="rgb(240,85,12)" fg:x="550" fg:w="1"/><text x="44.3205%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="44.0705%" y="469" width="0.0801%" height="15" fill="rgb(245,27,39)" fg:x="550" fg:w="1"/><text x="44.3205%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0705%" y="453" width="0.0801%" height="15" fill="rgb(218,129,34)" fg:x="550" fg:w="1"/><text x="44.3205%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="43.5897%" y="629" width="0.7212%" height="15" fill="rgb(221,157,12)" fg:x="544" fg:w="9"/><text x="43.8397%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="43.7500%" y="613" width="0.5609%" height="15" fill="rgb(213,206,20)" fg:x="546" fg:w="7"/><text x="44.0000%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.0705%" y="597" width="0.2404%" height="15" fill="rgb(227,115,30)" fg:x="550" fg:w="3"/><text x="44.3205%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.0705%" y="581" width="0.2404%" height="15" fill="rgb(221,40,47)" fg:x="550" fg:w="3"/><text x="44.3205%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="44.0705%" y="565" width="0.2404%" height="15" fill="rgb(239,96,49)" fg:x="550" fg:w="3"/><text x="44.3205%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.0705%" y="549" width="0.2404%" height="15" fill="rgb(223,24,38)" fg:x="550" fg:w="3"/><text x="44.3205%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.0705%" y="533" width="0.2404%" height="15" fill="rgb(242,35,45)" fg:x="550" fg:w="3"/><text x="44.3205%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.1506%" y="517" width="0.1603%" height="15" fill="rgb(236,20,9)" fg:x="551" fg:w="2"/><text x="44.4006%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.1506%" y="501" width="0.1603%" height="15" fill="rgb(239,124,8)" fg:x="551" fg:w="2"/><text x="44.4006%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="44.1506%" y="485" width="0.1603%" height="15" fill="rgb(228,92,29)" fg:x="551" fg:w="2"/><text x="44.4006%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.1506%" y="469" width="0.1603%" height="15" fill="rgb(251,53,39)" fg:x="551" fg:w="2"/><text x="44.4006%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.1506%" y="453" width="0.1603%" height="15" fill="rgb(224,44,10)" fg:x="551" fg:w="2"/><text x="44.4006%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="44.1506%" y="437" width="0.1603%" height="15" fill="rgb(254,10,15)" fg:x="551" fg:w="2"/><text x="44.4006%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.1506%" y="421" width="0.1603%" height="15" fill="rgb(245,173,6)" fg:x="551" fg:w="2"/><text x="44.4006%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.1506%" y="405" width="0.1603%" height="15" fill="rgb(228,74,0)" fg:x="551" fg:w="2"/><text x="44.4006%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.88%)</title><rect x="43.5897%" y="661" width="0.8814%" height="15" fill="rgb(206,138,29)" fg:x="544" fg:w="11"/><text x="43.8397%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.88%)</title><rect x="43.5897%" y="645" width="0.8814%" height="15" fill="rgb(253,27,43)" fg:x="544" fg:w="11"/><text x="43.8397%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="44.3109%" y="629" width="0.1603%" height="15" fill="rgb(231,73,0)" fg:x="553" fg:w="2"/><text x="44.5609%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3910%" y="613" width="0.0801%" height="15" fill="rgb(218,9,23)" fg:x="554" fg:w="1"/><text x="44.6410%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3910%" y="597" width="0.0801%" height="15" fill="rgb(251,55,29)" fg:x="554" fg:w="1"/><text x="44.6410%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3910%" y="581" width="0.0801%" height="15" fill="rgb(223,180,22)" fg:x="554" fg:w="1"/><text x="44.6410%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.3910%" y="565" width="0.0801%" height="15" fill="rgb(223,29,21)" fg:x="554" fg:w="1"/><text x="44.6410%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.3910%" y="549" width="0.0801%" height="15" fill="rgb(251,103,37)" fg:x="554" fg:w="1"/><text x="44.6410%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.3910%" y="533" width="0.0801%" height="15" fill="rgb(214,11,21)" fg:x="554" fg:w="1"/><text x="44.6410%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="44.3910%" y="517" width="0.0801%" height="15" fill="rgb(205,137,13)" fg:x="554" fg:w="1"/><text x="44.6410%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="44.3910%" y="501" width="0.0801%" height="15" fill="rgb(225,58,47)" fg:x="554" fg:w="1"/><text x="44.6410%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4712%" y="629" width="0.0801%" height="15" fill="rgb(222,197,14)" fg:x="555" fg:w="1"/><text x="44.7212%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.4712%" y="613" width="0.0801%" height="15" fill="rgb(215,210,33)" fg:x="555" fg:w="1"/><text x="44.7212%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.4712%" y="597" width="0.0801%" height="15" fill="rgb(242,13,9)" fg:x="555" fg:w="1"/><text x="44.7212%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.4712%" y="581" width="0.0801%" height="15" fill="rgb(218,31,39)" fg:x="555" fg:w="1"/><text x="44.7212%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.4712%" y="565" width="0.0801%" height="15" fill="rgb(211,214,23)" fg:x="555" fg:w="1"/><text x="44.7212%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.4712%" y="549" width="0.0801%" height="15" fill="rgb(237,92,14)" fg:x="555" fg:w="1"/><text x="44.7212%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.4712%" y="533" width="0.0801%" height="15" fill="rgb(220,78,5)" fg:x="555" fg:w="1"/><text x="44.7212%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.4712%" y="517" width="0.0801%" height="15" fill="rgb(237,23,21)" fg:x="555" fg:w="1"/><text x="44.7212%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.4712%" y="501" width="0.0801%" height="15" fill="rgb(251,207,51)" fg:x="555" fg:w="1"/><text x="44.7212%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.4712%" y="485" width="0.0801%" height="15" fill="rgb(249,206,18)" fg:x="555" fg:w="1"/><text x="44.7212%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.4712%" y="469" width="0.0801%" height="15" fill="rgb(236,20,19)" fg:x="555" fg:w="1"/><text x="44.7212%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.4712%" y="453" width="0.0801%" height="15" fill="rgb(214,227,29)" fg:x="555" fg:w="1"/><text x="44.7212%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.4712%" y="661" width="0.1603%" height="15" fill="rgb(209,183,4)" fg:x="555" fg:w="2"/><text x="44.7212%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.4712%" y="645" width="0.1603%" height="15" fill="rgb(233,111,23)" fg:x="555" fg:w="2"/><text x="44.7212%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5513%" y="629" width="0.0801%" height="15" fill="rgb(238,121,27)" fg:x="556" fg:w="1"/><text x="44.8013%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5513%" y="613" width="0.0801%" height="15" fill="rgb(236,120,41)" fg:x="556" fg:w="1"/><text x="44.8013%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.5513%" y="597" width="0.0801%" height="15" fill="rgb(241,143,10)" fg:x="556" fg:w="1"/><text x="44.8013%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.5513%" y="581" width="0.0801%" height="15" fill="rgb(224,86,31)" fg:x="556" fg:w="1"/><text x="44.8013%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.5513%" y="565" width="0.0801%" height="15" fill="rgb(236,212,27)" fg:x="556" fg:w="1"/><text x="44.8013%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5513%" y="549" width="0.0801%" height="15" fill="rgb(219,43,51)" fg:x="556" fg:w="1"/><text x="44.8013%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5513%" y="533" width="0.0801%" height="15" fill="rgb(232,216,8)" fg:x="556" fg:w="1"/><text x="44.8013%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.5513%" y="517" width="0.0801%" height="15" fill="rgb(206,222,39)" fg:x="556" fg:w="1"/><text x="44.8013%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.5513%" y="501" width="0.0801%" height="15" fill="rgb(209,149,48)" fg:x="556" fg:w="1"/><text x="44.8013%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.5513%" y="485" width="0.0801%" height="15" fill="rgb(229,155,21)" fg:x="556" fg:w="1"/><text x="44.8013%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.5513%" y="469" width="0.0801%" height="15" fill="rgb(246,152,26)" fg:x="556" fg:w="1"/><text x="44.8013%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="44.5513%" y="453" width="0.0801%" height="15" fill="rgb(206,70,42)" fg:x="556" fg:w="1"/><text x="44.8013%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="44.5513%" y="437" width="0.0801%" height="15" fill="rgb(236,9,11)" fg:x="556" fg:w="1"/><text x="44.8013%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (15 samples, 1.20%)</title><rect x="43.5096%" y="709" width="1.2019%" height="15" fill="rgb(238,145,47)" fg:x="543" fg:w="15"/><text x="43.7596%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.12%)</title><rect x="43.5897%" y="693" width="1.1218%" height="15" fill="rgb(252,189,7)" fg:x="544" fg:w="14"/><text x="43.8397%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.12%)</title><rect x="43.5897%" y="677" width="1.1218%" height="15" fill="rgb(254,168,51)" fg:x="544" fg:w="14"/><text x="43.8397%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.6314%" y="661" width="0.0801%" height="15" fill="rgb(227,105,46)" fg:x="557" fg:w="1"/><text x="44.8814%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.6314%" y="645" width="0.0801%" height="15" fill="rgb(227,74,30)" fg:x="557" fg:w="1"/><text x="44.8814%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.6314%" y="629" width="0.0801%" height="15" fill="rgb(206,212,44)" fg:x="557" fg:w="1"/><text x="44.8814%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.6314%" y="613" width="0.0801%" height="15" fill="rgb(252,69,11)" fg:x="557" fg:w="1"/><text x="44.8814%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="44.7917%" y="661" width="0.0801%" height="15" fill="rgb(239,116,0)" fg:x="559" fg:w="1"/><text x="45.0417%" y="671.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.7917%" y="645" width="0.0801%" height="15" fill="rgb(246,189,23)" fg:x="559" fg:w="1"/><text x="45.0417%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.7917%" y="629" width="0.0801%" height="15" fill="rgb(229,50,41)" fg:x="559" fg:w="1"/><text x="45.0417%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.7917%" y="613" width="0.0801%" height="15" fill="rgb(214,66,37)" fg:x="559" fg:w="1"/><text x="45.0417%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.7917%" y="597" width="0.0801%" height="15" fill="rgb(226,28,6)" fg:x="559" fg:w="1"/><text x="45.0417%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.7917%" y="581" width="0.0801%" height="15" fill="rgb(239,154,0)" fg:x="559" fg:w="1"/><text x="45.0417%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.7917%" y="565" width="0.0801%" height="15" fill="rgb(233,97,11)" fg:x="559" fg:w="1"/><text x="45.0417%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.7917%" y="549" width="0.0801%" height="15" fill="rgb(236,215,16)" fg:x="559" fg:w="1"/><text x="45.0417%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.7917%" y="533" width="0.0801%" height="15" fill="rgb(246,188,29)" fg:x="559" fg:w="1"/><text x="45.0417%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.7917%" y="517" width="0.0801%" height="15" fill="rgb(207,7,29)" fg:x="559" fg:w="1"/><text x="45.0417%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.7917%" y="501" width="0.0801%" height="15" fill="rgb(238,112,43)" fg:x="559" fg:w="1"/><text x="45.0417%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.7917%" y="485" width="0.0801%" height="15" fill="rgb(230,110,32)" fg:x="559" fg:w="1"/><text x="45.0417%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.7917%" y="469" width="0.0801%" height="15" fill="rgb(218,197,32)" fg:x="559" fg:w="1"/><text x="45.0417%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.7917%" y="453" width="0.0801%" height="15" fill="rgb(252,61,9)" fg:x="559" fg:w="1"/><text x="45.0417%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7917%" y="437" width="0.0801%" height="15" fill="rgb(244,140,14)" fg:x="559" fg:w="1"/><text x="45.0417%" y="447.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (19 samples, 1.52%)</title><rect x="43.5096%" y="725" width="1.5224%" height="15" fill="rgb(216,14,47)" fg:x="543" fg:w="19"/><text x="43.7596%" y="735.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (4 samples, 0.32%)</title><rect x="44.7115%" y="709" width="0.3205%" height="15" fill="rgb(224,130,52)" fg:x="558" fg:w="4"/><text x="44.9615%" y="719.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="44.7917%" y="693" width="0.2404%" height="15" fill="rgb(210,229,51)" fg:x="559" fg:w="3"/><text x="45.0417%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="44.7917%" y="677" width="0.2404%" height="15" fill="rgb(242,13,9)" fg:x="559" fg:w="3"/><text x="45.0417%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="44.8718%" y="661" width="0.1603%" height="15" fill="rgb(252,71,50)" fg:x="560" fg:w="2"/><text x="45.1218%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="44.8718%" y="645" width="0.1603%" height="15" fill="rgb(218,225,6)" fg:x="560" fg:w="2"/><text x="45.1218%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="44.8718%" y="629" width="0.1603%" height="15" fill="rgb(219,27,35)" fg:x="560" fg:w="2"/><text x="45.1218%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.8718%" y="613" width="0.1603%" height="15" fill="rgb(226,30,1)" fg:x="560" fg:w="2"/><text x="45.1218%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.8718%" y="597" width="0.1603%" height="15" fill="rgb(227,164,34)" fg:x="560" fg:w="2"/><text x="45.1218%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="44.8718%" y="581" width="0.1603%" height="15" fill="rgb(206,103,4)" fg:x="560" fg:w="2"/><text x="45.1218%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="44.8718%" y="565" width="0.1603%" height="15" fill="rgb(214,166,19)" fg:x="560" fg:w="2"/><text x="45.1218%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.8718%" y="549" width="0.1603%" height="15" fill="rgb(240,56,20)" fg:x="560" fg:w="2"/><text x="45.1218%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.8718%" y="533" width="0.1603%" height="15" fill="rgb(224,25,3)" fg:x="560" fg:w="2"/><text x="45.1218%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="44.8718%" y="517" width="0.1603%" height="15" fill="rgb(216,206,54)" fg:x="560" fg:w="2"/><text x="45.1218%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="44.8718%" y="501" width="0.1603%" height="15" fill="rgb(225,142,10)" fg:x="560" fg:w="2"/><text x="45.1218%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.9519%" y="485" width="0.0801%" height="15" fill="rgb(246,9,18)" fg:x="561" fg:w="1"/><text x="45.2019%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.9519%" y="469" width="0.0801%" height="15" fill="rgb(247,140,18)" fg:x="561" fg:w="1"/><text x="45.2019%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.9519%" y="453" width="0.0801%" height="15" fill="rgb(239,184,22)" fg:x="561" fg:w="1"/><text x="45.2019%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.9519%" y="437" width="0.0801%" height="15" fill="rgb(227,94,44)" fg:x="561" fg:w="1"/><text x="45.2019%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="44.9519%" y="421" width="0.0801%" height="15" fill="rgb(219,43,3)" fg:x="561" fg:w="1"/><text x="45.2019%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="44.9519%" y="405" width="0.0801%" height="15" fill="rgb(210,76,31)" fg:x="561" fg:w="1"/><text x="45.2019%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="44.9519%" y="389" width="0.0801%" height="15" fill="rgb(225,85,12)" fg:x="561" fg:w="1"/><text x="45.2019%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="44.9519%" y="373" width="0.0801%" height="15" fill="rgb(214,191,28)" fg:x="561" fg:w="1"/><text x="45.2019%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.9519%" y="357" width="0.0801%" height="15" fill="rgb(214,43,14)" fg:x="561" fg:w="1"/><text x="45.2019%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.9519%" y="341" width="0.0801%" height="15" fill="rgb(253,117,5)" fg:x="561" fg:w="1"/><text x="45.2019%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.9519%" y="325" width="0.0801%" height="15" fill="rgb(208,124,26)" fg:x="561" fg:w="1"/><text x="45.2019%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="44.9519%" y="309" width="0.0801%" height="15" fill="rgb(228,208,39)" fg:x="561" fg:w="1"/><text x="45.2019%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.9519%" y="293" width="0.0801%" height="15" fill="rgb(206,180,39)" fg:x="561" fg:w="1"/><text x="45.2019%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="44.9519%" y="277" width="0.0801%" height="15" fill="rgb(205,111,37)" fg:x="561" fg:w="1"/><text x="45.2019%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="44.9519%" y="261" width="0.0801%" height="15" fill="rgb(208,121,24)" fg:x="561" fg:w="1"/><text x="45.2019%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="44.9519%" y="245" width="0.0801%" height="15" fill="rgb(218,215,32)" fg:x="561" fg:w="1"/><text x="45.2019%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.9519%" y="229" width="0.0801%" height="15" fill="rgb(244,168,53)" fg:x="561" fg:w="1"/><text x="45.2019%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="45.0321%" y="725" width="0.0801%" height="15" fill="rgb(214,9,36)" fg:x="562" fg:w="1"/><text x="45.2821%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.2724%" y="565" width="0.0801%" height="15" fill="rgb(231,4,34)" fg:x="565" fg:w="1"/><text x="45.5224%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.5128%" y="517" width="0.0801%" height="15" fill="rgb(210,83,51)" fg:x="568" fg:w="1"/><text x="45.7628%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="45.4327%" y="549" width="0.2404%" height="15" fill="rgb(224,112,1)" fg:x="567" fg:w="3"/><text x="45.6827%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="45.4327%" y="533" width="0.2404%" height="15" fill="rgb(216,33,41)" fg:x="567" fg:w="3"/><text x="45.6827%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.5929%" y="517" width="0.0801%" height="15" fill="rgb(215,179,42)" fg:x="569" fg:w="1"/><text x="45.8429%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.5929%" y="501" width="0.0801%" height="15" fill="rgb(205,81,48)" fg:x="569" fg:w="1"/><text x="45.8429%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.5929%" y="485" width="0.0801%" height="15" fill="rgb(246,17,30)" fg:x="569" fg:w="1"/><text x="45.8429%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.5929%" y="469" width="0.0801%" height="15" fill="rgb(226,19,16)" fg:x="569" fg:w="1"/><text x="45.8429%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.5929%" y="453" width="0.0801%" height="15" fill="rgb(207,3,14)" fg:x="569" fg:w="1"/><text x="45.8429%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.5929%" y="437" width="0.0801%" height="15" fill="rgb(226,77,12)" fg:x="569" fg:w="1"/><text x="45.8429%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.5929%" y="421" width="0.0801%" height="15" fill="rgb(226,76,25)" fg:x="569" fg:w="1"/><text x="45.8429%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.5929%" y="405" width="0.0801%" height="15" fill="rgb(217,216,25)" fg:x="569" fg:w="1"/><text x="45.8429%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.5929%" y="389" width="0.0801%" height="15" fill="rgb(247,127,42)" fg:x="569" fg:w="1"/><text x="45.8429%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.5929%" y="373" width="0.0801%" height="15" fill="rgb(226,10,34)" fg:x="569" fg:w="1"/><text x="45.8429%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.5929%" y="357" width="0.0801%" height="15" fill="rgb(249,78,0)" fg:x="569" fg:w="1"/><text x="45.8429%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.5929%" y="341" width="0.0801%" height="15" fill="rgb(226,218,38)" fg:x="569" fg:w="1"/><text x="45.8429%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.6731%" y="517" width="0.0801%" height="15" fill="rgb(240,92,1)" fg:x="570" fg:w="1"/><text x="45.9231%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (9 samples, 0.72%)</title><rect x="45.2724%" y="581" width="0.7212%" height="15" fill="rgb(237,224,33)" fg:x="565" fg:w="9"/><text x="45.5224%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="45.3526%" y="565" width="0.6410%" height="15" fill="rgb(211,46,1)" fg:x="566" fg:w="8"/><text x="45.6026%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="45.6731%" y="549" width="0.3205%" height="15" fill="rgb(239,190,4)" fg:x="570" fg:w="4"/><text x="45.9231%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="45.6731%" y="533" width="0.3205%" height="15" fill="rgb(221,50,22)" fg:x="570" fg:w="4"/><text x="45.9231%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="45.7532%" y="517" width="0.2404%" height="15" fill="rgb(207,176,8)" fg:x="571" fg:w="3"/><text x="46.0032%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.7532%" y="501" width="0.2404%" height="15" fill="rgb(244,114,50)" fg:x="571" fg:w="3"/><text x="46.0032%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="45.7532%" y="485" width="0.2404%" height="15" fill="rgb(226,206,19)" fg:x="571" fg:w="3"/><text x="46.0032%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.7532%" y="469" width="0.2404%" height="15" fill="rgb(208,199,16)" fg:x="571" fg:w="3"/><text x="46.0032%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.9135%" y="453" width="0.0801%" height="15" fill="rgb(208,38,14)" fg:x="573" fg:w="1"/><text x="46.1635%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.9936%" y="501" width="0.1603%" height="15" fill="rgb(221,211,49)" fg:x="574" fg:w="2"/><text x="46.2436%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.9936%" y="485" width="0.1603%" height="15" fill="rgb(227,214,34)" fg:x="574" fg:w="2"/><text x="46.2436%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="45.9936%" y="469" width="0.1603%" height="15" fill="rgb(234,5,54)" fg:x="574" fg:w="2"/><text x="46.2436%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="45.9936%" y="453" width="0.1603%" height="15" fill="rgb(236,215,22)" fg:x="574" fg:w="2"/><text x="46.2436%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="45.9936%" y="437" width="0.1603%" height="15" fill="rgb(244,0,11)" fg:x="574" fg:w="2"/><text x="46.2436%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="45.9936%" y="421" width="0.1603%" height="15" fill="rgb(212,140,16)" fg:x="574" fg:w="2"/><text x="46.2436%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="45.9936%" y="405" width="0.1603%" height="15" fill="rgb(238,101,37)" fg:x="574" fg:w="2"/><text x="46.2436%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="45.9936%" y="389" width="0.1603%" height="15" fill="rgb(247,46,3)" fg:x="574" fg:w="2"/><text x="46.2436%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="45.9936%" y="373" width="0.1603%" height="15" fill="rgb(208,106,19)" fg:x="574" fg:w="2"/><text x="46.2436%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="45.9936%" y="357" width="0.1603%" height="15" fill="rgb(240,227,15)" fg:x="574" fg:w="2"/><text x="46.2436%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="45.9936%" y="341" width="0.1603%" height="15" fill="rgb(226,173,6)" fg:x="574" fg:w="2"/><text x="46.2436%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.9936%" y="325" width="0.1603%" height="15" fill="rgb(213,191,1)" fg:x="574" fg:w="2"/><text x="46.2436%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="45.9936%" y="533" width="0.3205%" height="15" fill="rgb(246,51,36)" fg:x="574" fg:w="4"/><text x="46.2436%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="45.9936%" y="517" width="0.3205%" height="15" fill="rgb(238,40,32)" fg:x="574" fg:w="4"/><text x="46.2436%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.1538%" y="501" width="0.1603%" height="15" fill="rgb(208,126,27)" fg:x="576" fg:w="2"/><text x="46.4038%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="45.9936%" y="549" width="0.4006%" height="15" fill="rgb(227,117,38)" fg:x="574" fg:w="5"/><text x="46.2436%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.3141%" y="533" width="0.0801%" height="15" fill="rgb(232,16,1)" fg:x="578" fg:w="1"/><text x="46.5641%" y="543.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (16 samples, 1.28%)</title><rect x="45.1923%" y="597" width="1.2821%" height="15" fill="rgb(212,111,31)" fg:x="564" fg:w="16"/><text x="45.4423%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="45.9936%" y="581" width="0.4808%" height="15" fill="rgb(253,227,2)" fg:x="574" fg:w="6"/><text x="46.2436%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="45.9936%" y="565" width="0.4808%" height="15" fill="rgb(216,122,17)" fg:x="574" fg:w="6"/><text x="46.2436%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.3942%" y="549" width="0.0801%" height="15" fill="rgb(227,37,2)" fg:x="579" fg:w="1"/><text x="46.6442%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.3942%" y="533" width="0.0801%" height="15" fill="rgb(244,113,40)" fg:x="579" fg:w="1"/><text x="46.6442%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.3942%" y="517" width="0.0801%" height="15" fill="rgb(217,193,34)" fg:x="579" fg:w="1"/><text x="46.6442%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.3942%" y="501" width="0.0801%" height="15" fill="rgb(212,223,15)" fg:x="579" fg:w="1"/><text x="46.6442%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.3942%" y="485" width="0.0801%" height="15" fill="rgb(238,143,18)" fg:x="579" fg:w="1"/><text x="46.6442%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.3942%" y="469" width="0.0801%" height="15" fill="rgb(231,18,49)" fg:x="579" fg:w="1"/><text x="46.6442%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.3942%" y="453" width="0.0801%" height="15" fill="rgb(249,122,4)" fg:x="579" fg:w="1"/><text x="46.6442%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.4744%" y="549" width="0.0801%" height="15" fill="rgb(245,138,54)" fg:x="580" fg:w="1"/><text x="46.7244%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.6346%" y="533" width="0.0801%" height="15" fill="rgb(218,130,18)" fg:x="582" fg:w="1"/><text x="46.8846%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="46.4744%" y="565" width="0.3205%" height="15" fill="rgb(235,94,13)" fg:x="580" fg:w="4"/><text x="46.7244%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="46.5545%" y="549" width="0.2404%" height="15" fill="rgb(247,143,5)" fg:x="581" fg:w="3"/><text x="46.8045%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.7147%" y="533" width="0.0801%" height="15" fill="rgb(212,59,54)" fg:x="583" fg:w="1"/><text x="46.9647%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7949%" y="549" width="0.0801%" height="15" fill="rgb(206,121,24)" fg:x="584" fg:w="1"/><text x="47.0449%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7949%" y="533" width="0.0801%" height="15" fill="rgb(235,38,8)" fg:x="584" fg:w="1"/><text x="47.0449%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7949%" y="517" width="0.0801%" height="15" fill="rgb(227,102,26)" fg:x="584" fg:w="1"/><text x="47.0449%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.8750%" y="549" width="0.0801%" height="15" fill="rgb(240,183,46)" fg:x="585" fg:w="1"/><text x="47.1250%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="47.1154%" y="517" width="0.1603%" height="15" fill="rgb(208,177,23)" fg:x="588" fg:w="2"/><text x="47.3654%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="47.1154%" y="501" width="0.1603%" height="15" fill="rgb(216,152,5)" fg:x="588" fg:w="2"/><text x="47.3654%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="47.1154%" y="485" width="0.1603%" height="15" fill="rgb(238,199,2)" fg:x="588" fg:w="2"/><text x="47.3654%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="47.1154%" y="469" width="0.1603%" height="15" fill="rgb(235,142,28)" fg:x="588" fg:w="2"/><text x="47.3654%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="47.1154%" y="453" width="0.1603%" height="15" fill="rgb(225,97,25)" fg:x="588" fg:w="2"/><text x="47.3654%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="47.1154%" y="437" width="0.1603%" height="15" fill="rgb(208,75,46)" fg:x="588" fg:w="2"/><text x="47.3654%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="47.1154%" y="421" width="0.1603%" height="15" fill="rgb(240,136,15)" fg:x="588" fg:w="2"/><text x="47.3654%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="47.1154%" y="405" width="0.1603%" height="15" fill="rgb(235,36,27)" fg:x="588" fg:w="2"/><text x="47.3654%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="47.1154%" y="389" width="0.1603%" height="15" fill="rgb(231,132,23)" fg:x="588" fg:w="2"/><text x="47.3654%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="47.1154%" y="373" width="0.1603%" height="15" fill="rgb(205,208,20)" fg:x="588" fg:w="2"/><text x="47.3654%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="47.1154%" y="357" width="0.1603%" height="15" fill="rgb(215,26,40)" fg:x="588" fg:w="2"/><text x="47.3654%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="47.1955%" y="341" width="0.0801%" height="15" fill="rgb(238,183,34)" fg:x="589" fg:w="1"/><text x="47.4455%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.1955%" y="325" width="0.0801%" height="15" fill="rgb(207,96,10)" fg:x="589" fg:w="1"/><text x="47.4455%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.1955%" y="309" width="0.0801%" height="15" fill="rgb(218,88,6)" fg:x="589" fg:w="1"/><text x="47.4455%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="47.1955%" y="293" width="0.0801%" height="15" fill="rgb(217,22,49)" fg:x="589" fg:w="1"/><text x="47.4455%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="47.1955%" y="277" width="0.0801%" height="15" fill="rgb(240,195,14)" fg:x="589" fg:w="1"/><text x="47.4455%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.1955%" y="261" width="0.0801%" height="15" fill="rgb(229,48,27)" fg:x="589" fg:w="1"/><text x="47.4455%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.1955%" y="245" width="0.0801%" height="15" fill="rgb(220,194,45)" fg:x="589" fg:w="1"/><text x="47.4455%" y="255.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="47.1955%" y="229" width="0.0801%" height="15" fill="rgb(252,60,20)" fg:x="589" fg:w="1"/><text x="47.4455%" y="239.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="47.1955%" y="213" width="0.0801%" height="15" fill="rgb(244,169,33)" fg:x="589" fg:w="1"/><text x="47.4455%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.1955%" y="197" width="0.0801%" height="15" fill="rgb(234,141,34)" fg:x="589" fg:w="1"/><text x="47.4455%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.1955%" y="181" width="0.0801%" height="15" fill="rgb(241,141,9)" fg:x="589" fg:w="1"/><text x="47.4455%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="47.1955%" y="165" width="0.0801%" height="15" fill="rgb(246,27,36)" fg:x="589" fg:w="1"/><text x="47.4455%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="47.1955%" y="149" width="0.0801%" height="15" fill="rgb(216,188,42)" fg:x="589" fg:w="1"/><text x="47.4455%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="47.1955%" y="133" width="0.0801%" height="15" fill="rgb(234,205,22)" fg:x="589" fg:w="1"/><text x="47.4455%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="47.1955%" y="117" width="0.0801%" height="15" fill="rgb(210,202,32)" fg:x="589" fg:w="1"/><text x="47.4455%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.1955%" y="101" width="0.0801%" height="15" fill="rgb(217,0,48)" fg:x="589" fg:w="1"/><text x="47.4455%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.1955%" y="85" width="0.0801%" height="15" fill="rgb(207,115,37)" fg:x="589" fg:w="1"/><text x="47.4455%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.1955%" y="69" width="0.0801%" height="15" fill="rgb(237,221,44)" fg:x="589" fg:w="1"/><text x="47.4455%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="47.1955%" y="53" width="0.0801%" height="15" fill="rgb(249,78,2)" fg:x="589" fg:w="1"/><text x="47.4455%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.1955%" y="37" width="0.0801%" height="15" fill="rgb(211,169,23)" fg:x="589" fg:w="1"/><text x="47.4455%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="47.0353%" y="533" width="0.3205%" height="15" fill="rgb(207,116,29)" fg:x="587" fg:w="4"/><text x="47.2853%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="47.2756%" y="517" width="0.0801%" height="15" fill="rgb(240,84,33)" fg:x="590" fg:w="1"/><text x="47.5256%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="47.3558%" y="533" width="0.0801%" height="15" fill="rgb(229,224,31)" fg:x="591" fg:w="1"/><text x="47.6058%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.3558%" y="517" width="0.0801%" height="15" fill="rgb(227,90,31)" fg:x="591" fg:w="1"/><text x="47.6058%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.3558%" y="501" width="0.0801%" height="15" fill="rgb(249,22,41)" fg:x="591" fg:w="1"/><text x="47.6058%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="47.4359%" y="533" width="0.0801%" height="15" fill="rgb(239,65,11)" fg:x="592" fg:w="1"/><text x="47.6859%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="47.4359%" y="517" width="0.0801%" height="15" fill="rgb(205,5,23)" fg:x="592" fg:w="1"/><text x="47.6859%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.4359%" y="501" width="0.0801%" height="15" fill="rgb(254,78,52)" fg:x="592" fg:w="1"/><text x="47.6859%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.6763%" y="469" width="0.0801%" height="15" fill="rgb(214,156,33)" fg:x="595" fg:w="1"/><text x="47.9263%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.6763%" y="453" width="0.0801%" height="15" fill="rgb(208,20,30)" fg:x="595" fg:w="1"/><text x="47.9263%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.6763%" y="437" width="0.0801%" height="15" fill="rgb(223,133,18)" fg:x="595" fg:w="1"/><text x="47.9263%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.6763%" y="421" width="0.0801%" height="15" fill="rgb(222,91,41)" fg:x="595" fg:w="1"/><text x="47.9263%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.6763%" y="405" width="0.0801%" height="15" fill="rgb(247,137,48)" fg:x="595" fg:w="1"/><text x="47.9263%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="47.6763%" y="389" width="0.0801%" height="15" fill="rgb(239,156,11)" fg:x="595" fg:w="1"/><text x="47.9263%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="47.6763%" y="373" width="0.0801%" height="15" fill="rgb(244,56,26)" fg:x="595" fg:w="1"/><text x="47.9263%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.6763%" y="501" width="0.1603%" height="15" fill="rgb(205,131,49)" fg:x="595" fg:w="2"/><text x="47.9263%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.6763%" y="485" width="0.1603%" height="15" fill="rgb(224,0,2)" fg:x="595" fg:w="2"/><text x="47.9263%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7564%" y="469" width="0.0801%" height="15" fill="rgb(247,59,36)" fg:x="596" fg:w="1"/><text x="48.0064%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.7564%" y="453" width="0.0801%" height="15" fill="rgb(215,4,47)" fg:x="596" fg:w="1"/><text x="48.0064%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.7564%" y="437" width="0.0801%" height="15" fill="rgb(242,72,42)" fg:x="596" fg:w="1"/><text x="48.0064%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="48.0769%" y="357" width="0.0801%" height="15" fill="rgb(232,145,44)" fg:x="600" fg:w="1"/><text x="48.3269%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.0769%" y="341" width="0.0801%" height="15" fill="rgb(205,108,43)" fg:x="600" fg:w="1"/><text x="48.3269%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.0769%" y="325" width="0.0801%" height="15" fill="rgb(215,190,17)" fg:x="600" fg:w="1"/><text x="48.3269%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.0769%" y="309" width="0.0801%" height="15" fill="rgb(223,90,34)" fg:x="600" fg:w="1"/><text x="48.3269%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.0769%" y="293" width="0.0801%" height="15" fill="rgb(216,25,0)" fg:x="600" fg:w="1"/><text x="48.3269%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.0769%" y="277" width="0.0801%" height="15" fill="rgb(223,51,28)" fg:x="600" fg:w="1"/><text x="48.3269%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0769%" y="261" width="0.0801%" height="15" fill="rgb(227,131,7)" fg:x="600" fg:w="1"/><text x="48.3269%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0769%" y="245" width="0.0801%" height="15" fill="rgb(216,72,36)" fg:x="600" fg:w="1"/><text x="48.3269%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="48.0769%" y="389" width="0.1603%" height="15" fill="rgb(243,158,40)" fg:x="600" fg:w="2"/><text x="48.3269%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="48.0769%" y="373" width="0.1603%" height="15" fill="rgb(218,60,54)" fg:x="600" fg:w="2"/><text x="48.3269%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="48.1571%" y="357" width="0.0801%" height="15" fill="rgb(230,15,46)" fg:x="601" fg:w="1"/><text x="48.4071%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.1571%" y="341" width="0.0801%" height="15" fill="rgb(250,22,26)" fg:x="601" fg:w="1"/><text x="48.4071%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.1571%" y="325" width="0.0801%" height="15" fill="rgb(239,194,40)" fg:x="601" fg:w="1"/><text x="48.4071%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.1571%" y="309" width="0.0801%" height="15" fill="rgb(219,62,9)" fg:x="601" fg:w="1"/><text x="48.4071%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.1571%" y="293" width="0.0801%" height="15" fill="rgb(228,45,21)" fg:x="601" fg:w="1"/><text x="48.4071%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.1571%" y="277" width="0.0801%" height="15" fill="rgb(242,56,44)" fg:x="601" fg:w="1"/><text x="48.4071%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.1571%" y="261" width="0.0801%" height="15" fill="rgb(239,170,14)" fg:x="601" fg:w="1"/><text x="48.4071%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.1571%" y="245" width="0.0801%" height="15" fill="rgb(236,150,13)" fg:x="601" fg:w="1"/><text x="48.4071%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.1571%" y="229" width="0.0801%" height="15" fill="rgb(228,15,30)" fg:x="601" fg:w="1"/><text x="48.4071%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.1571%" y="213" width="0.0801%" height="15" fill="rgb(217,43,28)" fg:x="601" fg:w="1"/><text x="48.4071%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.1571%" y="197" width="0.0801%" height="15" fill="rgb(246,223,1)" fg:x="601" fg:w="1"/><text x="48.4071%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.1571%" y="181" width="0.0801%" height="15" fill="rgb(247,103,7)" fg:x="601" fg:w="1"/><text x="48.4071%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.1571%" y="165" width="0.0801%" height="15" fill="rgb(205,105,39)" fg:x="601" fg:w="1"/><text x="48.4071%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.1571%" y="149" width="0.0801%" height="15" fill="rgb(216,134,18)" fg:x="601" fg:w="1"/><text x="48.4071%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.1571%" y="133" width="0.0801%" height="15" fill="rgb(226,139,50)" fg:x="601" fg:w="1"/><text x="48.4071%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.1571%" y="117" width="0.0801%" height="15" fill="rgb(251,152,38)" fg:x="601" fg:w="1"/><text x="48.4071%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1571%" y="101" width="0.0801%" height="15" fill="rgb(222,63,15)" fg:x="601" fg:w="1"/><text x="48.4071%" y="111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.2372%" y="325" width="0.0801%" height="15" fill="rgb(212,198,28)" fg:x="602" fg:w="1"/><text x="48.4872%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.2372%" y="309" width="0.0801%" height="15" fill="rgb(216,93,38)" fg:x="602" fg:w="1"/><text x="48.4872%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.3173%" y="325" width="0.0801%" height="15" fill="rgb(247,202,44)" fg:x="603" fg:w="1"/><text x="48.5673%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.3974%" y="293" width="0.1603%" height="15" fill="rgb(237,204,46)" fg:x="604" fg:w="2"/><text x="48.6474%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.4776%" y="277" width="0.0801%" height="15" fill="rgb(224,98,48)" fg:x="605" fg:w="1"/><text x="48.7276%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4776%" y="261" width="0.0801%" height="15" fill="rgb(247,105,21)" fg:x="605" fg:w="1"/><text x="48.7276%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.5577%" y="277" width="0.0801%" height="15" fill="rgb(212,137,52)" fg:x="606" fg:w="1"/><text x="48.8077%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6378%" y="261" width="0.0801%" height="15" fill="rgb(223,76,33)" fg:x="607" fg:w="1"/><text x="48.8878%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6378%" y="245" width="0.0801%" height="15" fill="rgb(209,156,27)" fg:x="607" fg:w="1"/><text x="48.8878%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6378%" y="229" width="0.0801%" height="15" fill="rgb(249,81,54)" fg:x="607" fg:w="1"/><text x="48.8878%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.7179%" y="229" width="0.1603%" height="15" fill="rgb(241,46,29)" fg:x="608" fg:w="2"/><text x="48.9679%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.7981%" y="213" width="0.0801%" height="15" fill="rgb(213,193,39)" fg:x="609" fg:w="1"/><text x="49.0481%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="48.8782%" y="229" width="0.2404%" height="15" fill="rgb(214,85,16)" fg:x="610" fg:w="3"/><text x="49.1282%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.9583%" y="213" width="0.1603%" height="15" fill="rgb(216,184,17)" fg:x="611" fg:w="2"/><text x="49.2083%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0385%" y="197" width="0.0801%" height="15" fill="rgb(254,219,29)" fg:x="612" fg:w="1"/><text x="49.2885%" y="207.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="48.2372%" y="373" width="0.9615%" height="15" fill="rgb(209,148,34)" fg:x="602" fg:w="12"/><text x="48.4872%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="48.2372%" y="357" width="0.9615%" height="15" fill="rgb(253,215,11)" fg:x="602" fg:w="12"/><text x="48.4872%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="48.2372%" y="341" width="0.9615%" height="15" fill="rgb(232,126,20)" fg:x="602" fg:w="12"/><text x="48.4872%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="48.3974%" y="325" width="0.8013%" height="15" fill="rgb(248,118,51)" fg:x="604" fg:w="10"/><text x="48.6474%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="48.3974%" y="309" width="0.8013%" height="15" fill="rgb(226,121,21)" fg:x="604" fg:w="10"/><text x="48.6474%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="48.5577%" y="293" width="0.6410%" height="15" fill="rgb(216,128,16)" fg:x="606" fg:w="8"/><text x="48.8077%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="48.6378%" y="277" width="0.5609%" height="15" fill="rgb(205,17,9)" fg:x="607" fg:w="7"/><text x="48.8878%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="48.7179%" y="261" width="0.4808%" height="15" fill="rgb(206,197,21)" fg:x="608" fg:w="6"/><text x="48.9679%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="48.7179%" y="245" width="0.4808%" height="15" fill="rgb(212,202,9)" fg:x="608" fg:w="6"/><text x="48.9679%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.1186%" y="229" width="0.0801%" height="15" fill="rgb(241,131,50)" fg:x="613" fg:w="1"/><text x="49.3686%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1987%" y="341" width="0.0801%" height="15" fill="rgb(228,115,51)" fg:x="614" fg:w="1"/><text x="49.4487%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.2788%" y="309" width="0.0801%" height="15" fill="rgb(237,209,8)" fg:x="615" fg:w="1"/><text x="49.5288%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.3590%" y="261" width="0.1603%" height="15" fill="rgb(241,121,28)" fg:x="616" fg:w="2"/><text x="49.6090%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.3590%" y="245" width="0.1603%" height="15" fill="rgb(238,194,51)" fg:x="616" fg:w="2"/><text x="49.6090%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="49.3590%" y="229" width="0.1603%" height="15" fill="rgb(208,41,39)" fg:x="616" fg:w="2"/><text x="49.6090%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.3590%" y="213" width="0.1603%" height="15" fill="rgb(223,95,44)" fg:x="616" fg:w="2"/><text x="49.6090%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.4391%" y="197" width="0.0801%" height="15" fill="rgb(253,98,40)" fg:x="617" fg:w="1"/><text x="49.6891%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="49.2788%" y="341" width="0.3205%" height="15" fill="rgb(210,5,12)" fg:x="615" fg:w="4"/><text x="49.5288%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="49.2788%" y="325" width="0.3205%" height="15" fill="rgb(233,201,23)" fg:x="615" fg:w="4"/><text x="49.5288%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="49.3590%" y="309" width="0.2404%" height="15" fill="rgb(251,68,15)" fg:x="616" fg:w="3"/><text x="49.6090%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="49.3590%" y="293" width="0.2404%" height="15" fill="rgb(243,10,46)" fg:x="616" fg:w="3"/><text x="49.6090%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="49.3590%" y="277" width="0.2404%" height="15" fill="rgb(253,130,44)" fg:x="616" fg:w="3"/><text x="49.6090%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="49.5192%" y="261" width="0.0801%" height="15" fill="rgb(244,5,26)" fg:x="618" fg:w="1"/><text x="49.7692%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.5192%" y="245" width="0.0801%" height="15" fill="rgb(220,126,20)" fg:x="618" fg:w="1"/><text x="49.7692%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.5192%" y="229" width="0.0801%" height="15" fill="rgb(212,188,29)" fg:x="618" fg:w="1"/><text x="49.7692%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.5192%" y="213" width="0.0801%" height="15" fill="rgb(227,194,48)" fg:x="618" fg:w="1"/><text x="49.7692%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5192%" y="197" width="0.0801%" height="15" fill="rgb(245,64,28)" fg:x="618" fg:w="1"/><text x="49.7692%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5192%" y="181" width="0.0801%" height="15" fill="rgb(205,44,7)" fg:x="618" fg:w="1"/><text x="49.7692%" y="191.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.5192%" y="165" width="0.0801%" height="15" fill="rgb(213,193,11)" fg:x="618" fg:w="1"/><text x="49.7692%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (18 samples, 1.44%)</title><rect x="48.2372%" y="389" width="1.4423%" height="15" fill="rgb(238,157,6)" fg:x="602" fg:w="18"/><text x="48.4872%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="49.1987%" y="373" width="0.4808%" height="15" fill="rgb(222,73,7)" fg:x="614" fg:w="6"/><text x="49.4487%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="49.1987%" y="357" width="0.4808%" height="15" fill="rgb(224,78,15)" fg:x="614" fg:w="6"/><text x="49.4487%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.5994%" y="341" width="0.0801%" height="15" fill="rgb(218,149,46)" fg:x="619" fg:w="1"/><text x="49.8494%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5994%" y="325" width="0.0801%" height="15" fill="rgb(218,175,44)" fg:x="619" fg:w="1"/><text x="49.8494%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="49.5994%" y="309" width="0.0801%" height="15" fill="rgb(215,183,45)" fg:x="619" fg:w="1"/><text x="49.8494%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="49.5994%" y="293" width="0.0801%" height="15" fill="rgb(226,116,37)" fg:x="619" fg:w="1"/><text x="49.8494%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="49.5994%" y="277" width="0.0801%" height="15" fill="rgb(252,224,12)" fg:x="619" fg:w="1"/><text x="49.8494%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="49.6795%" y="389" width="0.0801%" height="15" fill="rgb(232,212,21)" fg:x="620" fg:w="1"/><text x="49.9295%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="49.6795%" y="373" width="0.0801%" height="15" fill="rgb(226,191,16)" fg:x="620" fg:w="1"/><text x="49.9295%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.6795%" y="357" width="0.0801%" height="15" fill="rgb(231,156,11)" fg:x="620" fg:w="1"/><text x="49.9295%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.6795%" y="341" width="0.0801%" height="15" fill="rgb(225,134,49)" fg:x="620" fg:w="1"/><text x="49.9295%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.6795%" y="325" width="0.0801%" height="15" fill="rgb(254,55,32)" fg:x="620" fg:w="1"/><text x="49.9295%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.6795%" y="309" width="0.0801%" height="15" fill="rgb(242,195,29)" fg:x="620" fg:w="1"/><text x="49.9295%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.6795%" y="293" width="0.0801%" height="15" fill="rgb(210,155,20)" fg:x="620" fg:w="1"/><text x="49.9295%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.6795%" y="277" width="0.0801%" height="15" fill="rgb(243,170,23)" fg:x="620" fg:w="1"/><text x="49.9295%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (29 samples, 2.32%)</title><rect x="47.8365%" y="485" width="2.3237%" height="15" fill="rgb(242,197,51)" fg:x="597" fg:w="29"/><text x="48.0865%" y="495.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.16%)</title><rect x="47.9968%" y="469" width="2.1635%" height="15" fill="rgb(248,48,13)" fg:x="599" fg:w="27"/><text x="48.2468%" y="479.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 2.08%)</title><rect x="48.0769%" y="453" width="2.0833%" height="15" fill="rgb(221,185,15)" fg:x="600" fg:w="26"/><text x="48.3269%" y="463.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (26 samples, 2.08%)</title><rect x="48.0769%" y="437" width="2.0833%" height="15" fill="rgb(244,49,7)" fg:x="600" fg:w="26"/><text x="48.3269%" y="447.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (26 samples, 2.08%)</title><rect x="48.0769%" y="421" width="2.0833%" height="15" fill="rgb(213,182,52)" fg:x="600" fg:w="26"/><text x="48.3269%" y="431.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.08%)</title><rect x="48.0769%" y="405" width="2.0833%" height="15" fill="rgb(209,15,45)" fg:x="600" fg:w="26"/><text x="48.3269%" y="415.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="49.7596%" y="389" width="0.4006%" height="15" fill="rgb(233,23,44)" fg:x="621" fg:w="5"/><text x="50.0096%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="49.7596%" y="373" width="0.4006%" height="15" fill="rgb(220,182,30)" fg:x="621" fg:w="5"/><text x="50.0096%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="49.7596%" y="357" width="0.4006%" height="15" fill="rgb(219,116,33)" fg:x="621" fg:w="5"/><text x="50.0096%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="49.7596%" y="341" width="0.4006%" height="15" fill="rgb(231,15,21)" fg:x="621" fg:w="5"/><text x="50.0096%" y="351.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="49.8397%" y="325" width="0.3205%" height="15" fill="rgb(238,119,25)" fg:x="622" fg:w="4"/><text x="50.0897%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (30 samples, 2.40%)</title><rect x="47.8365%" y="501" width="2.4038%" height="15" fill="rgb(232,30,39)" fg:x="597" fg:w="30"/><text x="48.0865%" y="511.50">&lt;p..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.1603%" y="485" width="0.0801%" height="15" fill="rgb(241,26,30)" fg:x="626" fg:w="1"/><text x="50.4103%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.3205%" y="469" width="0.1603%" height="15" fill="rgb(234,154,4)" fg:x="628" fg:w="2"/><text x="50.5705%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.4808%" y="469" width="0.0801%" height="15" fill="rgb(229,199,39)" fg:x="630" fg:w="1"/><text x="50.7308%" y="479.50"></text></g><g><title>plugins_core::tools::contained_by (46 samples, 3.69%)</title><rect x="46.9551%" y="549" width="3.6859%" height="15" fill="rgb(236,213,10)" fg:x="586" fg:w="46"/><text x="47.2051%" y="559.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (39 samples, 3.12%)</title><rect x="47.5160%" y="533" width="3.1250%" height="15" fill="rgb(247,28,19)" fg:x="593" fg:w="39"/><text x="47.7660%" y="543.50">ker..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (39 samples, 3.12%)</title><rect x="47.5160%" y="517" width="3.1250%" height="15" fill="rgb(239,199,24)" fg:x="593" fg:w="39"/><text x="47.7660%" y="527.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="50.2404%" y="501" width="0.4006%" height="15" fill="rgb(246,122,13)" fg:x="627" fg:w="5"/><text x="50.4904%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="50.2404%" y="485" width="0.4006%" height="15" fill="rgb(210,203,29)" fg:x="627" fg:w="5"/><text x="50.4904%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="50.5609%" y="469" width="0.0801%" height="15" fill="rgb(218,4,50)" fg:x="631" fg:w="1"/><text x="50.8109%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.5609%" y="453" width="0.0801%" height="15" fill="rgb(236,142,48)" fg:x="631" fg:w="1"/><text x="50.8109%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="50.5609%" y="437" width="0.0801%" height="15" fill="rgb(245,173,2)" fg:x="631" fg:w="1"/><text x="50.8109%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.5609%" y="421" width="0.0801%" height="15" fill="rgb(244,196,18)" fg:x="631" fg:w="1"/><text x="50.8109%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.5609%" y="405" width="0.0801%" height="15" fill="rgb(221,27,33)" fg:x="631" fg:w="1"/><text x="50.8109%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5609%" y="389" width="0.0801%" height="15" fill="rgb(210,206,16)" fg:x="631" fg:w="1"/><text x="50.8109%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="50.6410%" y="533" width="0.0801%" height="15" fill="rgb(238,161,34)" fg:x="632" fg:w="1"/><text x="50.8910%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="50.6410%" y="517" width="0.0801%" height="15" fill="rgb(243,118,39)" fg:x="632" fg:w="1"/><text x="50.8910%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="50.6410%" y="501" width="0.0801%" height="15" fill="rgb(234,126,9)" fg:x="632" fg:w="1"/><text x="50.8910%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="50.6410%" y="485" width="0.0801%" height="15" fill="rgb(234,167,42)" fg:x="632" fg:w="1"/><text x="50.8910%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="50.6410%" y="469" width="0.0801%" height="15" fill="rgb(238,54,48)" fg:x="632" fg:w="1"/><text x="50.8910%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="50.6410%" y="453" width="0.0801%" height="15" fill="rgb(226,105,2)" fg:x="632" fg:w="1"/><text x="50.8910%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="437" width="0.0801%" height="15" fill="rgb(223,95,23)" fg:x="632" fg:w="1"/><text x="50.8910%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="50.6410%" y="421" width="0.0801%" height="15" fill="rgb(249,212,19)" fg:x="632" fg:w="1"/><text x="50.8910%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="405" width="0.0801%" height="15" fill="rgb(234,158,54)" fg:x="632" fg:w="1"/><text x="50.8910%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="389" width="0.0801%" height="15" fill="rgb(247,114,32)" fg:x="632" fg:w="1"/><text x="50.8910%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="373" width="0.0801%" height="15" fill="rgb(250,68,44)" fg:x="632" fg:w="1"/><text x="50.8910%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="50.6410%" y="357" width="0.0801%" height="15" fill="rgb(242,3,15)" fg:x="632" fg:w="1"/><text x="50.8910%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="341" width="0.0801%" height="15" fill="rgb(223,110,32)" fg:x="632" fg:w="1"/><text x="50.8910%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="325" width="0.0801%" height="15" fill="rgb(216,26,54)" fg:x="632" fg:w="1"/><text x="50.8910%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="309" width="0.0801%" height="15" fill="rgb(209,145,42)" fg:x="632" fg:w="1"/><text x="50.8910%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="50.6410%" y="293" width="0.0801%" height="15" fill="rgb(240,111,53)" fg:x="632" fg:w="1"/><text x="50.8910%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="277" width="0.0801%" height="15" fill="rgb(209,101,4)" fg:x="632" fg:w="1"/><text x="50.8910%" y="287.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="261" width="0.0801%" height="15" fill="rgb(231,74,29)" fg:x="632" fg:w="1"/><text x="50.8910%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="50.6410%" y="245" width="0.0801%" height="15" fill="rgb(223,12,12)" fg:x="632" fg:w="1"/><text x="50.8910%" y="255.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.7212%" y="501" width="0.0801%" height="15" fill="rgb(207,162,2)" fg:x="633" fg:w="1"/><text x="50.9712%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.7212%" y="485" width="0.0801%" height="15" fill="rgb(230,152,0)" fg:x="633" fg:w="1"/><text x="50.9712%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.7212%" y="469" width="0.0801%" height="15" fill="rgb(254,156,19)" fg:x="633" fg:w="1"/><text x="50.9712%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.7212%" y="453" width="0.0801%" height="15" fill="rgb(250,28,0)" fg:x="633" fg:w="1"/><text x="50.9712%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.7212%" y="437" width="0.0801%" height="15" fill="rgb(253,27,5)" fg:x="633" fg:w="1"/><text x="50.9712%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.7212%" y="421" width="0.0801%" height="15" fill="rgb(244,154,7)" fg:x="633" fg:w="1"/><text x="50.9712%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.7212%" y="405" width="0.0801%" height="15" fill="rgb(242,108,21)" fg:x="633" fg:w="1"/><text x="50.9712%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.7212%" y="389" width="0.0801%" height="15" fill="rgb(254,200,38)" fg:x="633" fg:w="1"/><text x="50.9712%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.7212%" y="373" width="0.0801%" height="15" fill="rgb(250,145,41)" fg:x="633" fg:w="1"/><text x="50.9712%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="50.7212%" y="357" width="0.0801%" height="15" fill="rgb(235,136,31)" fg:x="633" fg:w="1"/><text x="50.9712%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="50.7212%" y="341" width="0.0801%" height="15" fill="rgb(215,13,18)" fg:x="633" fg:w="1"/><text x="50.9712%" y="351.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="50.8013%" y="501" width="0.0801%" height="15" fill="rgb(238,199,12)" fg:x="634" fg:w="1"/><text x="51.0513%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.8013%" y="485" width="0.0801%" height="15" fill="rgb(242,179,49)" fg:x="634" fg:w="1"/><text x="51.0513%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.8013%" y="469" width="0.0801%" height="15" fill="rgb(214,10,44)" fg:x="634" fg:w="1"/><text x="51.0513%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.8814%" y="469" width="0.0801%" height="15" fill="rgb(229,181,11)" fg:x="635" fg:w="1"/><text x="51.1314%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.8814%" y="453" width="0.0801%" height="15" fill="rgb(244,155,10)" fg:x="635" fg:w="1"/><text x="51.1314%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (53 samples, 4.25%)</title><rect x="46.7949%" y="565" width="4.2468%" height="15" fill="rgb(254,13,48)" fg:x="584" fg:w="53"/><text x="47.0449%" y="575.50">plugi..</text></g><g><title>plugins_core::tools::occupied_by (5 samples, 0.40%)</title><rect x="50.6410%" y="549" width="0.4006%" height="15" fill="rgb(210,164,6)" fg:x="632" fg:w="5"/><text x="50.8910%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="50.7212%" y="533" width="0.3205%" height="15" fill="rgb(216,187,40)" fg:x="633" fg:w="4"/><text x="50.9712%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="50.7212%" y="517" width="0.3205%" height="15" fill="rgb(208,143,21)" fg:x="633" fg:w="4"/><text x="50.9712%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.8814%" y="501" width="0.1603%" height="15" fill="rgb(211,73,41)" fg:x="635" fg:w="2"/><text x="51.1314%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.8814%" y="485" width="0.1603%" height="15" fill="rgb(244,69,21)" fg:x="635" fg:w="2"/><text x="51.1314%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="50.9615%" y="469" width="0.0801%" height="15" fill="rgb(230,152,32)" fg:x="636" fg:w="1"/><text x="51.2115%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.9615%" y="453" width="0.0801%" height="15" fill="rgb(208,110,18)" fg:x="636" fg:w="1"/><text x="51.2115%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="50.9615%" y="437" width="0.0801%" height="15" fill="rgb(214,201,49)" fg:x="636" fg:w="1"/><text x="51.2115%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.9615%" y="421" width="0.0801%" height="15" fill="rgb(253,153,27)" fg:x="636" fg:w="1"/><text x="51.2115%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9615%" y="405" width="0.0801%" height="15" fill="rgb(238,61,11)" fg:x="636" fg:w="1"/><text x="51.2115%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0417%" y="549" width="0.0801%" height="15" fill="rgb(227,84,2)" fg:x="637" fg:w="1"/><text x="51.2917%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0417%" y="533" width="0.0801%" height="15" fill="rgb(233,52,8)" fg:x="637" fg:w="1"/><text x="51.2917%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0417%" y="517" width="0.0801%" height="15" fill="rgb(209,136,13)" fg:x="637" fg:w="1"/><text x="51.2917%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.1218%" y="517" width="0.0801%" height="15" fill="rgb(229,86,25)" fg:x="638" fg:w="1"/><text x="51.3718%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="51.1218%" y="549" width="0.1603%" height="15" fill="rgb(235,47,16)" fg:x="638" fg:w="2"/><text x="51.3718%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="51.1218%" y="533" width="0.1603%" height="15" fill="rgb(231,186,4)" fg:x="638" fg:w="2"/><text x="51.3718%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="51.2019%" y="517" width="0.0801%" height="15" fill="rgb(209,213,23)" fg:x="639" fg:w="1"/><text x="51.4519%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.2821%" y="549" width="0.0801%" height="15" fill="rgb(212,142,47)" fg:x="640" fg:w="1"/><text x="51.5321%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (3 samples, 0.24%)</title><rect x="51.3622%" y="549" width="0.2404%" height="15" fill="rgb(251,86,24)" fg:x="641" fg:w="3"/><text x="51.6122%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.7628%" y="469" width="0.0801%" height="15" fill="rgb(206,217,17)" fg:x="646" fg:w="1"/><text x="52.0128%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="51.7628%" y="453" width="0.0801%" height="15" fill="rgb(248,92,38)" fg:x="646" fg:w="1"/><text x="52.0128%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.7628%" y="437" width="0.0801%" height="15" fill="rgb(214,25,29)" fg:x="646" fg:w="1"/><text x="52.0128%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.7628%" y="421" width="0.0801%" height="15" fill="rgb(245,117,13)" fg:x="646" fg:w="1"/><text x="52.0128%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.8429%" y="405" width="0.0801%" height="15" fill="rgb(205,169,9)" fg:x="647" fg:w="1"/><text x="52.0929%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8429%" y="389" width="0.0801%" height="15" fill="rgb(223,134,38)" fg:x="647" fg:w="1"/><text x="52.0929%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (70 samples, 5.61%)</title><rect x="46.4744%" y="597" width="5.6090%" height="15" fill="rgb(249,129,49)" fg:x="580" fg:w="70"/><text x="46.7244%" y="607.50">&lt;engine..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (70 samples, 5.61%)</title><rect x="46.4744%" y="581" width="5.6090%" height="15" fill="rgb(229,157,45)" fg:x="580" fg:w="70"/><text x="46.7244%" y="591.50">&lt;plugin..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (13 samples, 1.04%)</title><rect x="51.0417%" y="565" width="1.0417%" height="15" fill="rgb(232,159,11)" fg:x="637" fg:w="13"/><text x="51.2917%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.48%)</title><rect x="51.6026%" y="549" width="0.4808%" height="15" fill="rgb(230,134,26)" fg:x="644" fg:w="6"/><text x="51.8526%" y="559.50"></text></g><g><title>plugins_core::finding::matches_description (6 samples, 0.48%)</title><rect x="51.6026%" y="533" width="0.4808%" height="15" fill="rgb(234,149,40)" fg:x="644" fg:w="6"/><text x="51.8526%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::name (6 samples, 0.48%)</title><rect x="51.6026%" y="517" width="0.4808%" height="15" fill="rgb(221,122,15)" fg:x="644" fg:w="6"/><text x="51.8526%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="51.6026%" y="501" width="0.4808%" height="15" fill="rgb(228,127,0)" fg:x="644" fg:w="6"/><text x="51.8526%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="51.6026%" y="485" width="0.4808%" height="15" fill="rgb(248,37,7)" fg:x="644" fg:w="6"/><text x="51.8526%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.8429%" y="469" width="0.2404%" height="15" fill="rgb(215,140,49)" fg:x="647" fg:w="3"/><text x="52.0929%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.8429%" y="453" width="0.2404%" height="15" fill="rgb(236,65,39)" fg:x="647" fg:w="3"/><text x="52.0929%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="51.8429%" y="437" width="0.2404%" height="15" fill="rgb(253,102,38)" fg:x="647" fg:w="3"/><text x="52.0929%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.8429%" y="421" width="0.2404%" height="15" fill="rgb(244,100,34)" fg:x="647" fg:w="3"/><text x="52.0929%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.9231%" y="405" width="0.1603%" height="15" fill="rgb(210,179,47)" fg:x="648" fg:w="2"/><text x="52.1731%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.0032%" y="389" width="0.0801%" height="15" fill="rgb(231,41,37)" fg:x="649" fg:w="1"/><text x="52.2532%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.0833%" y="597" width="0.0801%" height="15" fill="rgb(226,209,17)" fg:x="650" fg:w="1"/><text x="52.3333%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.0833%" y="581" width="0.0801%" height="15" fill="rgb(231,154,20)" fg:x="650" fg:w="1"/><text x="52.3333%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0833%" y="565" width="0.0801%" height="15" fill="rgb(216,134,24)" fg:x="650" fg:w="1"/><text x="52.3333%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="52.1635%" y="581" width="0.0801%" height="15" fill="rgb(224,71,42)" fg:x="651" fg:w="1"/><text x="52.4135%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.1635%" y="565" width="0.0801%" height="15" fill="rgb(250,65,23)" fg:x="651" fg:w="1"/><text x="52.4135%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.1635%" y="549" width="0.0801%" height="15" fill="rgb(209,160,35)" fg:x="651" fg:w="1"/><text x="52.4135%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.2436%" y="581" width="0.0801%" height="15" fill="rgb(215,8,11)" fg:x="652" fg:w="1"/><text x="52.4936%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="52.3237%" y="549" width="0.0801%" height="15" fill="rgb(227,27,12)" fg:x="653" fg:w="1"/><text x="52.5737%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.3237%" y="533" width="0.0801%" height="15" fill="rgb(226,111,41)" fg:x="653" fg:w="1"/><text x="52.5737%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.3237%" y="517" width="0.0801%" height="15" fill="rgb(212,195,15)" fg:x="653" fg:w="1"/><text x="52.5737%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="52.3237%" y="501" width="0.0801%" height="15" fill="rgb(216,191,17)" fg:x="653" fg:w="1"/><text x="52.5737%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.4038%" y="517" width="0.0801%" height="15" fill="rgb(215,57,44)" fg:x="654" fg:w="1"/><text x="52.6538%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.4038%" y="501" width="0.0801%" height="15" fill="rgb(209,38,4)" fg:x="654" fg:w="1"/><text x="52.6538%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.4038%" y="485" width="0.0801%" height="15" fill="rgb(238,49,31)" fg:x="654" fg:w="1"/><text x="52.6538%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="52.3237%" y="581" width="0.3205%" height="15" fill="rgb(219,48,39)" fg:x="653" fg:w="4"/><text x="52.5737%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="52.3237%" y="565" width="0.3205%" height="15" fill="rgb(252,223,43)" fg:x="653" fg:w="4"/><text x="52.5737%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="52.4038%" y="549" width="0.2404%" height="15" fill="rgb(247,205,46)" fg:x="654" fg:w="3"/><text x="52.6538%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="52.4038%" y="533" width="0.2404%" height="15" fill="rgb(231,16,40)" fg:x="654" fg:w="3"/><text x="52.6538%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.4840%" y="517" width="0.1603%" height="15" fill="rgb(231,115,5)" fg:x="655" fg:w="2"/><text x="52.7340%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.4840%" y="501" width="0.1603%" height="15" fill="rgb(206,127,43)" fg:x="655" fg:w="2"/><text x="52.7340%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.5641%" y="485" width="0.0801%" height="15" fill="rgb(218,101,9)" fg:x="656" fg:w="1"/><text x="52.8141%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.5641%" y="469" width="0.0801%" height="15" fill="rgb(235,138,50)" fg:x="656" fg:w="1"/><text x="52.8141%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.5641%" y="453" width="0.0801%" height="15" fill="rgb(214,197,52)" fg:x="656" fg:w="1"/><text x="52.8141%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6442%" y="565" width="0.0801%" height="15" fill="rgb(230,80,19)" fg:x="657" fg:w="1"/><text x="52.8942%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7244%" y="549" width="0.0801%" height="15" fill="rgb(224,77,16)" fg:x="658" fg:w="1"/><text x="52.9744%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="52.8045%" y="517" width="0.1603%" height="15" fill="rgb(246,4,13)" fg:x="659" fg:w="2"/><text x="53.0545%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="52.8045%" y="501" width="0.1603%" height="15" fill="rgb(220,177,26)" fg:x="659" fg:w="2"/><text x="53.0545%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="52.8045%" y="485" width="0.1603%" height="15" fill="rgb(215,114,45)" fg:x="659" fg:w="2"/><text x="53.0545%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.8045%" y="469" width="0.1603%" height="15" fill="rgb(215,71,54)" fg:x="659" fg:w="2"/><text x="53.0545%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.8045%" y="453" width="0.1603%" height="15" fill="rgb(211,155,22)" fg:x="659" fg:w="2"/><text x="53.0545%" y="463.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="52.8846%" y="437" width="0.0801%" height="15" fill="rgb(245,206,18)" fg:x="660" fg:w="1"/><text x="53.1346%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (6 samples, 0.48%)</title><rect x="52.6442%" y="581" width="0.4808%" height="15" fill="rgb(248,216,48)" fg:x="657" fg:w="6"/><text x="52.8942%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="52.7244%" y="565" width="0.4006%" height="15" fill="rgb(244,84,45)" fg:x="658" fg:w="5"/><text x="52.9744%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="52.8045%" y="549" width="0.3205%" height="15" fill="rgb(245,13,45)" fg:x="659" fg:w="4"/><text x="53.0545%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.8045%" y="533" width="0.3205%" height="15" fill="rgb(247,163,2)" fg:x="659" fg:w="4"/><text x="53.0545%" y="543.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (2 samples, 0.16%)</title><rect x="52.9647%" y="517" width="0.1603%" height="15" fill="rgb(211,175,10)" fg:x="661" fg:w="2"/><text x="53.2147%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.2051%" y="517" width="0.0801%" height="15" fill="rgb(215,186,31)" fg:x="664" fg:w="1"/><text x="53.4551%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.2051%" y="501" width="0.0801%" height="15" fill="rgb(207,42,11)" fg:x="664" fg:w="1"/><text x="53.4551%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.2051%" y="485" width="0.0801%" height="15" fill="rgb(224,197,20)" fg:x="664" fg:w="1"/><text x="53.4551%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.2051%" y="469" width="0.0801%" height="15" fill="rgb(244,119,36)" fg:x="664" fg:w="1"/><text x="53.4551%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.2051%" y="453" width="0.0801%" height="15" fill="rgb(250,60,27)" fg:x="664" fg:w="1"/><text x="53.4551%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.2051%" y="437" width="0.0801%" height="15" fill="rgb(252,202,1)" fg:x="664" fg:w="1"/><text x="53.4551%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.2051%" y="421" width="0.0801%" height="15" fill="rgb(206,53,25)" fg:x="664" fg:w="1"/><text x="53.4551%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.2051%" y="405" width="0.0801%" height="15" fill="rgb(210,88,4)" fg:x="664" fg:w="1"/><text x="53.4551%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.2051%" y="389" width="0.0801%" height="15" fill="rgb(211,144,28)" fg:x="664" fg:w="1"/><text x="53.4551%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.2051%" y="373" width="0.0801%" height="15" fill="rgb(247,81,32)" fg:x="664" fg:w="1"/><text x="53.4551%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.2051%" y="357" width="0.0801%" height="15" fill="rgb(225,192,11)" fg:x="664" fg:w="1"/><text x="53.4551%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.2051%" y="341" width="0.0801%" height="15" fill="rgb(232,212,27)" fg:x="664" fg:w="1"/><text x="53.4551%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2051%" y="325" width="0.0801%" height="15" fill="rgb(239,3,29)" fg:x="664" fg:w="1"/><text x="53.4551%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="53.1250%" y="549" width="0.2404%" height="15" fill="rgb(252,225,29)" fg:x="663" fg:w="3"/><text x="53.3750%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.2051%" y="533" width="0.1603%" height="15" fill="rgb(205,151,9)" fg:x="664" fg:w="2"/><text x="53.4551%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2853%" y="517" width="0.0801%" height="15" fill="rgb(216,171,47)" fg:x="665" fg:w="1"/><text x="53.5353%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3654%" y="549" width="0.0801%" height="15" fill="rgb(206,181,1)" fg:x="666" fg:w="1"/><text x="53.6154%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="53.1250%" y="581" width="0.5609%" height="15" fill="rgb(232,218,10)" fg:x="663" fg:w="7"/><text x="53.3750%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="53.1250%" y="565" width="0.5609%" height="15" fill="rgb(244,222,51)" fg:x="663" fg:w="7"/><text x="53.3750%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="53.4455%" y="549" width="0.2404%" height="15" fill="rgb(252,215,16)" fg:x="667" fg:w="3"/><text x="53.6955%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="53.4455%" y="533" width="0.2404%" height="15" fill="rgb(212,130,13)" fg:x="667" fg:w="3"/><text x="53.6955%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="53.5256%" y="517" width="0.1603%" height="15" fill="rgb(227,103,37)" fg:x="668" fg:w="2"/><text x="53.7756%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="53.5256%" y="501" width="0.1603%" height="15" fill="rgb(249,48,15)" fg:x="668" fg:w="2"/><text x="53.7756%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="53.5256%" y="485" width="0.1603%" height="15" fill="rgb(225,96,9)" fg:x="668" fg:w="2"/><text x="53.7756%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.6058%" y="469" width="0.0801%" height="15" fill="rgb(213,81,41)" fg:x="669" fg:w="1"/><text x="53.8558%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.6058%" y="453" width="0.0801%" height="15" fill="rgb(230,15,12)" fg:x="669" fg:w="1"/><text x="53.8558%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="53.6859%" y="565" width="0.1603%" height="15" fill="rgb(218,106,37)" fg:x="670" fg:w="2"/><text x="53.9359%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="53.6859%" y="549" width="0.1603%" height="15" fill="rgb(223,172,47)" fg:x="670" fg:w="2"/><text x="53.9359%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="53.7660%" y="533" width="0.0801%" height="15" fill="rgb(246,180,49)" fg:x="671" fg:w="1"/><text x="54.0160%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="53.7660%" y="517" width="0.0801%" height="15" fill="rgb(231,63,37)" fg:x="671" fg:w="1"/><text x="54.0160%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="53.7660%" y="501" width="0.0801%" height="15" fill="rgb(235,70,40)" fg:x="671" fg:w="1"/><text x="54.0160%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="53.7660%" y="485" width="0.0801%" height="15" fill="rgb(250,54,26)" fg:x="671" fg:w="1"/><text x="54.0160%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="53.7660%" y="469" width="0.0801%" height="15" fill="rgb(214,190,1)" fg:x="671" fg:w="1"/><text x="54.0160%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="53.7660%" y="453" width="0.0801%" height="15" fill="rgb(212,40,35)" fg:x="671" fg:w="1"/><text x="54.0160%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.7660%" y="437" width="0.0801%" height="15" fill="rgb(239,183,47)" fg:x="671" fg:w="1"/><text x="54.0160%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.7660%" y="421" width="0.0801%" height="15" fill="rgb(211,171,49)" fg:x="671" fg:w="1"/><text x="54.0160%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.7660%" y="405" width="0.0801%" height="15" fill="rgb(249,186,27)" fg:x="671" fg:w="1"/><text x="54.0160%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8462%" y="533" width="0.0801%" height="15" fill="rgb(223,23,48)" fg:x="672" fg:w="1"/><text x="54.0962%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="53.9263%" y="533" width="0.0801%" height="15" fill="rgb(209,203,21)" fg:x="673" fg:w="1"/><text x="54.1763%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.9263%" y="517" width="0.0801%" height="15" fill="rgb(229,33,27)" fg:x="673" fg:w="1"/><text x="54.1763%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.0064%" y="501" width="0.0801%" height="15" fill="rgb(207,8,53)" fg:x="674" fg:w="1"/><text x="54.2564%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.0064%" y="485" width="0.0801%" height="15" fill="rgb(221,42,0)" fg:x="674" fg:w="1"/><text x="54.2564%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.0064%" y="469" width="0.0801%" height="15" fill="rgb(223,115,3)" fg:x="674" fg:w="1"/><text x="54.2564%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0064%" y="453" width="0.0801%" height="15" fill="rgb(239,35,26)" fg:x="674" fg:w="1"/><text x="54.2564%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0064%" y="437" width="0.0801%" height="15" fill="rgb(233,22,9)" fg:x="674" fg:w="1"/><text x="54.2564%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.0064%" y="421" width="0.0801%" height="15" fill="rgb(236,221,48)" fg:x="674" fg:w="1"/><text x="54.2564%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.0064%" y="405" width="0.0801%" height="15" fill="rgb(235,52,30)" fg:x="674" fg:w="1"/><text x="54.2564%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.0064%" y="389" width="0.0801%" height="15" fill="rgb(238,133,51)" fg:x="674" fg:w="1"/><text x="54.2564%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.0064%" y="373" width="0.0801%" height="15" fill="rgb(213,122,23)" fg:x="674" fg:w="1"/><text x="54.2564%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.0064%" y="357" width="0.0801%" height="15" fill="rgb(225,8,15)" fg:x="674" fg:w="1"/><text x="54.2564%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.0064%" y="341" width="0.0801%" height="15" fill="rgb(219,126,35)" fg:x="674" fg:w="1"/><text x="54.2564%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.0064%" y="325" width="0.0801%" height="15" fill="rgb(246,113,21)" fg:x="674" fg:w="1"/><text x="54.2564%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.0064%" y="309" width="0.0801%" height="15" fill="rgb(241,193,32)" fg:x="674" fg:w="1"/><text x="54.2564%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.0064%" y="293" width="0.0801%" height="15" fill="rgb(218,99,18)" fg:x="674" fg:w="1"/><text x="54.2564%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.0064%" y="277" width="0.0801%" height="15" fill="rgb(225,114,4)" fg:x="674" fg:w="1"/><text x="54.2564%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="53.8462%" y="565" width="0.3205%" height="15" fill="rgb(235,0,15)" fg:x="672" fg:w="4"/><text x="54.0962%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="53.8462%" y="549" width="0.3205%" height="15" fill="rgb(247,45,27)" fg:x="672" fg:w="4"/><text x="54.0962%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="54.0064%" y="533" width="0.1603%" height="15" fill="rgb(249,88,53)" fg:x="674" fg:w="2"/><text x="54.2564%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="54.0064%" y="517" width="0.1603%" height="15" fill="rgb(207,58,45)" fg:x="674" fg:w="2"/><text x="54.2564%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.0865%" y="501" width="0.0801%" height="15" fill="rgb(216,7,11)" fg:x="675" fg:w="1"/><text x="54.3365%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.0865%" y="485" width="0.0801%" height="15" fill="rgb(230,40,33)" fg:x="675" fg:w="1"/><text x="54.3365%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.0865%" y="469" width="0.0801%" height="15" fill="rgb(232,24,46)" fg:x="675" fg:w="1"/><text x="54.3365%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.0865%" y="453" width="0.0801%" height="15" fill="rgb(219,222,45)" fg:x="675" fg:w="1"/><text x="54.3365%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="54.0865%" y="437" width="0.0801%" height="15" fill="rgb(229,85,44)" fg:x="675" fg:w="1"/><text x="54.3365%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="53.6859%" y="581" width="0.5609%" height="15" fill="rgb(243,71,36)" fg:x="670" fg:w="7"/><text x="53.9359%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="54.1667%" y="565" width="0.0801%" height="15" fill="rgb(230,203,45)" fg:x="676" fg:w="1"/><text x="54.4167%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="54.1667%" y="549" width="0.0801%" height="15" fill="rgb(224,77,49)" fg:x="676" fg:w="1"/><text x="54.4167%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3269%" y="565" width="0.0801%" height="15" fill="rgb(210,186,47)" fg:x="678" fg:w="1"/><text x="54.5769%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3269%" y="549" width="0.0801%" height="15" fill="rgb(232,146,10)" fg:x="678" fg:w="1"/><text x="54.5769%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.3269%" y="533" width="0.0801%" height="15" fill="rgb(236,185,51)" fg:x="678" fg:w="1"/><text x="54.5769%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.3269%" y="517" width="0.0801%" height="15" fill="rgb(223,206,43)" fg:x="678" fg:w="1"/><text x="54.5769%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.3269%" y="501" width="0.0801%" height="15" fill="rgb(227,212,9)" fg:x="678" fg:w="1"/><text x="54.5769%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3269%" y="485" width="0.0801%" height="15" fill="rgb(205,82,3)" fg:x="678" fg:w="1"/><text x="54.5769%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3269%" y="469" width="0.0801%" height="15" fill="rgb(214,2,27)" fg:x="678" fg:w="1"/><text x="54.5769%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.3269%" y="453" width="0.0801%" height="15" fill="rgb(241,37,22)" fg:x="678" fg:w="1"/><text x="54.5769%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.3269%" y="437" width="0.0801%" height="15" fill="rgb(219,182,1)" fg:x="678" fg:w="1"/><text x="54.5769%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.3269%" y="421" width="0.0801%" height="15" fill="rgb(208,224,23)" fg:x="678" fg:w="1"/><text x="54.5769%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.3269%" y="405" width="0.0801%" height="15" fill="rgb(219,121,32)" fg:x="678" fg:w="1"/><text x="54.5769%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.3269%" y="389" width="0.0801%" height="15" fill="rgb(253,13,40)" fg:x="678" fg:w="1"/><text x="54.5769%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="54.2468%" y="581" width="0.2404%" height="15" fill="rgb(233,6,28)" fg:x="677" fg:w="3"/><text x="54.4968%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="54.4071%" y="565" width="0.0801%" height="15" fill="rgb(233,73,8)" fg:x="679" fg:w="1"/><text x="54.6571%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="54.4071%" y="549" width="0.0801%" height="15" fill="rgb(223,48,27)" fg:x="679" fg:w="1"/><text x="54.6571%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="54.4071%" y="533" width="0.0801%" height="15" fill="rgb(231,98,37)" fg:x="679" fg:w="1"/><text x="54.6571%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="54.4071%" y="517" width="0.0801%" height="15" fill="rgb(249,43,32)" fg:x="679" fg:w="1"/><text x="54.6571%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="54.4071%" y="501" width="0.0801%" height="15" fill="rgb(246,184,20)" fg:x="679" fg:w="1"/><text x="54.6571%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="54.4071%" y="485" width="0.0801%" height="15" fill="rgb(251,216,0)" fg:x="679" fg:w="1"/><text x="54.6571%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="54.4071%" y="469" width="0.0801%" height="15" fill="rgb(238,41,42)" fg:x="679" fg:w="1"/><text x="54.6571%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.4071%" y="453" width="0.0801%" height="15" fill="rgb(227,224,50)" fg:x="679" fg:w="1"/><text x="54.6571%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.4071%" y="437" width="0.0801%" height="15" fill="rgb(237,189,18)" fg:x="679" fg:w="1"/><text x="54.6571%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.4071%" y="421" width="0.0801%" height="15" fill="rgb(238,108,6)" fg:x="679" fg:w="1"/><text x="54.6571%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.4071%" y="405" width="0.0801%" height="15" fill="rgb(214,197,53)" fg:x="679" fg:w="1"/><text x="54.6571%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.4071%" y="389" width="0.0801%" height="15" fill="rgb(206,183,15)" fg:x="679" fg:w="1"/><text x="54.6571%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.4071%" y="373" width="0.0801%" height="15" fill="rgb(208,130,32)" fg:x="679" fg:w="1"/><text x="54.6571%" y="383.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="54.4071%" y="357" width="0.0801%" height="15" fill="rgb(226,128,52)" fg:x="679" fg:w="1"/><text x="54.6571%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.6474%" y="533" width="0.0801%" height="15" fill="rgb(231,183,21)" fg:x="682" fg:w="1"/><text x="54.8974%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.6474%" y="517" width="0.0801%" height="15" fill="rgb(216,8,35)" fg:x="682" fg:w="1"/><text x="54.8974%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.6474%" y="501" width="0.0801%" height="15" fill="rgb(224,221,8)" fg:x="682" fg:w="1"/><text x="54.8974%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="54.4872%" y="565" width="0.3205%" height="15" fill="rgb(210,111,33)" fg:x="680" fg:w="4"/><text x="54.7372%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="54.5673%" y="549" width="0.2404%" height="15" fill="rgb(232,211,38)" fg:x="681" fg:w="3"/><text x="54.8173%" y="559.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="54.7276%" y="533" width="0.0801%" height="15" fill="rgb(216,190,27)" fg:x="683" fg:w="1"/><text x="54.9776%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="54.7276%" y="517" width="0.0801%" height="15" fill="rgb(237,215,27)" fg:x="683" fg:w="1"/><text x="54.9776%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="54.7276%" y="501" width="0.0801%" height="15" fill="rgb(251,121,39)" fg:x="683" fg:w="1"/><text x="54.9776%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.9679%" y="549" width="0.0801%" height="15" fill="rgb(244,21,14)" fg:x="686" fg:w="1"/><text x="55.2179%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.9679%" y="533" width="0.0801%" height="15" fill="rgb(221,192,22)" fg:x="686" fg:w="1"/><text x="55.2179%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (125 samples, 10.02%)</title><rect x="45.1122%" y="613" width="10.0160%" height="15" fill="rgb(251,190,28)" fg:x="563" fg:w="125"/><text x="45.3622%" y="623.50">&lt;plugins_core:..</text></g><g><title>plugins_core::location::change_location (37 samples, 2.96%)</title><rect x="52.1635%" y="597" width="2.9647%" height="15" fill="rgb(217,4,51)" fg:x="651" fg:w="37"/><text x="52.4135%" y="607.50">plu..</text></g><g><title>plugins_core::location::Location::set (8 samples, 0.64%)</title><rect x="54.4872%" y="581" width="0.6410%" height="15" fill="rgb(215,183,49)" fg:x="680" fg:w="8"/><text x="54.7372%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="54.8077%" y="565" width="0.3205%" height="15" fill="rgb(249,28,49)" fg:x="684" fg:w="4"/><text x="55.0577%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="55.0481%" y="549" width="0.0801%" height="15" fill="rgb(214,42,20)" fg:x="687" fg:w="1"/><text x="55.2981%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.0481%" y="533" width="0.0801%" height="15" fill="rgb(222,77,27)" fg:x="687" fg:w="1"/><text x="55.2981%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.0481%" y="517" width="0.0801%" height="15" fill="rgb(252,198,32)" fg:x="687" fg:w="1"/><text x="55.2981%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.0481%" y="501" width="0.0801%" height="15" fill="rgb(207,140,50)" fg:x="687" fg:w="1"/><text x="55.2981%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2083%" y="549" width="0.0801%" height="15" fill="rgb(251,170,16)" fg:x="689" fg:w="1"/><text x="55.4583%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2083%" y="533" width="0.0801%" height="15" fill="rgb(249,111,45)" fg:x="689" fg:w="1"/><text x="55.4583%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2083%" y="517" width="0.0801%" height="15" fill="rgb(241,99,35)" fg:x="689" fg:w="1"/><text x="55.4583%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.2885%" y="517" width="0.0801%" height="15" fill="rgb(216,188,17)" fg:x="690" fg:w="1"/><text x="55.5385%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.2885%" y="501" width="0.0801%" height="15" fill="rgb(254,209,53)" fg:x="690" fg:w="1"/><text x="55.5385%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="55.3686%" y="485" width="0.1603%" height="15" fill="rgb(231,105,41)" fg:x="691" fg:w="2"/><text x="55.6186%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.5288%" y="485" width="0.1603%" height="15" fill="rgb(242,93,23)" fg:x="693" fg:w="2"/><text x="55.7788%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (8 samples, 0.64%)</title><rect x="55.2083%" y="581" width="0.6410%" height="15" fill="rgb(218,159,11)" fg:x="689" fg:w="8"/><text x="55.4583%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="55.2083%" y="565" width="0.6410%" height="15" fill="rgb(209,90,32)" fg:x="689" fg:w="8"/><text x="55.4583%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="55.2885%" y="549" width="0.5609%" height="15" fill="rgb(253,118,46)" fg:x="690" fg:w="7"/><text x="55.5385%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="55.2885%" y="533" width="0.5609%" height="15" fill="rgb(219,121,2)" fg:x="690" fg:w="7"/><text x="55.5385%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="55.3686%" y="517" width="0.4808%" height="15" fill="rgb(207,57,47)" fg:x="691" fg:w="6"/><text x="55.6186%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="55.3686%" y="501" width="0.4808%" height="15" fill="rgb(235,113,43)" fg:x="691" fg:w="6"/><text x="55.6186%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.6891%" y="485" width="0.1603%" height="15" fill="rgb(238,30,50)" fg:x="695" fg:w="2"/><text x="55.9391%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.7692%" y="469" width="0.0801%" height="15" fill="rgb(237,47,29)" fg:x="696" fg:w="1"/><text x="56.0192%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.7692%" y="453" width="0.0801%" height="15" fill="rgb(245,102,24)" fg:x="696" fg:w="1"/><text x="56.0192%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.9295%" y="549" width="0.0801%" height="15" fill="rgb(245,152,9)" fg:x="698" fg:w="1"/><text x="56.1795%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.9295%" y="533" width="0.0801%" height="15" fill="rgb(223,213,17)" fg:x="698" fg:w="1"/><text x="56.1795%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.9295%" y="517" width="0.0801%" height="15" fill="rgb(241,164,4)" fg:x="698" fg:w="1"/><text x="56.1795%" y="527.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (13 samples, 1.04%)</title><rect x="55.1282%" y="597" width="1.0417%" height="15" fill="rgb(205,209,31)" fg:x="688" fg:w="13"/><text x="55.3782%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="55.8494%" y="581" width="0.3205%" height="15" fill="rgb(248,173,2)" fg:x="697" fg:w="4"/><text x="56.0994%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="55.8494%" y="565" width="0.3205%" height="15" fill="rgb(207,67,32)" fg:x="697" fg:w="4"/><text x="56.0994%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.0096%" y="549" width="0.1603%" height="15" fill="rgb(239,109,13)" fg:x="699" fg:w="2"/><text x="56.2596%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.0897%" y="533" width="0.0801%" height="15" fill="rgb(233,123,24)" fg:x="700" fg:w="1"/><text x="56.3397%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.1699%" y="565" width="0.0801%" height="15" fill="rgb(232,120,19)" fg:x="701" fg:w="1"/><text x="56.4199%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="56.1699%" y="549" width="0.0801%" height="15" fill="rgb(225,17,50)" fg:x="701" fg:w="1"/><text x="56.4199%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.1699%" y="533" width="0.0801%" height="15" fill="rgb(239,216,13)" fg:x="701" fg:w="1"/><text x="56.4199%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.1699%" y="517" width="0.0801%" height="15" fill="rgb(232,213,26)" fg:x="701" fg:w="1"/><text x="56.4199%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.3301%" y="341" width="0.0801%" height="15" fill="rgb(244,59,39)" fg:x="703" fg:w="1"/><text x="56.5801%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.2500%" y="549" width="0.2404%" height="15" fill="rgb(234,61,35)" fg:x="702" fg:w="3"/><text x="56.5000%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.2500%" y="533" width="0.2404%" height="15" fill="rgb(245,94,24)" fg:x="702" fg:w="3"/><text x="56.5000%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.3301%" y="517" width="0.1603%" height="15" fill="rgb(238,190,44)" fg:x="703" fg:w="2"/><text x="56.5801%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.3301%" y="501" width="0.1603%" height="15" fill="rgb(205,145,25)" fg:x="703" fg:w="2"/><text x="56.5801%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="56.3301%" y="485" width="0.1603%" height="15" fill="rgb(229,158,41)" fg:x="703" fg:w="2"/><text x="56.5801%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="56.3301%" y="469" width="0.1603%" height="15" fill="rgb(224,121,5)" fg:x="703" fg:w="2"/><text x="56.5801%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="56.3301%" y="453" width="0.1603%" height="15" fill="rgb(238,168,35)" fg:x="703" fg:w="2"/><text x="56.5801%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.3301%" y="437" width="0.1603%" height="15" fill="rgb(231,11,42)" fg:x="703" fg:w="2"/><text x="56.5801%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.3301%" y="421" width="0.1603%" height="15" fill="rgb(241,105,19)" fg:x="703" fg:w="2"/><text x="56.5801%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="56.3301%" y="405" width="0.1603%" height="15" fill="rgb(253,210,20)" fg:x="703" fg:w="2"/><text x="56.5801%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="56.3301%" y="389" width="0.1603%" height="15" fill="rgb(215,72,52)" fg:x="703" fg:w="2"/><text x="56.5801%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="56.3301%" y="373" width="0.1603%" height="15" fill="rgb(223,225,30)" fg:x="703" fg:w="2"/><text x="56.5801%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="56.3301%" y="357" width="0.1603%" height="15" fill="rgb(220,138,44)" fg:x="703" fg:w="2"/><text x="56.5801%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="56.4103%" y="341" width="0.0801%" height="15" fill="rgb(206,128,12)" fg:x="704" fg:w="1"/><text x="56.6603%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="56.4103%" y="325" width="0.0801%" height="15" fill="rgb(245,194,0)" fg:x="704" fg:w="1"/><text x="56.6603%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="56.4904%" y="549" width="0.0801%" height="15" fill="rgb(235,175,41)" fg:x="705" fg:w="1"/><text x="56.7404%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="56.4904%" y="533" width="0.0801%" height="15" fill="rgb(216,15,48)" fg:x="705" fg:w="1"/><text x="56.7404%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="56.4904%" y="517" width="0.0801%" height="15" fill="rgb(223,179,5)" fg:x="705" fg:w="1"/><text x="56.7404%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="56.5705%" y="501" width="0.0801%" height="15" fill="rgb(220,80,15)" fg:x="706" fg:w="1"/><text x="56.8205%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="56.5705%" y="533" width="0.1603%" height="15" fill="rgb(228,20,30)" fg:x="706" fg:w="2"/><text x="56.8205%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="56.5705%" y="517" width="0.1603%" height="15" fill="rgb(229,194,27)" fg:x="706" fg:w="2"/><text x="56.8205%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="56.6506%" y="501" width="0.0801%" height="15" fill="rgb(238,202,32)" fg:x="707" fg:w="1"/><text x="56.9006%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="56.6506%" y="485" width="0.0801%" height="15" fill="rgb(207,82,27)" fg:x="707" fg:w="1"/><text x="56.9006%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="469" width="0.0801%" height="15" fill="rgb(246,122,46)" fg:x="707" fg:w="1"/><text x="56.9006%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.6506%" y="453" width="0.0801%" height="15" fill="rgb(220,101,26)" fg:x="707" fg:w="1"/><text x="56.9006%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="437" width="0.0801%" height="15" fill="rgb(251,63,9)" fg:x="707" fg:w="1"/><text x="56.9006%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="421" width="0.0801%" height="15" fill="rgb(235,186,5)" fg:x="707" fg:w="1"/><text x="56.9006%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="405" width="0.0801%" height="15" fill="rgb(241,139,37)" fg:x="707" fg:w="1"/><text x="56.9006%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.6506%" y="389" width="0.0801%" height="15" fill="rgb(252,177,51)" fg:x="707" fg:w="1"/><text x="56.9006%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="373" width="0.0801%" height="15" fill="rgb(214,131,22)" fg:x="707" fg:w="1"/><text x="56.9006%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="357" width="0.0801%" height="15" fill="rgb(246,53,19)" fg:x="707" fg:w="1"/><text x="56.9006%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="341" width="0.0801%" height="15" fill="rgb(231,158,27)" fg:x="707" fg:w="1"/><text x="56.9006%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.6506%" y="325" width="0.0801%" height="15" fill="rgb(226,166,46)" fg:x="707" fg:w="1"/><text x="56.9006%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="309" width="0.0801%" height="15" fill="rgb(218,178,26)" fg:x="707" fg:w="1"/><text x="56.9006%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="293" width="0.0801%" height="15" fill="rgb(206,25,39)" fg:x="707" fg:w="1"/><text x="56.9006%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="277" width="0.0801%" height="15" fill="rgb(232,218,41)" fg:x="707" fg:w="1"/><text x="56.9006%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.6506%" y="261" width="0.0801%" height="15" fill="rgb(212,151,15)" fg:x="707" fg:w="1"/><text x="56.9006%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.6506%" y="245" width="0.0801%" height="15" fill="rgb(213,49,22)" fg:x="707" fg:w="1"/><text x="56.9006%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="56.7308%" y="533" width="0.0801%" height="15" fill="rgb(247,116,21)" fg:x="708" fg:w="1"/><text x="56.9808%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.7308%" y="517" width="0.0801%" height="15" fill="rgb(248,98,14)" fg:x="708" fg:w="1"/><text x="56.9808%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.7308%" y="501" width="0.0801%" height="15" fill="rgb(247,72,6)" fg:x="708" fg:w="1"/><text x="56.9808%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8910%" y="469" width="0.0801%" height="15" fill="rgb(213,9,22)" fg:x="710" fg:w="1"/><text x="57.1410%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8910%" y="453" width="0.0801%" height="15" fill="rgb(213,122,30)" fg:x="710" fg:w="1"/><text x="57.1410%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.8910%" y="437" width="0.0801%" height="15" fill="rgb(244,11,30)" fg:x="710" fg:w="1"/><text x="57.1410%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.8910%" y="421" width="0.0801%" height="15" fill="rgb(236,102,26)" fg:x="710" fg:w="1"/><text x="57.1410%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.8910%" y="405" width="0.0801%" height="15" fill="rgb(231,166,37)" fg:x="710" fg:w="1"/><text x="57.1410%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8910%" y="389" width="0.0801%" height="15" fill="rgb(220,224,29)" fg:x="710" fg:w="1"/><text x="57.1410%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8910%" y="373" width="0.0801%" height="15" fill="rgb(227,30,40)" fg:x="710" fg:w="1"/><text x="57.1410%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.8910%" y="357" width="0.0801%" height="15" fill="rgb(235,8,36)" fg:x="710" fg:w="1"/><text x="57.1410%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.8910%" y="341" width="0.0801%" height="15" fill="rgb(232,175,19)" fg:x="710" fg:w="1"/><text x="57.1410%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.8910%" y="325" width="0.0801%" height="15" fill="rgb(217,114,10)" fg:x="710" fg:w="1"/><text x="57.1410%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.8910%" y="309" width="0.0801%" height="15" fill="rgb(214,112,41)" fg:x="710" fg:w="1"/><text x="57.1410%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8910%" y="293" width="0.0801%" height="15" fill="rgb(226,69,34)" fg:x="710" fg:w="1"/><text x="57.1410%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="56.8109%" y="501" width="0.4808%" height="15" fill="rgb(219,23,46)" fg:x="709" fg:w="6"/><text x="57.0609%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="56.8109%" y="485" width="0.4808%" height="15" fill="rgb(233,3,8)" fg:x="709" fg:w="6"/><text x="57.0609%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="56.9712%" y="469" width="0.3205%" height="15" fill="rgb(251,34,42)" fg:x="711" fg:w="4"/><text x="57.2212%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="56.9712%" y="453" width="0.3205%" height="15" fill="rgb(215,84,9)" fg:x="711" fg:w="4"/><text x="57.2212%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2115%" y="437" width="0.0801%" height="15" fill="rgb(231,75,52)" fg:x="714" fg:w="1"/><text x="57.4615%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2115%" y="421" width="0.0801%" height="15" fill="rgb(247,201,31)" fg:x="714" fg:w="1"/><text x="57.4615%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.2115%" y="405" width="0.0801%" height="15" fill="rgb(215,171,37)" fg:x="714" fg:w="1"/><text x="57.4615%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.2115%" y="389" width="0.0801%" height="15" fill="rgb(208,208,44)" fg:x="714" fg:w="1"/><text x="57.4615%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.2115%" y="373" width="0.0801%" height="15" fill="rgb(247,146,54)" fg:x="714" fg:w="1"/><text x="57.4615%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2115%" y="357" width="0.0801%" height="15" fill="rgb(209,0,40)" fg:x="714" fg:w="1"/><text x="57.4615%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2115%" y="341" width="0.0801%" height="15" fill="rgb(221,59,4)" fg:x="714" fg:w="1"/><text x="57.4615%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.2115%" y="325" width="0.0801%" height="15" fill="rgb(227,153,47)" fg:x="714" fg:w="1"/><text x="57.4615%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.2115%" y="309" width="0.0801%" height="15" fill="rgb(253,225,10)" fg:x="714" fg:w="1"/><text x="57.4615%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.2115%" y="293" width="0.0801%" height="15" fill="rgb(237,201,24)" fg:x="714" fg:w="1"/><text x="57.4615%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.2115%" y="277" width="0.0801%" height="15" fill="rgb(238,23,27)" fg:x="714" fg:w="1"/><text x="57.4615%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2115%" y="261" width="0.0801%" height="15" fill="rgb(236,54,50)" fg:x="714" fg:w="1"/><text x="57.4615%" y="271.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="57.2917%" y="485" width="0.2404%" height="15" fill="rgb(216,106,0)" fg:x="715" fg:w="3"/><text x="57.5417%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="57.2917%" y="469" width="0.2404%" height="15" fill="rgb(234,179,35)" fg:x="715" fg:w="3"/><text x="57.5417%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="57.3718%" y="453" width="0.1603%" height="15" fill="rgb(210,35,8)" fg:x="716" fg:w="2"/><text x="57.6218%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="57.3718%" y="437" width="0.1603%" height="15" fill="rgb(238,144,16)" fg:x="716" fg:w="2"/><text x="57.6218%" y="447.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="57.4519%" y="421" width="0.0801%" height="15" fill="rgb(244,54,7)" fg:x="717" fg:w="1"/><text x="57.7019%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4519%" y="405" width="0.0801%" height="15" fill="rgb(233,225,40)" fg:x="717" fg:w="1"/><text x="57.7019%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4519%" y="389" width="0.0801%" height="15" fill="rgb(249,227,23)" fg:x="717" fg:w="1"/><text x="57.7019%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.4519%" y="373" width="0.0801%" height="15" fill="rgb(215,42,44)" fg:x="717" fg:w="1"/><text x="57.7019%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.4519%" y="357" width="0.0801%" height="15" fill="rgb(220,145,40)" fg:x="717" fg:w="1"/><text x="57.7019%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.4519%" y="341" width="0.0801%" height="15" fill="rgb(228,218,40)" fg:x="717" fg:w="1"/><text x="57.7019%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.4519%" y="325" width="0.0801%" height="15" fill="rgb(217,52,54)" fg:x="717" fg:w="1"/><text x="57.7019%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.4519%" y="309" width="0.0801%" height="15" fill="rgb(223,90,22)" fg:x="717" fg:w="1"/><text x="57.7019%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.4519%" y="293" width="0.0801%" height="15" fill="rgb(232,114,35)" fg:x="717" fg:w="1"/><text x="57.7019%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.4519%" y="277" width="0.0801%" height="15" fill="rgb(227,223,50)" fg:x="717" fg:w="1"/><text x="57.7019%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.4519%" y="261" width="0.0801%" height="15" fill="rgb(249,175,7)" fg:x="717" fg:w="1"/><text x="57.7019%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.4519%" y="245" width="0.0801%" height="15" fill="rgb(249,173,15)" fg:x="717" fg:w="1"/><text x="57.7019%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4519%" y="229" width="0.0801%" height="15" fill="rgb(240,131,6)" fg:x="717" fg:w="1"/><text x="57.7019%" y="239.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="57.2917%" y="501" width="0.3205%" height="15" fill="rgb(246,117,16)" fg:x="715" fg:w="4"/><text x="57.5417%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.5321%" y="485" width="0.0801%" height="15" fill="rgb(209,32,16)" fg:x="718" fg:w="1"/><text x="57.7821%" y="495.50"></text></g><g><title>plugins_core::tools::contained_by (14 samples, 1.12%)</title><rect x="56.5705%" y="549" width="1.1218%" height="15" fill="rgb(207,45,44)" fg:x="706" fg:w="14"/><text x="56.8205%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.88%)</title><rect x="56.8109%" y="533" width="0.8814%" height="15" fill="rgb(210,66,3)" fg:x="709" fg:w="11"/><text x="57.0609%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="56.8109%" y="517" width="0.8814%" height="15" fill="rgb(246,133,30)" fg:x="709" fg:w="11"/><text x="57.0609%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.6122%" y="501" width="0.0801%" height="15" fill="rgb(224,37,17)" fg:x="719" fg:w="1"/><text x="57.8622%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="57.6923%" y="533" width="0.0801%" height="15" fill="rgb(237,218,18)" fg:x="720" fg:w="1"/><text x="57.9423%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="57.6923%" y="517" width="0.0801%" height="15" fill="rgb(240,57,8)" fg:x="720" fg:w="1"/><text x="57.9423%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="57.6923%" y="501" width="0.0801%" height="15" fill="rgb(231,51,38)" fg:x="720" fg:w="1"/><text x="57.9423%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="57.6923%" y="485" width="0.0801%" height="15" fill="rgb(230,89,50)" fg:x="720" fg:w="1"/><text x="57.9423%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="57.6923%" y="469" width="0.0801%" height="15" fill="rgb(234,103,34)" fg:x="720" fg:w="1"/><text x="57.9423%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="57.6923%" y="453" width="0.0801%" height="15" fill="rgb(220,45,48)" fg:x="720" fg:w="1"/><text x="57.9423%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8526%" y="501" width="0.0801%" height="15" fill="rgb(250,210,3)" fg:x="722" fg:w="1"/><text x="58.1026%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.8526%" y="485" width="0.0801%" height="15" fill="rgb(210,118,12)" fg:x="722" fg:w="1"/><text x="58.1026%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="57.9327%" y="501" width="0.1603%" height="15" fill="rgb(238,154,21)" fg:x="723" fg:w="2"/><text x="58.1827%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="57.9327%" y="485" width="0.1603%" height="15" fill="rgb(227,220,4)" fg:x="723" fg:w="2"/><text x="58.1827%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.9327%" y="469" width="0.1603%" height="15" fill="rgb(207,179,27)" fg:x="723" fg:w="2"/><text x="58.1827%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.0929%" y="469" width="0.0801%" height="15" fill="rgb(240,111,30)" fg:x="725" fg:w="1"/><text x="58.3429%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (25 samples, 2.00%)</title><rect x="56.2500%" y="565" width="2.0032%" height="15" fill="rgb(251,29,1)" fg:x="702" fg:w="25"/><text x="56.5000%" y="575.50">p..</text></g><g><title>plugins_core::tools::occupied_by (7 samples, 0.56%)</title><rect x="57.6923%" y="549" width="0.5609%" height="15" fill="rgb(224,141,39)" fg:x="720" fg:w="7"/><text x="57.9423%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="57.7724%" y="533" width="0.4808%" height="15" fill="rgb(207,98,26)" fg:x="721" fg:w="6"/><text x="58.0224%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="57.7724%" y="517" width="0.4808%" height="15" fill="rgb(221,37,6)" fg:x="721" fg:w="6"/><text x="58.0224%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.0929%" y="501" width="0.1603%" height="15" fill="rgb(217,32,44)" fg:x="725" fg:w="2"/><text x="58.3429%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.0929%" y="485" width="0.1603%" height="15" fill="rgb(253,149,2)" fg:x="725" fg:w="2"/><text x="58.3429%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.1731%" y="469" width="0.0801%" height="15" fill="rgb(220,165,39)" fg:x="726" fg:w="1"/><text x="58.4231%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.1731%" y="453" width="0.0801%" height="15" fill="rgb(235,33,48)" fg:x="726" fg:w="1"/><text x="58.4231%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.1731%" y="437" width="0.0801%" height="15" fill="rgb(221,89,6)" fg:x="726" fg:w="1"/><text x="58.4231%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2532%" y="501" width="0.0801%" height="15" fill="rgb(215,214,6)" fg:x="727" fg:w="1"/><text x="58.5032%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.4135%" y="469" width="0.0801%" height="15" fill="rgb(241,1,30)" fg:x="729" fg:w="1"/><text x="58.6635%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.4135%" y="453" width="0.0801%" height="15" fill="rgb(211,140,32)" fg:x="729" fg:w="1"/><text x="58.6635%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.4135%" y="437" width="0.0801%" height="15" fill="rgb(232,48,21)" fg:x="729" fg:w="1"/><text x="58.6635%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.3333%" y="485" width="0.2404%" height="15" fill="rgb(252,217,9)" fg:x="728" fg:w="3"/><text x="58.5833%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.4936%" y="469" width="0.0801%" height="15" fill="rgb(206,123,34)" fg:x="730" fg:w="1"/><text x="58.7436%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.4936%" y="453" width="0.0801%" height="15" fill="rgb(245,161,38)" fg:x="730" fg:w="1"/><text x="58.7436%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.4936%" y="437" width="0.0801%" height="15" fill="rgb(233,205,7)" fg:x="730" fg:w="1"/><text x="58.7436%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.4936%" y="421" width="0.0801%" height="15" fill="rgb(217,119,18)" fg:x="730" fg:w="1"/><text x="58.7436%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.4936%" y="405" width="0.0801%" height="15" fill="rgb(252,126,3)" fg:x="730" fg:w="1"/><text x="58.7436%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="58.4936%" y="389" width="0.0801%" height="15" fill="rgb(252,188,15)" fg:x="730" fg:w="1"/><text x="58.7436%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.4936%" y="373" width="0.0801%" height="15" fill="rgb(228,1,48)" fg:x="730" fg:w="1"/><text x="58.7436%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.5737%" y="485" width="0.0801%" height="15" fill="rgb(205,187,8)" fg:x="731" fg:w="1"/><text x="58.8237%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.5737%" y="469" width="0.0801%" height="15" fill="rgb(205,105,50)" fg:x="731" fg:w="1"/><text x="58.8237%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.5737%" y="453" width="0.0801%" height="15" fill="rgb(211,31,46)" fg:x="731" fg:w="1"/><text x="58.8237%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.5737%" y="437" width="0.0801%" height="15" fill="rgb(213,126,5)" fg:x="731" fg:w="1"/><text x="58.8237%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6538%" y="421" width="0.0801%" height="15" fill="rgb(231,87,9)" fg:x="732" fg:w="1"/><text x="58.9038%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6538%" y="405" width="0.0801%" height="15" fill="rgb(219,224,20)" fg:x="732" fg:w="1"/><text x="58.9038%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (33 samples, 2.64%)</title><rect x="56.1699%" y="597" width="2.6442%" height="15" fill="rgb(230,84,21)" fg:x="701" fg:w="33"/><text x="56.4199%" y="607.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (33 samples, 2.64%)</title><rect x="56.1699%" y="581" width="2.6442%" height="15" fill="rgb(224,169,42)" fg:x="701" fg:w="33"/><text x="56.4199%" y="591.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (7 samples, 0.56%)</title><rect x="58.2532%" y="565" width="0.5609%" height="15" fill="rgb(227,182,13)" fg:x="727" fg:w="7"/><text x="58.5032%" y="575.50"></text></g><g><title>plugins_core::finding::matches_description (7 samples, 0.56%)</title><rect x="58.2532%" y="549" width="0.5609%" height="15" fill="rgb(249,57,41)" fg:x="727" fg:w="7"/><text x="58.5032%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::name (7 samples, 0.56%)</title><rect x="58.2532%" y="533" width="0.5609%" height="15" fill="rgb(214,93,52)" fg:x="727" fg:w="7"/><text x="58.5032%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="58.2532%" y="517" width="0.5609%" height="15" fill="rgb(229,161,34)" fg:x="727" fg:w="7"/><text x="58.5032%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="58.3333%" y="501" width="0.4808%" height="15" fill="rgb(227,193,17)" fg:x="728" fg:w="6"/><text x="58.5833%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.6538%" y="485" width="0.1603%" height="15" fill="rgb(242,164,46)" fg:x="732" fg:w="2"/><text x="58.9038%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.6538%" y="469" width="0.1603%" height="15" fill="rgb(242,142,47)" fg:x="732" fg:w="2"/><text x="58.9038%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="58.6538%" y="453" width="0.1603%" height="15" fill="rgb(208,23,18)" fg:x="732" fg:w="2"/><text x="58.9038%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.6538%" y="437" width="0.1603%" height="15" fill="rgb(219,54,38)" fg:x="732" fg:w="2"/><text x="58.9038%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.7340%" y="421" width="0.0801%" height="15" fill="rgb(206,97,35)" fg:x="733" fg:w="1"/><text x="58.9840%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.7340%" y="405" width="0.0801%" height="15" fill="rgb(208,76,8)" fg:x="733" fg:w="1"/><text x="58.9840%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.7340%" y="389" width="0.0801%" height="15" fill="rgb(220,92,28)" fg:x="733" fg:w="1"/><text x="58.9840%" y="399.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="58.8141%" y="597" width="0.0801%" height="15" fill="rgb(209,158,39)" fg:x="734" fg:w="1"/><text x="59.0641%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="58.8141%" y="581" width="0.0801%" height="15" fill="rgb(238,175,9)" fg:x="734" fg:w="1"/><text x="59.0641%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="58.8141%" y="565" width="0.0801%" height="15" fill="rgb(240,116,17)" fg:x="734" fg:w="1"/><text x="59.0641%" y="575.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="58.8141%" y="549" width="0.0801%" height="15" fill="rgb(208,7,2)" fg:x="734" fg:w="1"/><text x="59.0641%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="58.8141%" y="533" width="0.0801%" height="15" fill="rgb(252,52,4)" fg:x="734" fg:w="1"/><text x="59.0641%" y="543.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="58.8141%" y="517" width="0.0801%" height="15" fill="rgb(222,68,34)" fg:x="734" fg:w="1"/><text x="59.0641%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="58.8141%" y="501" width="0.0801%" height="15" fill="rgb(242,154,35)" fg:x="734" fg:w="1"/><text x="59.0641%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="58.8141%" y="485" width="0.0801%" height="15" fill="rgb(210,125,54)" fg:x="734" fg:w="1"/><text x="59.0641%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8141%" y="469" width="0.0801%" height="15" fill="rgb(247,121,18)" fg:x="734" fg:w="1"/><text x="59.0641%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="58.8942%" y="581" width="0.1603%" height="15" fill="rgb(223,48,51)" fg:x="735" fg:w="2"/><text x="59.1442%" y="591.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="59.1346%" y="533" width="0.0801%" height="15" fill="rgb(211,156,48)" fg:x="738" fg:w="1"/><text x="59.3846%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.1346%" y="517" width="0.0801%" height="15" fill="rgb(236,56,31)" fg:x="738" fg:w="1"/><text x="59.3846%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.2147%" y="517" width="0.0801%" height="15" fill="rgb(247,157,52)" fg:x="739" fg:w="1"/><text x="59.4647%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2147%" y="501" width="0.0801%" height="15" fill="rgb(244,121,39)" fg:x="739" fg:w="1"/><text x="59.4647%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2147%" y="485" width="0.0801%" height="15" fill="rgb(239,4,40)" fg:x="739" fg:w="1"/><text x="59.4647%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2147%" y="469" width="0.0801%" height="15" fill="rgb(213,204,45)" fg:x="739" fg:w="1"/><text x="59.4647%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2147%" y="453" width="0.0801%" height="15" fill="rgb(242,107,0)" fg:x="739" fg:w="1"/><text x="59.4647%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2147%" y="437" width="0.0801%" height="15" fill="rgb(215,152,25)" fg:x="739" fg:w="1"/><text x="59.4647%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2147%" y="421" width="0.0801%" height="15" fill="rgb(233,151,6)" fg:x="739" fg:w="1"/><text x="59.4647%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2147%" y="405" width="0.0801%" height="15" fill="rgb(206,126,44)" fg:x="739" fg:w="1"/><text x="59.4647%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.2147%" y="389" width="0.0801%" height="15" fill="rgb(209,145,15)" fg:x="739" fg:w="1"/><text x="59.4647%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.2147%" y="373" width="0.0801%" height="15" fill="rgb(235,214,8)" fg:x="739" fg:w="1"/><text x="59.4647%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.2147%" y="357" width="0.0801%" height="15" fill="rgb(216,140,51)" fg:x="739" fg:w="1"/><text x="59.4647%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.2147%" y="341" width="0.0801%" height="15" fill="rgb(213,83,34)" fg:x="739" fg:w="1"/><text x="59.4647%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2147%" y="325" width="0.0801%" height="15" fill="rgb(218,186,44)" fg:x="739" fg:w="1"/><text x="59.4647%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="59.1346%" y="549" width="0.2404%" height="15" fill="rgb(225,147,10)" fg:x="738" fg:w="3"/><text x="59.3846%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.2147%" y="533" width="0.1603%" height="15" fill="rgb(209,214,20)" fg:x="739" fg:w="2"/><text x="59.4647%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.2949%" y="517" width="0.0801%" height="15" fill="rgb(252,61,32)" fg:x="740" fg:w="1"/><text x="59.5449%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.2949%" y="501" width="0.0801%" height="15" fill="rgb(237,204,10)" fg:x="740" fg:w="1"/><text x="59.5449%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2949%" y="485" width="0.0801%" height="15" fill="rgb(246,118,16)" fg:x="740" fg:w="1"/><text x="59.5449%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.3750%" y="533" width="0.0801%" height="15" fill="rgb(214,50,9)" fg:x="741" fg:w="1"/><text x="59.6250%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4551%" y="517" width="0.0801%" height="15" fill="rgb(212,41,1)" fg:x="742" fg:w="1"/><text x="59.7051%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4551%" y="501" width="0.0801%" height="15" fill="rgb(228,172,32)" fg:x="742" fg:w="1"/><text x="59.7051%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4551%" y="485" width="0.0801%" height="15" fill="rgb(231,85,38)" fg:x="742" fg:w="1"/><text x="59.7051%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4551%" y="469" width="0.0801%" height="15" fill="rgb(223,120,31)" fg:x="742" fg:w="1"/><text x="59.7051%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4551%" y="453" width="0.0801%" height="15" fill="rgb(254,174,9)" fg:x="742" fg:w="1"/><text x="59.7051%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.4551%" y="437" width="0.0801%" height="15" fill="rgb(243,197,0)" fg:x="742" fg:w="1"/><text x="59.7051%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.4551%" y="421" width="0.0801%" height="15" fill="rgb(226,186,17)" fg:x="742" fg:w="1"/><text x="59.7051%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.4551%" y="405" width="0.0801%" height="15" fill="rgb(229,38,38)" fg:x="742" fg:w="1"/><text x="59.7051%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.4551%" y="389" width="0.0801%" height="15" fill="rgb(238,82,14)" fg:x="742" fg:w="1"/><text x="59.7051%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.4551%" y="373" width="0.0801%" height="15" fill="rgb(230,154,54)" fg:x="742" fg:w="1"/><text x="59.7051%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.4551%" y="357" width="0.0801%" height="15" fill="rgb(243,84,17)" fg:x="742" fg:w="1"/><text x="59.7051%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.4551%" y="341" width="0.0801%" height="15" fill="rgb(226,41,37)" fg:x="742" fg:w="1"/><text x="59.7051%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.4551%" y="325" width="0.0801%" height="15" fill="rgb(219,20,18)" fg:x="742" fg:w="1"/><text x="59.7051%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.4551%" y="309" width="0.0801%" height="15" fill="rgb(243,173,39)" fg:x="742" fg:w="1"/><text x="59.7051%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4551%" y="293" width="0.0801%" height="15" fill="rgb(245,79,20)" fg:x="742" fg:w="1"/><text x="59.7051%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="59.0545%" y="581" width="0.5609%" height="15" fill="rgb(229,101,45)" fg:x="737" fg:w="7"/><text x="59.3045%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="59.0545%" y="565" width="0.5609%" height="15" fill="rgb(215,123,52)" fg:x="737" fg:w="7"/><text x="59.3045%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="59.3750%" y="549" width="0.2404%" height="15" fill="rgb(215,11,33)" fg:x="741" fg:w="3"/><text x="59.6250%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.4551%" y="533" width="0.1603%" height="15" fill="rgb(245,105,20)" fg:x="742" fg:w="2"/><text x="59.7051%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.5353%" y="517" width="0.0801%" height="15" fill="rgb(231,132,30)" fg:x="743" fg:w="1"/><text x="59.7853%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.5353%" y="501" width="0.0801%" height="15" fill="rgb(224,62,21)" fg:x="743" fg:w="1"/><text x="59.7853%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="59.5353%" y="485" width="0.0801%" height="15" fill="rgb(209,221,38)" fg:x="743" fg:w="1"/><text x="59.7853%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.5353%" y="469" width="0.0801%" height="15" fill="rgb(229,200,30)" fg:x="743" fg:w="1"/><text x="59.7853%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.5353%" y="453" width="0.0801%" height="15" fill="rgb(237,142,41)" fg:x="743" fg:w="1"/><text x="59.7853%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.6955%" y="357" width="0.0801%" height="15" fill="rgb(238,37,22)" fg:x="745" fg:w="1"/><text x="59.9455%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.6955%" y="341" width="0.0801%" height="15" fill="rgb(234,182,17)" fg:x="745" fg:w="1"/><text x="59.9455%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.6955%" y="325" width="0.0801%" height="15" fill="rgb(237,58,48)" fg:x="745" fg:w="1"/><text x="59.9455%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6955%" y="309" width="0.0801%" height="15" fill="rgb(226,112,37)" fg:x="745" fg:w="1"/><text x="59.9455%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="59.6154%" y="549" width="0.2404%" height="15" fill="rgb(230,201,20)" fg:x="744" fg:w="3"/><text x="59.8654%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.6154%" y="533" width="0.2404%" height="15" fill="rgb(252,95,39)" fg:x="744" fg:w="3"/><text x="59.8654%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.6955%" y="517" width="0.1603%" height="15" fill="rgb(240,150,33)" fg:x="745" fg:w="2"/><text x="59.9455%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.6955%" y="501" width="0.1603%" height="15" fill="rgb(208,202,37)" fg:x="745" fg:w="2"/><text x="59.9455%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.6955%" y="485" width="0.1603%" height="15" fill="rgb(251,37,12)" fg:x="745" fg:w="2"/><text x="59.9455%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.6955%" y="469" width="0.1603%" height="15" fill="rgb(247,150,26)" fg:x="745" fg:w="2"/><text x="59.9455%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.6955%" y="453" width="0.1603%" height="15" fill="rgb(232,28,8)" fg:x="745" fg:w="2"/><text x="59.9455%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.6955%" y="437" width="0.1603%" height="15" fill="rgb(226,121,34)" fg:x="745" fg:w="2"/><text x="59.9455%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.6955%" y="421" width="0.1603%" height="15" fill="rgb(237,23,13)" fg:x="745" fg:w="2"/><text x="59.9455%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.6955%" y="405" width="0.1603%" height="15" fill="rgb(214,42,29)" fg:x="745" fg:w="2"/><text x="59.9455%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.6955%" y="389" width="0.1603%" height="15" fill="rgb(246,204,29)" fg:x="745" fg:w="2"/><text x="59.9455%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.6955%" y="373" width="0.1603%" height="15" fill="rgb(242,28,40)" fg:x="745" fg:w="2"/><text x="59.9455%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="59.7756%" y="357" width="0.0801%" height="15" fill="rgb(243,64,49)" fg:x="746" fg:w="1"/><text x="60.0256%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="59.7756%" y="341" width="0.0801%" height="15" fill="rgb(226,93,13)" fg:x="746" fg:w="1"/><text x="60.0256%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.9359%" y="469" width="0.0801%" height="15" fill="rgb(241,113,26)" fg:x="748" fg:w="1"/><text x="60.1859%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="59.8558%" y="549" width="0.2404%" height="15" fill="rgb(209,209,0)" fg:x="747" fg:w="3"/><text x="60.1058%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="59.8558%" y="533" width="0.2404%" height="15" fill="rgb(251,183,50)" fg:x="747" fg:w="3"/><text x="60.1058%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="59.8558%" y="517" width="0.2404%" height="15" fill="rgb(248,24,43)" fg:x="747" fg:w="3"/><text x="60.1058%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="59.8558%" y="501" width="0.2404%" height="15" fill="rgb(218,102,9)" fg:x="747" fg:w="3"/><text x="60.1058%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="59.8558%" y="485" width="0.2404%" height="15" fill="rgb(249,209,39)" fg:x="747" fg:w="3"/><text x="60.1058%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.0160%" y="469" width="0.0801%" height="15" fill="rgb(210,37,6)" fg:x="749" fg:w="1"/><text x="60.2660%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (8 samples, 0.64%)</title><rect x="59.6154%" y="581" width="0.6410%" height="15" fill="rgb(212,99,4)" fg:x="744" fg:w="8"/><text x="59.8654%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="59.6154%" y="565" width="0.6410%" height="15" fill="rgb(253,59,46)" fg:x="744" fg:w="8"/><text x="59.8654%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.0962%" y="549" width="0.1603%" height="15" fill="rgb(229,96,9)" fg:x="750" fg:w="2"/><text x="60.3462%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.0962%" y="533" width="0.1603%" height="15" fill="rgb(207,103,49)" fg:x="750" fg:w="2"/><text x="60.3462%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.3365%" y="533" width="0.1603%" height="15" fill="rgb(250,226,20)" fg:x="753" fg:w="2"/><text x="60.5865%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4167%" y="517" width="0.0801%" height="15" fill="rgb(238,220,11)" fg:x="754" fg:w="1"/><text x="60.6667%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.4167%" y="501" width="0.0801%" height="15" fill="rgb(236,74,15)" fg:x="754" fg:w="1"/><text x="60.6667%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.4167%" y="485" width="0.0801%" height="15" fill="rgb(218,43,40)" fg:x="754" fg:w="1"/><text x="60.6667%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.4167%" y="469" width="0.0801%" height="15" fill="rgb(245,206,37)" fg:x="754" fg:w="1"/><text x="60.6667%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.4167%" y="453" width="0.0801%" height="15" fill="rgb(206,30,3)" fg:x="754" fg:w="1"/><text x="60.6667%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.4167%" y="437" width="0.0801%" height="15" fill="rgb(211,29,35)" fg:x="754" fg:w="1"/><text x="60.6667%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.4167%" y="421" width="0.0801%" height="15" fill="rgb(218,49,50)" fg:x="754" fg:w="1"/><text x="60.6667%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.4167%" y="405" width="0.0801%" height="15" fill="rgb(211,114,30)" fg:x="754" fg:w="1"/><text x="60.6667%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.4167%" y="389" width="0.0801%" height="15" fill="rgb(238,70,33)" fg:x="754" fg:w="1"/><text x="60.6667%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.4167%" y="373" width="0.0801%" height="15" fill="rgb(238,141,50)" fg:x="754" fg:w="1"/><text x="60.6667%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4167%" y="357" width="0.0801%" height="15" fill="rgb(205,69,6)" fg:x="754" fg:w="1"/><text x="60.6667%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="60.2564%" y="549" width="0.3205%" height="15" fill="rgb(229,65,0)" fg:x="752" fg:w="4"/><text x="60.5064%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4968%" y="533" width="0.0801%" height="15" fill="rgb(211,3,37)" fg:x="755" fg:w="1"/><text x="60.7468%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.4968%" y="517" width="0.0801%" height="15" fill="rgb(223,196,42)" fg:x="755" fg:w="1"/><text x="60.7468%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4968%" y="501" width="0.0801%" height="15" fill="rgb(227,191,15)" fg:x="755" fg:w="1"/><text x="60.7468%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4968%" y="485" width="0.0801%" height="15" fill="rgb(229,210,53)" fg:x="755" fg:w="1"/><text x="60.7468%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.4968%" y="469" width="0.0801%" height="15" fill="rgb(250,203,10)" fg:x="755" fg:w="1"/><text x="60.7468%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.4968%" y="453" width="0.0801%" height="15" fill="rgb(247,8,37)" fg:x="755" fg:w="1"/><text x="60.7468%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.4968%" y="437" width="0.0801%" height="15" fill="rgb(240,52,9)" fg:x="755" fg:w="1"/><text x="60.7468%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.4968%" y="421" width="0.0801%" height="15" fill="rgb(243,100,52)" fg:x="755" fg:w="1"/><text x="60.7468%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.4968%" y="405" width="0.0801%" height="15" fill="rgb(224,149,30)" fg:x="755" fg:w="1"/><text x="60.7468%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.4968%" y="389" width="0.0801%" height="15" fill="rgb(232,27,45)" fg:x="755" fg:w="1"/><text x="60.7468%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.4968%" y="373" width="0.0801%" height="15" fill="rgb(242,161,36)" fg:x="755" fg:w="1"/><text x="60.7468%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.4968%" y="357" width="0.0801%" height="15" fill="rgb(235,223,32)" fg:x="755" fg:w="1"/><text x="60.7468%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.4968%" y="341" width="0.0801%" height="15" fill="rgb(242,78,19)" fg:x="755" fg:w="1"/><text x="60.7468%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4968%" y="325" width="0.0801%" height="15" fill="rgb(233,157,47)" fg:x="755" fg:w="1"/><text x="60.7468%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="60.5769%" y="549" width="0.0801%" height="15" fill="rgb(251,213,5)" fg:x="756" fg:w="1"/><text x="60.8269%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.64%)</title><rect x="60.2564%" y="581" width="0.6410%" height="15" fill="rgb(215,223,5)" fg:x="752" fg:w="8"/><text x="60.5064%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.64%)</title><rect x="60.2564%" y="565" width="0.6410%" height="15" fill="rgb(230,14,7)" fg:x="752" fg:w="8"/><text x="60.5064%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="60.6571%" y="549" width="0.2404%" height="15" fill="rgb(249,179,20)" fg:x="757" fg:w="3"/><text x="60.9071%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="60.7372%" y="533" width="0.1603%" height="15" fill="rgb(230,204,44)" fg:x="758" fg:w="2"/><text x="60.9872%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="60.7372%" y="517" width="0.1603%" height="15" fill="rgb(233,229,46)" fg:x="758" fg:w="2"/><text x="60.9872%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="60.7372%" y="501" width="0.1603%" height="15" fill="rgb(210,154,35)" fg:x="758" fg:w="2"/><text x="60.9872%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="60.7372%" y="485" width="0.1603%" height="15" fill="rgb(220,178,16)" fg:x="758" fg:w="2"/><text x="60.9872%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.7372%" y="469" width="0.1603%" height="15" fill="rgb(243,0,53)" fg:x="758" fg:w="2"/><text x="60.9872%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.7372%" y="453" width="0.1603%" height="15" fill="rgb(223,221,47)" fg:x="758" fg:w="2"/><text x="60.9872%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="60.7372%" y="437" width="0.1603%" height="15" fill="rgb(233,82,15)" fg:x="758" fg:w="2"/><text x="60.9872%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="60.8974%" y="565" width="0.0801%" height="15" fill="rgb(222,8,38)" fg:x="760" fg:w="1"/><text x="61.1474%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="60.8974%" y="549" width="0.0801%" height="15" fill="rgb(241,28,48)" fg:x="760" fg:w="1"/><text x="61.1474%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8974%" y="533" width="0.0801%" height="15" fill="rgb(209,227,15)" fg:x="760" fg:w="1"/><text x="61.1474%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="60.9776%" y="517" width="0.0801%" height="15" fill="rgb(234,189,48)" fg:x="761" fg:w="1"/><text x="61.2276%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.0577%" y="501" width="0.0801%" height="15" fill="rgb(212,27,44)" fg:x="762" fg:w="1"/><text x="61.3077%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.0577%" y="485" width="0.0801%" height="15" fill="rgb(249,55,42)" fg:x="762" fg:w="1"/><text x="61.3077%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.0577%" y="469" width="0.0801%" height="15" fill="rgb(215,211,28)" fg:x="762" fg:w="1"/><text x="61.3077%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0577%" y="453" width="0.0801%" height="15" fill="rgb(221,155,16)" fg:x="762" fg:w="1"/><text x="61.3077%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0577%" y="437" width="0.0801%" height="15" fill="rgb(247,106,30)" fg:x="762" fg:w="1"/><text x="61.3077%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.0577%" y="421" width="0.0801%" height="15" fill="rgb(230,76,31)" fg:x="762" fg:w="1"/><text x="61.3077%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.0577%" y="405" width="0.0801%" height="15" fill="rgb(222,6,48)" fg:x="762" fg:w="1"/><text x="61.3077%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.0577%" y="389" width="0.0801%" height="15" fill="rgb(228,82,3)" fg:x="762" fg:w="1"/><text x="61.3077%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.0577%" y="373" width="0.0801%" height="15" fill="rgb(245,208,52)" fg:x="762" fg:w="1"/><text x="61.3077%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.0577%" y="357" width="0.0801%" height="15" fill="rgb(218,65,17)" fg:x="762" fg:w="1"/><text x="61.3077%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.0577%" y="341" width="0.0801%" height="15" fill="rgb(242,63,26)" fg:x="762" fg:w="1"/><text x="61.3077%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.0577%" y="325" width="0.0801%" height="15" fill="rgb(224,119,39)" fg:x="762" fg:w="1"/><text x="61.3077%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.0577%" y="309" width="0.0801%" height="15" fill="rgb(229,106,3)" fg:x="762" fg:w="1"/><text x="61.3077%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.0577%" y="293" width="0.0801%" height="15" fill="rgb(248,6,33)" fg:x="762" fg:w="1"/><text x="61.3077%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.0577%" y="277" width="0.0801%" height="15" fill="rgb(226,3,49)" fg:x="762" fg:w="1"/><text x="61.3077%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="60.9776%" y="533" width="0.2404%" height="15" fill="rgb(228,142,14)" fg:x="761" fg:w="3"/><text x="61.2276%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="61.0577%" y="517" width="0.1603%" height="15" fill="rgb(241,141,54)" fg:x="762" fg:w="2"/><text x="61.3077%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.1378%" y="501" width="0.0801%" height="15" fill="rgb(252,17,50)" fg:x="763" fg:w="1"/><text x="61.3878%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.1378%" y="485" width="0.0801%" height="15" fill="rgb(221,120,48)" fg:x="763" fg:w="1"/><text x="61.3878%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.1378%" y="469" width="0.0801%" height="15" fill="rgb(229,171,33)" fg:x="763" fg:w="1"/><text x="61.3878%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.1378%" y="453" width="0.0801%" height="15" fill="rgb(236,207,21)" fg:x="763" fg:w="1"/><text x="61.3878%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.1378%" y="437" width="0.0801%" height="15" fill="rgb(218,93,35)" fg:x="763" fg:w="1"/><text x="61.3878%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.1378%" y="421" width="0.0801%" height="15" fill="rgb(207,101,8)" fg:x="763" fg:w="1"/><text x="61.3878%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.2981%" y="501" width="0.0801%" height="15" fill="rgb(237,67,44)" fg:x="765" fg:w="1"/><text x="61.5481%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.2981%" y="485" width="0.0801%" height="15" fill="rgb(236,218,7)" fg:x="765" fg:w="1"/><text x="61.5481%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.2981%" y="469" width="0.0801%" height="15" fill="rgb(252,207,10)" fg:x="765" fg:w="1"/><text x="61.5481%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.2981%" y="453" width="0.0801%" height="15" fill="rgb(221,175,6)" fg:x="765" fg:w="1"/><text x="61.5481%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.2981%" y="437" width="0.0801%" height="15" fill="rgb(230,105,53)" fg:x="765" fg:w="1"/><text x="61.5481%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="60.8974%" y="581" width="0.5609%" height="15" fill="rgb(253,83,6)" fg:x="760" fg:w="7"/><text x="61.1474%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="60.9776%" y="565" width="0.4808%" height="15" fill="rgb(206,198,44)" fg:x="761" fg:w="6"/><text x="61.2276%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="60.9776%" y="549" width="0.4808%" height="15" fill="rgb(206,164,29)" fg:x="761" fg:w="6"/><text x="61.2276%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="61.2179%" y="533" width="0.2404%" height="15" fill="rgb(215,2,50)" fg:x="764" fg:w="3"/><text x="61.4679%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="61.2981%" y="517" width="0.1603%" height="15" fill="rgb(246,127,18)" fg:x="765" fg:w="2"/><text x="61.5481%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.3782%" y="501" width="0.0801%" height="15" fill="rgb(232,6,21)" fg:x="766" fg:w="1"/><text x="61.6282%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.3782%" y="485" width="0.0801%" height="15" fill="rgb(224,154,1)" fg:x="766" fg:w="1"/><text x="61.6282%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.3782%" y="469" width="0.0801%" height="15" fill="rgb(248,135,32)" fg:x="766" fg:w="1"/><text x="61.6282%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.3782%" y="453" width="0.0801%" height="15" fill="rgb(253,129,38)" fg:x="766" fg:w="1"/><text x="61.6282%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4583%" y="565" width="0.0801%" height="15" fill="rgb(214,110,11)" fg:x="767" fg:w="1"/><text x="61.7083%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4583%" y="549" width="0.0801%" height="15" fill="rgb(246,150,22)" fg:x="767" fg:w="1"/><text x="61.7083%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.4583%" y="533" width="0.0801%" height="15" fill="rgb(219,170,39)" fg:x="767" fg:w="1"/><text x="61.7083%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.4583%" y="517" width="0.0801%" height="15" fill="rgb(221,143,52)" fg:x="767" fg:w="1"/><text x="61.7083%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4583%" y="501" width="0.0801%" height="15" fill="rgb(237,122,11)" fg:x="767" fg:w="1"/><text x="61.7083%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4583%" y="485" width="0.0801%" height="15" fill="rgb(217,114,13)" fg:x="767" fg:w="1"/><text x="61.7083%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4583%" y="469" width="0.0801%" height="15" fill="rgb(218,184,28)" fg:x="767" fg:w="1"/><text x="61.7083%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.4583%" y="453" width="0.0801%" height="15" fill="rgb(237,33,22)" fg:x="767" fg:w="1"/><text x="61.7083%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.4583%" y="437" width="0.0801%" height="15" fill="rgb(224,56,42)" fg:x="767" fg:w="1"/><text x="61.7083%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.4583%" y="421" width="0.0801%" height="15" fill="rgb(216,138,53)" fg:x="767" fg:w="1"/><text x="61.7083%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.4583%" y="405" width="0.0801%" height="15" fill="rgb(233,229,40)" fg:x="767" fg:w="1"/><text x="61.7083%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4583%" y="389" width="0.0801%" height="15" fill="rgb(252,105,0)" fg:x="767" fg:w="1"/><text x="61.7083%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="61.5385%" y="565" width="0.1603%" height="15" fill="rgb(212,75,24)" fg:x="768" fg:w="2"/><text x="61.7885%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="61.5385%" y="549" width="0.1603%" height="15" fill="rgb(235,168,50)" fg:x="768" fg:w="2"/><text x="61.7885%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="61.6186%" y="533" width="0.0801%" height="15" fill="rgb(247,204,12)" fg:x="769" fg:w="1"/><text x="61.8686%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6186%" y="517" width="0.0801%" height="15" fill="rgb(250,203,27)" fg:x="769" fg:w="1"/><text x="61.8686%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6186%" y="501" width="0.0801%" height="15" fill="rgb(221,215,2)" fg:x="769" fg:w="1"/><text x="61.8686%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.6186%" y="485" width="0.0801%" height="15" fill="rgb(242,163,47)" fg:x="769" fg:w="1"/><text x="61.8686%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.6186%" y="469" width="0.0801%" height="15" fill="rgb(237,136,50)" fg:x="769" fg:w="1"/><text x="61.8686%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.6186%" y="453" width="0.0801%" height="15" fill="rgb(217,201,47)" fg:x="769" fg:w="1"/><text x="61.8686%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.6186%" y="437" width="0.0801%" height="15" fill="rgb(212,38,47)" fg:x="769" fg:w="1"/><text x="61.8686%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.6186%" y="421" width="0.0801%" height="15" fill="rgb(254,113,41)" fg:x="769" fg:w="1"/><text x="61.8686%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="61.6987%" y="565" width="0.0801%" height="15" fill="rgb(236,7,22)" fg:x="770" fg:w="1"/><text x="61.9487%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="61.7788%" y="565" width="0.0801%" height="15" fill="rgb(235,81,25)" fg:x="771" fg:w="1"/><text x="62.0288%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.7788%" y="549" width="0.0801%" height="15" fill="rgb(216,41,31)" fg:x="771" fg:w="1"/><text x="62.0288%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (6 samples, 0.48%)</title><rect x="61.4583%" y="581" width="0.4808%" height="15" fill="rgb(249,219,15)" fg:x="767" fg:w="6"/><text x="61.7083%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="61.8590%" y="565" width="0.0801%" height="15" fill="rgb(248,201,3)" fg:x="772" fg:w="1"/><text x="62.1090%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="61.8590%" y="549" width="0.0801%" height="15" fill="rgb(249,141,18)" fg:x="772" fg:w="1"/><text x="62.1090%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="61.8590%" y="533" width="0.0801%" height="15" fill="rgb(222,32,39)" fg:x="772" fg:w="1"/><text x="62.1090%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="61.8590%" y="517" width="0.0801%" height="15" fill="rgb(237,139,51)" fg:x="772" fg:w="1"/><text x="62.1090%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="61.8590%" y="501" width="0.0801%" height="15" fill="rgb(218,210,4)" fg:x="772" fg:w="1"/><text x="62.1090%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="61.8590%" y="485" width="0.0801%" height="15" fill="rgb(217,199,13)" fg:x="772" fg:w="1"/><text x="62.1090%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="61.8590%" y="469" width="0.0801%" height="15" fill="rgb(222,118,25)" fg:x="772" fg:w="1"/><text x="62.1090%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.8590%" y="453" width="0.0801%" height="15" fill="rgb(241,70,28)" fg:x="772" fg:w="1"/><text x="62.1090%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.8590%" y="437" width="0.0801%" height="15" fill="rgb(205,51,41)" fg:x="772" fg:w="1"/><text x="62.1090%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.8590%" y="421" width="0.0801%" height="15" fill="rgb(237,165,49)" fg:x="772" fg:w="1"/><text x="62.1090%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.8590%" y="405" width="0.0801%" height="15" fill="rgb(213,10,51)" fg:x="772" fg:w="1"/><text x="62.1090%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.8590%" y="389" width="0.0801%" height="15" fill="rgb(245,89,32)" fg:x="772" fg:w="1"/><text x="62.1090%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.8590%" y="373" width="0.0801%" height="15" fill="rgb(249,81,54)" fg:x="772" fg:w="1"/><text x="62.1090%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8590%" y="357" width="0.0801%" height="15" fill="rgb(223,134,14)" fg:x="772" fg:w="1"/><text x="62.1090%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.9391%" y="501" width="0.0801%" height="15" fill="rgb(233,62,37)" fg:x="773" fg:w="1"/><text x="62.1891%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9391%" y="485" width="0.0801%" height="15" fill="rgb(219,117,42)" fg:x="773" fg:w="1"/><text x="62.1891%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9391%" y="469" width="0.0801%" height="15" fill="rgb(248,40,28)" fg:x="773" fg:w="1"/><text x="62.1891%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9391%" y="453" width="0.0801%" height="15" fill="rgb(246,66,35)" fg:x="773" fg:w="1"/><text x="62.1891%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9391%" y="437" width="0.0801%" height="15" fill="rgb(250,229,22)" fg:x="773" fg:w="1"/><text x="62.1891%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9391%" y="421" width="0.0801%" height="15" fill="rgb(213,89,18)" fg:x="773" fg:w="1"/><text x="62.1891%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9391%" y="405" width="0.0801%" height="15" fill="rgb(213,122,9)" fg:x="773" fg:w="1"/><text x="62.1891%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.9391%" y="389" width="0.0801%" height="15" fill="rgb(220,213,48)" fg:x="773" fg:w="1"/><text x="62.1891%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="61.9391%" y="565" width="0.2404%" height="15" fill="rgb(244,109,54)" fg:x="773" fg:w="3"/><text x="62.1891%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="61.9391%" y="549" width="0.2404%" height="15" fill="rgb(254,104,49)" fg:x="773" fg:w="3"/><text x="62.1891%" y="559.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="61.9391%" y="533" width="0.2404%" height="15" fill="rgb(219,28,32)" fg:x="773" fg:w="3"/><text x="62.1891%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.9391%" y="517" width="0.2404%" height="15" fill="rgb(249,153,33)" fg:x="773" fg:w="3"/><text x="62.1891%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.0192%" y="501" width="0.1603%" height="15" fill="rgb(230,116,21)" fg:x="774" fg:w="2"/><text x="62.2692%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.0192%" y="485" width="0.1603%" height="15" fill="rgb(247,110,3)" fg:x="774" fg:w="2"/><text x="62.2692%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="62.0192%" y="469" width="0.1603%" height="15" fill="rgb(227,128,3)" fg:x="774" fg:w="2"/><text x="62.2692%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="62.0192%" y="453" width="0.1603%" height="15" fill="rgb(208,21,1)" fg:x="774" fg:w="2"/><text x="62.2692%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="62.0192%" y="437" width="0.1603%" height="15" fill="rgb(225,24,20)" fg:x="774" fg:w="2"/><text x="62.2692%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="62.0192%" y="421" width="0.1603%" height="15" fill="rgb(250,159,24)" fg:x="774" fg:w="2"/><text x="62.2692%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="62.0192%" y="405" width="0.1603%" height="15" fill="rgb(214,30,53)" fg:x="774" fg:w="2"/><text x="62.2692%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1795%" y="549" width="0.1603%" height="15" fill="rgb(243,198,11)" fg:x="776" fg:w="2"/><text x="62.4295%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1795%" y="533" width="0.1603%" height="15" fill="rgb(232,33,1)" fg:x="776" fg:w="2"/><text x="62.4295%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.2596%" y="517" width="0.0801%" height="15" fill="rgb(242,60,11)" fg:x="777" fg:w="1"/><text x="62.5096%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.2596%" y="501" width="0.0801%" height="15" fill="rgb(241,229,34)" fg:x="777" fg:w="1"/><text x="62.5096%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.2596%" y="485" width="0.0801%" height="15" fill="rgb(230,92,51)" fg:x="777" fg:w="1"/><text x="62.5096%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.2596%" y="469" width="0.0801%" height="15" fill="rgb(212,209,8)" fg:x="777" fg:w="1"/><text x="62.5096%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.2596%" y="453" width="0.0801%" height="15" fill="rgb(241,55,35)" fg:x="777" fg:w="1"/><text x="62.5096%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.2596%" y="437" width="0.0801%" height="15" fill="rgb(208,187,52)" fg:x="777" fg:w="1"/><text x="62.5096%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.2596%" y="421" width="0.0801%" height="15" fill="rgb(251,110,17)" fg:x="777" fg:w="1"/><text x="62.5096%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.2596%" y="405" width="0.0801%" height="15" fill="rgb(246,225,54)" fg:x="777" fg:w="1"/><text x="62.5096%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.2596%" y="389" width="0.0801%" height="15" fill="rgb(220,109,6)" fg:x="777" fg:w="1"/><text x="62.5096%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.2596%" y="373" width="0.0801%" height="15" fill="rgb(228,56,50)" fg:x="777" fg:w="1"/><text x="62.5096%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.2596%" y="357" width="0.0801%" height="15" fill="rgb(230,34,30)" fg:x="777" fg:w="1"/><text x="62.5096%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2596%" y="341" width="0.0801%" height="15" fill="rgb(205,28,42)" fg:x="777" fg:w="1"/><text x="62.5096%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.3397%" y="501" width="0.1603%" height="15" fill="rgb(215,68,0)" fg:x="778" fg:w="2"/><text x="62.5897%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="62.3397%" y="549" width="0.2404%" height="15" fill="rgb(206,91,47)" fg:x="778" fg:w="3"/><text x="62.5897%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="62.3397%" y="533" width="0.2404%" height="15" fill="rgb(241,159,43)" fg:x="778" fg:w="3"/><text x="62.5897%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="62.3397%" y="517" width="0.2404%" height="15" fill="rgb(232,191,38)" fg:x="778" fg:w="3"/><text x="62.5897%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.5000%" y="501" width="0.0801%" height="15" fill="rgb(212,180,41)" fg:x="780" fg:w="1"/><text x="62.7500%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.5801%" y="517" width="0.0801%" height="15" fill="rgb(236,134,49)" fg:x="781" fg:w="1"/><text x="62.8301%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.5801%" y="501" width="0.0801%" height="15" fill="rgb(221,83,26)" fg:x="781" fg:w="1"/><text x="62.8301%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.5801%" y="485" width="0.0801%" height="15" fill="rgb(215,87,39)" fg:x="781" fg:w="1"/><text x="62.8301%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.6603%" y="485" width="0.0801%" height="15" fill="rgb(242,28,29)" fg:x="782" fg:w="1"/><text x="62.9103%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (97 samples, 7.77%)</title><rect x="55.1282%" y="613" width="7.7724%" height="15" fill="rgb(212,219,47)" fg:x="688" fg:w="97"/><text x="55.3782%" y="623.50">&lt;plugins_co..</text></g><g><title>plugins_core::location::change_location (50 samples, 4.01%)</title><rect x="58.8942%" y="597" width="4.0064%" height="15" fill="rgb(221,35,20)" fg:x="735" fg:w="50"/><text x="59.1442%" y="607.50">plug..</text></g><g><title>plugins_core::location::Location::set (12 samples, 0.96%)</title><rect x="61.9391%" y="581" width="0.9615%" height="15" fill="rgb(234,144,13)" fg:x="773" fg:w="12"/><text x="62.1891%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (9 samples, 0.72%)</title><rect x="62.1795%" y="565" width="0.7212%" height="15" fill="rgb(237,41,27)" fg:x="776" fg:w="9"/><text x="62.4295%" y="575.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (4 samples, 0.32%)</title><rect x="62.5801%" y="549" width="0.3205%" height="15" fill="rgb(253,175,5)" fg:x="781" fg:w="4"/><text x="62.8301%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="62.5801%" y="533" width="0.3205%" height="15" fill="rgb(235,210,51)" fg:x="781" fg:w="4"/><text x="62.8301%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="62.6603%" y="517" width="0.2404%" height="15" fill="rgb(241,180,35)" fg:x="782" fg:w="3"/><text x="62.9103%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="62.6603%" y="501" width="0.2404%" height="15" fill="rgb(219,45,16)" fg:x="782" fg:w="3"/><text x="62.9103%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.7404%" y="485" width="0.1603%" height="15" fill="rgb(247,212,4)" fg:x="783" fg:w="2"/><text x="62.9904%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.8205%" y="469" width="0.0801%" height="15" fill="rgb(224,211,1)" fg:x="784" fg:w="1"/><text x="63.0705%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="62.8205%" y="453" width="0.0801%" height="15" fill="rgb(210,193,36)" fg:x="784" fg:w="1"/><text x="63.0705%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (246 samples, 19.71%)</title><rect x="43.3494%" y="789" width="19.7115%" height="15" fill="rgb(215,121,20)" fg:x="541" fg:w="246"/><text x="43.5994%" y="799.50">&lt;engine::session::Session as ke..</text></g><g><title>kernel::plugins::mw::apply_middleware (245 samples, 19.63%)</title><rect x="43.4295%" y="773" width="19.6314%" height="15" fill="rgb(238,146,2)" fg:x="542" fg:w="245"/><text x="43.6795%" y="783.50">kernel::plugins::mw::apply_midd..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (245 samples, 19.63%)</title><rect x="43.4295%" y="757" width="19.6314%" height="15" fill="rgb(254,123,45)" fg:x="542" fg:w="245"/><text x="43.6795%" y="767.50">kernel::plugins::mw::Middleware..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (245 samples, 19.63%)</title><rect x="43.4295%" y="741" width="19.6314%" height="15" fill="rgb(225,126,11)" fg:x="542" fg:w="245"/><text x="43.6795%" y="751.50">&lt;engine::session::ExpandSurroun..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (224 samples, 17.95%)</title><rect x="45.1122%" y="725" width="17.9487%" height="15" fill="rgb(239,12,5)" fg:x="563" fg:w="224"/><text x="45.3622%" y="735.50">kernel::plugins::mw::Middlew..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (224 samples, 17.95%)</title><rect x="45.1122%" y="709" width="17.9487%" height="15" fill="rgb(241,207,14)" fg:x="563" fg:w="224"/><text x="45.3622%" y="719.50">&lt;plugins_dynlib::DynamicMidd..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (224 samples, 17.95%)</title><rect x="45.1122%" y="693" width="17.9487%" height="15" fill="rgb(227,134,33)" fg:x="563" fg:w="224"/><text x="45.3622%" y="703.50">kernel::plugins::mw::Middlew..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (224 samples, 17.95%)</title><rect x="45.1122%" y="677" width="17.9487%" height="15" fill="rgb(221,40,52)" fg:x="563" fg:w="224"/><text x="45.3622%" y="687.50">core::ops::function::FnOnce:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (224 samples, 17.95%)</title><rect x="45.1122%" y="661" width="17.9487%" height="15" fill="rgb(206,93,8)" fg:x="563" fg:w="224"/><text x="45.3622%" y="671.50">kernel::plugins::mw::Middlew..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (224 samples, 17.95%)</title><rect x="45.1122%" y="645" width="17.9487%" height="15" fill="rgb(242,160,22)" fg:x="563" fg:w="224"/><text x="45.3622%" y="655.50">core::ops::function::FnOnce:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (224 samples, 17.95%)</title><rect x="45.1122%" y="629" width="17.9487%" height="15" fill="rgb(232,204,40)" fg:x="563" fg:w="224"/><text x="45.3622%" y="639.50">&lt;engine::session::state::Sta..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.9006%" y="613" width="0.1603%" height="15" fill="rgb(247,210,47)" fg:x="785" fg:w="2"/><text x="63.1506%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.2212%" y="677" width="0.1603%" height="15" fill="rgb(211,91,7)" fg:x="789" fg:w="2"/><text x="63.4712%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.2212%" y="661" width="0.1603%" height="15" fill="rgb(252,160,34)" fg:x="789" fg:w="2"/><text x="63.4712%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="63.1410%" y="741" width="0.3205%" height="15" fill="rgb(220,34,39)" fg:x="788" fg:w="4"/><text x="63.3910%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="63.1410%" y="725" width="0.3205%" height="15" fill="rgb(247,49,38)" fg:x="788" fg:w="4"/><text x="63.3910%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="63.2212%" y="709" width="0.2404%" height="15" fill="rgb(228,175,44)" fg:x="789" fg:w="3"/><text x="63.4712%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="63.2212%" y="693" width="0.2404%" height="15" fill="rgb(218,214,32)" fg:x="789" fg:w="3"/><text x="63.4712%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.3814%" y="677" width="0.0801%" height="15" fill="rgb(213,50,12)" fg:x="791" fg:w="1"/><text x="63.6314%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.3814%" y="661" width="0.0801%" height="15" fill="rgb(219,35,41)" fg:x="791" fg:w="1"/><text x="63.6314%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.3814%" y="645" width="0.0801%" height="15" fill="rgb(219,18,38)" fg:x="791" fg:w="1"/><text x="63.6314%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.3814%" y="629" width="0.0801%" height="15" fill="rgb(223,217,6)" fg:x="791" fg:w="1"/><text x="63.6314%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.5417%" y="661" width="0.0801%" height="15" fill="rgb(208,193,35)" fg:x="793" fg:w="1"/><text x="63.7917%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="63.4615%" y="677" width="0.3205%" height="15" fill="rgb(254,212,54)" fg:x="792" fg:w="4"/><text x="63.7115%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.6218%" y="661" width="0.1603%" height="15" fill="rgb(205,10,2)" fg:x="794" fg:w="2"/><text x="63.8718%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.7821%" y="645" width="0.0801%" height="15" fill="rgb(230,133,29)" fg:x="796" fg:w="1"/><text x="64.0321%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.8622%" y="645" width="0.0801%" height="15" fill="rgb(226,14,15)" fg:x="797" fg:w="1"/><text x="64.1122%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.8622%" y="629" width="0.0801%" height="15" fill="rgb(226,140,54)" fg:x="797" fg:w="1"/><text x="64.1122%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.8622%" y="613" width="0.0801%" height="15" fill="rgb(250,47,41)" fg:x="797" fg:w="1"/><text x="64.1122%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.0224%" y="581" width="0.0801%" height="15" fill="rgb(227,218,41)" fg:x="799" fg:w="1"/><text x="64.2724%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.0224%" y="565" width="0.0801%" height="15" fill="rgb(254,183,7)" fg:x="799" fg:w="1"/><text x="64.2724%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.0224%" y="597" width="0.1603%" height="15" fill="rgb(206,84,53)" fg:x="799" fg:w="2"/><text x="64.2724%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.1026%" y="581" width="0.0801%" height="15" fill="rgb(213,177,2)" fg:x="800" fg:w="1"/><text x="64.3526%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.1026%" y="565" width="0.0801%" height="15" fill="rgb(234,28,29)" fg:x="800" fg:w="1"/><text x="64.3526%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1026%" y="549" width="0.0801%" height="15" fill="rgb(248,211,38)" fg:x="800" fg:w="1"/><text x="64.3526%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1026%" y="533" width="0.0801%" height="15" fill="rgb(246,30,0)" fg:x="800" fg:w="1"/><text x="64.3526%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1026%" y="517" width="0.0801%" height="15" fill="rgb(244,115,24)" fg:x="800" fg:w="1"/><text x="64.3526%" y="527.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="63.4615%" y="725" width="0.8814%" height="15" fill="rgb(226,193,14)" fg:x="792" fg:w="11"/><text x="63.7115%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="63.4615%" y="709" width="0.8814%" height="15" fill="rgb(211,196,48)" fg:x="792" fg:w="11"/><text x="63.7115%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="63.4615%" y="693" width="0.8814%" height="15" fill="rgb(235,32,20)" fg:x="792" fg:w="11"/><text x="63.7115%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="63.7821%" y="677" width="0.5609%" height="15" fill="rgb(251,151,49)" fg:x="796" fg:w="7"/><text x="64.0321%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="63.7821%" y="661" width="0.5609%" height="15" fill="rgb(254,141,38)" fg:x="796" fg:w="7"/><text x="64.0321%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="63.9423%" y="645" width="0.4006%" height="15" fill="rgb(209,118,44)" fg:x="798" fg:w="5"/><text x="64.1923%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="63.9423%" y="629" width="0.4006%" height="15" fill="rgb(205,81,4)" fg:x="798" fg:w="5"/><text x="64.1923%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="63.9423%" y="613" width="0.4006%" height="15" fill="rgb(241,25,6)" fg:x="798" fg:w="5"/><text x="64.1923%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.1827%" y="597" width="0.1603%" height="15" fill="rgb(212,179,29)" fg:x="801" fg:w="2"/><text x="64.4327%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.2628%" y="581" width="0.0801%" height="15" fill="rgb(241,40,32)" fg:x="802" fg:w="1"/><text x="64.5128%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.2628%" y="565" width="0.0801%" height="15" fill="rgb(223,35,2)" fg:x="802" fg:w="1"/><text x="64.5128%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5032%" y="661" width="0.0801%" height="15" fill="rgb(221,125,54)" fg:x="805" fg:w="1"/><text x="64.7532%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.5032%" y="645" width="0.0801%" height="15" fill="rgb(230,5,49)" fg:x="805" fg:w="1"/><text x="64.7532%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.5032%" y="629" width="0.0801%" height="15" fill="rgb(221,157,7)" fg:x="805" fg:w="1"/><text x="64.7532%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.5833%" y="565" width="0.0801%" height="15" fill="rgb(242,163,10)" fg:x="806" fg:w="1"/><text x="64.8333%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5833%" y="549" width="0.0801%" height="15" fill="rgb(232,30,2)" fg:x="806" fg:w="1"/><text x="64.8333%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.5833%" y="613" width="0.1603%" height="15" fill="rgb(245,102,40)" fg:x="806" fg:w="2"/><text x="64.8333%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.5833%" y="597" width="0.1603%" height="15" fill="rgb(242,10,41)" fg:x="806" fg:w="2"/><text x="64.8333%" y="607.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="64.5833%" y="581" width="0.1603%" height="15" fill="rgb(236,184,36)" fg:x="806" fg:w="2"/><text x="64.8333%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="64.6635%" y="565" width="0.0801%" height="15" fill="rgb(247,147,48)" fg:x="807" fg:w="1"/><text x="64.9135%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.7436%" y="613" width="0.0801%" height="15" fill="rgb(226,166,2)" fg:x="808" fg:w="1"/><text x="64.9936%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.7436%" y="597" width="0.0801%" height="15" fill="rgb(251,196,7)" fg:x="808" fg:w="1"/><text x="64.9936%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="64.7436%" y="581" width="0.0801%" height="15" fill="rgb(241,40,13)" fg:x="808" fg:w="1"/><text x="64.9936%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.7436%" y="565" width="0.0801%" height="15" fill="rgb(254,4,12)" fg:x="808" fg:w="1"/><text x="64.9936%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7436%" y="549" width="0.0801%" height="15" fill="rgb(244,139,49)" fg:x="808" fg:w="1"/><text x="64.9936%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="64.5833%" y="645" width="0.3205%" height="15" fill="rgb(227,28,42)" fg:x="806" fg:w="4"/><text x="64.8333%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="64.5833%" y="629" width="0.3205%" height="15" fill="rgb(231,135,32)" fg:x="806" fg:w="4"/><text x="64.8333%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8237%" y="613" width="0.0801%" height="15" fill="rgb(244,182,3)" fg:x="809" fg:w="1"/><text x="65.0737%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8237%" y="597" width="0.0801%" height="15" fill="rgb(247,46,19)" fg:x="809" fg:w="1"/><text x="65.0737%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.9038%" y="629" width="0.0801%" height="15" fill="rgb(251,179,10)" fg:x="810" fg:w="1"/><text x="65.1538%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="64.5032%" y="693" width="0.5609%" height="15" fill="rgb(229,222,18)" fg:x="805" fg:w="7"/><text x="64.7532%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="64.5032%" y="677" width="0.5609%" height="15" fill="rgb(251,107,20)" fg:x="805" fg:w="7"/><text x="64.7532%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="64.5833%" y="661" width="0.4808%" height="15" fill="rgb(233,193,19)" fg:x="806" fg:w="6"/><text x="64.8333%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.9038%" y="645" width="0.1603%" height="15" fill="rgb(229,146,53)" fg:x="810" fg:w="2"/><text x="65.1538%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.9840%" y="629" width="0.0801%" height="15" fill="rgb(244,52,11)" fg:x="811" fg:w="1"/><text x="65.2340%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9840%" y="613" width="0.0801%" height="15" fill="rgb(245,211,46)" fg:x="811" fg:w="1"/><text x="65.2340%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (21 samples, 1.68%)</title><rect x="63.4615%" y="741" width="1.6827%" height="15" fill="rgb(213,8,31)" fg:x="792" fg:w="21"/><text x="63.7115%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="64.3429%" y="725" width="0.8013%" height="15" fill="rgb(205,101,39)" fg:x="803" fg:w="10"/><text x="64.5929%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="64.3429%" y="709" width="0.8013%" height="15" fill="rgb(212,157,1)" fg:x="803" fg:w="10"/><text x="64.5929%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.0641%" y="693" width="0.0801%" height="15" fill="rgb(232,30,46)" fg:x="812" fg:w="1"/><text x="65.3141%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.0641%" y="677" width="0.0801%" height="15" fill="rgb(216,201,6)" fg:x="812" fg:w="1"/><text x="65.3141%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.1442%" y="709" width="0.0801%" height="15" fill="rgb(209,18,6)" fg:x="813" fg:w="1"/><text x="65.3942%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="65.1442%" y="741" width="0.2404%" height="15" fill="rgb(219,138,3)" fg:x="813" fg:w="3"/><text x="65.3942%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="65.1442%" y="725" width="0.2404%" height="15" fill="rgb(210,91,46)" fg:x="813" fg:w="3"/><text x="65.3942%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.2244%" y="709" width="0.1603%" height="15" fill="rgb(241,80,44)" fg:x="814" fg:w="2"/><text x="65.4744%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.2244%" y="693" width="0.1603%" height="15" fill="rgb(236,205,36)" fg:x="814" fg:w="2"/><text x="65.4744%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="65.2244%" y="677" width="0.1603%" height="15" fill="rgb(205,59,37)" fg:x="814" fg:w="2"/><text x="65.4744%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.2244%" y="661" width="0.1603%" height="15" fill="rgb(239,166,39)" fg:x="814" fg:w="2"/><text x="65.4744%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="65.2244%" y="645" width="0.1603%" height="15" fill="rgb(239,146,40)" fg:x="814" fg:w="2"/><text x="65.4744%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (31 samples, 2.48%)</title><rect x="63.1410%" y="757" width="2.4840%" height="15" fill="rgb(231,11,52)" fg:x="788" fg:w="31"/><text x="63.3910%" y="767.50">en..</text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="65.3846%" y="741" width="0.2404%" height="15" fill="rgb(253,21,37)" fg:x="816" fg:w="3"/><text x="65.6346%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.4647%" y="725" width="0.1603%" height="15" fill="rgb(224,87,39)" fg:x="817" fg:w="2"/><text x="65.7147%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (33 samples, 2.64%)</title><rect x="63.0609%" y="773" width="2.6442%" height="15" fill="rgb(249,15,46)" fg:x="787" fg:w="33"/><text x="63.3109%" y="783.50">&lt;e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="65.6250%" y="757" width="0.0801%" height="15" fill="rgb(250,37,51)" fg:x="819" fg:w="1"/><text x="65.8750%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.6250%" y="741" width="0.0801%" height="15" fill="rgb(205,185,43)" fg:x="819" fg:w="1"/><text x="65.8750%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.6250%" y="725" width="0.0801%" height="15" fill="rgb(206,65,41)" fg:x="819" fg:w="1"/><text x="65.8750%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.6250%" y="709" width="0.0801%" height="15" fill="rgb(236,159,32)" fg:x="819" fg:w="1"/><text x="65.8750%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.6250%" y="693" width="0.0801%" height="15" fill="rgb(228,199,27)" fg:x="819" fg:w="1"/><text x="65.8750%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.6250%" y="677" width="0.0801%" height="15" fill="rgb(212,0,37)" fg:x="819" fg:w="1"/><text x="65.8750%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.6250%" y="661" width="0.0801%" height="15" fill="rgb(248,50,11)" fg:x="819" fg:w="1"/><text x="65.8750%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.6250%" y="645" width="0.0801%" height="15" fill="rgb(231,164,25)" fg:x="819" fg:w="1"/><text x="65.8750%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.6250%" y="629" width="0.0801%" height="15" fill="rgb(238,38,39)" fg:x="819" fg:w="1"/><text x="65.8750%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.6250%" y="613" width="0.0801%" height="15" fill="rgb(210,15,50)" fg:x="819" fg:w="1"/><text x="65.8750%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.6250%" y="597" width="0.0801%" height="15" fill="rgb(251,126,36)" fg:x="819" fg:w="1"/><text x="65.8750%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.6250%" y="581" width="0.0801%" height="15" fill="rgb(243,59,26)" fg:x="819" fg:w="1"/><text x="65.8750%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.6250%" y="565" width="0.0801%" height="15" fill="rgb(215,24,30)" fg:x="819" fg:w="1"/><text x="65.8750%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6250%" y="549" width="0.0801%" height="15" fill="rgb(253,50,51)" fg:x="819" fg:w="1"/><text x="65.8750%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7051%" y="757" width="0.0801%" height="15" fill="rgb(252,2,16)" fg:x="820" fg:w="1"/><text x="65.9551%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7051%" y="741" width="0.0801%" height="15" fill="rgb(209,123,36)" fg:x="820" fg:w="1"/><text x="65.9551%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.7051%" y="725" width="0.0801%" height="15" fill="rgb(245,60,15)" fg:x="820" fg:w="1"/><text x="65.9551%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.7051%" y="709" width="0.0801%" height="15" fill="rgb(246,4,13)" fg:x="820" fg:w="1"/><text x="65.9551%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.7051%" y="693" width="0.0801%" height="15" fill="rgb(210,223,46)" fg:x="820" fg:w="1"/><text x="65.9551%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7051%" y="677" width="0.0801%" height="15" fill="rgb(248,1,9)" fg:x="820" fg:w="1"/><text x="65.9551%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7051%" y="661" width="0.0801%" height="15" fill="rgb(254,2,34)" fg:x="820" fg:w="1"/><text x="65.9551%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.7051%" y="645" width="0.0801%" height="15" fill="rgb(239,176,1)" fg:x="820" fg:w="1"/><text x="65.9551%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.7051%" y="629" width="0.0801%" height="15" fill="rgb(250,25,32)" fg:x="820" fg:w="1"/><text x="65.9551%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.7051%" y="613" width="0.0801%" height="15" fill="rgb(225,28,39)" fg:x="820" fg:w="1"/><text x="65.9551%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.7051%" y="597" width="0.0801%" height="15" fill="rgb(230,166,37)" fg:x="820" fg:w="1"/><text x="65.9551%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7051%" y="581" width="0.0801%" height="15" fill="rgb(246,220,4)" fg:x="820" fg:w="1"/><text x="65.9551%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7853%" y="613" width="0.0801%" height="15" fill="rgb(219,119,33)" fg:x="821" fg:w="1"/><text x="66.0353%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (37 samples, 2.96%)</title><rect x="63.0609%" y="789" width="2.9647%" height="15" fill="rgb(221,207,38)" fg:x="787" fg:w="37"/><text x="63.3109%" y="799.50">&lt;en..</text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="65.7051%" y="773" width="0.3205%" height="15" fill="rgb(214,153,5)" fg:x="820" fg:w="4"/><text x="65.9551%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="65.7853%" y="757" width="0.2404%" height="15" fill="rgb(223,50,16)" fg:x="821" fg:w="3"/><text x="66.0353%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="65.7853%" y="741" width="0.2404%" height="15" fill="rgb(209,207,12)" fg:x="821" fg:w="3"/><text x="66.0353%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="65.7853%" y="725" width="0.2404%" height="15" fill="rgb(207,3,46)" fg:x="821" fg:w="3"/><text x="66.0353%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="65.7853%" y="709" width="0.2404%" height="15" fill="rgb(232,45,53)" fg:x="821" fg:w="3"/><text x="66.0353%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="65.7853%" y="693" width="0.2404%" height="15" fill="rgb(206,140,15)" fg:x="821" fg:w="3"/><text x="66.0353%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="65.7853%" y="677" width="0.2404%" height="15" fill="rgb(245,66,17)" fg:x="821" fg:w="3"/><text x="66.0353%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="65.7853%" y="661" width="0.2404%" height="15" fill="rgb(221,25,37)" fg:x="821" fg:w="3"/><text x="66.0353%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="65.7853%" y="645" width="0.2404%" height="15" fill="rgb(215,99,47)" fg:x="821" fg:w="3"/><text x="66.0353%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="65.7853%" y="629" width="0.2404%" height="15" fill="rgb(219,154,44)" fg:x="821" fg:w="3"/><text x="66.0353%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="65.8654%" y="613" width="0.1603%" height="15" fill="rgb(210,197,36)" fg:x="822" fg:w="2"/><text x="66.1154%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="65.8654%" y="597" width="0.1603%" height="15" fill="rgb(217,137,10)" fg:x="822" fg:w="2"/><text x="66.1154%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="65.8654%" y="581" width="0.1603%" height="15" fill="rgb(240,216,26)" fg:x="822" fg:w="2"/><text x="66.1154%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.9455%" y="565" width="0.0801%" height="15" fill="rgb(242,76,17)" fg:x="823" fg:w="1"/><text x="66.1955%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.9455%" y="549" width="0.0801%" height="15" fill="rgb(243,142,51)" fg:x="823" fg:w="1"/><text x="66.1955%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="65.9455%" y="533" width="0.0801%" height="15" fill="rgb(233,109,46)" fg:x="823" fg:w="1"/><text x="66.1955%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="65.9455%" y="517" width="0.0801%" height="15" fill="rgb(252,45,32)" fg:x="823" fg:w="1"/><text x="66.1955%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="65.9455%" y="501" width="0.0801%" height="15" fill="rgb(210,69,52)" fg:x="823" fg:w="1"/><text x="66.1955%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="65.9455%" y="485" width="0.0801%" height="15" fill="rgb(242,30,2)" fg:x="823" fg:w="1"/><text x="66.1955%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.9455%" y="469" width="0.0801%" height="15" fill="rgb(246,137,1)" fg:x="823" fg:w="1"/><text x="66.1955%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.9455%" y="453" width="0.0801%" height="15" fill="rgb(221,205,25)" fg:x="823" fg:w="1"/><text x="66.1955%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="65.9455%" y="437" width="0.0801%" height="15" fill="rgb(224,44,43)" fg:x="823" fg:w="1"/><text x="66.1955%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="65.9455%" y="421" width="0.0801%" height="15" fill="rgb(209,81,13)" fg:x="823" fg:w="1"/><text x="66.1955%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="65.9455%" y="405" width="0.0801%" height="15" fill="rgb(227,88,4)" fg:x="823" fg:w="1"/><text x="66.1955%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="65.9455%" y="389" width="0.0801%" height="15" fill="rgb(228,118,49)" fg:x="823" fg:w="1"/><text x="66.1955%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="65.9455%" y="373" width="0.0801%" height="15" fill="rgb(225,215,27)" fg:x="823" fg:w="1"/><text x="66.1955%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="65.9455%" y="357" width="0.0801%" height="15" fill="rgb(235,226,1)" fg:x="823" fg:w="1"/><text x="66.1955%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="65.9455%" y="341" width="0.0801%" height="15" fill="rgb(205,107,17)" fg:x="823" fg:w="1"/><text x="66.1955%" y="351.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="66.0256%" y="789" width="0.0801%" height="15" fill="rgb(247,85,8)" fg:x="824" fg:w="1"/><text x="66.2756%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="66.0256%" y="773" width="0.0801%" height="15" fill="rgb(230,220,20)" fg:x="824" fg:w="1"/><text x="66.2756%" y="783.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.3462%" y="741" width="0.1603%" height="15" fill="rgb(237,22,6)" fg:x="828" fg:w="2"/><text x="66.5962%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.3462%" y="725" width="0.1603%" height="15" fill="rgb(253,39,1)" fg:x="828" fg:w="2"/><text x="66.5962%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.3462%" y="709" width="0.1603%" height="15" fill="rgb(251,206,50)" fg:x="828" fg:w="2"/><text x="66.5962%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4263%" y="693" width="0.0801%" height="15" fill="rgb(239,162,11)" fg:x="829" fg:w="1"/><text x="66.6763%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4263%" y="677" width="0.0801%" height="15" fill="rgb(234,164,6)" fg:x="829" fg:w="1"/><text x="66.6763%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.4263%" y="661" width="0.0801%" height="15" fill="rgb(238,112,10)" fg:x="829" fg:w="1"/><text x="66.6763%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.4263%" y="645" width="0.0801%" height="15" fill="rgb(232,78,29)" fg:x="829" fg:w="1"/><text x="66.6763%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.4263%" y="629" width="0.0801%" height="15" fill="rgb(232,20,13)" fg:x="829" fg:w="1"/><text x="66.6763%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4263%" y="613" width="0.0801%" height="15" fill="rgb(222,175,9)" fg:x="829" fg:w="1"/><text x="66.6763%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4263%" y="597" width="0.0801%" height="15" fill="rgb(233,61,14)" fg:x="829" fg:w="1"/><text x="66.6763%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.4263%" y="581" width="0.0801%" height="15" fill="rgb(224,152,29)" fg:x="829" fg:w="1"/><text x="66.6763%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.4263%" y="565" width="0.0801%" height="15" fill="rgb(232,26,6)" fg:x="829" fg:w="1"/><text x="66.6763%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.4263%" y="549" width="0.0801%" height="15" fill="rgb(210,116,11)" fg:x="829" fg:w="1"/><text x="66.6763%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.4263%" y="533" width="0.0801%" height="15" fill="rgb(238,213,15)" fg:x="829" fg:w="1"/><text x="66.6763%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4263%" y="517" width="0.0801%" height="15" fill="rgb(236,177,32)" fg:x="829" fg:w="1"/><text x="66.6763%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.5064%" y="709" width="0.0801%" height="15" fill="rgb(230,36,43)" fg:x="830" fg:w="1"/><text x="66.7564%" y="719.50"></text></g><g><title>engine::users::model::username_to_key (8 samples, 0.64%)</title><rect x="66.1058%" y="789" width="0.6410%" height="15" fill="rgb(212,76,23)" fg:x="825" fg:w="8"/><text x="66.3558%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="66.2660%" y="773" width="0.4808%" height="15" fill="rgb(225,168,24)" fg:x="827" fg:w="6"/><text x="66.5160%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="66.2660%" y="757" width="0.4808%" height="15" fill="rgb(206,40,44)" fg:x="827" fg:w="6"/><text x="66.5160%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.5064%" y="741" width="0.2404%" height="15" fill="rgb(251,213,6)" fg:x="830" fg:w="3"/><text x="66.7564%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.5064%" y="725" width="0.2404%" height="15" fill="rgb(220,7,47)" fg:x="830" fg:w="3"/><text x="66.7564%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="66.5865%" y="709" width="0.1603%" height="15" fill="rgb(254,130,53)" fg:x="831" fg:w="2"/><text x="66.8365%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.5865%" y="693" width="0.1603%" height="15" fill="rgb(240,2,46)" fg:x="831" fg:w="2"/><text x="66.8365%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.6667%" y="677" width="0.0801%" height="15" fill="rgb(252,144,40)" fg:x="832" fg:w="1"/><text x="66.9167%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.6667%" y="661" width="0.0801%" height="15" fill="rgb(226,23,10)" fg:x="832" fg:w="1"/><text x="66.9167%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (835 samples, 66.91%)</title><rect x="0.0000%" y="869" width="66.9071%" height="15" fill="rgb(212,204,35)" fg:x="0" fg:w="835"/><text x="0.2500%" y="879.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (835 samples, 66.91%)</title><rect x="0.0000%" y="853" width="66.9071%" height="15" fill="rgb(218,201,15)" fg:x="0" fg:w="835"/><text x="0.2500%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (835 samples, 66.91%)</title><rect x="0.0000%" y="837" width="66.9071%" height="15" fill="rgb(224,197,5)" fg:x="0" fg:w="835"/><text x="0.2500%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (295 samples, 23.64%)</title><rect x="43.2692%" y="821" width="23.6378%" height="15" fill="rgb(224,185,18)" fg:x="540" fg:w="295"/><text x="43.5192%" y="831.50">engine::session::Session::evaluate_and..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (295 samples, 23.64%)</title><rect x="43.2692%" y="805" width="23.6378%" height="15" fill="rgb(251,71,45)" fg:x="540" fg:w="295"/><text x="43.5192%" y="815.50">engine::session::Session::evaluate_and..</text></g><g><title>kernel::model::base::EntityKey::new (2 samples, 0.16%)</title><rect x="66.7468%" y="789" width="0.1603%" height="15" fill="rgb(216,74,24)" fg:x="833" fg:w="2"/><text x="66.9968%" y="799.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.7468%" y="773" width="0.1603%" height="15" fill="rgb(250,36,51)" fg:x="833" fg:w="2"/><text x="66.9968%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="66.9872%" y="805" width="0.0801%" height="15" fill="rgb(209,224,28)" fg:x="836" fg:w="1"/><text x="67.2372%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.9872%" y="789" width="0.0801%" height="15" fill="rgb(228,5,10)" fg:x="836" fg:w="1"/><text x="67.2372%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2276%" y="709" width="0.0801%" height="15" fill="rgb(250,57,40)" fg:x="839" fg:w="1"/><text x="67.4776%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.3077%" y="709" width="0.0801%" height="15" fill="rgb(228,194,41)" fg:x="840" fg:w="1"/><text x="67.5577%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3077%" y="693" width="0.0801%" height="15" fill="rgb(206,68,23)" fg:x="840" fg:w="1"/><text x="67.5577%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="67.2276%" y="725" width="0.2404%" height="15" fill="rgb(230,33,29)" fg:x="839" fg:w="3"/><text x="67.4776%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.3878%" y="709" width="0.0801%" height="15" fill="rgb(210,39,32)" fg:x="841" fg:w="1"/><text x="67.6378%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.3878%" y="693" width="0.0801%" height="15" fill="rgb(236,89,23)" fg:x="841" fg:w="1"/><text x="67.6378%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3878%" y="677" width="0.0801%" height="15" fill="rgb(218,52,52)" fg:x="841" fg:w="1"/><text x="67.6378%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="67.1474%" y="757" width="0.4006%" height="15" fill="rgb(235,154,5)" fg:x="838" fg:w="5"/><text x="67.3974%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="67.1474%" y="741" width="0.4006%" height="15" fill="rgb(223,168,9)" fg:x="838" fg:w="5"/><text x="67.3974%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4679%" y="725" width="0.0801%" height="15" fill="rgb(220,8,33)" fg:x="842" fg:w="1"/><text x="67.7179%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="66.9872%" y="821" width="0.6410%" height="15" fill="rgb(216,176,3)" fg:x="836" fg:w="8"/><text x="67.2372%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (7 samples, 0.56%)</title><rect x="67.0673%" y="805" width="0.5609%" height="15" fill="rgb(254,150,22)" fg:x="837" fg:w="7"/><text x="67.3173%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="67.0673%" y="789" width="0.5609%" height="15" fill="rgb(231,61,53)" fg:x="837" fg:w="7"/><text x="67.3173%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="67.0673%" y="773" width="0.5609%" height="15" fill="rgb(249,177,41)" fg:x="837" fg:w="7"/><text x="67.3173%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="67.5481%" y="757" width="0.0801%" height="15" fill="rgb(221,122,7)" fg:x="843" fg:w="1"/><text x="67.7981%" y="767.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.40%)</title><rect x="67.7885%" y="741" width="0.4006%" height="15" fill="rgb(215,115,7)" fg:x="846" fg:w="5"/><text x="68.0385%" y="751.50"></text></g><g><title>libloading::safe::Library::new (4 samples, 0.32%)</title><rect x="67.8686%" y="725" width="0.3205%" height="15" fill="rgb(218,108,33)" fg:x="847" fg:w="4"/><text x="68.1186%" y="735.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="67.8686%" y="709" width="0.3205%" height="15" fill="rgb(221,205,39)" fg:x="847" fg:w="4"/><text x="68.1186%" y="719.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="67.8686%" y="693" width="0.3205%" height="15" fill="rgb(220,171,18)" fg:x="847" fg:w="4"/><text x="68.1186%" y="703.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="67.8686%" y="677" width="0.3205%" height="15" fill="rgb(236,188,29)" fg:x="847" fg:w="4"/><text x="68.1186%" y="687.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="67.8686%" y="661" width="0.3205%" height="15" fill="rgb(239,29,5)" fg:x="847" fg:w="4"/><text x="68.1186%" y="671.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="67.8686%" y="645" width="0.3205%" height="15" fill="rgb(236,114,44)" fg:x="847" fg:w="4"/><text x="68.1186%" y="655.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="68.1090%" y="629" width="0.0801%" height="15" fill="rgb(239,214,48)" fg:x="850" fg:w="1"/><text x="68.3590%" y="639.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="68.1090%" y="613" width="0.0801%" height="15" fill="rgb(241,56,8)" fg:x="850" fg:w="1"/><text x="68.3590%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1090%" y="597" width="0.0801%" height="15" fill="rgb(228,201,0)" fg:x="850" fg:w="1"/><text x="68.3590%" y="607.50"></text></g><g><title>engine::session::Session::initialize (8 samples, 0.64%)</title><rect x="67.6282%" y="773" width="0.6410%" height="15" fill="rgb(226,219,34)" fg:x="844" fg:w="8"/><text x="67.8782%" y="783.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (8 samples, 0.64%)</title><rect x="67.6282%" y="757" width="0.6410%" height="15" fill="rgb(209,204,54)" fg:x="844" fg:w="8"/><text x="67.8782%" y="767.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="68.1891%" y="741" width="0.0801%" height="15" fill="rgb(251,160,17)" fg:x="851" fg:w="1"/><text x="68.4391%" y="751.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="68.1891%" y="725" width="0.0801%" height="15" fill="rgb(235,15,25)" fg:x="851" fg:w="1"/><text x="68.4391%" y="735.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="68.1891%" y="709" width="0.0801%" height="15" fill="rgb(216,209,28)" fg:x="851" fg:w="1"/><text x="68.4391%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="68.1891%" y="693" width="0.0801%" height="15" fill="rgb(248,123,21)" fg:x="851" fg:w="1"/><text x="68.4391%" y="703.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="68.1891%" y="677" width="0.0801%" height="15" fill="rgb(226,138,44)" fg:x="851" fg:w="1"/><text x="68.4391%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.08%)</title><rect x="68.1891%" y="661" width="0.0801%" height="15" fill="rgb(211,104,54)" fg:x="851" fg:w="1"/><text x="68.4391%" y="671.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.08%)</title><rect x="68.1891%" y="645" width="0.0801%" height="15" fill="rgb(241,198,15)" fg:x="851" fg:w="1"/><text x="68.4391%" y="655.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (9 samples, 0.72%)</title><rect x="67.6282%" y="821" width="0.7212%" height="15" fill="rgb(227,155,54)" fg:x="844" fg:w="9"/><text x="67.8782%" y="831.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (9 samples, 0.72%)</title><rect x="67.6282%" y="805" width="0.7212%" height="15" fill="rgb(225,131,31)" fg:x="844" fg:w="9"/><text x="67.8782%" y="815.50"></text></g><g><title>engine::session::Session::new (9 samples, 0.72%)</title><rect x="67.6282%" y="789" width="0.7212%" height="15" fill="rgb(242,40,17)" fg:x="844" fg:w="9"/><text x="67.8782%" y="799.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="68.2692%" y="773" width="0.0801%" height="15" fill="rgb(254,57,35)" fg:x="852" fg:w="1"/><text x="68.5192%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="68.2692%" y="757" width="0.0801%" height="15" fill="rgb(240,64,32)" fg:x="852" fg:w="1"/><text x="68.5192%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.2692%" y="741" width="0.0801%" height="15" fill="rgb(251,136,26)" fg:x="852" fg:w="1"/><text x="68.5192%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.2692%" y="725" width="0.0801%" height="15" fill="rgb(208,60,54)" fg:x="852" fg:w="1"/><text x="68.5192%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.2692%" y="709" width="0.0801%" height="15" fill="rgb(220,13,12)" fg:x="852" fg:w="1"/><text x="68.5192%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.2692%" y="693" width="0.0801%" height="15" fill="rgb(213,149,1)" fg:x="852" fg:w="1"/><text x="68.5192%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.5096%" y="805" width="0.0801%" height="15" fill="rgb(212,191,39)" fg:x="855" fg:w="1"/><text x="68.7596%" y="815.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="68.5897%" y="789" width="0.0801%" height="15" fill="rgb(215,221,42)" fg:x="856" fg:w="1"/><text x="68.8397%" y="799.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="68.5897%" y="773" width="0.0801%" height="15" fill="rgb(244,79,23)" fg:x="856" fg:w="1"/><text x="68.8397%" y="783.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="68.5897%" y="757" width="0.0801%" height="15" fill="rgb(247,17,29)" fg:x="856" fg:w="1"/><text x="68.8397%" y="767.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="68.5897%" y="741" width="0.0801%" height="15" fill="rgb(251,221,21)" fg:x="856" fg:w="1"/><text x="68.8397%" y="751.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="68.5897%" y="725" width="0.0801%" height="15" fill="rgb(207,202,34)" fg:x="856" fg:w="1"/><text x="68.8397%" y="735.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="68.5897%" y="709" width="0.0801%" height="15" fill="rgb(217,4,34)" fg:x="856" fg:w="1"/><text x="68.8397%" y="719.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="68.5897%" y="693" width="0.0801%" height="15" fill="rgb(253,17,16)" fg:x="856" fg:w="1"/><text x="68.8397%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="68.7500%" y="693" width="0.1603%" height="15" fill="rgb(223,91,48)" fg:x="858" fg:w="2"/><text x="69.0000%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="68.9103%" y="693" width="0.1603%" height="15" fill="rgb(244,191,22)" fg:x="860" fg:w="2"/><text x="69.1603%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="68.9103%" y="677" width="0.1603%" height="15" fill="rgb(211,107,14)" fg:x="860" fg:w="2"/><text x="69.1603%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.9904%" y="661" width="0.0801%" height="15" fill="rgb(232,81,23)" fg:x="861" fg:w="1"/><text x="69.2404%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="69.0705%" y="645" width="0.1603%" height="15" fill="rgb(237,126,14)" fg:x="862" fg:w="2"/><text x="69.3205%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="69.0705%" y="629" width="0.1603%" height="15" fill="rgb(230,65,39)" fg:x="862" fg:w="2"/><text x="69.3205%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.1506%" y="613" width="0.0801%" height="15" fill="rgb(208,106,41)" fg:x="863" fg:w="1"/><text x="69.4006%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.1506%" y="597" width="0.0801%" height="15" fill="rgb(206,125,25)" fg:x="863" fg:w="1"/><text x="69.4006%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.1506%" y="581" width="0.0801%" height="15" fill="rgb(250,24,29)" fg:x="863" fg:w="1"/><text x="69.4006%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.1506%" y="565" width="0.0801%" height="15" fill="rgb(226,49,32)" fg:x="863" fg:w="1"/><text x="69.4006%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="69.1506%" y="549" width="0.0801%" height="15" fill="rgb(217,110,16)" fg:x="863" fg:w="1"/><text x="69.4006%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="69.0705%" y="661" width="0.2404%" height="15" fill="rgb(252,16,53)" fg:x="862" fg:w="3"/><text x="69.3205%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="69.2308%" y="645" width="0.0801%" height="15" fill="rgb(238,163,11)" fg:x="864" fg:w="1"/><text x="69.4808%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="69.0705%" y="677" width="0.3205%" height="15" fill="rgb(206,210,1)" fg:x="862" fg:w="4"/><text x="69.3205%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.3109%" y="661" width="0.0801%" height="15" fill="rgb(229,8,25)" fg:x="865" fg:w="1"/><text x="69.5609%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.3109%" y="645" width="0.0801%" height="15" fill="rgb(247,155,23)" fg:x="865" fg:w="1"/><text x="69.5609%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.3109%" y="629" width="0.0801%" height="15" fill="rgb(207,26,7)" fg:x="865" fg:w="1"/><text x="69.5609%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="69.3910%" y="677" width="0.1603%" height="15" fill="rgb(215,179,12)" fg:x="866" fg:w="2"/><text x="69.6410%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="69.3910%" y="661" width="0.1603%" height="15" fill="rgb(238,208,11)" fg:x="866" fg:w="2"/><text x="69.6410%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.4712%" y="645" width="0.0801%" height="15" fill="rgb(238,102,42)" fg:x="867" fg:w="1"/><text x="69.7212%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.5513%" y="661" width="0.0801%" height="15" fill="rgb(239,35,9)" fg:x="868" fg:w="1"/><text x="69.8013%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.5513%" y="645" width="0.0801%" height="15" fill="rgb(244,182,30)" fg:x="868" fg:w="1"/><text x="69.8013%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.6314%" y="645" width="0.0801%" height="15" fill="rgb(232,181,23)" fg:x="869" fg:w="1"/><text x="69.8814%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="69.7115%" y="645" width="0.1603%" height="15" fill="rgb(242,154,29)" fg:x="870" fg:w="2"/><text x="69.9615%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="69.7115%" y="629" width="0.1603%" height="15" fill="rgb(219,23,2)" fg:x="870" fg:w="2"/><text x="69.9615%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="69.7115%" y="613" width="0.1603%" height="15" fill="rgb(234,94,43)" fg:x="870" fg:w="2"/><text x="69.9615%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.7917%" y="597" width="0.0801%" height="15" fill="rgb(223,55,45)" fg:x="871" fg:w="1"/><text x="70.0417%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.7917%" y="581" width="0.0801%" height="15" fill="rgb(241,215,54)" fg:x="871" fg:w="1"/><text x="70.0417%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.7917%" y="565" width="0.0801%" height="15" fill="rgb(247,63,53)" fg:x="871" fg:w="1"/><text x="70.0417%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="69.7917%" y="549" width="0.0801%" height="15" fill="rgb(220,166,7)" fg:x="871" fg:w="1"/><text x="70.0417%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="69.6314%" y="661" width="0.3205%" height="15" fill="rgb(248,53,45)" fg:x="869" fg:w="4"/><text x="69.8814%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.8718%" y="645" width="0.0801%" height="15" fill="rgb(224,207,20)" fg:x="872" fg:w="1"/><text x="70.1218%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.8718%" y="629" width="0.0801%" height="15" fill="rgb(244,185,11)" fg:x="872" fg:w="1"/><text x="70.1218%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.8718%" y="613" width="0.0801%" height="15" fill="rgb(230,13,42)" fg:x="872" fg:w="1"/><text x="70.1218%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="68.7500%" y="725" width="1.2821%" height="15" fill="rgb(243,191,18)" fg:x="858" fg:w="16"/><text x="69.0000%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="68.7500%" y="709" width="1.2821%" height="15" fill="rgb(249,135,15)" fg:x="858" fg:w="16"/><text x="69.0000%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="69.0705%" y="693" width="0.9615%" height="15" fill="rgb(229,26,35)" fg:x="862" fg:w="12"/><text x="69.3205%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="69.5513%" y="677" width="0.4808%" height="15" fill="rgb(216,191,16)" fg:x="868" fg:w="6"/><text x="69.8013%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.9519%" y="661" width="0.0801%" height="15" fill="rgb(242,18,7)" fg:x="873" fg:w="1"/><text x="70.2019%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.9519%" y="645" width="0.0801%" height="15" fill="rgb(205,128,17)" fg:x="873" fg:w="1"/><text x="70.2019%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0321%" y="693" width="0.0801%" height="15" fill="rgb(229,199,44)" fg:x="874" fg:w="1"/><text x="70.2821%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1923%" y="645" width="0.0801%" height="15" fill="rgb(234,222,3)" fg:x="876" fg:w="1"/><text x="70.4423%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="70.0321%" y="725" width="0.3205%" height="15" fill="rgb(220,170,20)" fg:x="874" fg:w="4"/><text x="70.2821%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="70.0321%" y="709" width="0.3205%" height="15" fill="rgb(207,138,8)" fg:x="874" fg:w="4"/><text x="70.2821%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="70.1122%" y="693" width="0.2404%" height="15" fill="rgb(244,130,36)" fg:x="875" fg:w="3"/><text x="70.3622%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="70.1122%" y="677" width="0.2404%" height="15" fill="rgb(207,197,52)" fg:x="875" fg:w="3"/><text x="70.3622%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.1923%" y="661" width="0.1603%" height="15" fill="rgb(206,9,21)" fg:x="876" fg:w="2"/><text x="70.4423%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.2724%" y="645" width="0.0801%" height="15" fill="rgb(250,15,47)" fg:x="877" fg:w="1"/><text x="70.5224%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="70.3526%" y="677" width="0.0801%" height="15" fill="rgb(235,202,14)" fg:x="878" fg:w="1"/><text x="70.6026%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.3526%" y="661" width="0.0801%" height="15" fill="rgb(211,180,47)" fg:x="878" fg:w="1"/><text x="70.6026%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3526%" y="645" width="0.0801%" height="15" fill="rgb(209,61,11)" fg:x="878" fg:w="1"/><text x="70.6026%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="70.4327%" y="597" width="0.0801%" height="15" fill="rgb(243,197,29)" fg:x="879" fg:w="1"/><text x="70.6827%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4327%" y="581" width="0.0801%" height="15" fill="rgb(216,185,16)" fg:x="879" fg:w="1"/><text x="70.6827%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4327%" y="565" width="0.0801%" height="15" fill="rgb(248,5,15)" fg:x="879" fg:w="1"/><text x="70.6827%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="70.4327%" y="629" width="0.1603%" height="15" fill="rgb(240,39,41)" fg:x="879" fg:w="2"/><text x="70.6827%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="70.4327%" y="613" width="0.1603%" height="15" fill="rgb(224,220,43)" fg:x="879" fg:w="2"/><text x="70.6827%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5128%" y="597" width="0.0801%" height="15" fill="rgb(215,21,24)" fg:x="880" fg:w="1"/><text x="70.7628%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="70.5929%" y="613" width="0.0801%" height="15" fill="rgb(220,102,8)" fg:x="881" fg:w="1"/><text x="70.8429%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="70.6731%" y="613" width="0.1603%" height="15" fill="rgb(225,185,10)" fg:x="882" fg:w="2"/><text x="70.9231%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="70.6731%" y="597" width="0.1603%" height="15" fill="rgb(212,108,24)" fg:x="882" fg:w="2"/><text x="70.9231%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="70.7532%" y="581" width="0.0801%" height="15" fill="rgb(237,27,0)" fg:x="883" fg:w="1"/><text x="71.0032%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7532%" y="565" width="0.0801%" height="15" fill="rgb(212,106,38)" fg:x="883" fg:w="1"/><text x="71.0032%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7532%" y="549" width="0.0801%" height="15" fill="rgb(210,125,30)" fg:x="883" fg:w="1"/><text x="71.0032%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7532%" y="533" width="0.0801%" height="15" fill="rgb(215,219,1)" fg:x="883" fg:w="1"/><text x="71.0032%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="70.4327%" y="645" width="0.4808%" height="15" fill="rgb(223,10,12)" fg:x="879" fg:w="6"/><text x="70.6827%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="70.5929%" y="629" width="0.3205%" height="15" fill="rgb(245,40,34)" fg:x="881" fg:w="4"/><text x="70.8429%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8333%" y="613" width="0.0801%" height="15" fill="rgb(211,185,19)" fg:x="884" fg:w="1"/><text x="71.0833%" y="623.50"></text></g><g><title>engine::session::Session::flush (30 samples, 2.40%)</title><rect x="68.5897%" y="805" width="2.4038%" height="15" fill="rgb(243,190,43)" fg:x="856" fg:w="30"/><text x="68.8397%" y="815.50">en..</text></g><g><title>engine::session::state::State::close (29 samples, 2.32%)</title><rect x="68.6699%" y="789" width="2.3237%" height="15" fill="rgb(232,208,29)" fg:x="857" fg:w="29"/><text x="68.9199%" y="799.50">e..</text></g><g><title>engine::session::state::State::flush_entities (29 samples, 2.32%)</title><rect x="68.6699%" y="773" width="2.3237%" height="15" fill="rgb(234,134,27)" fg:x="857" fg:w="29"/><text x="68.9199%" y="783.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (28 samples, 2.24%)</title><rect x="68.7500%" y="757" width="2.2436%" height="15" fill="rgb(225,41,29)" fg:x="858" fg:w="28"/><text x="69.0000%" y="767.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (28 samples, 2.24%)</title><rect x="68.7500%" y="741" width="2.2436%" height="15" fill="rgb(241,214,44)" fg:x="858" fg:w="28"/><text x="69.0000%" y="751.50">e..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="70.3526%" y="725" width="0.6410%" height="15" fill="rgb(205,219,41)" fg:x="878" fg:w="8"/><text x="70.6026%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="70.3526%" y="709" width="0.6410%" height="15" fill="rgb(226,15,26)" fg:x="878" fg:w="8"/><text x="70.6026%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="70.3526%" y="693" width="0.6410%" height="15" fill="rgb(210,83,41)" fg:x="878" fg:w="8"/><text x="70.6026%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="70.4327%" y="677" width="0.5609%" height="15" fill="rgb(247,9,39)" fg:x="879" fg:w="7"/><text x="70.6827%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="70.4327%" y="661" width="0.5609%" height="15" fill="rgb(209,37,30)" fg:x="879" fg:w="7"/><text x="70.6827%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="70.9135%" y="645" width="0.0801%" height="15" fill="rgb(248,170,46)" fg:x="885" fg:w="1"/><text x="71.1635%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9135%" y="629" width="0.0801%" height="15" fill="rgb(237,129,44)" fg:x="885" fg:w="1"/><text x="71.1635%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="70.9936%" y="757" width="0.0801%" height="15" fill="rgb(225,117,51)" fg:x="886" fg:w="1"/><text x="71.2436%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="70.9936%" y="741" width="0.0801%" height="15" fill="rgb(212,165,2)" fg:x="886" fg:w="1"/><text x="71.2436%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="70.9936%" y="773" width="0.2404%" height="15" fill="rgb(213,53,45)" fg:x="886" fg:w="3"/><text x="71.2436%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="71.0737%" y="757" width="0.1603%" height="15" fill="rgb(220,148,3)" fg:x="887" fg:w="2"/><text x="71.3237%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="71.1538%" y="741" width="0.0801%" height="15" fill="rgb(228,37,29)" fg:x="888" fg:w="1"/><text x="71.4038%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.1538%" y="725" width="0.0801%" height="15" fill="rgb(209,76,29)" fg:x="888" fg:w="1"/><text x="71.4038%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.1538%" y="709" width="0.0801%" height="15" fill="rgb(215,90,5)" fg:x="888" fg:w="1"/><text x="71.4038%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.1538%" y="693" width="0.0801%" height="15" fill="rgb(227,207,32)" fg:x="888" fg:w="1"/><text x="71.4038%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="71.1538%" y="677" width="0.0801%" height="15" fill="rgb(251,218,44)" fg:x="888" fg:w="1"/><text x="71.4038%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.1538%" y="661" width="0.0801%" height="15" fill="rgb(211,44,16)" fg:x="888" fg:w="1"/><text x="71.4038%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.1538%" y="645" width="0.0801%" height="15" fill="rgb(242,170,37)" fg:x="888" fg:w="1"/><text x="71.4038%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.1538%" y="629" width="0.0801%" height="15" fill="rgb(205,181,22)" fg:x="888" fg:w="1"/><text x="71.4038%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="71.1538%" y="613" width="0.0801%" height="15" fill="rgb(228,130,19)" fg:x="888" fg:w="1"/><text x="71.4038%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.1538%" y="597" width="0.0801%" height="15" fill="rgb(228,9,15)" fg:x="888" fg:w="1"/><text x="71.4038%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.1538%" y="581" width="0.0801%" height="15" fill="rgb(219,66,48)" fg:x="888" fg:w="1"/><text x="71.4038%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.1538%" y="565" width="0.0801%" height="15" fill="rgb(234,203,10)" fg:x="888" fg:w="1"/><text x="71.4038%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.1538%" y="549" width="0.0801%" height="15" fill="rgb(219,209,1)" fg:x="888" fg:w="1"/><text x="71.4038%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="71.1538%" y="533" width="0.0801%" height="15" fill="rgb(206,167,9)" fg:x="888" fg:w="1"/><text x="71.4038%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="71.1538%" y="517" width="0.0801%" height="15" fill="rgb(210,11,39)" fg:x="888" fg:w="1"/><text x="71.4038%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="71.1538%" y="501" width="0.0801%" height="15" fill="rgb(251,90,47)" fg:x="888" fg:w="1"/><text x="71.4038%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="71.1538%" y="485" width="0.0801%" height="15" fill="rgb(237,7,4)" fg:x="888" fg:w="1"/><text x="71.4038%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.1538%" y="469" width="0.0801%" height="15" fill="rgb(232,205,47)" fg:x="888" fg:w="1"/><text x="71.4038%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.1538%" y="453" width="0.0801%" height="15" fill="rgb(215,86,48)" fg:x="888" fg:w="1"/><text x="71.4038%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.1538%" y="437" width="0.0801%" height="15" fill="rgb(232,14,47)" fg:x="888" fg:w="1"/><text x="71.4038%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="71.1538%" y="421" width="0.0801%" height="15" fill="rgb(240,28,46)" fg:x="888" fg:w="1"/><text x="71.4038%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.1538%" y="405" width="0.0801%" height="15" fill="rgb(224,85,5)" fg:x="888" fg:w="1"/><text x="71.4038%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.1538%" y="389" width="0.0801%" height="15" fill="rgb(219,34,25)" fg:x="888" fg:w="1"/><text x="71.4038%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="70.9936%" y="789" width="0.8013%" height="15" fill="rgb(247,137,45)" fg:x="886" fg:w="10"/><text x="71.2436%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="71.2340%" y="773" width="0.5609%" height="15" fill="rgb(237,121,47)" fg:x="889" fg:w="7"/><text x="71.4840%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="71.2340%" y="757" width="0.5609%" height="15" fill="rgb(247,148,27)" fg:x="889" fg:w="7"/><text x="71.4840%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="71.2340%" y="741" width="0.5609%" height="15" fill="rgb(220,44,0)" fg:x="889" fg:w="7"/><text x="71.4840%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="71.2340%" y="725" width="0.5609%" height="15" fill="rgb(236,61,29)" fg:x="889" fg:w="7"/><text x="71.4840%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="71.2340%" y="709" width="0.5609%" height="15" fill="rgb(244,180,35)" fg:x="889" fg:w="7"/><text x="71.4840%" y="719.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="71.3141%" y="693" width="0.4808%" height="15" fill="rgb(242,14,54)" fg:x="890" fg:w="6"/><text x="71.5641%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="71.7949%" y="773" width="0.0801%" height="15" fill="rgb(206,24,45)" fg:x="896" fg:w="1"/><text x="72.0449%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="71.7949%" y="757" width="0.0801%" height="15" fill="rgb(215,211,6)" fg:x="896" fg:w="1"/><text x="72.0449%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="71.7949%" y="741" width="0.0801%" height="15" fill="rgb(207,56,2)" fg:x="896" fg:w="1"/><text x="72.0449%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="71.7949%" y="725" width="0.0801%" height="15" fill="rgb(220,135,9)" fg:x="896" fg:w="1"/><text x="72.0449%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7949%" y="709" width="0.0801%" height="15" fill="rgb(214,145,52)" fg:x="896" fg:w="1"/><text x="72.0449%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="71.8750%" y="773" width="0.0801%" height="15" fill="rgb(241,83,53)" fg:x="897" fg:w="1"/><text x="72.1250%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.8750%" y="757" width="0.0801%" height="15" fill="rgb(222,66,13)" fg:x="897" fg:w="1"/><text x="72.1250%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.8750%" y="741" width="0.0801%" height="15" fill="rgb(239,164,54)" fg:x="897" fg:w="1"/><text x="72.1250%" y="751.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="71.9551%" y="773" width="0.0801%" height="15" fill="rgb(216,189,13)" fg:x="898" fg:w="1"/><text x="72.2051%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="71.9551%" y="757" width="0.0801%" height="15" fill="rgb(228,212,51)" fg:x="898" fg:w="1"/><text x="72.2051%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="71.9551%" y="741" width="0.0801%" height="15" fill="rgb(207,190,21)" fg:x="898" fg:w="1"/><text x="72.2051%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.9551%" y="725" width="0.0801%" height="15" fill="rgb(245,28,35)" fg:x="898" fg:w="1"/><text x="72.2051%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.9551%" y="709" width="0.0801%" height="15" fill="rgb(239,23,40)" fg:x="898" fg:w="1"/><text x="72.2051%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9551%" y="693" width="0.0801%" height="15" fill="rgb(242,10,51)" fg:x="898" fg:w="1"/><text x="72.2051%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.9551%" y="677" width="0.0801%" height="15" fill="rgb(207,186,5)" fg:x="898" fg:w="1"/><text x="72.2051%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9551%" y="661" width="0.0801%" height="15" fill="rgb(242,21,16)" fg:x="898" fg:w="1"/><text x="72.2051%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9551%" y="645" width="0.0801%" height="15" fill="rgb(237,0,53)" fg:x="898" fg:w="1"/><text x="72.2051%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9551%" y="629" width="0.0801%" height="15" fill="rgb(215,8,52)" fg:x="898" fg:w="1"/><text x="72.2051%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.12%)</title><rect x="70.9936%" y="805" width="1.1218%" height="15" fill="rgb(248,62,44)" fg:x="886" fg:w="14"/><text x="71.2436%" y="815.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="71.7949%" y="789" width="0.3205%" height="15" fill="rgb(224,83,15)" fg:x="896" fg:w="4"/><text x="72.0449%" y="799.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="72.0353%" y="773" width="0.0801%" height="15" fill="rgb(249,100,46)" fg:x="899" fg:w="1"/><text x="72.2853%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.0353%" y="757" width="0.0801%" height="15" fill="rgb(213,35,48)" fg:x="899" fg:w="1"/><text x="72.2853%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0353%" y="741" width="0.0801%" height="15" fill="rgb(251,2,13)" fg:x="899" fg:w="1"/><text x="72.2853%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="72.1955%" y="773" width="0.1603%" height="15" fill="rgb(212,132,21)" fg:x="901" fg:w="2"/><text x="72.4455%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="72.1955%" y="757" width="0.1603%" height="15" fill="rgb(247,17,21)" fg:x="901" fg:w="2"/><text x="72.4455%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="72.1955%" y="741" width="0.1603%" height="15" fill="rgb(220,177,38)" fg:x="901" fg:w="2"/><text x="72.4455%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="72.1955%" y="725" width="0.1603%" height="15" fill="rgb(233,219,21)" fg:x="901" fg:w="2"/><text x="72.4455%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="72.1955%" y="709" width="0.1603%" height="15" fill="rgb(246,17,7)" fg:x="901" fg:w="2"/><text x="72.4455%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="72.1955%" y="693" width="0.1603%" height="15" fill="rgb(212,4,22)" fg:x="901" fg:w="2"/><text x="72.4455%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="72.1955%" y="677" width="0.1603%" height="15" fill="rgb(243,85,21)" fg:x="901" fg:w="2"/><text x="72.4455%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="72.1955%" y="661" width="0.1603%" height="15" fill="rgb(232,218,2)" fg:x="901" fg:w="2"/><text x="72.4455%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="72.1955%" y="645" width="0.1603%" height="15" fill="rgb(253,168,47)" fg:x="901" fg:w="2"/><text x="72.4455%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="72.1955%" y="629" width="0.1603%" height="15" fill="rgb(238,101,25)" fg:x="901" fg:w="2"/><text x="72.4455%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="72.1955%" y="613" width="0.1603%" height="15" fill="rgb(251,86,12)" fg:x="901" fg:w="2"/><text x="72.4455%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="72.1955%" y="597" width="0.1603%" height="15" fill="rgb(241,112,44)" fg:x="901" fg:w="2"/><text x="72.4455%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="72.1955%" y="581" width="0.1603%" height="15" fill="rgb(224,28,25)" fg:x="901" fg:w="2"/><text x="72.4455%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.2756%" y="565" width="0.0801%" height="15" fill="rgb(209,201,1)" fg:x="902" fg:w="1"/><text x="72.5256%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="72.2756%" y="549" width="0.0801%" height="15" fill="rgb(231,30,22)" fg:x="902" fg:w="1"/><text x="72.5256%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="72.2756%" y="533" width="0.0801%" height="15" fill="rgb(247,96,31)" fg:x="902" fg:w="1"/><text x="72.5256%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.2756%" y="517" width="0.0801%" height="15" fill="rgb(251,100,12)" fg:x="902" fg:w="1"/><text x="72.5256%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.2756%" y="501" width="0.0801%" height="15" fill="rgb(224,174,7)" fg:x="902" fg:w="1"/><text x="72.5256%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2756%" y="485" width="0.0801%" height="15" fill="rgb(231,168,19)" fg:x="902" fg:w="1"/><text x="72.5256%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.2756%" y="469" width="0.0801%" height="15" fill="rgb(226,85,5)" fg:x="902" fg:w="1"/><text x="72.5256%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.2756%" y="453" width="0.0801%" height="15" fill="rgb(210,215,5)" fg:x="902" fg:w="1"/><text x="72.5256%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.2756%" y="437" width="0.0801%" height="15" fill="rgb(233,70,8)" fg:x="902" fg:w="1"/><text x="72.5256%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.2756%" y="421" width="0.0801%" height="15" fill="rgb(229,109,53)" fg:x="902" fg:w="1"/><text x="72.5256%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.2756%" y="405" width="0.0801%" height="15" fill="rgb(213,125,35)" fg:x="902" fg:w="1"/><text x="72.5256%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.2756%" y="389" width="0.0801%" height="15" fill="rgb(215,12,48)" fg:x="902" fg:w="1"/><text x="72.5256%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.2756%" y="373" width="0.0801%" height="15" fill="rgb(207,12,38)" fg:x="902" fg:w="1"/><text x="72.5256%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.2756%" y="357" width="0.0801%" height="15" fill="rgb(216,229,2)" fg:x="902" fg:w="1"/><text x="72.5256%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="72.2756%" y="341" width="0.0801%" height="15" fill="rgb(229,209,31)" fg:x="902" fg:w="1"/><text x="72.5256%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.2756%" y="325" width="0.0801%" height="15" fill="rgb(239,57,22)" fg:x="902" fg:w="1"/><text x="72.5256%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="72.2756%" y="309" width="0.0801%" height="15" fill="rgb(239,119,54)" fg:x="902" fg:w="1"/><text x="72.5256%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="72.2756%" y="293" width="0.0801%" height="15" fill="rgb(231,80,45)" fg:x="902" fg:w="1"/><text x="72.5256%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="72.2756%" y="277" width="0.0801%" height="15" fill="rgb(219,138,19)" fg:x="902" fg:w="1"/><text x="72.5256%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.2756%" y="261" width="0.0801%" height="15" fill="rgb(216,53,26)" fg:x="902" fg:w="1"/><text x="72.5256%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.3558%" y="773" width="0.0801%" height="15" fill="rgb(224,30,16)" fg:x="903" fg:w="1"/><text x="72.6058%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.3558%" y="757" width="0.0801%" height="15" fill="rgb(224,151,24)" fg:x="903" fg:w="1"/><text x="72.6058%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3558%" y="741" width="0.0801%" height="15" fill="rgb(236,75,7)" fg:x="903" fg:w="1"/><text x="72.6058%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3558%" y="725" width="0.0801%" height="15" fill="rgb(248,106,42)" fg:x="903" fg:w="1"/><text x="72.6058%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.3558%" y="709" width="0.0801%" height="15" fill="rgb(222,217,11)" fg:x="903" fg:w="1"/><text x="72.6058%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3558%" y="693" width="0.0801%" height="15" fill="rgb(234,143,31)" fg:x="903" fg:w="1"/><text x="72.6058%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3558%" y="677" width="0.0801%" height="15" fill="rgb(237,148,28)" fg:x="903" fg:w="1"/><text x="72.6058%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3558%" y="661" width="0.0801%" height="15" fill="rgb(241,151,6)" fg:x="903" fg:w="1"/><text x="72.6058%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="72.4359%" y="773" width="0.0801%" height="15" fill="rgb(226,55,18)" fg:x="904" fg:w="1"/><text x="72.6859%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.4359%" y="757" width="0.0801%" height="15" fill="rgb(226,196,6)" fg:x="904" fg:w="1"/><text x="72.6859%" y="767.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="72.4359%" y="741" width="0.0801%" height="15" fill="rgb(251,228,11)" fg:x="904" fg:w="1"/><text x="72.6859%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.4359%" y="725" width="0.0801%" height="15" fill="rgb(219,197,15)" fg:x="904" fg:w="1"/><text x="72.6859%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="72.5160%" y="725" width="0.0801%" height="15" fill="rgb(243,105,44)" fg:x="905" fg:w="1"/><text x="72.7660%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.5160%" y="709" width="0.0801%" height="15" fill="rgb(205,183,40)" fg:x="905" fg:w="1"/><text x="72.7660%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.5160%" y="693" width="0.0801%" height="15" fill="rgb(232,138,46)" fg:x="905" fg:w="1"/><text x="72.7660%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.5160%" y="677" width="0.0801%" height="15" fill="rgb(234,161,14)" fg:x="905" fg:w="1"/><text x="72.7660%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5160%" y="661" width="0.0801%" height="15" fill="rgb(238,211,18)" fg:x="905" fg:w="1"/><text x="72.7660%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="72.1154%" y="805" width="0.5609%" height="15" fill="rgb(217,130,2)" fg:x="900" fg:w="7"/><text x="72.3654%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="72.1154%" y="789" width="0.5609%" height="15" fill="rgb(251,17,29)" fg:x="900" fg:w="7"/><text x="72.3654%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="72.5160%" y="773" width="0.1603%" height="15" fill="rgb(243,18,0)" fg:x="905" fg:w="2"/><text x="72.7660%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="72.5160%" y="757" width="0.1603%" height="15" fill="rgb(227,220,45)" fg:x="905" fg:w="2"/><text x="72.7660%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="72.5160%" y="741" width="0.1603%" height="15" fill="rgb(212,34,2)" fg:x="905" fg:w="2"/><text x="72.7660%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.5962%" y="725" width="0.0801%" height="15" fill="rgb(236,23,8)" fg:x="906" fg:w="1"/><text x="72.8462%" y="735.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.6763%" y="741" width="0.1603%" height="15" fill="rgb(210,113,39)" fg:x="907" fg:w="2"/><text x="72.9263%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.7564%" y="725" width="0.0801%" height="15" fill="rgb(243,123,48)" fg:x="908" fg:w="1"/><text x="73.0064%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.7564%" y="709" width="0.0801%" height="15" fill="rgb(223,175,36)" fg:x="908" fg:w="1"/><text x="73.0064%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.7564%" y="693" width="0.0801%" height="15" fill="rgb(226,100,30)" fg:x="908" fg:w="1"/><text x="73.0064%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.7564%" y="677" width="0.0801%" height="15" fill="rgb(221,225,39)" fg:x="908" fg:w="1"/><text x="73.0064%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.7564%" y="661" width="0.0801%" height="15" fill="rgb(224,222,42)" fg:x="908" fg:w="1"/><text x="73.0064%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.7564%" y="645" width="0.0801%" height="15" fill="rgb(221,53,1)" fg:x="908" fg:w="1"/><text x="73.0064%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.7564%" y="629" width="0.0801%" height="15" fill="rgb(216,187,48)" fg:x="908" fg:w="1"/><text x="73.0064%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.7564%" y="613" width="0.0801%" height="15" fill="rgb(220,108,2)" fg:x="908" fg:w="1"/><text x="73.0064%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.7564%" y="597" width="0.0801%" height="15" fill="rgb(216,13,42)" fg:x="908" fg:w="1"/><text x="73.0064%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.7564%" y="581" width="0.0801%" height="15" fill="rgb(205,14,29)" fg:x="908" fg:w="1"/><text x="73.0064%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.7564%" y="565" width="0.0801%" height="15" fill="rgb(217,168,30)" fg:x="908" fg:w="1"/><text x="73.0064%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="72.8365%" y="725" width="0.0801%" height="15" fill="rgb(246,173,54)" fg:x="909" fg:w="1"/><text x="73.0865%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8365%" y="709" width="0.0801%" height="15" fill="rgb(227,177,11)" fg:x="909" fg:w="1"/><text x="73.0865%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.9167%" y="709" width="0.0801%" height="15" fill="rgb(223,215,51)" fg:x="910" fg:w="1"/><text x="73.1667%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.9167%" y="693" width="0.0801%" height="15" fill="rgb(253,4,17)" fg:x="910" fg:w="1"/><text x="73.1667%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="72.8365%" y="741" width="0.2404%" height="15" fill="rgb(206,150,43)" fg:x="909" fg:w="3"/><text x="73.0865%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="72.9167%" y="725" width="0.1603%" height="15" fill="rgb(241,100,52)" fg:x="910" fg:w="2"/><text x="73.1667%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="72.9968%" y="709" width="0.0801%" height="15" fill="rgb(234,120,21)" fg:x="911" fg:w="1"/><text x="73.2468%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.9968%" y="693" width="0.0801%" height="15" fill="rgb(231,60,11)" fg:x="911" fg:w="1"/><text x="73.2468%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.9968%" y="677" width="0.0801%" height="15" fill="rgb(247,77,50)" fg:x="911" fg:w="1"/><text x="73.2468%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9968%" y="661" width="0.0801%" height="15" fill="rgb(251,199,54)" fg:x="911" fg:w="1"/><text x="73.2468%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.9968%" y="645" width="0.0801%" height="15" fill="rgb(212,120,38)" fg:x="911" fg:w="1"/><text x="73.2468%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="73.0769%" y="741" width="0.0801%" height="15" fill="rgb(250,161,37)" fg:x="912" fg:w="1"/><text x="73.3269%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="73.0769%" y="725" width="0.0801%" height="15" fill="rgb(232,158,45)" fg:x="912" fg:w="1"/><text x="73.3269%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="73.0769%" y="709" width="0.0801%" height="15" fill="rgb(233,114,2)" fg:x="912" fg:w="1"/><text x="73.3269%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="73.0769%" y="693" width="0.0801%" height="15" fill="rgb(248,139,0)" fg:x="912" fg:w="1"/><text x="73.3269%" y="703.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="73.0769%" y="677" width="0.0801%" height="15" fill="rgb(222,164,18)" fg:x="912" fg:w="1"/><text x="73.3269%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.0769%" y="661" width="0.0801%" height="15" fill="rgb(221,140,42)" fg:x="912" fg:w="1"/><text x="73.3269%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.0769%" y="645" width="0.0801%" height="15" fill="rgb(209,186,11)" fg:x="912" fg:w="1"/><text x="73.3269%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.0769%" y="629" width="0.0801%" height="15" fill="rgb(254,212,38)" fg:x="912" fg:w="1"/><text x="73.3269%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.0769%" y="613" width="0.0801%" height="15" fill="rgb(219,156,31)" fg:x="912" fg:w="1"/><text x="73.3269%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.0769%" y="597" width="0.0801%" height="15" fill="rgb(222,148,42)" fg:x="912" fg:w="1"/><text x="73.3269%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.0769%" y="581" width="0.0801%" height="15" fill="rgb(225,65,5)" fg:x="912" fg:w="1"/><text x="73.3269%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.0769%" y="565" width="0.0801%" height="15" fill="rgb(235,28,12)" fg:x="912" fg:w="1"/><text x="73.3269%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.0769%" y="549" width="0.0801%" height="15" fill="rgb(245,58,4)" fg:x="912" fg:w="1"/><text x="73.3269%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.0769%" y="533" width="0.0801%" height="15" fill="rgb(235,118,5)" fg:x="912" fg:w="1"/><text x="73.3269%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.0769%" y="517" width="0.0801%" height="15" fill="rgb(253,196,3)" fg:x="912" fg:w="1"/><text x="73.3269%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.0769%" y="501" width="0.0801%" height="15" fill="rgb(238,90,28)" fg:x="912" fg:w="1"/><text x="73.3269%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.0769%" y="485" width="0.0801%" height="15" fill="rgb(254,227,4)" fg:x="912" fg:w="1"/><text x="73.3269%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="73.0769%" y="469" width="0.0801%" height="15" fill="rgb(237,114,35)" fg:x="912" fg:w="1"/><text x="73.3269%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="73.0769%" y="453" width="0.0801%" height="15" fill="rgb(221,147,29)" fg:x="912" fg:w="1"/><text x="73.3269%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="73.1571%" y="709" width="0.0801%" height="15" fill="rgb(216,201,17)" fg:x="913" fg:w="1"/><text x="73.4071%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1571%" y="693" width="0.0801%" height="15" fill="rgb(251,46,50)" fg:x="913" fg:w="1"/><text x="73.4071%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2372%" y="629" width="0.0801%" height="15" fill="rgb(216,143,48)" fg:x="914" fg:w="1"/><text x="73.4872%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.2372%" y="613" width="0.0801%" height="15" fill="rgb(224,62,51)" fg:x="914" fg:w="1"/><text x="73.4872%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.2372%" y="597" width="0.0801%" height="15" fill="rgb(232,152,20)" fg:x="914" fg:w="1"/><text x="73.4872%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="73.1571%" y="725" width="0.2404%" height="15" fill="rgb(233,194,7)" fg:x="913" fg:w="3"/><text x="73.4071%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="73.2372%" y="709" width="0.1603%" height="15" fill="rgb(207,33,22)" fg:x="914" fg:w="2"/><text x="73.4872%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="73.2372%" y="693" width="0.1603%" height="15" fill="rgb(226,54,34)" fg:x="914" fg:w="2"/><text x="73.4872%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="73.2372%" y="677" width="0.1603%" height="15" fill="rgb(227,161,47)" fg:x="914" fg:w="2"/><text x="73.4872%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="73.2372%" y="661" width="0.1603%" height="15" fill="rgb(218,58,37)" fg:x="914" fg:w="2"/><text x="73.4872%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="73.2372%" y="645" width="0.1603%" height="15" fill="rgb(208,173,18)" fg:x="914" fg:w="2"/><text x="73.4872%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.3173%" y="629" width="0.0801%" height="15" fill="rgb(230,159,11)" fg:x="915" fg:w="1"/><text x="73.5673%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.3173%" y="613" width="0.0801%" height="15" fill="rgb(238,90,51)" fg:x="915" fg:w="1"/><text x="73.5673%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.3173%" y="597" width="0.0801%" height="15" fill="rgb(225,97,36)" fg:x="915" fg:w="1"/><text x="73.5673%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.3173%" y="581" width="0.0801%" height="15" fill="rgb(211,205,42)" fg:x="915" fg:w="1"/><text x="73.5673%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.3173%" y="565" width="0.0801%" height="15" fill="rgb(219,152,7)" fg:x="915" fg:w="1"/><text x="73.5673%" y="575.50"></text></g><g><title>plugins_core::build::Build::leads_to (5 samples, 0.40%)</title><rect x="73.1571%" y="741" width="0.4006%" height="15" fill="rgb(222,79,10)" fg:x="913" fg:w="5"/><text x="73.4071%" y="751.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="73.3974%" y="725" width="0.1603%" height="15" fill="rgb(242,13,11)" fg:x="916" fg:w="2"/><text x="73.6474%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (2 samples, 0.16%)</title><rect x="73.3974%" y="709" width="0.1603%" height="15" fill="rgb(231,143,41)" fg:x="916" fg:w="2"/><text x="73.6474%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="73.3974%" y="693" width="0.1603%" height="15" fill="rgb(222,147,19)" fg:x="916" fg:w="2"/><text x="73.6474%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.3974%" y="677" width="0.1603%" height="15" fill="rgb(235,5,39)" fg:x="916" fg:w="2"/><text x="73.6474%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.96%)</title><rect x="72.6763%" y="789" width="0.9615%" height="15" fill="rgb(246,155,51)" fg:x="907" fg:w="12"/><text x="72.9263%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="72.6763%" y="773" width="0.9615%" height="15" fill="rgb(218,157,4)" fg:x="907" fg:w="12"/><text x="72.9263%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (12 samples, 0.96%)</title><rect x="72.6763%" y="757" width="0.9615%" height="15" fill="rgb(226,184,4)" fg:x="907" fg:w="12"/><text x="72.9263%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="73.5577%" y="741" width="0.0801%" height="15" fill="rgb(210,103,26)" fg:x="918" fg:w="1"/><text x="73.8077%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="73.5577%" y="725" width="0.0801%" height="15" fill="rgb(228,23,31)" fg:x="918" fg:w="1"/><text x="73.8077%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="73.5577%" y="709" width="0.0801%" height="15" fill="rgb(205,176,34)" fg:x="918" fg:w="1"/><text x="73.8077%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="73.5577%" y="693" width="0.0801%" height="15" fill="rgb(246,213,37)" fg:x="918" fg:w="1"/><text x="73.8077%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5577%" y="677" width="0.0801%" height="15" fill="rgb(213,52,45)" fg:x="918" fg:w="1"/><text x="73.8077%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.5577%" y="661" width="0.0801%" height="15" fill="rgb(249,9,52)" fg:x="918" fg:w="1"/><text x="73.8077%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="73.5577%" y="645" width="0.0801%" height="15" fill="rgb(205,97,16)" fg:x="918" fg:w="1"/><text x="73.8077%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5577%" y="629" width="0.0801%" height="15" fill="rgb(214,11,46)" fg:x="918" fg:w="1"/><text x="73.8077%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.5577%" y="613" width="0.0801%" height="15" fill="rgb(221,66,18)" fg:x="918" fg:w="1"/><text x="73.8077%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5577%" y="597" width="0.0801%" height="15" fill="rgb(213,49,1)" fg:x="918" fg:w="1"/><text x="73.8077%" y="607.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.6378%" y="773" width="0.0801%" height="15" fill="rgb(232,75,51)" fg:x="919" fg:w="1"/><text x="73.8878%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.7981%" y="725" width="0.0801%" height="15" fill="rgb(208,218,40)" fg:x="921" fg:w="1"/><text x="74.0481%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.8782%" y="709" width="0.0801%" height="15" fill="rgb(206,144,50)" fg:x="922" fg:w="1"/><text x="74.1282%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.8782%" y="693" width="0.0801%" height="15" fill="rgb(216,9,51)" fg:x="922" fg:w="1"/><text x="74.1282%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.8782%" y="677" width="0.0801%" height="15" fill="rgb(226,6,53)" fg:x="922" fg:w="1"/><text x="74.1282%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="74.0385%" y="677" width="0.0801%" height="15" fill="rgb(216,9,50)" fg:x="924" fg:w="1"/><text x="74.2885%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.0385%" y="661" width="0.0801%" height="15" fill="rgb(214,101,31)" fg:x="924" fg:w="1"/><text x="74.2885%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="74.1987%" y="661" width="0.2404%" height="15" fill="rgb(247,85,17)" fg:x="926" fg:w="3"/><text x="74.4487%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="74.1987%" y="645" width="0.2404%" height="15" fill="rgb(248,138,25)" fg:x="926" fg:w="3"/><text x="74.4487%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.2788%" y="629" width="0.1603%" height="15" fill="rgb(225,146,20)" fg:x="927" fg:w="2"/><text x="74.5288%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="74.4391%" y="645" width="0.1603%" height="15" fill="rgb(224,184,17)" fg:x="929" fg:w="2"/><text x="74.6891%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="74.4391%" y="629" width="0.1603%" height="15" fill="rgb(231,10,20)" fg:x="929" fg:w="2"/><text x="74.6891%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="74.5192%" y="613" width="0.0801%" height="15" fill="rgb(210,93,37)" fg:x="930" fg:w="1"/><text x="74.7692%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.5192%" y="597" width="0.0801%" height="15" fill="rgb(226,84,42)" fg:x="930" fg:w="1"/><text x="74.7692%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.5192%" y="581" width="0.0801%" height="15" fill="rgb(253,192,7)" fg:x="930" fg:w="1"/><text x="74.7692%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.5192%" y="565" width="0.0801%" height="15" fill="rgb(214,107,27)" fg:x="930" fg:w="1"/><text x="74.7692%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="74.5994%" y="645" width="0.2404%" height="15" fill="rgb(238,146,21)" fg:x="931" fg:w="3"/><text x="74.8494%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="74.5994%" y="629" width="0.2404%" height="15" fill="rgb(209,136,30)" fg:x="931" fg:w="3"/><text x="74.8494%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.6795%" y="613" width="0.1603%" height="15" fill="rgb(226,60,22)" fg:x="932" fg:w="2"/><text x="74.9295%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="74.7596%" y="597" width="0.0801%" height="15" fill="rgb(243,92,26)" fg:x="933" fg:w="1"/><text x="75.0096%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="74.8397%" y="629" width="0.2404%" height="15" fill="rgb(211,85,33)" fg:x="934" fg:w="3"/><text x="75.0897%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.9199%" y="613" width="0.1603%" height="15" fill="rgb(243,187,44)" fg:x="935" fg:w="2"/><text x="75.1699%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.0000%" y="597" width="0.0801%" height="15" fill="rgb(251,172,23)" fg:x="936" fg:w="1"/><text x="75.2500%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.0000%" y="581" width="0.0801%" height="15" fill="rgb(254,162,50)" fg:x="936" fg:w="1"/><text x="75.2500%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.0801%" y="613" width="0.0801%" height="15" fill="rgb(239,14,53)" fg:x="937" fg:w="1"/><text x="75.3301%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.0801%" y="597" width="0.0801%" height="15" fill="rgb(242,208,8)" fg:x="937" fg:w="1"/><text x="75.3301%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="74.8397%" y="645" width="0.4006%" height="15" fill="rgb(225,61,41)" fg:x="934" fg:w="5"/><text x="75.0897%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.0801%" y="629" width="0.1603%" height="15" fill="rgb(219,154,6)" fg:x="937" fg:w="2"/><text x="75.3301%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.1603%" y="613" width="0.0801%" height="15" fill="rgb(227,223,44)" fg:x="938" fg:w="1"/><text x="75.4103%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="74.4391%" y="661" width="0.8814%" height="15" fill="rgb(220,188,6)" fg:x="929" fg:w="11"/><text x="74.6891%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.2404%" y="645" width="0.0801%" height="15" fill="rgb(216,65,22)" fg:x="939" fg:w="1"/><text x="75.4904%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="74.1186%" y="677" width="1.2821%" height="15" fill="rgb(236,66,46)" fg:x="925" fg:w="16"/><text x="74.3686%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.3205%" y="661" width="0.0801%" height="15" fill="rgb(211,150,52)" fg:x="940" fg:w="1"/><text x="75.5705%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.3205%" y="645" width="0.0801%" height="15" fill="rgb(253,89,19)" fg:x="940" fg:w="1"/><text x="75.5705%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.3205%" y="629" width="0.0801%" height="15" fill="rgb(245,4,1)" fg:x="940" fg:w="1"/><text x="75.5705%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.3205%" y="613" width="0.0801%" height="15" fill="rgb(230,109,16)" fg:x="940" fg:w="1"/><text x="75.5705%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.3205%" y="597" width="0.0801%" height="15" fill="rgb(213,7,47)" fg:x="940" fg:w="1"/><text x="75.5705%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.3205%" y="581" width="0.0801%" height="15" fill="rgb(242,148,14)" fg:x="940" fg:w="1"/><text x="75.5705%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.44%)</title><rect x="74.0385%" y="693" width="1.4423%" height="15" fill="rgb(238,51,34)" fg:x="924" fg:w="18"/><text x="74.2885%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4006%" y="677" width="0.0801%" height="15" fill="rgb(222,49,22)" fg:x="941" fg:w="1"/><text x="75.6506%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.4006%" y="661" width="0.0801%" height="15" fill="rgb(237,102,50)" fg:x="941" fg:w="1"/><text x="75.6506%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.4006%" y="645" width="0.0801%" height="15" fill="rgb(237,195,8)" fg:x="941" fg:w="1"/><text x="75.6506%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.4808%" y="645" width="0.0801%" height="15" fill="rgb(245,60,18)" fg:x="942" fg:w="1"/><text x="75.7308%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.4808%" y="693" width="0.2404%" height="15" fill="rgb(253,74,32)" fg:x="942" fg:w="3"/><text x="75.7308%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="75.4808%" y="677" width="0.2404%" height="15" fill="rgb(240,91,39)" fg:x="942" fg:w="3"/><text x="75.7308%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.4808%" y="661" width="0.2404%" height="15" fill="rgb(221,162,34)" fg:x="942" fg:w="3"/><text x="75.7308%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.5609%" y="645" width="0.1603%" height="15" fill="rgb(223,32,2)" fg:x="943" fg:w="2"/><text x="75.8109%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.5609%" y="629" width="0.1603%" height="15" fill="rgb(245,220,46)" fg:x="943" fg:w="2"/><text x="75.8109%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.5609%" y="613" width="0.1603%" height="15" fill="rgb(216,38,33)" fg:x="943" fg:w="2"/><text x="75.8109%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="75.5609%" y="597" width="0.1603%" height="15" fill="rgb(210,123,14)" fg:x="943" fg:w="2"/><text x="75.8109%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="75.5609%" y="581" width="0.1603%" height="15" fill="rgb(214,38,47)" fg:x="943" fg:w="2"/><text x="75.8109%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="75.7212%" y="677" width="0.1603%" height="15" fill="rgb(244,180,16)" fg:x="945" fg:w="2"/><text x="75.9712%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.8013%" y="661" width="0.0801%" height="15" fill="rgb(252,21,32)" fg:x="946" fg:w="1"/><text x="76.0513%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9615%" y="645" width="0.0801%" height="15" fill="rgb(245,218,31)" fg:x="948" fg:w="1"/><text x="76.2115%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9615%" y="629" width="0.0801%" height="15" fill="rgb(247,81,18)" fg:x="948" fg:w="1"/><text x="76.2115%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9615%" y="613" width="0.0801%" height="15" fill="rgb(220,151,1)" fg:x="948" fg:w="1"/><text x="76.2115%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1218%" y="597" width="0.0801%" height="15" fill="rgb(211,157,11)" fg:x="950" fg:w="1"/><text x="76.3718%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1218%" y="581" width="0.0801%" height="15" fill="rgb(239,46,30)" fg:x="950" fg:w="1"/><text x="76.3718%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1218%" y="565" width="0.0801%" height="15" fill="rgb(236,144,43)" fg:x="950" fg:w="1"/><text x="76.3718%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.2019%" y="565" width="0.1603%" height="15" fill="rgb(206,71,45)" fg:x="951" fg:w="2"/><text x="76.4519%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.2019%" y="549" width="0.1603%" height="15" fill="rgb(240,85,31)" fg:x="951" fg:w="2"/><text x="76.4519%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.2821%" y="533" width="0.0801%" height="15" fill="rgb(221,43,52)" fg:x="952" fg:w="1"/><text x="76.5321%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.3622%" y="549" width="0.0801%" height="15" fill="rgb(243,106,22)" fg:x="953" fg:w="1"/><text x="76.6122%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3622%" y="533" width="0.0801%" height="15" fill="rgb(209,138,38)" fg:x="953" fg:w="1"/><text x="76.6122%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="76.2019%" y="581" width="0.3205%" height="15" fill="rgb(216,63,40)" fg:x="951" fg:w="4"/><text x="76.4519%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="76.3622%" y="565" width="0.1603%" height="15" fill="rgb(206,115,21)" fg:x="953" fg:w="2"/><text x="76.6122%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4423%" y="549" width="0.0801%" height="15" fill="rgb(235,53,44)" fg:x="954" fg:w="1"/><text x="76.6923%" y="559.50"></text></g><g><title>engine::session::Session::flush (37 samples, 2.96%)</title><rect x="73.6378%" y="789" width="2.9647%" height="15" fill="rgb(244,160,14)" fg:x="919" fg:w="37"/><text x="73.8878%" y="799.50">eng..</text></g><g><title>engine::session::Session::save_changes (36 samples, 2.88%)</title><rect x="73.7179%" y="773" width="2.8846%" height="15" fill="rgb(223,16,19)" fg:x="920" fg:w="36"/><text x="73.9679%" y="783.50">en..</text></g><g><title>engine::session::state::State::close (35 samples, 2.80%)</title><rect x="73.7981%" y="757" width="2.8045%" height="15" fill="rgb(242,63,42)" fg:x="921" fg:w="35"/><text x="74.0481%" y="767.50">en..</text></g><g><title>engine::session::state::State::flush_entities (35 samples, 2.80%)</title><rect x="73.7981%" y="741" width="2.8045%" height="15" fill="rgb(209,66,49)" fg:x="921" fg:w="35"/><text x="74.0481%" y="751.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (34 samples, 2.72%)</title><rect x="73.8782%" y="725" width="2.7244%" height="15" fill="rgb(207,126,46)" fg:x="922" fg:w="34"/><text x="74.1282%" y="735.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (33 samples, 2.64%)</title><rect x="73.9583%" y="709" width="2.6442%" height="15" fill="rgb(218,160,41)" fg:x="923" fg:w="33"/><text x="74.2083%" y="719.50">en..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.88%)</title><rect x="75.7212%" y="693" width="0.8814%" height="15" fill="rgb(234,125,46)" fg:x="945" fg:w="11"/><text x="75.9712%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="75.8814%" y="677" width="0.7212%" height="15" fill="rgb(205,66,36)" fg:x="947" fg:w="9"/><text x="76.1314%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="75.8814%" y="661" width="0.7212%" height="15" fill="rgb(220,135,16)" fg:x="947" fg:w="9"/><text x="76.1314%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="76.0417%" y="645" width="0.5609%" height="15" fill="rgb(214,217,54)" fg:x="949" fg:w="7"/><text x="76.2917%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="76.0417%" y="629" width="0.5609%" height="15" fill="rgb(206,30,9)" fg:x="949" fg:w="7"/><text x="76.2917%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="76.1218%" y="613" width="0.4808%" height="15" fill="rgb(207,196,5)" fg:x="950" fg:w="6"/><text x="76.3718%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="76.2019%" y="597" width="0.4006%" height="15" fill="rgb(227,116,12)" fg:x="951" fg:w="5"/><text x="76.4519%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5224%" y="581" width="0.0801%" height="15" fill="rgb(235,227,13)" fg:x="955" fg:w="1"/><text x="76.7724%" y="591.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="76.6026%" y="773" width="0.0801%" height="15" fill="rgb(238,212,29)" fg:x="956" fg:w="1"/><text x="76.8526%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="76.6026%" y="789" width="0.1603%" height="15" fill="rgb(230,152,17)" fg:x="956" fg:w="2"/><text x="76.8526%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="76.6827%" y="773" width="0.0801%" height="15" fill="rgb(220,197,1)" fg:x="957" fg:w="1"/><text x="76.9327%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.6827%" y="757" width="0.0801%" height="15" fill="rgb(229,227,40)" fg:x="957" fg:w="1"/><text x="76.9327%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.6827%" y="741" width="0.0801%" height="15" fill="rgb(227,179,16)" fg:x="957" fg:w="1"/><text x="76.9327%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.6827%" y="725" width="0.0801%" height="15" fill="rgb(246,116,44)" fg:x="957" fg:w="1"/><text x="76.9327%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6827%" y="709" width="0.0801%" height="15" fill="rgb(205,191,4)" fg:x="957" fg:w="1"/><text x="76.9327%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.6827%" y="693" width="0.0801%" height="15" fill="rgb(245,69,19)" fg:x="957" fg:w="1"/><text x="76.9327%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7628%" y="725" width="0.0801%" height="15" fill="rgb(230,29,26)" fg:x="958" fg:w="1"/><text x="77.0128%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7628%" y="709" width="0.0801%" height="15" fill="rgb(239,192,26)" fg:x="958" fg:w="1"/><text x="77.0128%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7628%" y="693" width="0.0801%" height="15" fill="rgb(219,92,16)" fg:x="958" fg:w="1"/><text x="77.0128%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7628%" y="677" width="0.0801%" height="15" fill="rgb(246,147,43)" fg:x="958" fg:w="1"/><text x="77.0128%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7628%" y="661" width="0.0801%" height="15" fill="rgb(222,147,11)" fg:x="958" fg:w="1"/><text x="77.0128%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.7628%" y="645" width="0.0801%" height="15" fill="rgb(243,71,8)" fg:x="958" fg:w="1"/><text x="77.0128%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.7628%" y="629" width="0.0801%" height="15" fill="rgb(250,36,12)" fg:x="958" fg:w="1"/><text x="77.0128%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.7628%" y="613" width="0.0801%" height="15" fill="rgb(207,168,14)" fg:x="958" fg:w="1"/><text x="77.0128%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.7628%" y="597" width="0.0801%" height="15" fill="rgb(254,210,51)" fg:x="958" fg:w="1"/><text x="77.0128%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.7628%" y="581" width="0.0801%" height="15" fill="rgb(236,152,38)" fg:x="958" fg:w="1"/><text x="77.0128%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.7628%" y="565" width="0.0801%" height="15" fill="rgb(240,164,36)" fg:x="958" fg:w="1"/><text x="77.0128%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.7628%" y="549" width="0.0801%" height="15" fill="rgb(210,171,36)" fg:x="958" fg:w="1"/><text x="77.0128%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.7628%" y="533" width="0.0801%" height="15" fill="rgb(254,156,34)" fg:x="958" fg:w="1"/><text x="77.0128%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.7628%" y="517" width="0.0801%" height="15" fill="rgb(216,204,23)" fg:x="958" fg:w="1"/><text x="77.0128%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7628%" y="501" width="0.0801%" height="15" fill="rgb(230,75,38)" fg:x="958" fg:w="1"/><text x="77.0128%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.8429%" y="661" width="0.0801%" height="15" fill="rgb(248,197,25)" fg:x="959" fg:w="1"/><text x="77.0929%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="76.7628%" y="757" width="0.3205%" height="15" fill="rgb(234,121,26)" fg:x="958" fg:w="4"/><text x="77.0128%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="76.7628%" y="741" width="0.3205%" height="15" fill="rgb(220,41,36)" fg:x="958" fg:w="4"/><text x="77.0128%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="76.8429%" y="725" width="0.2404%" height="15" fill="rgb(227,33,32)" fg:x="959" fg:w="3"/><text x="77.0929%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.8429%" y="709" width="0.2404%" height="15" fill="rgb(208,214,54)" fg:x="959" fg:w="3"/><text x="77.0929%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="76.8429%" y="693" width="0.2404%" height="15" fill="rgb(205,37,38)" fg:x="959" fg:w="3"/><text x="77.0929%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.8429%" y="677" width="0.2404%" height="15" fill="rgb(252,2,0)" fg:x="959" fg:w="3"/><text x="77.0929%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.9231%" y="661" width="0.1603%" height="15" fill="rgb(212,171,10)" fg:x="960" fg:w="2"/><text x="77.1731%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.9231%" y="645" width="0.1603%" height="15" fill="rgb(239,35,46)" fg:x="960" fg:w="2"/><text x="77.1731%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0032%" y="629" width="0.0801%" height="15" fill="rgb(209,34,42)" fg:x="961" fg:w="1"/><text x="77.2532%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="77.0833%" y="757" width="0.0801%" height="15" fill="rgb(237,9,4)" fg:x="962" fg:w="1"/><text x="77.3333%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.0833%" y="741" width="0.0801%" height="15" fill="rgb(254,55,38)" fg:x="962" fg:w="1"/><text x="77.3333%" y="751.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="77.1635%" y="709" width="0.1603%" height="15" fill="rgb(222,95,29)" fg:x="963" fg:w="2"/><text x="77.4135%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.2436%" y="693" width="0.0801%" height="15" fill="rgb(241,218,37)" fg:x="964" fg:w="1"/><text x="77.4936%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2436%" y="677" width="0.0801%" height="15" fill="rgb(225,89,28)" fg:x="964" fg:w="1"/><text x="77.4936%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.2436%" y="661" width="0.0801%" height="15" fill="rgb(231,17,25)" fg:x="964" fg:w="1"/><text x="77.4936%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2436%" y="645" width="0.0801%" height="15" fill="rgb(206,216,48)" fg:x="964" fg:w="1"/><text x="77.4936%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.2436%" y="629" width="0.0801%" height="15" fill="rgb(247,190,28)" fg:x="964" fg:w="1"/><text x="77.4936%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2436%" y="613" width="0.0801%" height="15" fill="rgb(216,196,12)" fg:x="964" fg:w="1"/><text x="77.4936%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="76.7628%" y="773" width="0.6410%" height="15" fill="rgb(232,114,19)" fg:x="958" fg:w="8"/><text x="77.0128%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="77.1635%" y="757" width="0.2404%" height="15" fill="rgb(240,60,14)" fg:x="963" fg:w="3"/><text x="77.4135%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="77.1635%" y="741" width="0.2404%" height="15" fill="rgb(250,108,9)" fg:x="963" fg:w="3"/><text x="77.4135%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="77.1635%" y="725" width="0.2404%" height="15" fill="rgb(227,228,21)" fg:x="963" fg:w="3"/><text x="77.4135%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.3237%" y="709" width="0.0801%" height="15" fill="rgb(254,16,52)" fg:x="965" fg:w="1"/><text x="77.5737%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.4038%" y="757" width="0.0801%" height="15" fill="rgb(222,58,2)" fg:x="966" fg:w="1"/><text x="77.6538%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.4038%" y="741" width="0.0801%" height="15" fill="rgb(253,68,14)" fg:x="966" fg:w="1"/><text x="77.6538%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.4038%" y="725" width="0.0801%" height="15" fill="rgb(226,96,17)" fg:x="966" fg:w="1"/><text x="77.6538%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.4038%" y="709" width="0.0801%" height="15" fill="rgb(227,199,2)" fg:x="966" fg:w="1"/><text x="77.6538%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4038%" y="693" width="0.0801%" height="15" fill="rgb(228,227,48)" fg:x="966" fg:w="1"/><text x="77.6538%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4038%" y="677" width="0.0801%" height="15" fill="rgb(249,183,0)" fg:x="966" fg:w="1"/><text x="77.6538%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4038%" y="661" width="0.0801%" height="15" fill="rgb(250,89,38)" fg:x="966" fg:w="1"/><text x="77.6538%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.4840%" y="757" width="0.0801%" height="15" fill="rgb(240,227,8)" fg:x="967" fg:w="1"/><text x="77.7340%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="77.4840%" y="741" width="0.0801%" height="15" fill="rgb(242,197,35)" fg:x="967" fg:w="1"/><text x="77.7340%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.4840%" y="725" width="0.0801%" height="15" fill="rgb(224,37,41)" fg:x="967" fg:w="1"/><text x="77.7340%" y="735.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="77.4840%" y="709" width="0.0801%" height="15" fill="rgb(236,127,7)" fg:x="967" fg:w="1"/><text x="77.7340%" y="719.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.4840%" y="693" width="0.0801%" height="15" fill="rgb(230,62,52)" fg:x="967" fg:w="1"/><text x="77.7340%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.5641%" y="709" width="0.1603%" height="15" fill="rgb(235,114,23)" fg:x="968" fg:w="2"/><text x="77.8141%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.5641%" y="693" width="0.1603%" height="15" fill="rgb(211,55,40)" fg:x="968" fg:w="2"/><text x="77.8141%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.6442%" y="677" width="0.0801%" height="15" fill="rgb(228,123,1)" fg:x="969" fg:w="1"/><text x="77.8942%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.6442%" y="661" width="0.0801%" height="15" fill="rgb(244,208,8)" fg:x="969" fg:w="1"/><text x="77.8942%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.6442%" y="645" width="0.0801%" height="15" fill="rgb(237,118,14)" fg:x="969" fg:w="1"/><text x="77.8942%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.6442%" y="629" width="0.0801%" height="15" fill="rgb(219,170,13)" fg:x="969" fg:w="1"/><text x="77.8942%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.6442%" y="613" width="0.0801%" height="15" fill="rgb(212,39,43)" fg:x="969" fg:w="1"/><text x="77.8942%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.6442%" y="597" width="0.0801%" height="15" fill="rgb(244,191,2)" fg:x="969" fg:w="1"/><text x="77.8942%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.6442%" y="581" width="0.0801%" height="15" fill="rgb(219,201,46)" fg:x="969" fg:w="1"/><text x="77.8942%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.6442%" y="565" width="0.0801%" height="15" fill="rgb(218,82,7)" fg:x="969" fg:w="1"/><text x="77.8942%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.6442%" y="549" width="0.0801%" height="15" fill="rgb(208,192,8)" fg:x="969" fg:w="1"/><text x="77.8942%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.6442%" y="533" width="0.0801%" height="15" fill="rgb(244,54,32)" fg:x="969" fg:w="1"/><text x="77.8942%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.6442%" y="517" width="0.0801%" height="15" fill="rgb(240,43,52)" fg:x="969" fg:w="1"/><text x="77.8942%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.6442%" y="501" width="0.0801%" height="15" fill="rgb(233,134,29)" fg:x="969" fg:w="1"/><text x="77.8942%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.6442%" y="485" width="0.0801%" height="15" fill="rgb(236,128,10)" fg:x="969" fg:w="1"/><text x="77.8942%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.6442%" y="469" width="0.0801%" height="15" fill="rgb(207,46,54)" fg:x="969" fg:w="1"/><text x="77.8942%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6442%" y="453" width="0.0801%" height="15" fill="rgb(248,140,35)" fg:x="969" fg:w="1"/><text x="77.8942%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.7244%" y="549" width="0.0801%" height="15" fill="rgb(241,103,35)" fg:x="970" fg:w="1"/><text x="77.9744%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.7244%" y="533" width="0.0801%" height="15" fill="rgb(223,19,48)" fg:x="970" fg:w="1"/><text x="77.9744%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.7244%" y="517" width="0.0801%" height="15" fill="rgb(238,177,46)" fg:x="970" fg:w="1"/><text x="77.9744%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.7244%" y="501" width="0.0801%" height="15" fill="rgb(213,102,15)" fg:x="970" fg:w="1"/><text x="77.9744%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.7244%" y="485" width="0.0801%" height="15" fill="rgb(254,135,52)" fg:x="970" fg:w="1"/><text x="77.9744%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.7244%" y="469" width="0.0801%" height="15" fill="rgb(240,59,6)" fg:x="970" fg:w="1"/><text x="77.9744%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7244%" y="453" width="0.0801%" height="15" fill="rgb(207,226,5)" fg:x="970" fg:w="1"/><text x="77.9744%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.7244%" y="677" width="0.1603%" height="15" fill="rgb(208,167,17)" fg:x="970" fg:w="2"/><text x="77.9744%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.7244%" y="661" width="0.1603%" height="15" fill="rgb(254,94,10)" fg:x="970" fg:w="2"/><text x="77.9744%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.7244%" y="645" width="0.1603%" height="15" fill="rgb(229,33,11)" fg:x="970" fg:w="2"/><text x="77.9744%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="77.7244%" y="629" width="0.1603%" height="15" fill="rgb(249,145,48)" fg:x="970" fg:w="2"/><text x="77.9744%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="77.7244%" y="613" width="0.1603%" height="15" fill="rgb(253,68,54)" fg:x="970" fg:w="2"/><text x="77.9744%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="77.7244%" y="597" width="0.1603%" height="15" fill="rgb(223,27,42)" fg:x="970" fg:w="2"/><text x="77.9744%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="77.7244%" y="581" width="0.1603%" height="15" fill="rgb(235,123,13)" fg:x="970" fg:w="2"/><text x="77.9744%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="77.7244%" y="565" width="0.1603%" height="15" fill="rgb(244,154,7)" fg:x="970" fg:w="2"/><text x="77.9744%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="77.8045%" y="549" width="0.0801%" height="15" fill="rgb(214,30,25)" fg:x="971" fg:w="1"/><text x="78.0545%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="77.8045%" y="533" width="0.0801%" height="15" fill="rgb(252,189,13)" fg:x="971" fg:w="1"/><text x="78.0545%" y="543.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="77.5641%" y="757" width="0.4006%" height="15" fill="rgb(234,27,40)" fg:x="968" fg:w="5"/><text x="77.8141%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="77.5641%" y="741" width="0.4006%" height="15" fill="rgb(252,199,25)" fg:x="968" fg:w="5"/><text x="77.8141%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="77.5641%" y="725" width="0.4006%" height="15" fill="rgb(234,207,20)" fg:x="968" fg:w="5"/><text x="77.8141%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="77.7244%" y="709" width="0.2404%" height="15" fill="rgb(244,220,10)" fg:x="970" fg:w="3"/><text x="77.9744%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="77.7244%" y="693" width="0.2404%" height="15" fill="rgb(247,68,23)" fg:x="970" fg:w="3"/><text x="77.9744%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8846%" y="677" width="0.0801%" height="15" fill="rgb(254,61,4)" fg:x="972" fg:w="1"/><text x="78.1346%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8846%" y="661" width="0.0801%" height="15" fill="rgb(245,208,35)" fg:x="972" fg:w="1"/><text x="78.1346%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.8846%" y="645" width="0.0801%" height="15" fill="rgb(235,90,11)" fg:x="972" fg:w="1"/><text x="78.1346%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8846%" y="629" width="0.0801%" height="15" fill="rgb(239,139,43)" fg:x="972" fg:w="1"/><text x="78.1346%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8846%" y="613" width="0.0801%" height="15" fill="rgb(209,187,9)" fg:x="972" fg:w="1"/><text x="78.1346%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8846%" y="597" width="0.0801%" height="15" fill="rgb(241,30,6)" fg:x="972" fg:w="1"/><text x="78.1346%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8846%" y="581" width="0.0801%" height="15" fill="rgb(216,104,1)" fg:x="972" fg:w="1"/><text x="78.1346%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="77.9647%" y="741" width="0.0801%" height="15" fill="rgb(238,55,39)" fg:x="973" fg:w="1"/><text x="78.2147%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="77.9647%" y="725" width="0.0801%" height="15" fill="rgb(226,151,41)" fg:x="973" fg:w="1"/><text x="78.2147%" y="735.50"></text></g><g><title>plugins_core::build::Build::holding (17 samples, 1.36%)</title><rect x="76.7628%" y="789" width="1.3622%" height="15" fill="rgb(228,73,40)" fg:x="958" fg:w="17"/><text x="77.0128%" y="799.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="77.4038%" y="773" width="0.7212%" height="15" fill="rgb(215,81,0)" fg:x="966" fg:w="9"/><text x="77.6538%" y="783.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="77.9647%" y="757" width="0.1603%" height="15" fill="rgb(209,52,39)" fg:x="973" fg:w="2"/><text x="78.2147%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="78.0449%" y="741" width="0.0801%" height="15" fill="rgb(221,127,5)" fg:x="974" fg:w="1"/><text x="78.2949%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.0449%" y="725" width="0.0801%" height="15" fill="rgb(213,215,6)" fg:x="974" fg:w="1"/><text x="78.2949%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="78.1250%" y="757" width="0.0801%" height="15" fill="rgb(214,118,13)" fg:x="975" fg:w="1"/><text x="78.3750%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.1250%" y="741" width="0.0801%" height="15" fill="rgb(207,205,41)" fg:x="975" fg:w="1"/><text x="78.3750%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.1250%" y="725" width="0.0801%" height="15" fill="rgb(218,208,45)" fg:x="975" fg:w="1"/><text x="78.3750%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.1250%" y="709" width="0.0801%" height="15" fill="rgb(244,81,54)" fg:x="975" fg:w="1"/><text x="78.3750%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.1250%" y="693" width="0.0801%" height="15" fill="rgb(244,175,1)" fg:x="975" fg:w="1"/><text x="78.3750%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.1250%" y="677" width="0.0801%" height="15" fill="rgb(232,128,28)" fg:x="975" fg:w="1"/><text x="78.3750%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.1250%" y="661" width="0.0801%" height="15" fill="rgb(234,83,13)" fg:x="975" fg:w="1"/><text x="78.3750%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="78.1250%" y="789" width="0.1603%" height="15" fill="rgb(233,222,35)" fg:x="975" fg:w="2"/><text x="78.3750%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="78.1250%" y="773" width="0.1603%" height="15" fill="rgb(244,204,21)" fg:x="975" fg:w="2"/><text x="78.3750%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.2051%" y="757" width="0.0801%" height="15" fill="rgb(225,121,40)" fg:x="976" fg:w="1"/><text x="78.4551%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2051%" y="741" width="0.0801%" height="15" fill="rgb(231,89,18)" fg:x="976" fg:w="1"/><text x="78.4551%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2051%" y="725" width="0.0801%" height="15" fill="rgb(205,41,50)" fg:x="976" fg:w="1"/><text x="78.4551%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2051%" y="709" width="0.0801%" height="15" fill="rgb(254,25,22)" fg:x="976" fg:w="1"/><text x="78.4551%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2051%" y="693" width="0.0801%" height="15" fill="rgb(208,44,21)" fg:x="976" fg:w="1"/><text x="78.4551%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.2051%" y="677" width="0.0801%" height="15" fill="rgb(237,59,53)" fg:x="976" fg:w="1"/><text x="78.4551%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="78.2853%" y="773" width="0.0801%" height="15" fill="rgb(233,24,36)" fg:x="977" fg:w="1"/><text x="78.5353%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="78.2853%" y="757" width="0.0801%" height="15" fill="rgb(216,92,41)" fg:x="977" fg:w="1"/><text x="78.5353%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="78.2853%" y="741" width="0.0801%" height="15" fill="rgb(225,158,49)" fg:x="977" fg:w="1"/><text x="78.5353%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.2853%" y="725" width="0.0801%" height="15" fill="rgb(244,11,16)" fg:x="977" fg:w="1"/><text x="78.5353%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.2853%" y="709" width="0.0801%" height="15" fill="rgb(208,215,38)" fg:x="977" fg:w="1"/><text x="78.5353%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="78.2853%" y="693" width="0.0801%" height="15" fill="rgb(250,69,53)" fg:x="977" fg:w="1"/><text x="78.5353%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.3654%" y="725" width="0.0801%" height="15" fill="rgb(240,187,52)" fg:x="978" fg:w="1"/><text x="78.6154%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.3654%" y="709" width="0.0801%" height="15" fill="rgb(235,22,25)" fg:x="978" fg:w="1"/><text x="78.6154%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3654%" y="693" width="0.0801%" height="15" fill="rgb(213,173,22)" fg:x="978" fg:w="1"/><text x="78.6154%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3654%" y="677" width="0.0801%" height="15" fill="rgb(218,47,0)" fg:x="978" fg:w="1"/><text x="78.6154%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.3654%" y="661" width="0.0801%" height="15" fill="rgb(254,157,11)" fg:x="978" fg:w="1"/><text x="78.6154%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3654%" y="645" width="0.0801%" height="15" fill="rgb(233,154,6)" fg:x="978" fg:w="1"/><text x="78.6154%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3654%" y="629" width="0.0801%" height="15" fill="rgb(233,207,47)" fg:x="978" fg:w="1"/><text x="78.6154%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3654%" y="613" width="0.0801%" height="15" fill="rgb(249,128,18)" fg:x="978" fg:w="1"/><text x="78.6154%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4455%" y="693" width="0.0801%" height="15" fill="rgb(211,27,42)" fg:x="979" fg:w="1"/><text x="78.6955%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4455%" y="677" width="0.0801%" height="15" fill="rgb(240,163,26)" fg:x="979" fg:w="1"/><text x="78.6955%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4455%" y="661" width="0.0801%" height="15" fill="rgb(232,118,46)" fg:x="979" fg:w="1"/><text x="78.6955%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="78.3654%" y="757" width="0.2404%" height="15" fill="rgb(238,158,34)" fg:x="978" fg:w="3"/><text x="78.6154%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="78.3654%" y="741" width="0.2404%" height="15" fill="rgb(254,99,45)" fg:x="978" fg:w="3"/><text x="78.6154%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.4455%" y="725" width="0.1603%" height="15" fill="rgb(247,205,20)" fg:x="979" fg:w="2"/><text x="78.6955%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.4455%" y="709" width="0.1603%" height="15" fill="rgb(240,20,41)" fg:x="979" fg:w="2"/><text x="78.6955%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5256%" y="693" width="0.0801%" height="15" fill="rgb(231,22,43)" fg:x="980" fg:w="1"/><text x="78.7756%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="78.6058%" y="757" width="0.0801%" height="15" fill="rgb(207,86,33)" fg:x="981" fg:w="1"/><text x="78.8558%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.6058%" y="741" width="0.0801%" height="15" fill="rgb(231,148,5)" fg:x="981" fg:w="1"/><text x="78.8558%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.6058%" y="725" width="0.0801%" height="15" fill="rgb(253,77,28)" fg:x="981" fg:w="1"/><text x="78.8558%" y="735.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="78.6859%" y="741" width="0.0801%" height="15" fill="rgb(253,227,9)" fg:x="982" fg:w="1"/><text x="78.9359%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.6859%" y="725" width="0.0801%" height="15" fill="rgb(235,4,18)" fg:x="982" fg:w="1"/><text x="78.9359%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="78.6859%" y="757" width="0.1603%" height="15" fill="rgb(205,206,45)" fg:x="982" fg:w="2"/><text x="78.9359%" y="767.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7660%" y="741" width="0.0801%" height="15" fill="rgb(252,34,0)" fg:x="983" fg:w="1"/><text x="79.0160%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.7660%" y="725" width="0.0801%" height="15" fill="rgb(213,56,7)" fg:x="983" fg:w="1"/><text x="79.0160%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7660%" y="709" width="0.0801%" height="15" fill="rgb(227,74,29)" fg:x="983" fg:w="1"/><text x="79.0160%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.7660%" y="693" width="0.0801%" height="15" fill="rgb(221,32,48)" fg:x="983" fg:w="1"/><text x="79.0160%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.7660%" y="677" width="0.0801%" height="15" fill="rgb(230,205,25)" fg:x="983" fg:w="1"/><text x="79.0160%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.7660%" y="661" width="0.0801%" height="15" fill="rgb(215,110,9)" fg:x="983" fg:w="1"/><text x="79.0160%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="78.7660%" y="645" width="0.0801%" height="15" fill="rgb(245,220,47)" fg:x="983" fg:w="1"/><text x="79.0160%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.8462%" y="709" width="0.0801%" height="15" fill="rgb(224,117,5)" fg:x="984" fg:w="1"/><text x="79.0962%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.8462%" y="693" width="0.0801%" height="15" fill="rgb(242,208,25)" fg:x="984" fg:w="1"/><text x="79.0962%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8462%" y="677" width="0.0801%" height="15" fill="rgb(226,12,37)" fg:x="984" fg:w="1"/><text x="79.0962%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8462%" y="661" width="0.0801%" height="15" fill="rgb(224,221,22)" fg:x="984" fg:w="1"/><text x="79.0962%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8462%" y="645" width="0.0801%" height="15" fill="rgb(239,38,44)" fg:x="984" fg:w="1"/><text x="79.0962%" y="655.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (79 samples, 6.33%)</title><rect x="72.6763%" y="805" width="6.3301%" height="15" fill="rgb(218,25,46)" fg:x="907" fg:w="79"/><text x="72.9263%" y="815.50">plugins_..</text></g><g><title>plugins_core::build::Build::occupying (9 samples, 0.72%)</title><rect x="78.2853%" y="789" width="0.7212%" height="15" fill="rgb(206,137,51)" fg:x="977" fg:w="9"/><text x="78.5353%" y="799.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="78.3654%" y="773" width="0.6410%" height="15" fill="rgb(233,174,3)" fg:x="978" fg:w="8"/><text x="78.6154%" y="783.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="78.8462%" y="757" width="0.1603%" height="15" fill="rgb(207,224,43)" fg:x="984" fg:w="2"/><text x="79.0962%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="78.8462%" y="741" width="0.1603%" height="15" fill="rgb(230,46,27)" fg:x="984" fg:w="2"/><text x="79.0962%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="78.8462%" y="725" width="0.1603%" height="15" fill="rgb(251,215,32)" fg:x="984" fg:w="2"/><text x="79.0962%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.9263%" y="709" width="0.0801%" height="15" fill="rgb(244,219,19)" fg:x="985" fg:w="1"/><text x="79.1763%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.9263%" y="693" width="0.0801%" height="15" fill="rgb(242,125,36)" fg:x="985" fg:w="1"/><text x="79.1763%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9263%" y="677" width="0.0801%" height="15" fill="rgb(251,211,12)" fg:x="985" fg:w="1"/><text x="79.1763%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9263%" y="661" width="0.0801%" height="15" fill="rgb(209,179,33)" fg:x="985" fg:w="1"/><text x="79.1763%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9263%" y="645" width="0.0801%" height="15" fill="rgb(205,161,48)" fg:x="985" fg:w="1"/><text x="79.1763%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="79.0064%" y="757" width="0.0801%" height="15" fill="rgb(241,139,8)" fg:x="986" fg:w="1"/><text x="79.2564%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.0064%" y="741" width="0.0801%" height="15" fill="rgb(246,159,53)" fg:x="986" fg:w="1"/><text x="79.2564%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.0064%" y="725" width="0.0801%" height="15" fill="rgb(212,62,27)" fg:x="986" fg:w="1"/><text x="79.2564%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.0064%" y="709" width="0.0801%" height="15" fill="rgb(216,168,18)" fg:x="986" fg:w="1"/><text x="79.2564%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.0064%" y="693" width="0.0801%" height="15" fill="rgb(228,136,50)" fg:x="986" fg:w="1"/><text x="79.2564%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.08%)</title><rect x="79.0064%" y="677" width="0.0801%" height="15" fill="rgb(237,19,45)" fg:x="986" fg:w="1"/><text x="79.2564%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.08%)</title><rect x="79.0064%" y="661" width="0.0801%" height="15" fill="rgb(249,150,28)" fg:x="986" fg:w="1"/><text x="79.2564%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="79.0865%" y="725" width="0.0801%" height="15" fill="rgb(236,179,39)" fg:x="987" fg:w="1"/><text x="79.3365%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.0865%" y="709" width="0.0801%" height="15" fill="rgb(250,113,27)" fg:x="987" fg:w="1"/><text x="79.3365%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.0865%" y="693" width="0.0801%" height="15" fill="rgb(223,13,14)" fg:x="987" fg:w="1"/><text x="79.3365%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.0865%" y="677" width="0.0801%" height="15" fill="rgb(226,68,24)" fg:x="987" fg:w="1"/><text x="79.3365%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.0865%" y="661" width="0.0801%" height="15" fill="rgb(239,40,50)" fg:x="987" fg:w="1"/><text x="79.3365%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.0865%" y="645" width="0.0801%" height="15" fill="rgb(209,187,0)" fg:x="987" fg:w="1"/><text x="79.3365%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.0865%" y="629" width="0.0801%" height="15" fill="rgb(240,61,8)" fg:x="987" fg:w="1"/><text x="79.3365%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="79.0064%" y="773" width="0.2404%" height="15" fill="rgb(236,137,5)" fg:x="986" fg:w="3"/><text x="79.2564%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="79.0865%" y="757" width="0.1603%" height="15" fill="rgb(247,214,21)" fg:x="987" fg:w="2"/><text x="79.3365%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="79.0865%" y="741" width="0.1603%" height="15" fill="rgb(244,115,25)" fg:x="987" fg:w="2"/><text x="79.3365%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="79.1667%" y="725" width="0.0801%" height="15" fill="rgb(230,58,38)" fg:x="988" fg:w="1"/><text x="79.4167%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.1667%" y="709" width="0.0801%" height="15" fill="rgb(206,122,6)" fg:x="988" fg:w="1"/><text x="79.4167%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.1667%" y="693" width="0.0801%" height="15" fill="rgb(217,135,53)" fg:x="988" fg:w="1"/><text x="79.4167%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.1667%" y="677" width="0.0801%" height="15" fill="rgb(225,120,8)" fg:x="988" fg:w="1"/><text x="79.4167%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.1667%" y="661" width="0.0801%" height="15" fill="rgb(226,3,30)" fg:x="988" fg:w="1"/><text x="79.4167%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.1667%" y="645" width="0.0801%" height="15" fill="rgb(214,159,38)" fg:x="988" fg:w="1"/><text x="79.4167%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="79.1667%" y="629" width="0.0801%" height="15" fill="rgb(242,182,47)" fg:x="988" fg:w="1"/><text x="79.4167%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.1667%" y="613" width="0.0801%" height="15" fill="rgb(245,202,26)" fg:x="988" fg:w="1"/><text x="79.4167%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="79.2468%" y="757" width="0.1603%" height="15" fill="rgb(226,163,3)" fg:x="989" fg:w="2"/><text x="79.4968%" y="767.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="79.2468%" y="741" width="0.1603%" height="15" fill="rgb(219,4,4)" fg:x="989" fg:w="2"/><text x="79.4968%" y="751.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="79.3269%" y="725" width="0.0801%" height="15" fill="rgb(223,85,4)" fg:x="990" fg:w="1"/><text x="79.5769%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3269%" y="709" width="0.0801%" height="15" fill="rgb(242,170,11)" fg:x="990" fg:w="1"/><text x="79.5769%" y="719.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="79.0064%" y="805" width="0.4808%" height="15" fill="rgb(221,97,42)" fg:x="986" fg:w="6"/><text x="79.2564%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="79.0064%" y="789" width="0.4808%" height="15" fill="rgb(231,206,45)" fg:x="986" fg:w="6"/><text x="79.2564%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="79.2468%" y="773" width="0.2404%" height="15" fill="rgb(216,23,48)" fg:x="989" fg:w="3"/><text x="79.4968%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="79.4071%" y="757" width="0.0801%" height="15" fill="rgb(225,49,9)" fg:x="991" fg:w="1"/><text x="79.6571%" y="767.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="79.4071%" y="741" width="0.0801%" height="15" fill="rgb(247,24,47)" fg:x="991" fg:w="1"/><text x="79.6571%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.4071%" y="725" width="0.0801%" height="15" fill="rgb(253,145,10)" fg:x="991" fg:w="1"/><text x="79.6571%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.4071%" y="709" width="0.0801%" height="15" fill="rgb(206,62,10)" fg:x="991" fg:w="1"/><text x="79.6571%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.4071%" y="693" width="0.0801%" height="15" fill="rgb(224,159,31)" fg:x="991" fg:w="1"/><text x="79.6571%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="79.4872%" y="773" width="0.1603%" height="15" fill="rgb(234,184,15)" fg:x="992" fg:w="2"/><text x="79.7372%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="79.5673%" y="757" width="0.0801%" height="15" fill="rgb(237,101,1)" fg:x="993" fg:w="1"/><text x="79.8173%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="79.5673%" y="741" width="0.0801%" height="15" fill="rgb(211,99,29)" fg:x="993" fg:w="1"/><text x="79.8173%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.5673%" y="725" width="0.0801%" height="15" fill="rgb(250,167,3)" fg:x="993" fg:w="1"/><text x="79.8173%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.5673%" y="709" width="0.0801%" height="15" fill="rgb(225,58,6)" fg:x="993" fg:w="1"/><text x="79.8173%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.6474%" y="773" width="0.1603%" height="15" fill="rgb(251,161,21)" fg:x="994" fg:w="2"/><text x="79.8974%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.6474%" y="757" width="0.1603%" height="15" fill="rgb(253,203,35)" fg:x="994" fg:w="2"/><text x="79.8974%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.6474%" y="741" width="0.1603%" height="15" fill="rgb(214,220,52)" fg:x="994" fg:w="2"/><text x="79.8974%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.7276%" y="725" width="0.0801%" height="15" fill="rgb(235,216,33)" fg:x="995" fg:w="1"/><text x="79.9776%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.7276%" y="709" width="0.0801%" height="15" fill="rgb(231,79,26)" fg:x="995" fg:w="1"/><text x="79.9776%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.7276%" y="693" width="0.0801%" height="15" fill="rgb(244,218,10)" fg:x="995" fg:w="1"/><text x="79.9776%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="79.7276%" y="677" width="0.0801%" height="15" fill="rgb(238,15,9)" fg:x="995" fg:w="1"/><text x="79.9776%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="79.8077%" y="773" width="0.0801%" height="15" fill="rgb(235,112,15)" fg:x="996" fg:w="1"/><text x="80.0577%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="79.8077%" y="757" width="0.0801%" height="15" fill="rgb(239,126,18)" fg:x="996" fg:w="1"/><text x="80.0577%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="79.8077%" y="741" width="0.0801%" height="15" fill="rgb(253,171,19)" fg:x="996" fg:w="1"/><text x="80.0577%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.8077%" y="725" width="0.0801%" height="15" fill="rgb(237,218,25)" fg:x="996" fg:w="1"/><text x="80.0577%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.8077%" y="709" width="0.0801%" height="15" fill="rgb(213,88,46)" fg:x="996" fg:w="1"/><text x="80.0577%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.8077%" y="693" width="0.0801%" height="15" fill="rgb(222,124,54)" fg:x="996" fg:w="1"/><text x="80.0577%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.8077%" y="677" width="0.0801%" height="15" fill="rgb(209,206,42)" fg:x="996" fg:w="1"/><text x="80.0577%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.8077%" y="661" width="0.0801%" height="15" fill="rgb(219,25,49)" fg:x="996" fg:w="1"/><text x="80.0577%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="79.4872%" y="789" width="0.4808%" height="15" fill="rgb(228,207,53)" fg:x="992" fg:w="6"/><text x="79.7372%" y="799.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="79.8878%" y="773" width="0.0801%" height="15" fill="rgb(224,3,4)" fg:x="997" fg:w="1"/><text x="80.1378%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8878%" y="757" width="0.0801%" height="15" fill="rgb(254,206,26)" fg:x="997" fg:w="1"/><text x="80.1378%" y="767.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="79.4872%" y="805" width="0.5609%" height="15" fill="rgb(209,4,26)" fg:x="992" fg:w="7"/><text x="79.7372%" y="815.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="79.9679%" y="789" width="0.0801%" height="15" fill="rgb(243,193,32)" fg:x="998" fg:w="1"/><text x="80.2179%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="79.9679%" y="773" width="0.0801%" height="15" fill="rgb(225,150,36)" fg:x="998" fg:w="1"/><text x="80.2179%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="79.9679%" y="757" width="0.0801%" height="15" fill="rgb(225,131,26)" fg:x="998" fg:w="1"/><text x="80.2179%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.9679%" y="741" width="0.0801%" height="15" fill="rgb(236,126,12)" fg:x="998" fg:w="1"/><text x="80.2179%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.9679%" y="725" width="0.0801%" height="15" fill="rgb(238,167,44)" fg:x="998" fg:w="1"/><text x="80.2179%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.9679%" y="709" width="0.0801%" height="15" fill="rgb(238,153,31)" fg:x="998" fg:w="1"/><text x="80.2179%" y="719.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (147 samples, 11.78%)</title><rect x="68.3494%" y="821" width="11.7788%" height="15" fill="rgb(254,41,51)" fg:x="853" fg:w="147"/><text x="68.5994%" y="831.50">&lt;tests::HoldingKe..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="80.0481%" y="805" width="0.0801%" height="15" fill="rgb(224,100,52)" fg:x="999" fg:w="1"/><text x="80.2981%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.0481%" y="789" width="0.0801%" height="15" fill="rgb(246,226,38)" fg:x="999" fg:w="1"/><text x="80.2981%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.0481%" y="773" width="0.0801%" height="15" fill="rgb(252,21,43)" fg:x="999" fg:w="1"/><text x="80.2981%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1282%" y="821" width="0.0801%" height="15" fill="rgb(250,44,8)" fg:x="1000" fg:w="1"/><text x="80.3782%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="80.2083%" y="821" width="0.0801%" height="15" fill="rgb(224,200,45)" fg:x="1001" fg:w="1"/><text x="80.4583%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="80.2083%" y="805" width="0.0801%" height="15" fill="rgb(208,75,52)" fg:x="1001" fg:w="1"/><text x="80.4583%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="80.2083%" y="789" width="0.0801%" height="15" fill="rgb(213,167,20)" fg:x="1001" fg:w="1"/><text x="80.4583%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.2083%" y="773" width="0.0801%" height="15" fill="rgb(236,163,42)" fg:x="1001" fg:w="1"/><text x="80.4583%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2083%" y="757" width="0.0801%" height="15" fill="rgb(210,98,31)" fg:x="1001" fg:w="1"/><text x="80.4583%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="80.2885%" y="805" width="0.1603%" height="15" fill="rgb(246,166,15)" fg:x="1002" fg:w="2"/><text x="80.5385%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.2885%" y="789" width="0.1603%" height="15" fill="rgb(214,114,7)" fg:x="1002" fg:w="2"/><text x="80.5385%" y="799.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="80.2885%" y="773" width="0.1603%" height="15" fill="rgb(217,202,34)" fg:x="1002" fg:w="2"/><text x="80.5385%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="80.6090%" y="757" width="0.0801%" height="15" fill="rgb(227,226,29)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="80.6090%" y="741" width="0.0801%" height="15" fill="rgb(254,65,44)" fg:x="1006" fg:w="1"/><text x="80.8590%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.6891%" y="741" width="0.0801%" height="15" fill="rgb(213,150,32)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.6891%" y="725" width="0.0801%" height="15" fill="rgb(208,86,46)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.6891%" y="709" width="0.0801%" height="15" fill="rgb(222,75,3)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.6891%" y="693" width="0.0801%" height="15" fill="rgb(225,213,9)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.6891%" y="677" width="0.0801%" height="15" fill="rgb(209,199,10)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.6891%" y="661" width="0.0801%" height="15" fill="rgb(213,18,17)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.6891%" y="645" width="0.0801%" height="15" fill="rgb(243,79,44)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.6891%" y="629" width="0.0801%" height="15" fill="rgb(226,20,5)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.6891%" y="613" width="0.0801%" height="15" fill="rgb(217,52,31)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.6891%" y="597" width="0.0801%" height="15" fill="rgb(229,42,7)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.6891%" y="581" width="0.0801%" height="15" fill="rgb(206,118,29)" fg:x="1007" fg:w="1"/><text x="80.9391%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="80.6090%" y="773" width="0.2404%" height="15" fill="rgb(248,132,44)" fg:x="1006" fg:w="3"/><text x="80.8590%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="80.6891%" y="757" width="0.1603%" height="15" fill="rgb(231,56,33)" fg:x="1007" fg:w="2"/><text x="80.9391%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.7692%" y="741" width="0.0801%" height="15" fill="rgb(208,31,11)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.7692%" y="725" width="0.0801%" height="15" fill="rgb(216,56,33)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.7692%" y="709" width="0.0801%" height="15" fill="rgb(213,100,0)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.7692%" y="693" width="0.0801%" height="15" fill="rgb(236,166,18)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.7692%" y="677" width="0.0801%" height="15" fill="rgb(251,132,12)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.7692%" y="661" width="0.0801%" height="15" fill="rgb(216,117,7)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.7692%" y="645" width="0.0801%" height="15" fill="rgb(243,184,8)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.7692%" y="629" width="0.0801%" height="15" fill="rgb(212,91,32)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.7692%" y="613" width="0.0801%" height="15" fill="rgb(224,147,15)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.7692%" y="597" width="0.0801%" height="15" fill="rgb(228,84,10)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.7692%" y="581" width="0.0801%" height="15" fill="rgb(221,161,22)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7692%" y="565" width="0.0801%" height="15" fill="rgb(250,132,20)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7692%" y="549" width="0.0801%" height="15" fill="rgb(209,161,12)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="80.7692%" y="533" width="0.0801%" height="15" fill="rgb(232,142,42)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="80.7692%" y="517" width="0.0801%" height="15" fill="rgb(240,228,27)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="80.7692%" y="501" width="0.0801%" height="15" fill="rgb(243,0,31)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="80.7692%" y="485" width="0.0801%" height="15" fill="rgb(237,100,15)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.7692%" y="469" width="0.0801%" height="15" fill="rgb(230,26,48)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.7692%" y="453" width="0.0801%" height="15" fill="rgb(215,7,13)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.7692%" y="437" width="0.0801%" height="15" fill="rgb(227,172,5)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="80.7692%" y="421" width="0.0801%" height="15" fill="rgb(248,206,14)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.7692%" y="405" width="0.0801%" height="15" fill="rgb(231,62,54)" fg:x="1008" fg:w="1"/><text x="81.0192%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="80.8494%" y="773" width="0.0801%" height="15" fill="rgb(222,136,26)" fg:x="1009" fg:w="1"/><text x="81.0994%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0096%" y="693" width="0.0801%" height="15" fill="rgb(211,115,42)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0096%" y="677" width="0.0801%" height="15" fill="rgb(234,5,17)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.0096%" y="661" width="0.0801%" height="15" fill="rgb(233,67,14)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.0096%" y="645" width="0.0801%" height="15" fill="rgb(225,133,51)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.0096%" y="629" width="0.0801%" height="15" fill="rgb(206,107,40)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.0096%" y="613" width="0.0801%" height="15" fill="rgb(210,56,9)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.0096%" y="597" width="0.0801%" height="15" fill="rgb(222,204,4)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.0096%" y="581" width="0.0801%" height="15" fill="rgb(210,168,3)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.0096%" y="565" width="0.0801%" height="15" fill="rgb(246,183,26)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.0096%" y="549" width="0.0801%" height="15" fill="rgb(228,27,31)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.0096%" y="533" width="0.0801%" height="15" fill="rgb(206,8,2)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0096%" y="517" width="0.0801%" height="15" fill="rgb(251,229,16)" fg:x="1011" fg:w="1"/><text x="81.2596%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="81.0096%" y="725" width="0.1603%" height="15" fill="rgb(208,84,44)" fg:x="1011" fg:w="2"/><text x="81.2596%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.0096%" y="709" width="0.1603%" height="15" fill="rgb(221,228,13)" fg:x="1011" fg:w="2"/><text x="81.2596%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0897%" y="693" width="0.0801%" height="15" fill="rgb(248,42,47)" fg:x="1012" fg:w="1"/><text x="81.3397%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0897%" y="677" width="0.0801%" height="15" fill="rgb(222,124,41)" fg:x="1012" fg:w="1"/><text x="81.3397%" y="687.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="81.1699%" y="725" width="0.0801%" height="15" fill="rgb(244,191,35)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.1699%" y="709" width="0.0801%" height="15" fill="rgb(222,223,54)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="81.1699%" y="693" width="0.0801%" height="15" fill="rgb(248,178,42)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="81.1699%" y="677" width="0.0801%" height="15" fill="rgb(238,21,24)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="687.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="81.1699%" y="661" width="0.0801%" height="15" fill="rgb(227,134,7)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1699%" y="645" width="0.0801%" height="15" fill="rgb(205,191,1)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1699%" y="629" width="0.0801%" height="15" fill="rgb(222,166,30)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.1699%" y="613" width="0.0801%" height="15" fill="rgb(229,94,26)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.1699%" y="597" width="0.0801%" height="15" fill="rgb(246,97,2)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.1699%" y="581" width="0.0801%" height="15" fill="rgb(252,112,53)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1699%" y="565" width="0.0801%" height="15" fill="rgb(225,52,38)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1699%" y="549" width="0.0801%" height="15" fill="rgb(215,203,24)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.1699%" y="533" width="0.0801%" height="15" fill="rgb(210,122,52)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.1699%" y="517" width="0.0801%" height="15" fill="rgb(209,161,44)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.1699%" y="501" width="0.0801%" height="15" fill="rgb(221,97,16)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.1699%" y="485" width="0.0801%" height="15" fill="rgb(209,87,13)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1699%" y="469" width="0.0801%" height="15" fill="rgb(242,1,21)" fg:x="1013" fg:w="1"/><text x="81.4199%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (11 samples, 0.88%)</title><rect x="80.4487%" y="789" width="0.8814%" height="15" fill="rgb(251,170,41)" fg:x="1004" fg:w="11"/><text x="80.6987%" y="799.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (5 samples, 0.40%)</title><rect x="80.9295%" y="773" width="0.4006%" height="15" fill="rgb(227,201,10)" fg:x="1010" fg:w="5"/><text x="81.1795%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="80.9295%" y="757" width="0.4006%" height="15" fill="rgb(231,100,29)" fg:x="1010" fg:w="5"/><text x="81.1795%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="80.9295%" y="741" width="0.4006%" height="15" fill="rgb(226,31,35)" fg:x="1010" fg:w="5"/><text x="81.1795%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2500%" y="725" width="0.0801%" height="15" fill="rgb(254,99,26)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2500%" y="709" width="0.0801%" height="15" fill="rgb(217,228,17)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="81.2500%" y="693" width="0.0801%" height="15" fill="rgb(226,132,8)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="703.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="81.2500%" y="677" width="0.0801%" height="15" fill="rgb(220,202,47)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="687.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="81.2500%" y="661" width="0.0801%" height="15" fill="rgb(245,194,10)" fg:x="1014" fg:w="1"/><text x="81.5000%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="81.3301%" y="789" width="0.0801%" height="15" fill="rgb(225,44,52)" fg:x="1015" fg:w="1"/><text x="81.5801%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.4103%" y="773" width="0.0801%" height="15" fill="rgb(235,10,4)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="81.4103%" y="757" width="0.0801%" height="15" fill="rgb(244,32,23)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4103%" y="741" width="0.0801%" height="15" fill="rgb(210,115,0)" fg:x="1016" fg:w="1"/><text x="81.6603%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="81.5705%" y="741" width="0.0801%" height="15" fill="rgb(246,72,16)" fg:x="1018" fg:w="1"/><text x="81.8205%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="81.5705%" y="725" width="0.0801%" height="15" fill="rgb(223,32,10)" fg:x="1018" fg:w="1"/><text x="81.8205%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.5705%" y="709" width="0.0801%" height="15" fill="rgb(223,97,52)" fg:x="1018" fg:w="1"/><text x="81.8205%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.5705%" y="693" width="0.0801%" height="15" fill="rgb(238,69,38)" fg:x="1018" fg:w="1"/><text x="81.8205%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.5705%" y="677" width="0.0801%" height="15" fill="rgb(226,61,1)" fg:x="1018" fg:w="1"/><text x="81.8205%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.5705%" y="661" width="0.0801%" height="15" fill="rgb(244,56,14)" fg:x="1018" fg:w="1"/><text x="81.8205%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="81.6506%" y="725" width="0.2404%" height="15" fill="rgb(242,164,18)" fg:x="1019" fg:w="3"/><text x="81.9006%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="81.6506%" y="709" width="0.2404%" height="15" fill="rgb(217,130,28)" fg:x="1019" fg:w="3"/><text x="81.9006%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="81.6506%" y="693" width="0.2404%" height="15" fill="rgb(218,118,52)" fg:x="1019" fg:w="3"/><text x="81.9006%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.7308%" y="677" width="0.1603%" height="15" fill="rgb(251,112,38)" fg:x="1020" fg:w="2"/><text x="81.9808%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.8910%" y="709" width="0.1603%" height="15" fill="rgb(239,14,50)" fg:x="1022" fg:w="2"/><text x="82.1410%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.8910%" y="693" width="0.1603%" height="15" fill="rgb(228,141,54)" fg:x="1022" fg:w="2"/><text x="82.1410%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.8910%" y="677" width="0.1603%" height="15" fill="rgb(236,128,15)" fg:x="1022" fg:w="2"/><text x="82.1410%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.2115%" y="661" width="0.1603%" height="15" fill="rgb(206,140,54)" fg:x="1026" fg:w="2"/><text x="82.4615%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.2115%" y="645" width="0.1603%" height="15" fill="rgb(240,0,44)" fg:x="1026" fg:w="2"/><text x="82.4615%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.2115%" y="629" width="0.1603%" height="15" fill="rgb(243,207,23)" fg:x="1026" fg:w="2"/><text x="82.4615%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="82.2115%" y="613" width="0.1603%" height="15" fill="rgb(247,202,1)" fg:x="1026" fg:w="2"/><text x="82.4615%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.2917%" y="597" width="0.0801%" height="15" fill="rgb(239,83,27)" fg:x="1027" fg:w="1"/><text x="82.5417%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.2917%" y="581" width="0.0801%" height="15" fill="rgb(219,205,7)" fg:x="1027" fg:w="1"/><text x="82.5417%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.2917%" y="565" width="0.0801%" height="15" fill="rgb(249,184,22)" fg:x="1027" fg:w="1"/><text x="82.5417%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="82.2115%" y="693" width="0.2404%" height="15" fill="rgb(230,150,14)" fg:x="1026" fg:w="3"/><text x="82.4615%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="82.2115%" y="677" width="0.2404%" height="15" fill="rgb(240,118,34)" fg:x="1026" fg:w="3"/><text x="82.4615%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3718%" y="661" width="0.0801%" height="15" fill="rgb(227,162,21)" fg:x="1028" fg:w="1"/><text x="82.6218%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3718%" y="645" width="0.0801%" height="15" fill="rgb(219,14,9)" fg:x="1028" fg:w="1"/><text x="82.6218%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.3718%" y="629" width="0.0801%" height="15" fill="rgb(223,226,16)" fg:x="1028" fg:w="1"/><text x="82.6218%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.3718%" y="613" width="0.0801%" height="15" fill="rgb(246,161,37)" fg:x="1028" fg:w="1"/><text x="82.6218%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.4519%" y="693" width="0.1603%" height="15" fill="rgb(205,221,43)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.4519%" y="677" width="0.1603%" height="15" fill="rgb(228,216,26)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.4519%" y="661" width="0.1603%" height="15" fill="rgb(251,33,17)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="82.4519%" y="645" width="0.1603%" height="15" fill="rgb(246,126,36)" fg:x="1029" fg:w="2"/><text x="82.7019%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.6122%" y="677" width="0.0801%" height="15" fill="rgb(217,160,24)" fg:x="1031" fg:w="1"/><text x="82.8622%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.6122%" y="661" width="0.0801%" height="15" fill="rgb(211,64,12)" fg:x="1031" fg:w="1"/><text x="82.8622%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.6923%" y="677" width="0.1603%" height="15" fill="rgb(238,47,36)" fg:x="1032" fg:w="2"/><text x="82.9423%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.6923%" y="661" width="0.1603%" height="15" fill="rgb(210,157,42)" fg:x="1032" fg:w="2"/><text x="82.9423%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.6923%" y="645" width="0.1603%" height="15" fill="rgb(242,84,39)" fg:x="1032" fg:w="2"/><text x="82.9423%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.7724%" y="629" width="0.0801%" height="15" fill="rgb(207,65,41)" fg:x="1033" fg:w="1"/><text x="83.0224%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.7724%" y="613" width="0.0801%" height="15" fill="rgb(246,97,27)" fg:x="1033" fg:w="1"/><text x="83.0224%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="82.0513%" y="709" width="0.8814%" height="15" fill="rgb(229,9,43)" fg:x="1024" fg:w="11"/><text x="82.3013%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.6122%" y="693" width="0.3205%" height="15" fill="rgb(211,82,44)" fg:x="1031" fg:w="4"/><text x="82.8622%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.8526%" y="677" width="0.0801%" height="15" fill="rgb(253,45,54)" fg:x="1034" fg:w="1"/><text x="83.1026%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.8526%" y="661" width="0.0801%" height="15" fill="rgb(235,94,32)" fg:x="1034" fg:w="1"/><text x="83.1026%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.60%)</title><rect x="81.6506%" y="741" width="1.6026%" height="15" fill="rgb(252,143,1)" fg:x="1019" fg:w="20"/><text x="81.9006%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="81.8910%" y="725" width="1.3622%" height="15" fill="rgb(239,164,4)" fg:x="1022" fg:w="17"/><text x="82.1410%" y="735.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="82.9327%" y="709" width="0.3205%" height="15" fill="rgb(222,25,39)" fg:x="1035" fg:w="4"/><text x="83.1827%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="83.0128%" y="693" width="0.2404%" height="15" fill="rgb(234,175,9)" fg:x="1036" fg:w="3"/><text x="83.2628%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="83.0128%" y="677" width="0.2404%" height="15" fill="rgb(247,200,41)" fg:x="1036" fg:w="3"/><text x="83.2628%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="83.0929%" y="661" width="0.1603%" height="15" fill="rgb(245,101,27)" fg:x="1037" fg:w="2"/><text x="83.3429%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.1731%" y="645" width="0.0801%" height="15" fill="rgb(221,29,7)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.1731%" y="629" width="0.0801%" height="15" fill="rgb(240,184,10)" fg:x="1038" fg:w="1"/><text x="83.4231%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.2532%" y="709" width="0.0801%" height="15" fill="rgb(251,85,15)" fg:x="1039" fg:w="1"/><text x="83.5032%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="83.4135%" y="693" width="0.1603%" height="15" fill="rgb(252,84,16)" fg:x="1041" fg:w="2"/><text x="83.6635%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.4936%" y="677" width="0.0801%" height="15" fill="rgb(233,136,6)" fg:x="1042" fg:w="1"/><text x="83.7436%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="83.2532%" y="741" width="0.5609%" height="15" fill="rgb(226,169,30)" fg:x="1039" fg:w="7"/><text x="83.5032%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="83.2532%" y="725" width="0.5609%" height="15" fill="rgb(241,83,18)" fg:x="1039" fg:w="7"/><text x="83.5032%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="83.3333%" y="709" width="0.4808%" height="15" fill="rgb(239,151,5)" fg:x="1040" fg:w="6"/><text x="83.5833%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.5737%" y="693" width="0.2404%" height="15" fill="rgb(238,56,13)" fg:x="1043" fg:w="3"/><text x="83.8237%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.5737%" y="677" width="0.2404%" height="15" fill="rgb(224,100,0)" fg:x="1043" fg:w="3"/><text x="83.8237%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.7340%" y="661" width="0.0801%" height="15" fill="rgb(231,168,26)" fg:x="1045" fg:w="1"/><text x="83.9840%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="83.9744%" y="709" width="0.1603%" height="15" fill="rgb(238,110,3)" fg:x="1048" fg:w="2"/><text x="84.2244%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.1346%" y="677" width="0.0801%" height="15" fill="rgb(216,190,1)" fg:x="1050" fg:w="1"/><text x="84.3846%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.3750%" y="629" width="0.0801%" height="15" fill="rgb(208,130,52)" fg:x="1053" fg:w="1"/><text x="84.6250%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="84.4551%" y="629" width="0.0801%" height="15" fill="rgb(233,74,12)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.4551%" y="613" width="0.0801%" height="15" fill="rgb(248,12,15)" fg:x="1054" fg:w="1"/><text x="84.7051%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="84.1346%" y="709" width="0.4808%" height="15" fill="rgb(228,18,29)" fg:x="1050" fg:w="6"/><text x="84.3846%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="84.1346%" y="693" width="0.4808%" height="15" fill="rgb(206,153,11)" fg:x="1050" fg:w="6"/><text x="84.3846%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="84.2147%" y="677" width="0.4006%" height="15" fill="rgb(216,50,30)" fg:x="1051" fg:w="5"/><text x="84.4647%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="84.2949%" y="661" width="0.3205%" height="15" fill="rgb(217,20,39)" fg:x="1052" fg:w="4"/><text x="84.5449%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.3750%" y="645" width="0.2404%" height="15" fill="rgb(232,130,46)" fg:x="1053" fg:w="3"/><text x="84.6250%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5353%" y="629" width="0.0801%" height="15" fill="rgb(233,141,43)" fg:x="1055" fg:w="1"/><text x="84.7853%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.5353%" y="613" width="0.0801%" height="15" fill="rgb(240,64,34)" fg:x="1055" fg:w="1"/><text x="84.7853%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5353%" y="597" width="0.0801%" height="15" fill="rgb(230,28,31)" fg:x="1055" fg:w="1"/><text x="84.7853%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="84.6154%" y="661" width="0.0801%" height="15" fill="rgb(223,56,30)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="84.6154%" y="645" width="0.0801%" height="15" fill="rgb(248,134,16)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="84.6154%" y="629" width="0.0801%" height="15" fill="rgb(206,202,4)" fg:x="1056" fg:w="1"/><text x="84.8654%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="84.6154%" y="693" width="0.2404%" height="15" fill="rgb(219,116,48)" fg:x="1056" fg:w="3"/><text x="84.8654%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="84.6154%" y="677" width="0.2404%" height="15" fill="rgb(224,122,46)" fg:x="1056" fg:w="3"/><text x="84.8654%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="84.6955%" y="661" width="0.1603%" height="15" fill="rgb(219,114,47)" fg:x="1057" fg:w="2"/><text x="84.9455%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.8558%" y="693" width="0.0801%" height="15" fill="rgb(244,60,44)" fg:x="1059" fg:w="1"/><text x="85.1058%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.9359%" y="693" width="0.0801%" height="15" fill="rgb(243,226,25)" fg:x="1060" fg:w="1"/><text x="85.1859%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="85.0160%" y="677" width="0.0801%" height="15" fill="rgb(243,101,52)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.0160%" y="661" width="0.0801%" height="15" fill="rgb(207,69,25)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0160%" y="645" width="0.0801%" height="15" fill="rgb(222,204,53)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0160%" y="629" width="0.0801%" height="15" fill="rgb(234,84,49)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.0160%" y="613" width="0.0801%" height="15" fill="rgb(233,77,41)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.0160%" y="597" width="0.0801%" height="15" fill="rgb(221,200,42)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.0160%" y="581" width="0.0801%" height="15" fill="rgb(221,29,35)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0160%" y="565" width="0.0801%" height="15" fill="rgb(221,71,22)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0160%" y="549" width="0.0801%" height="15" fill="rgb(216,162,23)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.0160%" y="533" width="0.0801%" height="15" fill="rgb(248,32,48)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.0160%" y="517" width="0.0801%" height="15" fill="rgb(241,156,30)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.0160%" y="501" width="0.0801%" height="15" fill="rgb(237,196,46)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.0160%" y="485" width="0.0801%" height="15" fill="rgb(216,2,6)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0160%" y="469" width="0.0801%" height="15" fill="rgb(214,47,16)" fg:x="1061" fg:w="1"/><text x="85.2660%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="85.0962%" y="661" width="0.0801%" height="15" fill="rgb(240,123,13)" fg:x="1062" fg:w="1"/><text x="85.3462%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0962%" y="645" width="0.0801%" height="15" fill="rgb(206,47,48)" fg:x="1062" fg:w="1"/><text x="85.3462%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1763%" y="629" width="0.0801%" height="15" fill="rgb(252,88,27)" fg:x="1063" fg:w="1"/><text x="85.4263%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (19 samples, 1.52%)</title><rect x="83.8141%" y="725" width="1.5224%" height="15" fill="rgb(218,105,30)" fg:x="1046" fg:w="19"/><text x="84.0641%" y="735.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="84.6154%" y="709" width="0.7212%" height="15" fill="rgb(227,52,46)" fg:x="1056" fg:w="9"/><text x="84.8654%" y="719.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="85.0160%" y="693" width="0.3205%" height="15" fill="rgb(222,190,21)" fg:x="1061" fg:w="4"/><text x="85.2660%" y="703.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="85.0962%" y="677" width="0.2404%" height="15" fill="rgb(205,86,20)" fg:x="1062" fg:w="3"/><text x="85.3462%" y="687.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="85.1763%" y="661" width="0.1603%" height="15" fill="rgb(233,45,1)" fg:x="1063" fg:w="2"/><text x="85.4263%" y="671.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="85.1763%" y="645" width="0.1603%" height="15" fill="rgb(208,39,6)" fg:x="1063" fg:w="2"/><text x="85.4263%" y="655.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="85.2564%" y="629" width="0.0801%" height="15" fill="rgb(211,178,22)" fg:x="1064" fg:w="1"/><text x="85.5064%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2564%" y="613" width="0.0801%" height="15" fill="rgb(227,112,23)" fg:x="1064" fg:w="1"/><text x="85.5064%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="85.4968%" y="693" width="0.1603%" height="15" fill="rgb(214,41,4)" fg:x="1067" fg:w="2"/><text x="85.7468%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.6571%" y="693" width="0.1603%" height="15" fill="rgb(219,144,46)" fg:x="1069" fg:w="2"/><text x="85.9071%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.8173%" y="693" width="0.0801%" height="15" fill="rgb(253,176,50)" fg:x="1071" fg:w="1"/><text x="86.0673%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.8173%" y="677" width="0.0801%" height="15" fill="rgb(206,123,1)" fg:x="1071" fg:w="1"/><text x="86.0673%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8173%" y="661" width="0.0801%" height="15" fill="rgb(250,111,32)" fg:x="1071" fg:w="1"/><text x="86.0673%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="85.8974%" y="693" width="0.1603%" height="15" fill="rgb(229,17,49)" fg:x="1072" fg:w="2"/><text x="86.1474%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.9776%" y="677" width="0.0801%" height="15" fill="rgb(250,123,19)" fg:x="1073" fg:w="1"/><text x="86.2276%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="86.0577%" y="645" width="0.2404%" height="15" fill="rgb(220,124,20)" fg:x="1074" fg:w="3"/><text x="86.3077%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="86.0577%" y="629" width="0.2404%" height="15" fill="rgb(242,85,25)" fg:x="1074" fg:w="3"/><text x="86.3077%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2179%" y="613" width="0.0801%" height="15" fill="rgb(245,217,7)" fg:x="1076" fg:w="1"/><text x="86.4679%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="86.2981%" y="629" width="0.0801%" height="15" fill="rgb(242,50,25)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2981%" y="613" width="0.0801%" height="15" fill="rgb(251,210,24)" fg:x="1077" fg:w="1"/><text x="86.5481%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="86.2981%" y="645" width="0.1603%" height="15" fill="rgb(238,24,8)" fg:x="1077" fg:w="2"/><text x="86.5481%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3782%" y="629" width="0.0801%" height="15" fill="rgb(211,96,19)" fg:x="1078" fg:w="1"/><text x="86.6282%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.3782%" y="613" width="0.0801%" height="15" fill="rgb(222,186,12)" fg:x="1078" fg:w="1"/><text x="86.6282%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3782%" y="597" width="0.0801%" height="15" fill="rgb(212,70,49)" fg:x="1078" fg:w="1"/><text x="86.6282%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3782%" y="581" width="0.0801%" height="15" fill="rgb(238,69,49)" fg:x="1078" fg:w="1"/><text x="86.6282%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="86.0577%" y="677" width="0.6410%" height="15" fill="rgb(225,13,3)" fg:x="1074" fg:w="8"/><text x="86.3077%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="86.0577%" y="661" width="0.6410%" height="15" fill="rgb(229,188,14)" fg:x="1074" fg:w="8"/><text x="86.3077%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="86.4583%" y="645" width="0.2404%" height="15" fill="rgb(218,58,16)" fg:x="1079" fg:w="3"/><text x="86.7083%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="86.4583%" y="629" width="0.2404%" height="15" fill="rgb(206,213,49)" fg:x="1079" fg:w="3"/><text x="86.7083%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6186%" y="613" width="0.0801%" height="15" fill="rgb(225,152,48)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.6186%" y="597" width="0.0801%" height="15" fill="rgb(216,103,42)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6186%" y="581" width="0.0801%" height="15" fill="rgb(212,214,39)" fg:x="1081" fg:w="1"/><text x="86.8686%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (18 samples, 1.44%)</title><rect x="85.3365%" y="725" width="1.4423%" height="15" fill="rgb(249,52,41)" fg:x="1065" fg:w="18"/><text x="85.5865%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.44%)</title><rect x="85.3365%" y="709" width="1.4423%" height="15" fill="rgb(212,173,53)" fg:x="1065" fg:w="18"/><text x="85.5865%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="86.0577%" y="693" width="0.7212%" height="15" fill="rgb(232,222,21)" fg:x="1074" fg:w="9"/><text x="86.3077%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6987%" y="677" width="0.0801%" height="15" fill="rgb(206,228,31)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6987%" y="661" width="0.0801%" height="15" fill="rgb(231,121,16)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6987%" y="645" width="0.0801%" height="15" fill="rgb(241,3,23)" fg:x="1082" fg:w="1"/><text x="86.9487%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="86.9391%" y="581" width="0.0801%" height="15" fill="rgb(220,68,37)" fg:x="1085" fg:w="1"/><text x="87.1891%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.9391%" y="565" width="0.0801%" height="15" fill="rgb(212,23,49)" fg:x="1085" fg:w="1"/><text x="87.1891%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="86.9391%" y="549" width="0.0801%" height="15" fill="rgb(231,38,8)" fg:x="1085" fg:w="1"/><text x="87.1891%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="86.9391%" y="533" width="0.0801%" height="15" fill="rgb(222,137,29)" fg:x="1085" fg:w="1"/><text x="87.1891%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="86.9391%" y="629" width="0.1603%" height="15" fill="rgb(239,8,6)" fg:x="1085" fg:w="2"/><text x="87.1891%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="86.9391%" y="613" width="0.1603%" height="15" fill="rgb(224,142,47)" fg:x="1085" fg:w="2"/><text x="87.1891%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="86.9391%" y="597" width="0.1603%" height="15" fill="rgb(226,67,29)" fg:x="1085" fg:w="2"/><text x="87.1891%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.0192%" y="581" width="0.0801%" height="15" fill="rgb(212,144,29)" fg:x="1086" fg:w="1"/><text x="87.2692%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.0192%" y="565" width="0.0801%" height="15" fill="rgb(252,2,51)" fg:x="1086" fg:w="1"/><text x="87.2692%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.0192%" y="549" width="0.0801%" height="15" fill="rgb(246,103,52)" fg:x="1086" fg:w="1"/><text x="87.2692%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.0192%" y="533" width="0.0801%" height="15" fill="rgb(229,229,35)" fg:x="1086" fg:w="1"/><text x="87.2692%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.1795%" y="613" width="0.0801%" height="15" fill="rgb(209,83,15)" fg:x="1088" fg:w="1"/><text x="87.4295%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2596%" y="613" width="0.0801%" height="15" fill="rgb(218,54,16)" fg:x="1089" fg:w="1"/><text x="87.5096%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="87.0994%" y="629" width="0.3205%" height="15" fill="rgb(205,2,26)" fg:x="1087" fg:w="4"/><text x="87.3494%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="87.3397%" y="613" width="0.0801%" height="15" fill="rgb(248,180,0)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="87.3397%" y="597" width="0.0801%" height="15" fill="rgb(231,136,16)" fg:x="1090" fg:w="1"/><text x="87.5897%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="86.8590%" y="661" width="0.6410%" height="15" fill="rgb(215,90,4)" fg:x="1084" fg:w="8"/><text x="87.1090%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="86.9391%" y="645" width="0.5609%" height="15" fill="rgb(251,131,3)" fg:x="1085" fg:w="7"/><text x="87.1891%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4199%" y="629" width="0.0801%" height="15" fill="rgb(244,47,21)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4199%" y="613" width="0.0801%" height="15" fill="rgb(231,115,9)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="87.4199%" y="597" width="0.0801%" height="15" fill="rgb(241,119,20)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="87.4199%" y="581" width="0.0801%" height="15" fill="rgb(224,99,0)" fg:x="1091" fg:w="1"/><text x="87.6699%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="87.5000%" y="661" width="0.1603%" height="15" fill="rgb(219,213,18)" fg:x="1092" fg:w="2"/><text x="87.7500%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="87.5000%" y="645" width="0.1603%" height="15" fill="rgb(209,71,34)" fg:x="1092" fg:w="2"/><text x="87.7500%" y="655.50"></text></g><g><title>kernel::model::any_entity_changes (49 samples, 3.93%)</title><rect x="83.8141%" y="741" width="3.9263%" height="15" fill="rgb(245,203,20)" fg:x="1046" fg:w="49"/><text x="84.0641%" y="751.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="86.7788%" y="725" width="0.9615%" height="15" fill="rgb(221,44,20)" fg:x="1083" fg:w="12"/><text x="87.0288%" y="735.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="86.7788%" y="709" width="0.9615%" height="15" fill="rgb(229,97,0)" fg:x="1083" fg:w="12"/><text x="87.0288%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="86.8590%" y="693" width="0.8814%" height="15" fill="rgb(206,56,49)" fg:x="1084" fg:w="11"/><text x="87.1090%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="86.8590%" y="677" width="0.8814%" height="15" fill="rgb(208,216,41)" fg:x="1084" fg:w="11"/><text x="87.1090%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6603%" y="661" width="0.0801%" height="15" fill="rgb(231,31,6)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6603%" y="645" width="0.0801%" height="15" fill="rgb(239,88,23)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="87.6603%" y="629" width="0.0801%" height="15" fill="rgb(227,111,45)" fg:x="1094" fg:w="1"/><text x="87.9103%" y="639.50"></text></g><g><title>kernel::perms::AclProtection::prefix (1 samples, 0.08%)</title><rect x="87.7404%" y="693" width="0.0801%" height="15" fill="rgb(207,167,18)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.7404%" y="677" width="0.0801%" height="15" fill="rgb(253,127,17)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.7404%" y="661" width="0.0801%" height="15" fill="rgb(211,229,9)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.7404%" y="645" width="0.0801%" height="15" fill="rgb(249,25,14)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.7404%" y="629" width="0.0801%" height="15" fill="rgb(237,177,4)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.7404%" y="613" width="0.0801%" height="15" fill="rgb(248,163,50)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.7404%" y="597" width="0.0801%" height="15" fill="rgb(246,67,42)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.7404%" y="581" width="0.0801%" height="15" fill="rgb(228,136,45)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.7404%" y="565" width="0.0801%" height="15" fill="rgb(218,93,4)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.7404%" y="549" width="0.0801%" height="15" fill="rgb(209,82,29)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.7404%" y="533" width="0.0801%" height="15" fill="rgb(213,219,38)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.7404%" y="517" width="0.0801%" height="15" fill="rgb(233,212,17)" fg:x="1095" fg:w="1"/><text x="87.9904%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.8205%" y="629" width="0.0801%" height="15" fill="rgb(225,65,3)" fg:x="1096" fg:w="1"/><text x="88.0705%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.9006%" y="629" width="0.0801%" height="15" fill="rgb(226,25,1)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.9006%" y="613" width="0.0801%" height="15" fill="rgb(229,83,27)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="623.50"></text></g><g><title>kernel::perms::find_acls (1 samples, 0.08%)</title><rect x="87.9006%" y="597" width="0.0801%" height="15" fill="rgb(245,80,47)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.9006%" y="581" width="0.0801%" height="15" fill="rgb(213,79,27)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.9006%" y="565" width="0.0801%" height="15" fill="rgb(232,38,28)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="575.50"></text></g><g><title>kernel::perms::find_acls (1 samples, 0.08%)</title><rect x="87.9006%" y="549" width="0.0801%" height="15" fill="rgb(253,63,39)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.9006%" y="533" width="0.0801%" height="15" fill="rgb(222,204,17)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9006%" y="517" width="0.0801%" height="15" fill="rgb(254,135,49)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="527.50"></text></g><g><title>serde::de::Error::missing_field (1 samples, 0.08%)</title><rect x="87.9006%" y="501" width="0.0801%" height="15" fill="rgb(226,203,24)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="511.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="87.9006%" y="485" width="0.0801%" height="15" fill="rgb(225,2,17)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="495.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="87.9006%" y="469" width="0.0801%" height="15" fill="rgb(234,135,43)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.9006%" y="453" width="0.0801%" height="15" fill="rgb(224,14,46)" fg:x="1097" fg:w="1"/><text x="88.1506%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0609%" y="597" width="0.0801%" height="15" fill="rgb(206,42,0)" fg:x="1099" fg:w="1"/><text x="88.3109%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.1410%" y="565" width="0.0801%" height="15" fill="rgb(244,38,23)" fg:x="1100" fg:w="1"/><text x="88.3910%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.1410%" y="549" width="0.0801%" height="15" fill="rgb(230,25,21)" fg:x="1100" fg:w="1"/><text x="88.3910%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.1410%" y="533" width="0.0801%" height="15" fill="rgb(252,217,28)" fg:x="1100" fg:w="1"/><text x="88.3910%" y="543.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="88.1410%" y="517" width="0.0801%" height="15" fill="rgb(251,4,49)" fg:x="1100" fg:w="1"/><text x="88.3910%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="87.8205%" y="677" width="0.4808%" height="15" fill="rgb(217,126,31)" fg:x="1096" fg:w="6"/><text x="88.0705%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="87.8205%" y="661" width="0.4808%" height="15" fill="rgb(242,181,33)" fg:x="1096" fg:w="6"/><text x="88.0705%" y="671.50"></text></g><g><title>kernel::perms::find_acls (6 samples, 0.48%)</title><rect x="87.8205%" y="645" width="0.4808%" height="15" fill="rgb(241,108,6)" fg:x="1096" fg:w="6"/><text x="88.0705%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="87.9808%" y="629" width="0.3205%" height="15" fill="rgb(238,87,39)" fg:x="1098" fg:w="4"/><text x="88.2308%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="87.9808%" y="613" width="0.3205%" height="15" fill="rgb(244,101,49)" fg:x="1098" fg:w="4"/><text x="88.2308%" y="623.50"></text></g><g><title>serde::de::Error::missing_field (2 samples, 0.16%)</title><rect x="88.1410%" y="597" width="0.1603%" height="15" fill="rgb(211,43,42)" fg:x="1100" fg:w="2"/><text x="88.3910%" y="607.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="88.1410%" y="581" width="0.1603%" height="15" fill="rgb(210,93,2)" fg:x="1100" fg:w="2"/><text x="88.3910%" y="591.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="88.2212%" y="565" width="0.0801%" height="15" fill="rgb(242,149,32)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="88.2212%" y="549" width="0.0801%" height="15" fill="rgb(228,1,6)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.2212%" y="533" width="0.0801%" height="15" fill="rgb(221,0,20)" fg:x="1101" fg:w="1"/><text x="88.4712%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="87.7404%" y="725" width="0.6410%" height="15" fill="rgb(230,39,32)" fg:x="1095" fg:w="8"/><text x="87.9904%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="87.7404%" y="709" width="0.6410%" height="15" fill="rgb(240,89,38)" fg:x="1095" fg:w="8"/><text x="87.9904%" y="719.50"></text></g><g><title>kernel::perms::find_acls (7 samples, 0.56%)</title><rect x="87.8205%" y="693" width="0.5609%" height="15" fill="rgb(208,221,23)" fg:x="1096" fg:w="7"/><text x="88.0705%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.3013%" y="677" width="0.0801%" height="15" fill="rgb(220,145,29)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3013%" y="661" width="0.0801%" height="15" fill="rgb(219,146,23)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.3013%" y="645" width="0.0801%" height="15" fill="rgb(244,114,49)" fg:x="1102" fg:w="1"/><text x="88.5513%" y="655.50"></text></g><g><title>engine::session::Session::close (102 samples, 8.17%)</title><rect x="80.2885%" y="821" width="8.1731%" height="15" fill="rgb(221,17,10)" fg:x="1002" fg:w="102"/><text x="80.5385%" y="831.50">engine::ses..</text></g><g><title>engine::session::state::State::close (100 samples, 8.01%)</title><rect x="80.4487%" y="805" width="8.0128%" height="15" fill="rgb(228,133,21)" fg:x="1004" fg:w="100"/><text x="80.6987%" y="815.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (88 samples, 7.05%)</title><rect x="81.4103%" y="789" width="7.0513%" height="15" fill="rgb(218,81,30)" fg:x="1016" fg:w="88"/><text x="81.6603%" y="799.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (87 samples, 6.97%)</title><rect x="81.4904%" y="773" width="6.9712%" height="15" fill="rgb(240,29,36)" fg:x="1017" fg:w="87"/><text x="81.7404%" y="783.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (87 samples, 6.97%)</title><rect x="81.4904%" y="757" width="6.9712%" height="15" fill="rgb(246,0,36)" fg:x="1017" fg:w="87"/><text x="81.7404%" y="767.50">engine::s..</text></g><g><title>kernel::perms::find_acls (9 samples, 0.72%)</title><rect x="87.7404%" y="741" width="0.7212%" height="15" fill="rgb(217,79,8)" fg:x="1095" fg:w="9"/><text x="87.9904%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.3814%" y="725" width="0.0801%" height="15" fill="rgb(229,124,44)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3814%" y="709" width="0.0801%" height="15" fill="rgb(210,187,22)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.3814%" y="693" width="0.0801%" height="15" fill="rgb(212,115,40)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.3814%" y="677" width="0.0801%" height="15" fill="rgb(210,2,54)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.3814%" y="661" width="0.0801%" height="15" fill="rgb(227,168,43)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.3814%" y="645" width="0.0801%" height="15" fill="rgb(249,92,8)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="88.3814%" y="629" width="0.0801%" height="15" fill="rgb(239,111,35)" fg:x="1103" fg:w="1"/><text x="88.6314%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.4615%" y="789" width="0.0801%" height="15" fill="rgb(230,126,13)" fg:x="1104" fg:w="1"/><text x="88.7115%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="88.5417%" y="693" width="0.0801%" height="15" fill="rgb(243,116,33)" fg:x="1105" fg:w="1"/><text x="88.7917%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.6218%" y="485" width="0.0801%" height="15" fill="rgb(246,103,21)" fg:x="1106" fg:w="1"/><text x="88.8718%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.6218%" y="469" width="0.0801%" height="15" fill="rgb(237,53,26)" fg:x="1106" fg:w="1"/><text x="88.8718%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="88.6218%" y="453" width="0.0801%" height="15" fill="rgb(213,121,15)" fg:x="1106" fg:w="1"/><text x="88.8718%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="88.7019%" y="485" width="0.0801%" height="15" fill="rgb(251,83,35)" fg:x="1107" fg:w="1"/><text x="88.9519%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7019%" y="469" width="0.0801%" height="15" fill="rgb(222,79,8)" fg:x="1107" fg:w="1"/><text x="88.9519%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="88.6218%" y="661" width="0.2404%" height="15" fill="rgb(217,74,36)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="88.6218%" y="645" width="0.2404%" height="15" fill="rgb(221,14,30)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (3 samples, 0.24%)</title><rect x="88.6218%" y="629" width="0.2404%" height="15" fill="rgb(216,221,5)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="88.6218%" y="613" width="0.2404%" height="15" fill="rgb(236,118,16)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="88.6218%" y="597" width="0.2404%" height="15" fill="rgb(243,91,43)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="88.6218%" y="581" width="0.2404%" height="15" fill="rgb(231,110,7)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="88.6218%" y="565" width="0.2404%" height="15" fill="rgb(217,80,6)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="88.6218%" y="549" width="0.2404%" height="15" fill="rgb(251,116,7)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.6218%" y="533" width="0.2404%" height="15" fill="rgb(236,70,22)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="88.6218%" y="517" width="0.2404%" height="15" fill="rgb(245,13,10)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.6218%" y="501" width="0.2404%" height="15" fill="rgb(233,146,34)" fg:x="1106" fg:w="3"/><text x="88.8718%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="88.7821%" y="485" width="0.0801%" height="15" fill="rgb(241,196,34)" fg:x="1108" fg:w="1"/><text x="89.0321%" y="495.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (5 samples, 0.40%)</title><rect x="88.5417%" y="725" width="0.4006%" height="15" fill="rgb(207,150,20)" fg:x="1105" fg:w="5"/><text x="88.7917%" y="735.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (5 samples, 0.40%)</title><rect x="88.5417%" y="709" width="0.4006%" height="15" fill="rgb(251,27,52)" fg:x="1105" fg:w="5"/><text x="88.7917%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="88.6218%" y="693" width="0.3205%" height="15" fill="rgb(221,76,2)" fg:x="1106" fg:w="4"/><text x="88.8718%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="88.6218%" y="677" width="0.3205%" height="15" fill="rgb(242,94,41)" fg:x="1106" fg:w="4"/><text x="88.8718%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.8622%" y="661" width="0.0801%" height="15" fill="rgb(245,9,8)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="88.8622%" y="645" width="0.0801%" height="15" fill="rgb(236,139,26)" fg:x="1109" fg:w="1"/><text x="89.1122%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="88.9423%" y="725" width="0.0801%" height="15" fill="rgb(249,11,18)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="88.9423%" y="709" width="0.0801%" height="15" fill="rgb(206,175,35)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9423%" y="693" width="0.0801%" height="15" fill="rgb(231,3,46)" fg:x="1110" fg:w="1"/><text x="89.1923%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0224%" y="661" width="0.0801%" height="15" fill="rgb(243,27,8)" fg:x="1111" fg:w="1"/><text x="89.2724%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (1 samples, 0.08%)</title><rect x="89.3429%" y="581" width="0.0801%" height="15" fill="rgb(223,53,13)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.3429%" y="565" width="0.0801%" height="15" fill="rgb(248,68,15)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.3429%" y="549" width="0.0801%" height="15" fill="rgb(216,61,26)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3429%" y="533" width="0.0801%" height="15" fill="rgb(213,201,24)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.3429%" y="517" width="0.0801%" height="15" fill="rgb(214,20,17)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3429%" y="501" width="0.0801%" height="15" fill="rgb(206,21,46)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.3429%" y="485" width="0.0801%" height="15" fill="rgb(234,222,24)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3429%" y="469" width="0.0801%" height="15" fill="rgb(221,25,26)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3429%" y="453" width="0.0801%" height="15" fill="rgb(241,148,26)" fg:x="1115" fg:w="1"/><text x="89.5929%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4231%" y="565" width="0.0801%" height="15" fill="rgb(248,119,35)" fg:x="1116" fg:w="1"/><text x="89.6731%" y="575.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (5 samples, 0.40%)</title><rect x="89.2628%" y="597" width="0.4006%" height="15" fill="rgb(239,126,23)" fg:x="1114" fg:w="5"/><text x="89.5128%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="89.4231%" y="581" width="0.2404%" height="15" fill="rgb(247,120,25)" fg:x="1116" fg:w="3"/><text x="89.6731%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.5032%" y="565" width="0.1603%" height="15" fill="rgb(220,93,32)" fg:x="1117" fg:w="2"/><text x="89.7532%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.5032%" y="549" width="0.1603%" height="15" fill="rgb(236,46,26)" fg:x="1117" fg:w="2"/><text x="89.7532%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.5032%" y="533" width="0.1603%" height="15" fill="rgb(229,20,45)" fg:x="1117" fg:w="2"/><text x="89.7532%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.5833%" y="517" width="0.0801%" height="15" fill="rgb(225,168,41)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.5833%" y="501" width="0.0801%" height="15" fill="rgb(253,123,20)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.5833%" y="485" width="0.0801%" height="15" fill="rgb(244,17,29)" fg:x="1118" fg:w="1"/><text x="89.8333%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6635%" y="565" width="0.0801%" height="15" fill="rgb(242,196,24)" fg:x="1119" fg:w="1"/><text x="89.9135%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.8237%" y="549" width="0.0801%" height="15" fill="rgb(210,113,45)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.8237%" y="533" width="0.0801%" height="15" fill="rgb(205,129,3)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.8237%" y="517" width="0.0801%" height="15" fill="rgb(232,74,10)" fg:x="1121" fg:w="1"/><text x="90.0737%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="89.9038%" y="533" width="0.0801%" height="15" fill="rgb(251,63,43)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="89.9038%" y="517" width="0.0801%" height="15" fill="rgb(228,215,15)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.9038%" y="501" width="0.0801%" height="15" fill="rgb(233,179,38)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.9038%" y="485" width="0.0801%" height="15" fill="rgb(227,187,9)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.9038%" y="469" width="0.0801%" height="15" fill="rgb(231,89,27)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.9038%" y="453" width="0.0801%" height="15" fill="rgb(225,117,1)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.9038%" y="437" width="0.0801%" height="15" fill="rgb(239,120,49)" fg:x="1122" fg:w="1"/><text x="90.1538%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="89.9840%" y="533" width="0.0801%" height="15" fill="rgb(236,137,37)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.9840%" y="517" width="0.0801%" height="15" fill="rgb(239,73,42)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9840%" y="501" width="0.0801%" height="15" fill="rgb(207,169,6)" fg:x="1123" fg:w="1"/><text x="90.2340%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0641%" y="501" width="0.0801%" height="15" fill="rgb(228,171,10)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0641%" y="485" width="0.0801%" height="15" fill="rgb(217,228,47)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0641%" y="469" width="0.0801%" height="15" fill="rgb(227,116,17)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0641%" y="453" width="0.0801%" height="15" fill="rgb(245,128,36)" fg:x="1124" fg:w="1"/><text x="90.3141%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1442%" y="485" width="0.0801%" height="15" fill="rgb(221,139,3)" fg:x="1125" fg:w="1"/><text x="90.3942%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="90.3045%" y="341" width="0.0801%" height="15" fill="rgb(207,59,54)" fg:x="1127" fg:w="1"/><text x="90.5545%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3846%" y="261" width="0.0801%" height="15" fill="rgb(231,129,12)" fg:x="1128" fg:w="1"/><text x="90.6346%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="90.3045%" y="357" width="0.2404%" height="15" fill="rgb(235,49,17)" fg:x="1127" fg:w="3"/><text x="90.5545%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.3846%" y="341" width="0.1603%" height="15" fill="rgb(229,175,11)" fg:x="1128" fg:w="2"/><text x="90.6346%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.3846%" y="325" width="0.1603%" height="15" fill="rgb(206,187,30)" fg:x="1128" fg:w="2"/><text x="90.6346%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.3846%" y="309" width="0.1603%" height="15" fill="rgb(214,39,19)" fg:x="1128" fg:w="2"/><text x="90.6346%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="90.3846%" y="293" width="0.1603%" height="15" fill="rgb(243,92,46)" fg:x="1128" fg:w="2"/><text x="90.6346%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.3846%" y="277" width="0.1603%" height="15" fill="rgb(240,125,36)" fg:x="1128" fg:w="2"/><text x="90.6346%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4647%" y="261" width="0.0801%" height="15" fill="rgb(217,193,45)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4647%" y="245" width="0.0801%" height="15" fill="rgb(230,127,16)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="255.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="90.4647%" y="229" width="0.0801%" height="15" fill="rgb(208,161,0)" fg:x="1129" fg:w="1"/><text x="90.7147%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5449%" y="325" width="0.0801%" height="15" fill="rgb(251,69,39)" fg:x="1130" fg:w="1"/><text x="90.7949%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5449%" y="309" width="0.0801%" height="15" fill="rgb(229,86,22)" fg:x="1130" fg:w="1"/><text x="90.7949%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5449%" y="293" width="0.0801%" height="15" fill="rgb(223,67,43)" fg:x="1130" fg:w="1"/><text x="90.7949%" y="303.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="90.6250%" y="325" width="0.0801%" height="15" fill="rgb(254,80,31)" fg:x="1131" fg:w="1"/><text x="90.8750%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="90.3045%" y="389" width="0.4808%" height="15" fill="rgb(225,149,52)" fg:x="1127" fg:w="6"/><text x="90.5545%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="90.3045%" y="373" width="0.4808%" height="15" fill="rgb(214,169,18)" fg:x="1127" fg:w="6"/><text x="90.5545%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="90.5449%" y="357" width="0.2404%" height="15" fill="rgb(236,224,43)" fg:x="1130" fg:w="3"/><text x="90.7949%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.5449%" y="341" width="0.2404%" height="15" fill="rgb(251,125,34)" fg:x="1130" fg:w="3"/><text x="90.7949%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.7051%" y="325" width="0.0801%" height="15" fill="rgb(224,39,44)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7051%" y="309" width="0.0801%" height="15" fill="rgb(206,111,46)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.7051%" y="293" width="0.0801%" height="15" fill="rgb(227,147,50)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7051%" y="277" width="0.0801%" height="15" fill="rgb(239,144,36)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.7051%" y="261" width="0.0801%" height="15" fill="rgb(216,17,19)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="271.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="90.7051%" y="245" width="0.0801%" height="15" fill="rgb(211,192,29)" fg:x="1132" fg:w="1"/><text x="90.9551%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.8654%" y="325" width="0.0801%" height="15" fill="rgb(238,195,20)" fg:x="1134" fg:w="1"/><text x="91.1154%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9455%" y="245" width="0.0801%" height="15" fill="rgb(213,210,42)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.9455%" y="229" width="0.0801%" height="15" fill="rgb(244,4,49)" fg:x="1135" fg:w="1"/><text x="91.1955%" y="239.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="90.8654%" y="373" width="0.2404%" height="15" fill="rgb(254,106,42)" fg:x="1134" fg:w="3"/><text x="91.1154%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.8654%" y="357" width="0.2404%" height="15" fill="rgb(222,182,12)" fg:x="1134" fg:w="3"/><text x="91.1154%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.8654%" y="341" width="0.2404%" height="15" fill="rgb(228,160,15)" fg:x="1134" fg:w="3"/><text x="91.1154%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.9455%" y="325" width="0.1603%" height="15" fill="rgb(243,149,43)" fg:x="1135" fg:w="2"/><text x="91.1955%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.9455%" y="309" width="0.1603%" height="15" fill="rgb(245,150,32)" fg:x="1135" fg:w="2"/><text x="91.1955%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.9455%" y="293" width="0.1603%" height="15" fill="rgb(205,43,19)" fg:x="1135" fg:w="2"/><text x="91.1955%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.9455%" y="277" width="0.1603%" height="15" fill="rgb(249,189,35)" fg:x="1135" fg:w="2"/><text x="91.1955%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.9455%" y="261" width="0.1603%" height="15" fill="rgb(223,9,0)" fg:x="1135" fg:w="2"/><text x="91.1955%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.0256%" y="245" width="0.0801%" height="15" fill="rgb(213,142,45)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0256%" y="229" width="0.0801%" height="15" fill="rgb(208,148,2)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.0256%" y="213" width="0.0801%" height="15" fill="rgb(207,191,42)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="223.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="91.0256%" y="197" width="0.0801%" height="15" fill="rgb(215,218,38)" fg:x="1136" fg:w="1"/><text x="91.2756%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1058%" y="309" width="0.0801%" height="15" fill="rgb(223,195,24)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1058%" y="293" width="0.0801%" height="15" fill="rgb(254,60,30)" fg:x="1137" fg:w="1"/><text x="91.3558%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="91.1058%" y="341" width="0.1603%" height="15" fill="rgb(223,2,9)" fg:x="1137" fg:w="2"/><text x="91.3558%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.1058%" y="325" width="0.1603%" height="15" fill="rgb(253,134,46)" fg:x="1137" fg:w="2"/><text x="91.3558%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.1859%" y="309" width="0.0801%" height="15" fill="rgb(206,209,20)" fg:x="1138" fg:w="1"/><text x="91.4359%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="91.1859%" y="293" width="0.0801%" height="15" fill="rgb(253,104,42)" fg:x="1138" fg:w="1"/><text x="91.4359%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.1859%" y="277" width="0.0801%" height="15" fill="rgb(223,47,23)" fg:x="1138" fg:w="1"/><text x="91.4359%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="91.1859%" y="261" width="0.0801%" height="15" fill="rgb(247,148,44)" fg:x="1138" fg:w="1"/><text x="91.4359%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="91.1859%" y="245" width="0.0801%" height="15" fill="rgb(221,224,16)" fg:x="1138" fg:w="1"/><text x="91.4359%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="91.1859%" y="229" width="0.0801%" height="15" fill="rgb(252,103,29)" fg:x="1138" fg:w="1"/><text x="91.4359%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="90.7853%" y="389" width="0.5609%" height="15" fill="rgb(244,185,34)" fg:x="1133" fg:w="7"/><text x="91.0353%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="91.1058%" y="373" width="0.2404%" height="15" fill="rgb(218,18,50)" fg:x="1137" fg:w="3"/><text x="91.3558%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.1058%" y="357" width="0.2404%" height="15" fill="rgb(234,105,8)" fg:x="1137" fg:w="3"/><text x="91.3558%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.2660%" y="341" width="0.0801%" height="15" fill="rgb(249,51,19)" fg:x="1139" fg:w="1"/><text x="91.5160%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2660%" y="325" width="0.0801%" height="15" fill="rgb(233,132,7)" fg:x="1139" fg:w="1"/><text x="91.5160%" y="335.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="91.2660%" y="309" width="0.0801%" height="15" fill="rgb(229,181,43)" fg:x="1139" fg:w="1"/><text x="91.5160%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (20 samples, 1.60%)</title><rect x="90.1442%" y="501" width="1.6026%" height="15" fill="rgb(223,20,7)" fg:x="1125" fg:w="20"/><text x="90.3942%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 1.52%)</title><rect x="90.2244%" y="485" width="1.5224%" height="15" fill="rgb(245,13,34)" fg:x="1126" fg:w="19"/><text x="90.4744%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 1.52%)</title><rect x="90.2244%" y="469" width="1.5224%" height="15" fill="rgb(242,0,53)" fg:x="1126" fg:w="19"/><text x="90.4744%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 1.44%)</title><rect x="90.3045%" y="453" width="1.4423%" height="15" fill="rgb(233,115,19)" fg:x="1127" fg:w="18"/><text x="90.5545%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (18 samples, 1.44%)</title><rect x="90.3045%" y="437" width="1.4423%" height="15" fill="rgb(216,170,26)" fg:x="1127" fg:w="18"/><text x="90.5545%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.44%)</title><rect x="90.3045%" y="421" width="1.4423%" height="15" fill="rgb(233,13,0)" fg:x="1127" fg:w="18"/><text x="90.5545%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.44%)</title><rect x="90.3045%" y="405" width="1.4423%" height="15" fill="rgb(228,79,21)" fg:x="1127" fg:w="18"/><text x="90.5545%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="91.3462%" y="389" width="0.4006%" height="15" fill="rgb(244,17,41)" fg:x="1140" fg:w="5"/><text x="91.5962%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="91.3462%" y="373" width="0.4006%" height="15" fill="rgb(253,152,11)" fg:x="1140" fg:w="5"/><text x="91.5962%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="91.3462%" y="357" width="0.4006%" height="15" fill="rgb(254,94,47)" fg:x="1140" fg:w="5"/><text x="91.5962%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="91.4263%" y="341" width="0.3205%" height="15" fill="rgb(239,66,43)" fg:x="1141" fg:w="4"/><text x="91.6763%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="91.5064%" y="325" width="0.2404%" height="15" fill="rgb(251,25,22)" fg:x="1142" fg:w="3"/><text x="91.7564%" y="335.50"></text></g><g><title>plugins_core::tools::contained_by (24 samples, 1.92%)</title><rect x="89.9038%" y="549" width="1.9231%" height="15" fill="rgb(227,65,46)" fg:x="1122" fg:w="24"/><text x="90.1538%" y="559.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (22 samples, 1.76%)</title><rect x="90.0641%" y="533" width="1.7628%" height="15" fill="rgb(240,180,32)" fg:x="1124" fg:w="22"/><text x="90.3141%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (22 samples, 1.76%)</title><rect x="90.0641%" y="517" width="1.7628%" height="15" fill="rgb(242,11,35)" fg:x="1124" fg:w="22"/><text x="90.3141%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.7468%" y="501" width="0.0801%" height="15" fill="rgb(221,41,49)" fg:x="1145" fg:w="1"/><text x="91.9968%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7468%" y="485" width="0.0801%" height="15" fill="rgb(253,80,52)" fg:x="1145" fg:w="1"/><text x="91.9968%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.7468%" y="469" width="0.0801%" height="15" fill="rgb(232,152,28)" fg:x="1145" fg:w="1"/><text x="91.9968%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7468%" y="453" width="0.0801%" height="15" fill="rgb(219,110,12)" fg:x="1145" fg:w="1"/><text x="91.9968%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="91.7468%" y="437" width="0.0801%" height="15" fill="rgb(218,98,43)" fg:x="1145" fg:w="1"/><text x="91.9968%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="91.8269%" y="533" width="0.0801%" height="15" fill="rgb(253,96,49)" fg:x="1146" fg:w="1"/><text x="92.0769%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.8269%" y="517" width="0.0801%" height="15" fill="rgb(238,132,17)" fg:x="1146" fg:w="1"/><text x="92.0769%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (28 samples, 2.24%)</title><rect x="89.7436%" y="565" width="2.2436%" height="15" fill="rgb(208,82,25)" fg:x="1120" fg:w="28"/><text x="89.9936%" y="575.50">p..</text></g><g><title>plugins_core::tools::occupied_by (2 samples, 0.16%)</title><rect x="91.8269%" y="549" width="0.1603%" height="15" fill="rgb(237,77,13)" fg:x="1146" fg:w="2"/><text x="92.0769%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="91.9071%" y="533" width="0.0801%" height="15" fill="rgb(230,6,11)" fg:x="1147" fg:w="1"/><text x="92.1571%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.9071%" y="517" width="0.0801%" height="15" fill="rgb(207,29,48)" fg:x="1147" fg:w="1"/><text x="92.1571%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9071%" y="501" width="0.0801%" height="15" fill="rgb(247,105,22)" fg:x="1147" fg:w="1"/><text x="92.1571%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9071%" y="485" width="0.0801%" height="15" fill="rgb(223,114,44)" fg:x="1147" fg:w="1"/><text x="92.1571%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9071%" y="469" width="0.0801%" height="15" fill="rgb(242,3,46)" fg:x="1147" fg:w="1"/><text x="92.1571%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9071%" y="453" width="0.0801%" height="15" fill="rgb(243,197,8)" fg:x="1147" fg:w="1"/><text x="92.1571%" y="463.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="91.9872%" y="549" width="0.0801%" height="15" fill="rgb(238,171,27)" fg:x="1148" fg:w="1"/><text x="92.2372%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.0673%" y="469" width="0.1603%" height="15" fill="rgb(254,144,27)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.0673%" y="453" width="0.1603%" height="15" fill="rgb(216,203,36)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.0673%" y="437" width="0.1603%" height="15" fill="rgb(247,27,26)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.0673%" y="421" width="0.1603%" height="15" fill="rgb(234,180,24)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.0673%" y="405" width="0.1603%" height="15" fill="rgb(221,50,43)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="92.0673%" y="389" width="0.1603%" height="15" fill="rgb(236,50,6)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="92.0673%" y="373" width="0.1603%" height="15" fill="rgb(245,172,32)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="92.0673%" y="357" width="0.1603%" height="15" fill="rgb(207,54,46)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="92.0673%" y="341" width="0.1603%" height="15" fill="rgb(218,67,44)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="92.0673%" y="325" width="0.1603%" height="15" fill="rgb(208,152,22)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="92.0673%" y="309" width="0.1603%" height="15" fill="rgb(243,177,0)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="92.0673%" y="293" width="0.1603%" height="15" fill="rgb(212,75,12)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="92.0673%" y="277" width="0.1603%" height="15" fill="rgb(212,129,29)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="92.0673%" y="261" width="0.1603%" height="15" fill="rgb(241,229,35)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.0673%" y="245" width="0.1603%" height="15" fill="rgb(232,49,32)" fg:x="1149" fg:w="2"/><text x="92.3173%" y="255.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="91.9872%" y="565" width="0.3205%" height="15" fill="rgb(243,119,48)" fg:x="1148" fg:w="4"/><text x="92.2372%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="92.0673%" y="549" width="0.2404%" height="15" fill="rgb(212,205,30)" fg:x="1149" fg:w="3"/><text x="92.3173%" y="559.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="92.0673%" y="533" width="0.2404%" height="15" fill="rgb(218,175,42)" fg:x="1149" fg:w="3"/><text x="92.3173%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="92.0673%" y="517" width="0.2404%" height="15" fill="rgb(230,156,27)" fg:x="1149" fg:w="3"/><text x="92.3173%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="92.0673%" y="501" width="0.2404%" height="15" fill="rgb(254,32,43)" fg:x="1149" fg:w="3"/><text x="92.3173%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="92.0673%" y="485" width="0.2404%" height="15" fill="rgb(246,89,34)" fg:x="1149" fg:w="3"/><text x="92.3173%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.2276%" y="469" width="0.0801%" height="15" fill="rgb(247,162,17)" fg:x="1151" fg:w="1"/><text x="92.4776%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.2276%" y="453" width="0.0801%" height="15" fill="rgb(219,71,37)" fg:x="1151" fg:w="1"/><text x="92.4776%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.2276%" y="437" width="0.0801%" height="15" fill="rgb(210,184,7)" fg:x="1151" fg:w="1"/><text x="92.4776%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.2276%" y="421" width="0.0801%" height="15" fill="rgb(245,16,32)" fg:x="1151" fg:w="1"/><text x="92.4776%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.2276%" y="405" width="0.0801%" height="15" fill="rgb(209,62,7)" fg:x="1151" fg:w="1"/><text x="92.4776%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.2276%" y="389" width="0.0801%" height="15" fill="rgb(215,16,15)" fg:x="1151" fg:w="1"/><text x="92.4776%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4679%" y="453" width="0.0801%" height="15" fill="rgb(223,60,14)" fg:x="1154" fg:w="1"/><text x="92.7179%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4679%" y="437" width="0.0801%" height="15" fill="rgb(244,134,12)" fg:x="1154" fg:w="1"/><text x="92.7179%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.4679%" y="421" width="0.0801%" height="15" fill="rgb(224,3,41)" fg:x="1154" fg:w="1"/><text x="92.7179%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.4679%" y="405" width="0.0801%" height="15" fill="rgb(213,84,2)" fg:x="1154" fg:w="1"/><text x="92.7179%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.4679%" y="389" width="0.0801%" height="15" fill="rgb(213,216,27)" fg:x="1154" fg:w="1"/><text x="92.7179%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.4679%" y="373" width="0.0801%" height="15" fill="rgb(218,76,35)" fg:x="1154" fg:w="1"/><text x="92.7179%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4679%" y="357" width="0.0801%" height="15" fill="rgb(253,89,24)" fg:x="1154" fg:w="1"/><text x="92.7179%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (37 samples, 2.96%)</title><rect x="89.6635%" y="597" width="2.9647%" height="15" fill="rgb(217,188,40)" fg:x="1119" fg:w="37"/><text x="89.9135%" y="607.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (37 samples, 2.96%)</title><rect x="89.6635%" y="581" width="2.9647%" height="15" fill="rgb(237,79,38)" fg:x="1119" fg:w="37"/><text x="89.9135%" y="591.50">&lt;pl..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (4 samples, 0.32%)</title><rect x="92.3077%" y="565" width="0.3205%" height="15" fill="rgb(215,116,13)" fg:x="1152" fg:w="4"/><text x="92.5577%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="92.3077%" y="549" width="0.3205%" height="15" fill="rgb(249,66,35)" fg:x="1152" fg:w="4"/><text x="92.5577%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.4679%" y="533" width="0.1603%" height="15" fill="rgb(253,86,18)" fg:x="1154" fg:w="2"/><text x="92.7179%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.4679%" y="517" width="0.1603%" height="15" fill="rgb(209,175,36)" fg:x="1154" fg:w="2"/><text x="92.7179%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="92.4679%" y="501" width="0.1603%" height="15" fill="rgb(253,149,3)" fg:x="1154" fg:w="2"/><text x="92.7179%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="92.4679%" y="485" width="0.1603%" height="15" fill="rgb(242,124,49)" fg:x="1154" fg:w="2"/><text x="92.7179%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="92.4679%" y="469" width="0.1603%" height="15" fill="rgb(219,171,24)" fg:x="1154" fg:w="2"/><text x="92.7179%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.5481%" y="453" width="0.0801%" height="15" fill="rgb(216,121,30)" fg:x="1155" fg:w="1"/><text x="92.7981%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.5481%" y="437" width="0.0801%" height="15" fill="rgb(234,165,21)" fg:x="1155" fg:w="1"/><text x="92.7981%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="92.6282%" y="597" width="0.1603%" height="15" fill="rgb(234,103,40)" fg:x="1156" fg:w="2"/><text x="92.8782%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="92.6282%" y="581" width="0.1603%" height="15" fill="rgb(250,137,24)" fg:x="1156" fg:w="2"/><text x="92.8782%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="92.6282%" y="565" width="0.1603%" height="15" fill="rgb(253,22,21)" fg:x="1156" fg:w="2"/><text x="92.8782%" y="575.50"></text></g><g><title>plugins_core::library::actions::reply_done (2 samples, 0.16%)</title><rect x="92.7885%" y="597" width="0.1603%" height="15" fill="rgb(243,22,5)" fg:x="1158" fg:w="2"/><text x="93.0385%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="92.8686%" y="581" width="0.0801%" height="15" fill="rgb(212,56,7)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="92.8686%" y="565" width="0.0801%" height="15" fill="rgb(223,190,49)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="575.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="92.8686%" y="549" width="0.0801%" height="15" fill="rgb(221,110,35)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="92.8686%" y="533" width="0.0801%" height="15" fill="rgb(212,113,34)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="543.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="92.8686%" y="517" width="0.0801%" height="15" fill="rgb(216,125,47)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="92.8686%" y="501" width="0.0801%" height="15" fill="rgb(251,112,19)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="92.8686%" y="485" width="0.0801%" height="15" fill="rgb(254,200,41)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="92.8686%" y="469" width="0.0801%" height="15" fill="rgb(225,17,42)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="92.8686%" y="453" width="0.0801%" height="15" fill="rgb(208,105,35)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8686%" y="437" width="0.0801%" height="15" fill="rgb(210,125,51)" fg:x="1159" fg:w="1"/><text x="93.1186%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="92.9487%" y="581" width="0.0801%" height="15" fill="rgb(227,213,18)" fg:x="1160" fg:w="1"/><text x="93.1987%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="93.0288%" y="549" width="0.0801%" height="15" fill="rgb(221,174,32)" fg:x="1161" fg:w="1"/><text x="93.2788%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="93.0288%" y="581" width="0.2404%" height="15" fill="rgb(234,23,1)" fg:x="1161" fg:w="3"/><text x="93.2788%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="93.0288%" y="565" width="0.2404%" height="15" fill="rgb(209,65,17)" fg:x="1161" fg:w="3"/><text x="93.2788%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="93.1090%" y="549" width="0.1603%" height="15" fill="rgb(206,224,31)" fg:x="1162" fg:w="2"/><text x="93.3590%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.1090%" y="533" width="0.1603%" height="15" fill="rgb(230,20,38)" fg:x="1162" fg:w="2"/><text x="93.3590%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.1891%" y="517" width="0.0801%" height="15" fill="rgb(211,9,41)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1891%" y="501" width="0.0801%" height="15" fill="rgb(233,214,4)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.1891%" y="485" width="0.0801%" height="15" fill="rgb(225,60,54)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1891%" y="469" width="0.0801%" height="15" fill="rgb(206,228,35)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.1891%" y="453" width="0.0801%" height="15" fill="rgb(212,178,50)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1891%" y="437" width="0.0801%" height="15" fill="rgb(206,192,33)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.1891%" y="421" width="0.0801%" height="15" fill="rgb(238,210,1)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1891%" y="405" width="0.0801%" height="15" fill="rgb(205,65,52)" fg:x="1163" fg:w="1"/><text x="93.4391%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2692%" y="549" width="0.0801%" height="15" fill="rgb(237,204,51)" fg:x="1164" fg:w="1"/><text x="93.5192%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2692%" y="533" width="0.0801%" height="15" fill="rgb(213,119,51)" fg:x="1164" fg:w="1"/><text x="93.5192%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2692%" y="517" width="0.0801%" height="15" fill="rgb(244,156,37)" fg:x="1164" fg:w="1"/><text x="93.5192%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2692%" y="501" width="0.0801%" height="15" fill="rgb(249,96,18)" fg:x="1164" fg:w="1"/><text x="93.5192%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="93.3494%" y="549" width="0.1603%" height="15" fill="rgb(231,65,11)" fg:x="1165" fg:w="2"/><text x="93.5994%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="93.3494%" y="533" width="0.1603%" height="15" fill="rgb(240,187,2)" fg:x="1165" fg:w="2"/><text x="93.5994%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="93.3494%" y="517" width="0.1603%" height="15" fill="rgb(242,121,39)" fg:x="1165" fg:w="2"/><text x="93.5994%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="93.3494%" y="501" width="0.1603%" height="15" fill="rgb(233,205,18)" fg:x="1165" fg:w="2"/><text x="93.5994%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="93.3494%" y="485" width="0.1603%" height="15" fill="rgb(219,67,33)" fg:x="1165" fg:w="2"/><text x="93.5994%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="93.4295%" y="469" width="0.0801%" height="15" fill="rgb(227,84,12)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.4295%" y="453" width="0.0801%" height="15" fill="rgb(227,42,52)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.4295%" y="437" width="0.0801%" height="15" fill="rgb(231,27,28)" fg:x="1166" fg:w="1"/><text x="93.6795%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="93.2692%" y="581" width="0.3205%" height="15" fill="rgb(238,42,2)" fg:x="1164" fg:w="4"/><text x="93.5192%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="93.2692%" y="565" width="0.3205%" height="15" fill="rgb(215,15,9)" fg:x="1164" fg:w="4"/><text x="93.5192%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5096%" y="549" width="0.0801%" height="15" fill="rgb(205,195,15)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5096%" y="533" width="0.0801%" height="15" fill="rgb(233,143,2)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.5096%" y="517" width="0.0801%" height="15" fill="rgb(207,108,8)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.5096%" y="501" width="0.0801%" height="15" fill="rgb(214,53,21)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.5096%" y="485" width="0.0801%" height="15" fill="rgb(238,212,36)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5096%" y="469" width="0.0801%" height="15" fill="rgb(218,151,47)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5096%" y="453" width="0.0801%" height="15" fill="rgb(245,160,3)" fg:x="1167" fg:w="1"/><text x="93.7596%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5897%" y="517" width="0.0801%" height="15" fill="rgb(238,106,19)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5897%" y="501" width="0.0801%" height="15" fill="rgb(207,206,9)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5897%" y="485" width="0.0801%" height="15" fill="rgb(254,40,10)" fg:x="1168" fg:w="1"/><text x="93.8397%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="93.5897%" y="581" width="0.1603%" height="15" fill="rgb(245,81,8)" fg:x="1168" fg:w="2"/><text x="93.8397%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="93.5897%" y="565" width="0.1603%" height="15" fill="rgb(214,119,17)" fg:x="1168" fg:w="2"/><text x="93.8397%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="93.5897%" y="549" width="0.1603%" height="15" fill="rgb(245,100,39)" fg:x="1168" fg:w="2"/><text x="93.8397%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="93.5897%" y="533" width="0.1603%" height="15" fill="rgb(243,105,16)" fg:x="1168" fg:w="2"/><text x="93.8397%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="93.6699%" y="517" width="0.0801%" height="15" fill="rgb(214,53,2)" fg:x="1169" fg:w="1"/><text x="93.9199%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7500%" y="533" width="0.0801%" height="15" fill="rgb(251,54,50)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7500%" y="517" width="0.0801%" height="15" fill="rgb(244,121,37)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.7500%" y="501" width="0.0801%" height="15" fill="rgb(236,158,39)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.7500%" y="485" width="0.0801%" height="15" fill="rgb(226,25,37)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.7500%" y="469" width="0.0801%" height="15" fill="rgb(222,71,46)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.7500%" y="453" width="0.0801%" height="15" fill="rgb(209,27,29)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.7500%" y="437" width="0.0801%" height="15" fill="rgb(210,196,17)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.7500%" y="421" width="0.0801%" height="15" fill="rgb(236,76,23)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.7500%" y="405" width="0.0801%" height="15" fill="rgb(214,33,32)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.7500%" y="389" width="0.0801%" height="15" fill="rgb(243,16,26)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.7500%" y="373" width="0.0801%" height="15" fill="rgb(241,30,48)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7500%" y="357" width="0.0801%" height="15" fill="rgb(241,106,1)" fg:x="1170" fg:w="1"/><text x="94.0000%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8301%" y="501" width="0.0801%" height="15" fill="rgb(230,62,29)" fg:x="1171" fg:w="1"/><text x="94.0801%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="93.8301%" y="533" width="0.1603%" height="15" fill="rgb(207,166,53)" fg:x="1171" fg:w="2"/><text x="94.0801%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.8301%" y="517" width="0.1603%" height="15" fill="rgb(244,54,13)" fg:x="1171" fg:w="2"/><text x="94.0801%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9103%" y="501" width="0.0801%" height="15" fill="rgb(205,144,19)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9103%" y="485" width="0.0801%" height="15" fill="rgb(225,165,45)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.9103%" y="469" width="0.0801%" height="15" fill="rgb(220,140,6)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9103%" y="453" width="0.0801%" height="15" fill="rgb(234,69,14)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9103%" y="437" width="0.0801%" height="15" fill="rgb(243,24,33)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9103%" y="421" width="0.0801%" height="15" fill="rgb(253,100,43)" fg:x="1172" fg:w="1"/><text x="94.1603%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.9904%" y="437" width="0.0801%" height="15" fill="rgb(221,168,15)" fg:x="1173" fg:w="1"/><text x="94.2404%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.9904%" y="421" width="0.0801%" height="15" fill="rgb(237,15,11)" fg:x="1173" fg:w="1"/><text x="94.2404%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="93.7500%" y="565" width="0.4006%" height="15" fill="rgb(229,207,40)" fg:x="1170" fg:w="5"/><text x="94.0000%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="93.7500%" y="549" width="0.4006%" height="15" fill="rgb(246,125,48)" fg:x="1170" fg:w="5"/><text x="94.0000%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="93.9904%" y="533" width="0.1603%" height="15" fill="rgb(231,65,10)" fg:x="1173" fg:w="2"/><text x="94.2404%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.9904%" y="517" width="0.1603%" height="15" fill="rgb(222,152,40)" fg:x="1173" fg:w="2"/><text x="94.2404%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.9904%" y="501" width="0.1603%" height="15" fill="rgb(214,12,30)" fg:x="1173" fg:w="2"/><text x="94.2404%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.9904%" y="485" width="0.1603%" height="15" fill="rgb(239,80,41)" fg:x="1173" fg:w="2"/><text x="94.2404%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.9904%" y="469" width="0.1603%" height="15" fill="rgb(206,175,27)" fg:x="1173" fg:w="2"/><text x="94.2404%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.9904%" y="453" width="0.1603%" height="15" fill="rgb(222,43,39)" fg:x="1173" fg:w="2"/><text x="94.2404%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0705%" y="437" width="0.0801%" height="15" fill="rgb(243,47,50)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0705%" y="421" width="0.0801%" height="15" fill="rgb(243,61,21)" fg:x="1174" fg:w="1"/><text x="94.3205%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="93.7500%" y="581" width="0.4808%" height="15" fill="rgb(208,172,5)" fg:x="1170" fg:w="6"/><text x="94.0000%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="94.1506%" y="565" width="0.0801%" height="15" fill="rgb(219,24,25)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.1506%" y="549" width="0.0801%" height="15" fill="rgb(235,42,41)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="94.1506%" y="533" width="0.0801%" height="15" fill="rgb(226,190,24)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="94.1506%" y="517" width="0.0801%" height="15" fill="rgb(216,55,27)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="94.1506%" y="501" width="0.0801%" height="15" fill="rgb(231,77,14)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="94.1506%" y="485" width="0.0801%" height="15" fill="rgb(208,108,34)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.1506%" y="469" width="0.0801%" height="15" fill="rgb(228,183,52)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.1506%" y="453" width="0.0801%" height="15" fill="rgb(224,152,1)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="94.1506%" y="437" width="0.0801%" height="15" fill="rgb(246,115,8)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="94.1506%" y="421" width="0.0801%" height="15" fill="rgb(211,76,13)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="94.1506%" y="405" width="0.0801%" height="15" fill="rgb(233,214,49)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="94.1506%" y="389" width="0.0801%" height="15" fill="rgb(223,44,51)" fg:x="1175" fg:w="1"/><text x="94.4006%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="94.2308%" y="549" width="0.0801%" height="15" fill="rgb(225,111,51)" fg:x="1176" fg:w="1"/><text x="94.4808%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.2308%" y="533" width="0.0801%" height="15" fill="rgb(231,185,26)" fg:x="1176" fg:w="1"/><text x="94.4808%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.2308%" y="517" width="0.0801%" height="15" fill="rgb(233,111,30)" fg:x="1176" fg:w="1"/><text x="94.4808%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="94.3109%" y="501" width="0.0801%" height="15" fill="rgb(250,1,47)" fg:x="1177" fg:w="1"/><text x="94.5609%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (65 samples, 5.21%)</title><rect x="89.2628%" y="613" width="5.2083%" height="15" fill="rgb(254,210,3)" fg:x="1114" fg:w="65"/><text x="89.5128%" y="623.50">&lt;plugi..</text></g><g><title>plugins_core::location::change_location (19 samples, 1.52%)</title><rect x="92.9487%" y="597" width="1.5224%" height="15" fill="rgb(234,14,22)" fg:x="1160" fg:w="19"/><text x="93.1987%" y="607.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="94.2308%" y="581" width="0.2404%" height="15" fill="rgb(221,117,4)" fg:x="1176" fg:w="3"/><text x="94.4808%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="94.2308%" y="565" width="0.2404%" height="15" fill="rgb(251,147,27)" fg:x="1176" fg:w="3"/><text x="94.4808%" y="575.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="94.3109%" y="549" width="0.1603%" height="15" fill="rgb(226,52,11)" fg:x="1177" fg:w="2"/><text x="94.5609%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="94.3109%" y="533" width="0.1603%" height="15" fill="rgb(229,222,5)" fg:x="1177" fg:w="2"/><text x="94.5609%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="94.3109%" y="517" width="0.1603%" height="15" fill="rgb(232,76,2)" fg:x="1177" fg:w="2"/><text x="94.5609%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="94.3910%" y="501" width="0.0801%" height="15" fill="rgb(242,108,2)" fg:x="1178" fg:w="1"/><text x="94.6410%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3910%" y="485" width="0.0801%" height="15" fill="rgb(213,165,6)" fg:x="1178" fg:w="1"/><text x="94.6410%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="94.4712%" y="581" width="0.0801%" height="15" fill="rgb(222,24,42)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="94.4712%" y="565" width="0.0801%" height="15" fill="rgb(242,170,24)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.4712%" y="549" width="0.0801%" height="15" fill="rgb(209,110,40)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.4712%" y="533" width="0.0801%" height="15" fill="rgb(233,146,36)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.4712%" y="517" width="0.0801%" height="15" fill="rgb(229,33,32)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="94.4712%" y="501" width="0.0801%" height="15" fill="rgb(225,55,34)" fg:x="1179" fg:w="1"/><text x="94.7212%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5513%" y="565" width="0.0801%" height="15" fill="rgb(217,32,50)" fg:x="1180" fg:w="1"/><text x="94.8013%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="94.6314%" y="565" width="0.0801%" height="15" fill="rgb(206,110,53)" fg:x="1181" fg:w="1"/><text x="94.8814%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.6314%" y="549" width="0.0801%" height="15" fill="rgb(247,25,10)" fg:x="1181" fg:w="1"/><text x="94.8814%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (3 samples, 0.24%)</title><rect x="94.5513%" y="581" width="0.2404%" height="15" fill="rgb(226,67,48)" fg:x="1180" fg:w="3"/><text x="94.8013%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.7115%" y="565" width="0.0801%" height="15" fill="rgb(239,73,28)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7115%" y="549" width="0.0801%" height="15" fill="rgb(234,200,41)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7115%" y="533" width="0.0801%" height="15" fill="rgb(233,76,35)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.7115%" y="517" width="0.0801%" height="15" fill="rgb(238,166,31)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7115%" y="501" width="0.0801%" height="15" fill="rgb(219,218,51)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7115%" y="485" width="0.0801%" height="15" fill="rgb(221,82,53)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7115%" y="469" width="0.0801%" height="15" fill="rgb(218,179,13)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="94.7115%" y="453" width="0.0801%" height="15" fill="rgb(210,53,38)" fg:x="1182" fg:w="1"/><text x="94.9615%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7917%" y="549" width="0.0801%" height="15" fill="rgb(214,167,31)" fg:x="1183" fg:w="1"/><text x="95.0417%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7917%" y="533" width="0.0801%" height="15" fill="rgb(223,26,5)" fg:x="1183" fg:w="1"/><text x="95.0417%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7917%" y="517" width="0.0801%" height="15" fill="rgb(218,95,23)" fg:x="1183" fg:w="1"/><text x="95.0417%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7917%" y="501" width="0.0801%" height="15" fill="rgb(248,205,45)" fg:x="1183" fg:w="1"/><text x="95.0417%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.8718%" y="549" width="0.0801%" height="15" fill="rgb(211,76,6)" fg:x="1184" fg:w="1"/><text x="95.1218%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.8718%" y="533" width="0.0801%" height="15" fill="rgb(250,176,29)" fg:x="1184" fg:w="1"/><text x="95.1218%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.9519%" y="549" width="0.0801%" height="15" fill="rgb(240,107,31)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.9519%" y="533" width="0.0801%" height="15" fill="rgb(229,215,17)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.9519%" y="517" width="0.0801%" height="15" fill="rgb(240,79,8)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9519%" y="501" width="0.0801%" height="15" fill="rgb(243,110,48)" fg:x="1185" fg:w="1"/><text x="95.2019%" y="511.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (8 samples, 0.64%)</title><rect x="94.4712%" y="597" width="0.6410%" height="15" fill="rgb(236,201,9)" fg:x="1179" fg:w="8"/><text x="94.7212%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="94.7917%" y="581" width="0.3205%" height="15" fill="rgb(220,87,26)" fg:x="1183" fg:w="4"/><text x="95.0417%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="94.7917%" y="565" width="0.3205%" height="15" fill="rgb(212,118,27)" fg:x="1183" fg:w="4"/><text x="95.0417%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0321%" y="549" width="0.0801%" height="15" fill="rgb(244,178,50)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0321%" y="533" width="0.0801%" height="15" fill="rgb(215,204,7)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.0321%" y="517" width="0.0801%" height="15" fill="rgb(214,122,43)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0321%" y="501" width="0.0801%" height="15" fill="rgb(251,178,26)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0321%" y="485" width="0.0801%" height="15" fill="rgb(210,7,35)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0321%" y="469" width="0.0801%" height="15" fill="rgb(227,164,54)" fg:x="1186" fg:w="1"/><text x="95.2821%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1122%" y="549" width="0.0801%" height="15" fill="rgb(205,18,34)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1122%" y="533" width="0.0801%" height="15" fill="rgb(239,50,19)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1122%" y="517" width="0.0801%" height="15" fill="rgb(224,85,6)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1122%" y="501" width="0.0801%" height="15" fill="rgb(252,167,34)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1122%" y="485" width="0.0801%" height="15" fill="rgb(243,180,35)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1122%" y="469" width="0.0801%" height="15" fill="rgb(213,214,53)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1122%" y="453" width="0.0801%" height="15" fill="rgb(244,39,37)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1122%" y="437" width="0.0801%" height="15" fill="rgb(215,141,14)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1122%" y="421" width="0.0801%" height="15" fill="rgb(210,2,42)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1122%" y="405" width="0.0801%" height="15" fill="rgb(252,189,47)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1122%" y="389" width="0.0801%" height="15" fill="rgb(222,154,47)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1122%" y="373" width="0.0801%" height="15" fill="rgb(228,20,37)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1122%" y="357" width="0.0801%" height="15" fill="rgb(236,17,4)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1122%" y="341" width="0.0801%" height="15" fill="rgb(222,211,31)" fg:x="1187" fg:w="1"/><text x="95.3622%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="95.1923%" y="549" width="0.0801%" height="15" fill="rgb(218,134,25)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.1923%" y="533" width="0.0801%" height="15" fill="rgb(218,97,43)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="95.1923%" y="517" width="0.0801%" height="15" fill="rgb(234,163,32)" fg:x="1188" fg:w="1"/><text x="95.4423%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.2724%" y="549" width="0.0801%" height="15" fill="rgb(251,171,42)" fg:x="1189" fg:w="1"/><text x="95.5224%" y="559.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3526%" y="501" width="0.0801%" height="15" fill="rgb(223,104,12)" fg:x="1190" fg:w="1"/><text x="95.6026%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="95.4327%" y="501" width="0.0801%" height="15" fill="rgb(225,29,49)" fg:x="1191" fg:w="1"/><text x="95.6827%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.4327%" y="485" width="0.0801%" height="15" fill="rgb(253,77,7)" fg:x="1191" fg:w="1"/><text x="95.6827%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.4327%" y="469" width="0.0801%" height="15" fill="rgb(213,81,26)" fg:x="1191" fg:w="1"/><text x="95.6827%" y="479.50"></text></g><g><title>plugins_core::tools::contained_by (3 samples, 0.24%)</title><rect x="95.3526%" y="549" width="0.2404%" height="15" fill="rgb(246,126,6)" fg:x="1190" fg:w="3"/><text x="95.6026%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="95.3526%" y="533" width="0.2404%" height="15" fill="rgb(232,186,21)" fg:x="1190" fg:w="3"/><text x="95.6026%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="95.3526%" y="517" width="0.2404%" height="15" fill="rgb(215,126,18)" fg:x="1190" fg:w="3"/><text x="95.6026%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.5128%" y="501" width="0.0801%" height="15" fill="rgb(210,47,5)" fg:x="1192" fg:w="1"/><text x="95.7628%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.5128%" y="485" width="0.0801%" height="15" fill="rgb(240,70,6)" fg:x="1192" fg:w="1"/><text x="95.7628%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.5128%" y="469" width="0.0801%" height="15" fill="rgb(230,99,49)" fg:x="1192" fg:w="1"/><text x="95.7628%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.5128%" y="453" width="0.0801%" height="15" fill="rgb(212,57,36)" fg:x="1192" fg:w="1"/><text x="95.7628%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="95.5128%" y="437" width="0.0801%" height="15" fill="rgb(243,14,50)" fg:x="1192" fg:w="1"/><text x="95.7628%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.5128%" y="421" width="0.0801%" height="15" fill="rgb(240,2,53)" fg:x="1192" fg:w="1"/><text x="95.7628%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.5128%" y="405" width="0.0801%" height="15" fill="rgb(208,47,53)" fg:x="1192" fg:w="1"/><text x="95.7628%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.5128%" y="389" width="0.0801%" height="15" fill="rgb(235,186,39)" fg:x="1192" fg:w="1"/><text x="95.7628%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="95.5929%" y="533" width="0.0801%" height="15" fill="rgb(212,35,47)" fg:x="1193" fg:w="1"/><text x="95.8429%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.5929%" y="517" width="0.0801%" height="15" fill="rgb(248,59,37)" fg:x="1193" fg:w="1"/><text x="95.8429%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="95.5929%" y="501" width="0.0801%" height="15" fill="rgb(223,186,16)" fg:x="1193" fg:w="1"/><text x="95.8429%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.5929%" y="485" width="0.0801%" height="15" fill="rgb(215,106,35)" fg:x="1193" fg:w="1"/><text x="95.8429%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="95.5929%" y="469" width="0.0801%" height="15" fill="rgb(217,141,29)" fg:x="1193" fg:w="1"/><text x="95.8429%" y="479.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="95.6731%" y="501" width="0.0801%" height="15" fill="rgb(221,227,46)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.6731%" y="485" width="0.0801%" height="15" fill="rgb(212,36,41)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.6731%" y="469" width="0.0801%" height="15" fill="rgb(222,35,11)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="95.6731%" y="453" width="0.0801%" height="15" fill="rgb(232,165,33)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="463.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="95.6731%" y="437" width="0.0801%" height="15" fill="rgb(211,38,20)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6731%" y="421" width="0.0801%" height="15" fill="rgb(230,7,36)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6731%" y="405" width="0.0801%" height="15" fill="rgb(213,128,35)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.6731%" y="389" width="0.0801%" height="15" fill="rgb(218,11,14)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.6731%" y="373" width="0.0801%" height="15" fill="rgb(249,105,7)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.6731%" y="357" width="0.0801%" height="15" fill="rgb(226,125,21)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6731%" y="341" width="0.0801%" height="15" fill="rgb(239,90,47)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6731%" y="325" width="0.0801%" height="15" fill="rgb(226,19,1)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.6731%" y="309" width="0.0801%" height="15" fill="rgb(205,117,40)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.6731%" y="293" width="0.0801%" height="15" fill="rgb(234,6,54)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.6731%" y="277" width="0.0801%" height="15" fill="rgb(239,73,32)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.6731%" y="261" width="0.0801%" height="15" fill="rgb(226,197,12)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6731%" y="245" width="0.0801%" height="15" fill="rgb(226,53,42)" fg:x="1194" fg:w="1"/><text x="95.9231%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7532%" y="469" width="0.0801%" height="15" fill="rgb(234,99,30)" fg:x="1195" fg:w="1"/><text x="96.0032%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (10 samples, 0.80%)</title><rect x="95.1122%" y="565" width="0.8013%" height="15" fill="rgb(237,175,49)" fg:x="1187" fg:w="10"/><text x="95.3622%" y="575.50"></text></g><g><title>plugins_core::tools::occupied_by (4 samples, 0.32%)</title><rect x="95.5929%" y="549" width="0.3205%" height="15" fill="rgb(228,75,42)" fg:x="1193" fg:w="4"/><text x="95.8429%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="95.6731%" y="533" width="0.2404%" height="15" fill="rgb(223,162,48)" fg:x="1194" fg:w="3"/><text x="95.9231%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="95.6731%" y="517" width="0.2404%" height="15" fill="rgb(221,192,29)" fg:x="1194" fg:w="3"/><text x="95.9231%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.7532%" y="501" width="0.1603%" height="15" fill="rgb(249,150,41)" fg:x="1195" fg:w="2"/><text x="96.0032%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.7532%" y="485" width="0.1603%" height="15" fill="rgb(243,107,34)" fg:x="1195" fg:w="2"/><text x="96.0032%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.8333%" y="469" width="0.0801%" height="15" fill="rgb(214,227,11)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.8333%" y="453" width="0.0801%" height="15" fill="rgb(209,37,13)" fg:x="1196" fg:w="1"/><text x="96.0833%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.9135%" y="485" width="0.1603%" height="15" fill="rgb(249,124,20)" fg:x="1197" fg:w="2"/><text x="96.1635%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.9135%" y="469" width="0.1603%" height="15" fill="rgb(228,28,2)" fg:x="1197" fg:w="2"/><text x="96.1635%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.9135%" y="453" width="0.1603%" height="15" fill="rgb(244,55,1)" fg:x="1197" fg:w="2"/><text x="96.1635%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9936%" y="437" width="0.0801%" height="15" fill="rgb(216,26,19)" fg:x="1198" fg:w="1"/><text x="96.2436%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="95.9135%" y="565" width="0.2404%" height="15" fill="rgb(209,162,10)" fg:x="1197" fg:w="3"/><text x="96.1635%" y="575.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="95.9135%" y="549" width="0.2404%" height="15" fill="rgb(235,168,42)" fg:x="1197" fg:w="3"/><text x="96.1635%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="95.9135%" y="533" width="0.2404%" height="15" fill="rgb(240,24,14)" fg:x="1197" fg:w="3"/><text x="96.1635%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="95.9135%" y="517" width="0.2404%" height="15" fill="rgb(224,107,11)" fg:x="1197" fg:w="3"/><text x="96.1635%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="95.9135%" y="501" width="0.2404%" height="15" fill="rgb(226,48,4)" fg:x="1197" fg:w="3"/><text x="96.1635%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0737%" y="485" width="0.0801%" height="15" fill="rgb(254,31,21)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0737%" y="469" width="0.0801%" height="15" fill="rgb(205,156,19)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.0737%" y="453" width="0.0801%" height="15" fill="rgb(216,73,31)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0737%" y="437" width="0.0801%" height="15" fill="rgb(237,88,35)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0737%" y="421" width="0.0801%" height="15" fill="rgb(254,79,48)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0737%" y="405" width="0.0801%" height="15" fill="rgb(211,66,36)" fg:x="1199" fg:w="1"/><text x="96.3237%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (14 samples, 1.12%)</title><rect x="95.1122%" y="597" width="1.1218%" height="15" fill="rgb(222,13,1)" fg:x="1187" fg:w="14"/><text x="95.3622%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (14 samples, 1.12%)</title><rect x="95.1122%" y="581" width="1.1218%" height="15" fill="rgb(221,216,41)" fg:x="1187" fg:w="14"/><text x="95.3622%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="96.1538%" y="565" width="0.0801%" height="15" fill="rgb(220,10,17)" fg:x="1200" fg:w="1"/><text x="96.4038%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1538%" y="549" width="0.0801%" height="15" fill="rgb(242,43,35)" fg:x="1200" fg:w="1"/><text x="96.4038%" y="559.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="96.2340%" y="597" width="0.0801%" height="15" fill="rgb(216,182,18)" fg:x="1201" fg:w="1"/><text x="96.4840%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3942%" y="517" width="0.0801%" height="15" fill="rgb(246,217,36)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3942%" y="501" width="0.0801%" height="15" fill="rgb(208,107,8)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3942%" y="485" width="0.0801%" height="15" fill="rgb(208,189,15)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3942%" y="469" width="0.0801%" height="15" fill="rgb(211,70,9)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3942%" y="453" width="0.0801%" height="15" fill="rgb(217,95,34)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.3942%" y="437" width="0.0801%" height="15" fill="rgb(240,223,2)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.3942%" y="421" width="0.0801%" height="15" fill="rgb(231,18,6)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.3942%" y="405" width="0.0801%" height="15" fill="rgb(254,44,46)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3942%" y="389" width="0.0801%" height="15" fill="rgb(223,222,46)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3942%" y="373" width="0.0801%" height="15" fill="rgb(229,163,13)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.3942%" y="357" width="0.0801%" height="15" fill="rgb(220,208,13)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.3942%" y="341" width="0.0801%" height="15" fill="rgb(244,28,53)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.3942%" y="325" width="0.0801%" height="15" fill="rgb(243,138,0)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.3942%" y="309" width="0.0801%" height="15" fill="rgb(209,90,49)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3942%" y="293" width="0.0801%" height="15" fill="rgb(247,114,18)" fg:x="1203" fg:w="1"/><text x="96.6442%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="96.3942%" y="581" width="0.1603%" height="15" fill="rgb(221,14,46)" fg:x="1203" fg:w="2"/><text x="96.6442%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="96.3942%" y="565" width="0.1603%" height="15" fill="rgb(215,29,23)" fg:x="1203" fg:w="2"/><text x="96.6442%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="96.3942%" y="549" width="0.1603%" height="15" fill="rgb(241,37,25)" fg:x="1203" fg:w="2"/><text x="96.6442%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.3942%" y="533" width="0.1603%" height="15" fill="rgb(225,17,22)" fg:x="1203" fg:w="2"/><text x="96.6442%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4744%" y="517" width="0.0801%" height="15" fill="rgb(241,182,7)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4744%" y="501" width="0.0801%" height="15" fill="rgb(248,125,10)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.4744%" y="485" width="0.0801%" height="15" fill="rgb(250,3,37)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4744%" y="469" width="0.0801%" height="15" fill="rgb(237,102,7)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4744%" y="453" width="0.0801%" height="15" fill="rgb(235,5,5)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.4744%" y="437" width="0.0801%" height="15" fill="rgb(249,147,38)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.4744%" y="421" width="0.0801%" height="15" fill="rgb(221,25,18)" fg:x="1204" fg:w="1"/><text x="96.7244%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6346%" y="517" width="0.0801%" height="15" fill="rgb(211,88,9)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6346%" y="501" width="0.0801%" height="15" fill="rgb(219,62,54)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.6346%" y="485" width="0.0801%" height="15" fill="rgb(243,133,46)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.6346%" y="469" width="0.0801%" height="15" fill="rgb(214,168,53)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.6346%" y="453" width="0.0801%" height="15" fill="rgb(250,58,7)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6346%" y="437" width="0.0801%" height="15" fill="rgb(249,131,5)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6346%" y="421" width="0.0801%" height="15" fill="rgb(234,40,44)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.6346%" y="405" width="0.0801%" height="15" fill="rgb(225,188,42)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.6346%" y="389" width="0.0801%" height="15" fill="rgb(218,201,51)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.6346%" y="373" width="0.0801%" height="15" fill="rgb(214,209,38)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.6346%" y="357" width="0.0801%" height="15" fill="rgb(217,0,20)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6346%" y="341" width="0.0801%" height="15" fill="rgb(248,183,46)" fg:x="1206" fg:w="1"/><text x="96.8846%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7949%" y="485" width="0.0801%" height="15" fill="rgb(208,99,41)" fg:x="1208" fg:w="1"/><text x="97.0449%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="96.5545%" y="549" width="0.4006%" height="15" fill="rgb(210,189,49)" fg:x="1205" fg:w="5"/><text x="96.8045%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="96.5545%" y="533" width="0.4006%" height="15" fill="rgb(239,191,42)" fg:x="1205" fg:w="5"/><text x="96.8045%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="96.7147%" y="517" width="0.2404%" height="15" fill="rgb(240,138,26)" fg:x="1207" fg:w="3"/><text x="96.9647%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.7147%" y="501" width="0.2404%" height="15" fill="rgb(234,45,22)" fg:x="1207" fg:w="3"/><text x="96.9647%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8750%" y="485" width="0.0801%" height="15" fill="rgb(228,43,35)" fg:x="1209" fg:w="1"/><text x="97.1250%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="96.9551%" y="549" width="0.3205%" height="15" fill="rgb(215,201,54)" fg:x="1210" fg:w="4"/><text x="97.2051%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="96.9551%" y="533" width="0.3205%" height="15" fill="rgb(209,60,31)" fg:x="1210" fg:w="4"/><text x="97.2051%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="96.9551%" y="517" width="0.3205%" height="15" fill="rgb(232,66,12)" fg:x="1210" fg:w="4"/><text x="97.2051%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="97.0353%" y="501" width="0.2404%" height="15" fill="rgb(244,78,24)" fg:x="1211" fg:w="3"/><text x="97.2853%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="97.1154%" y="485" width="0.1603%" height="15" fill="rgb(249,65,27)" fg:x="1212" fg:w="2"/><text x="97.3654%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="97.1154%" y="469" width="0.1603%" height="15" fill="rgb(208,218,19)" fg:x="1212" fg:w="2"/><text x="97.3654%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="97.1955%" y="453" width="0.0801%" height="15" fill="rgb(212,181,38)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1955%" y="437" width="0.0801%" height="15" fill="rgb(207,118,40)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1955%" y="421" width="0.0801%" height="15" fill="rgb(207,126,20)" fg:x="1213" fg:w="1"/><text x="97.4455%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.2756%" y="549" width="0.0801%" height="15" fill="rgb(232,15,46)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.2756%" y="533" width="0.0801%" height="15" fill="rgb(254,33,30)" fg:x="1214" fg:w="1"/><text x="97.5256%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.3558%" y="517" width="0.0801%" height="15" fill="rgb(233,92,20)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.3558%" y="501" width="0.0801%" height="15" fill="rgb(225,195,54)" fg:x="1215" fg:w="1"/><text x="97.6058%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (12 samples, 0.96%)</title><rect x="96.5545%" y="581" width="0.9615%" height="15" fill="rgb(208,196,7)" fg:x="1205" fg:w="12"/><text x="96.8045%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="96.5545%" y="565" width="0.9615%" height="15" fill="rgb(253,19,35)" fg:x="1205" fg:w="12"/><text x="96.8045%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.3558%" y="549" width="0.1603%" height="15" fill="rgb(228,180,1)" fg:x="1215" fg:w="2"/><text x="97.6058%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.3558%" y="533" width="0.1603%" height="15" fill="rgb(248,35,18)" fg:x="1215" fg:w="2"/><text x="97.6058%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.4359%" y="517" width="0.0801%" height="15" fill="rgb(220,34,8)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.4359%" y="501" width="0.0801%" height="15" fill="rgb(219,223,17)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.4359%" y="485" width="0.0801%" height="15" fill="rgb(223,183,15)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4359%" y="469" width="0.0801%" height="15" fill="rgb(253,184,45)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4359%" y="453" width="0.0801%" height="15" fill="rgb(207,97,29)" fg:x="1216" fg:w="1"/><text x="97.6859%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.5160%" y="549" width="0.0801%" height="15" fill="rgb(250,170,27)" fg:x="1217" fg:w="1"/><text x="97.7660%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.5160%" y="533" width="0.0801%" height="15" fill="rgb(206,178,17)" fg:x="1217" fg:w="1"/><text x="97.7660%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.5160%" y="517" width="0.0801%" height="15" fill="rgb(213,92,46)" fg:x="1217" fg:w="1"/><text x="97.7660%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5160%" y="501" width="0.0801%" height="15" fill="rgb(223,114,30)" fg:x="1217" fg:w="1"/><text x="97.7660%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="97.5160%" y="581" width="0.1603%" height="15" fill="rgb(207,228,9)" fg:x="1217" fg:w="2"/><text x="97.7660%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="97.5160%" y="565" width="0.1603%" height="15" fill="rgb(205,70,25)" fg:x="1217" fg:w="2"/><text x="97.7660%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5962%" y="549" width="0.0801%" height="15" fill="rgb(252,45,30)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.5962%" y="533" width="0.0801%" height="15" fill="rgb(219,185,54)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.5962%" y="517" width="0.0801%" height="15" fill="rgb(219,208,54)" fg:x="1218" fg:w="1"/><text x="97.8462%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="97.6763%" y="581" width="0.0801%" height="15" fill="rgb(207,164,54)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="97.6763%" y="565" width="0.0801%" height="15" fill="rgb(240,155,22)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="97.6763%" y="549" width="0.0801%" height="15" fill="rgb(217,127,14)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.6763%" y="533" width="0.0801%" height="15" fill="rgb(232,179,42)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.6763%" y="517" width="0.0801%" height="15" fill="rgb(247,55,45)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6763%" y="501" width="0.0801%" height="15" fill="rgb(217,11,18)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6763%" y="485" width="0.0801%" height="15" fill="rgb(227,127,4)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.6763%" y="469" width="0.0801%" height="15" fill="rgb(217,97,45)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6763%" y="453" width="0.0801%" height="15" fill="rgb(250,135,20)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6763%" y="437" width="0.0801%" height="15" fill="rgb(224,213,26)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6763%" y="421" width="0.0801%" height="15" fill="rgb(237,86,25)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.6763%" y="405" width="0.0801%" height="15" fill="rgb(251,105,18)" fg:x="1219" fg:w="1"/><text x="97.9263%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="97.7564%" y="565" width="0.0801%" height="15" fill="rgb(246,124,25)" fg:x="1220" fg:w="1"/><text x="98.0064%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7564%" y="549" width="0.0801%" height="15" fill="rgb(210,90,3)" fg:x="1220" fg:w="1"/><text x="98.0064%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="97.7564%" y="581" width="0.1603%" height="15" fill="rgb(249,40,31)" fg:x="1220" fg:w="2"/><text x="98.0064%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="97.8365%" y="565" width="0.0801%" height="15" fill="rgb(231,228,1)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.8365%" y="549" width="0.0801%" height="15" fill="rgb(242,25,49)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="97.8365%" y="533" width="0.0801%" height="15" fill="rgb(224,142,22)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="97.8365%" y="517" width="0.0801%" height="15" fill="rgb(228,106,29)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="97.8365%" y="501" width="0.0801%" height="15" fill="rgb(207,2,15)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="97.8365%" y="485" width="0.0801%" height="15" fill="rgb(231,43,37)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="97.8365%" y="469" width="0.0801%" height="15" fill="rgb(245,193,12)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8365%" y="453" width="0.0801%" height="15" fill="rgb(246,9,49)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8365%" y="437" width="0.0801%" height="15" fill="rgb(218,50,36)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.8365%" y="421" width="0.0801%" height="15" fill="rgb(225,206,16)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.8365%" y="405" width="0.0801%" height="15" fill="rgb(242,52,5)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.8365%" y="389" width="0.0801%" height="15" fill="rgb(217,158,11)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.8365%" y="373" width="0.0801%" height="15" fill="rgb(242,144,22)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="383.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="97.8365%" y="357" width="0.0801%" height="15" fill="rgb(236,191,3)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="97.8365%" y="341" width="0.0801%" height="15" fill="rgb(241,22,19)" fg:x="1221" fg:w="1"/><text x="98.0865%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9968%" y="533" width="0.0801%" height="15" fill="rgb(205,217,44)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9968%" y="517" width="0.0801%" height="15" fill="rgb(231,53,3)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9968%" y="501" width="0.0801%" height="15" fill="rgb(207,13,22)" fg:x="1223" fg:w="1"/><text x="98.2468%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="97.9167%" y="565" width="0.2404%" height="15" fill="rgb(234,62,29)" fg:x="1222" fg:w="3"/><text x="98.1667%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.9167%" y="549" width="0.2404%" height="15" fill="rgb(226,175,44)" fg:x="1222" fg:w="3"/><text x="98.1667%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.0769%" y="533" width="0.0801%" height="15" fill="rgb(239,177,6)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.0769%" y="517" width="0.0801%" height="15" fill="rgb(249,125,15)" fg:x="1224" fg:w="1"/><text x="98.3269%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (121 samples, 9.70%)</title><rect x="88.5417%" y="789" width="9.6955%" height="15" fill="rgb(210,201,5)" fg:x="1105" fg:w="121"/><text x="88.7917%" y="799.50">&lt;engine::sessi..</text></g><g><title>kernel::plugins::mw::apply_middleware (121 samples, 9.70%)</title><rect x="88.5417%" y="773" width="9.6955%" height="15" fill="rgb(210,14,6)" fg:x="1105" fg:w="121"/><text x="88.7917%" y="783.50">kernel::plugin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (121 samples, 9.70%)</title><rect x="88.5417%" y="757" width="9.6955%" height="15" fill="rgb(239,141,15)" fg:x="1105" fg:w="121"/><text x="88.7917%" y="767.50">kernel::plugin..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (121 samples, 9.70%)</title><rect x="88.5417%" y="741" width="9.6955%" height="15" fill="rgb(235,75,9)" fg:x="1105" fg:w="121"/><text x="88.7917%" y="751.50">&lt;engine::sessi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (115 samples, 9.21%)</title><rect x="89.0224%" y="725" width="9.2147%" height="15" fill="rgb(246,122,37)" fg:x="1111" fg:w="115"/><text x="89.2724%" y="735.50">kernel::plugi..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (115 samples, 9.21%)</title><rect x="89.0224%" y="709" width="9.2147%" height="15" fill="rgb(235,75,52)" fg:x="1111" fg:w="115"/><text x="89.2724%" y="719.50">&lt;plugins_dynl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (115 samples, 9.21%)</title><rect x="89.0224%" y="693" width="9.2147%" height="15" fill="rgb(235,179,12)" fg:x="1111" fg:w="115"/><text x="89.2724%" y="703.50">kernel::plugi..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (115 samples, 9.21%)</title><rect x="89.0224%" y="677" width="9.2147%" height="15" fill="rgb(223,20,9)" fg:x="1111" fg:w="115"/><text x="89.2724%" y="687.50">core::ops::fu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (114 samples, 9.13%)</title><rect x="89.1026%" y="661" width="9.1346%" height="15" fill="rgb(223,75,22)" fg:x="1112" fg:w="114"/><text x="89.3526%" y="671.50">kernel::plugi..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (114 samples, 9.13%)</title><rect x="89.1026%" y="645" width="9.1346%" height="15" fill="rgb(248,148,18)" fg:x="1112" fg:w="114"/><text x="89.3526%" y="655.50">core::ops::fu..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (114 samples, 9.13%)</title><rect x="89.1026%" y="629" width="9.1346%" height="15" fill="rgb(225,103,8)" fg:x="1112" fg:w="114"/><text x="89.3526%" y="639.50">&lt;engine::sess..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (47 samples, 3.77%)</title><rect x="94.4712%" y="613" width="3.7660%" height="15" fill="rgb(237,168,17)" fg:x="1179" fg:w="47"/><text x="94.7212%" y="623.50">&lt;plu..</text></g><g><title>plugins_core::location::change_location (24 samples, 1.92%)</title><rect x="96.3141%" y="597" width="1.9231%" height="15" fill="rgb(215,192,38)" fg:x="1202" fg:w="24"/><text x="96.5641%" y="607.50">p..</text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="97.9167%" y="581" width="0.3205%" height="15" fill="rgb(237,69,28)" fg:x="1222" fg:w="4"/><text x="98.1667%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="98.1571%" y="565" width="0.0801%" height="15" fill="rgb(254,167,32)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="98.1571%" y="549" width="0.0801%" height="15" fill="rgb(250,81,30)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.1571%" y="533" width="0.0801%" height="15" fill="rgb(240,68,52)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.1571%" y="517" width="0.0801%" height="15" fill="rgb(205,97,42)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.1571%" y="501" width="0.0801%" height="15" fill="rgb(217,10,22)" fg:x="1225" fg:w="1"/><text x="98.4071%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="98.2372%" y="741" width="0.1603%" height="15" fill="rgb(216,21,26)" fg:x="1226" fg:w="2"/><text x="98.4872%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3173%" y="725" width="0.0801%" height="15" fill="rgb(239,0,36)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3173%" y="709" width="0.0801%" height="15" fill="rgb(216,162,28)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.3173%" y="693" width="0.0801%" height="15" fill="rgb(246,22,39)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.3173%" y="677" width="0.0801%" height="15" fill="rgb(222,84,49)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.3173%" y="661" width="0.0801%" height="15" fill="rgb(250,38,34)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3173%" y="645" width="0.0801%" height="15" fill="rgb(236,0,38)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3173%" y="629" width="0.0801%" height="15" fill="rgb(237,205,54)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.3173%" y="613" width="0.0801%" height="15" fill="rgb(221,80,35)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.3173%" y="597" width="0.0801%" height="15" fill="rgb(237,204,22)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.3173%" y="581" width="0.0801%" height="15" fill="rgb(213,108,15)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.3173%" y="565" width="0.0801%" height="15" fill="rgb(251,187,9)" fg:x="1227" fg:w="1"/><text x="98.5673%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="98.3974%" y="741" width="0.0801%" height="15" fill="rgb(250,61,9)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="98.3974%" y="725" width="0.0801%" height="15" fill="rgb(230,131,33)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.3974%" y="709" width="0.0801%" height="15" fill="rgb(239,117,11)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.3974%" y="693" width="0.0801%" height="15" fill="rgb(222,112,44)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3974%" y="677" width="0.0801%" height="15" fill="rgb(251,33,25)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3974%" y="661" width="0.0801%" height="15" fill="rgb(208,171,34)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3974%" y="645" width="0.0801%" height="15" fill="rgb(250,166,54)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3974%" y="629" width="0.0801%" height="15" fill="rgb(212,148,2)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.3974%" y="613" width="0.0801%" height="15" fill="rgb(224,92,39)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.3974%" y="597" width="0.0801%" height="15" fill="rgb(250,28,16)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.3974%" y="581" width="0.0801%" height="15" fill="rgb(227,128,26)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3974%" y="565" width="0.0801%" height="15" fill="rgb(248,66,7)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3974%" y="549" width="0.0801%" height="15" fill="rgb(215,124,51)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.3974%" y="533" width="0.0801%" height="15" fill="rgb(207,91,1)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.3974%" y="517" width="0.0801%" height="15" fill="rgb(217,207,38)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.3974%" y="501" width="0.0801%" height="15" fill="rgb(240,118,9)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.3974%" y="485" width="0.0801%" height="15" fill="rgb(224,147,4)" fg:x="1228" fg:w="1"/><text x="98.6474%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.4776%" y="645" width="0.0801%" height="15" fill="rgb(205,105,13)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.4776%" y="629" width="0.0801%" height="15" fill="rgb(251,78,39)" fg:x="1229" fg:w="1"/><text x="98.7276%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5577%" y="613" width="0.0801%" height="15" fill="rgb(225,60,44)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5577%" y="597" width="0.0801%" height="15" fill="rgb(221,228,40)" fg:x="1230" fg:w="1"/><text x="98.8077%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="98.7179%" y="565" width="0.1603%" height="15" fill="rgb(215,104,30)" fg:x="1232" fg:w="2"/><text x="98.9679%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7981%" y="549" width="0.0801%" height="15" fill="rgb(206,183,3)" fg:x="1233" fg:w="1"/><text x="99.0481%" y="559.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="98.4776%" y="725" width="0.4808%" height="15" fill="rgb(236,199,25)" fg:x="1229" fg:w="6"/><text x="98.7276%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="98.4776%" y="709" width="0.4808%" height="15" fill="rgb(230,107,29)" fg:x="1229" fg:w="6"/><text x="98.7276%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="98.4776%" y="693" width="0.4808%" height="15" fill="rgb(216,12,37)" fg:x="1229" fg:w="6"/><text x="98.7276%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="98.4776%" y="677" width="0.4808%" height="15" fill="rgb(238,165,28)" fg:x="1229" fg:w="6"/><text x="98.7276%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="98.4776%" y="661" width="0.4808%" height="15" fill="rgb(226,173,5)" fg:x="1229" fg:w="6"/><text x="98.7276%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.5577%" y="645" width="0.4006%" height="15" fill="rgb(229,9,37)" fg:x="1230" fg:w="5"/><text x="98.8077%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="98.5577%" y="629" width="0.4006%" height="15" fill="rgb(252,194,43)" fg:x="1230" fg:w="5"/><text x="98.8077%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.6378%" y="613" width="0.3205%" height="15" fill="rgb(215,58,45)" fg:x="1231" fg:w="4"/><text x="98.8878%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.7179%" y="597" width="0.2404%" height="15" fill="rgb(218,34,51)" fg:x="1232" fg:w="3"/><text x="98.9679%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.7179%" y="581" width="0.2404%" height="15" fill="rgb(230,104,27)" fg:x="1232" fg:w="3"/><text x="98.9679%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8782%" y="565" width="0.0801%" height="15" fill="rgb(250,9,6)" fg:x="1234" fg:w="1"/><text x="99.1282%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.8782%" y="549" width="0.0801%" height="15" fill="rgb(245,10,16)" fg:x="1234" fg:w="1"/><text x="99.1282%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="99.1186%" y="597" width="0.1603%" height="15" fill="rgb(227,182,27)" fg:x="1237" fg:w="2"/><text x="99.3686%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="99.1186%" y="645" width="0.2404%" height="15" fill="rgb(225,91,37)" fg:x="1237" fg:w="3"/><text x="99.3686%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="99.1186%" y="629" width="0.2404%" height="15" fill="rgb(240,16,41)" fg:x="1237" fg:w="3"/><text x="99.3686%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="99.1186%" y="613" width="0.2404%" height="15" fill="rgb(214,108,54)" fg:x="1237" fg:w="3"/><text x="99.3686%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2788%" y="597" width="0.0801%" height="15" fill="rgb(253,65,28)" fg:x="1239" fg:w="1"/><text x="99.5288%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.2788%" y="581" width="0.0801%" height="15" fill="rgb(246,105,4)" fg:x="1239" fg:w="1"/><text x="99.5288%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.96%)</title><rect x="98.4776%" y="741" width="0.9615%" height="15" fill="rgb(223,163,37)" fg:x="1229" fg:w="12"/><text x="98.7276%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="98.9583%" y="725" width="0.4808%" height="15" fill="rgb(206,202,31)" fg:x="1235" fg:w="6"/><text x="99.2083%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="98.9583%" y="709" width="0.4808%" height="15" fill="rgb(241,202,54)" fg:x="1235" fg:w="6"/><text x="99.2083%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="99.0385%" y="693" width="0.4006%" height="15" fill="rgb(220,22,45)" fg:x="1236" fg:w="5"/><text x="99.2885%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.0385%" y="677" width="0.4006%" height="15" fill="rgb(234,215,40)" fg:x="1236" fg:w="5"/><text x="99.2885%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="99.0385%" y="661" width="0.4006%" height="15" fill="rgb(220,3,5)" fg:x="1236" fg:w="5"/><text x="99.2885%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3590%" y="645" width="0.0801%" height="15" fill="rgb(210,8,15)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3590%" y="629" width="0.0801%" height="15" fill="rgb(218,113,45)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.3590%" y="613" width="0.0801%" height="15" fill="rgb(249,208,10)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3590%" y="597" width="0.0801%" height="15" fill="rgb(250,145,17)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3590%" y="581" width="0.0801%" height="15" fill="rgb(254,24,13)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.3590%" y="565" width="0.0801%" height="15" fill="rgb(244,36,15)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3590%" y="549" width="0.0801%" height="15" fill="rgb(228,168,26)" fg:x="1240" fg:w="1"/><text x="99.6090%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (16 samples, 1.28%)</title><rect x="98.2372%" y="789" width="1.2821%" height="15" fill="rgb(214,145,10)" fg:x="1226" fg:w="16"/><text x="98.4872%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.28%)</title><rect x="98.2372%" y="773" width="1.2821%" height="15" fill="rgb(232,59,25)" fg:x="1226" fg:w="16"/><text x="98.4872%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="98.2372%" y="757" width="1.2821%" height="15" fill="rgb(254,181,2)" fg:x="1226" fg:w="16"/><text x="98.4872%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.4391%" y="741" width="0.0801%" height="15" fill="rgb(221,139,49)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.4391%" y="725" width="0.0801%" height="15" fill="rgb(235,84,36)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4391%" y="709" width="0.0801%" height="15" fill="rgb(254,32,49)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4391%" y="693" width="0.0801%" height="15" fill="rgb(214,136,49)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.4391%" y="677" width="0.0801%" height="15" fill="rgb(206,113,54)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4391%" y="661" width="0.0801%" height="15" fill="rgb(226,78,17)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4391%" y="645" width="0.0801%" height="15" fill="rgb(249,189,19)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.4391%" y="629" width="0.0801%" height="15" fill="rgb(211,82,26)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.4391%" y="613" width="0.0801%" height="15" fill="rgb(206,131,52)" fg:x="1241" fg:w="1"/><text x="99.6891%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.5994%" y="757" width="0.0801%" height="15" fill="rgb(223,51,24)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.5994%" y="741" width="0.0801%" height="15" fill="rgb(235,93,36)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="751.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.5994%" y="725" width="0.0801%" height="15" fill="rgb(219,118,14)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5994%" y="709" width="0.0801%" height="15" fill="rgb(240,145,10)" fg:x="1243" fg:w="1"/><text x="99.8494%" y="719.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="99.5192%" y="789" width="0.2404%" height="15" fill="rgb(241,104,15)" fg:x="1242" fg:w="3"/><text x="99.7692%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="99.5192%" y="773" width="0.2404%" height="15" fill="rgb(248,117,21)" fg:x="1242" fg:w="3"/><text x="99.7692%" y="783.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6795%" y="757" width="0.0801%" height="15" fill="rgb(250,184,34)" fg:x="1244" fg:w="1"/><text x="99.9295%" y="767.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.7596%" y="789" width="0.0801%" height="15" fill="rgb(218,169,23)" fg:x="1245" fg:w="1"/><text x="100.0096%" y="799.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (143 samples, 11.46%)</title><rect x="88.4615%" y="821" width="11.4583%" height="15" fill="rgb(214,33,53)" fg:x="1104" fg:w="143"/><text x="88.7115%" y="831.50">engine::session::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (143 samples, 11.46%)</title><rect x="88.4615%" y="805" width="11.4583%" height="15" fill="rgb(239,78,4)" fg:x="1104" fg:w="143"/><text x="88.7115%" y="815.50">engine::session::..</text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="99.8397%" y="789" width="0.0801%" height="15" fill="rgb(250,25,23)" fg:x="1246" fg:w="1"/><text x="100.0897%" y="799.50"></text></g><g><title>all (1,248 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(220,205,51)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1183.50"></text></g><g><title>simple-1389ea1c (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(252,115,2)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1167.50">simple-1389ea1c</text></g><g><title>_start (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(222,106,48)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1151.50">_start</text></g><g><title>__libc_start_main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(225,77,33)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1135.50">__libc_start_main</text></g><g><title>main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(250,135,2)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1119.50">main</text></g><g><title>std::rt::lang_start_internal (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(221,217,54)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1103.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(233,12,6)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1087.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(251,10,27)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1071.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(214,20,35)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1055.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(249,13,18)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1039.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,248 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(251,115,18)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,248 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(219,91,11)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,248 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(238,130,14)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="991.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,248 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(216,197,46)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="975.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,248 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(239,113,46)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="959.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,248 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(220,76,52)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="943.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,248 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(247,167,28)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="927.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,248 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(228,6,44)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="911.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,248 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(214,75,23)" fg:x="0" fg:w="1248"/><text x="0.2500%" y="895.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (413 samples, 33.09%)</title><rect x="66.9071%" y="869" width="33.0929%" height="15" fill="rgb(241,211,28)" fg:x="835" fg:w="413"/><text x="67.1571%" y="879.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::rou..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (413 samples, 33.09%)</title><rect x="66.9071%" y="853" width="33.0929%" height="15" fill="rgb(216,147,39)" fg:x="835" fg:w="413"/><text x="67.1571%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (413 samples, 33.09%)</title><rect x="66.9071%" y="837" width="33.0929%" height="15" fill="rgb(237,121,45)" fg:x="835" fg:w="413"/><text x="67.1571%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9199%" y="821" width="0.0801%" height="15" fill="rgb(214,115,15)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="831.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9199%" y="805" width="0.0801%" height="15" fill="rgb(253,132,27)" fg:x="1247" fg:w="1"/><text x="100.1699%" y="815.50"></text></g></svg></svg>