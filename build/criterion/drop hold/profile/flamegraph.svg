<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="985"><g><title>__libc_free (2 samples, 0.20%)</title><rect x="0.1015%" y="469" width="0.2030%" height="15" fill="rgb(248,198,33)" fg:x="1" fg:w="2"/><text x="0.3515%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.41%)</title><rect x="0.1015%" y="533" width="0.4061%" height="15" fill="rgb(236,23,21)" fg:x="1" fg:w="4"/><text x="0.3515%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.41%)</title><rect x="0.1015%" y="517" width="0.4061%" height="15" fill="rgb(231,13,38)" fg:x="1" fg:w="4"/><text x="0.3515%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.41%)</title><rect x="0.1015%" y="501" width="0.4061%" height="15" fill="rgb(239,139,21)" fg:x="1" fg:w="4"/><text x="0.3515%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.41%)</title><rect x="0.1015%" y="485" width="0.4061%" height="15" fill="rgb(222,164,45)" fg:x="1" fg:w="4"/><text x="0.3515%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="0.3046%" y="469" width="0.2030%" height="15" fill="rgb(230,52,27)" fg:x="3" fg:w="2"/><text x="0.5546%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="0.4061%" y="453" width="0.1015%" height="15" fill="rgb(227,143,42)" fg:x="4" fg:w="1"/><text x="0.6561%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.51%)</title><rect x="0.1015%" y="597" width="0.5076%" height="15" fill="rgb(249,127,1)" fg:x="1" fg:w="5"/><text x="0.3515%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (5 samples, 0.51%)</title><rect x="0.1015%" y="581" width="0.5076%" height="15" fill="rgb(243,107,26)" fg:x="1" fg:w="5"/><text x="0.3515%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.51%)</title><rect x="0.1015%" y="565" width="0.5076%" height="15" fill="rgb(225,7,45)" fg:x="1" fg:w="5"/><text x="0.3515%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (5 samples, 0.51%)</title><rect x="0.1015%" y="549" width="0.5076%" height="15" fill="rgb(241,88,38)" fg:x="1" fg:w="5"/><text x="0.3515%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.10%)</title><rect x="0.5076%" y="533" width="0.1015%" height="15" fill="rgb(226,121,9)" fg:x="5" fg:w="1"/><text x="0.7576%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="0.5076%" y="517" width="0.1015%" height="15" fill="rgb(253,60,29)" fg:x="5" fg:w="1"/><text x="0.7576%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorageFactory as engine::storage::EntityStorageFactory&gt;::create_storage (1 samples, 0.10%)</title><rect x="0.6091%" y="581" width="0.1015%" height="15" fill="rgb(244,181,39)" fg:x="6" fg:w="1"/><text x="0.8591%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.10%)</title><rect x="0.7107%" y="533" width="0.1015%" height="15" fill="rgb(252,203,31)" fg:x="7" fg:w="1"/><text x="0.9607%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="0.7107%" y="517" width="0.1015%" height="15" fill="rgb(224,120,8)" fg:x="7" fg:w="1"/><text x="0.9607%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="0.7107%" y="501" width="0.1015%" height="15" fill="rgb(205,171,54)" fg:x="7" fg:w="1"/><text x="0.9607%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="0.7107%" y="485" width="0.1015%" height="15" fill="rgb(235,89,11)" fg:x="7" fg:w="1"/><text x="0.9607%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.10%)</title><rect x="0.8122%" y="517" width="0.1015%" height="15" fill="rgb(212,180,28)" fg:x="8" fg:w="1"/><text x="1.0622%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.10%)</title><rect x="0.8122%" y="501" width="0.1015%" height="15" fill="rgb(247,84,49)" fg:x="8" fg:w="1"/><text x="1.0622%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="0.8122%" y="485" width="0.1015%" height="15" fill="rgb(236,187,52)" fg:x="8" fg:w="1"/><text x="1.0622%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="0.8122%" y="469" width="0.1015%" height="15" fill="rgb(227,24,15)" fg:x="8" fg:w="1"/><text x="1.0622%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="0.8122%" y="453" width="0.1015%" height="15" fill="rgb(227,211,13)" fg:x="8" fg:w="1"/><text x="1.0622%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="0.8122%" y="437" width="0.1015%" height="15" fill="rgb(245,52,14)" fg:x="8" fg:w="1"/><text x="1.0622%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="1.0152%" y="469" width="0.1015%" height="15" fill="rgb(225,185,13)" fg:x="10" fg:w="1"/><text x="1.2652%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="1.0152%" y="453" width="0.1015%" height="15" fill="rgb(217,160,29)" fg:x="10" fg:w="1"/><text x="1.2652%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="1.1168%" y="437" width="0.1015%" height="15" fill="rgb(216,115,53)" fg:x="11" fg:w="1"/><text x="1.3668%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="1.1168%" y="421" width="0.1015%" height="15" fill="rgb(236,99,5)" fg:x="11" fg:w="1"/><text x="1.3668%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="1.2183%" y="437" width="0.1015%" height="15" fill="rgb(222,60,38)" fg:x="12" fg:w="1"/><text x="1.4683%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="1.2183%" y="421" width="0.1015%" height="15" fill="rgb(212,82,22)" fg:x="12" fg:w="1"/><text x="1.4683%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="1.2183%" y="405" width="0.1015%" height="15" fill="rgb(214,48,28)" fg:x="12" fg:w="1"/><text x="1.4683%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="1.3198%" y="405" width="0.1015%" height="15" fill="rgb(245,196,50)" fg:x="13" fg:w="1"/><text x="1.5698%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.10%)</title><rect x="1.3198%" y="389" width="0.1015%" height="15" fill="rgb(225,159,46)" fg:x="13" fg:w="1"/><text x="1.5698%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (8 samples, 0.81%)</title><rect x="0.7107%" y="565" width="0.8122%" height="15" fill="rgb(207,195,48)" fg:x="7" fg:w="8"/><text x="0.9607%" y="575.50"></text></g><g><title>engine::internal::Entities::prepare_entity (8 samples, 0.81%)</title><rect x="0.7107%" y="549" width="0.8122%" height="15" fill="rgb(240,73,3)" fg:x="7" fg:w="8"/><text x="0.9607%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.71%)</title><rect x="0.8122%" y="533" width="0.7107%" height="15" fill="rgb(245,57,23)" fg:x="8" fg:w="7"/><text x="1.0622%" y="543.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.61%)</title><rect x="0.9137%" y="517" width="0.6091%" height="15" fill="rgb(240,75,18)" fg:x="9" fg:w="6"/><text x="1.1637%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.61%)</title><rect x="0.9137%" y="501" width="0.6091%" height="15" fill="rgb(238,168,12)" fg:x="9" fg:w="6"/><text x="1.1637%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.61%)</title><rect x="0.9137%" y="485" width="0.6091%" height="15" fill="rgb(226,20,40)" fg:x="9" fg:w="6"/><text x="1.1637%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.41%)</title><rect x="1.1168%" y="469" width="0.4061%" height="15" fill="rgb(224,130,35)" fg:x="11" fg:w="4"/><text x="1.3668%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.41%)</title><rect x="1.1168%" y="453" width="0.4061%" height="15" fill="rgb(225,63,41)" fg:x="11" fg:w="4"/><text x="1.3668%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="1.3198%" y="437" width="0.2030%" height="15" fill="rgb(219,3,3)" fg:x="13" fg:w="2"/><text x="1.5698%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.20%)</title><rect x="1.3198%" y="421" width="0.2030%" height="15" fill="rgb(218,157,4)" fg:x="13" fg:w="2"/><text x="1.5698%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.10%)</title><rect x="1.4213%" y="405" width="0.1015%" height="15" fill="rgb(232,76,36)" fg:x="14" fg:w="1"/><text x="1.6713%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="1.4213%" y="389" width="0.1015%" height="15" fill="rgb(247,36,0)" fg:x="14" fg:w="1"/><text x="1.6713%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="1.4213%" y="373" width="0.1015%" height="15" fill="rgb(205,2,34)" fg:x="14" fg:w="1"/><text x="1.6713%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.10%)</title><rect x="1.4213%" y="357" width="0.1015%" height="15" fill="rgb(239,136,13)" fg:x="14" fg:w="1"/><text x="1.6713%" y="367.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.10%)</title><rect x="1.5228%" y="565" width="0.1015%" height="15" fill="rgb(253,122,12)" fg:x="15" fg:w="1"/><text x="1.7728%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.10%)</title><rect x="1.5228%" y="549" width="0.1015%" height="15" fill="rgb(222,174,7)" fg:x="15" fg:w="1"/><text x="1.7728%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="1.5228%" y="533" width="0.1015%" height="15" fill="rgb(208,191,42)" fg:x="15" fg:w="1"/><text x="1.7728%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="1.5228%" y="517" width="0.1015%" height="15" fill="rgb(237,212,15)" fg:x="15" fg:w="1"/><text x="1.7728%" y="527.50"></text></g><g><title>dlerror (1 samples, 0.10%)</title><rect x="1.7259%" y="517" width="0.1015%" height="15" fill="rgb(215,65,20)" fg:x="17" fg:w="1"/><text x="1.9759%" y="527.50"></text></g><g><title>dlopen (4 samples, 0.41%)</title><rect x="1.8274%" y="517" width="0.4061%" height="15" fill="rgb(232,103,11)" fg:x="18" fg:w="4"/><text x="2.0774%" y="527.50"></text></g><g><title>_dl_catch_error (4 samples, 0.41%)</title><rect x="1.8274%" y="501" width="0.4061%" height="15" fill="rgb(235,148,18)" fg:x="18" fg:w="4"/><text x="2.0774%" y="511.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.41%)</title><rect x="1.8274%" y="485" width="0.4061%" height="15" fill="rgb(240,173,7)" fg:x="18" fg:w="4"/><text x="2.0774%" y="495.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.41%)</title><rect x="1.8274%" y="469" width="0.4061%" height="15" fill="rgb(228,182,25)" fg:x="18" fg:w="4"/><text x="2.0774%" y="479.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.41%)</title><rect x="1.8274%" y="453" width="0.4061%" height="15" fill="rgb(247,3,52)" fg:x="18" fg:w="4"/><text x="2.0774%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (17 samples, 1.73%)</title><rect x="0.6091%" y="597" width="1.7259%" height="15" fill="rgb(226,155,8)" fg:x="6" fg:w="17"/><text x="0.8591%" y="607.50"></text></g><g><title>engine::session::Session::new (16 samples, 1.62%)</title><rect x="0.7107%" y="581" width="1.6244%" height="15" fill="rgb(243,195,38)" fg:x="7" fg:w="16"/><text x="0.9607%" y="591.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.71%)</title><rect x="1.6244%" y="565" width="0.7107%" height="15" fill="rgb(254,181,33)" fg:x="16" fg:w="7"/><text x="1.8744%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.71%)</title><rect x="1.6244%" y="549" width="0.7107%" height="15" fill="rgb(232,98,23)" fg:x="16" fg:w="7"/><text x="1.8744%" y="559.50"></text></g><g><title>libloading::os::unix::Library::open (6 samples, 0.61%)</title><rect x="1.7259%" y="533" width="0.6091%" height="15" fill="rgb(205,23,10)" fg:x="17" fg:w="6"/><text x="1.9759%" y="543.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.10%)</title><rect x="2.2335%" y="517" width="0.1015%" height="15" fill="rgb(212,124,38)" fg:x="22" fg:w="1"/><text x="2.4835%" y="527.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.10%)</title><rect x="2.2335%" y="501" width="0.1015%" height="15" fill="rgb(228,207,2)" fg:x="22" fg:w="1"/><text x="2.4835%" y="511.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.10%)</title><rect x="2.2335%" y="485" width="0.1015%" height="15" fill="rgb(215,120,22)" fg:x="22" fg:w="1"/><text x="2.4835%" y="495.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.10%)</title><rect x="2.2335%" y="469" width="0.1015%" height="15" fill="rgb(251,172,33)" fg:x="22" fg:w="1"/><text x="2.4835%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="2.2335%" y="453" width="0.1015%" height="15" fill="rgb(250,83,2)" fg:x="22" fg:w="1"/><text x="2.4835%" y="463.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="2.2335%" y="437" width="0.1015%" height="15" fill="rgb(210,132,53)" fg:x="22" fg:w="1"/><text x="2.4835%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.3350%" y="581" width="0.1015%" height="15" fill="rgb(221,208,36)" fg:x="23" fg:w="1"/><text x="2.5850%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.3350%" y="565" width="0.1015%" height="15" fill="rgb(205,192,46)" fg:x="23" fg:w="1"/><text x="2.5850%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.3350%" y="549" width="0.1015%" height="15" fill="rgb(223,163,14)" fg:x="23" fg:w="1"/><text x="2.5850%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="2.3350%" y="533" width="0.1015%" height="15" fill="rgb(218,41,28)" fg:x="23" fg:w="1"/><text x="2.5850%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="2.3350%" y="517" width="0.1015%" height="15" fill="rgb(235,104,10)" fg:x="23" fg:w="1"/><text x="2.5850%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="2.3350%" y="501" width="0.1015%" height="15" fill="rgb(246,17,4)" fg:x="23" fg:w="1"/><text x="2.5850%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="2.3350%" y="485" width="0.1015%" height="15" fill="rgb(240,7,16)" fg:x="23" fg:w="1"/><text x="2.5850%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="2.3350%" y="469" width="0.1015%" height="15" fill="rgb(213,160,23)" fg:x="23" fg:w="1"/><text x="2.5850%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="2.3350%" y="453" width="0.1015%" height="15" fill="rgb(251,179,49)" fg:x="23" fg:w="1"/><text x="2.5850%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.10%)</title><rect x="2.4365%" y="581" width="0.1015%" height="15" fill="rgb(247,198,10)" fg:x="24" fg:w="1"/><text x="2.6865%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="2.4365%" y="565" width="0.1015%" height="15" fill="rgb(220,65,29)" fg:x="24" fg:w="1"/><text x="2.6865%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="2.5381%" y="549" width="0.1015%" height="15" fill="rgb(237,171,28)" fg:x="25" fg:w="1"/><text x="2.7881%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="2.5381%" y="533" width="0.1015%" height="15" fill="rgb(228,44,26)" fg:x="25" fg:w="1"/><text x="2.7881%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="2.5381%" y="517" width="0.1015%" height="15" fill="rgb(216,210,27)" fg:x="25" fg:w="1"/><text x="2.7881%" y="527.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="2.5381%" y="501" width="0.1015%" height="15" fill="rgb(252,10,17)" fg:x="25" fg:w="1"/><text x="2.7881%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.10%)</title><rect x="2.6396%" y="549" width="0.1015%" height="15" fill="rgb(214,172,30)" fg:x="26" fg:w="1"/><text x="2.8896%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.6396%" y="533" width="0.1015%" height="15" fill="rgb(253,130,48)" fg:x="26" fg:w="1"/><text x="2.8896%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.6396%" y="517" width="0.1015%" height="15" fill="rgb(226,99,43)" fg:x="26" fg:w="1"/><text x="2.8896%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="2.6396%" y="501" width="0.1015%" height="15" fill="rgb(239,111,26)" fg:x="26" fg:w="1"/><text x="2.8896%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="2.6396%" y="485" width="0.1015%" height="15" fill="rgb(240,27,53)" fg:x="26" fg:w="1"/><text x="2.8896%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="2.6396%" y="469" width="0.1015%" height="15" fill="rgb(254,163,12)" fg:x="26" fg:w="1"/><text x="2.8896%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="2.6396%" y="453" width="0.1015%" height="15" fill="rgb(225,51,48)" fg:x="26" fg:w="1"/><text x="2.8896%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="2.6396%" y="437" width="0.1015%" height="15" fill="rgb(205,19,32)" fg:x="26" fg:w="1"/><text x="2.8896%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="2.6396%" y="421" width="0.1015%" height="15" fill="rgb(218,119,26)" fg:x="26" fg:w="1"/><text x="2.8896%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="2.6396%" y="405" width="0.1015%" height="15" fill="rgb(231,173,33)" fg:x="26" fg:w="1"/><text x="2.8896%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="2.6396%" y="389" width="0.1015%" height="15" fill="rgb(241,100,29)" fg:x="26" fg:w="1"/><text x="2.8896%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="2.6396%" y="373" width="0.1015%" height="15" fill="rgb(250,194,34)" fg:x="26" fg:w="1"/><text x="2.8896%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="2.6396%" y="357" width="0.1015%" height="15" fill="rgb(215,23,50)" fg:x="26" fg:w="1"/><text x="2.8896%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="2.7411%" y="549" width="0.1015%" height="15" fill="rgb(206,49,37)" fg:x="27" fg:w="1"/><text x="2.9911%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="2.7411%" y="533" width="0.1015%" height="15" fill="rgb(247,39,21)" fg:x="27" fg:w="1"/><text x="2.9911%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.10%)</title><rect x="2.7411%" y="517" width="0.1015%" height="15" fill="rgb(209,220,15)" fg:x="27" fg:w="1"/><text x="2.9911%" y="527.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.20%)</title><rect x="2.8426%" y="549" width="0.2030%" height="15" fill="rgb(206,41,33)" fg:x="28" fg:w="2"/><text x="3.0926%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.20%)</title><rect x="2.8426%" y="533" width="0.2030%" height="15" fill="rgb(221,225,45)" fg:x="28" fg:w="2"/><text x="3.0926%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.20%)</title><rect x="2.8426%" y="517" width="0.2030%" height="15" fill="rgb(216,27,18)" fg:x="28" fg:w="2"/><text x="3.0926%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="2.8426%" y="501" width="0.2030%" height="15" fill="rgb(250,193,34)" fg:x="28" fg:w="2"/><text x="3.0926%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="2.8426%" y="485" width="0.2030%" height="15" fill="rgb(227,215,20)" fg:x="28" fg:w="2"/><text x="3.0926%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="3.1472%" y="501" width="0.1015%" height="15" fill="rgb(242,211,27)" fg:x="31" fg:w="1"/><text x="3.3972%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.71%)</title><rect x="3.2487%" y="501" width="0.7107%" height="15" fill="rgb(229,190,30)" fg:x="32" fg:w="7"/><text x="3.4987%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.61%)</title><rect x="3.3503%" y="485" width="0.6091%" height="15" fill="rgb(253,31,29)" fg:x="33" fg:w="6"/><text x="3.6003%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.41%)</title><rect x="3.5533%" y="469" width="0.4061%" height="15" fill="rgb(229,177,52)" fg:x="35" fg:w="4"/><text x="3.8033%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.20%)</title><rect x="3.7563%" y="453" width="0.2030%" height="15" fill="rgb(226,88,8)" fg:x="37" fg:w="2"/><text x="4.0063%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="3.8579%" y="437" width="0.1015%" height="15" fill="rgb(214,55,27)" fg:x="38" fg:w="1"/><text x="4.1079%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="3.8579%" y="421" width="0.1015%" height="15" fill="rgb(233,202,5)" fg:x="38" fg:w="1"/><text x="4.1079%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="3.8579%" y="405" width="0.1015%" height="15" fill="rgb(251,49,30)" fg:x="38" fg:w="1"/><text x="4.1079%" y="415.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="3.8579%" y="389" width="0.1015%" height="15" fill="rgb(235,18,52)" fg:x="38" fg:w="1"/><text x="4.1079%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.30%)</title><rect x="4.0609%" y="485" width="0.3046%" height="15" fill="rgb(250,111,51)" fg:x="40" fg:w="3"/><text x="4.3109%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.20%)</title><rect x="4.1624%" y="469" width="0.2030%" height="15" fill="rgb(218,13,25)" fg:x="41" fg:w="2"/><text x="4.4124%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.20%)</title><rect x="4.1624%" y="453" width="0.2030%" height="15" fill="rgb(248,96,7)" fg:x="41" fg:w="2"/><text x="4.4124%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="4.1624%" y="437" width="0.2030%" height="15" fill="rgb(217,31,15)" fg:x="41" fg:w="2"/><text x="4.4124%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.10%)</title><rect x="4.3655%" y="453" width="0.1015%" height="15" fill="rgb(228,59,49)" fg:x="43" fg:w="1"/><text x="4.6155%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="4.3655%" y="437" width="0.1015%" height="15" fill="rgb(210,152,38)" fg:x="43" fg:w="1"/><text x="4.6155%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="4.3655%" y="421" width="0.1015%" height="15" fill="rgb(206,71,11)" fg:x="43" fg:w="1"/><text x="4.6155%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.30%)</title><rect x="4.3655%" y="469" width="0.3046%" height="15" fill="rgb(244,199,5)" fg:x="43" fg:w="3"/><text x="4.6155%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.20%)</title><rect x="4.4670%" y="453" width="0.2030%" height="15" fill="rgb(253,49,1)" fg:x="44" fg:w="2"/><text x="4.7170%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="4.5685%" y="437" width="0.1015%" height="15" fill="rgb(225,206,40)" fg:x="45" fg:w="1"/><text x="4.8185%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="4.5685%" y="421" width="0.1015%" height="15" fill="rgb(243,116,47)" fg:x="45" fg:w="1"/><text x="4.8185%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.41%)</title><rect x="4.3655%" y="485" width="0.4061%" height="15" fill="rgb(219,225,16)" fg:x="43" fg:w="4"/><text x="4.6155%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="4.6701%" y="469" width="0.1015%" height="15" fill="rgb(233,29,47)" fg:x="46" fg:w="1"/><text x="4.9201%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="4.6701%" y="453" width="0.1015%" height="15" fill="rgb(250,179,18)" fg:x="46" fg:w="1"/><text x="4.9201%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 2.13%)</title><rect x="3.0457%" y="517" width="2.1320%" height="15" fill="rgb(215,176,6)" fg:x="30" fg:w="21"/><text x="3.2957%" y="527.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 1.22%)</title><rect x="3.9594%" y="501" width="1.2183%" height="15" fill="rgb(214,117,39)" fg:x="39" fg:w="12"/><text x="4.2094%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.41%)</title><rect x="4.7716%" y="485" width="0.4061%" height="15" fill="rgb(247,183,36)" fg:x="47" fg:w="4"/><text x="5.0216%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.30%)</title><rect x="4.8731%" y="469" width="0.3046%" height="15" fill="rgb(237,200,3)" fg:x="48" fg:w="3"/><text x="5.1231%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="4.9746%" y="453" width="0.2030%" height="15" fill="rgb(212,220,24)" fg:x="49" fg:w="2"/><text x="5.2246%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="5.0761%" y="437" width="0.1015%" height="15" fill="rgb(245,216,20)" fg:x="50" fg:w="1"/><text x="5.3261%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="5.0761%" y="421" width="0.1015%" height="15" fill="rgb(219,124,7)" fg:x="50" fg:w="1"/><text x="5.3261%" y="431.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="5.0761%" y="405" width="0.1015%" height="15" fill="rgb(227,167,8)" fg:x="50" fg:w="1"/><text x="5.3261%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="5.1777%" y="485" width="0.1015%" height="15" fill="rgb(241,37,2)" fg:x="51" fg:w="1"/><text x="5.4277%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="5.2792%" y="469" width="0.1015%" height="15" fill="rgb(238,134,33)" fg:x="52" fg:w="1"/><text x="5.5292%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="5.1777%" y="517" width="0.3046%" height="15" fill="rgb(248,48,27)" fg:x="51" fg:w="3"/><text x="5.4277%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.30%)</title><rect x="5.1777%" y="501" width="0.3046%" height="15" fill="rgb(212,14,16)" fg:x="51" fg:w="3"/><text x="5.4277%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="5.2792%" y="485" width="0.2030%" height="15" fill="rgb(217,205,37)" fg:x="52" fg:w="2"/><text x="5.5292%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="5.3807%" y="469" width="0.1015%" height="15" fill="rgb(233,185,47)" fg:x="53" fg:w="1"/><text x="5.6307%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="5.3807%" y="453" width="0.1015%" height="15" fill="rgb(244,88,8)" fg:x="53" fg:w="1"/><text x="5.6307%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="5.3807%" y="437" width="0.1015%" height="15" fill="rgb(213,0,20)" fg:x="53" fg:w="1"/><text x="5.6307%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.10%)</title><rect x="5.3807%" y="421" width="0.1015%" height="15" fill="rgb(238,159,36)" fg:x="53" fg:w="1"/><text x="5.6307%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="5.3807%" y="405" width="0.1015%" height="15" fill="rgb(253,173,17)" fg:x="53" fg:w="1"/><text x="5.6307%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.20%)</title><rect x="5.5838%" y="469" width="0.2030%" height="15" fill="rgb(221,23,28)" fg:x="55" fg:w="2"/><text x="5.8338%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="5.5838%" y="453" width="0.2030%" height="15" fill="rgb(218,113,15)" fg:x="55" fg:w="2"/><text x="5.8338%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="5.6853%" y="437" width="0.1015%" height="15" fill="rgb(233,58,3)" fg:x="56" fg:w="1"/><text x="5.9353%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.10%)</title><rect x="5.7868%" y="469" width="0.1015%" height="15" fill="rgb(250,46,35)" fg:x="57" fg:w="1"/><text x="6.0368%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="5.7868%" y="453" width="0.1015%" height="15" fill="rgb(210,169,11)" fg:x="57" fg:w="1"/><text x="6.0368%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="5.7868%" y="437" width="0.1015%" height="15" fill="rgb(246,88,19)" fg:x="57" fg:w="1"/><text x="6.0368%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="5.7868%" y="421" width="0.1015%" height="15" fill="rgb(206,81,49)" fg:x="57" fg:w="1"/><text x="6.0368%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="5.7868%" y="405" width="0.1015%" height="15" fill="rgb(232,144,18)" fg:x="57" fg:w="1"/><text x="6.0368%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="5.7868%" y="389" width="0.1015%" height="15" fill="rgb(235,2,27)" fg:x="57" fg:w="1"/><text x="6.0368%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.10%)</title><rect x="5.8883%" y="469" width="0.1015%" height="15" fill="rgb(239,157,39)" fg:x="58" fg:w="1"/><text x="6.1383%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="5.8883%" y="453" width="0.1015%" height="15" fill="rgb(220,11,17)" fg:x="58" fg:w="1"/><text x="6.1383%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="5.9898%" y="453" width="0.1015%" height="15" fill="rgb(243,94,50)" fg:x="59" fg:w="1"/><text x="6.2398%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="5.9898%" y="437" width="0.1015%" height="15" fill="rgb(218,22,0)" fg:x="59" fg:w="1"/><text x="6.2398%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="5.9898%" y="421" width="0.1015%" height="15" fill="rgb(249,70,21)" fg:x="59" fg:w="1"/><text x="6.2398%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (8 samples, 0.81%)</title><rect x="5.4822%" y="501" width="0.8122%" height="15" fill="rgb(245,111,46)" fg:x="54" fg:w="8"/><text x="5.7322%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.81%)</title><rect x="5.4822%" y="485" width="0.8122%" height="15" fill="rgb(244,183,12)" fg:x="54" fg:w="8"/><text x="5.7322%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.30%)</title><rect x="5.9898%" y="469" width="0.3046%" height="15" fill="rgb(207,117,0)" fg:x="59" fg:w="3"/><text x="6.2398%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.20%)</title><rect x="6.0914%" y="453" width="0.2030%" height="15" fill="rgb(206,20,43)" fg:x="60" fg:w="2"/><text x="6.3414%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.20%)</title><rect x="6.0914%" y="437" width="0.2030%" height="15" fill="rgb(221,104,11)" fg:x="60" fg:w="2"/><text x="6.3414%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.20%)</title><rect x="6.0914%" y="421" width="0.2030%" height="15" fill="rgb(254,36,50)" fg:x="60" fg:w="2"/><text x="6.3414%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.20%)</title><rect x="6.0914%" y="405" width="0.2030%" height="15" fill="rgb(252,17,15)" fg:x="60" fg:w="2"/><text x="6.3414%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="6.0914%" y="389" width="0.2030%" height="15" fill="rgb(219,129,43)" fg:x="60" fg:w="2"/><text x="6.3414%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="6.0914%" y="373" width="0.2030%" height="15" fill="rgb(205,34,45)" fg:x="60" fg:w="2"/><text x="6.3414%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="6.1929%" y="357" width="0.1015%" height="15" fill="rgb(251,201,32)" fg:x="61" fg:w="1"/><text x="6.4429%" y="367.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (33 samples, 3.35%)</title><rect x="3.0457%" y="549" width="3.3503%" height="15" fill="rgb(205,56,0)" fg:x="30" fg:w="33"/><text x="3.2957%" y="559.50">eng..</text></g><g><title>engine::session::Session::check_for_changes (33 samples, 3.35%)</title><rect x="3.0457%" y="533" width="3.3503%" height="15" fill="rgb(211,193,27)" fg:x="30" fg:w="33"/><text x="3.2957%" y="543.50">eng..</text></g><g><title>kernel::compare::any_entity_changes (9 samples, 0.91%)</title><rect x="5.4822%" y="517" width="0.9137%" height="15" fill="rgb(231,100,42)" fg:x="54" fg:w="9"/><text x="5.7322%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.10%)</title><rect x="6.2944%" y="501" width="0.1015%" height="15" fill="rgb(245,85,27)" fg:x="62" fg:w="1"/><text x="6.5444%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="6.2944%" y="485" width="0.1015%" height="15" fill="rgb(241,76,24)" fg:x="62" fg:w="1"/><text x="6.5444%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="6.2944%" y="469" width="0.1015%" height="15" fill="rgb(249,157,15)" fg:x="62" fg:w="1"/><text x="6.5444%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="6.2944%" y="453" width="0.1015%" height="15" fill="rgb(222,218,25)" fg:x="62" fg:w="1"/><text x="6.5444%" y="463.50"></text></g><g><title>engine::session::Session::flush (39 samples, 3.96%)</title><rect x="2.5381%" y="581" width="3.9594%" height="15" fill="rgb(252,156,52)" fg:x="25" fg:w="39"/><text x="2.7881%" y="591.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (39 samples, 3.96%)</title><rect x="2.5381%" y="565" width="3.9594%" height="15" fill="rgb(211,185,7)" fg:x="25" fg:w="39"/><text x="2.7881%" y="575.50">engi..</text></g><g><title>engine::session::Session::world (1 samples, 0.10%)</title><rect x="6.3959%" y="549" width="0.1015%" height="15" fill="rgb(234,108,24)" fg:x="63" fg:w="1"/><text x="6.6459%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="6.3959%" y="533" width="0.1015%" height="15" fill="rgb(227,218,2)" fg:x="63" fg:w="1"/><text x="6.6459%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="6.4975%" y="533" width="0.1015%" height="15" fill="rgb(224,0,36)" fg:x="64" fg:w="1"/><text x="6.7475%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.20%)</title><rect x="6.4975%" y="565" width="0.2030%" height="15" fill="rgb(233,201,10)" fg:x="64" fg:w="2"/><text x="6.7475%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.20%)</title><rect x="6.4975%" y="549" width="0.2030%" height="15" fill="rgb(252,209,14)" fg:x="64" fg:w="2"/><text x="6.7475%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.10%)</title><rect x="6.5990%" y="533" width="0.1015%" height="15" fill="rgb(205,93,49)" fg:x="65" fg:w="1"/><text x="6.8490%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="6.5990%" y="517" width="0.1015%" height="15" fill="rgb(234,116,45)" fg:x="65" fg:w="1"/><text x="6.8490%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.10%)</title><rect x="6.7005%" y="549" width="0.1015%" height="15" fill="rgb(248,89,35)" fg:x="66" fg:w="1"/><text x="6.9505%" y="559.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.10%)</title><rect x="6.7005%" y="533" width="0.1015%" height="15" fill="rgb(233,167,45)" fg:x="66" fg:w="1"/><text x="6.9505%" y="543.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.10%)</title><rect x="6.7005%" y="517" width="0.1015%" height="15" fill="rgb(248,228,14)" fg:x="66" fg:w="1"/><text x="6.9505%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="6.9036%" y="517" width="0.1015%" height="15" fill="rgb(246,91,14)" fg:x="68" fg:w="1"/><text x="7.1536%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="6.9036%" y="501" width="0.1015%" height="15" fill="rgb(227,142,5)" fg:x="68" fg:w="1"/><text x="7.1536%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="6.9036%" y="485" width="0.1015%" height="15" fill="rgb(221,63,33)" fg:x="68" fg:w="1"/><text x="7.1536%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.41%)</title><rect x="6.8020%" y="549" width="0.4061%" height="15" fill="rgb(233,49,0)" fg:x="67" fg:w="4"/><text x="7.0520%" y="559.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.30%)</title><rect x="6.9036%" y="533" width="0.3046%" height="15" fill="rgb(251,115,38)" fg:x="68" fg:w="3"/><text x="7.1536%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.20%)</title><rect x="7.0051%" y="517" width="0.2030%" height="15" fill="rgb(231,214,32)" fg:x="69" fg:w="2"/><text x="7.2551%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="7.0051%" y="501" width="0.2030%" height="15" fill="rgb(248,73,46)" fg:x="69" fg:w="2"/><text x="7.2551%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="7.1066%" y="485" width="0.1015%" height="15" fill="rgb(237,156,4)" fg:x="70" fg:w="1"/><text x="7.3566%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.81%)</title><rect x="6.4975%" y="581" width="0.8122%" height="15" fill="rgb(227,132,2)" fg:x="64" fg:w="8"/><text x="6.7475%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.61%)</title><rect x="6.7005%" y="565" width="0.6091%" height="15" fill="rgb(248,161,9)" fg:x="66" fg:w="6"/><text x="6.9505%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.10%)</title><rect x="7.2081%" y="549" width="0.1015%" height="15" fill="rgb(238,77,38)" fg:x="71" fg:w="1"/><text x="7.4581%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="7.2081%" y="533" width="0.1015%" height="15" fill="rgb(222,166,40)" fg:x="71" fg:w="1"/><text x="7.4581%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="7.3096%" y="549" width="0.1015%" height="15" fill="rgb(214,168,45)" fg:x="72" fg:w="1"/><text x="7.5596%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="7.3096%" y="533" width="0.1015%" height="15" fill="rgb(226,64,37)" fg:x="72" fg:w="1"/><text x="7.5596%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="7.3096%" y="517" width="0.1015%" height="15" fill="rgb(232,210,43)" fg:x="72" fg:w="1"/><text x="7.5596%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="7.3096%" y="501" width="0.1015%" height="15" fill="rgb(214,76,33)" fg:x="72" fg:w="1"/><text x="7.5596%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="7.3096%" y="485" width="0.1015%" height="15" fill="rgb(210,78,5)" fg:x="72" fg:w="1"/><text x="7.5596%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="7.3096%" y="469" width="0.1015%" height="15" fill="rgb(211,107,37)" fg:x="72" fg:w="1"/><text x="7.5596%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="7.3096%" y="453" width="0.1015%" height="15" fill="rgb(249,67,16)" fg:x="72" fg:w="1"/><text x="7.5596%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="7.3096%" y="437" width="0.1015%" height="15" fill="rgb(222,114,31)" fg:x="72" fg:w="1"/><text x="7.5596%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="7.3096%" y="421" width="0.1015%" height="15" fill="rgb(242,118,19)" fg:x="72" fg:w="1"/><text x="7.5596%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="7.3096%" y="405" width="0.1015%" height="15" fill="rgb(223,115,1)" fg:x="72" fg:w="1"/><text x="7.5596%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="7.3096%" y="389" width="0.1015%" height="15" fill="rgb(241,182,54)" fg:x="72" fg:w="1"/><text x="7.5596%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="7.3096%" y="373" width="0.1015%" height="15" fill="rgb(244,166,36)" fg:x="72" fg:w="1"/><text x="7.5596%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="7.3096%" y="357" width="0.1015%" height="15" fill="rgb(241,52,43)" fg:x="72" fg:w="1"/><text x="7.5596%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="7.3096%" y="341" width="0.1015%" height="15" fill="rgb(236,82,9)" fg:x="72" fg:w="1"/><text x="7.5596%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="7.3096%" y="325" width="0.1015%" height="15" fill="rgb(241,119,0)" fg:x="72" fg:w="1"/><text x="7.5596%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="7.3096%" y="309" width="0.1015%" height="15" fill="rgb(221,19,22)" fg:x="72" fg:w="1"/><text x="7.5596%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="7.3096%" y="293" width="0.1015%" height="15" fill="rgb(254,144,35)" fg:x="72" fg:w="1"/><text x="7.5596%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="7.3096%" y="277" width="0.1015%" height="15" fill="rgb(246,132,30)" fg:x="72" fg:w="1"/><text x="7.5596%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="7.3096%" y="261" width="0.1015%" height="15" fill="rgb(234,69,28)" fg:x="72" fg:w="1"/><text x="7.5596%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="7.3096%" y="245" width="0.1015%" height="15" fill="rgb(219,106,47)" fg:x="72" fg:w="1"/><text x="7.5596%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="7.3096%" y="229" width="0.1015%" height="15" fill="rgb(218,79,24)" fg:x="72" fg:w="1"/><text x="7.5596%" y="239.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.20%)</title><rect x="7.3096%" y="581" width="0.2030%" height="15" fill="rgb(225,26,21)" fg:x="72" fg:w="2"/><text x="7.5596%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.20%)</title><rect x="7.3096%" y="565" width="0.2030%" height="15" fill="rgb(217,68,49)" fg:x="72" fg:w="2"/><text x="7.5596%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.10%)</title><rect x="7.4112%" y="549" width="0.1015%" height="15" fill="rgb(220,204,28)" fg:x="73" fg:w="1"/><text x="7.6612%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.10%)</title><rect x="7.4112%" y="533" width="0.1015%" height="15" fill="rgb(237,208,43)" fg:x="73" fg:w="1"/><text x="7.6612%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="7.4112%" y="517" width="0.1015%" height="15" fill="rgb(213,97,42)" fg:x="73" fg:w="1"/><text x="7.6612%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="7.4112%" y="501" width="0.1015%" height="15" fill="rgb(238,96,52)" fg:x="73" fg:w="1"/><text x="7.6612%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="7.4112%" y="485" width="0.1015%" height="15" fill="rgb(228,14,13)" fg:x="73" fg:w="1"/><text x="7.6612%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="7.4112%" y="469" width="0.1015%" height="15" fill="rgb(219,123,13)" fg:x="73" fg:w="1"/><text x="7.6612%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="7.4112%" y="453" width="0.1015%" height="15" fill="rgb(216,144,17)" fg:x="73" fg:w="1"/><text x="7.6612%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="7.4112%" y="437" width="0.1015%" height="15" fill="rgb(230,228,29)" fg:x="73" fg:w="1"/><text x="7.6612%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="7.4112%" y="421" width="0.1015%" height="15" fill="rgb(233,18,5)" fg:x="73" fg:w="1"/><text x="7.6612%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="7.4112%" y="405" width="0.1015%" height="15" fill="rgb(233,197,12)" fg:x="73" fg:w="1"/><text x="7.6612%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="7.4112%" y="389" width="0.1015%" height="15" fill="rgb(234,140,29)" fg:x="73" fg:w="1"/><text x="7.6612%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="7.4112%" y="373" width="0.1015%" height="15" fill="rgb(233,113,19)" fg:x="73" fg:w="1"/><text x="7.6612%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="7.4112%" y="357" width="0.1015%" height="15" fill="rgb(246,209,13)" fg:x="73" fg:w="1"/><text x="7.6612%" y="367.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.10%)</title><rect x="7.7157%" y="517" width="0.1015%" height="15" fill="rgb(242,79,54)" fg:x="76" fg:w="1"/><text x="7.9657%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.10%)</title><rect x="7.7157%" y="501" width="0.1015%" height="15" fill="rgb(219,73,16)" fg:x="76" fg:w="1"/><text x="7.9657%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="7.7157%" y="485" width="0.1015%" height="15" fill="rgb(224,52,10)" fg:x="76" fg:w="1"/><text x="7.9657%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.10%)</title><rect x="7.7157%" y="469" width="0.1015%" height="15" fill="rgb(237,179,5)" fg:x="76" fg:w="1"/><text x="7.9657%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.30%)</title><rect x="7.6142%" y="565" width="0.3046%" height="15" fill="rgb(231,20,6)" fg:x="75" fg:w="3"/><text x="7.8642%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="7.6142%" y="549" width="0.3046%" height="15" fill="rgb(253,171,45)" fg:x="75" fg:w="3"/><text x="7.8642%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.30%)</title><rect x="7.6142%" y="533" width="0.3046%" height="15" fill="rgb(230,75,49)" fg:x="75" fg:w="3"/><text x="7.8642%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.10%)</title><rect x="7.8173%" y="517" width="0.1015%" height="15" fill="rgb(216,83,46)" fg:x="77" fg:w="1"/><text x="8.0673%" y="527.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.10%)</title><rect x="7.8173%" y="501" width="0.1015%" height="15" fill="rgb(236,56,9)" fg:x="77" fg:w="1"/><text x="8.0673%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.10%)</title><rect x="7.8173%" y="485" width="0.1015%" height="15" fill="rgb(215,28,34)" fg:x="77" fg:w="1"/><text x="8.0673%" y="495.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.10%)</title><rect x="7.8173%" y="469" width="0.1015%" height="15" fill="rgb(230,222,20)" fg:x="77" fg:w="1"/><text x="8.0673%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.10%)</title><rect x="7.8173%" y="453" width="0.1015%" height="15" fill="rgb(235,209,51)" fg:x="77" fg:w="1"/><text x="8.0673%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="7.8173%" y="437" width="0.1015%" height="15" fill="rgb(235,167,1)" fg:x="77" fg:w="1"/><text x="8.0673%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.10%)</title><rect x="7.8173%" y="421" width="0.1015%" height="15" fill="rgb(248,220,0)" fg:x="77" fg:w="1"/><text x="8.0673%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="7.8173%" y="405" width="0.1015%" height="15" fill="rgb(239,0,18)" fg:x="77" fg:w="1"/><text x="8.0673%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="7.8173%" y="389" width="0.1015%" height="15" fill="rgb(229,179,11)" fg:x="77" fg:w="1"/><text x="8.0673%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="7.8173%" y="373" width="0.1015%" height="15" fill="rgb(226,116,53)" fg:x="77" fg:w="1"/><text x="8.0673%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="7.8173%" y="357" width="0.1015%" height="15" fill="rgb(218,1,49)" fg:x="77" fg:w="1"/><text x="8.0673%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="7.9188%" y="533" width="0.2030%" height="15" fill="rgb(208,184,47)" fg:x="78" fg:w="2"/><text x="8.1688%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.20%)</title><rect x="7.9188%" y="517" width="0.2030%" height="15" fill="rgb(238,174,3)" fg:x="78" fg:w="2"/><text x="8.1688%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.20%)</title><rect x="7.9188%" y="501" width="0.2030%" height="15" fill="rgb(247,188,6)" fg:x="78" fg:w="2"/><text x="8.1688%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="7.9188%" y="485" width="0.2030%" height="15" fill="rgb(211,165,46)" fg:x="78" fg:w="2"/><text x="8.1688%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="7.9188%" y="469" width="0.2030%" height="15" fill="rgb(222,190,10)" fg:x="78" fg:w="2"/><text x="8.1688%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.20%)</title><rect x="7.9188%" y="453" width="0.2030%" height="15" fill="rgb(206,185,3)" fg:x="78" fg:w="2"/><text x="8.1688%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="7.9188%" y="437" width="0.2030%" height="15" fill="rgb(244,125,37)" fg:x="78" fg:w="2"/><text x="8.1688%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.20%)</title><rect x="7.9188%" y="421" width="0.2030%" height="15" fill="rgb(211,43,7)" fg:x="78" fg:w="2"/><text x="8.1688%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="7.9188%" y="405" width="0.2030%" height="15" fill="rgb(250,41,42)" fg:x="78" fg:w="2"/><text x="8.1688%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="7.9188%" y="389" width="0.2030%" height="15" fill="rgb(254,54,42)" fg:x="78" fg:w="2"/><text x="8.1688%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="7.9188%" y="373" width="0.2030%" height="15" fill="rgb(213,71,43)" fg:x="78" fg:w="2"/><text x="8.1688%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.20%)</title><rect x="7.9188%" y="357" width="0.2030%" height="15" fill="rgb(249,3,44)" fg:x="78" fg:w="2"/><text x="8.1688%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.20%)</title><rect x="7.9188%" y="341" width="0.2030%" height="15" fill="rgb(229,80,41)" fg:x="78" fg:w="2"/><text x="8.1688%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="7.9188%" y="325" width="0.2030%" height="15" fill="rgb(231,25,28)" fg:x="78" fg:w="2"/><text x="8.1688%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="7.9188%" y="309" width="0.2030%" height="15" fill="rgb(208,79,48)" fg:x="78" fg:w="2"/><text x="8.1688%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="8.1218%" y="485" width="0.1015%" height="15" fill="rgb(207,196,38)" fg:x="80" fg:w="1"/><text x="8.3718%" y="495.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.20%)</title><rect x="8.1218%" y="533" width="0.2030%" height="15" fill="rgb(228,105,49)" fg:x="80" fg:w="2"/><text x="8.3718%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.20%)</title><rect x="8.1218%" y="517" width="0.2030%" height="15" fill="rgb(237,99,15)" fg:x="80" fg:w="2"/><text x="8.3718%" y="527.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.20%)</title><rect x="8.1218%" y="501" width="0.2030%" height="15" fill="rgb(224,207,46)" fg:x="80" fg:w="2"/><text x="8.3718%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.10%)</title><rect x="8.2234%" y="485" width="0.1015%" height="15" fill="rgb(249,117,50)" fg:x="81" fg:w="1"/><text x="8.4734%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="8.2234%" y="469" width="0.1015%" height="15" fill="rgb(248,17,13)" fg:x="81" fg:w="1"/><text x="8.4734%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.10%)</title><rect x="8.2234%" y="453" width="0.1015%" height="15" fill="rgb(228,187,36)" fg:x="81" fg:w="1"/><text x="8.4734%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="8.2234%" y="437" width="0.1015%" height="15" fill="rgb(234,132,20)" fg:x="81" fg:w="1"/><text x="8.4734%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="8.2234%" y="421" width="0.1015%" height="15" fill="rgb(209,170,46)" fg:x="81" fg:w="1"/><text x="8.4734%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="8.3249%" y="501" width="0.1015%" height="15" fill="rgb(237,23,19)" fg:x="82" fg:w="1"/><text x="8.5749%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="8.4264%" y="485" width="0.1015%" height="15" fill="rgb(227,21,26)" fg:x="83" fg:w="1"/><text x="8.6764%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="8.5279%" y="485" width="0.1015%" height="15" fill="rgb(222,220,48)" fg:x="84" fg:w="1"/><text x="8.7779%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="8.5279%" y="469" width="0.1015%" height="15" fill="rgb(214,9,16)" fg:x="84" fg:w="1"/><text x="8.7779%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="8.5279%" y="453" width="0.1015%" height="15" fill="rgb(209,73,30)" fg:x="84" fg:w="1"/><text x="8.7779%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="8.7310%" y="469" width="0.1015%" height="15" fill="rgb(207,20,33)" fg:x="86" fg:w="1"/><text x="8.9810%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="8.7310%" y="453" width="0.1015%" height="15" fill="rgb(219,153,12)" fg:x="86" fg:w="1"/><text x="8.9810%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="8.7310%" y="437" width="0.1015%" height="15" fill="rgb(235,97,25)" fg:x="86" fg:w="1"/><text x="8.9810%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.51%)</title><rect x="8.8325%" y="469" width="0.5076%" height="15" fill="rgb(244,30,34)" fg:x="87" fg:w="5"/><text x="9.0825%" y="479.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.51%)</title><rect x="8.8325%" y="453" width="0.5076%" height="15" fill="rgb(214,106,45)" fg:x="87" fg:w="5"/><text x="9.0825%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.41%)</title><rect x="8.9340%" y="437" width="0.4061%" height="15" fill="rgb(226,41,9)" fg:x="88" fg:w="4"/><text x="9.1840%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.41%)</title><rect x="8.9340%" y="421" width="0.4061%" height="15" fill="rgb(253,139,29)" fg:x="88" fg:w="4"/><text x="9.1840%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="9.2386%" y="405" width="0.1015%" height="15" fill="rgb(213,205,39)" fg:x="91" fg:w="1"/><text x="9.4886%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="9.2386%" y="389" width="0.1015%" height="15" fill="rgb(209,27,10)" fg:x="91" fg:w="1"/><text x="9.4886%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="9.3401%" y="453" width="0.1015%" height="15" fill="rgb(249,142,16)" fg:x="92" fg:w="1"/><text x="9.5901%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="9.4416%" y="453" width="0.1015%" height="15" fill="rgb(242,65,12)" fg:x="93" fg:w="1"/><text x="9.6916%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="9.4416%" y="437" width="0.1015%" height="15" fill="rgb(232,48,10)" fg:x="93" fg:w="1"/><text x="9.6916%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.20%)</title><rect x="9.5431%" y="437" width="0.2030%" height="15" fill="rgb(253,67,19)" fg:x="94" fg:w="2"/><text x="9.7931%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.20%)</title><rect x="9.5431%" y="421" width="0.2030%" height="15" fill="rgb(227,93,29)" fg:x="94" fg:w="2"/><text x="9.7931%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.20%)</title><rect x="9.5431%" y="405" width="0.2030%" height="15" fill="rgb(226,189,53)" fg:x="94" fg:w="2"/><text x="9.7931%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="9.5431%" y="389" width="0.2030%" height="15" fill="rgb(223,224,1)" fg:x="94" fg:w="2"/><text x="9.7931%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="9.7462%" y="421" width="0.1015%" height="15" fill="rgb(221,84,32)" fg:x="96" fg:w="1"/><text x="9.9962%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.61%)</title><rect x="9.3401%" y="469" width="0.6091%" height="15" fill="rgb(214,189,28)" fg:x="92" fg:w="6"/><text x="9.5901%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.41%)</title><rect x="9.5431%" y="453" width="0.4061%" height="15" fill="rgb(234,7,52)" fg:x="94" fg:w="4"/><text x="9.7931%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.20%)</title><rect x="9.7462%" y="437" width="0.2030%" height="15" fill="rgb(249,73,31)" fg:x="96" fg:w="2"/><text x="9.9962%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="9.8477%" y="421" width="0.1015%" height="15" fill="rgb(253,153,41)" fg:x="97" fg:w="1"/><text x="10.0977%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="9.8477%" y="405" width="0.1015%" height="15" fill="rgb(249,52,34)" fg:x="97" fg:w="1"/><text x="10.0977%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="9.8477%" y="389" width="0.1015%" height="15" fill="rgb(236,177,47)" fg:x="97" fg:w="1"/><text x="10.0977%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="9.8477%" y="373" width="0.1015%" height="15" fill="rgb(252,185,45)" fg:x="97" fg:w="1"/><text x="10.0977%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.42%)</title><rect x="8.6294%" y="485" width="1.4213%" height="15" fill="rgb(251,15,30)" fg:x="85" fg:w="14"/><text x="8.8794%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="9.9492%" y="469" width="0.1015%" height="15" fill="rgb(233,31,4)" fg:x="98" fg:w="1"/><text x="10.1992%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="9.9492%" y="453" width="0.1015%" height="15" fill="rgb(254,44,24)" fg:x="98" fg:w="1"/><text x="10.1992%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="9.9492%" y="437" width="0.1015%" height="15" fill="rgb(218,54,1)" fg:x="98" fg:w="1"/><text x="10.1992%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.83%)</title><rect x="8.4264%" y="501" width="1.8274%" height="15" fill="rgb(243,209,39)" fg:x="83" fg:w="18"/><text x="8.6764%" y="511.50">&lt;..</text></g><g><title>std::io::Write::write_all (2 samples, 0.20%)</title><rect x="10.0508%" y="485" width="0.2030%" height="15" fill="rgb(206,75,33)" fg:x="99" fg:w="2"/><text x="10.3008%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.20%)</title><rect x="10.0508%" y="469" width="0.2030%" height="15" fill="rgb(223,108,18)" fg:x="99" fg:w="2"/><text x="10.3008%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="10.0508%" y="453" width="0.2030%" height="15" fill="rgb(244,89,31)" fg:x="99" fg:w="2"/><text x="10.3008%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.20%)</title><rect x="10.0508%" y="437" width="0.2030%" height="15" fill="rgb(222,167,27)" fg:x="99" fg:w="2"/><text x="10.3008%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="10.1523%" y="421" width="0.1015%" height="15" fill="rgb(247,41,16)" fg:x="100" fg:w="1"/><text x="10.4023%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="10.1523%" y="405" width="0.1015%" height="15" fill="rgb(233,168,40)" fg:x="100" fg:w="1"/><text x="10.4023%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.10%)</title><rect x="10.2538%" y="485" width="0.1015%" height="15" fill="rgb(205,211,8)" fg:x="101" fg:w="1"/><text x="10.5038%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="10.3553%" y="469" width="0.1015%" height="15" fill="rgb(238,105,11)" fg:x="102" fg:w="1"/><text x="10.6053%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="10.4569%" y="453" width="0.1015%" height="15" fill="rgb(223,142,52)" fg:x="103" fg:w="1"/><text x="10.7069%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="10.5584%" y="437" width="0.1015%" height="15" fill="rgb(238,51,33)" fg:x="104" fg:w="1"/><text x="10.8084%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="10.5584%" y="421" width="0.1015%" height="15" fill="rgb(231,188,43)" fg:x="104" fg:w="1"/><text x="10.8084%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="10.7614%" y="421" width="0.1015%" height="15" fill="rgb(216,92,17)" fg:x="106" fg:w="1"/><text x="11.0114%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.71%)</title><rect x="10.2538%" y="501" width="0.7107%" height="15" fill="rgb(228,2,40)" fg:x="101" fg:w="7"/><text x="10.5038%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.61%)</title><rect x="10.3553%" y="485" width="0.6091%" height="15" fill="rgb(226,73,15)" fg:x="102" fg:w="6"/><text x="10.6053%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.51%)</title><rect x="10.4569%" y="469" width="0.5076%" height="15" fill="rgb(227,66,46)" fg:x="103" fg:w="5"/><text x="10.7069%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.41%)</title><rect x="10.5584%" y="453" width="0.4061%" height="15" fill="rgb(209,71,6)" fg:x="104" fg:w="4"/><text x="10.8084%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="10.6599%" y="437" width="0.3046%" height="15" fill="rgb(246,100,25)" fg:x="105" fg:w="3"/><text x="10.9099%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="10.8629%" y="421" width="0.1015%" height="15" fill="rgb(248,185,27)" fg:x="107" fg:w="1"/><text x="11.1129%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="10.8629%" y="405" width="0.1015%" height="15" fill="rgb(225,118,47)" fg:x="107" fg:w="1"/><text x="11.1129%" y="415.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.10%)</title><rect x="10.9645%" y="485" width="0.1015%" height="15" fill="rgb(220,185,44)" fg:x="108" fg:w="1"/><text x="11.2145%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="11.2690%" y="453" width="0.1015%" height="15" fill="rgb(227,95,24)" fg:x="111" fg:w="1"/><text x="11.5190%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="11.2690%" y="437" width="0.1015%" height="15" fill="rgb(252,84,24)" fg:x="111" fg:w="1"/><text x="11.5190%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="11.3706%" y="453" width="0.2030%" height="15" fill="rgb(240,34,44)" fg:x="112" fg:w="2"/><text x="11.6206%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="11.3706%" y="437" width="0.2030%" height="15" fill="rgb(209,72,54)" fg:x="112" fg:w="2"/><text x="11.6206%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="11.3706%" y="421" width="0.2030%" height="15" fill="rgb(226,19,45)" fg:x="112" fg:w="2"/><text x="11.6206%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.20%)</title><rect x="11.5736%" y="453" width="0.2030%" height="15" fill="rgb(246,7,45)" fg:x="114" fg:w="2"/><text x="11.8236%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.10%)</title><rect x="11.6751%" y="437" width="0.1015%" height="15" fill="rgb(225,45,2)" fg:x="115" fg:w="1"/><text x="11.9251%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="11.7766%" y="421" width="0.1015%" height="15" fill="rgb(221,80,29)" fg:x="116" fg:w="1"/><text x="12.0266%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.20%)</title><rect x="11.7766%" y="453" width="0.2030%" height="15" fill="rgb(228,11,19)" fg:x="116" fg:w="2"/><text x="12.0266%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="11.7766%" y="437" width="0.2030%" height="15" fill="rgb(243,17,21)" fg:x="116" fg:w="2"/><text x="12.0266%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="11.8782%" y="421" width="0.1015%" height="15" fill="rgb(243,88,8)" fg:x="117" fg:w="1"/><text x="12.1282%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="11.8782%" y="405" width="0.1015%" height="15" fill="rgb(214,17,9)" fg:x="117" fg:w="1"/><text x="12.1282%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="11.8782%" y="389" width="0.1015%" height="15" fill="rgb(232,169,15)" fg:x="117" fg:w="1"/><text x="12.1282%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="11.9797%" y="405" width="0.1015%" height="15" fill="rgb(232,86,53)" fg:x="118" fg:w="1"/><text x="12.2297%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="11.9797%" y="389" width="0.1015%" height="15" fill="rgb(222,100,4)" fg:x="118" fg:w="1"/><text x="12.2297%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="11.9797%" y="373" width="0.1015%" height="15" fill="rgb(253,151,38)" fg:x="118" fg:w="1"/><text x="12.2297%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.20%)</title><rect x="11.9797%" y="453" width="0.2030%" height="15" fill="rgb(238,215,29)" fg:x="118" fg:w="2"/><text x="12.2297%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="11.9797%" y="437" width="0.2030%" height="15" fill="rgb(205,128,53)" fg:x="118" fg:w="2"/><text x="12.2297%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.20%)</title><rect x="11.9797%" y="421" width="0.2030%" height="15" fill="rgb(248,183,14)" fg:x="118" fg:w="2"/><text x="12.2297%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.10%)</title><rect x="12.0812%" y="405" width="0.1015%" height="15" fill="rgb(244,172,35)" fg:x="119" fg:w="1"/><text x="12.3312%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="12.0812%" y="389" width="0.1015%" height="15" fill="rgb(234,93,19)" fg:x="119" fg:w="1"/><text x="12.3312%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="12.0812%" y="373" width="0.1015%" height="15" fill="rgb(227,109,7)" fg:x="119" fg:w="1"/><text x="12.3312%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="12.0812%" y="357" width="0.1015%" height="15" fill="rgb(233,136,54)" fg:x="119" fg:w="1"/><text x="12.3312%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.10%)</title><rect x="12.0812%" y="341" width="0.1015%" height="15" fill="rgb(233,19,40)" fg:x="119" fg:w="1"/><text x="12.3312%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.10%)</title><rect x="12.1827%" y="453" width="0.1015%" height="15" fill="rgb(247,41,18)" fg:x="120" fg:w="1"/><text x="12.4327%" y="463.50"></text></g><g><title>engine::session::Session::flush (44 samples, 4.47%)</title><rect x="7.9188%" y="565" width="4.4670%" height="15" fill="rgb(220,34,34)" fg:x="78" fg:w="44"/><text x="8.1688%" y="575.50">engin..</text></g><g><title>engine::session::Session::save_entity_changes (44 samples, 4.47%)</title><rect x="7.9188%" y="549" width="4.4670%" height="15" fill="rgb(222,135,32)" fg:x="78" fg:w="44"/><text x="8.1688%" y="559.50">engin..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (40 samples, 4.06%)</title><rect x="8.3249%" y="533" width="4.0609%" height="15" fill="rgb(214,80,19)" fg:x="82" fg:w="40"/><text x="8.5749%" y="543.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (40 samples, 4.06%)</title><rect x="8.3249%" y="517" width="4.0609%" height="15" fill="rgb(234,54,46)" fg:x="82" fg:w="40"/><text x="8.5749%" y="527.50">engi..</text></g><g><title>kernel::compare::any_entity_changes (14 samples, 1.42%)</title><rect x="10.9645%" y="501" width="1.4213%" height="15" fill="rgb(251,48,23)" fg:x="108" fg:w="14"/><text x="11.2145%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (13 samples, 1.32%)</title><rect x="11.0660%" y="485" width="1.3198%" height="15" fill="rgb(254,109,52)" fg:x="109" fg:w="13"/><text x="11.3160%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.32%)</title><rect x="11.0660%" y="469" width="1.3198%" height="15" fill="rgb(240,186,19)" fg:x="109" fg:w="13"/><text x="11.3160%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="12.2843%" y="453" width="0.1015%" height="15" fill="rgb(246,187,17)" fg:x="121" fg:w="1"/><text x="12.5343%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (1 samples, 0.10%)</title><rect x="12.2843%" y="437" width="0.1015%" height="15" fill="rgb(212,21,5)" fg:x="121" fg:w="1"/><text x="12.5343%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="12.2843%" y="421" width="0.1015%" height="15" fill="rgb(225,185,18)" fg:x="121" fg:w="1"/><text x="12.5343%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="12.2843%" y="405" width="0.1015%" height="15" fill="rgb(245,114,17)" fg:x="121" fg:w="1"/><text x="12.5343%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="12.2843%" y="389" width="0.1015%" height="15" fill="rgb(223,164,24)" fg:x="121" fg:w="1"/><text x="12.5343%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="12.2843%" y="373" width="0.1015%" height="15" fill="rgb(211,228,3)" fg:x="121" fg:w="1"/><text x="12.5343%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="12.2843%" y="357" width="0.1015%" height="15" fill="rgb(223,16,38)" fg:x="121" fg:w="1"/><text x="12.5343%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="12.2843%" y="341" width="0.1015%" height="15" fill="rgb(207,31,54)" fg:x="121" fg:w="1"/><text x="12.5343%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="12.2843%" y="325" width="0.1015%" height="15" fill="rgb(220,39,11)" fg:x="121" fg:w="1"/><text x="12.5343%" y="335.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.10%)</title><rect x="12.3858%" y="565" width="0.1015%" height="15" fill="rgb(235,185,0)" fg:x="122" fg:w="1"/><text x="12.6358%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.10%)</title><rect x="12.4873%" y="565" width="0.1015%" height="15" fill="rgb(249,39,18)" fg:x="123" fg:w="1"/><text x="12.7373%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.10%)</title><rect x="12.4873%" y="549" width="0.1015%" height="15" fill="rgb(240,110,33)" fg:x="123" fg:w="1"/><text x="12.7373%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="12.4873%" y="533" width="0.1015%" height="15" fill="rgb(210,92,42)" fg:x="123" fg:w="1"/><text x="12.7373%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="12.4873%" y="517" width="0.1015%" height="15" fill="rgb(218,215,28)" fg:x="123" fg:w="1"/><text x="12.7373%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="12.4873%" y="501" width="0.1015%" height="15" fill="rgb(238,215,36)" fg:x="123" fg:w="1"/><text x="12.7373%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="12.4873%" y="485" width="0.1015%" height="15" fill="rgb(220,31,10)" fg:x="123" fg:w="1"/><text x="12.7373%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="12.4873%" y="469" width="0.1015%" height="15" fill="rgb(212,93,14)" fg:x="123" fg:w="1"/><text x="12.7373%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="12.4873%" y="453" width="0.1015%" height="15" fill="rgb(254,207,2)" fg:x="123" fg:w="1"/><text x="12.7373%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="12.4873%" y="437" width="0.1015%" height="15" fill="rgb(205,57,44)" fg:x="123" fg:w="1"/><text x="12.7373%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="12.5888%" y="517" width="0.1015%" height="15" fill="rgb(226,151,19)" fg:x="124" fg:w="1"/><text x="12.8388%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="12.6904%" y="517" width="0.1015%" height="15" fill="rgb(230,72,30)" fg:x="125" fg:w="1"/><text x="12.9404%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="12.6904%" y="501" width="0.1015%" height="15" fill="rgb(244,0,8)" fg:x="125" fg:w="1"/><text x="12.9404%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="12.6904%" y="485" width="0.1015%" height="15" fill="rgb(230,192,6)" fg:x="125" fg:w="1"/><text x="12.9404%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="12.6904%" y="469" width="0.1015%" height="15" fill="rgb(233,207,13)" fg:x="125" fg:w="1"/><text x="12.9404%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="12.6904%" y="453" width="0.1015%" height="15" fill="rgb(206,227,7)" fg:x="125" fg:w="1"/><text x="12.9404%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="12.6904%" y="437" width="0.1015%" height="15" fill="rgb(213,217,25)" fg:x="125" fg:w="1"/><text x="12.9404%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="12.6904%" y="421" width="0.1015%" height="15" fill="rgb(249,75,4)" fg:x="125" fg:w="1"/><text x="12.9404%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="12.6904%" y="405" width="0.1015%" height="15" fill="rgb(225,114,18)" fg:x="125" fg:w="1"/><text x="12.9404%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="12.6904%" y="389" width="0.1015%" height="15" fill="rgb(211,162,40)" fg:x="125" fg:w="1"/><text x="12.9404%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="12.6904%" y="373" width="0.1015%" height="15" fill="rgb(206,49,29)" fg:x="125" fg:w="1"/><text x="12.9404%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.30%)</title><rect x="12.5888%" y="533" width="0.3046%" height="15" fill="rgb(244,8,6)" fg:x="124" fg:w="3"/><text x="12.8388%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="12.7919%" y="517" width="0.1015%" height="15" fill="rgb(231,194,28)" fg:x="126" fg:w="1"/><text x="13.0419%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="12.7919%" y="501" width="0.1015%" height="15" fill="rgb(210,69,5)" fg:x="126" fg:w="1"/><text x="13.0419%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="12.7919%" y="485" width="0.1015%" height="15" fill="rgb(216,186,12)" fg:x="126" fg:w="1"/><text x="13.0419%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="12.7919%" y="469" width="0.1015%" height="15" fill="rgb(238,61,15)" fg:x="126" fg:w="1"/><text x="13.0419%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="12.7919%" y="453" width="0.1015%" height="15" fill="rgb(226,104,1)" fg:x="126" fg:w="1"/><text x="13.0419%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="12.7919%" y="437" width="0.1015%" height="15" fill="rgb(229,128,15)" fg:x="126" fg:w="1"/><text x="13.0419%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="12.7919%" y="421" width="0.1015%" height="15" fill="rgb(247,110,15)" fg:x="126" fg:w="1"/><text x="13.0419%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="12.7919%" y="405" width="0.1015%" height="15" fill="rgb(210,74,48)" fg:x="126" fg:w="1"/><text x="13.0419%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="12.7919%" y="389" width="0.1015%" height="15" fill="rgb(246,121,10)" fg:x="126" fg:w="1"/><text x="13.0419%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="12.7919%" y="373" width="0.1015%" height="15" fill="rgb(214,156,37)" fg:x="126" fg:w="1"/><text x="13.0419%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="12.7919%" y="357" width="0.1015%" height="15" fill="rgb(214,210,34)" fg:x="126" fg:w="1"/><text x="13.0419%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="12.7919%" y="341" width="0.1015%" height="15" fill="rgb(237,93,35)" fg:x="126" fg:w="1"/><text x="13.0419%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="12.7919%" y="325" width="0.1015%" height="15" fill="rgb(206,36,8)" fg:x="126" fg:w="1"/><text x="13.0419%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="12.7919%" y="309" width="0.1015%" height="15" fill="rgb(208,151,12)" fg:x="126" fg:w="1"/><text x="13.0419%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="12.7919%" y="293" width="0.1015%" height="15" fill="rgb(225,133,52)" fg:x="126" fg:w="1"/><text x="13.0419%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="12.7919%" y="277" width="0.1015%" height="15" fill="rgb(231,71,53)" fg:x="126" fg:w="1"/><text x="13.0419%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="12.7919%" y="261" width="0.1015%" height="15" fill="rgb(243,76,21)" fg:x="126" fg:w="1"/><text x="13.0419%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="12.7919%" y="245" width="0.1015%" height="15" fill="rgb(252,144,3)" fg:x="126" fg:w="1"/><text x="13.0419%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="12.7919%" y="229" width="0.1015%" height="15" fill="rgb(231,199,10)" fg:x="126" fg:w="1"/><text x="13.0419%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="12.8934%" y="501" width="0.1015%" height="15" fill="rgb(215,18,11)" fg:x="127" fg:w="1"/><text x="13.1434%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="12.8934%" y="485" width="0.1015%" height="15" fill="rgb(241,65,24)" fg:x="127" fg:w="1"/><text x="13.1434%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="12.8934%" y="469" width="0.1015%" height="15" fill="rgb(251,192,38)" fg:x="127" fg:w="1"/><text x="13.1434%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="12.8934%" y="453" width="0.1015%" height="15" fill="rgb(205,9,35)" fg:x="127" fg:w="1"/><text x="13.1434%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="12.8934%" y="437" width="0.1015%" height="15" fill="rgb(229,225,49)" fg:x="127" fg:w="1"/><text x="13.1434%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="12.8934%" y="421" width="0.1015%" height="15" fill="rgb(207,125,39)" fg:x="127" fg:w="1"/><text x="13.1434%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="12.8934%" y="405" width="0.1015%" height="15" fill="rgb(222,78,19)" fg:x="127" fg:w="1"/><text x="13.1434%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="12.8934%" y="389" width="0.1015%" height="15" fill="rgb(248,207,20)" fg:x="127" fg:w="1"/><text x="13.1434%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="12.8934%" y="373" width="0.1015%" height="15" fill="rgb(205,103,49)" fg:x="127" fg:w="1"/><text x="13.1434%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="12.8934%" y="357" width="0.1015%" height="15" fill="rgb(216,42,28)" fg:x="127" fg:w="1"/><text x="13.1434%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="12.8934%" y="341" width="0.1015%" height="15" fill="rgb(213,205,53)" fg:x="127" fg:w="1"/><text x="13.1434%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="12.8934%" y="325" width="0.1015%" height="15" fill="rgb(239,140,53)" fg:x="127" fg:w="1"/><text x="13.1434%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.42%)</title><rect x="12.5888%" y="549" width="1.4213%" height="15" fill="rgb(248,95,9)" fg:x="124" fg:w="14"/><text x="12.8388%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (11 samples, 1.12%)</title><rect x="12.8934%" y="533" width="1.1168%" height="15" fill="rgb(254,58,47)" fg:x="127" fg:w="11"/><text x="13.1434%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (11 samples, 1.12%)</title><rect x="12.8934%" y="517" width="1.1168%" height="15" fill="rgb(234,227,14)" fg:x="127" fg:w="11"/><text x="13.1434%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 1.02%)</title><rect x="12.9949%" y="501" width="1.0152%" height="15" fill="rgb(205,192,45)" fg:x="128" fg:w="10"/><text x="13.2449%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 1.02%)</title><rect x="12.9949%" y="485" width="1.0152%" height="15" fill="rgb(253,187,31)" fg:x="128" fg:w="10"/><text x="13.2449%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 1.02%)</title><rect x="12.9949%" y="469" width="1.0152%" height="15" fill="rgb(222,6,32)" fg:x="128" fg:w="10"/><text x="13.2449%" y="479.50"></text></g><g><title>__libc_malloc (9 samples, 0.91%)</title><rect x="13.0964%" y="453" width="0.9137%" height="15" fill="rgb(249,190,19)" fg:x="129" fg:w="9"/><text x="13.3464%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="14.0102%" y="501" width="0.1015%" height="15" fill="rgb(251,28,20)" fg:x="138" fg:w="1"/><text x="14.2602%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.30%)</title><rect x="14.0102%" y="533" width="0.3046%" height="15" fill="rgb(210,223,40)" fg:x="138" fg:w="3"/><text x="14.2602%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.30%)</title><rect x="14.0102%" y="517" width="0.3046%" height="15" fill="rgb(216,137,22)" fg:x="138" fg:w="3"/><text x="14.2602%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.20%)</title><rect x="14.1117%" y="501" width="0.2030%" height="15" fill="rgb(247,39,34)" fg:x="139" fg:w="2"/><text x="14.3617%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="14.1117%" y="485" width="0.2030%" height="15" fill="rgb(239,43,50)" fg:x="139" fg:w="2"/><text x="14.3617%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.20%)</title><rect x="14.1117%" y="469" width="0.2030%" height="15" fill="rgb(241,212,9)" fg:x="139" fg:w="2"/><text x="14.3617%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="14.1117%" y="453" width="0.2030%" height="15" fill="rgb(205,8,2)" fg:x="139" fg:w="2"/><text x="14.3617%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="14.1117%" y="437" width="0.2030%" height="15" fill="rgb(217,173,54)" fg:x="139" fg:w="2"/><text x="14.3617%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="14.2132%" y="421" width="0.1015%" height="15" fill="rgb(208,149,52)" fg:x="140" fg:w="1"/><text x="14.4632%" y="431.50"></text></g><g><title>plugins_core::build::Build::holding (18 samples, 1.83%)</title><rect x="12.5888%" y="565" width="1.8274%" height="15" fill="rgb(239,99,40)" fg:x="124" fg:w="18"/><text x="12.8388%" y="575.50">p..</text></g><g><title>plugins_core::tools::set_container (4 samples, 0.41%)</title><rect x="14.0102%" y="549" width="0.4061%" height="15" fill="rgb(233,214,26)" fg:x="138" fg:w="4"/><text x="14.2602%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.10%)</title><rect x="14.3147%" y="533" width="0.1015%" height="15" fill="rgb(231,225,37)" fg:x="141" fg:w="1"/><text x="14.5647%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.10%)</title><rect x="14.4162%" y="565" width="0.1015%" height="15" fill="rgb(252,55,35)" fg:x="142" fg:w="1"/><text x="14.6662%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.10%)</title><rect x="14.4162%" y="549" width="0.1015%" height="15" fill="rgb(239,43,18)" fg:x="142" fg:w="1"/><text x="14.6662%" y="559.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.10%)</title><rect x="14.4162%" y="533" width="0.1015%" height="15" fill="rgb(251,125,49)" fg:x="142" fg:w="1"/><text x="14.6662%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="14.4162%" y="517" width="0.1015%" height="15" fill="rgb(212,83,54)" fg:x="142" fg:w="1"/><text x="14.6662%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="14.4162%" y="501" width="0.1015%" height="15" fill="rgb(250,75,6)" fg:x="142" fg:w="1"/><text x="14.6662%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="14.4162%" y="485" width="0.1015%" height="15" fill="rgb(252,36,40)" fg:x="142" fg:w="1"/><text x="14.6662%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="14.4162%" y="469" width="0.1015%" height="15" fill="rgb(230,91,51)" fg:x="142" fg:w="1"/><text x="14.6662%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.10%)</title><rect x="14.5178%" y="549" width="0.1015%" height="15" fill="rgb(212,92,28)" fg:x="143" fg:w="1"/><text x="14.7678%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.10%)</title><rect x="14.5178%" y="533" width="0.1015%" height="15" fill="rgb(227,13,22)" fg:x="143" fg:w="1"/><text x="14.7678%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.10%)</title><rect x="14.5178%" y="517" width="0.1015%" height="15" fill="rgb(239,204,32)" fg:x="143" fg:w="1"/><text x="14.7678%" y="527.50"></text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.10%)</title><rect x="14.5178%" y="501" width="0.1015%" height="15" fill="rgb(228,49,41)" fg:x="143" fg:w="1"/><text x="14.7678%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="14.5178%" y="485" width="0.1015%" height="15" fill="rgb(206,95,6)" fg:x="143" fg:w="1"/><text x="14.7678%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="14.5178%" y="469" width="0.1015%" height="15" fill="rgb(251,20,14)" fg:x="143" fg:w="1"/><text x="14.7678%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.10%)</title><rect x="14.6193%" y="533" width="0.1015%" height="15" fill="rgb(214,99,28)" fg:x="144" fg:w="1"/><text x="14.8693%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="14.6193%" y="517" width="0.1015%" height="15" fill="rgb(239,122,54)" fg:x="144" fg:w="1"/><text x="14.8693%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="14.6193%" y="501" width="0.1015%" height="15" fill="rgb(218,217,46)" fg:x="144" fg:w="1"/><text x="14.8693%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="14.6193%" y="485" width="0.1015%" height="15" fill="rgb(249,106,28)" fg:x="144" fg:w="1"/><text x="14.8693%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="14.7208%" y="485" width="0.1015%" height="15" fill="rgb(250,158,18)" fg:x="145" fg:w="1"/><text x="14.9708%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="14.7208%" y="469" width="0.1015%" height="15" fill="rgb(226,137,29)" fg:x="145" fg:w="1"/><text x="14.9708%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.10%)</title><rect x="14.7208%" y="453" width="0.1015%" height="15" fill="rgb(210,188,1)" fg:x="145" fg:w="1"/><text x="14.9708%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="14.7208%" y="437" width="0.1015%" height="15" fill="rgb(227,84,42)" fg:x="145" fg:w="1"/><text x="14.9708%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="14.7208%" y="421" width="0.1015%" height="15" fill="rgb(222,147,48)" fg:x="145" fg:w="1"/><text x="14.9708%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="14.8223%" y="453" width="0.1015%" height="15" fill="rgb(241,150,43)" fg:x="146" fg:w="1"/><text x="15.0723%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="14.8223%" y="437" width="0.1015%" height="15" fill="rgb(206,139,52)" fg:x="146" fg:w="1"/><text x="15.0723%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="14.8223%" y="421" width="0.1015%" height="15" fill="rgb(230,63,14)" fg:x="146" fg:w="1"/><text x="15.0723%" y="431.50"></text></g><g><title>plugins_core::build::Build::occupying (5 samples, 0.51%)</title><rect x="14.5178%" y="565" width="0.5076%" height="15" fill="rgb(247,8,20)" fg:x="143" fg:w="5"/><text x="14.7678%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.41%)</title><rect x="14.6193%" y="549" width="0.4061%" height="15" fill="rgb(213,115,4)" fg:x="144" fg:w="4"/><text x="14.8693%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.30%)</title><rect x="14.7208%" y="533" width="0.3046%" height="15" fill="rgb(241,79,49)" fg:x="145" fg:w="3"/><text x="14.9708%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.30%)</title><rect x="14.7208%" y="517" width="0.3046%" height="15" fill="rgb(222,42,35)" fg:x="145" fg:w="3"/><text x="14.9708%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.30%)</title><rect x="14.7208%" y="501" width="0.3046%" height="15" fill="rgb(247,59,23)" fg:x="145" fg:w="3"/><text x="14.9708%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.20%)</title><rect x="14.8223%" y="485" width="0.2030%" height="15" fill="rgb(247,93,18)" fg:x="146" fg:w="2"/><text x="15.0723%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="14.8223%" y="469" width="0.2030%" height="15" fill="rgb(249,107,47)" fg:x="146" fg:w="2"/><text x="15.0723%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="14.9239%" y="453" width="0.1015%" height="15" fill="rgb(219,27,1)" fg:x="147" fg:w="1"/><text x="15.1739%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.10%)</title><rect x="15.0254%" y="533" width="0.1015%" height="15" fill="rgb(217,82,32)" fg:x="148" fg:w="1"/><text x="15.2754%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="15.0254%" y="517" width="0.1015%" height="15" fill="rgb(250,129,47)" fg:x="148" fg:w="1"/><text x="15.2754%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (76 samples, 7.72%)</title><rect x="7.5127%" y="581" width="7.7157%" height="15" fill="rgb(253,88,35)" fg:x="74" fg:w="76"/><text x="7.7627%" y="591.50">plugins_cor..</text></g><g><title>plugins_core::build::Build::with_username (2 samples, 0.20%)</title><rect x="15.0254%" y="565" width="0.2030%" height="15" fill="rgb(245,221,14)" fg:x="148" fg:w="2"/><text x="15.2754%" y="575.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.20%)</title><rect x="15.0254%" y="549" width="0.2030%" height="15" fill="rgb(217,119,54)" fg:x="148" fg:w="2"/><text x="15.2754%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.10%)</title><rect x="15.1269%" y="533" width="0.1015%" height="15" fill="rgb(247,128,31)" fg:x="149" fg:w="1"/><text x="15.3769%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.10%)</title><rect x="15.1269%" y="517" width="0.1015%" height="15" fill="rgb(211,99,22)" fg:x="149" fg:w="1"/><text x="15.3769%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="15.1269%" y="501" width="0.1015%" height="15" fill="rgb(212,20,17)" fg:x="149" fg:w="1"/><text x="15.3769%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="15.1269%" y="485" width="0.1015%" height="15" fill="rgb(209,159,29)" fg:x="149" fg:w="1"/><text x="15.3769%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="15.1269%" y="469" width="0.1015%" height="15" fill="rgb(222,177,53)" fg:x="149" fg:w="1"/><text x="15.3769%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.10%)</title><rect x="15.2284%" y="581" width="0.1015%" height="15" fill="rgb(234,46,43)" fg:x="150" fg:w="1"/><text x="15.4784%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.10%)</title><rect x="15.2284%" y="565" width="0.1015%" height="15" fill="rgb(208,108,14)" fg:x="150" fg:w="1"/><text x="15.4784%" y="575.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.10%)</title><rect x="15.2284%" y="549" width="0.1015%" height="15" fill="rgb(226,78,53)" fg:x="150" fg:w="1"/><text x="15.4784%" y="559.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.10%)</title><rect x="15.2284%" y="533" width="0.1015%" height="15" fill="rgb(230,20,41)" fg:x="150" fg:w="1"/><text x="15.4784%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.10%)</title><rect x="15.3299%" y="581" width="0.1015%" height="15" fill="rgb(213,195,35)" fg:x="151" fg:w="1"/><text x="15.5799%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="15.3299%" y="565" width="0.1015%" height="15" fill="rgb(242,62,36)" fg:x="151" fg:w="1"/><text x="15.5799%" y="575.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (131 samples, 13.30%)</title><rect x="2.3350%" y="597" width="13.2995%" height="15" fill="rgb(222,210,37)" fg:x="23" fg:w="131"/><text x="2.5850%" y="607.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.20%)</title><rect x="15.4315%" y="581" width="0.2030%" height="15" fill="rgb(232,107,19)" fg:x="152" fg:w="2"/><text x="15.6815%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.20%)</title><rect x="15.4315%" y="565" width="0.2030%" height="15" fill="rgb(235,85,17)" fg:x="152" fg:w="2"/><text x="15.6815%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.10%)</title><rect x="15.5330%" y="549" width="0.1015%" height="15" fill="rgb(219,195,31)" fg:x="153" fg:w="1"/><text x="15.7830%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.10%)</title><rect x="15.5330%" y="533" width="0.1015%" height="15" fill="rgb(231,183,30)" fg:x="153" fg:w="1"/><text x="15.7830%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="15.5330%" y="517" width="0.1015%" height="15" fill="rgb(212,0,11)" fg:x="153" fg:w="1"/><text x="15.7830%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="15.5330%" y="501" width="0.1015%" height="15" fill="rgb(249,53,54)" fg:x="153" fg:w="1"/><text x="15.7830%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="15.5330%" y="485" width="0.1015%" height="15" fill="rgb(211,118,13)" fg:x="153" fg:w="1"/><text x="15.7830%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="15.5330%" y="469" width="0.1015%" height="15" fill="rgb(237,42,9)" fg:x="153" fg:w="1"/><text x="15.7830%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="15.5330%" y="453" width="0.1015%" height="15" fill="rgb(227,68,32)" fg:x="153" fg:w="1"/><text x="15.7830%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="15.5330%" y="437" width="0.1015%" height="15" fill="rgb(238,10,7)" fg:x="153" fg:w="1"/><text x="15.7830%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="15.5330%" y="421" width="0.1015%" height="15" fill="rgb(224,42,12)" fg:x="153" fg:w="1"/><text x="15.7830%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="15.5330%" y="405" width="0.1015%" height="15" fill="rgb(252,190,5)" fg:x="153" fg:w="1"/><text x="15.7830%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="15.5330%" y="389" width="0.1015%" height="15" fill="rgb(220,214,39)" fg:x="153" fg:w="1"/><text x="15.7830%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="15.5330%" y="373" width="0.1015%" height="15" fill="rgb(247,98,4)" fg:x="153" fg:w="1"/><text x="15.7830%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="15.5330%" y="357" width="0.1015%" height="15" fill="rgb(211,60,12)" fg:x="153" fg:w="1"/><text x="15.7830%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="15.5330%" y="341" width="0.1015%" height="15" fill="rgb(224,42,10)" fg:x="153" fg:w="1"/><text x="15.7830%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.10%)</title><rect x="15.6345%" y="597" width="0.1015%" height="15" fill="rgb(217,167,4)" fg:x="154" fg:w="1"/><text x="15.8845%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.10%)</title><rect x="15.6345%" y="581" width="0.1015%" height="15" fill="rgb(253,18,17)" fg:x="154" fg:w="1"/><text x="15.8845%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.10%)</title><rect x="15.6345%" y="565" width="0.1015%" height="15" fill="rgb(249,186,44)" fg:x="154" fg:w="1"/><text x="15.8845%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="15.6345%" y="549" width="0.1015%" height="15" fill="rgb(254,124,54)" fg:x="154" fg:w="1"/><text x="15.8845%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="15.6345%" y="533" width="0.1015%" height="15" fill="rgb(220,124,39)" fg:x="154" fg:w="1"/><text x="15.8845%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.10%)</title><rect x="15.8376%" y="549" width="0.1015%" height="15" fill="rgb(225,96,46)" fg:x="156" fg:w="1"/><text x="16.0876%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="15.8376%" y="533" width="0.1015%" height="15" fill="rgb(221,106,12)" fg:x="156" fg:w="1"/><text x="16.0876%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="15.8376%" y="517" width="0.1015%" height="15" fill="rgb(227,133,23)" fg:x="156" fg:w="1"/><text x="16.0876%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="15.8376%" y="501" width="0.1015%" height="15" fill="rgb(216,44,52)" fg:x="156" fg:w="1"/><text x="16.0876%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="15.8376%" y="485" width="0.1015%" height="15" fill="rgb(239,149,7)" fg:x="156" fg:w="1"/><text x="16.0876%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="15.8376%" y="469" width="0.1015%" height="15" fill="rgb(211,157,31)" fg:x="156" fg:w="1"/><text x="16.0876%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="15.8376%" y="453" width="0.1015%" height="15" fill="rgb(206,215,22)" fg:x="156" fg:w="1"/><text x="16.0876%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="15.8376%" y="437" width="0.1015%" height="15" fill="rgb(208,113,15)" fg:x="156" fg:w="1"/><text x="16.0876%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.20%)</title><rect x="15.8376%" y="565" width="0.2030%" height="15" fill="rgb(207,189,15)" fg:x="156" fg:w="2"/><text x="16.0876%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="15.9391%" y="549" width="0.1015%" height="15" fill="rgb(231,115,4)" fg:x="157" fg:w="1"/><text x="16.1891%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="15.9391%" y="533" width="0.1015%" height="15" fill="rgb(253,117,2)" fg:x="157" fg:w="1"/><text x="16.1891%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="15.9391%" y="517" width="0.1015%" height="15" fill="rgb(248,48,24)" fg:x="157" fg:w="1"/><text x="16.1891%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="15.9391%" y="501" width="0.1015%" height="15" fill="rgb(241,28,46)" fg:x="157" fg:w="1"/><text x="16.1891%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="15.9391%" y="485" width="0.1015%" height="15" fill="rgb(216,165,52)" fg:x="157" fg:w="1"/><text x="16.1891%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="15.9391%" y="469" width="0.1015%" height="15" fill="rgb(220,222,34)" fg:x="157" fg:w="1"/><text x="16.1891%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="15.9391%" y="453" width="0.1015%" height="15" fill="rgb(247,222,49)" fg:x="157" fg:w="1"/><text x="16.1891%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="15.9391%" y="437" width="0.1015%" height="15" fill="rgb(240,10,31)" fg:x="157" fg:w="1"/><text x="16.1891%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="15.9391%" y="421" width="0.1015%" height="15" fill="rgb(221,199,35)" fg:x="157" fg:w="1"/><text x="16.1891%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="15.9391%" y="405" width="0.1015%" height="15" fill="rgb(230,223,11)" fg:x="157" fg:w="1"/><text x="16.1891%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="15.9391%" y="389" width="0.1015%" height="15" fill="rgb(218,82,45)" fg:x="157" fg:w="1"/><text x="16.1891%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="15.9391%" y="373" width="0.1015%" height="15" fill="rgb(233,213,33)" fg:x="157" fg:w="1"/><text x="16.1891%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="15.9391%" y="357" width="0.1015%" height="15" fill="rgb(210,143,52)" fg:x="157" fg:w="1"/><text x="16.1891%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.10%)</title><rect x="15.9391%" y="341" width="0.1015%" height="15" fill="rgb(206,95,4)" fg:x="157" fg:w="1"/><text x="16.1891%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="15.9391%" y="325" width="0.1015%" height="15" fill="rgb(246,164,46)" fg:x="157" fg:w="1"/><text x="16.1891%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="15.9391%" y="309" width="0.1015%" height="15" fill="rgb(213,210,47)" fg:x="157" fg:w="1"/><text x="16.1891%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="15.9391%" y="293" width="0.1015%" height="15" fill="rgb(210,12,38)" fg:x="157" fg:w="1"/><text x="16.1891%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="15.9391%" y="277" width="0.1015%" height="15" fill="rgb(252,192,54)" fg:x="157" fg:w="1"/><text x="16.1891%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="15.9391%" y="261" width="0.1015%" height="15" fill="rgb(242,92,6)" fg:x="157" fg:w="1"/><text x="16.1891%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="15.9391%" y="245" width="0.1015%" height="15" fill="rgb(253,154,15)" fg:x="157" fg:w="1"/><text x="16.1891%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="15.9391%" y="229" width="0.1015%" height="15" fill="rgb(209,20,43)" fg:x="157" fg:w="1"/><text x="16.1891%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="15.9391%" y="213" width="0.1015%" height="15" fill="rgb(232,28,49)" fg:x="157" fg:w="1"/><text x="16.1891%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="15.9391%" y="197" width="0.1015%" height="15" fill="rgb(248,131,53)" fg:x="157" fg:w="1"/><text x="16.1891%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="15.9391%" y="181" width="0.1015%" height="15" fill="rgb(214,16,30)" fg:x="157" fg:w="1"/><text x="16.1891%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="15.9391%" y="165" width="0.1015%" height="15" fill="rgb(245,16,0)" fg:x="157" fg:w="1"/><text x="16.1891%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="15.9391%" y="149" width="0.1015%" height="15" fill="rgb(245,17,35)" fg:x="157" fg:w="1"/><text x="16.1891%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="15.9391%" y="133" width="0.1015%" height="15" fill="rgb(249,27,53)" fg:x="157" fg:w="1"/><text x="16.1891%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="15.9391%" y="117" width="0.1015%" height="15" fill="rgb(214,73,24)" fg:x="157" fg:w="1"/><text x="16.1891%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="15.9391%" y="101" width="0.1015%" height="15" fill="rgb(223,84,37)" fg:x="157" fg:w="1"/><text x="16.1891%" y="111.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="15.9391%" y="85" width="0.1015%" height="15" fill="rgb(210,109,28)" fg:x="157" fg:w="1"/><text x="16.1891%" y="95.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.10%)</title><rect x="16.3452%" y="485" width="0.1015%" height="15" fill="rgb(208,186,6)" fg:x="161" fg:w="1"/><text x="16.5952%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.10%)</title><rect x="16.3452%" y="469" width="0.1015%" height="15" fill="rgb(235,201,30)" fg:x="161" fg:w="1"/><text x="16.5952%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.10%)</title><rect x="16.3452%" y="453" width="0.1015%" height="15" fill="rgb(216,198,48)" fg:x="161" fg:w="1"/><text x="16.5952%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="16.3452%" y="437" width="0.1015%" height="15" fill="rgb(254,186,25)" fg:x="161" fg:w="1"/><text x="16.5952%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="16.3452%" y="421" width="0.1015%" height="15" fill="rgb(227,87,5)" fg:x="161" fg:w="1"/><text x="16.5952%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.30%)</title><rect x="16.2437%" y="533" width="0.3046%" height="15" fill="rgb(236,205,25)" fg:x="160" fg:w="3"/><text x="16.4937%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.30%)</title><rect x="16.2437%" y="517" width="0.3046%" height="15" fill="rgb(229,99,32)" fg:x="160" fg:w="3"/><text x="16.4937%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.30%)</title><rect x="16.2437%" y="501" width="0.3046%" height="15" fill="rgb(231,177,31)" fg:x="160" fg:w="3"/><text x="16.4937%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="16.4467%" y="485" width="0.1015%" height="15" fill="rgb(246,15,2)" fg:x="162" fg:w="1"/><text x="16.6967%" y="495.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (8 samples, 0.81%)</title><rect x="15.8376%" y="581" width="0.8122%" height="15" fill="rgb(207,39,15)" fg:x="156" fg:w="8"/><text x="16.0876%" y="591.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.61%)</title><rect x="16.0406%" y="565" width="0.6091%" height="15" fill="rgb(207,44,9)" fg:x="158" fg:w="6"/><text x="16.2906%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.51%)</title><rect x="16.1421%" y="549" width="0.5076%" height="15" fill="rgb(225,224,33)" fg:x="159" fg:w="5"/><text x="16.3921%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.10%)</title><rect x="16.5482%" y="533" width="0.1015%" height="15" fill="rgb(252,151,3)" fg:x="163" fg:w="1"/><text x="16.7982%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::RaisedEvent&gt; (1 samples, 0.10%)</title><rect x="16.6497%" y="581" width="0.1015%" height="15" fill="rgb(211,140,13)" fg:x="164" fg:w="1"/><text x="16.8997%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (1 samples, 0.10%)</title><rect x="16.6497%" y="565" width="0.1015%" height="15" fill="rgb(239,225,17)" fg:x="164" fg:w="1"/><text x="16.8997%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="16.6497%" y="549" width="0.1015%" height="15" fill="rgb(223,170,52)" fg:x="164" fg:w="1"/><text x="16.8997%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="16.7513%" y="565" width="0.1015%" height="15" fill="rgb(212,64,21)" fg:x="165" fg:w="1"/><text x="17.0013%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="16.7513%" y="549" width="0.1015%" height="15" fill="rgb(236,126,48)" fg:x="165" fg:w="1"/><text x="17.0013%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="16.7513%" y="533" width="0.1015%" height="15" fill="rgb(209,135,11)" fg:x="165" fg:w="1"/><text x="17.0013%" y="543.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="16.7513%" y="517" width="0.1015%" height="15" fill="rgb(228,126,40)" fg:x="165" fg:w="1"/><text x="17.0013%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.20%)</title><rect x="16.8528%" y="533" width="0.2030%" height="15" fill="rgb(205,196,36)" fg:x="166" fg:w="2"/><text x="17.1028%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="16.9543%" y="517" width="0.1015%" height="15" fill="rgb(243,160,33)" fg:x="167" fg:w="1"/><text x="17.2043%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="16.9543%" y="501" width="0.1015%" height="15" fill="rgb(210,84,20)" fg:x="167" fg:w="1"/><text x="17.2043%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="16.9543%" y="485" width="0.1015%" height="15" fill="rgb(228,213,30)" fg:x="167" fg:w="1"/><text x="17.2043%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="16.9543%" y="469" width="0.1015%" height="15" fill="rgb(252,33,45)" fg:x="167" fg:w="1"/><text x="17.2043%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="16.9543%" y="453" width="0.1015%" height="15" fill="rgb(254,227,20)" fg:x="167" fg:w="1"/><text x="17.2043%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="16.9543%" y="437" width="0.1015%" height="15" fill="rgb(228,192,2)" fg:x="167" fg:w="1"/><text x="17.2043%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="16.9543%" y="421" width="0.1015%" height="15" fill="rgb(233,32,8)" fg:x="167" fg:w="1"/><text x="17.2043%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="16.8528%" y="565" width="0.3046%" height="15" fill="rgb(220,146,47)" fg:x="166" fg:w="3"/><text x="17.1028%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.30%)</title><rect x="16.8528%" y="549" width="0.3046%" height="15" fill="rgb(246,194,1)" fg:x="166" fg:w="3"/><text x="17.1028%" y="559.50"></text></g><g><title>engine::session::Session::save_entity (1 samples, 0.10%)</title><rect x="17.0558%" y="533" width="0.1015%" height="15" fill="rgb(218,203,9)" fg:x="168" fg:w="1"/><text x="17.3058%" y="543.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.10%)</title><rect x="17.0558%" y="517" width="0.1015%" height="15" fill="rgb(237,97,14)" fg:x="168" fg:w="1"/><text x="17.3058%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="17.0558%" y="501" width="0.1015%" height="15" fill="rgb(239,76,15)" fg:x="168" fg:w="1"/><text x="17.3058%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="17.2589%" y="485" width="0.1015%" height="15" fill="rgb(222,53,45)" fg:x="170" fg:w="1"/><text x="17.5089%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="17.2589%" y="469" width="0.1015%" height="15" fill="rgb(237,88,5)" fg:x="170" fg:w="1"/><text x="17.5089%" y="479.50"></text></g><g><title>engine::identifiers::model::get_gid (4 samples, 0.41%)</title><rect x="17.1574%" y="565" width="0.4061%" height="15" fill="rgb(218,223,35)" fg:x="169" fg:w="4"/><text x="17.4074%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.41%)</title><rect x="17.1574%" y="549" width="0.4061%" height="15" fill="rgb(243,229,38)" fg:x="169" fg:w="4"/><text x="17.4074%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.41%)</title><rect x="17.1574%" y="533" width="0.4061%" height="15" fill="rgb(240,75,41)" fg:x="169" fg:w="4"/><text x="17.4074%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.41%)</title><rect x="17.1574%" y="517" width="0.4061%" height="15" fill="rgb(209,110,37)" fg:x="169" fg:w="4"/><text x="17.4074%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.30%)</title><rect x="17.2589%" y="501" width="0.3046%" height="15" fill="rgb(221,130,46)" fg:x="170" fg:w="3"/><text x="17.5089%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="17.3604%" y="485" width="0.2030%" height="15" fill="rgb(237,160,20)" fg:x="171" fg:w="2"/><text x="17.6104%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="17.3604%" y="469" width="0.2030%" height="15" fill="rgb(234,126,24)" fg:x="171" fg:w="2"/><text x="17.6104%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="17.4619%" y="453" width="0.1015%" height="15" fill="rgb(207,177,9)" fg:x="172" fg:w="1"/><text x="17.7119%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.30%)</title><rect x="17.6650%" y="501" width="0.3046%" height="15" fill="rgb(231,191,33)" fg:x="174" fg:w="3"/><text x="17.9150%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.30%)</title><rect x="17.6650%" y="485" width="0.3046%" height="15" fill="rgb(207,42,1)" fg:x="174" fg:w="3"/><text x="17.9150%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.20%)</title><rect x="17.7665%" y="469" width="0.2030%" height="15" fill="rgb(218,34,50)" fg:x="175" fg:w="2"/><text x="18.0165%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="17.7665%" y="453" width="0.2030%" height="15" fill="rgb(254,126,39)" fg:x="175" fg:w="2"/><text x="18.0165%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.41%)</title><rect x="17.6650%" y="517" width="0.4061%" height="15" fill="rgb(251,17,26)" fg:x="174" fg:w="4"/><text x="17.9150%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="17.9695%" y="501" width="0.1015%" height="15" fill="rgb(252,215,34)" fg:x="177" fg:w="1"/><text x="18.2195%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="17.9695%" y="485" width="0.1015%" height="15" fill="rgb(217,120,44)" fg:x="177" fg:w="1"/><text x="18.2195%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="18.1726%" y="501" width="0.1015%" height="15" fill="rgb(211,31,11)" fg:x="179" fg:w="1"/><text x="18.4226%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="18.2741%" y="485" width="0.1015%" height="15" fill="rgb(222,69,51)" fg:x="180" fg:w="1"/><text x="18.5241%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="18.3756%" y="469" width="0.1015%" height="15" fill="rgb(215,229,42)" fg:x="181" fg:w="1"/><text x="18.6256%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="18.3756%" y="453" width="0.1015%" height="15" fill="rgb(212,102,15)" fg:x="181" fg:w="1"/><text x="18.6256%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="18.3756%" y="437" width="0.1015%" height="15" fill="rgb(205,179,41)" fg:x="181" fg:w="1"/><text x="18.6256%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="18.4772%" y="453" width="0.1015%" height="15" fill="rgb(219,148,46)" fg:x="182" fg:w="1"/><text x="18.7272%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="18.4772%" y="437" width="0.1015%" height="15" fill="rgb(243,40,19)" fg:x="182" fg:w="1"/><text x="18.7272%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="18.4772%" y="421" width="0.1015%" height="15" fill="rgb(208,206,34)" fg:x="182" fg:w="1"/><text x="18.7272%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.20%)</title><rect x="18.4772%" y="469" width="0.2030%" height="15" fill="rgb(244,184,38)" fg:x="182" fg:w="2"/><text x="18.7272%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="18.5787%" y="453" width="0.1015%" height="15" fill="rgb(244,151,47)" fg:x="183" fg:w="1"/><text x="18.8287%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.51%)</title><rect x="18.2741%" y="501" width="0.5076%" height="15" fill="rgb(236,134,42)" fg:x="180" fg:w="5"/><text x="18.5241%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.41%)</title><rect x="18.3756%" y="485" width="0.4061%" height="15" fill="rgb(233,93,22)" fg:x="181" fg:w="4"/><text x="18.6256%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="18.6802%" y="469" width="0.1015%" height="15" fill="rgb(211,202,10)" fg:x="184" fg:w="1"/><text x="18.9302%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.83%)</title><rect x="17.5635%" y="533" width="1.8274%" height="15" fill="rgb(240,63,8)" fg:x="173" fg:w="18"/><text x="17.8135%" y="543.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.32%)</title><rect x="18.0711%" y="517" width="1.3198%" height="15" fill="rgb(214,9,4)" fg:x="178" fg:w="13"/><text x="18.3211%" y="527.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.61%)</title><rect x="18.7817%" y="501" width="0.6091%" height="15" fill="rgb(243,66,45)" fg:x="185" fg:w="6"/><text x="19.0317%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.41%)</title><rect x="18.9848%" y="485" width="0.4061%" height="15" fill="rgb(220,50,42)" fg:x="187" fg:w="4"/><text x="19.2348%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.30%)</title><rect x="19.0863%" y="469" width="0.3046%" height="15" fill="rgb(220,134,27)" fg:x="188" fg:w="3"/><text x="19.3363%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="19.2893%" y="453" width="0.1015%" height="15" fill="rgb(246,151,50)" fg:x="190" fg:w="1"/><text x="19.5393%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="19.2893%" y="437" width="0.1015%" height="15" fill="rgb(238,216,27)" fg:x="190" fg:w="1"/><text x="19.5393%" y="447.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="19.2893%" y="421" width="0.1015%" height="15" fill="rgb(250,92,11)" fg:x="190" fg:w="1"/><text x="19.5393%" y="431.50"></text></g><g><title>__libc_free (4 samples, 0.41%)</title><rect x="19.3909%" y="501" width="0.4061%" height="15" fill="rgb(248,183,6)" fg:x="191" fg:w="4"/><text x="19.6409%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="19.7970%" y="501" width="0.1015%" height="15" fill="rgb(211,204,50)" fg:x="195" fg:w="1"/><text x="20.0470%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="20.1015%" y="485" width="0.1015%" height="15" fill="rgb(252,55,47)" fg:x="198" fg:w="1"/><text x="20.3515%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="20.2030%" y="485" width="0.1015%" height="15" fill="rgb(240,198,32)" fg:x="199" fg:w="1"/><text x="20.4530%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="20.2030%" y="469" width="0.1015%" height="15" fill="rgb(224,203,19)" fg:x="199" fg:w="1"/><text x="20.4530%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="20.3046%" y="469" width="0.2030%" height="15" fill="rgb(205,27,16)" fg:x="200" fg:w="2"/><text x="20.5546%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="20.5076%" y="469" width="0.1015%" height="15" fill="rgb(224,226,17)" fg:x="202" fg:w="1"/><text x="20.7576%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.52%)</title><rect x="19.3909%" y="533" width="1.5228%" height="15" fill="rgb(205,216,54)" fg:x="191" fg:w="15"/><text x="19.6409%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.52%)</title><rect x="19.3909%" y="517" width="1.5228%" height="15" fill="rgb(248,168,46)" fg:x="191" fg:w="15"/><text x="19.6409%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 1.02%)</title><rect x="19.8985%" y="501" width="1.0152%" height="15" fill="rgb(226,111,45)" fg:x="196" fg:w="10"/><text x="20.1485%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.61%)</title><rect x="20.3046%" y="485" width="0.6091%" height="15" fill="rgb(231,15,9)" fg:x="200" fg:w="6"/><text x="20.5546%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="20.6091%" y="469" width="0.3046%" height="15" fill="rgb(243,168,3)" fg:x="203" fg:w="3"/><text x="20.8591%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="20.6091%" y="453" width="0.3046%" height="15" fill="rgb(221,220,54)" fg:x="203" fg:w="3"/><text x="20.8591%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="20.7107%" y="437" width="0.2030%" height="15" fill="rgb(232,174,38)" fg:x="204" fg:w="2"/><text x="20.9607%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="21.0152%" y="485" width="0.2030%" height="15" fill="rgb(205,14,38)" fg:x="207" fg:w="2"/><text x="21.2652%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="21.3198%" y="469" width="0.1015%" height="15" fill="rgb(234,89,19)" fg:x="210" fg:w="1"/><text x="21.5698%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="21.4213%" y="469" width="0.1015%" height="15" fill="rgb(216,68,51)" fg:x="211" fg:w="1"/><text x="21.6713%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="21.5228%" y="453" width="0.1015%" height="15" fill="rgb(213,49,2)" fg:x="212" fg:w="1"/><text x="21.7728%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="21.6244%" y="437" width="0.1015%" height="15" fill="rgb(242,146,30)" fg:x="213" fg:w="1"/><text x="21.8744%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="21.7259%" y="437" width="0.1015%" height="15" fill="rgb(224,188,11)" fg:x="214" fg:w="1"/><text x="21.9759%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.91%)</title><rect x="21.0152%" y="517" width="0.9137%" height="15" fill="rgb(213,159,11)" fg:x="207" fg:w="9"/><text x="21.2652%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.91%)</title><rect x="21.0152%" y="501" width="0.9137%" height="15" fill="rgb(229,13,31)" fg:x="207" fg:w="9"/><text x="21.2652%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.71%)</title><rect x="21.2183%" y="485" width="0.7107%" height="15" fill="rgb(209,103,11)" fg:x="209" fg:w="7"/><text x="21.4683%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.41%)</title><rect x="21.5228%" y="469" width="0.4061%" height="15" fill="rgb(206,3,4)" fg:x="212" fg:w="4"/><text x="21.7728%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="21.6244%" y="453" width="0.3046%" height="15" fill="rgb(252,10,49)" fg:x="213" fg:w="3"/><text x="21.8744%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="21.8274%" y="437" width="0.1015%" height="15" fill="rgb(217,160,32)" fg:x="215" fg:w="1"/><text x="22.0774%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="21.8274%" y="421" width="0.1015%" height="15" fill="rgb(249,196,0)" fg:x="215" fg:w="1"/><text x="22.0774%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (2 samples, 0.20%)</title><rect x="21.9289%" y="517" width="0.2030%" height="15" fill="rgb(213,17,48)" fg:x="216" fg:w="2"/><text x="22.1789%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="21.9289%" y="501" width="0.2030%" height="15" fill="rgb(206,42,46)" fg:x="216" fg:w="2"/><text x="22.1789%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.10%)</title><rect x="22.1320%" y="501" width="0.1015%" height="15" fill="rgb(212,105,24)" fg:x="218" fg:w="1"/><text x="22.3820%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.51%)</title><rect x="22.4365%" y="485" width="0.5076%" height="15" fill="rgb(243,216,30)" fg:x="221" fg:w="5"/><text x="22.6865%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.30%)</title><rect x="22.6396%" y="469" width="0.3046%" height="15" fill="rgb(207,121,3)" fg:x="223" fg:w="3"/><text x="22.8896%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.20%)</title><rect x="22.7411%" y="453" width="0.2030%" height="15" fill="rgb(249,78,0)" fg:x="224" fg:w="2"/><text x="22.9911%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.20%)</title><rect x="22.9442%" y="485" width="0.2030%" height="15" fill="rgb(244,151,32)" fg:x="226" fg:w="2"/><text x="23.1942%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="23.0457%" y="469" width="0.1015%" height="15" fill="rgb(228,63,25)" fg:x="227" fg:w="1"/><text x="23.2957%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="23.0457%" y="453" width="0.1015%" height="15" fill="rgb(231,158,23)" fg:x="227" fg:w="1"/><text x="23.2957%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="23.1472%" y="453" width="0.1015%" height="15" fill="rgb(248,107,23)" fg:x="228" fg:w="1"/><text x="23.3972%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.41%)</title><rect x="23.4518%" y="437" width="0.4061%" height="15" fill="rgb(215,168,21)" fg:x="231" fg:w="4"/><text x="23.7018%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.41%)</title><rect x="23.4518%" y="421" width="0.4061%" height="15" fill="rgb(227,83,22)" fg:x="231" fg:w="4"/><text x="23.7018%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.41%)</title><rect x="23.4518%" y="405" width="0.4061%" height="15" fill="rgb(217,118,43)" fg:x="231" fg:w="4"/><text x="23.7018%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.20%)</title><rect x="24.0609%" y="421" width="0.2030%" height="15" fill="rgb(229,220,41)" fg:x="237" fg:w="2"/><text x="24.3109%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="24.1624%" y="405" width="0.1015%" height="15" fill="rgb(254,146,46)" fg:x="238" fg:w="1"/><text x="24.4124%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="24.1624%" y="389" width="0.1015%" height="15" fill="rgb(233,208,31)" fg:x="238" fg:w="1"/><text x="24.4124%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="24.2640%" y="421" width="0.1015%" height="15" fill="rgb(222,162,7)" fg:x="239" fg:w="1"/><text x="24.5140%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.10%)</title><rect x="24.2640%" y="405" width="0.1015%" height="15" fill="rgb(230,117,45)" fg:x="239" fg:w="1"/><text x="24.5140%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="24.2640%" y="389" width="0.1015%" height="15" fill="rgb(239,163,6)" fg:x="239" fg:w="1"/><text x="24.5140%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="24.2640%" y="373" width="0.1015%" height="15" fill="rgb(246,130,17)" fg:x="239" fg:w="1"/><text x="24.5140%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (13 samples, 1.32%)</title><rect x="23.1472%" y="485" width="1.3198%" height="15" fill="rgb(216,84,5)" fg:x="228" fg:w="13"/><text x="23.3972%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.32%)</title><rect x="23.1472%" y="469" width="1.3198%" height="15" fill="rgb(230,200,21)" fg:x="228" fg:w="13"/><text x="23.3972%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 1.22%)</title><rect x="23.2487%" y="453" width="1.2183%" height="15" fill="rgb(224,2,8)" fg:x="229" fg:w="12"/><text x="23.4987%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.61%)</title><rect x="23.8579%" y="437" width="0.6091%" height="15" fill="rgb(238,178,10)" fg:x="235" fg:w="6"/><text x="24.1079%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="24.3655%" y="421" width="0.1015%" height="15" fill="rgb(242,153,24)" fg:x="240" fg:w="1"/><text x="24.6155%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.10%)</title><rect x="24.4670%" y="485" width="0.1015%" height="15" fill="rgb(242,32,48)" fg:x="241" fg:w="1"/><text x="24.7170%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="24.4670%" y="469" width="0.1015%" height="15" fill="rgb(227,36,0)" fg:x="241" fg:w="1"/><text x="24.7170%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="24.4670%" y="453" width="0.1015%" height="15" fill="rgb(251,33,35)" fg:x="241" fg:w="1"/><text x="24.7170%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.30%)</title><rect x="24.7716%" y="437" width="0.3046%" height="15" fill="rgb(232,168,51)" fg:x="244" fg:w="3"/><text x="25.0216%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="24.8731%" y="421" width="0.2030%" height="15" fill="rgb(228,56,10)" fg:x="245" fg:w="2"/><text x="25.1231%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="24.8731%" y="405" width="0.2030%" height="15" fill="rgb(231,10,26)" fg:x="245" fg:w="2"/><text x="25.1231%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="25.0761%" y="405" width="0.1015%" height="15" fill="rgb(226,202,12)" fg:x="247" fg:w="1"/><text x="25.3261%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.20%)</title><rect x="25.0761%" y="437" width="0.2030%" height="15" fill="rgb(251,49,21)" fg:x="247" fg:w="2"/><text x="25.3261%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.20%)</title><rect x="25.0761%" y="421" width="0.2030%" height="15" fill="rgb(206,228,28)" fg:x="247" fg:w="2"/><text x="25.3261%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="25.1777%" y="405" width="0.1015%" height="15" fill="rgb(205,198,31)" fg:x="248" fg:w="1"/><text x="25.4277%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="25.3807%" y="405" width="0.1015%" height="15" fill="rgb(213,69,1)" fg:x="250" fg:w="1"/><text x="25.6307%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.91%)</title><rect x="24.6701%" y="453" width="0.9137%" height="15" fill="rgb(209,177,9)" fg:x="243" fg:w="9"/><text x="24.9201%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.30%)</title><rect x="25.2792%" y="437" width="0.3046%" height="15" fill="rgb(227,119,30)" fg:x="249" fg:w="3"/><text x="25.5292%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.20%)</title><rect x="25.3807%" y="421" width="0.2030%" height="15" fill="rgb(234,106,41)" fg:x="250" fg:w="2"/><text x="25.6307%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="25.4822%" y="405" width="0.1015%" height="15" fill="rgb(244,103,47)" fg:x="251" fg:w="1"/><text x="25.7322%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="25.4822%" y="389" width="0.1015%" height="15" fill="rgb(212,211,25)" fg:x="251" fg:w="1"/><text x="25.7322%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (35 samples, 3.55%)</title><rect x="22.1320%" y="517" width="3.5533%" height="15" fill="rgb(208,63,53)" fg:x="218" fg:w="35"/><text x="22.3820%" y="527.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (34 samples, 3.45%)</title><rect x="22.2335%" y="501" width="3.4518%" height="15" fill="rgb(213,176,21)" fg:x="219" fg:w="34"/><text x="22.4835%" y="511.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 1.12%)</title><rect x="24.5685%" y="485" width="1.1168%" height="15" fill="rgb(243,124,12)" fg:x="242" fg:w="11"/><text x="24.8185%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (10 samples, 1.02%)</title><rect x="24.6701%" y="469" width="1.0152%" height="15" fill="rgb(239,2,35)" fg:x="243" fg:w="10"/><text x="24.9201%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="25.5838%" y="453" width="0.1015%" height="15" fill="rgb(253,169,22)" fg:x="252" fg:w="1"/><text x="25.8338%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.20%)</title><rect x="25.9898%" y="373" width="0.2030%" height="15" fill="rgb(254,51,12)" fg:x="256" fg:w="2"/><text x="26.2398%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="26.0914%" y="357" width="0.1015%" height="15" fill="rgb(244,17,47)" fg:x="257" fg:w="1"/><text x="26.3414%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="26.0914%" y="341" width="0.1015%" height="15" fill="rgb(251,45,46)" fg:x="257" fg:w="1"/><text x="26.3414%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="26.0914%" y="325" width="0.1015%" height="15" fill="rgb(223,87,43)" fg:x="257" fg:w="1"/><text x="26.3414%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.20%)</title><rect x="26.2944%" y="357" width="0.2030%" height="15" fill="rgb(230,132,31)" fg:x="259" fg:w="2"/><text x="26.5444%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.10%)</title><rect x="26.3959%" y="341" width="0.1015%" height="15" fill="rgb(206,99,1)" fg:x="260" fg:w="1"/><text x="26.6459%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.71%)</title><rect x="25.8883%" y="389" width="0.7107%" height="15" fill="rgb(227,110,25)" fg:x="255" fg:w="7"/><text x="26.1383%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.41%)</title><rect x="26.1929%" y="373" width="0.4061%" height="15" fill="rgb(217,182,7)" fg:x="258" fg:w="4"/><text x="26.4429%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="26.4975%" y="357" width="0.1015%" height="15" fill="rgb(250,176,4)" fg:x="261" fg:w="1"/><text x="26.7475%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="26.4975%" y="341" width="0.1015%" height="15" fill="rgb(244,98,30)" fg:x="261" fg:w="1"/><text x="26.7475%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="26.4975%" y="325" width="0.1015%" height="15" fill="rgb(228,150,42)" fg:x="261" fg:w="1"/><text x="26.7475%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="26.5990%" y="389" width="0.1015%" height="15" fill="rgb(231,91,46)" fg:x="262" fg:w="1"/><text x="26.8490%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.91%)</title><rect x="25.8883%" y="421" width="0.9137%" height="15" fill="rgb(252,161,32)" fg:x="255" fg:w="9"/><text x="26.1383%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.91%)</title><rect x="25.8883%" y="405" width="0.9137%" height="15" fill="rgb(236,69,41)" fg:x="255" fg:w="9"/><text x="26.1383%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="26.7005%" y="389" width="0.1015%" height="15" fill="rgb(212,160,3)" fg:x="263" fg:w="1"/><text x="26.9505%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="26.7005%" y="373" width="0.1015%" height="15" fill="rgb(216,5,50)" fg:x="263" fg:w="1"/><text x="26.9505%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="26.7005%" y="357" width="0.1015%" height="15" fill="rgb(241,138,25)" fg:x="263" fg:w="1"/><text x="26.9505%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.20%)</title><rect x="26.8020%" y="421" width="0.2030%" height="15" fill="rgb(239,42,18)" fg:x="264" fg:w="2"/><text x="27.0520%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.20%)</title><rect x="26.8020%" y="405" width="0.2030%" height="15" fill="rgb(239,40,7)" fg:x="264" fg:w="2"/><text x="27.0520%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.62%)</title><rect x="25.7868%" y="453" width="1.6244%" height="15" fill="rgb(239,11,31)" fg:x="254" fg:w="16"/><text x="26.0368%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.62%)</title><rect x="25.7868%" y="437" width="1.6244%" height="15" fill="rgb(224,77,40)" fg:x="254" fg:w="16"/><text x="26.0368%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.41%)</title><rect x="27.0051%" y="421" width="0.4061%" height="15" fill="rgb(226,15,5)" fg:x="266" fg:w="4"/><text x="27.2551%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="27.2081%" y="405" width="0.2030%" height="15" fill="rgb(254,188,5)" fg:x="268" fg:w="2"/><text x="27.4581%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="27.2081%" y="389" width="0.2030%" height="15" fill="rgb(241,148,52)" fg:x="268" fg:w="2"/><text x="27.4581%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="27.5127%" y="421" width="0.1015%" height="15" fill="rgb(251,48,36)" fg:x="271" fg:w="1"/><text x="27.7627%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (20 samples, 2.03%)</title><rect x="25.6853%" y="517" width="2.0305%" height="15" fill="rgb(243,83,13)" fg:x="253" fg:w="20"/><text x="25.9353%" y="527.50">s..</text></g><g><title>serde_json::de::from_trait (20 samples, 2.03%)</title><rect x="25.6853%" y="501" width="2.0305%" height="15" fill="rgb(210,105,0)" fg:x="253" fg:w="20"/><text x="25.9353%" y="511.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 2.03%)</title><rect x="25.6853%" y="485" width="2.0305%" height="15" fill="rgb(239,60,36)" fg:x="253" fg:w="20"/><text x="25.9353%" y="495.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 2.03%)</title><rect x="25.6853%" y="469" width="2.0305%" height="15" fill="rgb(210,20,0)" fg:x="253" fg:w="20"/><text x="25.9353%" y="479.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.30%)</title><rect x="27.4112%" y="453" width="0.3046%" height="15" fill="rgb(244,26,53)" fg:x="270" fg:w="3"/><text x="27.6612%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.30%)</title><rect x="27.4112%" y="437" width="0.3046%" height="15" fill="rgb(240,100,49)" fg:x="270" fg:w="3"/><text x="27.6612%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.10%)</title><rect x="27.6142%" y="421" width="0.1015%" height="15" fill="rgb(250,46,45)" fg:x="272" fg:w="1"/><text x="27.8642%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.20%)</title><rect x="27.8173%" y="485" width="0.2030%" height="15" fill="rgb(220,181,29)" fg:x="274" fg:w="2"/><text x="28.0673%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.41%)</title><rect x="27.7157%" y="501" width="0.4061%" height="15" fill="rgb(213,137,33)" fg:x="273" fg:w="4"/><text x="27.9657%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="28.0203%" y="485" width="0.1015%" height="15" fill="rgb(213,27,48)" fg:x="276" fg:w="1"/><text x="28.2703%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="28.1218%" y="501" width="0.1015%" height="15" fill="rgb(245,180,39)" fg:x="277" fg:w="1"/><text x="28.3718%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="28.1218%" y="485" width="0.1015%" height="15" fill="rgb(212,158,42)" fg:x="277" fg:w="1"/><text x="28.3718%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="28.1218%" y="469" width="0.1015%" height="15" fill="rgb(228,193,18)" fg:x="277" fg:w="1"/><text x="28.3718%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="28.2234%" y="501" width="0.1015%" height="15" fill="rgb(245,172,29)" fg:x="278" fg:w="1"/><text x="28.4734%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="28.3249%" y="485" width="0.1015%" height="15" fill="rgb(207,98,24)" fg:x="279" fg:w="1"/><text x="28.5749%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.20%)</title><rect x="28.3249%" y="501" width="0.2030%" height="15" fill="rgb(249,92,26)" fg:x="279" fg:w="2"/><text x="28.5749%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="28.4264%" y="485" width="0.1015%" height="15" fill="rgb(217,176,26)" fg:x="280" fg:w="1"/><text x="28.6764%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="28.4264%" y="469" width="0.1015%" height="15" fill="rgb(221,8,39)" fg:x="280" fg:w="1"/><text x="28.6764%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="28.6294%" y="485" width="0.1015%" height="15" fill="rgb(208,90,18)" fg:x="282" fg:w="1"/><text x="28.8794%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="28.6294%" y="469" width="0.1015%" height="15" fill="rgb(207,202,30)" fg:x="282" fg:w="1"/><text x="28.8794%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="28.6294%" y="453" width="0.1015%" height="15" fill="rgb(231,124,22)" fg:x="282" fg:w="1"/><text x="28.8794%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="28.6294%" y="437" width="0.1015%" height="15" fill="rgb(206,15,5)" fg:x="282" fg:w="1"/><text x="28.8794%" y="447.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.20%)</title><rect x="28.7310%" y="485" width="0.2030%" height="15" fill="rgb(239,16,52)" fg:x="283" fg:w="2"/><text x="28.9810%" y="495.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.20%)</title><rect x="28.7310%" y="469" width="0.2030%" height="15" fill="rgb(245,213,29)" fg:x="283" fg:w="2"/><text x="28.9810%" y="479.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.20%)</title><rect x="28.7310%" y="453" width="0.2030%" height="15" fill="rgb(213,203,36)" fg:x="283" fg:w="2"/><text x="28.9810%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="28.8325%" y="437" width="0.1015%" height="15" fill="rgb(209,55,18)" fg:x="284" fg:w="1"/><text x="29.0825%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="28.8325%" y="421" width="0.1015%" height="15" fill="rgb(207,133,49)" fg:x="284" fg:w="1"/><text x="29.0825%" y="431.50"></text></g><g><title>kernel::compare::any_entity_changes (80 samples, 8.12%)</title><rect x="20.9137%" y="533" width="8.1218%" height="15" fill="rgb(240,33,46)" fg:x="206" fg:w="80"/><text x="21.1637%" y="543.50">kernel::com..</text></g><g><title>treediff::diff::diff (13 samples, 1.32%)</title><rect x="27.7157%" y="517" width="1.3198%" height="15" fill="rgb(212,35,2)" fg:x="273" fg:w="13"/><text x="27.9657%" y="527.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.51%)</title><rect x="28.5279%" y="501" width="0.5076%" height="15" fill="rgb(231,119,28)" fg:x="281" fg:w="5"/><text x="28.7779%" y="511.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.10%)</title><rect x="28.9340%" y="485" width="0.1015%" height="15" fill="rgb(252,178,7)" fg:x="285" fg:w="1"/><text x="29.1840%" y="495.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (114 samples, 11.57%)</title><rect x="17.5635%" y="565" width="11.5736%" height="15" fill="rgb(251,91,4)" fg:x="173" fg:w="114"/><text x="17.8135%" y="575.50">engine::internal:..</text></g><g><title>engine::session::Session::check_for_changes (114 samples, 11.57%)</title><rect x="17.5635%" y="549" width="11.5736%" height="15" fill="rgb(233,122,19)" fg:x="173" fg:w="114"/><text x="17.8135%" y="559.50">engine::session::..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.10%)</title><rect x="29.0355%" y="533" width="0.1015%" height="15" fill="rgb(231,208,46)" fg:x="286" fg:w="1"/><text x="29.2855%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="29.0355%" y="517" width="0.1015%" height="15" fill="rgb(243,15,41)" fg:x="286" fg:w="1"/><text x="29.2855%" y="527.50"></text></g><g><title>engine::session::Session::save_entity_changes (123 samples, 12.49%)</title><rect x="16.7513%" y="581" width="12.4873%" height="15" fill="rgb(210,32,43)" fg:x="165" fg:w="123"/><text x="17.0013%" y="591.50">engine::session::Se..</text></g><g><title>engine::session::Session::world (1 samples, 0.10%)</title><rect x="29.1371%" y="565" width="0.1015%" height="15" fill="rgb(222,177,15)" fg:x="287" fg:w="1"/><text x="29.3871%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="29.1371%" y="549" width="0.1015%" height="15" fill="rgb(244,121,34)" fg:x="287" fg:w="1"/><text x="29.3871%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="29.1371%" y="533" width="0.1015%" height="15" fill="rgb(234,138,4)" fg:x="287" fg:w="1"/><text x="29.3871%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="29.1371%" y="517" width="0.1015%" height="15" fill="rgb(240,97,48)" fg:x="287" fg:w="1"/><text x="29.3871%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="29.1371%" y="501" width="0.1015%" height="15" fill="rgb(237,65,54)" fg:x="287" fg:w="1"/><text x="29.3871%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="29.1371%" y="485" width="0.1015%" height="15" fill="rgb(214,25,24)" fg:x="287" fg:w="1"/><text x="29.3871%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="29.1371%" y="469" width="0.1015%" height="15" fill="rgb(213,5,3)" fg:x="287" fg:w="1"/><text x="29.3871%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="29.1371%" y="453" width="0.1015%" height="15" fill="rgb(219,81,29)" fg:x="287" fg:w="1"/><text x="29.3871%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="29.1371%" y="437" width="0.1015%" height="15" fill="rgb(220,43,48)" fg:x="287" fg:w="1"/><text x="29.3871%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="29.1371%" y="421" width="0.1015%" height="15" fill="rgb(239,157,2)" fg:x="287" fg:w="1"/><text x="29.3871%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="29.1371%" y="405" width="0.1015%" height="15" fill="rgb(213,104,43)" fg:x="287" fg:w="1"/><text x="29.3871%" y="415.50"></text></g><g><title>engine::session::Session::close (134 samples, 13.60%)</title><rect x="15.7360%" y="597" width="13.6041%" height="15" fill="rgb(237,84,9)" fg:x="155" fg:w="134"/><text x="15.9860%" y="607.50">engine::session::Sess..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.10%)</title><rect x="29.2386%" y="581" width="0.1015%" height="15" fill="rgb(252,6,33)" fg:x="288" fg:w="1"/><text x="29.4886%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 1.02%)</title><rect x="29.5431%" y="501" width="1.0152%" height="15" fill="rgb(251,172,22)" fg:x="291" fg:w="10"/><text x="29.7931%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 1.02%)</title><rect x="29.5431%" y="485" width="1.0152%" height="15" fill="rgb(244,91,53)" fg:x="291" fg:w="10"/><text x="29.7931%" y="495.50"></text></g><g><title>realloc (10 samples, 1.02%)</title><rect x="29.5431%" y="469" width="1.0152%" height="15" fill="rgb(219,29,30)" fg:x="291" fg:w="10"/><text x="29.7931%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.10%)</title><rect x="30.5584%" y="485" width="0.1015%" height="15" fill="rgb(213,3,15)" fg:x="301" fg:w="1"/><text x="30.8084%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.10%)</title><rect x="30.5584%" y="469" width="0.1015%" height="15" fill="rgb(208,25,28)" fg:x="301" fg:w="1"/><text x="30.8084%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="30.5584%" y="453" width="0.1015%" height="15" fill="rgb(252,144,25)" fg:x="301" fg:w="1"/><text x="30.8084%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="30.6599%" y="437" width="0.1015%" height="15" fill="rgb(226,220,25)" fg:x="302" fg:w="1"/><text x="30.9099%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="30.6599%" y="421" width="0.1015%" height="15" fill="rgb(212,131,28)" fg:x="302" fg:w="1"/><text x="30.9099%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="30.6599%" y="405" width="0.1015%" height="15" fill="rgb(219,143,52)" fg:x="302" fg:w="1"/><text x="30.9099%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="30.6599%" y="389" width="0.1015%" height="15" fill="rgb(215,56,7)" fg:x="302" fg:w="1"/><text x="30.9099%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="30.6599%" y="373" width="0.1015%" height="15" fill="rgb(239,59,51)" fg:x="302" fg:w="1"/><text x="30.9099%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="30.6599%" y="357" width="0.1015%" height="15" fill="rgb(209,215,4)" fg:x="302" fg:w="1"/><text x="30.9099%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="30.6599%" y="341" width="0.1015%" height="15" fill="rgb(221,118,39)" fg:x="302" fg:w="1"/><text x="30.9099%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="30.6599%" y="325" width="0.1015%" height="15" fill="rgb(236,6,44)" fg:x="302" fg:w="1"/><text x="30.9099%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="30.6599%" y="309" width="0.1015%" height="15" fill="rgb(216,122,9)" fg:x="302" fg:w="1"/><text x="30.9099%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="30.6599%" y="293" width="0.1015%" height="15" fill="rgb(244,134,42)" fg:x="302" fg:w="1"/><text x="30.9099%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="30.6599%" y="277" width="0.1015%" height="15" fill="rgb(209,189,35)" fg:x="302" fg:w="1"/><text x="30.9099%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="30.6599%" y="261" width="0.1015%" height="15" fill="rgb(250,47,36)" fg:x="302" fg:w="1"/><text x="30.9099%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.20%)</title><rect x="30.6599%" y="453" width="0.2030%" height="15" fill="rgb(252,112,4)" fg:x="302" fg:w="2"/><text x="30.9099%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="30.7614%" y="437" width="0.1015%" height="15" fill="rgb(221,79,51)" fg:x="303" fg:w="1"/><text x="31.0114%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="30.7614%" y="421" width="0.1015%" height="15" fill="rgb(232,65,53)" fg:x="303" fg:w="1"/><text x="31.0114%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.10%)</title><rect x="30.8629%" y="453" width="0.1015%" height="15" fill="rgb(211,37,7)" fg:x="304" fg:w="1"/><text x="31.1129%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="30.8629%" y="437" width="0.1015%" height="15" fill="rgb(234,221,18)" fg:x="304" fg:w="1"/><text x="31.1129%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (15 samples, 1.52%)</title><rect x="29.5431%" y="517" width="1.5228%" height="15" fill="rgb(220,158,26)" fg:x="291" fg:w="15"/><text x="29.7931%" y="527.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.51%)</title><rect x="30.5584%" y="501" width="0.5076%" height="15" fill="rgb(220,70,6)" fg:x="301" fg:w="5"/><text x="30.8084%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.41%)</title><rect x="30.6599%" y="485" width="0.4061%" height="15" fill="rgb(250,39,48)" fg:x="302" fg:w="4"/><text x="30.9099%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.41%)</title><rect x="30.6599%" y="469" width="0.4061%" height="15" fill="rgb(206,40,27)" fg:x="302" fg:w="4"/><text x="30.9099%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="30.9645%" y="453" width="0.1015%" height="15" fill="rgb(247,80,36)" fg:x="305" fg:w="1"/><text x="31.2145%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="30.9645%" y="437" width="0.1015%" height="15" fill="rgb(222,9,20)" fg:x="305" fg:w="1"/><text x="31.2145%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="30.9645%" y="421" width="0.1015%" height="15" fill="rgb(217,26,45)" fg:x="305" fg:w="1"/><text x="31.2145%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.0660%" y="501" width="0.1015%" height="15" fill="rgb(221,67,14)" fg:x="306" fg:w="1"/><text x="31.3160%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.0660%" y="485" width="0.1015%" height="15" fill="rgb(248,100,24)" fg:x="306" fg:w="1"/><text x="31.3160%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.0660%" y="469" width="0.1015%" height="15" fill="rgb(230,187,16)" fg:x="306" fg:w="1"/><text x="31.3160%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.0660%" y="453" width="0.1015%" height="15" fill="rgb(205,108,13)" fg:x="306" fg:w="1"/><text x="31.3160%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="31.0660%" y="437" width="0.1015%" height="15" fill="rgb(235,71,51)" fg:x="306" fg:w="1"/><text x="31.3160%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="31.0660%" y="421" width="0.1015%" height="15" fill="rgb(251,172,48)" fg:x="306" fg:w="1"/><text x="31.3160%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="31.0660%" y="405" width="0.1015%" height="15" fill="rgb(240,96,49)" fg:x="306" fg:w="1"/><text x="31.3160%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="31.0660%" y="389" width="0.1015%" height="15" fill="rgb(235,46,36)" fg:x="306" fg:w="1"/><text x="31.3160%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="31.0660%" y="373" width="0.1015%" height="15" fill="rgb(244,3,49)" fg:x="306" fg:w="1"/><text x="31.3160%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="31.0660%" y="357" width="0.1015%" height="15" fill="rgb(206,78,54)" fg:x="306" fg:w="1"/><text x="31.3160%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="31.0660%" y="341" width="0.1015%" height="15" fill="rgb(208,85,42)" fg:x="306" fg:w="1"/><text x="31.3160%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="31.0660%" y="325" width="0.1015%" height="15" fill="rgb(219,196,21)" fg:x="306" fg:w="1"/><text x="31.3160%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="31.0660%" y="309" width="0.1015%" height="15" fill="rgb(238,19,9)" fg:x="306" fg:w="1"/><text x="31.3160%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="31.0660%" y="293" width="0.1015%" height="15" fill="rgb(206,86,13)" fg:x="306" fg:w="1"/><text x="31.3160%" y="303.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.1675%" y="485" width="0.1015%" height="15" fill="rgb(214,123,40)" fg:x="307" fg:w="1"/><text x="31.4175%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.1675%" y="469" width="0.1015%" height="15" fill="rgb(243,53,5)" fg:x="307" fg:w="1"/><text x="31.4175%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.30%)</title><rect x="31.0660%" y="517" width="0.3046%" height="15" fill="rgb(254,186,31)" fg:x="306" fg:w="3"/><text x="31.3160%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.20%)</title><rect x="31.1675%" y="501" width="0.2030%" height="15" fill="rgb(221,216,25)" fg:x="307" fg:w="2"/><text x="31.4175%" y="511.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.10%)</title><rect x="31.2690%" y="485" width="0.1015%" height="15" fill="rgb(248,107,42)" fg:x="308" fg:w="1"/><text x="31.5190%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.10%)</title><rect x="31.2690%" y="469" width="0.1015%" height="15" fill="rgb(221,85,43)" fg:x="308" fg:w="1"/><text x="31.5190%" y="479.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.10%)</title><rect x="31.2690%" y="453" width="0.1015%" height="15" fill="rgb(225,34,24)" fg:x="308" fg:w="1"/><text x="31.5190%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="31.2690%" y="437" width="0.1015%" height="15" fill="rgb(211,119,1)" fg:x="308" fg:w="1"/><text x="31.5190%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="31.2690%" y="421" width="0.1015%" height="15" fill="rgb(254,216,46)" fg:x="308" fg:w="1"/><text x="31.5190%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (19 samples, 1.93%)</title><rect x="29.5431%" y="549" width="1.9289%" height="15" fill="rgb(238,11,38)" fg:x="291" fg:w="19"/><text x="29.7931%" y="559.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (19 samples, 1.93%)</title><rect x="29.5431%" y="533" width="1.9289%" height="15" fill="rgb(233,50,15)" fg:x="291" fg:w="19"/><text x="29.7931%" y="543.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.10%)</title><rect x="31.3706%" y="517" width="0.1015%" height="15" fill="rgb(217,181,29)" fg:x="309" fg:w="1"/><text x="31.6206%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.3706%" y="501" width="0.1015%" height="15" fill="rgb(214,56,3)" fg:x="309" fg:w="1"/><text x="31.6206%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.3706%" y="485" width="0.1015%" height="15" fill="rgb(230,69,45)" fg:x="309" fg:w="1"/><text x="31.6206%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.3706%" y="469" width="0.1015%" height="15" fill="rgb(224,201,50)" fg:x="309" fg:w="1"/><text x="31.6206%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="31.3706%" y="453" width="0.1015%" height="15" fill="rgb(217,228,18)" fg:x="309" fg:w="1"/><text x="31.6206%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="31.3706%" y="437" width="0.1015%" height="15" fill="rgb(239,33,44)" fg:x="309" fg:w="1"/><text x="31.6206%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="31.3706%" y="421" width="0.1015%" height="15" fill="rgb(248,210,23)" fg:x="309" fg:w="1"/><text x="31.6206%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="31.3706%" y="405" width="0.1015%" height="15" fill="rgb(253,135,8)" fg:x="309" fg:w="1"/><text x="31.6206%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="31.3706%" y="389" width="0.1015%" height="15" fill="rgb(217,98,21)" fg:x="309" fg:w="1"/><text x="31.6206%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="31.3706%" y="373" width="0.1015%" height="15" fill="rgb(253,130,21)" fg:x="309" fg:w="1"/><text x="31.6206%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="31.3706%" y="357" width="0.1015%" height="15" fill="rgb(207,81,54)" fg:x="309" fg:w="1"/><text x="31.6206%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="31.3706%" y="341" width="0.1015%" height="15" fill="rgb(232,48,33)" fg:x="309" fg:w="1"/><text x="31.6206%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="31.3706%" y="325" width="0.1015%" height="15" fill="rgb(211,9,35)" fg:x="309" fg:w="1"/><text x="31.6206%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="31.3706%" y="309" width="0.1015%" height="15" fill="rgb(205,152,21)" fg:x="309" fg:w="1"/><text x="31.6206%" y="319.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.10%)</title><rect x="31.4721%" y="549" width="0.1015%" height="15" fill="rgb(249,21,27)" fg:x="310" fg:w="1"/><text x="31.7221%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="31.4721%" y="533" width="0.1015%" height="15" fill="rgb(252,29,24)" fg:x="310" fg:w="1"/><text x="31.7221%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.10%)</title><rect x="31.5736%" y="533" width="0.1015%" height="15" fill="rgb(230,130,50)" fg:x="311" fg:w="1"/><text x="31.8236%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.10%)</title><rect x="31.5736%" y="517" width="0.1015%" height="15" fill="rgb(239,144,14)" fg:x="311" fg:w="1"/><text x="31.8236%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="31.5736%" y="501" width="0.1015%" height="15" fill="rgb(227,111,50)" fg:x="311" fg:w="1"/><text x="31.8236%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.20%)</title><rect x="31.7766%" y="485" width="0.2030%" height="15" fill="rgb(254,84,20)" fg:x="313" fg:w="2"/><text x="32.0266%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.30%)</title><rect x="31.7766%" y="501" width="0.3046%" height="15" fill="rgb(232,90,48)" fg:x="313" fg:w="3"/><text x="32.0266%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.9797%" y="485" width="0.1015%" height="15" fill="rgb(253,63,47)" fg:x="315" fg:w="1"/><text x="32.2297%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="31.9797%" y="469" width="0.1015%" height="15" fill="rgb(251,146,35)" fg:x="315" fg:w="1"/><text x="32.2297%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="31.9797%" y="453" width="0.1015%" height="15" fill="rgb(229,192,35)" fg:x="315" fg:w="1"/><text x="32.2297%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="31.9797%" y="437" width="0.1015%" height="15" fill="rgb(225,68,9)" fg:x="315" fg:w="1"/><text x="32.2297%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="31.9797%" y="421" width="0.1015%" height="15" fill="rgb(214,97,34)" fg:x="315" fg:w="1"/><text x="32.2297%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="31.9797%" y="405" width="0.1015%" height="15" fill="rgb(253,31,26)" fg:x="315" fg:w="1"/><text x="32.2297%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="31.9797%" y="389" width="0.1015%" height="15" fill="rgb(225,151,47)" fg:x="315" fg:w="1"/><text x="32.2297%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="31.9797%" y="373" width="0.1015%" height="15" fill="rgb(206,185,9)" fg:x="315" fg:w="1"/><text x="32.2297%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="31.9797%" y="357" width="0.1015%" height="15" fill="rgb(249,65,17)" fg:x="315" fg:w="1"/><text x="32.2297%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="31.9797%" y="341" width="0.1015%" height="15" fill="rgb(220,110,10)" fg:x="315" fg:w="1"/><text x="32.2297%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="31.9797%" y="325" width="0.1015%" height="15" fill="rgb(222,198,49)" fg:x="315" fg:w="1"/><text x="32.2297%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="31.9797%" y="309" width="0.1015%" height="15" fill="rgb(239,81,13)" fg:x="315" fg:w="1"/><text x="32.2297%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="32.0812%" y="501" width="0.1015%" height="15" fill="rgb(216,128,11)" fg:x="316" fg:w="1"/><text x="32.3312%" y="511.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.10%)</title><rect x="32.1827%" y="501" width="0.1015%" height="15" fill="rgb(247,156,8)" fg:x="317" fg:w="1"/><text x="32.4327%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.10%)</title><rect x="32.1827%" y="485" width="0.1015%" height="15" fill="rgb(219,173,1)" fg:x="317" fg:w="1"/><text x="32.4327%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.10%)</title><rect x="32.1827%" y="469" width="0.1015%" height="15" fill="rgb(227,42,24)" fg:x="317" fg:w="1"/><text x="32.4327%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (8 samples, 0.81%)</title><rect x="31.6751%" y="533" width="0.8122%" height="15" fill="rgb(253,219,50)" fg:x="312" fg:w="8"/><text x="31.9251%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.81%)</title><rect x="31.6751%" y="517" width="0.8122%" height="15" fill="rgb(215,191,54)" fg:x="312" fg:w="8"/><text x="31.9251%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="32.2843%" y="501" width="0.2030%" height="15" fill="rgb(238,83,12)" fg:x="318" fg:w="2"/><text x="32.5343%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="32.2843%" y="485" width="0.2030%" height="15" fill="rgb(205,124,9)" fg:x="318" fg:w="2"/><text x="32.5343%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.10%)</title><rect x="32.3858%" y="469" width="0.1015%" height="15" fill="rgb(253,174,7)" fg:x="319" fg:w="1"/><text x="32.6358%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.10%)</title><rect x="32.3858%" y="453" width="0.1015%" height="15" fill="rgb(206,134,49)" fg:x="319" fg:w="1"/><text x="32.6358%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.10%)</title><rect x="32.3858%" y="437" width="0.1015%" height="15" fill="rgb(221,89,20)" fg:x="319" fg:w="1"/><text x="32.6358%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="32.3858%" y="421" width="0.1015%" height="15" fill="rgb(240,205,13)" fg:x="319" fg:w="1"/><text x="32.6358%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="32.3858%" y="405" width="0.1015%" height="15" fill="rgb(237,174,32)" fg:x="319" fg:w="1"/><text x="32.6358%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="32.3858%" y="389" width="0.1015%" height="15" fill="rgb(226,12,15)" fg:x="319" fg:w="1"/><text x="32.6358%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="32.4873%" y="501" width="0.2030%" height="15" fill="rgb(245,160,52)" fg:x="320" fg:w="2"/><text x="32.7373%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.20%)</title><rect x="32.4873%" y="485" width="0.2030%" height="15" fill="rgb(253,80,21)" fg:x="320" fg:w="2"/><text x="32.7373%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="32.5888%" y="469" width="0.1015%" height="15" fill="rgb(231,225,22)" fg:x="321" fg:w="1"/><text x="32.8388%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="32.6904%" y="469" width="0.2030%" height="15" fill="rgb(253,185,12)" fg:x="322" fg:w="2"/><text x="32.9404%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.41%)</title><rect x="32.6904%" y="501" width="0.4061%" height="15" fill="rgb(234,197,21)" fg:x="322" fg:w="4"/><text x="32.9404%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.41%)</title><rect x="32.6904%" y="485" width="0.4061%" height="15" fill="rgb(210,47,30)" fg:x="322" fg:w="4"/><text x="32.9404%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.20%)</title><rect x="32.8934%" y="469" width="0.2030%" height="15" fill="rgb(246,139,27)" fg:x="324" fg:w="2"/><text x="33.1434%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.10%)</title><rect x="32.9949%" y="453" width="0.1015%" height="15" fill="rgb(226,130,16)" fg:x="325" fg:w="1"/><text x="33.2449%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="32.9949%" y="437" width="0.1015%" height="15" fill="rgb(237,208,20)" fg:x="325" fg:w="1"/><text x="33.2449%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="32.9949%" y="421" width="0.1015%" height="15" fill="rgb(245,186,28)" fg:x="325" fg:w="1"/><text x="33.2449%" y="431.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.71%)</title><rect x="32.4873%" y="533" width="0.7107%" height="15" fill="rgb(238,105,39)" fg:x="320" fg:w="7"/><text x="32.7373%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (7 samples, 0.71%)</title><rect x="32.4873%" y="517" width="0.7107%" height="15" fill="rgb(253,228,11)" fg:x="320" fg:w="7"/><text x="32.7373%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.10%)</title><rect x="33.0964%" y="501" width="0.1015%" height="15" fill="rgb(224,136,38)" fg:x="326" fg:w="1"/><text x="33.3464%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="33.0964%" y="485" width="0.1015%" height="15" fill="rgb(211,3,25)" fg:x="326" fg:w="1"/><text x="33.3464%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.10%)</title><rect x="33.0964%" y="469" width="0.1015%" height="15" fill="rgb(238,66,34)" fg:x="326" fg:w="1"/><text x="33.3464%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="33.0964%" y="453" width="0.1015%" height="15" fill="rgb(223,188,11)" fg:x="326" fg:w="1"/><text x="33.3464%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.10%)</title><rect x="33.1980%" y="533" width="0.1015%" height="15" fill="rgb(221,10,35)" fg:x="327" fg:w="1"/><text x="33.4480%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.10%)</title><rect x="33.1980%" y="517" width="0.1015%" height="15" fill="rgb(223,18,44)" fg:x="327" fg:w="1"/><text x="33.4480%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="33.1980%" y="501" width="0.1015%" height="15" fill="rgb(220,97,41)" fg:x="327" fg:w="1"/><text x="33.4480%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="33.1980%" y="485" width="0.1015%" height="15" fill="rgb(206,95,45)" fg:x="327" fg:w="1"/><text x="33.4480%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.10%)</title><rect x="33.1980%" y="469" width="0.1015%" height="15" fill="rgb(209,96,13)" fg:x="327" fg:w="1"/><text x="33.4480%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.4010%" y="517" width="0.1015%" height="15" fill="rgb(237,39,34)" fg:x="329" fg:w="1"/><text x="33.6510%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.4010%" y="501" width="0.1015%" height="15" fill="rgb(213,49,47)" fg:x="329" fg:w="1"/><text x="33.6510%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (41 samples, 4.16%)</title><rect x="29.4416%" y="565" width="4.1624%" height="15" fill="rgb(205,107,27)" fg:x="290" fg:w="41"/><text x="29.6916%" y="575.50">&lt;plug..</text></g><g><title>plugins_core::tools::move_between (20 samples, 2.03%)</title><rect x="31.5736%" y="549" width="2.0305%" height="15" fill="rgb(212,142,9)" fg:x="311" fg:w="20"/><text x="31.8236%" y="559.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.30%)</title><rect x="33.2995%" y="533" width="0.3046%" height="15" fill="rgb(226,182,0)" fg:x="328" fg:w="3"/><text x="33.5495%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.10%)</title><rect x="33.5025%" y="517" width="0.1015%" height="15" fill="rgb(231,3,53)" fg:x="330" fg:w="1"/><text x="33.7525%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="33.5025%" y="501" width="0.1015%" height="15" fill="rgb(246,111,28)" fg:x="330" fg:w="1"/><text x="33.7525%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.81%)</title><rect x="33.8071%" y="501" width="0.8122%" height="15" fill="rgb(254,183,7)" fg:x="333" fg:w="8"/><text x="34.0571%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.81%)</title><rect x="33.8071%" y="485" width="0.8122%" height="15" fill="rgb(247,177,28)" fg:x="333" fg:w="8"/><text x="34.0571%" y="495.50"></text></g><g><title>realloc (8 samples, 0.81%)</title><rect x="33.8071%" y="469" width="0.8122%" height="15" fill="rgb(244,43,1)" fg:x="333" fg:w="8"/><text x="34.0571%" y="479.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="34.6193%" y="453" width="0.1015%" height="15" fill="rgb(207,2,35)" fg:x="341" fg:w="1"/><text x="34.8693%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="34.7208%" y="325" width="0.2030%" height="15" fill="rgb(213,83,22)" fg:x="342" fg:w="2"/><text x="34.9708%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="34.7208%" y="309" width="0.2030%" height="15" fill="rgb(246,212,13)" fg:x="342" fg:w="2"/><text x="34.9708%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.20%)</title><rect x="34.7208%" y="293" width="0.2030%" height="15" fill="rgb(213,127,46)" fg:x="342" fg:w="2"/><text x="34.9708%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="34.7208%" y="277" width="0.2030%" height="15" fill="rgb(219,215,39)" fg:x="342" fg:w="2"/><text x="34.9708%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="34.7208%" y="261" width="0.2030%" height="15" fill="rgb(227,99,17)" fg:x="342" fg:w="2"/><text x="34.9708%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.20%)</title><rect x="34.7208%" y="245" width="0.2030%" height="15" fill="rgb(208,155,18)" fg:x="342" fg:w="2"/><text x="34.9708%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="34.7208%" y="229" width="0.2030%" height="15" fill="rgb(223,204,38)" fg:x="342" fg:w="2"/><text x="34.9708%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="34.7208%" y="213" width="0.2030%" height="15" fill="rgb(212,114,21)" fg:x="342" fg:w="2"/><text x="34.9708%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.20%)</title><rect x="34.7208%" y="197" width="0.2030%" height="15" fill="rgb(250,74,13)" fg:x="342" fg:w="2"/><text x="34.9708%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.20%)</title><rect x="34.7208%" y="181" width="0.2030%" height="15" fill="rgb(234,7,1)" fg:x="342" fg:w="2"/><text x="34.9708%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.20%)</title><rect x="34.7208%" y="165" width="0.2030%" height="15" fill="rgb(207,138,31)" fg:x="342" fg:w="2"/><text x="34.9708%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="34.8223%" y="149" width="0.1015%" height="15" fill="rgb(215,186,42)" fg:x="343" fg:w="1"/><text x="35.0723%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="34.8223%" y="133" width="0.1015%" height="15" fill="rgb(229,205,49)" fg:x="343" fg:w="1"/><text x="35.0723%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="34.8223%" y="117" width="0.1015%" height="15" fill="rgb(216,156,32)" fg:x="343" fg:w="1"/><text x="35.0723%" y="127.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="34.8223%" y="101" width="0.1015%" height="15" fill="rgb(238,7,21)" fg:x="343" fg:w="1"/><text x="35.0723%" y="111.50"></text></g><g><title>kernel::model::EntityRef::into_entry (6 samples, 0.61%)</title><rect x="34.6193%" y="485" width="0.6091%" height="15" fill="rgb(249,190,22)" fg:x="341" fg:w="6"/><text x="34.8693%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.61%)</title><rect x="34.6193%" y="469" width="0.6091%" height="15" fill="rgb(253,51,31)" fg:x="341" fg:w="6"/><text x="34.8693%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.51%)</title><rect x="34.7208%" y="453" width="0.5076%" height="15" fill="rgb(237,90,54)" fg:x="342" fg:w="5"/><text x="34.9708%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.51%)</title><rect x="34.7208%" y="437" width="0.5076%" height="15" fill="rgb(250,214,33)" fg:x="342" fg:w="5"/><text x="34.9708%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.51%)</title><rect x="34.7208%" y="421" width="0.5076%" height="15" fill="rgb(237,10,49)" fg:x="342" fg:w="5"/><text x="34.9708%" y="431.50"></text></g><g><title>core::fmt::write (5 samples, 0.51%)</title><rect x="34.7208%" y="405" width="0.5076%" height="15" fill="rgb(241,56,36)" fg:x="342" fg:w="5"/><text x="34.9708%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.51%)</title><rect x="34.7208%" y="389" width="0.5076%" height="15" fill="rgb(227,164,12)" fg:x="342" fg:w="5"/><text x="34.9708%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (5 samples, 0.51%)</title><rect x="34.7208%" y="373" width="0.5076%" height="15" fill="rgb(249,149,35)" fg:x="342" fg:w="5"/><text x="34.9708%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.51%)</title><rect x="34.7208%" y="357" width="0.5076%" height="15" fill="rgb(238,227,50)" fg:x="342" fg:w="5"/><text x="34.9708%" y="367.50"></text></g><g><title>core::fmt::write (5 samples, 0.51%)</title><rect x="34.7208%" y="341" width="0.5076%" height="15" fill="rgb(235,102,45)" fg:x="342" fg:w="5"/><text x="34.9708%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.30%)</title><rect x="34.9239%" y="325" width="0.3046%" height="15" fill="rgb(211,10,38)" fg:x="344" fg:w="3"/><text x="35.1739%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.20%)</title><rect x="35.0254%" y="309" width="0.2030%" height="15" fill="rgb(219,77,48)" fg:x="345" fg:w="2"/><text x="35.2754%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.20%)</title><rect x="35.0254%" y="293" width="0.2030%" height="15" fill="rgb(246,6,15)" fg:x="345" fg:w="2"/><text x="35.2754%" y="303.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="35.0254%" y="277" width="0.2030%" height="15" fill="rgb(207,220,2)" fg:x="345" fg:w="2"/><text x="35.2754%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="35.0254%" y="261" width="0.2030%" height="15" fill="rgb(242,48,14)" fg:x="345" fg:w="2"/><text x="35.2754%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="35.0254%" y="245" width="0.2030%" height="15" fill="rgb(218,19,27)" fg:x="345" fg:w="2"/><text x="35.2754%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.10%)</title><rect x="35.2284%" y="453" width="0.1015%" height="15" fill="rgb(228,0,35)" fg:x="347" fg:w="1"/><text x="35.4784%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="35.4315%" y="421" width="0.1015%" height="15" fill="rgb(244,142,54)" fg:x="349" fg:w="1"/><text x="35.6815%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (19 samples, 1.93%)</title><rect x="33.7056%" y="549" width="1.9289%" height="15" fill="rgb(243,217,40)" fg:x="332" fg:w="19"/><text x="33.9556%" y="559.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (19 samples, 1.93%)</title><rect x="33.7056%" y="533" width="1.9289%" height="15" fill="rgb(207,114,16)" fg:x="332" fg:w="19"/><text x="33.9556%" y="543.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (19 samples, 1.93%)</title><rect x="33.7056%" y="517" width="1.9289%" height="15" fill="rgb(224,33,25)" fg:x="332" fg:w="19"/><text x="33.9556%" y="527.50">p..</text></g><g><title>plugins_core::tools::contained_by (10 samples, 1.02%)</title><rect x="34.6193%" y="501" width="1.0152%" height="15" fill="rgb(230,93,54)" fg:x="341" fg:w="10"/><text x="34.8693%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.41%)</title><rect x="35.2284%" y="485" width="0.4061%" height="15" fill="rgb(224,56,24)" fg:x="347" fg:w="4"/><text x="35.4784%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.41%)</title><rect x="35.2284%" y="469" width="0.4061%" height="15" fill="rgb(235,189,50)" fg:x="347" fg:w="4"/><text x="35.4784%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.30%)</title><rect x="35.3299%" y="453" width="0.3046%" height="15" fill="rgb(242,173,8)" fg:x="348" fg:w="3"/><text x="35.5799%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.30%)</title><rect x="35.3299%" y="437" width="0.3046%" height="15" fill="rgb(209,206,10)" fg:x="348" fg:w="3"/><text x="35.5799%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.10%)</title><rect x="35.5330%" y="421" width="0.1015%" height="15" fill="rgb(213,182,44)" fg:x="350" fg:w="1"/><text x="35.7830%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.10%)</title><rect x="35.5330%" y="405" width="0.1015%" height="15" fill="rgb(243,51,15)" fg:x="350" fg:w="1"/><text x="35.7830%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.10%)</title><rect x="35.5330%" y="389" width="0.1015%" height="15" fill="rgb(241,13,14)" fg:x="350" fg:w="1"/><text x="35.7830%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="35.5330%" y="373" width="0.1015%" height="15" fill="rgb(239,147,24)" fg:x="350" fg:w="1"/><text x="35.7830%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="35.5330%" y="357" width="0.1015%" height="15" fill="rgb(223,129,16)" fg:x="350" fg:w="1"/><text x="35.7830%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="35.5330%" y="341" width="0.1015%" height="15" fill="rgb(209,169,13)" fg:x="350" fg:w="1"/><text x="35.7830%" y="351.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.10%)</title><rect x="35.6345%" y="549" width="0.1015%" height="15" fill="rgb(235,159,41)" fg:x="351" fg:w="1"/><text x="35.8845%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="35.8376%" y="501" width="0.1015%" height="15" fill="rgb(223,219,48)" fg:x="353" fg:w="1"/><text x="36.0876%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="35.8376%" y="485" width="0.1015%" height="15" fill="rgb(236,80,13)" fg:x="353" fg:w="1"/><text x="36.0876%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.10%)</title><rect x="35.9391%" y="501" width="0.1015%" height="15" fill="rgb(213,5,6)" fg:x="354" fg:w="1"/><text x="36.1891%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.10%)</title><rect x="35.9391%" y="485" width="0.1015%" height="15" fill="rgb(205,59,21)" fg:x="354" fg:w="1"/><text x="36.1891%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="35.9391%" y="469" width="0.1015%" height="15" fill="rgb(247,137,35)" fg:x="354" fg:w="1"/><text x="36.1891%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="35.9391%" y="453" width="0.1015%" height="15" fill="rgb(242,208,28)" fg:x="354" fg:w="1"/><text x="36.1891%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.10%)</title><rect x="35.9391%" y="437" width="0.1015%" height="15" fill="rgb(245,62,25)" fg:x="354" fg:w="1"/><text x="36.1891%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.10%)</title><rect x="35.9391%" y="421" width="0.1015%" height="15" fill="rgb(233,99,54)" fg:x="354" fg:w="1"/><text x="36.1891%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.10%)</title><rect x="36.0406%" y="469" width="0.1015%" height="15" fill="rgb(213,10,37)" fg:x="355" fg:w="1"/><text x="36.2906%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="36.0406%" y="453" width="0.1015%" height="15" fill="rgb(235,143,30)" fg:x="355" fg:w="1"/><text x="36.2906%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="36.0406%" y="437" width="0.1015%" height="15" fill="rgb(250,146,33)" fg:x="355" fg:w="1"/><text x="36.2906%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.51%)</title><rect x="35.8376%" y="533" width="0.5076%" height="15" fill="rgb(226,198,42)" fg:x="353" fg:w="5"/><text x="36.0876%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.51%)</title><rect x="35.8376%" y="517" width="0.5076%" height="15" fill="rgb(222,55,6)" fg:x="353" fg:w="5"/><text x="36.0876%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.30%)</title><rect x="36.0406%" y="501" width="0.3046%" height="15" fill="rgb(213,224,31)" fg:x="355" fg:w="3"/><text x="36.2906%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.30%)</title><rect x="36.0406%" y="485" width="0.3046%" height="15" fill="rgb(226,103,35)" fg:x="355" fg:w="3"/><text x="36.2906%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.20%)</title><rect x="36.1421%" y="469" width="0.2030%" height="15" fill="rgb(205,66,45)" fg:x="356" fg:w="2"/><text x="36.3921%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.20%)</title><rect x="36.1421%" y="453" width="0.2030%" height="15" fill="rgb(226,51,42)" fg:x="356" fg:w="2"/><text x="36.3921%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.20%)</title><rect x="36.1421%" y="437" width="0.2030%" height="15" fill="rgb(206,69,1)" fg:x="356" fg:w="2"/><text x="36.3921%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="36.2437%" y="421" width="0.1015%" height="15" fill="rgb(213,228,47)" fg:x="357" fg:w="1"/><text x="36.4937%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="36.5482%" y="469" width="0.1015%" height="15" fill="rgb(224,204,18)" fg:x="360" fg:w="1"/><text x="36.7982%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.41%)</title><rect x="36.3452%" y="533" width="0.4061%" height="15" fill="rgb(253,187,47)" fg:x="358" fg:w="4"/><text x="36.5952%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.41%)</title><rect x="36.3452%" y="517" width="0.4061%" height="15" fill="rgb(232,61,2)" fg:x="358" fg:w="4"/><text x="36.5952%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.41%)</title><rect x="36.3452%" y="501" width="0.4061%" height="15" fill="rgb(213,132,35)" fg:x="358" fg:w="4"/><text x="36.5952%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.30%)</title><rect x="36.4467%" y="485" width="0.3046%" height="15" fill="rgb(247,33,21)" fg:x="359" fg:w="3"/><text x="36.6967%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="36.6497%" y="469" width="0.1015%" height="15" fill="rgb(233,71,46)" fg:x="361" fg:w="1"/><text x="36.8997%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.10%)</title><rect x="36.6497%" y="453" width="0.1015%" height="15" fill="rgb(222,173,43)" fg:x="361" fg:w="1"/><text x="36.8997%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="36.6497%" y="437" width="0.1015%" height="15" fill="rgb(249,218,47)" fg:x="361" fg:w="1"/><text x="36.8997%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="36.6497%" y="421" width="0.1015%" height="15" fill="rgb(254,185,48)" fg:x="361" fg:w="1"/><text x="36.8997%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.10%)</title><rect x="36.7513%" y="517" width="0.1015%" height="15" fill="rgb(252,165,50)" fg:x="362" fg:w="1"/><text x="37.0013%" y="527.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.10%)</title><rect x="36.7513%" y="501" width="0.1015%" height="15" fill="rgb(206,219,6)" fg:x="362" fg:w="1"/><text x="37.0013%" y="511.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.10%)</title><rect x="36.7513%" y="485" width="0.1015%" height="15" fill="rgb(212,212,45)" fg:x="362" fg:w="1"/><text x="37.0013%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="36.7513%" y="469" width="0.1015%" height="15" fill="rgb(221,31,9)" fg:x="362" fg:w="1"/><text x="37.0013%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.20%)</title><rect x="36.7513%" y="533" width="0.2030%" height="15" fill="rgb(234,198,39)" fg:x="362" fg:w="2"/><text x="37.0013%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.10%)</title><rect x="36.8528%" y="517" width="0.1015%" height="15" fill="rgb(252,145,46)" fg:x="363" fg:w="1"/><text x="37.1028%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="36.8528%" y="501" width="0.1015%" height="15" fill="rgb(237,149,0)" fg:x="363" fg:w="1"/><text x="37.1028%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="36.8528%" y="485" width="0.1015%" height="15" fill="rgb(229,65,5)" fg:x="363" fg:w="1"/><text x="37.1028%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.10%)</title><rect x="36.8528%" y="469" width="0.1015%" height="15" fill="rgb(235,60,36)" fg:x="363" fg:w="1"/><text x="37.1028%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.10%)</title><rect x="36.8528%" y="453" width="0.1015%" height="15" fill="rgb(222,47,18)" fg:x="363" fg:w="1"/><text x="37.1028%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="36.8528%" y="437" width="0.1015%" height="15" fill="rgb(235,114,22)" fg:x="363" fg:w="1"/><text x="37.1028%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="36.8528%" y="421" width="0.1015%" height="15" fill="rgb(209,167,11)" fg:x="363" fg:w="1"/><text x="37.1028%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="36.8528%" y="405" width="0.1015%" height="15" fill="rgb(251,73,18)" fg:x="363" fg:w="1"/><text x="37.1028%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="36.8528%" y="389" width="0.1015%" height="15" fill="rgb(217,60,17)" fg:x="363" fg:w="1"/><text x="37.1028%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.10%)</title><rect x="36.8528%" y="373" width="0.1015%" height="15" fill="rgb(224,36,37)" fg:x="363" fg:w="1"/><text x="37.1028%" y="383.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="36.8528%" y="357" width="0.1015%" height="15" fill="rgb(211,21,32)" fg:x="363" fg:w="1"/><text x="37.1028%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.10%)</title><rect x="36.8528%" y="341" width="0.1015%" height="15" fill="rgb(231,55,48)" fg:x="363" fg:w="1"/><text x="37.1028%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="36.9543%" y="517" width="0.1015%" height="15" fill="rgb(227,42,18)" fg:x="364" fg:w="1"/><text x="37.2043%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="36.9543%" y="501" width="0.1015%" height="15" fill="rgb(217,2,27)" fg:x="364" fg:w="1"/><text x="37.2043%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.10%)</title><rect x="36.9543%" y="485" width="0.1015%" height="15" fill="rgb(251,138,23)" fg:x="364" fg:w="1"/><text x="37.2043%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="37.0558%" y="501" width="0.1015%" height="15" fill="rgb(226,184,11)" fg:x="365" fg:w="1"/><text x="37.3058%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (2 samples, 0.20%)</title><rect x="37.0558%" y="517" width="0.2030%" height="15" fill="rgb(242,142,12)" fg:x="365" fg:w="2"/><text x="37.3058%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.10%)</title><rect x="37.1574%" y="501" width="0.1015%" height="15" fill="rgb(234,187,18)" fg:x="366" fg:w="1"/><text x="37.4074%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.10%)</title><rect x="37.1574%" y="485" width="0.1015%" height="15" fill="rgb(237,44,42)" fg:x="366" fg:w="1"/><text x="37.4074%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="37.1574%" y="469" width="0.1015%" height="15" fill="rgb(211,90,23)" fg:x="366" fg:w="1"/><text x="37.4074%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (37 samples, 3.76%)</title><rect x="33.6041%" y="565" width="3.7563%" height="15" fill="rgb(207,81,18)" fg:x="331" fg:w="37"/><text x="33.8541%" y="575.50">&lt;plu..</text></g><g><title>plugins_core::tools::move_between (16 samples, 1.62%)</title><rect x="35.7360%" y="549" width="1.6244%" height="15" fill="rgb(222,107,28)" fg:x="352" fg:w="16"/><text x="35.9860%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (4 samples, 0.41%)</title><rect x="36.9543%" y="533" width="0.4061%" height="15" fill="rgb(237,83,52)" fg:x="364" fg:w="4"/><text x="37.2043%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.10%)</title><rect x="37.2589%" y="517" width="0.1015%" height="15" fill="rgb(208,67,11)" fg:x="367" fg:w="1"/><text x="37.5089%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="37.2589%" y="501" width="0.1015%" height="15" fill="rgb(249,157,49)" fg:x="367" fg:w="1"/><text x="37.5089%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="37.2589%" y="485" width="0.1015%" height="15" fill="rgb(243,200,1)" fg:x="367" fg:w="1"/><text x="37.5089%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.10%)</title><rect x="37.2589%" y="469" width="0.1015%" height="15" fill="rgb(225,162,37)" fg:x="367" fg:w="1"/><text x="37.5089%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.10%)</title><rect x="37.2589%" y="453" width="0.1015%" height="15" fill="rgb(242,92,13)" fg:x="367" fg:w="1"/><text x="37.5089%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="37.2589%" y="437" width="0.1015%" height="15" fill="rgb(220,43,36)" fg:x="367" fg:w="1"/><text x="37.5089%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="37.2589%" y="421" width="0.1015%" height="15" fill="rgb(213,165,48)" fg:x="367" fg:w="1"/><text x="37.5089%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="37.2589%" y="405" width="0.1015%" height="15" fill="rgb(227,200,9)" fg:x="367" fg:w="1"/><text x="37.5089%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="37.2589%" y="389" width="0.1015%" height="15" fill="rgb(221,222,28)" fg:x="367" fg:w="1"/><text x="37.5089%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="37.2589%" y="373" width="0.1015%" height="15" fill="rgb(223,142,26)" fg:x="367" fg:w="1"/><text x="37.5089%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="37.2589%" y="357" width="0.1015%" height="15" fill="rgb(243,46,9)" fg:x="367" fg:w="1"/><text x="37.5089%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="37.2589%" y="341" width="0.1015%" height="15" fill="rgb(250,56,11)" fg:x="367" fg:w="1"/><text x="37.5089%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="37.2589%" y="325" width="0.1015%" height="15" fill="rgb(229,113,5)" fg:x="367" fg:w="1"/><text x="37.5089%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="37.2589%" y="309" width="0.1015%" height="15" fill="rgb(244,108,28)" fg:x="367" fg:w="1"/><text x="37.5089%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="37.2589%" y="293" width="0.1015%" height="15" fill="rgb(242,119,50)" fg:x="367" fg:w="1"/><text x="37.5089%" y="303.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.10%)</title><rect x="37.3604%" y="549" width="0.1015%" height="15" fill="rgb(224,164,23)" fg:x="368" fg:w="1"/><text x="37.6104%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="37.3604%" y="533" width="0.1015%" height="15" fill="rgb(214,227,44)" fg:x="368" fg:w="1"/><text x="37.6104%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="37.3604%" y="517" width="0.1015%" height="15" fill="rgb(238,202,4)" fg:x="368" fg:w="1"/><text x="37.6104%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="37.3604%" y="501" width="0.1015%" height="15" fill="rgb(213,190,30)" fg:x="368" fg:w="1"/><text x="37.6104%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="37.3604%" y="485" width="0.1015%" height="15" fill="rgb(239,15,2)" fg:x="368" fg:w="1"/><text x="37.6104%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.20%)</title><rect x="37.3604%" y="565" width="0.2030%" height="15" fill="rgb(249,229,4)" fg:x="368" fg:w="2"/><text x="37.6104%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="37.4619%" y="549" width="0.1015%" height="15" fill="rgb(239,75,44)" fg:x="369" fg:w="1"/><text x="37.7119%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="37.4619%" y="533" width="0.1015%" height="15" fill="rgb(251,206,23)" fg:x="369" fg:w="1"/><text x="37.7119%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="37.4619%" y="517" width="0.1015%" height="15" fill="rgb(215,208,0)" fg:x="369" fg:w="1"/><text x="37.7119%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="37.4619%" y="501" width="0.1015%" height="15" fill="rgb(230,75,50)" fg:x="369" fg:w="1"/><text x="37.7119%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.10%)</title><rect x="37.4619%" y="485" width="0.1015%" height="15" fill="rgb(246,180,39)" fg:x="369" fg:w="1"/><text x="37.7119%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.10%)</title><rect x="37.4619%" y="469" width="0.1015%" height="15" fill="rgb(249,175,24)" fg:x="369" fg:w="1"/><text x="37.7119%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="37.4619%" y="453" width="0.1015%" height="15" fill="rgb(247,176,22)" fg:x="369" fg:w="1"/><text x="37.7119%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="37.4619%" y="437" width="0.1015%" height="15" fill="rgb(241,100,24)" fg:x="369" fg:w="1"/><text x="37.7119%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="37.4619%" y="421" width="0.1015%" height="15" fill="rgb(233,4,35)" fg:x="369" fg:w="1"/><text x="37.7119%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="37.4619%" y="405" width="0.1015%" height="15" fill="rgb(211,164,46)" fg:x="369" fg:w="1"/><text x="37.7119%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="37.4619%" y="389" width="0.1015%" height="15" fill="rgb(242,99,53)" fg:x="369" fg:w="1"/><text x="37.7119%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="37.4619%" y="373" width="0.1015%" height="15" fill="rgb(243,45,33)" fg:x="369" fg:w="1"/><text x="37.7119%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="37.4619%" y="357" width="0.1015%" height="15" fill="rgb(217,55,21)" fg:x="369" fg:w="1"/><text x="37.7119%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="37.4619%" y="341" width="0.1015%" height="15" fill="rgb(245,145,46)" fg:x="369" fg:w="1"/><text x="37.7119%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="37.4619%" y="325" width="0.1015%" height="15" fill="rgb(215,112,45)" fg:x="369" fg:w="1"/><text x="37.7119%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="37.4619%" y="309" width="0.1015%" height="15" fill="rgb(228,104,16)" fg:x="369" fg:w="1"/><text x="37.7119%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="37.4619%" y="293" width="0.1015%" height="15" fill="rgb(239,186,38)" fg:x="369" fg:w="1"/><text x="37.7119%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="37.4619%" y="277" width="0.1015%" height="15" fill="rgb(228,38,35)" fg:x="369" fg:w="1"/><text x="37.7119%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="37.4619%" y="261" width="0.1015%" height="15" fill="rgb(251,42,40)" fg:x="369" fg:w="1"/><text x="37.7119%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="37.4619%" y="245" width="0.1015%" height="15" fill="rgb(210,51,19)" fg:x="369" fg:w="1"/><text x="37.7119%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="37.4619%" y="229" width="0.1015%" height="15" fill="rgb(236,94,42)" fg:x="369" fg:w="1"/><text x="37.7119%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="37.4619%" y="213" width="0.1015%" height="15" fill="rgb(239,167,16)" fg:x="369" fg:w="1"/><text x="37.7119%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="37.4619%" y="197" width="0.1015%" height="15" fill="rgb(252,175,31)" fg:x="369" fg:w="1"/><text x="37.7119%" y="207.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="37.4619%" y="181" width="0.1015%" height="15" fill="rgb(206,166,30)" fg:x="369" fg:w="1"/><text x="37.7119%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.20%)</title><rect x="37.5635%" y="565" width="0.2030%" height="15" fill="rgb(206,209,37)" fg:x="370" fg:w="2"/><text x="37.8135%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (2 samples, 0.20%)</title><rect x="37.5635%" y="549" width="0.2030%" height="15" fill="rgb(226,91,4)" fg:x="370" fg:w="2"/><text x="37.8135%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="37.5635%" y="533" width="0.2030%" height="15" fill="rgb(222,167,0)" fg:x="370" fg:w="2"/><text x="37.8135%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.10%)</title><rect x="37.8680%" y="437" width="0.1015%" height="15" fill="rgb(211,70,14)" fg:x="373" fg:w="1"/><text x="38.1180%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="37.8680%" y="421" width="0.1015%" height="15" fill="rgb(214,84,42)" fg:x="373" fg:w="1"/><text x="38.1180%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.10%)</title><rect x="37.8680%" y="405" width="0.1015%" height="15" fill="rgb(235,157,37)" fg:x="373" fg:w="1"/><text x="38.1180%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.10%)</title><rect x="37.8680%" y="389" width="0.1015%" height="15" fill="rgb(225,13,6)" fg:x="373" fg:w="1"/><text x="38.1180%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="37.8680%" y="373" width="0.1015%" height="15" fill="rgb(205,202,1)" fg:x="373" fg:w="1"/><text x="38.1180%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.10%)</title><rect x="37.8680%" y="357" width="0.1015%" height="15" fill="rgb(232,195,26)" fg:x="373" fg:w="1"/><text x="38.1180%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="37.8680%" y="341" width="0.1015%" height="15" fill="rgb(208,102,26)" fg:x="373" fg:w="1"/><text x="38.1180%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.30%)</title><rect x="37.8680%" y="501" width="0.3046%" height="15" fill="rgb(215,41,39)" fg:x="373" fg:w="3"/><text x="38.1180%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.30%)</title><rect x="37.8680%" y="485" width="0.3046%" height="15" fill="rgb(247,139,11)" fg:x="373" fg:w="3"/><text x="38.1180%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.30%)</title><rect x="37.8680%" y="469" width="0.3046%" height="15" fill="rgb(243,99,6)" fg:x="373" fg:w="3"/><text x="38.1180%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.30%)</title><rect x="37.8680%" y="453" width="0.3046%" height="15" fill="rgb(230,168,48)" fg:x="373" fg:w="3"/><text x="38.1180%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="37.9695%" y="437" width="0.2030%" height="15" fill="rgb(238,227,13)" fg:x="374" fg:w="2"/><text x="38.2195%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="37.9695%" y="421" width="0.2030%" height="15" fill="rgb(209,109,13)" fg:x="374" fg:w="2"/><text x="38.2195%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.10%)</title><rect x="38.0711%" y="405" width="0.1015%" height="15" fill="rgb(228,195,1)" fg:x="375" fg:w="1"/><text x="38.3211%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="38.1726%" y="453" width="0.1015%" height="15" fill="rgb(230,218,0)" fg:x="376" fg:w="1"/><text x="38.4226%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.10%)</title><rect x="38.1726%" y="437" width="0.1015%" height="15" fill="rgb(206,1,45)" fg:x="376" fg:w="1"/><text x="38.4226%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (7 samples, 0.71%)</title><rect x="37.8680%" y="533" width="0.7107%" height="15" fill="rgb(209,124,26)" fg:x="373" fg:w="7"/><text x="38.1180%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.71%)</title><rect x="37.8680%" y="517" width="0.7107%" height="15" fill="rgb(220,59,8)" fg:x="373" fg:w="7"/><text x="38.1180%" y="527.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.41%)</title><rect x="38.1726%" y="501" width="0.4061%" height="15" fill="rgb(251,41,37)" fg:x="376" fg:w="4"/><text x="38.4226%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.41%)</title><rect x="38.1726%" y="485" width="0.4061%" height="15" fill="rgb(239,152,21)" fg:x="376" fg:w="4"/><text x="38.4226%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.41%)</title><rect x="38.1726%" y="469" width="0.4061%" height="15" fill="rgb(226,32,1)" fg:x="376" fg:w="4"/><text x="38.4226%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.30%)</title><rect x="38.2741%" y="453" width="0.3046%" height="15" fill="rgb(230,154,36)" fg:x="377" fg:w="3"/><text x="38.5241%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.30%)</title><rect x="38.2741%" y="437" width="0.3046%" height="15" fill="rgb(208,228,43)" fg:x="377" fg:w="3"/><text x="38.5241%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.30%)</title><rect x="38.2741%" y="421" width="0.3046%" height="15" fill="rgb(214,203,3)" fg:x="377" fg:w="3"/><text x="38.5241%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.30%)</title><rect x="38.2741%" y="405" width="0.3046%" height="15" fill="rgb(207,149,29)" fg:x="377" fg:w="3"/><text x="38.5241%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="38.3756%" y="389" width="0.2030%" height="15" fill="rgb(250,105,7)" fg:x="378" fg:w="2"/><text x="38.6256%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.20%)</title><rect x="38.3756%" y="373" width="0.2030%" height="15" fill="rgb(232,222,16)" fg:x="378" fg:w="2"/><text x="38.6256%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.20%)</title><rect x="38.3756%" y="357" width="0.2030%" height="15" fill="rgb(209,32,24)" fg:x="378" fg:w="2"/><text x="38.6256%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.10%)</title><rect x="38.4772%" y="341" width="0.1015%" height="15" fill="rgb(225,13,6)" fg:x="379" fg:w="1"/><text x="38.7272%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (8 samples, 0.81%)</title><rect x="37.8680%" y="549" width="0.8122%" height="15" fill="rgb(245,226,26)" fg:x="373" fg:w="8"/><text x="38.1180%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="38.5787%" y="533" width="0.1015%" height="15" fill="rgb(229,178,27)" fg:x="380" fg:w="1"/><text x="38.8287%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="38.5787%" y="517" width="0.1015%" height="15" fill="rgb(205,227,28)" fg:x="380" fg:w="1"/><text x="38.8287%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="38.5787%" y="501" width="0.1015%" height="15" fill="rgb(210,191,45)" fg:x="380" fg:w="1"/><text x="38.8287%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="38.5787%" y="485" width="0.1015%" height="15" fill="rgb(206,124,16)" fg:x="380" fg:w="1"/><text x="38.8287%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="38.5787%" y="469" width="0.1015%" height="15" fill="rgb(210,162,0)" fg:x="380" fg:w="1"/><text x="38.8287%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="38.5787%" y="453" width="0.1015%" height="15" fill="rgb(211,54,38)" fg:x="380" fg:w="1"/><text x="38.8287%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="38.5787%" y="437" width="0.1015%" height="15" fill="rgb(248,192,3)" fg:x="380" fg:w="1"/><text x="38.8287%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="38.5787%" y="421" width="0.1015%" height="15" fill="rgb(233,187,18)" fg:x="380" fg:w="1"/><text x="38.8287%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.10%)</title><rect x="38.6802%" y="549" width="0.1015%" height="15" fill="rgb(237,208,14)" fg:x="381" fg:w="1"/><text x="38.9302%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.10%)</title><rect x="38.6802%" y="533" width="0.1015%" height="15" fill="rgb(212,77,1)" fg:x="381" fg:w="1"/><text x="38.9302%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="38.6802%" y="517" width="0.1015%" height="15" fill="rgb(210,163,22)" fg:x="381" fg:w="1"/><text x="38.9302%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="38.7817%" y="485" width="0.1015%" height="15" fill="rgb(250,58,28)" fg:x="382" fg:w="1"/><text x="39.0317%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="38.7817%" y="469" width="0.1015%" height="15" fill="rgb(254,28,41)" fg:x="382" fg:w="1"/><text x="39.0317%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (2 samples, 0.20%)</title><rect x="38.7817%" y="533" width="0.2030%" height="15" fill="rgb(237,162,36)" fg:x="382" fg:w="2"/><text x="39.0317%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.20%)</title><rect x="38.7817%" y="517" width="0.2030%" height="15" fill="rgb(232,56,6)" fg:x="382" fg:w="2"/><text x="39.0317%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.20%)</title><rect x="38.7817%" y="501" width="0.2030%" height="15" fill="rgb(216,127,42)" fg:x="382" fg:w="2"/><text x="39.0317%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.10%)</title><rect x="38.8832%" y="485" width="0.1015%" height="15" fill="rgb(241,69,15)" fg:x="383" fg:w="1"/><text x="39.1332%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="38.8832%" y="469" width="0.1015%" height="15" fill="rgb(227,180,19)" fg:x="383" fg:w="1"/><text x="39.1332%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity (1 samples, 0.10%)</title><rect x="38.8832%" y="453" width="0.1015%" height="15" fill="rgb(231,188,29)" fg:x="383" fg:w="1"/><text x="39.1332%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.10%)</title><rect x="38.8832%" y="437" width="0.1015%" height="15" fill="rgb(224,176,27)" fg:x="383" fg:w="1"/><text x="39.1332%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.10%)</title><rect x="38.8832%" y="421" width="0.1015%" height="15" fill="rgb(249,214,19)" fg:x="383" fg:w="1"/><text x="39.1332%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="38.8832%" y="405" width="0.1015%" height="15" fill="rgb(240,0,4)" fg:x="383" fg:w="1"/><text x="39.1332%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="38.8832%" y="389" width="0.1015%" height="15" fill="rgb(233,28,41)" fg:x="383" fg:w="1"/><text x="39.1332%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="38.8832%" y="373" width="0.1015%" height="15" fill="rgb(220,90,51)" fg:x="383" fg:w="1"/><text x="39.1332%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="38.8832%" y="357" width="0.1015%" height="15" fill="rgb(250,52,22)" fg:x="383" fg:w="1"/><text x="39.1332%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.10%)</title><rect x="38.8832%" y="341" width="0.1015%" height="15" fill="rgb(231,152,36)" fg:x="383" fg:w="1"/><text x="39.1332%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="38.8832%" y="325" width="0.1015%" height="15" fill="rgb(250,218,4)" fg:x="383" fg:w="1"/><text x="39.1332%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="38.8832%" y="309" width="0.1015%" height="15" fill="rgb(210,38,21)" fg:x="383" fg:w="1"/><text x="39.1332%" y="319.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="38.9848%" y="501" width="0.1015%" height="15" fill="rgb(230,75,13)" fg:x="384" fg:w="1"/><text x="39.2348%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="38.9848%" y="485" width="0.1015%" height="15" fill="rgb(250,68,53)" fg:x="384" fg:w="1"/><text x="39.2348%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="38.9848%" y="469" width="0.1015%" height="15" fill="rgb(250,210,16)" fg:x="384" fg:w="1"/><text x="39.2348%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="38.9848%" y="453" width="0.1015%" height="15" fill="rgb(240,132,5)" fg:x="384" fg:w="1"/><text x="39.2348%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.20%)</title><rect x="38.9848%" y="517" width="0.2030%" height="15" fill="rgb(222,148,48)" fg:x="384" fg:w="2"/><text x="39.2348%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="39.0863%" y="501" width="0.1015%" height="15" fill="rgb(247,181,24)" fg:x="385" fg:w="1"/><text x="39.3363%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="39.0863%" y="485" width="0.1015%" height="15" fill="rgb(239,5,31)" fg:x="385" fg:w="1"/><text x="39.3363%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="39.0863%" y="469" width="0.1015%" height="15" fill="rgb(241,152,38)" fg:x="385" fg:w="1"/><text x="39.3363%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="39.0863%" y="453" width="0.1015%" height="15" fill="rgb(246,200,37)" fg:x="385" fg:w="1"/><text x="39.3363%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="39.0863%" y="437" width="0.1015%" height="15" fill="rgb(243,210,26)" fg:x="385" fg:w="1"/><text x="39.3363%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="39.0863%" y="421" width="0.1015%" height="15" fill="rgb(222,22,22)" fg:x="385" fg:w="1"/><text x="39.3363%" y="431.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (5 samples, 0.51%)</title><rect x="38.7817%" y="549" width="0.5076%" height="15" fill="rgb(208,129,28)" fg:x="382" fg:w="5"/><text x="39.0317%" y="559.50"></text></g><g><title>engine::session::Session::world (3 samples, 0.30%)</title><rect x="38.9848%" y="533" width="0.3046%" height="15" fill="rgb(254,169,28)" fg:x="384" fg:w="3"/><text x="39.2348%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.10%)</title><rect x="39.1878%" y="517" width="0.1015%" height="15" fill="rgb(225,45,17)" fg:x="386" fg:w="1"/><text x="39.4378%" y="527.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.20%)</title><rect x="39.2893%" y="549" width="0.2030%" height="15" fill="rgb(232,199,2)" fg:x="387" fg:w="2"/><text x="39.5393%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="39.3909%" y="533" width="0.1015%" height="15" fill="rgb(235,33,40)" fg:x="388" fg:w="1"/><text x="39.6409%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="39.3909%" y="517" width="0.1015%" height="15" fill="rgb(237,89,50)" fg:x="388" fg:w="1"/><text x="39.6409%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="39.3909%" y="501" width="0.1015%" height="15" fill="rgb(238,126,5)" fg:x="388" fg:w="1"/><text x="39.6409%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="39.3909%" y="485" width="0.1015%" height="15" fill="rgb(247,214,42)" fg:x="388" fg:w="1"/><text x="39.6409%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="39.4924%" y="533" width="0.1015%" height="15" fill="rgb(238,60,45)" fg:x="389" fg:w="1"/><text x="39.7424%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="39.5939%" y="533" width="0.1015%" height="15" fill="rgb(225,69,44)" fg:x="390" fg:w="1"/><text x="39.8439%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="39.6954%" y="501" width="0.1015%" height="15" fill="rgb(241,13,44)" fg:x="391" fg:w="1"/><text x="39.9454%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="39.6954%" y="485" width="0.1015%" height="15" fill="rgb(227,121,22)" fg:x="391" fg:w="1"/><text x="39.9454%" y="495.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (21 samples, 2.13%)</title><rect x="37.7665%" y="565" width="2.1320%" height="15" fill="rgb(231,160,23)" fg:x="372" fg:w="21"/><text x="38.0165%" y="575.50">e..</text></g><g><title>engine::users::model::username_to_key (4 samples, 0.41%)</title><rect x="39.4924%" y="549" width="0.4061%" height="15" fill="rgb(250,179,43)" fg:x="389" fg:w="4"/><text x="39.7424%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.20%)</title><rect x="39.6954%" y="533" width="0.2030%" height="15" fill="rgb(233,54,46)" fg:x="391" fg:w="2"/><text x="39.9454%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.20%)</title><rect x="39.6954%" y="517" width="0.2030%" height="15" fill="rgb(247,120,42)" fg:x="391" fg:w="2"/><text x="39.9454%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="39.7970%" y="501" width="0.1015%" height="15" fill="rgb(221,219,12)" fg:x="392" fg:w="1"/><text x="40.0470%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="39.7970%" y="485" width="0.1015%" height="15" fill="rgb(211,126,8)" fg:x="392" fg:w="1"/><text x="40.0470%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="39.7970%" y="469" width="0.1015%" height="15" fill="rgb(218,154,33)" fg:x="392" fg:w="1"/><text x="40.0470%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="39.7970%" y="453" width="0.1015%" height="15" fill="rgb(212,199,16)" fg:x="392" fg:w="1"/><text x="40.0470%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::evaluate (2 samples, 0.20%)</title><rect x="39.8985%" y="565" width="0.2030%" height="15" fill="rgb(236,215,46)" fg:x="393" fg:w="2"/><text x="40.1485%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.20%)</title><rect x="39.8985%" y="549" width="0.2030%" height="15" fill="rgb(232,32,22)" fg:x="393" fg:w="2"/><text x="40.1485%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.20%)</title><rect x="39.8985%" y="533" width="0.2030%" height="15" fill="rgb(234,79,15)" fg:x="393" fg:w="2"/><text x="40.1485%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.10%)</title><rect x="40.0000%" y="517" width="0.1015%" height="15" fill="rgb(235,187,47)" fg:x="394" fg:w="1"/><text x="40.2500%" y="527.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.10%)</title><rect x="40.0000%" y="501" width="0.1015%" height="15" fill="rgb(244,69,37)" fg:x="394" fg:w="1"/><text x="40.2500%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.10%)</title><rect x="40.0000%" y="485" width="0.1015%" height="15" fill="rgb(249,140,25)" fg:x="394" fg:w="1"/><text x="40.2500%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="40.7107%" y="469" width="0.3046%" height="15" fill="rgb(213,69,8)" fg:x="401" fg:w="3"/><text x="40.9607%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="40.8122%" y="453" width="0.2030%" height="15" fill="rgb(220,136,2)" fg:x="402" fg:w="2"/><text x="41.0622%" y="463.50"></text></g><g><title>__libc_free (5 samples, 0.51%)</title><rect x="41.0152%" y="469" width="0.5076%" height="15" fill="rgb(237,50,36)" fg:x="404" fg:w="5"/><text x="41.2652%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 1.22%)</title><rect x="40.7107%" y="485" width="1.2183%" height="15" fill="rgb(226,18,11)" fg:x="401" fg:w="12"/><text x="40.9607%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (4 samples, 0.41%)</title><rect x="41.5228%" y="469" width="0.4061%" height="15" fill="rgb(243,156,2)" fg:x="409" fg:w="4"/><text x="41.7728%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="41.6244%" y="453" width="0.3046%" height="15" fill="rgb(218,8,34)" fg:x="410" fg:w="3"/><text x="41.8744%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="41.8274%" y="437" width="0.1015%" height="15" fill="rgb(250,94,35)" fg:x="412" fg:w="1"/><text x="42.0774%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.93%)</title><rect x="40.3046%" y="501" width="1.9289%" height="15" fill="rgb(229,127,21)" fg:x="397" fg:w="19"/><text x="40.5546%" y="511.50">&lt;..</text></g><g><title>__libc_free (3 samples, 0.30%)</title><rect x="41.9289%" y="485" width="0.3046%" height="15" fill="rgb(234,49,5)" fg:x="413" fg:w="3"/><text x="42.1789%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynMessage&gt; (27 samples, 2.74%)</title><rect x="40.2030%" y="533" width="2.7411%" height="15" fill="rgb(248,12,16)" fg:x="396" fg:w="27"/><text x="40.4530%" y="543.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.74%)</title><rect x="40.2030%" y="517" width="2.7411%" height="15" fill="rgb(208,220,31)" fg:x="396" fg:w="27"/><text x="40.4530%" y="527.50">&lt;h..</text></g><g><title>__libc_free (7 samples, 0.71%)</title><rect x="42.2335%" y="501" width="0.7107%" height="15" fill="rgb(243,184,0)" fg:x="416" fg:w="7"/><text x="42.4835%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="43.1472%" y="485" width="0.1015%" height="15" fill="rgb(217,38,21)" fg:x="425" fg:w="1"/><text x="43.3972%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.10%)</title><rect x="43.2487%" y="485" width="0.1015%" height="15" fill="rgb(239,120,45)" fg:x="426" fg:w="1"/><text x="43.4987%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="43.1472%" y="501" width="0.3046%" height="15" fill="rgb(235,33,2)" fg:x="425" fg:w="3"/><text x="43.3972%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.10%)</title><rect x="43.3503%" y="485" width="0.1015%" height="15" fill="rgb(249,161,5)" fg:x="427" fg:w="1"/><text x="43.6003%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="43.3503%" y="469" width="0.1015%" height="15" fill="rgb(250,165,48)" fg:x="427" fg:w="1"/><text x="43.6003%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="43.3503%" y="453" width="0.1015%" height="15" fill="rgb(221,23,45)" fg:x="427" fg:w="1"/><text x="43.6003%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="43.3503%" y="437" width="0.1015%" height="15" fill="rgb(217,108,46)" fg:x="427" fg:w="1"/><text x="43.6003%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.10%)</title><rect x="43.3503%" y="421" width="0.1015%" height="15" fill="rgb(254,26,35)" fg:x="427" fg:w="1"/><text x="43.6003%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.10%)</title><rect x="43.3503%" y="405" width="0.1015%" height="15" fill="rgb(218,223,28)" fg:x="427" fg:w="1"/><text x="43.6003%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.41%)</title><rect x="43.4518%" y="501" width="0.4061%" height="15" fill="rgb(242,27,47)" fg:x="428" fg:w="4"/><text x="43.7018%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.41%)</title><rect x="43.4518%" y="485" width="0.4061%" height="15" fill="rgb(218,39,35)" fg:x="428" fg:w="4"/><text x="43.7018%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.30%)</title><rect x="43.5533%" y="469" width="0.3046%" height="15" fill="rgb(232,127,16)" fg:x="429" fg:w="3"/><text x="43.8033%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.30%)</title><rect x="43.5533%" y="453" width="0.3046%" height="15" fill="rgb(231,219,51)" fg:x="429" fg:w="3"/><text x="43.8033%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="43.7563%" y="437" width="0.1015%" height="15" fill="rgb(217,220,46)" fg:x="431" fg:w="1"/><text x="44.0063%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="43.8579%" y="501" width="0.2030%" height="15" fill="rgb(230,75,1)" fg:x="432" fg:w="2"/><text x="44.1079%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="44.0609%" y="453" width="0.2030%" height="15" fill="rgb(218,2,8)" fg:x="434" fg:w="2"/><text x="44.3109%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.41%)</title><rect x="44.0609%" y="485" width="0.4061%" height="15" fill="rgb(206,111,30)" fg:x="434" fg:w="4"/><text x="44.3109%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (4 samples, 0.41%)</title><rect x="44.0609%" y="469" width="0.4061%" height="15" fill="rgb(209,135,6)" fg:x="434" fg:w="4"/><text x="44.3109%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (2 samples, 0.20%)</title><rect x="44.2640%" y="453" width="0.2030%" height="15" fill="rgb(205,169,10)" fg:x="436" fg:w="2"/><text x="44.5140%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="44.2640%" y="437" width="0.2030%" height="15" fill="rgb(212,204,38)" fg:x="436" fg:w="2"/><text x="44.5140%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="44.0609%" y="501" width="0.5076%" height="15" fill="rgb(205,199,14)" fg:x="434" fg:w="5"/><text x="44.3109%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="44.4670%" y="485" width="0.1015%" height="15" fill="rgb(212,4,6)" fg:x="438" fg:w="1"/><text x="44.7170%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.10%)</title><rect x="44.9746%" y="357" width="0.1015%" height="15" fill="rgb(250,15,10)" fg:x="443" fg:w="1"/><text x="45.2246%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="44.9746%" y="341" width="0.1015%" height="15" fill="rgb(212,49,51)" fg:x="443" fg:w="1"/><text x="45.2246%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="44.9746%" y="325" width="0.1015%" height="15" fill="rgb(235,21,9)" fg:x="443" fg:w="1"/><text x="45.2246%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="44.9746%" y="309" width="0.1015%" height="15" fill="rgb(251,31,32)" fg:x="443" fg:w="1"/><text x="45.2246%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="44.9746%" y="293" width="0.1015%" height="15" fill="rgb(246,23,9)" fg:x="443" fg:w="1"/><text x="45.2246%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="44.9746%" y="277" width="0.1015%" height="15" fill="rgb(225,216,14)" fg:x="443" fg:w="1"/><text x="45.2246%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="44.9746%" y="261" width="0.1015%" height="15" fill="rgb(215,200,26)" fg:x="443" fg:w="1"/><text x="45.2246%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="44.9746%" y="245" width="0.1015%" height="15" fill="rgb(237,130,47)" fg:x="443" fg:w="1"/><text x="45.2246%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="44.9746%" y="229" width="0.1015%" height="15" fill="rgb(247,74,14)" fg:x="443" fg:w="1"/><text x="45.2246%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="44.9746%" y="213" width="0.1015%" height="15" fill="rgb(254,97,46)" fg:x="443" fg:w="1"/><text x="45.2246%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="44.9746%" y="197" width="0.1015%" height="15" fill="rgb(234,191,1)" fg:x="443" fg:w="1"/><text x="45.2246%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="44.9746%" y="181" width="0.1015%" height="15" fill="rgb(215,165,14)" fg:x="443" fg:w="1"/><text x="45.2246%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="44.9746%" y="165" width="0.1015%" height="15" fill="rgb(230,182,6)" fg:x="443" fg:w="1"/><text x="45.2246%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.0761%" y="341" width="0.1015%" height="15" fill="rgb(210,127,39)" fg:x="444" fg:w="1"/><text x="45.3261%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.0761%" y="325" width="0.1015%" height="15" fill="rgb(223,212,51)" fg:x="444" fg:w="1"/><text x="45.3261%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="45.0761%" y="309" width="0.1015%" height="15" fill="rgb(226,176,43)" fg:x="444" fg:w="1"/><text x="45.3261%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="45.0761%" y="293" width="0.1015%" height="15" fill="rgb(222,155,4)" fg:x="444" fg:w="1"/><text x="45.3261%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="45.0761%" y="277" width="0.1015%" height="15" fill="rgb(215,149,7)" fg:x="444" fg:w="1"/><text x="45.3261%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="45.0761%" y="261" width="0.1015%" height="15" fill="rgb(252,199,23)" fg:x="444" fg:w="1"/><text x="45.3261%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="45.0761%" y="245" width="0.1015%" height="15" fill="rgb(245,52,29)" fg:x="444" fg:w="1"/><text x="45.3261%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="45.0761%" y="229" width="0.1015%" height="15" fill="rgb(221,228,19)" fg:x="444" fg:w="1"/><text x="45.3261%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="45.0761%" y="213" width="0.1015%" height="15" fill="rgb(253,101,6)" fg:x="444" fg:w="1"/><text x="45.3261%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="45.0761%" y="197" width="0.1015%" height="15" fill="rgb(211,130,8)" fg:x="444" fg:w="1"/><text x="45.3261%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="45.0761%" y="181" width="0.1015%" height="15" fill="rgb(238,37,53)" fg:x="444" fg:w="1"/><text x="45.3261%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="45.0761%" y="165" width="0.1015%" height="15" fill="rgb(235,145,5)" fg:x="444" fg:w="1"/><text x="45.3261%" y="175.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="45.1777%" y="229" width="0.1015%" height="15" fill="rgb(244,12,43)" fg:x="445" fg:w="1"/><text x="45.4277%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="44.8731%" y="421" width="0.5076%" height="15" fill="rgb(246,195,24)" fg:x="442" fg:w="5"/><text x="45.1231%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.41%)</title><rect x="44.9746%" y="405" width="0.4061%" height="15" fill="rgb(235,163,6)" fg:x="443" fg:w="4"/><text x="45.2246%" y="415.50"></text></g><g><title>kernel::model::EntityRef::into_entry (4 samples, 0.41%)</title><rect x="44.9746%" y="389" width="0.4061%" height="15" fill="rgb(236,218,17)" fg:x="443" fg:w="4"/><text x="45.2246%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.41%)</title><rect x="44.9746%" y="373" width="0.4061%" height="15" fill="rgb(235,12,38)" fg:x="443" fg:w="4"/><text x="45.2246%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.30%)</title><rect x="45.0761%" y="357" width="0.3046%" height="15" fill="rgb(225,195,33)" fg:x="444" fg:w="3"/><text x="45.3261%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.20%)</title><rect x="45.1777%" y="341" width="0.2030%" height="15" fill="rgb(238,54,35)" fg:x="445" fg:w="2"/><text x="45.4277%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="45.1777%" y="325" width="0.2030%" height="15" fill="rgb(238,33,7)" fg:x="445" fg:w="2"/><text x="45.4277%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="45.1777%" y="309" width="0.2030%" height="15" fill="rgb(245,5,14)" fg:x="445" fg:w="2"/><text x="45.4277%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.20%)</title><rect x="45.1777%" y="293" width="0.2030%" height="15" fill="rgb(251,95,31)" fg:x="445" fg:w="2"/><text x="45.4277%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.20%)</title><rect x="45.1777%" y="277" width="0.2030%" height="15" fill="rgb(222,15,46)" fg:x="445" fg:w="2"/><text x="45.4277%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.20%)</title><rect x="45.1777%" y="261" width="0.2030%" height="15" fill="rgb(226,182,24)" fg:x="445" fg:w="2"/><text x="45.4277%" y="271.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="45.1777%" y="245" width="0.2030%" height="15" fill="rgb(229,105,41)" fg:x="445" fg:w="2"/><text x="45.4277%" y="255.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="45.2792%" y="229" width="0.1015%" height="15" fill="rgb(216,99,53)" fg:x="446" fg:w="1"/><text x="45.5292%" y="239.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="45.2792%" y="213" width="0.1015%" height="15" fill="rgb(253,26,20)" fg:x="446" fg:w="1"/><text x="45.5292%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.10%)</title><rect x="45.3807%" y="405" width="0.1015%" height="15" fill="rgb(249,155,28)" fg:x="447" fg:w="1"/><text x="45.6307%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="45.5838%" y="357" width="0.1015%" height="15" fill="rgb(241,221,2)" fg:x="449" fg:w="1"/><text x="45.8338%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="45.5838%" y="341" width="0.1015%" height="15" fill="rgb(219,124,6)" fg:x="449" fg:w="1"/><text x="45.8338%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.5838%" y="325" width="0.1015%" height="15" fill="rgb(233,37,6)" fg:x="449" fg:w="1"/><text x="45.8338%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.5838%" y="309" width="0.1015%" height="15" fill="rgb(238,20,14)" fg:x="449" fg:w="1"/><text x="45.8338%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="45.5838%" y="293" width="0.1015%" height="15" fill="rgb(232,106,27)" fg:x="449" fg:w="1"/><text x="45.8338%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="45.5838%" y="277" width="0.1015%" height="15" fill="rgb(246,157,24)" fg:x="449" fg:w="1"/><text x="45.8338%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="45.5838%" y="261" width="0.1015%" height="15" fill="rgb(214,153,10)" fg:x="449" fg:w="1"/><text x="45.8338%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="45.5838%" y="245" width="0.1015%" height="15" fill="rgb(212,94,6)" fg:x="449" fg:w="1"/><text x="45.8338%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="45.5838%" y="229" width="0.1015%" height="15" fill="rgb(254,25,27)" fg:x="449" fg:w="1"/><text x="45.8338%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="45.5838%" y="213" width="0.1015%" height="15" fill="rgb(250,43,52)" fg:x="449" fg:w="1"/><text x="45.8338%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="45.5838%" y="197" width="0.1015%" height="15" fill="rgb(221,226,40)" fg:x="449" fg:w="1"/><text x="45.8338%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="45.5838%" y="181" width="0.1015%" height="15" fill="rgb(235,162,34)" fg:x="449" fg:w="1"/><text x="45.8338%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="45.5838%" y="165" width="0.1015%" height="15" fill="rgb(239,24,26)" fg:x="449" fg:w="1"/><text x="45.8338%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="45.5838%" y="149" width="0.1015%" height="15" fill="rgb(244,226,11)" fg:x="449" fg:w="1"/><text x="45.8338%" y="159.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.10%)</title><rect x="45.6853%" y="341" width="0.1015%" height="15" fill="rgb(225,23,10)" fg:x="450" fg:w="1"/><text x="45.9353%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.6853%" y="325" width="0.1015%" height="15" fill="rgb(249,125,6)" fg:x="450" fg:w="1"/><text x="45.9353%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.6853%" y="309" width="0.1015%" height="15" fill="rgb(246,212,12)" fg:x="450" fg:w="1"/><text x="45.9353%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="45.6853%" y="293" width="0.1015%" height="15" fill="rgb(230,43,32)" fg:x="450" fg:w="1"/><text x="45.9353%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="45.6853%" y="277" width="0.1015%" height="15" fill="rgb(210,95,23)" fg:x="450" fg:w="1"/><text x="45.9353%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="45.6853%" y="261" width="0.1015%" height="15" fill="rgb(229,103,33)" fg:x="450" fg:w="1"/><text x="45.9353%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="45.6853%" y="245" width="0.1015%" height="15" fill="rgb(222,104,27)" fg:x="450" fg:w="1"/><text x="45.9353%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="45.6853%" y="229" width="0.1015%" height="15" fill="rgb(239,221,23)" fg:x="450" fg:w="1"/><text x="45.9353%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="45.6853%" y="213" width="0.1015%" height="15" fill="rgb(222,98,21)" fg:x="450" fg:w="1"/><text x="45.9353%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="45.6853%" y="197" width="0.1015%" height="15" fill="rgb(231,101,20)" fg:x="450" fg:w="1"/><text x="45.9353%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="45.6853%" y="181" width="0.1015%" height="15" fill="rgb(215,150,22)" fg:x="450" fg:w="1"/><text x="45.9353%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="45.6853%" y="165" width="0.1015%" height="15" fill="rgb(248,3,34)" fg:x="450" fg:w="1"/><text x="45.9353%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="45.6853%" y="149" width="0.1015%" height="15" fill="rgb(220,141,21)" fg:x="450" fg:w="1"/><text x="45.9353%" y="159.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="45.7868%" y="325" width="0.1015%" height="15" fill="rgb(223,41,48)" fg:x="451" fg:w="1"/><text x="46.0368%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.7868%" y="309" width="0.1015%" height="15" fill="rgb(247,12,5)" fg:x="451" fg:w="1"/><text x="46.0368%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.7868%" y="293" width="0.1015%" height="15" fill="rgb(206,173,10)" fg:x="451" fg:w="1"/><text x="46.0368%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="45.7868%" y="277" width="0.1015%" height="15" fill="rgb(233,214,37)" fg:x="451" fg:w="1"/><text x="46.0368%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="45.7868%" y="261" width="0.1015%" height="15" fill="rgb(238,86,43)" fg:x="451" fg:w="1"/><text x="46.0368%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="45.7868%" y="245" width="0.1015%" height="15" fill="rgb(212,182,8)" fg:x="451" fg:w="1"/><text x="46.0368%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="45.7868%" y="229" width="0.1015%" height="15" fill="rgb(240,91,47)" fg:x="451" fg:w="1"/><text x="46.0368%" y="239.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.10%)</title><rect x="45.8883%" y="309" width="0.1015%" height="15" fill="rgb(209,138,26)" fg:x="452" fg:w="1"/><text x="46.1383%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.10%)</title><rect x="45.8883%" y="293" width="0.1015%" height="15" fill="rgb(231,163,20)" fg:x="452" fg:w="1"/><text x="46.1383%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="45.8883%" y="277" width="0.1015%" height="15" fill="rgb(214,91,54)" fg:x="452" fg:w="1"/><text x="46.1383%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="45.8883%" y="261" width="0.1015%" height="15" fill="rgb(230,32,17)" fg:x="452" fg:w="1"/><text x="46.1383%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="45.8883%" y="245" width="0.1015%" height="15" fill="rgb(231,34,34)" fg:x="452" fg:w="1"/><text x="46.1383%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="45.8883%" y="229" width="0.1015%" height="15" fill="rgb(224,228,27)" fg:x="452" fg:w="1"/><text x="46.1383%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.10%)</title><rect x="45.8883%" y="213" width="0.1015%" height="15" fill="rgb(219,35,40)" fg:x="452" fg:w="1"/><text x="46.1383%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="45.8883%" y="197" width="0.1015%" height="15" fill="rgb(234,42,8)" fg:x="452" fg:w="1"/><text x="46.1383%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="45.8883%" y="181" width="0.1015%" height="15" fill="rgb(226,75,22)" fg:x="452" fg:w="1"/><text x="46.1383%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="45.8883%" y="165" width="0.1015%" height="15" fill="rgb(242,203,28)" fg:x="452" fg:w="1"/><text x="46.1383%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="46.0914%" y="229" width="0.1015%" height="15" fill="rgb(221,3,9)" fg:x="454" fg:w="1"/><text x="46.3414%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.71%)</title><rect x="45.6853%" y="357" width="0.7107%" height="15" fill="rgb(214,34,31)" fg:x="450" fg:w="7"/><text x="45.9353%" y="367.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.61%)</title><rect x="45.7868%" y="341" width="0.6091%" height="15" fill="rgb(252,119,15)" fg:x="451" fg:w="6"/><text x="46.0368%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.51%)</title><rect x="45.8883%" y="325" width="0.5076%" height="15" fill="rgb(244,224,31)" fg:x="452" fg:w="5"/><text x="46.1383%" y="335.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.41%)</title><rect x="45.9898%" y="309" width="0.4061%" height="15" fill="rgb(215,8,51)" fg:x="453" fg:w="4"/><text x="46.2398%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.41%)</title><rect x="45.9898%" y="293" width="0.4061%" height="15" fill="rgb(207,24,1)" fg:x="453" fg:w="4"/><text x="46.2398%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.41%)</title><rect x="45.9898%" y="277" width="0.4061%" height="15" fill="rgb(245,90,0)" fg:x="453" fg:w="4"/><text x="46.2398%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.41%)</title><rect x="45.9898%" y="261" width="0.4061%" height="15" fill="rgb(246,43,48)" fg:x="453" fg:w="4"/><text x="46.2398%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.41%)</title><rect x="45.9898%" y="245" width="0.4061%" height="15" fill="rgb(252,218,10)" fg:x="453" fg:w="4"/><text x="46.2398%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="46.1929%" y="229" width="0.2030%" height="15" fill="rgb(231,24,35)" fg:x="455" fg:w="2"/><text x="46.4429%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.20%)</title><rect x="46.1929%" y="213" width="0.2030%" height="15" fill="rgb(225,66,19)" fg:x="455" fg:w="2"/><text x="46.4429%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="46.2944%" y="197" width="0.1015%" height="15" fill="rgb(214,96,51)" fg:x="456" fg:w="1"/><text x="46.5444%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="46.2944%" y="181" width="0.1015%" height="15" fill="rgb(251,151,47)" fg:x="456" fg:w="1"/><text x="46.5444%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.10%)</title><rect x="46.3959%" y="357" width="0.1015%" height="15" fill="rgb(236,79,14)" fg:x="457" fg:w="1"/><text x="46.6459%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 1.73%)</title><rect x="44.8731%" y="437" width="1.7259%" height="15" fill="rgb(210,205,11)" fg:x="442" fg:w="17"/><text x="45.1231%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (12 samples, 1.22%)</title><rect x="45.3807%" y="421" width="1.2183%" height="15" fill="rgb(233,142,53)" fg:x="447" fg:w="12"/><text x="45.6307%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (11 samples, 1.12%)</title><rect x="45.4822%" y="405" width="1.1168%" height="15" fill="rgb(212,116,48)" fg:x="448" fg:w="11"/><text x="45.7322%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (11 samples, 1.12%)</title><rect x="45.4822%" y="389" width="1.1168%" height="15" fill="rgb(234,55,33)" fg:x="448" fg:w="11"/><text x="45.7322%" y="399.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 1.02%)</title><rect x="45.5838%" y="373" width="1.0152%" height="15" fill="rgb(253,92,27)" fg:x="449" fg:w="10"/><text x="45.8338%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.10%)</title><rect x="46.4975%" y="357" width="0.1015%" height="15" fill="rgb(220,7,35)" fg:x="458" fg:w="1"/><text x="46.7475%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.20%)</title><rect x="46.7005%" y="405" width="0.2030%" height="15" fill="rgb(246,124,6)" fg:x="460" fg:w="2"/><text x="46.9505%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="46.7005%" y="389" width="0.2030%" height="15" fill="rgb(212,111,51)" fg:x="460" fg:w="2"/><text x="46.9505%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="46.8020%" y="373" width="0.1015%" height="15" fill="rgb(253,116,7)" fg:x="461" fg:w="1"/><text x="47.0520%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="46.8020%" y="357" width="0.1015%" height="15" fill="rgb(213,145,18)" fg:x="461" fg:w="1"/><text x="47.0520%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="46.8020%" y="341" width="0.1015%" height="15" fill="rgb(219,149,7)" fg:x="461" fg:w="1"/><text x="47.0520%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="46.8020%" y="325" width="0.1015%" height="15" fill="rgb(225,156,20)" fg:x="461" fg:w="1"/><text x="47.0520%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="46.8020%" y="309" width="0.1015%" height="15" fill="rgb(211,98,19)" fg:x="461" fg:w="1"/><text x="47.0520%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="46.8020%" y="293" width="0.1015%" height="15" fill="rgb(231,192,31)" fg:x="461" fg:w="1"/><text x="47.0520%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="46.8020%" y="277" width="0.1015%" height="15" fill="rgb(249,95,19)" fg:x="461" fg:w="1"/><text x="47.0520%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="46.8020%" y="261" width="0.1015%" height="15" fill="rgb(247,101,36)" fg:x="461" fg:w="1"/><text x="47.0520%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="46.8020%" y="245" width="0.1015%" height="15" fill="rgb(221,45,43)" fg:x="461" fg:w="1"/><text x="47.0520%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="46.8020%" y="229" width="0.1015%" height="15" fill="rgb(220,42,1)" fg:x="461" fg:w="1"/><text x="47.0520%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="46.8020%" y="213" width="0.1015%" height="15" fill="rgb(236,19,24)" fg:x="461" fg:w="1"/><text x="47.0520%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="46.8020%" y="197" width="0.1015%" height="15" fill="rgb(225,192,6)" fg:x="461" fg:w="1"/><text x="47.0520%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="46.8020%" y="181" width="0.1015%" height="15" fill="rgb(242,30,19)" fg:x="461" fg:w="1"/><text x="47.0520%" y="191.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (2 samples, 0.20%)</title><rect x="47.0051%" y="325" width="0.2030%" height="15" fill="rgb(240,36,6)" fg:x="463" fg:w="2"/><text x="47.2551%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="47.0051%" y="309" width="0.2030%" height="15" fill="rgb(246,40,28)" fg:x="463" fg:w="2"/><text x="47.2551%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="47.1066%" y="293" width="0.1015%" height="15" fill="rgb(225,155,33)" fg:x="464" fg:w="1"/><text x="47.3566%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="47.1066%" y="277" width="0.1015%" height="15" fill="rgb(240,65,18)" fg:x="464" fg:w="1"/><text x="47.3566%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="47.1066%" y="261" width="0.1015%" height="15" fill="rgb(217,0,48)" fg:x="464" fg:w="1"/><text x="47.3566%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="47.1066%" y="245" width="0.1015%" height="15" fill="rgb(217,80,15)" fg:x="464" fg:w="1"/><text x="47.3566%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="47.1066%" y="229" width="0.1015%" height="15" fill="rgb(253,43,51)" fg:x="464" fg:w="1"/><text x="47.3566%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="47.1066%" y="213" width="0.1015%" height="15" fill="rgb(246,60,4)" fg:x="464" fg:w="1"/><text x="47.3566%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="47.1066%" y="197" width="0.1015%" height="15" fill="rgb(230,40,54)" fg:x="464" fg:w="1"/><text x="47.3566%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="47.1066%" y="181" width="0.1015%" height="15" fill="rgb(208,20,44)" fg:x="464" fg:w="1"/><text x="47.3566%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="47.1066%" y="165" width="0.1015%" height="15" fill="rgb(230,22,22)" fg:x="464" fg:w="1"/><text x="47.3566%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="47.1066%" y="149" width="0.1015%" height="15" fill="rgb(207,57,4)" fg:x="464" fg:w="1"/><text x="47.3566%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="47.1066%" y="133" width="0.1015%" height="15" fill="rgb(242,130,33)" fg:x="464" fg:w="1"/><text x="47.3566%" y="143.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.41%)</title><rect x="46.9036%" y="405" width="0.4061%" height="15" fill="rgb(218,66,43)" fg:x="462" fg:w="4"/><text x="47.1536%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.41%)</title><rect x="46.9036%" y="389" width="0.4061%" height="15" fill="rgb(236,105,16)" fg:x="462" fg:w="4"/><text x="47.1536%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.41%)</title><rect x="46.9036%" y="373" width="0.4061%" height="15" fill="rgb(230,46,15)" fg:x="462" fg:w="4"/><text x="47.1536%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.41%)</title><rect x="46.9036%" y="357" width="0.4061%" height="15" fill="rgb(251,172,40)" fg:x="462" fg:w="4"/><text x="47.1536%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.41%)</title><rect x="46.9036%" y="341" width="0.4061%" height="15" fill="rgb(225,217,32)" fg:x="462" fg:w="4"/><text x="47.1536%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="47.2081%" y="325" width="0.1015%" height="15" fill="rgb(243,10,29)" fg:x="465" fg:w="1"/><text x="47.4581%" y="335.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="47.2081%" y="309" width="0.1015%" height="15" fill="rgb(207,102,10)" fg:x="465" fg:w="1"/><text x="47.4581%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="47.3096%" y="405" width="0.1015%" height="15" fill="rgb(241,125,5)" fg:x="466" fg:w="1"/><text x="47.5596%" y="415.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (30 samples, 3.05%)</title><rect x="44.7716%" y="453" width="3.0457%" height="15" fill="rgb(230,125,29)" fg:x="441" fg:w="30"/><text x="45.0216%" y="463.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 1.22%)</title><rect x="46.5990%" y="437" width="1.2183%" height="15" fill="rgb(223,65,44)" fg:x="459" fg:w="12"/><text x="46.8490%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (12 samples, 1.22%)</title><rect x="46.5990%" y="421" width="1.2183%" height="15" fill="rgb(224,188,28)" fg:x="459" fg:w="12"/><text x="46.8490%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.41%)</title><rect x="47.4112%" y="405" width="0.4061%" height="15" fill="rgb(254,197,27)" fg:x="467" fg:w="4"/><text x="47.6612%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.41%)</title><rect x="47.4112%" y="389" width="0.4061%" height="15" fill="rgb(220,200,25)" fg:x="467" fg:w="4"/><text x="47.6612%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.30%)</title><rect x="47.5127%" y="373" width="0.3046%" height="15" fill="rgb(239,225,54)" fg:x="468" fg:w="3"/><text x="47.7627%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.30%)</title><rect x="47.5127%" y="357" width="0.3046%" height="15" fill="rgb(211,59,40)" fg:x="468" fg:w="3"/><text x="47.7627%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.30%)</title><rect x="47.5127%" y="341" width="0.3046%" height="15" fill="rgb(213,176,46)" fg:x="468" fg:w="3"/><text x="47.7627%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="47.6142%" y="325" width="0.2030%" height="15" fill="rgb(226,99,4)" fg:x="469" fg:w="2"/><text x="47.8642%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="47.6142%" y="309" width="0.2030%" height="15" fill="rgb(239,203,43)" fg:x="469" fg:w="2"/><text x="47.8642%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.20%)</title><rect x="47.6142%" y="293" width="0.2030%" height="15" fill="rgb(246,1,45)" fg:x="469" fg:w="2"/><text x="47.8642%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="47.8173%" y="437" width="0.1015%" height="15" fill="rgb(231,42,52)" fg:x="471" fg:w="1"/><text x="48.0673%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.20%)</title><rect x="47.9188%" y="437" width="0.2030%" height="15" fill="rgb(240,13,50)" fg:x="472" fg:w="2"/><text x="48.1688%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="48.0203%" y="421" width="0.1015%" height="15" fill="rgb(225,81,14)" fg:x="473" fg:w="1"/><text x="48.2703%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.4264%" y="389" width="0.1015%" height="15" fill="rgb(216,182,23)" fg:x="477" fg:w="1"/><text x="48.6764%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.4264%" y="373" width="0.1015%" height="15" fill="rgb(233,137,19)" fg:x="477" fg:w="1"/><text x="48.6764%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="48.4264%" y="357" width="0.1015%" height="15" fill="rgb(242,61,46)" fg:x="477" fg:w="1"/><text x="48.6764%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="48.4264%" y="341" width="0.1015%" height="15" fill="rgb(221,168,51)" fg:x="477" fg:w="1"/><text x="48.6764%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="48.4264%" y="325" width="0.1015%" height="15" fill="rgb(238,48,15)" fg:x="477" fg:w="1"/><text x="48.6764%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="48.4264%" y="309" width="0.1015%" height="15" fill="rgb(216,13,16)" fg:x="477" fg:w="1"/><text x="48.6764%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="48.4264%" y="293" width="0.1015%" height="15" fill="rgb(223,185,34)" fg:x="477" fg:w="1"/><text x="48.6764%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="48.4264%" y="277" width="0.1015%" height="15" fill="rgb(228,94,42)" fg:x="477" fg:w="1"/><text x="48.6764%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="48.4264%" y="261" width="0.1015%" height="15" fill="rgb(218,166,43)" fg:x="477" fg:w="1"/><text x="48.6764%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="48.4264%" y="245" width="0.1015%" height="15" fill="rgb(232,30,50)" fg:x="477" fg:w="1"/><text x="48.6764%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="48.4264%" y="229" width="0.1015%" height="15" fill="rgb(245,206,45)" fg:x="477" fg:w="1"/><text x="48.6764%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="48.5279%" y="389" width="0.2030%" height="15" fill="rgb(220,56,22)" fg:x="478" fg:w="2"/><text x="48.7779%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="48.6294%" y="373" width="0.1015%" height="15" fill="rgb(239,129,38)" fg:x="479" fg:w="1"/><text x="48.8794%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.6294%" y="357" width="0.1015%" height="15" fill="rgb(207,68,41)" fg:x="479" fg:w="1"/><text x="48.8794%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.6294%" y="341" width="0.1015%" height="15" fill="rgb(221,21,7)" fg:x="479" fg:w="1"/><text x="48.8794%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="48.6294%" y="325" width="0.1015%" height="15" fill="rgb(240,33,25)" fg:x="479" fg:w="1"/><text x="48.8794%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="48.6294%" y="309" width="0.1015%" height="15" fill="rgb(242,119,10)" fg:x="479" fg:w="1"/><text x="48.8794%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="48.6294%" y="293" width="0.1015%" height="15" fill="rgb(214,149,40)" fg:x="479" fg:w="1"/><text x="48.8794%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="48.6294%" y="277" width="0.1015%" height="15" fill="rgb(228,25,36)" fg:x="479" fg:w="1"/><text x="48.8794%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="48.6294%" y="261" width="0.1015%" height="15" fill="rgb(222,59,15)" fg:x="479" fg:w="1"/><text x="48.8794%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.41%)</title><rect x="48.4264%" y="405" width="0.4061%" height="15" fill="rgb(218,170,0)" fg:x="477" fg:w="4"/><text x="48.6764%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="48.7310%" y="389" width="0.1015%" height="15" fill="rgb(232,173,23)" fg:x="480" fg:w="1"/><text x="48.9810%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.10%)</title><rect x="49.1371%" y="325" width="0.1015%" height="15" fill="rgb(218,116,1)" fg:x="484" fg:w="1"/><text x="49.3871%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="49.1371%" y="309" width="0.1015%" height="15" fill="rgb(207,34,4)" fg:x="484" fg:w="1"/><text x="49.3871%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="49.1371%" y="293" width="0.1015%" height="15" fill="rgb(229,54,52)" fg:x="484" fg:w="1"/><text x="49.3871%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="49.1371%" y="277" width="0.1015%" height="15" fill="rgb(211,86,23)" fg:x="484" fg:w="1"/><text x="49.3871%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="49.1371%" y="261" width="0.1015%" height="15" fill="rgb(254,153,34)" fg:x="484" fg:w="1"/><text x="49.3871%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="49.1371%" y="245" width="0.1015%" height="15" fill="rgb(219,220,14)" fg:x="484" fg:w="1"/><text x="49.3871%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="49.1371%" y="229" width="0.1015%" height="15" fill="rgb(247,8,26)" fg:x="484" fg:w="1"/><text x="49.3871%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="49.1371%" y="213" width="0.1015%" height="15" fill="rgb(213,129,42)" fg:x="484" fg:w="1"/><text x="49.3871%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="49.1371%" y="197" width="0.1015%" height="15" fill="rgb(225,95,41)" fg:x="484" fg:w="1"/><text x="49.3871%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="49.1371%" y="181" width="0.1015%" height="15" fill="rgb(215,134,24)" fg:x="484" fg:w="1"/><text x="49.3871%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="49.1371%" y="165" width="0.1015%" height="15" fill="rgb(235,23,54)" fg:x="484" fg:w="1"/><text x="49.3871%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="49.1371%" y="149" width="0.1015%" height="15" fill="rgb(229,96,31)" fg:x="484" fg:w="1"/><text x="49.3871%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="49.1371%" y="133" width="0.1015%" height="15" fill="rgb(206,111,12)" fg:x="484" fg:w="1"/><text x="49.3871%" y="143.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.10%)</title><rect x="49.2386%" y="309" width="0.1015%" height="15" fill="rgb(222,177,8)" fg:x="485" fg:w="1"/><text x="49.4886%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="49.2386%" y="293" width="0.1015%" height="15" fill="rgb(251,36,52)" fg:x="485" fg:w="1"/><text x="49.4886%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="49.2386%" y="277" width="0.1015%" height="15" fill="rgb(216,182,29)" fg:x="485" fg:w="1"/><text x="49.4886%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="49.2386%" y="261" width="0.1015%" height="15" fill="rgb(241,145,50)" fg:x="485" fg:w="1"/><text x="49.4886%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="49.2386%" y="245" width="0.1015%" height="15" fill="rgb(231,71,35)" fg:x="485" fg:w="1"/><text x="49.4886%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="49.2386%" y="229" width="0.1015%" height="15" fill="rgb(218,22,17)" fg:x="485" fg:w="1"/><text x="49.4886%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="49.2386%" y="213" width="0.1015%" height="15" fill="rgb(225,227,6)" fg:x="485" fg:w="1"/><text x="49.4886%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="49.2386%" y="197" width="0.1015%" height="15" fill="rgb(224,204,17)" fg:x="485" fg:w="1"/><text x="49.4886%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="49.4416%" y="245" width="0.1015%" height="15" fill="rgb(227,61,28)" fg:x="487" fg:w="1"/><text x="49.6916%" y="255.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.30%)</title><rect x="49.3401%" y="309" width="0.3046%" height="15" fill="rgb(242,148,23)" fg:x="486" fg:w="3"/><text x="49.5901%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.20%)</title><rect x="49.4416%" y="293" width="0.2030%" height="15" fill="rgb(237,105,33)" fg:x="487" fg:w="2"/><text x="49.6916%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.20%)</title><rect x="49.4416%" y="277" width="0.2030%" height="15" fill="rgb(238,218,40)" fg:x="487" fg:w="2"/><text x="49.6916%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.20%)</title><rect x="49.4416%" y="261" width="0.2030%" height="15" fill="rgb(209,126,11)" fg:x="487" fg:w="2"/><text x="49.6916%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="49.5431%" y="245" width="0.1015%" height="15" fill="rgb(245,90,11)" fg:x="488" fg:w="1"/><text x="49.7931%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="49.5431%" y="229" width="0.1015%" height="15" fill="rgb(211,195,10)" fg:x="488" fg:w="1"/><text x="49.7931%" y="239.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="49.6447%" y="309" width="0.1015%" height="15" fill="rgb(231,45,45)" fg:x="489" fg:w="1"/><text x="49.8947%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="49.7462%" y="197" width="0.1015%" height="15" fill="rgb(246,100,43)" fg:x="490" fg:w="1"/><text x="49.9962%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.10%)</title><rect x="49.8477%" y="181" width="0.1015%" height="15" fill="rgb(241,193,8)" fg:x="491" fg:w="1"/><text x="50.0977%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="49.8477%" y="165" width="0.1015%" height="15" fill="rgb(208,76,19)" fg:x="491" fg:w="1"/><text x="50.0977%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.10%)</title><rect x="49.8477%" y="149" width="0.1015%" height="15" fill="rgb(223,69,40)" fg:x="491" fg:w="1"/><text x="50.0977%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.10%)</title><rect x="49.8477%" y="133" width="0.1015%" height="15" fill="rgb(207,120,39)" fg:x="491" fg:w="1"/><text x="50.0977%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.30%)</title><rect x="49.7462%" y="229" width="0.3046%" height="15" fill="rgb(212,209,28)" fg:x="490" fg:w="3"/><text x="49.9962%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.30%)</title><rect x="49.7462%" y="213" width="0.3046%" height="15" fill="rgb(246,82,29)" fg:x="490" fg:w="3"/><text x="49.9962%" y="223.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.20%)</title><rect x="49.8477%" y="197" width="0.2030%" height="15" fill="rgb(239,6,40)" fg:x="491" fg:w="2"/><text x="50.0977%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.10%)</title><rect x="49.9492%" y="181" width="0.1015%" height="15" fill="rgb(228,181,35)" fg:x="492" fg:w="1"/><text x="50.1992%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="49.9492%" y="165" width="0.1015%" height="15" fill="rgb(238,151,2)" fg:x="492" fg:w="1"/><text x="50.1992%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="49.9492%" y="149" width="0.1015%" height="15" fill="rgb(236,94,18)" fg:x="492" fg:w="1"/><text x="50.1992%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="50.0508%" y="165" width="0.1015%" height="15" fill="rgb(208,38,14)" fg:x="493" fg:w="1"/><text x="50.3008%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.20%)</title><rect x="50.0508%" y="197" width="0.2030%" height="15" fill="rgb(234,215,27)" fg:x="493" fg:w="2"/><text x="50.3008%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="50.0508%" y="181" width="0.2030%" height="15" fill="rgb(254,211,53)" fg:x="493" fg:w="2"/><text x="50.3008%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="50.1523%" y="165" width="0.1015%" height="15" fill="rgb(216,175,11)" fg:x="494" fg:w="1"/><text x="50.4023%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="50.1523%" y="149" width="0.1015%" height="15" fill="rgb(246,179,26)" fg:x="494" fg:w="1"/><text x="50.4023%" y="159.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.61%)</title><rect x="49.7462%" y="293" width="0.6091%" height="15" fill="rgb(249,19,52)" fg:x="490" fg:w="6"/><text x="49.9962%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.61%)</title><rect x="49.7462%" y="277" width="0.6091%" height="15" fill="rgb(230,42,52)" fg:x="490" fg:w="6"/><text x="49.9962%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.61%)</title><rect x="49.7462%" y="261" width="0.6091%" height="15" fill="rgb(221,171,0)" fg:x="490" fg:w="6"/><text x="49.9962%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.61%)</title><rect x="49.7462%" y="245" width="0.6091%" height="15" fill="rgb(222,177,40)" fg:x="490" fg:w="6"/><text x="49.9962%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.30%)</title><rect x="50.0508%" y="229" width="0.3046%" height="15" fill="rgb(247,34,16)" fg:x="493" fg:w="3"/><text x="50.3008%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.30%)</title><rect x="50.0508%" y="213" width="0.3046%" height="15" fill="rgb(213,217,37)" fg:x="493" fg:w="3"/><text x="50.3008%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.10%)</title><rect x="50.2538%" y="197" width="0.1015%" height="15" fill="rgb(231,189,24)" fg:x="495" fg:w="1"/><text x="50.5038%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.10%)</title><rect x="50.3553%" y="165" width="0.1015%" height="15" fill="rgb(214,22,9)" fg:x="496" fg:w="1"/><text x="50.6053%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.30%)</title><rect x="50.3553%" y="181" width="0.3046%" height="15" fill="rgb(212,70,22)" fg:x="496" fg:w="3"/><text x="50.6053%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="50.4569%" y="165" width="0.2030%" height="15" fill="rgb(249,64,51)" fg:x="497" fg:w="2"/><text x="50.7069%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="50.6599%" y="149" width="0.1015%" height="15" fill="rgb(249,148,20)" fg:x="499" fg:w="1"/><text x="50.9099%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.10%)</title><rect x="50.6599%" y="133" width="0.1015%" height="15" fill="rgb(246,46,48)" fg:x="499" fg:w="1"/><text x="50.9099%" y="143.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 2.03%)</title><rect x="48.8325%" y="389" width="2.0305%" height="15" fill="rgb(217,34,48)" fg:x="481" fg:w="20"/><text x="49.0825%" y="399.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 2.03%)</title><rect x="48.8325%" y="373" width="2.0305%" height="15" fill="rgb(222,45,26)" fg:x="481" fg:w="20"/><text x="49.0825%" y="383.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 1.83%)</title><rect x="49.0355%" y="357" width="1.8274%" height="15" fill="rgb(230,201,36)" fg:x="483" fg:w="18"/><text x="49.2855%" y="367.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (18 samples, 1.83%)</title><rect x="49.0355%" y="341" width="1.8274%" height="15" fill="rgb(217,30,43)" fg:x="483" fg:w="18"/><text x="49.2855%" y="351.50">&lt;..</text></g><g><title>engine::internal::Entities::prepare_entity (16 samples, 1.62%)</title><rect x="49.2386%" y="325" width="1.6244%" height="15" fill="rgb(230,197,40)" fg:x="485" fg:w="16"/><text x="49.4886%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 1.12%)</title><rect x="49.7462%" y="309" width="1.1168%" height="15" fill="rgb(239,181,18)" fg:x="490" fg:w="11"/><text x="49.9962%" y="319.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.51%)</title><rect x="50.3553%" y="293" width="0.5076%" height="15" fill="rgb(222,60,39)" fg:x="496" fg:w="5"/><text x="50.6053%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.51%)</title><rect x="50.3553%" y="277" width="0.5076%" height="15" fill="rgb(210,60,22)" fg:x="496" fg:w="5"/><text x="50.6053%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.51%)</title><rect x="50.3553%" y="261" width="0.5076%" height="15" fill="rgb(239,213,48)" fg:x="496" fg:w="5"/><text x="50.6053%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.51%)</title><rect x="50.3553%" y="245" width="0.5076%" height="15" fill="rgb(253,214,23)" fg:x="496" fg:w="5"/><text x="50.6053%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.51%)</title><rect x="50.3553%" y="229" width="0.5076%" height="15" fill="rgb(211,98,45)" fg:x="496" fg:w="5"/><text x="50.6053%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.51%)</title><rect x="50.3553%" y="213" width="0.5076%" height="15" fill="rgb(239,130,44)" fg:x="496" fg:w="5"/><text x="50.6053%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.51%)</title><rect x="50.3553%" y="197" width="0.5076%" height="15" fill="rgb(222,181,35)" fg:x="496" fg:w="5"/><text x="50.6053%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="50.6599%" y="181" width="0.2030%" height="15" fill="rgb(219,219,49)" fg:x="499" fg:w="2"/><text x="50.9099%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.20%)</title><rect x="50.6599%" y="165" width="0.2030%" height="15" fill="rgb(227,161,51)" fg:x="499" fg:w="2"/><text x="50.9099%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.10%)</title><rect x="50.7614%" y="149" width="0.1015%" height="15" fill="rgb(239,112,27)" fg:x="500" fg:w="1"/><text x="51.0114%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="50.7614%" y="133" width="0.1015%" height="15" fill="rgb(248,122,18)" fg:x="500" fg:w="1"/><text x="51.0114%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="50.7614%" y="117" width="0.1015%" height="15" fill="rgb(245,130,23)" fg:x="500" fg:w="1"/><text x="51.0114%" y="127.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (21 samples, 2.13%)</title><rect x="48.8325%" y="405" width="2.1320%" height="15" fill="rgb(211,225,28)" fg:x="481" fg:w="21"/><text x="49.0825%" y="415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.10%)</title><rect x="50.8629%" y="389" width="0.1015%" height="15" fill="rgb(242,105,44)" fg:x="501" fg:w="1"/><text x="51.1129%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="50.8629%" y="373" width="0.1015%" height="15" fill="rgb(216,183,46)" fg:x="501" fg:w="1"/><text x="51.1129%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="50.9645%" y="405" width="0.1015%" height="15" fill="rgb(227,112,9)" fg:x="502" fg:w="1"/><text x="51.2145%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="50.9645%" y="389" width="0.1015%" height="15" fill="rgb(244,21,0)" fg:x="502" fg:w="1"/><text x="51.2145%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.10%)</title><rect x="51.0660%" y="405" width="0.1015%" height="15" fill="rgb(236,185,14)" fg:x="503" fg:w="1"/><text x="51.3160%" y="415.50"></text></g><g><title>plugins_core::tools::get_contained_keys (36 samples, 3.65%)</title><rect x="47.8173%" y="453" width="3.6548%" height="15" fill="rgb(236,170,30)" fg:x="471" fg:w="36"/><text x="48.0673%" y="463.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (33 samples, 3.35%)</title><rect x="48.1218%" y="437" width="3.3503%" height="15" fill="rgb(209,198,51)" fg:x="474" fg:w="33"/><text x="48.3718%" y="447.50">ker..</text></g><g><title>kernel::model::Entity::load_scope (33 samples, 3.35%)</title><rect x="48.1218%" y="421" width="3.3503%" height="15" fill="rgb(205,171,26)" fg:x="474" fg:w="33"/><text x="48.3718%" y="431.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.30%)</title><rect x="51.1675%" y="405" width="0.3046%" height="15" fill="rgb(246,41,49)" fg:x="504" fg:w="3"/><text x="51.4175%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="51.2690%" y="389" width="0.2030%" height="15" fill="rgb(240,229,12)" fg:x="505" fg:w="2"/><text x="51.5190%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.20%)</title><rect x="51.2690%" y="373" width="0.2030%" height="15" fill="rgb(212,8,54)" fg:x="505" fg:w="2"/><text x="51.5190%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.20%)</title><rect x="51.2690%" y="357" width="0.2030%" height="15" fill="rgb(230,114,13)" fg:x="505" fg:w="2"/><text x="51.5190%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.20%)</title><rect x="51.2690%" y="341" width="0.2030%" height="15" fill="rgb(229,130,28)" fg:x="505" fg:w="2"/><text x="51.5190%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="51.2690%" y="325" width="0.2030%" height="15" fill="rgb(206,139,15)" fg:x="505" fg:w="2"/><text x="51.5190%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="51.2690%" y="309" width="0.2030%" height="15" fill="rgb(241,188,35)" fg:x="505" fg:w="2"/><text x="51.5190%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="51.6751%" y="389" width="0.1015%" height="15" fill="rgb(208,224,26)" fg:x="509" fg:w="1"/><text x="51.9251%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="51.6751%" y="373" width="0.1015%" height="15" fill="rgb(251,131,28)" fg:x="509" fg:w="1"/><text x="51.9251%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="51.6751%" y="357" width="0.1015%" height="15" fill="rgb(208,153,1)" fg:x="509" fg:w="1"/><text x="51.9251%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="51.6751%" y="341" width="0.1015%" height="15" fill="rgb(234,33,36)" fg:x="509" fg:w="1"/><text x="51.9251%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="51.6751%" y="325" width="0.1015%" height="15" fill="rgb(246,42,29)" fg:x="509" fg:w="1"/><text x="51.9251%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="51.6751%" y="309" width="0.1015%" height="15" fill="rgb(251,114,16)" fg:x="509" fg:w="1"/><text x="51.9251%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="51.6751%" y="293" width="0.1015%" height="15" fill="rgb(233,13,38)" fg:x="509" fg:w="1"/><text x="51.9251%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="51.6751%" y="277" width="0.1015%" height="15" fill="rgb(247,120,19)" fg:x="509" fg:w="1"/><text x="51.9251%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="51.6751%" y="261" width="0.1015%" height="15" fill="rgb(205,11,16)" fg:x="509" fg:w="1"/><text x="51.9251%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="51.6751%" y="245" width="0.1015%" height="15" fill="rgb(228,185,19)" fg:x="509" fg:w="1"/><text x="51.9251%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="51.6751%" y="229" width="0.1015%" height="15" fill="rgb(239,88,52)" fg:x="509" fg:w="1"/><text x="51.9251%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="51.6751%" y="213" width="0.1015%" height="15" fill="rgb(219,23,1)" fg:x="509" fg:w="1"/><text x="51.9251%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.30%)</title><rect x="51.6751%" y="405" width="0.3046%" height="15" fill="rgb(253,177,16)" fg:x="509" fg:w="3"/><text x="51.9251%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="51.7766%" y="389" width="0.2030%" height="15" fill="rgb(225,150,40)" fg:x="510" fg:w="2"/><text x="52.0266%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.20%)</title><rect x="51.7766%" y="373" width="0.2030%" height="15" fill="rgb(208,108,30)" fg:x="510" fg:w="2"/><text x="52.0266%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="51.7766%" y="357" width="0.2030%" height="15" fill="rgb(214,122,4)" fg:x="510" fg:w="2"/><text x="52.0266%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="51.7766%" y="341" width="0.2030%" height="15" fill="rgb(229,74,37)" fg:x="510" fg:w="2"/><text x="52.0266%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.20%)</title><rect x="51.7766%" y="325" width="0.2030%" height="15" fill="rgb(233,61,41)" fg:x="510" fg:w="2"/><text x="52.0266%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="51.7766%" y="309" width="0.2030%" height="15" fill="rgb(238,191,5)" fg:x="510" fg:w="2"/><text x="52.0266%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.20%)</title><rect x="51.7766%" y="293" width="0.2030%" height="15" fill="rgb(233,78,24)" fg:x="510" fg:w="2"/><text x="52.0266%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="51.7766%" y="277" width="0.2030%" height="15" fill="rgb(211,142,8)" fg:x="510" fg:w="2"/><text x="52.0266%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="51.7766%" y="261" width="0.2030%" height="15" fill="rgb(253,38,53)" fg:x="510" fg:w="2"/><text x="52.0266%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="51.7766%" y="245" width="0.2030%" height="15" fill="rgb(234,63,51)" fg:x="510" fg:w="2"/><text x="52.0266%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.20%)</title><rect x="51.7766%" y="229" width="0.2030%" height="15" fill="rgb(205,23,31)" fg:x="510" fg:w="2"/><text x="52.0266%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.20%)</title><rect x="51.7766%" y="213" width="0.2030%" height="15" fill="rgb(210,184,50)" fg:x="510" fg:w="2"/><text x="52.0266%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="51.7766%" y="197" width="0.2030%" height="15" fill="rgb(222,112,26)" fg:x="510" fg:w="2"/><text x="52.0266%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="51.7766%" y="181" width="0.2030%" height="15" fill="rgb(250,98,18)" fg:x="510" fg:w="2"/><text x="52.0266%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="51.9797%" y="389" width="0.1015%" height="15" fill="rgb(250,34,12)" fg:x="512" fg:w="1"/><text x="52.2297%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="51.9797%" y="373" width="0.1015%" height="15" fill="rgb(236,141,30)" fg:x="512" fg:w="1"/><text x="52.2297%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.10%)</title><rect x="51.9797%" y="357" width="0.1015%" height="15" fill="rgb(246,134,38)" fg:x="512" fg:w="1"/><text x="52.2297%" y="367.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="51.9797%" y="341" width="0.1015%" height="15" fill="rgb(240,114,4)" fg:x="512" fg:w="1"/><text x="52.2297%" y="351.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="51.9797%" y="325" width="0.1015%" height="15" fill="rgb(243,113,39)" fg:x="512" fg:w="1"/><text x="52.2297%" y="335.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.30%)</title><rect x="51.9797%" y="405" width="0.3046%" height="15" fill="rgb(239,215,4)" fg:x="512" fg:w="3"/><text x="52.2297%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.20%)</title><rect x="52.0812%" y="389" width="0.2030%" height="15" fill="rgb(236,229,45)" fg:x="513" fg:w="2"/><text x="52.3312%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="52.1827%" y="373" width="0.1015%" height="15" fill="rgb(242,2,6)" fg:x="514" fg:w="1"/><text x="52.4327%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 7.72%)</title><rect x="44.7716%" y="469" width="7.7157%" height="15" fill="rgb(239,108,21)" fg:x="441" fg:w="76"/><text x="45.0216%" y="479.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::get_occupant_keys (10 samples, 1.02%)</title><rect x="51.4721%" y="453" width="1.0152%" height="15" fill="rgb(215,168,34)" fg:x="507" fg:w="10"/><text x="51.7221%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 1.02%)</title><rect x="51.4721%" y="437" width="1.0152%" height="15" fill="rgb(238,31,17)" fg:x="507" fg:w="10"/><text x="51.7221%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.91%)</title><rect x="51.5736%" y="421" width="0.9137%" height="15" fill="rgb(220,133,11)" fg:x="508" fg:w="9"/><text x="51.8236%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="52.2843%" y="405" width="0.2030%" height="15" fill="rgb(212,158,23)" fg:x="515" fg:w="2"/><text x="52.5343%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="52.2843%" y="389" width="0.2030%" height="15" fill="rgb(223,172,7)" fg:x="515" fg:w="2"/><text x="52.5343%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="52.3858%" y="373" width="0.1015%" height="15" fill="rgb(244,3,52)" fg:x="516" fg:w="1"/><text x="52.6358%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="52.3858%" y="357" width="0.1015%" height="15" fill="rgb(207,69,27)" fg:x="516" fg:w="1"/><text x="52.6358%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.10%)</title><rect x="52.3858%" y="341" width="0.1015%" height="15" fill="rgb(213,136,45)" fg:x="516" fg:w="1"/><text x="52.6358%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.10%)</title><rect x="52.3858%" y="325" width="0.1015%" height="15" fill="rgb(218,79,17)" fg:x="516" fg:w="1"/><text x="52.6358%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (78 samples, 7.92%)</title><rect x="44.6701%" y="485" width="7.9188%" height="15" fill="rgb(216,106,36)" fg:x="440" fg:w="78"/><text x="44.9201%" y="495.50">&lt;alloc::vec..</text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="52.4873%" y="469" width="0.1015%" height="15" fill="rgb(251,27,45)" fg:x="517" fg:w="1"/><text x="52.7373%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.7919%" y="437" width="0.1015%" height="15" fill="rgb(232,21,34)" fg:x="520" fg:w="1"/><text x="53.0419%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.7919%" y="421" width="0.1015%" height="15" fill="rgb(249,191,16)" fg:x="520" fg:w="1"/><text x="53.0419%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="52.7919%" y="405" width="0.1015%" height="15" fill="rgb(224,88,20)" fg:x="520" fg:w="1"/><text x="53.0419%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="52.7919%" y="389" width="0.1015%" height="15" fill="rgb(237,93,27)" fg:x="520" fg:w="1"/><text x="53.0419%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="52.7919%" y="373" width="0.1015%" height="15" fill="rgb(226,198,48)" fg:x="520" fg:w="1"/><text x="53.0419%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="52.7919%" y="357" width="0.1015%" height="15" fill="rgb(207,162,53)" fg:x="520" fg:w="1"/><text x="53.0419%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="52.7919%" y="341" width="0.1015%" height="15" fill="rgb(207,169,9)" fg:x="520" fg:w="1"/><text x="53.0419%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="52.7919%" y="325" width="0.1015%" height="15" fill="rgb(224,166,46)" fg:x="520" fg:w="1"/><text x="53.0419%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="52.7919%" y="309" width="0.1015%" height="15" fill="rgb(233,26,6)" fg:x="520" fg:w="1"/><text x="53.0419%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="52.7919%" y="293" width="0.1015%" height="15" fill="rgb(218,106,45)" fg:x="520" fg:w="1"/><text x="53.0419%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="52.7919%" y="277" width="0.1015%" height="15" fill="rgb(240,217,4)" fg:x="520" fg:w="1"/><text x="53.0419%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="52.7919%" y="261" width="0.1015%" height="15" fill="rgb(246,171,10)" fg:x="520" fg:w="1"/><text x="53.0419%" y="271.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="52.8934%" y="421" width="0.1015%" height="15" fill="rgb(223,197,30)" fg:x="521" fg:w="1"/><text x="53.1434%" y="431.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="52.8934%" y="405" width="0.1015%" height="15" fill="rgb(207,92,16)" fg:x="521" fg:w="1"/><text x="53.1434%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.8934%" y="389" width="0.1015%" height="15" fill="rgb(211,6,44)" fg:x="521" fg:w="1"/><text x="53.1434%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.8934%" y="373" width="0.1015%" height="15" fill="rgb(219,139,2)" fg:x="521" fg:w="1"/><text x="53.1434%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.8934%" y="357" width="0.1015%" height="15" fill="rgb(224,103,21)" fg:x="521" fg:w="1"/><text x="53.1434%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="52.8934%" y="341" width="0.1015%" height="15" fill="rgb(254,110,48)" fg:x="521" fg:w="1"/><text x="53.1434%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="52.8934%" y="325" width="0.1015%" height="15" fill="rgb(212,88,19)" fg:x="521" fg:w="1"/><text x="53.1434%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="52.8934%" y="309" width="0.1015%" height="15" fill="rgb(248,103,6)" fg:x="521" fg:w="1"/><text x="53.1434%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="52.8934%" y="293" width="0.1015%" height="15" fill="rgb(214,53,46)" fg:x="521" fg:w="1"/><text x="53.1434%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="52.8934%" y="277" width="0.1015%" height="15" fill="rgb(236,190,24)" fg:x="521" fg:w="1"/><text x="53.1434%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="52.8934%" y="261" width="0.1015%" height="15" fill="rgb(254,58,28)" fg:x="521" fg:w="1"/><text x="53.1434%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="52.8934%" y="245" width="0.1015%" height="15" fill="rgb(243,63,27)" fg:x="521" fg:w="1"/><text x="53.1434%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="52.8934%" y="229" width="0.1015%" height="15" fill="rgb(206,81,20)" fg:x="521" fg:w="1"/><text x="53.1434%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="52.8934%" y="213" width="0.1015%" height="15" fill="rgb(252,69,51)" fg:x="521" fg:w="1"/><text x="53.1434%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="52.8934%" y="197" width="0.1015%" height="15" fill="rgb(222,213,4)" fg:x="521" fg:w="1"/><text x="53.1434%" y="207.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.10%)</title><rect x="52.9949%" y="421" width="0.1015%" height="15" fill="rgb(226,198,12)" fg:x="522" fg:w="1"/><text x="53.2449%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="53.0964%" y="405" width="0.1015%" height="15" fill="rgb(248,115,11)" fg:x="523" fg:w="1"/><text x="53.3464%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="53.0964%" y="389" width="0.1015%" height="15" fill="rgb(221,148,54)" fg:x="523" fg:w="1"/><text x="53.3464%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="53.0964%" y="373" width="0.1015%" height="15" fill="rgb(214,209,51)" fg:x="523" fg:w="1"/><text x="53.3464%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="53.0964%" y="357" width="0.1015%" height="15" fill="rgb(249,116,53)" fg:x="523" fg:w="1"/><text x="53.3464%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="53.0964%" y="341" width="0.1015%" height="15" fill="rgb(248,170,1)" fg:x="523" fg:w="1"/><text x="53.3464%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="53.0964%" y="325" width="0.1015%" height="15" fill="rgb(244,105,10)" fg:x="523" fg:w="1"/><text x="53.3464%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="53.0964%" y="309" width="0.1015%" height="15" fill="rgb(229,100,5)" fg:x="523" fg:w="1"/><text x="53.3464%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="53.0964%" y="293" width="0.1015%" height="15" fill="rgb(233,221,39)" fg:x="523" fg:w="1"/><text x="53.3464%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="53.0964%" y="277" width="0.1015%" height="15" fill="rgb(233,88,21)" fg:x="523" fg:w="1"/><text x="53.3464%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="53.0964%" y="261" width="0.1015%" height="15" fill="rgb(206,13,0)" fg:x="523" fg:w="1"/><text x="53.3464%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="53.0964%" y="245" width="0.1015%" height="15" fill="rgb(242,15,35)" fg:x="523" fg:w="1"/><text x="53.3464%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="53.0964%" y="229" width="0.1015%" height="15" fill="rgb(247,142,41)" fg:x="523" fg:w="1"/><text x="53.3464%" y="239.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="53.1980%" y="277" width="0.1015%" height="15" fill="rgb(245,51,29)" fg:x="524" fg:w="1"/><text x="53.4480%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.51%)</title><rect x="52.8934%" y="437" width="0.5076%" height="15" fill="rgb(228,209,43)" fg:x="521" fg:w="5"/><text x="53.1434%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.30%)</title><rect x="53.0964%" y="421" width="0.3046%" height="15" fill="rgb(233,185,9)" fg:x="523" fg:w="3"/><text x="53.3464%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.20%)</title><rect x="53.1980%" y="405" width="0.2030%" height="15" fill="rgb(226,93,0)" fg:x="524" fg:w="2"/><text x="53.4480%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="53.1980%" y="389" width="0.2030%" height="15" fill="rgb(245,194,43)" fg:x="524" fg:w="2"/><text x="53.4480%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="53.1980%" y="373" width="0.2030%" height="15" fill="rgb(211,145,34)" fg:x="524" fg:w="2"/><text x="53.4480%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.20%)</title><rect x="53.1980%" y="357" width="0.2030%" height="15" fill="rgb(231,228,28)" fg:x="524" fg:w="2"/><text x="53.4480%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.20%)</title><rect x="53.1980%" y="341" width="0.2030%" height="15" fill="rgb(236,149,4)" fg:x="524" fg:w="2"/><text x="53.4480%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.20%)</title><rect x="53.1980%" y="325" width="0.2030%" height="15" fill="rgb(234,114,38)" fg:x="524" fg:w="2"/><text x="53.4480%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="53.1980%" y="309" width="0.2030%" height="15" fill="rgb(246,132,51)" fg:x="524" fg:w="2"/><text x="53.4480%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.20%)</title><rect x="53.1980%" y="293" width="0.2030%" height="15" fill="rgb(251,137,22)" fg:x="524" fg:w="2"/><text x="53.4480%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="53.2995%" y="277" width="0.1015%" height="15" fill="rgb(243,59,52)" fg:x="525" fg:w="1"/><text x="53.5495%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="53.2995%" y="261" width="0.1015%" height="15" fill="rgb(239,56,28)" fg:x="525" fg:w="1"/><text x="53.5495%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="53.2995%" y="245" width="0.1015%" height="15" fill="rgb(218,168,27)" fg:x="525" fg:w="1"/><text x="53.5495%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="53.2995%" y="229" width="0.1015%" height="15" fill="rgb(232,165,11)" fg:x="525" fg:w="1"/><text x="53.5495%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="53.2995%" y="213" width="0.1015%" height="15" fill="rgb(253,55,41)" fg:x="525" fg:w="1"/><text x="53.5495%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="53.2995%" y="197" width="0.1015%" height="15" fill="rgb(233,206,24)" fg:x="525" fg:w="1"/><text x="53.5495%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="53.2995%" y="181" width="0.1015%" height="15" fill="rgb(220,199,8)" fg:x="525" fg:w="1"/><text x="53.5495%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="53.2995%" y="165" width="0.1015%" height="15" fill="rgb(254,65,26)" fg:x="525" fg:w="1"/><text x="53.5495%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="53.2995%" y="149" width="0.1015%" height="15" fill="rgb(253,102,23)" fg:x="525" fg:w="1"/><text x="53.5495%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="53.2995%" y="133" width="0.1015%" height="15" fill="rgb(231,103,35)" fg:x="525" fg:w="1"/><text x="53.5495%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="53.2995%" y="117" width="0.1015%" height="15" fill="rgb(238,26,10)" fg:x="525" fg:w="1"/><text x="53.5495%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="53.2995%" y="101" width="0.1015%" height="15" fill="rgb(234,191,34)" fg:x="525" fg:w="1"/><text x="53.5495%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="53.2995%" y="85" width="0.1015%" height="15" fill="rgb(206,210,9)" fg:x="525" fg:w="1"/><text x="53.5495%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="53.2995%" y="69" width="0.1015%" height="15" fill="rgb(219,155,3)" fg:x="525" fg:w="1"/><text x="53.5495%" y="79.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="53.2995%" y="53" width="0.1015%" height="15" fill="rgb(221,62,52)" fg:x="525" fg:w="1"/><text x="53.5495%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="54.6193%" y="325" width="0.1015%" height="15" fill="rgb(215,197,36)" fg:x="538" fg:w="1"/><text x="54.8693%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="54.9239%" y="277" width="0.1015%" height="15" fill="rgb(226,222,6)" fg:x="541" fg:w="1"/><text x="55.1739%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="54.9239%" y="261" width="0.1015%" height="15" fill="rgb(215,58,28)" fg:x="541" fg:w="1"/><text x="55.1739%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="56.4467%" y="181" width="0.1015%" height="15" fill="rgb(212,148,2)" fg:x="556" fg:w="1"/><text x="56.6967%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.61%)</title><rect x="56.3452%" y="197" width="0.6091%" height="15" fill="rgb(208,21,42)" fg:x="555" fg:w="6"/><text x="56.5952%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.41%)</title><rect x="56.5482%" y="181" width="0.4061%" height="15" fill="rgb(209,107,26)" fg:x="557" fg:w="4"/><text x="56.7982%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.20%)</title><rect x="56.7513%" y="165" width="0.2030%" height="15" fill="rgb(254,60,47)" fg:x="559" fg:w="2"/><text x="57.0013%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="56.8528%" y="149" width="0.1015%" height="15" fill="rgb(207,226,45)" fg:x="560" fg:w="1"/><text x="57.1028%" y="159.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (14 samples, 1.42%)</title><rect x="55.6345%" y="229" width="1.4213%" height="15" fill="rgb(223,124,22)" fg:x="548" fg:w="14"/><text x="55.8845%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.81%)</title><rect x="56.2437%" y="213" width="0.8122%" height="15" fill="rgb(240,162,13)" fg:x="554" fg:w="8"/><text x="56.4937%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="56.9543%" y="197" width="0.1015%" height="15" fill="rgb(244,199,31)" fg:x="561" fg:w="1"/><text x="57.2043%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="56.9543%" y="181" width="0.1015%" height="15" fill="rgb(207,92,16)" fg:x="561" fg:w="1"/><text x="57.2043%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.41%)</title><rect x="57.0558%" y="229" width="0.4061%" height="15" fill="rgb(215,31,19)" fg:x="562" fg:w="4"/><text x="57.3058%" y="239.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="57.2589%" y="213" width="0.2030%" height="15" fill="rgb(245,118,14)" fg:x="564" fg:w="2"/><text x="57.5089%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 2.64%)</title><rect x="55.3299%" y="245" width="2.6396%" height="15" fill="rgb(248,12,46)" fg:x="545" fg:w="26"/><text x="55.5799%" y="255.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.51%)</title><rect x="57.4619%" y="229" width="0.5076%" height="15" fill="rgb(209,119,0)" fg:x="566" fg:w="5"/><text x="57.7119%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.20%)</title><rect x="57.7665%" y="213" width="0.2030%" height="15" fill="rgb(254,51,44)" fg:x="569" fg:w="2"/><text x="58.0165%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="57.8680%" y="197" width="0.1015%" height="15" fill="rgb(253,182,35)" fg:x="570" fg:w="1"/><text x="58.1180%" y="207.50"></text></g><g><title>__libc_malloc (4 samples, 0.41%)</title><rect x="58.0711%" y="229" width="0.4061%" height="15" fill="rgb(205,198,39)" fg:x="572" fg:w="4"/><text x="58.3211%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (32 samples, 3.25%)</title><rect x="55.3299%" y="261" width="3.2487%" height="15" fill="rgb(251,175,48)" fg:x="545" fg:w="32"/><text x="55.5799%" y="271.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.61%)</title><rect x="57.9695%" y="245" width="0.6091%" height="15" fill="rgb(239,38,17)" fg:x="571" fg:w="6"/><text x="58.2195%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.10%)</title><rect x="58.4772%" y="229" width="0.1015%" height="15" fill="rgb(212,101,8)" fg:x="576" fg:w="1"/><text x="58.7272%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.10%)</title><rect x="58.4772%" y="213" width="0.1015%" height="15" fill="rgb(228,35,17)" fg:x="576" fg:w="1"/><text x="58.7272%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="58.5787%" y="245" width="0.3046%" height="15" fill="rgb(214,95,8)" fg:x="577" fg:w="3"/><text x="58.8287%" y="255.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.30%)</title><rect x="58.5787%" y="229" width="0.3046%" height="15" fill="rgb(210,176,35)" fg:x="577" fg:w="3"/><text x="58.8287%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="58.5787%" y="213" width="0.3046%" height="15" fill="rgb(226,4,3)" fg:x="577" fg:w="3"/><text x="58.8287%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="58.5787%" y="197" width="0.3046%" height="15" fill="rgb(232,133,14)" fg:x="577" fg:w="3"/><text x="58.8287%" y="207.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.10%)</title><rect x="58.7817%" y="181" width="0.1015%" height="15" fill="rgb(250,191,8)" fg:x="579" fg:w="1"/><text x="59.0317%" y="191.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (41 samples, 4.16%)</title><rect x="55.0254%" y="277" width="4.1624%" height="15" fill="rgb(213,12,45)" fg:x="542" fg:w="41"/><text x="55.2754%" y="287.50">&lt;plug..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.61%)</title><rect x="58.5787%" y="261" width="0.6091%" height="15" fill="rgb(233,78,26)" fg:x="577" fg:w="6"/><text x="58.8287%" y="271.50"></text></g><g><title>__libc_malloc (3 samples, 0.30%)</title><rect x="58.8832%" y="245" width="0.3046%" height="15" fill="rgb(245,222,11)" fg:x="580" fg:w="3"/><text x="59.1332%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.51%)</title><rect x="59.1878%" y="277" width="0.5076%" height="15" fill="rgb(216,174,12)" fg:x="583" fg:w="5"/><text x="59.4378%" y="287.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="59.4924%" y="261" width="0.2030%" height="15" fill="rgb(213,15,9)" fg:x="586" fg:w="2"/><text x="59.7424%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 4.97%)</title><rect x="54.9239%" y="293" width="4.9746%" height="15" fill="rgb(238,103,32)" fg:x="541" fg:w="49"/><text x="55.1739%" y="303.50">&lt;core:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.20%)</title><rect x="59.6954%" y="277" width="0.2030%" height="15" fill="rgb(245,85,15)" fg:x="588" fg:w="2"/><text x="59.9454%" y="287.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (53 samples, 5.38%)</title><rect x="54.7208%" y="325" width="5.3807%" height="15" fill="rgb(254,204,5)" fg:x="539" fg:w="53"/><text x="54.9708%" y="335.50">&lt;plugin..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (51 samples, 5.18%)</title><rect x="54.9239%" y="309" width="5.1777%" height="15" fill="rgb(231,178,15)" fg:x="541" fg:w="51"/><text x="55.1739%" y="319.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.20%)</title><rect x="59.8985%" y="293" width="0.2030%" height="15" fill="rgb(248,151,3)" fg:x="590" fg:w="2"/><text x="60.1485%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="59.8985%" y="277" width="0.2030%" height="15" fill="rgb(250,139,13)" fg:x="590" fg:w="2"/><text x="60.1485%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.41%)</title><rect x="60.1015%" y="325" width="0.4061%" height="15" fill="rgb(243,107,53)" fg:x="592" fg:w="4"/><text x="60.3515%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="60.4061%" y="309" width="0.1015%" height="15" fill="rgb(232,81,15)" fg:x="595" fg:w="1"/><text x="60.6561%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.20%)</title><rect x="60.6091%" y="309" width="0.2030%" height="15" fill="rgb(225,187,48)" fg:x="597" fg:w="2"/><text x="60.8591%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="60.7107%" y="293" width="0.1015%" height="15" fill="rgb(205,116,12)" fg:x="598" fg:w="1"/><text x="60.9607%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 6.80%)</title><rect x="54.2132%" y="341" width="6.8020%" height="15" fill="rgb(220,222,31)" fg:x="534" fg:w="67"/><text x="54.4632%" y="351.50">&lt;core::it..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.51%)</title><rect x="60.5076%" y="325" width="0.5076%" height="15" fill="rgb(233,187,49)" fg:x="596" fg:w="5"/><text x="60.7576%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.20%)</title><rect x="60.8122%" y="309" width="0.2030%" height="15" fill="rgb(211,168,53)" fg:x="599" fg:w="2"/><text x="61.0622%" y="319.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (77 samples, 7.82%)</title><rect x="54.0102%" y="373" width="7.8173%" height="15" fill="rgb(206,160,16)" fg:x="532" fg:w="77"/><text x="54.2602%" y="383.50">&lt;plugins_rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (77 samples, 7.82%)</title><rect x="54.0102%" y="357" width="7.8173%" height="15" fill="rgb(254,164,13)" fg:x="532" fg:w="77"/><text x="54.2602%" y="367.50">&lt;std::colle..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.81%)</title><rect x="61.0152%" y="341" width="0.8122%" height="15" fill="rgb(229,45,30)" fg:x="601" fg:w="8"/><text x="61.2652%" y="351.50"></text></g><g><title>__libc_malloc (7 samples, 0.71%)</title><rect x="61.1168%" y="325" width="0.7107%" height="15" fill="rgb(237,32,10)" fg:x="602" fg:w="7"/><text x="61.3668%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.20%)</title><rect x="61.8274%" y="373" width="0.2030%" height="15" fill="rgb(251,20,47)" fg:x="609" fg:w="2"/><text x="62.0774%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="61.9289%" y="357" width="0.1015%" height="15" fill="rgb(251,116,12)" fg:x="610" fg:w="1"/><text x="62.1789%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (92 samples, 9.34%)</title><rect x="53.4010%" y="389" width="9.3401%" height="15" fill="rgb(214,227,27)" fg:x="526" fg:w="92"/><text x="53.6510%" y="399.50">&lt;core::iter::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.71%)</title><rect x="62.0305%" y="373" width="0.7107%" height="15" fill="rgb(248,10,53)" fg:x="611" fg:w="7"/><text x="62.2805%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.30%)</title><rect x="62.4365%" y="357" width="0.3046%" height="15" fill="rgb(221,176,25)" fg:x="615" fg:w="3"/><text x="62.6865%" y="367.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (96 samples, 9.75%)</title><rect x="53.4010%" y="421" width="9.7462%" height="15" fill="rgb(205,70,46)" fg:x="526" fg:w="96"/><text x="53.6510%" y="431.50">&lt;plugins_rpc_p..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (96 samples, 9.75%)</title><rect x="53.4010%" y="405" width="9.7462%" height="15" fill="rgb(217,45,38)" fg:x="526" fg:w="96"/><text x="53.6510%" y="415.50">&lt;std::collecti..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.41%)</title><rect x="62.7411%" y="389" width="0.4061%" height="15" fill="rgb(243,6,54)" fg:x="618" fg:w="4"/><text x="62.9911%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.30%)</title><rect x="62.8426%" y="373" width="0.3046%" height="15" fill="rgb(242,76,23)" fg:x="619" fg:w="3"/><text x="63.0926%" y="383.50"></text></g><g><title>__libc_malloc (9 samples, 0.91%)</title><rect x="63.1472%" y="373" width="0.9137%" height="15" fill="rgb(239,166,0)" fg:x="622" fg:w="9"/><text x="63.3972%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="64.0609%" y="373" width="0.1015%" height="15" fill="rgb(238,174,32)" fg:x="631" fg:w="1"/><text x="64.3109%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="64.0609%" y="357" width="0.1015%" height="15" fill="rgb(238,124,44)" fg:x="631" fg:w="1"/><text x="64.3109%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.71%)</title><rect x="64.1624%" y="373" width="0.7107%" height="15" fill="rgb(206,185,9)" fg:x="632" fg:w="7"/><text x="64.4124%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.41%)</title><rect x="64.4670%" y="357" width="0.4061%" height="15" fill="rgb(215,157,17)" fg:x="635" fg:w="4"/><text x="64.7170%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.20%)</title><rect x="64.6701%" y="341" width="0.2030%" height="15" fill="rgb(251,17,29)" fg:x="637" fg:w="2"/><text x="64.9201%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="64.8731%" y="357" width="0.2030%" height="15" fill="rgb(227,113,27)" fg:x="639" fg:w="2"/><text x="65.1231%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="64.9746%" y="341" width="0.1015%" height="15" fill="rgb(217,226,24)" fg:x="640" fg:w="1"/><text x="65.2246%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (3 samples, 0.30%)</title><rect x="64.8731%" y="373" width="0.3046%" height="15" fill="rgb(251,99,38)" fg:x="639" fg:w="3"/><text x="65.1231%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.10%)</title><rect x="65.0761%" y="357" width="0.1015%" height="15" fill="rgb(231,147,19)" fg:x="641" fg:w="1"/><text x="65.3261%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (6 samples, 0.61%)</title><rect x="65.1777%" y="373" width="0.6091%" height="15" fill="rgb(230,86,8)" fg:x="642" fg:w="6"/><text x="65.4277%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.51%)</title><rect x="65.2792%" y="357" width="0.5076%" height="15" fill="rgb(237,159,39)" fg:x="643" fg:w="5"/><text x="65.5292%" y="367.50"></text></g><g><title>__libc_malloc (5 samples, 0.51%)</title><rect x="65.2792%" y="341" width="0.5076%" height="15" fill="rgb(247,179,47)" fg:x="643" fg:w="5"/><text x="65.5292%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="65.7868%" y="341" width="0.1015%" height="15" fill="rgb(253,152,26)" fg:x="648" fg:w="1"/><text x="66.0368%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="65.7868%" y="325" width="0.1015%" height="15" fill="rgb(222,211,15)" fg:x="648" fg:w="1"/><text x="66.0368%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="65.7868%" y="309" width="0.1015%" height="15" fill="rgb(236,193,6)" fg:x="648" fg:w="1"/><text x="66.0368%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="66.0914%" y="325" width="0.2030%" height="15" fill="rgb(226,206,10)" fg:x="651" fg:w="2"/><text x="66.3414%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="66.2944%" y="325" width="0.2030%" height="15" fill="rgb(213,125,22)" fg:x="653" fg:w="2"/><text x="66.5444%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="66.3959%" y="309" width="0.1015%" height="15" fill="rgb(221,66,28)" fg:x="654" fg:w="1"/><text x="66.6459%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="66.3959%" y="293" width="0.1015%" height="15" fill="rgb(222,84,53)" fg:x="654" fg:w="1"/><text x="66.6459%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="66.9036%" y="293" width="0.2030%" height="15" fill="rgb(243,50,15)" fg:x="659" fg:w="2"/><text x="67.1536%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="67.0051%" y="277" width="0.1015%" height="15" fill="rgb(208,184,23)" fg:x="660" fg:w="1"/><text x="67.2551%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.10%)</title><rect x="67.0051%" y="261" width="0.1015%" height="15" fill="rgb(221,83,2)" fg:x="660" fg:w="1"/><text x="67.2551%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.51%)</title><rect x="66.7005%" y="309" width="0.5076%" height="15" fill="rgb(236,53,24)" fg:x="657" fg:w="5"/><text x="66.9505%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.10%)</title><rect x="67.1066%" y="293" width="0.1015%" height="15" fill="rgb(244,171,29)" fg:x="661" fg:w="1"/><text x="67.3566%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="67.1066%" y="277" width="0.1015%" height="15" fill="rgb(205,19,11)" fg:x="661" fg:w="1"/><text x="67.3566%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.10%)</title><rect x="67.2081%" y="309" width="0.1015%" height="15" fill="rgb(207,108,29)" fg:x="662" fg:w="1"/><text x="67.4581%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="67.4112%" y="293" width="0.1015%" height="15" fill="rgb(236,215,43)" fg:x="664" fg:w="1"/><text x="67.6612%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="67.4112%" y="277" width="0.1015%" height="15" fill="rgb(213,58,35)" fg:x="664" fg:w="1"/><text x="67.6612%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="67.4112%" y="261" width="0.1015%" height="15" fill="rgb(220,211,46)" fg:x="664" fg:w="1"/><text x="67.6612%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="67.8173%" y="261" width="0.2030%" height="15" fill="rgb(212,134,16)" fg:x="668" fg:w="2"/><text x="68.0673%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="68.0203%" y="261" width="0.2030%" height="15" fill="rgb(232,90,44)" fg:x="670" fg:w="2"/><text x="68.2703%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="68.0203%" y="245" width="0.2030%" height="15" fill="rgb(212,18,36)" fg:x="670" fg:w="2"/><text x="68.2703%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="68.0203%" y="229" width="0.2030%" height="15" fill="rgb(206,112,24)" fg:x="670" fg:w="2"/><text x="68.2703%" y="239.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (25 samples, 2.54%)</title><rect x="65.7868%" y="373" width="2.5381%" height="15" fill="rgb(238,223,40)" fg:x="648" fg:w="25"/><text x="66.0368%" y="383.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.54%)</title><rect x="65.7868%" y="357" width="2.5381%" height="15" fill="rgb(226,169,20)" fg:x="648" fg:w="25"/><text x="66.0368%" y="367.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 2.44%)</title><rect x="65.8883%" y="341" width="2.4365%" height="15" fill="rgb(241,64,52)" fg:x="649" fg:w="24"/><text x="66.1383%" y="351.50">se..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (18 samples, 1.83%)</title><rect x="66.4975%" y="325" width="1.8274%" height="15" fill="rgb(228,120,25)" fg:x="655" fg:w="18"/><text x="66.7475%" y="335.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 1.02%)</title><rect x="67.3096%" y="309" width="1.0152%" height="15" fill="rgb(234,108,19)" fg:x="663" fg:w="10"/><text x="67.5596%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (8 samples, 0.81%)</title><rect x="67.5127%" y="293" width="0.8122%" height="15" fill="rgb(236,133,29)" fg:x="665" fg:w="8"/><text x="67.7627%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.71%)</title><rect x="67.6142%" y="277" width="0.7107%" height="15" fill="rgb(246,174,53)" fg:x="666" fg:w="7"/><text x="67.8642%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="68.2234%" y="261" width="0.1015%" height="15" fill="rgb(210,105,35)" fg:x="672" fg:w="1"/><text x="68.4734%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.10%)</title><rect x="68.3249%" y="357" width="0.1015%" height="15" fill="rgb(225,27,26)" fg:x="673" fg:w="1"/><text x="68.5749%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (3 samples, 0.30%)</title><rect x="68.3249%" y="373" width="0.3046%" height="15" fill="rgb(233,2,39)" fg:x="673" fg:w="3"/><text x="68.5749%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="68.4264%" y="357" width="0.2030%" height="15" fill="rgb(219,164,26)" fg:x="674" fg:w="2"/><text x="68.6764%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="68.5279%" y="341" width="0.1015%" height="15" fill="rgb(236,211,5)" fg:x="675" fg:w="1"/><text x="68.7779%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="68.8325%" y="357" width="0.1015%" height="15" fill="rgb(244,227,23)" fg:x="678" fg:w="1"/><text x="69.0825%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="68.9340%" y="325" width="0.1015%" height="15" fill="rgb(230,184,8)" fg:x="679" fg:w="1"/><text x="69.1840%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="68.9340%" y="357" width="0.2030%" height="15" fill="rgb(217,125,48)" fg:x="679" fg:w="2"/><text x="69.1840%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="68.9340%" y="341" width="0.2030%" height="15" fill="rgb(223,192,47)" fg:x="679" fg:w="2"/><text x="69.1840%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.10%)</title><rect x="69.0355%" y="325" width="0.1015%" height="15" fill="rgb(226,119,10)" fg:x="680" fg:w="1"/><text x="69.2855%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.30%)</title><rect x="69.2386%" y="325" width="0.3046%" height="15" fill="rgb(221,49,29)" fg:x="682" fg:w="3"/><text x="69.4886%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.30%)</title><rect x="69.7462%" y="293" width="0.3046%" height="15" fill="rgb(217,205,19)" fg:x="687" fg:w="3"/><text x="69.9962%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.20%)</title><rect x="69.8477%" y="277" width="0.2030%" height="15" fill="rgb(242,104,7)" fg:x="688" fg:w="2"/><text x="70.0977%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="69.9492%" y="261" width="0.1015%" height="15" fill="rgb(209,154,48)" fg:x="689" fg:w="1"/><text x="70.1992%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.81%)</title><rect x="69.5431%" y="325" width="0.8122%" height="15" fill="rgb(219,213,46)" fg:x="685" fg:w="8"/><text x="69.7931%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.81%)</title><rect x="69.5431%" y="309" width="0.8122%" height="15" fill="rgb(229,105,38)" fg:x="685" fg:w="8"/><text x="69.7931%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.30%)</title><rect x="70.0508%" y="293" width="0.3046%" height="15" fill="rgb(205,151,5)" fg:x="690" fg:w="3"/><text x="70.3008%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.91%)</title><rect x="70.6599%" y="293" width="0.9137%" height="15" fill="rgb(248,115,40)" fg:x="696" fg:w="9"/><text x="70.9099%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.71%)</title><rect x="70.8629%" y="277" width="0.7107%" height="15" fill="rgb(206,179,2)" fg:x="698" fg:w="7"/><text x="71.1129%" y="287.50"></text></g><g><title>__libc_malloc (5 samples, 0.51%)</title><rect x="71.0660%" y="261" width="0.5076%" height="15" fill="rgb(230,103,24)" fg:x="700" fg:w="5"/><text x="71.3160%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 1.12%)</title><rect x="70.6599%" y="309" width="1.1168%" height="15" fill="rgb(218,152,4)" fg:x="696" fg:w="11"/><text x="70.9099%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.20%)</title><rect x="71.5736%" y="293" width="0.2030%" height="15" fill="rgb(236,161,54)" fg:x="705" fg:w="2"/><text x="71.8236%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (28 samples, 2.84%)</title><rect x="69.1371%" y="341" width="2.8426%" height="15" fill="rgb(226,65,17)" fg:x="681" fg:w="28"/><text x="69.3871%" y="351.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.62%)</title><rect x="70.3553%" y="325" width="1.6244%" height="15" fill="rgb(221,134,44)" fg:x="693" fg:w="16"/><text x="70.6053%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="71.7766%" y="309" width="0.2030%" height="15" fill="rgb(251,129,4)" fg:x="707" fg:w="2"/><text x="72.0266%" y="319.50"></text></g><g><title>&lt;plugins_rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (186 samples, 18.88%)</title><rect x="53.4010%" y="437" width="18.8832%" height="15" fill="rgb(244,32,34)" fg:x="526" fg:w="186"/><text x="53.6510%" y="447.50">&lt;plugins_rpc_proto::Json as co..</text></g><g><title>kernel::model::EntityPtr::to_json_value (90 samples, 9.14%)</title><rect x="63.1472%" y="421" width="9.1371%" height="15" fill="rgb(251,224,37)" fg:x="622" fg:w="90"/><text x="63.3972%" y="431.50">kernel::model..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (90 samples, 9.14%)</title><rect x="63.1472%" y="405" width="9.1371%" height="15" fill="rgb(248,117,31)" fg:x="622" fg:w="90"/><text x="63.3972%" y="415.50">kernel::model..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (90 samples, 9.14%)</title><rect x="63.1472%" y="389" width="9.1371%" height="15" fill="rgb(222,208,37)" fg:x="622" fg:w="90"/><text x="63.3972%" y="399.50">&lt;serde_json::..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 3.65%)</title><rect x="68.6294%" y="373" width="3.6548%" height="15" fill="rgb(234,211,25)" fg:x="676" fg:w="36"/><text x="68.8794%" y="383.50">serd..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (31 samples, 3.15%)</title><rect x="69.1371%" y="357" width="3.1472%" height="15" fill="rgb(211,72,6)" fg:x="681" fg:w="31"/><text x="69.3871%" y="367.50">ker..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.30%)</title><rect x="71.9797%" y="341" width="0.3046%" height="15" fill="rgb(249,198,38)" fg:x="709" fg:w="3"/><text x="72.2297%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="72.0812%" y="325" width="0.2030%" height="15" fill="rgb(221,86,51)" fg:x="710" fg:w="2"/><text x="72.3312%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="72.2843%" y="437" width="0.1015%" height="15" fill="rgb(226,178,43)" fg:x="712" fg:w="1"/><text x="72.5343%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="72.3858%" y="421" width="0.1015%" height="15" fill="rgb(215,145,7)" fg:x="713" fg:w="1"/><text x="72.6358%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (276 samples, 28.02%)</title><rect x="44.5685%" y="501" width="28.0203%" height="15" fill="rgb(250,202,36)" fg:x="439" fg:w="276"/><text x="44.8185%" y="511.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (197 samples, 20.00%)</title><rect x="52.5888%" y="485" width="20.0000%" height="15" fill="rgb(215,86,13)" fg:x="518" fg:w="197"/><text x="52.8388%" y="495.50">alloc::vec::in_place_collect::&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (197 samples, 20.00%)</title><rect x="52.5888%" y="469" width="20.0000%" height="15" fill="rgb(221,134,12)" fg:x="518" fg:w="197"/><text x="52.8388%" y="479.50">&lt;core::iter::adapters::map::Map..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (197 samples, 20.00%)</title><rect x="52.5888%" y="453" width="20.0000%" height="15" fill="rgb(213,82,10)" fg:x="518" fg:w="197"/><text x="52.8388%" y="463.50">plugins_rpc::sessions::SessionS..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.20%)</title><rect x="72.3858%" y="437" width="0.2030%" height="15" fill="rgb(214,142,0)" fg:x="713" fg:w="2"/><text x="72.6358%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.10%)</title><rect x="72.4873%" y="421" width="0.1015%" height="15" fill="rgb(205,145,9)" fg:x="714" fg:w="1"/><text x="72.7373%" y="431.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (292 samples, 29.64%)</title><rect x="43.1472%" y="517" width="29.6447%" height="15" fill="rgb(244,214,8)" fg:x="425" fg:w="292"/><text x="43.3972%" y="527.50">&lt;plugins_rpc::sessions::SessionServices as plugi..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.20%)</title><rect x="72.5888%" y="501" width="0.2030%" height="15" fill="rgb(224,72,51)" fg:x="715" fg:w="2"/><text x="72.8388%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.20%)</title><rect x="72.5888%" y="485" width="0.2030%" height="15" fill="rgb(233,137,37)" fg:x="715" fg:w="2"/><text x="72.8388%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.20%)</title><rect x="72.5888%" y="469" width="0.2030%" height="15" fill="rgb(208,71,28)" fg:x="715" fg:w="2"/><text x="72.8388%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="72.6904%" y="453" width="0.1015%" height="15" fill="rgb(226,31,7)" fg:x="716" fg:w="1"/><text x="72.9404%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="72.8934%" y="421" width="0.2030%" height="15" fill="rgb(229,62,18)" fg:x="718" fg:w="2"/><text x="73.1434%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="72.9949%" y="405" width="0.1015%" height="15" fill="rgb(226,74,28)" fg:x="719" fg:w="1"/><text x="73.2449%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="72.9949%" y="389" width="0.1015%" height="15" fill="rgb(214,170,18)" fg:x="719" fg:w="1"/><text x="73.2449%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (721 samples, 73.20%)</title><rect x="0.0000%" y="645" width="73.1980%" height="15" fill="rgb(227,229,35)" fg:x="0" fg:w="721"/><text x="0.2500%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (721 samples, 73.20%)</title><rect x="0.0000%" y="629" width="73.1980%" height="15" fill="rgb(225,181,39)" fg:x="0" fg:w="721"/><text x="0.2500%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (720 samples, 73.10%)</title><rect x="0.1015%" y="613" width="73.0964%" height="15" fill="rgb(253,124,44)" fg:x="1" fg:w="720"/><text x="0.3515%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (432 samples, 43.86%)</title><rect x="29.3401%" y="597" width="43.8579%" height="15" fill="rgb(220,75,18)" fg:x="289" fg:w="432"/><text x="29.5901%" y="607.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (431 samples, 43.76%)</title><rect x="29.4416%" y="581" width="43.7563%" height="15" fill="rgb(239,175,43)" fg:x="290" fg:w="431"/><text x="29.6916%" y="591.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (326 samples, 33.10%)</title><rect x="40.1015%" y="565" width="33.0964%" height="15" fill="rgb(228,112,50)" fg:x="395" fg:w="326"/><text x="40.3515%" y="575.50">kernel::plugins::SessionPlugins::have_surroundings</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (326 samples, 33.10%)</title><rect x="40.1015%" y="549" width="33.0964%" height="15" fill="rgb(232,105,36)" fg:x="395" fg:w="326"/><text x="40.3515%" y="559.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plu..</text></g><g><title>plugins_rpc::querying::have_surroundings (298 samples, 30.25%)</title><rect x="42.9442%" y="533" width="30.2538%" height="15" fill="rgb(227,137,47)" fg:x="423" fg:w="298"/><text x="43.1942%" y="543.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.41%)</title><rect x="72.7919%" y="517" width="0.4061%" height="15" fill="rgb(217,51,9)" fg:x="717" fg:w="4"/><text x="73.0419%" y="527.50"></text></g><g><title>plugins_rpc_proto::&lt;impl core::convert::Into&lt;plugins_rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (4 samples, 0.41%)</title><rect x="72.7919%" y="501" width="0.4061%" height="15" fill="rgb(245,117,0)" fg:x="717" fg:w="4"/><text x="73.0419%" y="511.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (4 samples, 0.41%)</title><rect x="72.7919%" y="485" width="0.4061%" height="15" fill="rgb(252,52,30)" fg:x="717" fg:w="4"/><text x="73.0419%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.30%)</title><rect x="72.8934%" y="469" width="0.3046%" height="15" fill="rgb(227,85,33)" fg:x="718" fg:w="3"/><text x="73.1434%" y="479.50"></text></g><g><title>core::fmt::write (3 samples, 0.30%)</title><rect x="72.8934%" y="453" width="0.3046%" height="15" fill="rgb(220,157,20)" fg:x="718" fg:w="3"/><text x="73.1434%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.30%)</title><rect x="72.8934%" y="437" width="0.3046%" height="15" fill="rgb(254,14,34)" fg:x="718" fg:w="3"/><text x="73.1434%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.10%)</title><rect x="73.0964%" y="421" width="0.1015%" height="15" fill="rgb(216,103,41)" fg:x="720" fg:w="1"/><text x="73.3464%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="73.2995%" y="517" width="0.1015%" height="15" fill="rgb(245,221,9)" fg:x="722" fg:w="1"/><text x="73.5495%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="73.6041%" y="453" width="0.1015%" height="15" fill="rgb(254,136,47)" fg:x="725" fg:w="1"/><text x="73.8541%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.10%)</title><rect x="73.6041%" y="437" width="0.1015%" height="15" fill="rgb(235,71,46)" fg:x="725" fg:w="1"/><text x="73.8541%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="73.6041%" y="421" width="0.1015%" height="15" fill="rgb(242,154,29)" fg:x="725" fg:w="1"/><text x="73.8541%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (5 samples, 0.51%)</title><rect x="73.2995%" y="581" width="0.5076%" height="15" fill="rgb(210,65,31)" fg:x="722" fg:w="5"/><text x="73.5495%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.51%)</title><rect x="73.2995%" y="565" width="0.5076%" height="15" fill="rgb(244,9,50)" fg:x="722" fg:w="5"/><text x="73.5495%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (5 samples, 0.51%)</title><rect x="73.2995%" y="549" width="0.5076%" height="15" fill="rgb(215,141,38)" fg:x="722" fg:w="5"/><text x="73.5495%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.51%)</title><rect x="73.2995%" y="533" width="0.5076%" height="15" fill="rgb(241,129,6)" fg:x="722" fg:w="5"/><text x="73.5495%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.41%)</title><rect x="73.4010%" y="517" width="0.4061%" height="15" fill="rgb(253,169,4)" fg:x="723" fg:w="4"/><text x="73.6510%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.41%)</title><rect x="73.4010%" y="501" width="0.4061%" height="15" fill="rgb(237,82,36)" fg:x="723" fg:w="4"/><text x="73.6510%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.41%)</title><rect x="73.4010%" y="485" width="0.4061%" height="15" fill="rgb(209,171,11)" fg:x="723" fg:w="4"/><text x="73.6510%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="73.5025%" y="469" width="0.3046%" height="15" fill="rgb(242,19,22)" fg:x="724" fg:w="3"/><text x="73.7525%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="73.7056%" y="453" width="0.1015%" height="15" fill="rgb(251,122,24)" fg:x="726" fg:w="1"/><text x="73.9556%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.71%)</title><rect x="73.1980%" y="597" width="0.7107%" height="15" fill="rgb(226,166,42)" fg:x="721" fg:w="7"/><text x="73.4480%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::perform::StandardPerformer&gt;&gt; (1 samples, 0.10%)</title><rect x="73.8071%" y="581" width="0.1015%" height="15" fill="rgb(244,101,48)" fg:x="727" fg:w="1"/><text x="74.0571%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="74.1117%" y="405" width="0.1015%" height="15" fill="rgb(227,125,1)" fg:x="730" fg:w="1"/><text x="74.3617%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.41%)</title><rect x="73.9086%" y="517" width="0.4061%" height="15" fill="rgb(206,79,43)" fg:x="728" fg:w="4"/><text x="74.1586%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.41%)</title><rect x="73.9086%" y="501" width="0.4061%" height="15" fill="rgb(241,109,41)" fg:x="728" fg:w="4"/><text x="74.1586%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.30%)</title><rect x="74.0102%" y="485" width="0.3046%" height="15" fill="rgb(219,73,4)" fg:x="729" fg:w="3"/><text x="74.2602%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.30%)</title><rect x="74.0102%" y="469" width="0.3046%" height="15" fill="rgb(239,25,41)" fg:x="729" fg:w="3"/><text x="74.2602%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.30%)</title><rect x="74.0102%" y="453" width="0.3046%" height="15" fill="rgb(208,88,46)" fg:x="729" fg:w="3"/><text x="74.2602%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.30%)</title><rect x="74.0102%" y="437" width="0.3046%" height="15" fill="rgb(239,184,9)" fg:x="729" fg:w="3"/><text x="74.2602%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.20%)</title><rect x="74.1117%" y="421" width="0.2030%" height="15" fill="rgb(223,114,13)" fg:x="730" fg:w="2"/><text x="74.3617%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.10%)</title><rect x="74.2132%" y="405" width="0.1015%" height="15" fill="rgb(214,28,42)" fg:x="731" fg:w="1"/><text x="74.4632%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="74.2132%" y="389" width="0.1015%" height="15" fill="rgb(252,32,44)" fg:x="731" fg:w="1"/><text x="74.4632%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.10%)</title><rect x="74.2132%" y="373" width="0.1015%" height="15" fill="rgb(231,159,4)" fg:x="731" fg:w="1"/><text x="74.4632%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="74.3147%" y="469" width="0.1015%" height="15" fill="rgb(210,35,26)" fg:x="732" fg:w="1"/><text x="74.5647%" y="479.50"></text></g><g><title>engine::internal::Entities::prepare_entity (7 samples, 0.71%)</title><rect x="73.9086%" y="549" width="0.7107%" height="15" fill="rgb(208,190,37)" fg:x="728" fg:w="7"/><text x="74.1586%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.71%)</title><rect x="73.9086%" y="533" width="0.7107%" height="15" fill="rgb(226,148,22)" fg:x="728" fg:w="7"/><text x="74.1586%" y="543.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.30%)</title><rect x="74.3147%" y="517" width="0.3046%" height="15" fill="rgb(242,153,24)" fg:x="732" fg:w="3"/><text x="74.5647%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.30%)</title><rect x="74.3147%" y="501" width="0.3046%" height="15" fill="rgb(213,133,7)" fg:x="732" fg:w="3"/><text x="74.5647%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.30%)</title><rect x="74.3147%" y="485" width="0.3046%" height="15" fill="rgb(248,206,18)" fg:x="732" fg:w="3"/><text x="74.5647%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="74.4162%" y="469" width="0.2030%" height="15" fill="rgb(233,157,4)" fg:x="733" fg:w="2"/><text x="74.6662%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.20%)</title><rect x="74.4162%" y="453" width="0.2030%" height="15" fill="rgb(249,179,32)" fg:x="733" fg:w="2"/><text x="74.6662%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.10%)</title><rect x="74.5178%" y="437" width="0.1015%" height="15" fill="rgb(248,69,35)" fg:x="734" fg:w="1"/><text x="74.7678%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="74.5178%" y="421" width="0.1015%" height="15" fill="rgb(249,158,38)" fg:x="734" fg:w="1"/><text x="74.7678%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="74.5178%" y="405" width="0.1015%" height="15" fill="rgb(223,18,43)" fg:x="734" fg:w="1"/><text x="74.7678%" y="415.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.10%)</title><rect x="74.5178%" y="389" width="0.1015%" height="15" fill="rgb(238,42,45)" fg:x="734" fg:w="1"/><text x="74.7678%" y="399.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.10%)</title><rect x="74.5178%" y="373" width="0.1015%" height="15" fill="rgb(219,65,47)" fg:x="734" fg:w="1"/><text x="74.7678%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (8 samples, 0.81%)</title><rect x="73.9086%" y="565" width="0.8122%" height="15" fill="rgb(248,153,12)" fg:x="728" fg:w="8"/><text x="74.1586%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="74.6193%" y="549" width="0.1015%" height="15" fill="rgb(240,118,4)" fg:x="735" fg:w="1"/><text x="74.8693%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="74.6193%" y="533" width="0.1015%" height="15" fill="rgb(250,96,34)" fg:x="735" fg:w="1"/><text x="74.8693%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="74.6193%" y="517" width="0.1015%" height="15" fill="rgb(221,15,4)" fg:x="735" fg:w="1"/><text x="74.8693%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="74.6193%" y="501" width="0.1015%" height="15" fill="rgb(217,149,33)" fg:x="735" fg:w="1"/><text x="74.8693%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="74.6193%" y="485" width="0.1015%" height="15" fill="rgb(213,58,29)" fg:x="735" fg:w="1"/><text x="74.8693%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="74.6193%" y="469" width="0.1015%" height="15" fill="rgb(236,218,9)" fg:x="735" fg:w="1"/><text x="74.8693%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="74.6193%" y="453" width="0.1015%" height="15" fill="rgb(248,40,19)" fg:x="735" fg:w="1"/><text x="74.8693%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="74.6193%" y="437" width="0.1015%" height="15" fill="rgb(212,17,6)" fg:x="735" fg:w="1"/><text x="74.8693%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="74.6193%" y="421" width="0.1015%" height="15" fill="rgb(206,212,20)" fg:x="735" fg:w="1"/><text x="74.8693%" y="431.50"></text></g><g><title>dlerror (1 samples, 0.10%)</title><rect x="74.8223%" y="517" width="0.1015%" height="15" fill="rgb(229,80,37)" fg:x="737" fg:w="1"/><text x="75.0723%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.51%)</title><rect x="74.8223%" y="549" width="0.5076%" height="15" fill="rgb(253,8,37)" fg:x="737" fg:w="5"/><text x="75.0723%" y="559.50"></text></g><g><title>libloading::os::unix::Library::open (5 samples, 0.51%)</title><rect x="74.8223%" y="533" width="0.5076%" height="15" fill="rgb(215,16,43)" fg:x="737" fg:w="5"/><text x="75.0723%" y="543.50"></text></g><g><title>dlopen (4 samples, 0.41%)</title><rect x="74.9239%" y="517" width="0.4061%" height="15" fill="rgb(236,219,16)" fg:x="738" fg:w="4"/><text x="75.1739%" y="527.50"></text></g><g><title>_dl_catch_error (4 samples, 0.41%)</title><rect x="74.9239%" y="501" width="0.4061%" height="15" fill="rgb(251,0,3)" fg:x="738" fg:w="4"/><text x="75.1739%" y="511.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.41%)</title><rect x="74.9239%" y="485" width="0.4061%" height="15" fill="rgb(207,133,37)" fg:x="738" fg:w="4"/><text x="75.1739%" y="495.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.41%)</title><rect x="74.9239%" y="469" width="0.4061%" height="15" fill="rgb(250,143,20)" fg:x="738" fg:w="4"/><text x="75.1739%" y="479.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.41%)</title><rect x="74.9239%" y="453" width="0.4061%" height="15" fill="rgb(242,19,50)" fg:x="738" fg:w="4"/><text x="75.1739%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (15 samples, 1.52%)</title><rect x="73.9086%" y="597" width="1.5228%" height="15" fill="rgb(206,124,43)" fg:x="728" fg:w="15"/><text x="74.1586%" y="607.50"></text></g><g><title>engine::session::Session::new (15 samples, 1.52%)</title><rect x="73.9086%" y="581" width="1.5228%" height="15" fill="rgb(229,4,38)" fg:x="728" fg:w="15"/><text x="74.1586%" y="591.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.71%)</title><rect x="74.7208%" y="565" width="0.7107%" height="15" fill="rgb(247,220,45)" fg:x="736" fg:w="7"/><text x="74.9708%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.10%)</title><rect x="75.3299%" y="549" width="0.1015%" height="15" fill="rgb(247,195,0)" fg:x="742" fg:w="1"/><text x="75.5799%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.10%)</title><rect x="75.3299%" y="533" width="0.1015%" height="15" fill="rgb(252,12,19)" fg:x="742" fg:w="1"/><text x="75.5799%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.10%)</title><rect x="75.4315%" y="581" width="0.1015%" height="15" fill="rgb(222,49,50)" fg:x="743" fg:w="1"/><text x="75.6815%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.10%)</title><rect x="75.4315%" y="565" width="0.1015%" height="15" fill="rgb(209,157,28)" fg:x="743" fg:w="1"/><text x="75.6815%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="75.5330%" y="437" width="0.1015%" height="15" fill="rgb(238,174,24)" fg:x="744" fg:w="1"/><text x="75.7830%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.20%)</title><rect x="75.5330%" y="485" width="0.2030%" height="15" fill="rgb(224,17,28)" fg:x="744" fg:w="2"/><text x="75.7830%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.20%)</title><rect x="75.5330%" y="469" width="0.2030%" height="15" fill="rgb(249,7,29)" fg:x="744" fg:w="2"/><text x="75.7830%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.20%)</title><rect x="75.5330%" y="453" width="0.2030%" height="15" fill="rgb(243,178,4)" fg:x="744" fg:w="2"/><text x="75.7830%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.10%)</title><rect x="75.6345%" y="437" width="0.1015%" height="15" fill="rgb(246,138,35)" fg:x="745" fg:w="1"/><text x="75.8845%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="75.8376%" y="469" width="0.1015%" height="15" fill="rgb(251,85,18)" fg:x="747" fg:w="1"/><text x="76.0876%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="75.8376%" y="453" width="0.1015%" height="15" fill="rgb(254,55,9)" fg:x="747" fg:w="1"/><text x="76.0876%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="75.8376%" y="437" width="0.1015%" height="15" fill="rgb(248,4,50)" fg:x="747" fg:w="1"/><text x="76.0876%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="75.8376%" y="421" width="0.1015%" height="15" fill="rgb(215,208,14)" fg:x="747" fg:w="1"/><text x="76.0876%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.51%)</title><rect x="75.5330%" y="501" width="0.5076%" height="15" fill="rgb(218,37,18)" fg:x="744" fg:w="5"/><text x="75.7830%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.30%)</title><rect x="75.7360%" y="485" width="0.3046%" height="15" fill="rgb(206,104,13)" fg:x="746" fg:w="3"/><text x="75.9860%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.10%)</title><rect x="75.9391%" y="469" width="0.1015%" height="15" fill="rgb(248,94,22)" fg:x="748" fg:w="1"/><text x="76.1891%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="75.9391%" y="453" width="0.1015%" height="15" fill="rgb(235,42,46)" fg:x="748" fg:w="1"/><text x="76.1891%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="75.9391%" y="437" width="0.1015%" height="15" fill="rgb(220,228,48)" fg:x="748" fg:w="1"/><text x="76.1891%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="75.9391%" y="421" width="0.1015%" height="15" fill="rgb(216,58,12)" fg:x="748" fg:w="1"/><text x="76.1891%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="75.9391%" y="405" width="0.1015%" height="15" fill="rgb(223,97,52)" fg:x="748" fg:w="1"/><text x="76.1891%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.61%)</title><rect x="75.5330%" y="517" width="0.6091%" height="15" fill="rgb(208,159,17)" fg:x="744" fg:w="6"/><text x="75.7830%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="76.0406%" y="501" width="0.1015%" height="15" fill="rgb(215,172,9)" fg:x="749" fg:w="1"/><text x="76.2906%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="76.0406%" y="485" width="0.1015%" height="15" fill="rgb(252,175,30)" fg:x="749" fg:w="1"/><text x="76.2906%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="76.0406%" y="469" width="0.1015%" height="15" fill="rgb(209,159,10)" fg:x="749" fg:w="1"/><text x="76.2906%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="76.0406%" y="453" width="0.1015%" height="15" fill="rgb(229,73,51)" fg:x="749" fg:w="1"/><text x="76.2906%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="76.1421%" y="469" width="0.1015%" height="15" fill="rgb(208,212,43)" fg:x="750" fg:w="1"/><text x="76.3921%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="76.2437%" y="437" width="0.1015%" height="15" fill="rgb(254,123,53)" fg:x="751" fg:w="1"/><text x="76.4937%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.10%)</title><rect x="76.2437%" y="421" width="0.1015%" height="15" fill="rgb(254,128,49)" fg:x="751" fg:w="1"/><text x="76.4937%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="76.2437%" y="405" width="0.1015%" height="15" fill="rgb(246,16,16)" fg:x="751" fg:w="1"/><text x="76.4937%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="76.1421%" y="517" width="0.3046%" height="15" fill="rgb(209,200,1)" fg:x="750" fg:w="3"/><text x="76.3921%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.30%)</title><rect x="76.1421%" y="501" width="0.3046%" height="15" fill="rgb(235,9,3)" fg:x="750" fg:w="3"/><text x="76.3921%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="76.1421%" y="485" width="0.3046%" height="15" fill="rgb(233,121,54)" fg:x="750" fg:w="3"/><text x="76.3921%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="76.2437%" y="469" width="0.2030%" height="15" fill="rgb(236,80,25)" fg:x="751" fg:w="2"/><text x="76.4937%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="76.2437%" y="453" width="0.2030%" height="15" fill="rgb(220,44,24)" fg:x="751" fg:w="2"/><text x="76.4937%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="76.3452%" y="437" width="0.1015%" height="15" fill="rgb(236,225,16)" fg:x="752" fg:w="1"/><text x="76.5952%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.10%)</title><rect x="76.5482%" y="469" width="0.1015%" height="15" fill="rgb(237,140,0)" fg:x="754" fg:w="1"/><text x="76.7982%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (13 samples, 1.32%)</title><rect x="75.5330%" y="549" width="1.3198%" height="15" fill="rgb(243,225,53)" fg:x="744" fg:w="13"/><text x="75.7830%" y="559.50"></text></g><g><title>engine::session::Session::check_for_changes (13 samples, 1.32%)</title><rect x="75.5330%" y="533" width="1.3198%" height="15" fill="rgb(240,140,30)" fg:x="744" fg:w="13"/><text x="75.7830%" y="543.50"></text></g><g><title>kernel::compare::any_entity_changes (4 samples, 0.41%)</title><rect x="76.4467%" y="517" width="0.4061%" height="15" fill="rgb(217,51,16)" fg:x="753" fg:w="4"/><text x="76.6967%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (3 samples, 0.30%)</title><rect x="76.5482%" y="501" width="0.3046%" height="15" fill="rgb(245,75,50)" fg:x="754" fg:w="3"/><text x="76.7982%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.30%)</title><rect x="76.5482%" y="485" width="0.3046%" height="15" fill="rgb(208,174,22)" fg:x="754" fg:w="3"/><text x="76.7982%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.20%)</title><rect x="76.6497%" y="469" width="0.2030%" height="15" fill="rgb(219,98,50)" fg:x="755" fg:w="2"/><text x="76.8997%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="76.6497%" y="453" width="0.2030%" height="15" fill="rgb(243,138,3)" fg:x="755" fg:w="2"/><text x="76.8997%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.20%)</title><rect x="76.6497%" y="437" width="0.2030%" height="15" fill="rgb(243,132,26)" fg:x="755" fg:w="2"/><text x="76.8997%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.20%)</title><rect x="76.6497%" y="421" width="0.2030%" height="15" fill="rgb(250,201,8)" fg:x="755" fg:w="2"/><text x="76.8997%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.20%)</title><rect x="76.6497%" y="405" width="0.2030%" height="15" fill="rgb(213,91,26)" fg:x="755" fg:w="2"/><text x="76.8997%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="76.6497%" y="389" width="0.2030%" height="15" fill="rgb(229,117,1)" fg:x="755" fg:w="2"/><text x="76.8997%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="76.7513%" y="373" width="0.1015%" height="15" fill="rgb(229,24,6)" fg:x="756" fg:w="1"/><text x="77.0013%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.10%)</title><rect x="76.7513%" y="357" width="0.1015%" height="15" fill="rgb(206,69,11)" fg:x="756" fg:w="1"/><text x="77.0013%" y="367.50"></text></g><g><title>engine::session::Session::flush (14 samples, 1.42%)</title><rect x="75.5330%" y="581" width="1.4213%" height="15" fill="rgb(234,111,34)" fg:x="744" fg:w="14"/><text x="75.7830%" y="591.50"></text></g><g><title>engine::session::Session::save_entity_changes (14 samples, 1.42%)</title><rect x="75.5330%" y="565" width="1.4213%" height="15" fill="rgb(213,187,51)" fg:x="744" fg:w="14"/><text x="75.7830%" y="575.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.10%)</title><rect x="76.8528%" y="549" width="0.1015%" height="15" fill="rgb(207,45,11)" fg:x="757" fg:w="1"/><text x="77.1028%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="76.8528%" y="533" width="0.1015%" height="15" fill="rgb(225,151,47)" fg:x="757" fg:w="1"/><text x="77.1028%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="76.8528%" y="517" width="0.1015%" height="15" fill="rgb(211,226,5)" fg:x="757" fg:w="1"/><text x="77.1028%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="76.8528%" y="501" width="0.1015%" height="15" fill="rgb(214,83,52)" fg:x="757" fg:w="1"/><text x="77.1028%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="76.8528%" y="485" width="0.1015%" height="15" fill="rgb(229,49,53)" fg:x="757" fg:w="1"/><text x="77.1028%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="76.8528%" y="469" width="0.1015%" height="15" fill="rgb(246,8,28)" fg:x="757" fg:w="1"/><text x="77.1028%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="76.8528%" y="453" width="0.1015%" height="15" fill="rgb(207,28,41)" fg:x="757" fg:w="1"/><text x="77.1028%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="76.8528%" y="437" width="0.1015%" height="15" fill="rgb(254,22,25)" fg:x="757" fg:w="1"/><text x="77.1028%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="76.8528%" y="421" width="0.1015%" height="15" fill="rgb(209,120,42)" fg:x="757" fg:w="1"/><text x="77.1028%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="76.8528%" y="405" width="0.1015%" height="15" fill="rgb(216,194,18)" fg:x="757" fg:w="1"/><text x="77.1028%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="76.8528%" y="389" width="0.1015%" height="15" fill="rgb(213,70,17)" fg:x="757" fg:w="1"/><text x="77.1028%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="76.8528%" y="373" width="0.1015%" height="15" fill="rgb(228,66,19)" fg:x="757" fg:w="1"/><text x="77.1028%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="76.8528%" y="357" width="0.1015%" height="15" fill="rgb(236,221,54)" fg:x="757" fg:w="1"/><text x="77.1028%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="76.8528%" y="341" width="0.1015%" height="15" fill="rgb(207,175,15)" fg:x="757" fg:w="1"/><text x="77.1028%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="76.8528%" y="325" width="0.1015%" height="15" fill="rgb(234,76,8)" fg:x="757" fg:w="1"/><text x="77.1028%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="76.8528%" y="309" width="0.1015%" height="15" fill="rgb(243,106,0)" fg:x="757" fg:w="1"/><text x="77.1028%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="76.8528%" y="293" width="0.1015%" height="15" fill="rgb(208,48,19)" fg:x="757" fg:w="1"/><text x="77.1028%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="76.8528%" y="277" width="0.1015%" height="15" fill="rgb(251,50,29)" fg:x="757" fg:w="1"/><text x="77.1028%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="76.8528%" y="261" width="0.1015%" height="15" fill="rgb(222,31,49)" fg:x="757" fg:w="1"/><text x="77.1028%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="76.8528%" y="245" width="0.1015%" height="15" fill="rgb(232,33,18)" fg:x="757" fg:w="1"/><text x="77.1028%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="76.8528%" y="229" width="0.1015%" height="15" fill="rgb(209,1,44)" fg:x="757" fg:w="1"/><text x="77.1028%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="76.8528%" y="213" width="0.1015%" height="15" fill="rgb(211,7,1)" fg:x="757" fg:w="1"/><text x="77.1028%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="76.8528%" y="197" width="0.1015%" height="15" fill="rgb(224,111,27)" fg:x="757" fg:w="1"/><text x="77.1028%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="76.8528%" y="181" width="0.1015%" height="15" fill="rgb(252,195,39)" fg:x="757" fg:w="1"/><text x="77.1028%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="76.8528%" y="165" width="0.1015%" height="15" fill="rgb(237,198,5)" fg:x="757" fg:w="1"/><text x="77.1028%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="76.8528%" y="149" width="0.1015%" height="15" fill="rgb(232,148,1)" fg:x="757" fg:w="1"/><text x="77.1028%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="76.8528%" y="133" width="0.1015%" height="15" fill="rgb(249,41,3)" fg:x="757" fg:w="1"/><text x="77.1028%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="76.8528%" y="117" width="0.1015%" height="15" fill="rgb(215,14,33)" fg:x="757" fg:w="1"/><text x="77.1028%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="76.8528%" y="101" width="0.1015%" height="15" fill="rgb(209,146,24)" fg:x="757" fg:w="1"/><text x="77.1028%" y="111.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="76.8528%" y="85" width="0.1015%" height="15" fill="rgb(219,51,47)" fg:x="757" fg:w="1"/><text x="77.1028%" y="95.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.10%)</title><rect x="76.9543%" y="549" width="0.1015%" height="15" fill="rgb(234,217,40)" fg:x="758" fg:w="1"/><text x="77.2043%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="76.9543%" y="533" width="0.1015%" height="15" fill="rgb(228,34,26)" fg:x="758" fg:w="1"/><text x="77.2043%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="76.9543%" y="517" width="0.1015%" height="15" fill="rgb(224,50,29)" fg:x="758" fg:w="1"/><text x="77.2043%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="76.9543%" y="501" width="0.1015%" height="15" fill="rgb(205,79,51)" fg:x="758" fg:w="1"/><text x="77.2043%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="76.9543%" y="485" width="0.1015%" height="15" fill="rgb(218,136,28)" fg:x="758" fg:w="1"/><text x="77.2043%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="76.9543%" y="469" width="0.1015%" height="15" fill="rgb(220,150,10)" fg:x="758" fg:w="1"/><text x="77.2043%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="76.9543%" y="453" width="0.1015%" height="15" fill="rgb(242,158,47)" fg:x="758" fg:w="1"/><text x="77.2043%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="76.9543%" y="437" width="0.1015%" height="15" fill="rgb(209,68,0)" fg:x="758" fg:w="1"/><text x="77.2043%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="76.9543%" y="421" width="0.1015%" height="15" fill="rgb(208,13,41)" fg:x="758" fg:w="1"/><text x="77.2043%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="77.0558%" y="517" width="0.1015%" height="15" fill="rgb(226,201,7)" fg:x="759" fg:w="1"/><text x="77.3058%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="77.0558%" y="501" width="0.1015%" height="15" fill="rgb(236,103,26)" fg:x="759" fg:w="1"/><text x="77.3058%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="77.0558%" y="485" width="0.1015%" height="15" fill="rgb(243,162,8)" fg:x="759" fg:w="1"/><text x="77.3058%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="77.0558%" y="469" width="0.1015%" height="15" fill="rgb(237,225,11)" fg:x="759" fg:w="1"/><text x="77.3058%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (3 samples, 0.30%)</title><rect x="76.9543%" y="581" width="0.3046%" height="15" fill="rgb(247,186,32)" fg:x="758" fg:w="3"/><text x="77.2043%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.30%)</title><rect x="76.9543%" y="565" width="0.3046%" height="15" fill="rgb(215,26,28)" fg:x="758" fg:w="3"/><text x="77.2043%" y="575.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.20%)</title><rect x="77.0558%" y="549" width="0.2030%" height="15" fill="rgb(208,121,6)" fg:x="759" fg:w="2"/><text x="77.3058%" y="559.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.20%)</title><rect x="77.0558%" y="533" width="0.2030%" height="15" fill="rgb(225,91,3)" fg:x="759" fg:w="2"/><text x="77.3058%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.10%)</title><rect x="77.1574%" y="517" width="0.1015%" height="15" fill="rgb(246,119,36)" fg:x="760" fg:w="1"/><text x="77.4074%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="77.1574%" y="501" width="0.1015%" height="15" fill="rgb(254,173,2)" fg:x="760" fg:w="1"/><text x="77.4074%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="77.1574%" y="485" width="0.1015%" height="15" fill="rgb(209,87,54)" fg:x="760" fg:w="1"/><text x="77.4074%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.10%)</title><rect x="77.2589%" y="581" width="0.1015%" height="15" fill="rgb(223,216,20)" fg:x="761" fg:w="1"/><text x="77.5089%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.10%)</title><rect x="77.2589%" y="565" width="0.1015%" height="15" fill="rgb(220,31,8)" fg:x="761" fg:w="1"/><text x="77.5089%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.10%)</title><rect x="77.2589%" y="549" width="0.1015%" height="15" fill="rgb(220,185,15)" fg:x="761" fg:w="1"/><text x="77.5089%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.10%)</title><rect x="77.2589%" y="533" width="0.1015%" height="15" fill="rgb(247,190,50)" fg:x="761" fg:w="1"/><text x="77.5089%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.10%)</title><rect x="77.2589%" y="517" width="0.1015%" height="15" fill="rgb(239,173,47)" fg:x="761" fg:w="1"/><text x="77.5089%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="77.3604%" y="565" width="0.1015%" height="15" fill="rgb(218,190,42)" fg:x="762" fg:w="1"/><text x="77.6104%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.10%)</title><rect x="77.4619%" y="565" width="0.1015%" height="15" fill="rgb(251,207,16)" fg:x="763" fg:w="1"/><text x="77.7119%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="77.4619%" y="549" width="0.1015%" height="15" fill="rgb(222,199,47)" fg:x="763" fg:w="1"/><text x="77.7119%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.10%)</title><rect x="77.4619%" y="533" width="0.1015%" height="15" fill="rgb(245,190,7)" fg:x="763" fg:w="1"/><text x="77.7119%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.10%)</title><rect x="77.4619%" y="517" width="0.1015%" height="15" fill="rgb(239,85,38)" fg:x="763" fg:w="1"/><text x="77.7119%" y="527.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.10%)</title><rect x="77.4619%" y="501" width="0.1015%" height="15" fill="rgb(229,69,51)" fg:x="763" fg:w="1"/><text x="77.7119%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="77.4619%" y="485" width="0.1015%" height="15" fill="rgb(231,104,51)" fg:x="763" fg:w="1"/><text x="77.7119%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.10%)</title><rect x="77.5635%" y="533" width="0.1015%" height="15" fill="rgb(235,49,4)" fg:x="764" fg:w="1"/><text x="77.8135%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="77.5635%" y="517" width="0.1015%" height="15" fill="rgb(246,166,20)" fg:x="764" fg:w="1"/><text x="77.8135%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="77.5635%" y="501" width="0.1015%" height="15" fill="rgb(230,119,37)" fg:x="764" fg:w="1"/><text x="77.8135%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="77.5635%" y="485" width="0.1015%" height="15" fill="rgb(234,77,34)" fg:x="764" fg:w="1"/><text x="77.8135%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="77.5635%" y="469" width="0.1015%" height="15" fill="rgb(211,222,33)" fg:x="764" fg:w="1"/><text x="77.8135%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="77.5635%" y="453" width="0.1015%" height="15" fill="rgb(226,45,42)" fg:x="764" fg:w="1"/><text x="77.8135%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="77.5635%" y="437" width="0.1015%" height="15" fill="rgb(215,174,28)" fg:x="764" fg:w="1"/><text x="77.8135%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="77.5635%" y="421" width="0.1015%" height="15" fill="rgb(254,173,49)" fg:x="764" fg:w="1"/><text x="77.8135%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="77.5635%" y="405" width="0.1015%" height="15" fill="rgb(229,191,6)" fg:x="764" fg:w="1"/><text x="77.8135%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="77.5635%" y="389" width="0.1015%" height="15" fill="rgb(212,145,22)" fg:x="764" fg:w="1"/><text x="77.8135%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="77.5635%" y="373" width="0.1015%" height="15" fill="rgb(226,6,51)" fg:x="764" fg:w="1"/><text x="77.8135%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="77.5635%" y="357" width="0.1015%" height="15" fill="rgb(227,128,8)" fg:x="764" fg:w="1"/><text x="77.8135%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="77.5635%" y="341" width="0.1015%" height="15" fill="rgb(205,24,10)" fg:x="764" fg:w="1"/><text x="77.8135%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="77.6650%" y="533" width="0.1015%" height="15" fill="rgb(217,147,27)" fg:x="765" fg:w="1"/><text x="77.9150%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="77.6650%" y="517" width="0.1015%" height="15" fill="rgb(250,82,42)" fg:x="765" fg:w="1"/><text x="77.9150%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.10%)</title><rect x="77.6650%" y="501" width="0.1015%" height="15" fill="rgb(248,93,17)" fg:x="765" fg:w="1"/><text x="77.9150%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="77.6650%" y="485" width="0.1015%" height="15" fill="rgb(254,212,40)" fg:x="765" fg:w="1"/><text x="77.9150%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="77.6650%" y="469" width="0.1015%" height="15" fill="rgb(229,209,2)" fg:x="765" fg:w="1"/><text x="77.9150%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="77.6650%" y="453" width="0.1015%" height="15" fill="rgb(211,50,43)" fg:x="765" fg:w="1"/><text x="77.9150%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="77.6650%" y="437" width="0.1015%" height="15" fill="rgb(245,196,29)" fg:x="765" fg:w="1"/><text x="77.9150%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="77.6650%" y="421" width="0.1015%" height="15" fill="rgb(216,132,13)" fg:x="765" fg:w="1"/><text x="77.9150%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="77.6650%" y="405" width="0.1015%" height="15" fill="rgb(251,108,21)" fg:x="765" fg:w="1"/><text x="77.9150%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="77.6650%" y="389" width="0.1015%" height="15" fill="rgb(229,174,54)" fg:x="765" fg:w="1"/><text x="77.9150%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="77.6650%" y="373" width="0.1015%" height="15" fill="rgb(211,175,47)" fg:x="765" fg:w="1"/><text x="77.9150%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="77.6650%" y="357" width="0.1015%" height="15" fill="rgb(234,5,37)" fg:x="765" fg:w="1"/><text x="77.9150%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="77.6650%" y="341" width="0.1015%" height="15" fill="rgb(244,150,43)" fg:x="765" fg:w="1"/><text x="77.9150%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="77.6650%" y="325" width="0.1015%" height="15" fill="rgb(242,172,38)" fg:x="765" fg:w="1"/><text x="77.9150%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="77.6650%" y="309" width="0.1015%" height="15" fill="rgb(205,27,8)" fg:x="765" fg:w="1"/><text x="77.9150%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="77.7665%" y="469" width="0.1015%" height="15" fill="rgb(217,57,3)" fg:x="766" fg:w="1"/><text x="78.0165%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="77.7665%" y="453" width="0.1015%" height="15" fill="rgb(242,21,38)" fg:x="766" fg:w="1"/><text x="78.0165%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="77.7665%" y="437" width="0.1015%" height="15" fill="rgb(209,64,43)" fg:x="766" fg:w="1"/><text x="78.0165%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="77.7665%" y="421" width="0.1015%" height="15" fill="rgb(222,2,46)" fg:x="766" fg:w="1"/><text x="78.0165%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.20%)</title><rect x="77.7665%" y="485" width="0.2030%" height="15" fill="rgb(218,19,44)" fg:x="766" fg:w="2"/><text x="78.0165%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="77.8680%" y="469" width="0.1015%" height="15" fill="rgb(240,203,42)" fg:x="767" fg:w="1"/><text x="78.1180%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="77.9695%" y="453" width="0.1015%" height="15" fill="rgb(229,23,45)" fg:x="768" fg:w="1"/><text x="78.2195%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.20%)</title><rect x="77.9695%" y="469" width="0.2030%" height="15" fill="rgb(205,228,51)" fg:x="768" fg:w="2"/><text x="78.2195%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.10%)</title><rect x="78.0711%" y="453" width="0.1015%" height="15" fill="rgb(239,36,20)" fg:x="769" fg:w="1"/><text x="78.3211%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.10%)</title><rect x="78.0711%" y="437" width="0.1015%" height="15" fill="rgb(248,172,27)" fg:x="769" fg:w="1"/><text x="78.3211%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="78.0711%" y="421" width="0.1015%" height="15" fill="rgb(244,55,32)" fg:x="769" fg:w="1"/><text x="78.3211%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="78.0711%" y="405" width="0.1015%" height="15" fill="rgb(215,97,16)" fg:x="769" fg:w="1"/><text x="78.3211%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.61%)</title><rect x="77.7665%" y="501" width="0.6091%" height="15" fill="rgb(224,80,29)" fg:x="766" fg:w="6"/><text x="78.0165%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.41%)</title><rect x="77.9695%" y="485" width="0.4061%" height="15" fill="rgb(216,93,47)" fg:x="768" fg:w="4"/><text x="78.2195%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.20%)</title><rect x="78.1726%" y="469" width="0.2030%" height="15" fill="rgb(238,159,10)" fg:x="770" fg:w="2"/><text x="78.4226%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.20%)</title><rect x="78.1726%" y="453" width="0.2030%" height="15" fill="rgb(223,98,29)" fg:x="770" fg:w="2"/><text x="78.4226%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="78.1726%" y="437" width="0.2030%" height="15" fill="rgb(210,176,23)" fg:x="770" fg:w="2"/><text x="78.4226%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.20%)</title><rect x="78.1726%" y="421" width="0.2030%" height="15" fill="rgb(242,162,27)" fg:x="770" fg:w="2"/><text x="78.4226%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.20%)</title><rect x="78.1726%" y="405" width="0.2030%" height="15" fill="rgb(245,109,32)" fg:x="770" fg:w="2"/><text x="78.4226%" y="415.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="78.2741%" y="389" width="0.1015%" height="15" fill="rgb(248,87,8)" fg:x="771" fg:w="1"/><text x="78.5241%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="78.3756%" y="469" width="0.1015%" height="15" fill="rgb(250,160,50)" fg:x="772" fg:w="1"/><text x="78.6256%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="78.3756%" y="453" width="0.1015%" height="15" fill="rgb(246,165,25)" fg:x="772" fg:w="1"/><text x="78.6256%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="78.3756%" y="501" width="0.3046%" height="15" fill="rgb(249,219,3)" fg:x="772" fg:w="3"/><text x="78.6256%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.30%)</title><rect x="78.3756%" y="485" width="0.3046%" height="15" fill="rgb(226,66,5)" fg:x="772" fg:w="3"/><text x="78.6256%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="78.4772%" y="469" width="0.2030%" height="15" fill="rgb(250,220,43)" fg:x="773" fg:w="2"/><text x="78.7272%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="78.4772%" y="453" width="0.2030%" height="15" fill="rgb(225,111,31)" fg:x="773" fg:w="2"/><text x="78.7272%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.10%)</title><rect x="78.6802%" y="453" width="0.1015%" height="15" fill="rgb(248,106,18)" fg:x="775" fg:w="1"/><text x="78.9302%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="78.6802%" y="437" width="0.1015%" height="15" fill="rgb(220,226,45)" fg:x="775" fg:w="1"/><text x="78.9302%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="78.6802%" y="421" width="0.1015%" height="15" fill="rgb(208,58,53)" fg:x="775" fg:w="1"/><text x="78.9302%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.10%)</title><rect x="78.6802%" y="405" width="0.1015%" height="15" fill="rgb(209,133,1)" fg:x="775" fg:w="1"/><text x="78.9302%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.10%)</title><rect x="78.7817%" y="453" width="0.1015%" height="15" fill="rgb(228,216,27)" fg:x="776" fg:w="1"/><text x="79.0317%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="78.7817%" y="437" width="0.1015%" height="15" fill="rgb(238,155,2)" fg:x="776" fg:w="1"/><text x="79.0317%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.10%)</title><rect x="79.0863%" y="389" width="0.1015%" height="15" fill="rgb(244,99,37)" fg:x="779" fg:w="1"/><text x="79.3363%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="79.0863%" y="373" width="0.1015%" height="15" fill="rgb(254,32,3)" fg:x="779" fg:w="1"/><text x="79.3363%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="79.0863%" y="357" width="0.1015%" height="15" fill="rgb(234,46,50)" fg:x="779" fg:w="1"/><text x="79.3363%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.41%)</title><rect x="78.8832%" y="453" width="0.4061%" height="15" fill="rgb(232,118,51)" fg:x="777" fg:w="4"/><text x="79.1332%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.41%)</title><rect x="78.8832%" y="437" width="0.4061%" height="15" fill="rgb(207,24,32)" fg:x="777" fg:w="4"/><text x="79.1332%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.41%)</title><rect x="78.8832%" y="421" width="0.4061%" height="15" fill="rgb(208,107,43)" fg:x="777" fg:w="4"/><text x="79.1332%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.20%)</title><rect x="79.0863%" y="405" width="0.2030%" height="15" fill="rgb(231,28,9)" fg:x="779" fg:w="2"/><text x="79.3363%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="79.1878%" y="389" width="0.1015%" height="15" fill="rgb(241,204,15)" fg:x="780" fg:w="1"/><text x="79.4378%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.10%)</title><rect x="79.1878%" y="373" width="0.1015%" height="15" fill="rgb(214,54,15)" fg:x="780" fg:w="1"/><text x="79.4378%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="79.2893%" y="453" width="0.1015%" height="15" fill="rgb(230,12,28)" fg:x="781" fg:w="1"/><text x="79.5393%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (1 samples, 0.10%)</title><rect x="79.2893%" y="437" width="0.1015%" height="15" fill="rgb(221,171,5)" fg:x="781" fg:w="1"/><text x="79.5393%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="79.2893%" y="421" width="0.1015%" height="15" fill="rgb(207,72,25)" fg:x="781" fg:w="1"/><text x="79.5393%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="79.2893%" y="405" width="0.1015%" height="15" fill="rgb(249,79,37)" fg:x="781" fg:w="1"/><text x="79.5393%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (8 samples, 0.81%)</title><rect x="78.6802%" y="485" width="0.8122%" height="15" fill="rgb(209,98,49)" fg:x="775" fg:w="8"/><text x="78.9302%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.81%)</title><rect x="78.6802%" y="469" width="0.8122%" height="15" fill="rgb(221,62,13)" fg:x="775" fg:w="8"/><text x="78.9302%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.10%)</title><rect x="79.3909%" y="453" width="0.1015%" height="15" fill="rgb(223,39,6)" fg:x="782" fg:w="1"/><text x="79.6409%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.10%)</title><rect x="79.3909%" y="437" width="0.1015%" height="15" fill="rgb(246,163,20)" fg:x="782" fg:w="1"/><text x="79.6409%" y="447.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (18 samples, 1.83%)</title><rect x="77.7665%" y="533" width="1.8274%" height="15" fill="rgb(211,111,29)" fg:x="766" fg:w="18"/><text x="78.0165%" y="543.50">e..</text></g><g><title>engine::session::Session::check_for_changes (18 samples, 1.83%)</title><rect x="77.7665%" y="517" width="1.8274%" height="15" fill="rgb(243,118,5)" fg:x="766" fg:w="18"/><text x="78.0165%" y="527.50">e..</text></g><g><title>kernel::compare::any_entity_changes (9 samples, 0.91%)</title><rect x="78.6802%" y="501" width="0.9137%" height="15" fill="rgb(240,144,52)" fg:x="775" fg:w="9"/><text x="78.9302%" y="511.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.10%)</title><rect x="79.4924%" y="485" width="0.1015%" height="15" fill="rgb(244,158,36)" fg:x="783" fg:w="1"/><text x="79.7424%" y="495.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.10%)</title><rect x="79.4924%" y="469" width="0.1015%" height="15" fill="rgb(241,109,37)" fg:x="783" fg:w="1"/><text x="79.7424%" y="479.50"></text></g><g><title>engine::session::Session::flush (21 samples, 2.13%)</title><rect x="77.5635%" y="565" width="2.1320%" height="15" fill="rgb(213,95,32)" fg:x="764" fg:w="21"/><text x="77.8135%" y="575.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (21 samples, 2.13%)</title><rect x="77.5635%" y="549" width="2.1320%" height="15" fill="rgb(252,193,9)" fg:x="764" fg:w="21"/><text x="77.8135%" y="559.50">e..</text></g><g><title>std::env::_var (1 samples, 0.10%)</title><rect x="79.5939%" y="533" width="0.1015%" height="15" fill="rgb(225,213,21)" fg:x="784" fg:w="1"/><text x="79.8439%" y="543.50"></text></g><g><title>std::env::var_os (1 samples, 0.10%)</title><rect x="79.5939%" y="517" width="0.1015%" height="15" fill="rgb(220,172,46)" fg:x="784" fg:w="1"/><text x="79.8439%" y="527.50"></text></g><g><title>std::env::_var (1 samples, 0.10%)</title><rect x="79.5939%" y="501" width="0.1015%" height="15" fill="rgb(235,75,41)" fg:x="784" fg:w="1"/><text x="79.8439%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.41%)</title><rect x="79.6954%" y="549" width="0.4061%" height="15" fill="rgb(213,86,9)" fg:x="785" fg:w="4"/><text x="79.9454%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.41%)</title><rect x="79.6954%" y="533" width="0.4061%" height="15" fill="rgb(238,127,51)" fg:x="785" fg:w="4"/><text x="79.9454%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (4 samples, 0.41%)</title><rect x="79.6954%" y="517" width="0.4061%" height="15" fill="rgb(215,2,54)" fg:x="785" fg:w="4"/><text x="79.9454%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.41%)</title><rect x="79.6954%" y="501" width="0.4061%" height="15" fill="rgb(245,80,6)" fg:x="785" fg:w="4"/><text x="79.9454%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.41%)</title><rect x="79.6954%" y="485" width="0.4061%" height="15" fill="rgb(233,106,42)" fg:x="785" fg:w="4"/><text x="79.9454%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.41%)</title><rect x="79.6954%" y="469" width="0.4061%" height="15" fill="rgb(244,86,38)" fg:x="785" fg:w="4"/><text x="79.9454%" y="479.50"></text></g><g><title>__libc_malloc (4 samples, 0.41%)</title><rect x="79.6954%" y="453" width="0.4061%" height="15" fill="rgb(242,167,7)" fg:x="785" fg:w="4"/><text x="79.9454%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.10%)</title><rect x="80.1015%" y="533" width="0.1015%" height="15" fill="rgb(218,216,3)" fg:x="789" fg:w="1"/><text x="80.3515%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.10%)</title><rect x="80.1015%" y="517" width="0.1015%" height="15" fill="rgb(206,136,36)" fg:x="789" fg:w="1"/><text x="80.3515%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="80.1015%" y="501" width="0.1015%" height="15" fill="rgb(206,206,15)" fg:x="789" fg:w="1"/><text x="80.3515%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (6 samples, 0.61%)</title><rect x="79.6954%" y="565" width="0.6091%" height="15" fill="rgb(207,163,34)" fg:x="785" fg:w="6"/><text x="79.9454%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.20%)</title><rect x="80.1015%" y="549" width="0.2030%" height="15" fill="rgb(240,127,22)" fg:x="789" fg:w="2"/><text x="80.3515%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.10%)</title><rect x="80.2030%" y="533" width="0.1015%" height="15" fill="rgb(227,49,5)" fg:x="790" fg:w="1"/><text x="80.4530%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.10%)</title><rect x="80.2030%" y="517" width="0.1015%" height="15" fill="rgb(231,8,6)" fg:x="790" fg:w="1"/><text x="80.4530%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.10%)</title><rect x="80.2030%" y="501" width="0.1015%" height="15" fill="rgb(223,21,24)" fg:x="790" fg:w="1"/><text x="80.4530%" y="511.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.10%)</title><rect x="80.3046%" y="565" width="0.1015%" height="15" fill="rgb(244,44,52)" fg:x="791" fg:w="1"/><text x="80.5546%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.10%)</title><rect x="80.3046%" y="549" width="0.1015%" height="15" fill="rgb(207,73,28)" fg:x="791" fg:w="1"/><text x="80.5546%" y="559.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.10%)</title><rect x="80.3046%" y="533" width="0.1015%" height="15" fill="rgb(234,215,10)" fg:x="791" fg:w="1"/><text x="80.5546%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.10%)</title><rect x="80.4061%" y="549" width="0.1015%" height="15" fill="rgb(236,85,3)" fg:x="792" fg:w="1"/><text x="80.6561%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="80.4061%" y="533" width="0.1015%" height="15" fill="rgb(236,102,39)" fg:x="792" fg:w="1"/><text x="80.6561%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="80.4061%" y="517" width="0.1015%" height="15" fill="rgb(243,50,8)" fg:x="792" fg:w="1"/><text x="80.6561%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="80.4061%" y="501" width="0.1015%" height="15" fill="rgb(207,111,4)" fg:x="792" fg:w="1"/><text x="80.6561%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="80.4061%" y="485" width="0.1015%" height="15" fill="rgb(230,52,42)" fg:x="792" fg:w="1"/><text x="80.6561%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="80.4061%" y="469" width="0.1015%" height="15" fill="rgb(252,178,50)" fg:x="792" fg:w="1"/><text x="80.6561%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="80.4061%" y="453" width="0.1015%" height="15" fill="rgb(234,46,35)" fg:x="792" fg:w="1"/><text x="80.6561%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="80.4061%" y="437" width="0.1015%" height="15" fill="rgb(228,69,37)" fg:x="792" fg:w="1"/><text x="80.6561%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="80.4061%" y="421" width="0.1015%" height="15" fill="rgb(221,21,11)" fg:x="792" fg:w="1"/><text x="80.6561%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="80.4061%" y="405" width="0.1015%" height="15" fill="rgb(223,56,9)" fg:x="792" fg:w="1"/><text x="80.6561%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="80.4061%" y="389" width="0.1015%" height="15" fill="rgb(234,30,19)" fg:x="792" fg:w="1"/><text x="80.6561%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="80.4061%" y="373" width="0.1015%" height="15" fill="rgb(211,64,54)" fg:x="792" fg:w="1"/><text x="80.6561%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="80.4061%" y="357" width="0.1015%" height="15" fill="rgb(250,189,5)" fg:x="792" fg:w="1"/><text x="80.6561%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (32 samples, 3.25%)</title><rect x="77.3604%" y="581" width="3.2487%" height="15" fill="rgb(214,180,13)" fg:x="762" fg:w="32"/><text x="77.6104%" y="591.50">plu..</text></g><g><title>plugins_core::build::Build::occupying (2 samples, 0.20%)</title><rect x="80.4061%" y="565" width="0.2030%" height="15" fill="rgb(238,40,40)" fg:x="792" fg:w="2"/><text x="80.6561%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.10%)</title><rect x="80.5076%" y="549" width="0.1015%" height="15" fill="rgb(214,101,38)" fg:x="793" fg:w="1"/><text x="80.7576%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.10%)</title><rect x="80.5076%" y="533" width="0.1015%" height="15" fill="rgb(242,65,53)" fg:x="793" fg:w="1"/><text x="80.7576%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="80.5076%" y="517" width="0.1015%" height="15" fill="rgb(230,22,45)" fg:x="793" fg:w="1"/><text x="80.7576%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (52 samples, 5.28%)</title><rect x="75.4315%" y="597" width="5.2792%" height="15" fill="rgb(223,77,1)" fg:x="743" fg:w="52"/><text x="75.6815%" y="607.50">&lt;tests..</text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.10%)</title><rect x="80.6091%" y="581" width="0.1015%" height="15" fill="rgb(227,33,37)" fg:x="794" fg:w="1"/><text x="80.8591%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.10%)</title><rect x="80.6091%" y="565" width="0.1015%" height="15" fill="rgb(224,148,39)" fg:x="794" fg:w="1"/><text x="80.8591%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.10%)</title><rect x="80.6091%" y="549" width="0.1015%" height="15" fill="rgb(232,212,39)" fg:x="794" fg:w="1"/><text x="80.8591%" y="559.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.10%)</title><rect x="80.6091%" y="533" width="0.1015%" height="15" fill="rgb(251,172,7)" fg:x="794" fg:w="1"/><text x="80.8591%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.10%)</title><rect x="80.6091%" y="517" width="0.1015%" height="15" fill="rgb(219,39,9)" fg:x="794" fg:w="1"/><text x="80.8591%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.10%)</title><rect x="80.7107%" y="597" width="0.1015%" height="15" fill="rgb(228,118,14)" fg:x="795" fg:w="1"/><text x="80.9607%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.10%)</title><rect x="80.7107%" y="581" width="0.1015%" height="15" fill="rgb(207,140,10)" fg:x="795" fg:w="1"/><text x="80.9607%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.10%)</title><rect x="80.7107%" y="565" width="0.1015%" height="15" fill="rgb(227,111,53)" fg:x="795" fg:w="1"/><text x="80.9607%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="80.7107%" y="549" width="0.1015%" height="15" fill="rgb(216,165,16)" fg:x="795" fg:w="1"/><text x="80.9607%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="80.7107%" y="533" width="0.1015%" height="15" fill="rgb(226,111,18)" fg:x="795" fg:w="1"/><text x="80.9607%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="80.8122%" y="565" width="0.1015%" height="15" fill="rgb(251,27,17)" fg:x="796" fg:w="1"/><text x="81.0622%" y="575.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="80.8122%" y="549" width="0.1015%" height="15" fill="rgb(254,69,9)" fg:x="796" fg:w="1"/><text x="81.0622%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="80.8122%" y="533" width="0.1015%" height="15" fill="rgb(234,140,37)" fg:x="796" fg:w="1"/><text x="81.0622%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="80.8122%" y="517" width="0.1015%" height="15" fill="rgb(220,93,8)" fg:x="796" fg:w="1"/><text x="81.0622%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="80.8122%" y="501" width="0.1015%" height="15" fill="rgb(236,113,3)" fg:x="796" fg:w="1"/><text x="81.0622%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (5 samples, 0.51%)</title><rect x="80.8122%" y="581" width="0.5076%" height="15" fill="rgb(234,108,23)" fg:x="796" fg:w="5"/><text x="81.0622%" y="591.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (4 samples, 0.41%)</title><rect x="80.9137%" y="565" width="0.4061%" height="15" fill="rgb(205,114,34)" fg:x="797" fg:w="4"/><text x="81.1637%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.30%)</title><rect x="81.0152%" y="549" width="0.3046%" height="15" fill="rgb(236,200,45)" fg:x="798" fg:w="3"/><text x="81.2652%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.30%)</title><rect x="81.0152%" y="533" width="0.3046%" height="15" fill="rgb(227,194,29)" fg:x="798" fg:w="3"/><text x="81.2652%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="81.2183%" y="517" width="0.1015%" height="15" fill="rgb(250,76,42)" fg:x="800" fg:w="1"/><text x="81.4683%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="81.2183%" y="501" width="0.1015%" height="15" fill="rgb(208,128,8)" fg:x="800" fg:w="1"/><text x="81.4683%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.30%)</title><rect x="81.3198%" y="565" width="0.3046%" height="15" fill="rgb(229,209,35)" fg:x="801" fg:w="3"/><text x="81.5698%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="81.5228%" y="549" width="0.1015%" height="15" fill="rgb(215,39,53)" fg:x="803" fg:w="1"/><text x="81.7728%" y="559.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.10%)</title><rect x="81.6244%" y="565" width="0.1015%" height="15" fill="rgb(219,123,41)" fg:x="804" fg:w="1"/><text x="81.8744%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.10%)</title><rect x="81.6244%" y="549" width="0.1015%" height="15" fill="rgb(212,158,18)" fg:x="804" fg:w="1"/><text x="81.8744%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="81.6244%" y="533" width="0.1015%" height="15" fill="rgb(234,196,53)" fg:x="804" fg:w="1"/><text x="81.8744%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="81.7259%" y="517" width="0.1015%" height="15" fill="rgb(210,139,12)" fg:x="805" fg:w="1"/><text x="81.9759%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.20%)</title><rect x="81.9289%" y="501" width="0.2030%" height="15" fill="rgb(220,116,54)" fg:x="807" fg:w="2"/><text x="82.1789%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="82.0305%" y="485" width="0.1015%" height="15" fill="rgb(247,103,28)" fg:x="808" fg:w="1"/><text x="82.2805%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="82.0305%" y="469" width="0.1015%" height="15" fill="rgb(253,156,45)" fg:x="808" fg:w="1"/><text x="82.2805%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="82.0305%" y="453" width="0.1015%" height="15" fill="rgb(237,157,52)" fg:x="808" fg:w="1"/><text x="82.2805%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="82.0305%" y="437" width="0.1015%" height="15" fill="rgb(253,112,16)" fg:x="808" fg:w="1"/><text x="82.2805%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="82.1320%" y="485" width="0.1015%" height="15" fill="rgb(234,70,18)" fg:x="809" fg:w="1"/><text x="82.3820%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="82.2335%" y="485" width="0.1015%" height="15" fill="rgb(247,138,19)" fg:x="810" fg:w="1"/><text x="82.4835%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="82.2335%" y="469" width="0.1015%" height="15" fill="rgb(207,171,1)" fg:x="810" fg:w="1"/><text x="82.4835%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="82.2335%" y="453" width="0.1015%" height="15" fill="rgb(239,213,3)" fg:x="810" fg:w="1"/><text x="82.4835%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.10%)</title><rect x="82.3350%" y="469" width="0.1015%" height="15" fill="rgb(226,112,4)" fg:x="811" fg:w="1"/><text x="82.5850%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="82.3350%" y="453" width="0.1015%" height="15" fill="rgb(252,170,12)" fg:x="811" fg:w="1"/><text x="82.5850%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.20%)</title><rect x="82.3350%" y="485" width="0.2030%" height="15" fill="rgb(241,106,13)" fg:x="811" fg:w="2"/><text x="82.5850%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.10%)</title><rect x="82.4365%" y="469" width="0.1015%" height="15" fill="rgb(225,73,23)" fg:x="812" fg:w="1"/><text x="82.6865%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="82.4365%" y="453" width="0.1015%" height="15" fill="rgb(251,227,29)" fg:x="812" fg:w="1"/><text x="82.6865%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.61%)</title><rect x="82.1320%" y="501" width="0.6091%" height="15" fill="rgb(237,144,13)" fg:x="809" fg:w="6"/><text x="82.3820%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.20%)</title><rect x="82.5381%" y="485" width="0.2030%" height="15" fill="rgb(232,106,46)" fg:x="813" fg:w="2"/><text x="82.7881%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.10%)</title><rect x="82.6396%" y="469" width="0.1015%" height="15" fill="rgb(245,154,53)" fg:x="814" fg:w="1"/><text x="82.8896%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 1.22%)</title><rect x="81.7259%" y="533" width="1.2183%" height="15" fill="rgb(212,119,47)" fg:x="805" fg:w="12"/><text x="81.9759%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 1.12%)</title><rect x="81.8274%" y="517" width="1.1168%" height="15" fill="rgb(253,135,25)" fg:x="806" fg:w="11"/><text x="82.0774%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.20%)</title><rect x="82.7411%" y="501" width="0.2030%" height="15" fill="rgb(253,208,39)" fg:x="815" fg:w="2"/><text x="82.9911%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.20%)</title><rect x="82.7411%" y="485" width="0.2030%" height="15" fill="rgb(226,64,12)" fg:x="815" fg:w="2"/><text x="82.9911%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="82.8426%" y="469" width="0.1015%" height="15" fill="rgb(214,162,37)" fg:x="816" fg:w="1"/><text x="83.0926%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="82.9442%" y="533" width="0.3046%" height="15" fill="rgb(250,104,5)" fg:x="817" fg:w="3"/><text x="83.1942%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.30%)</title><rect x="82.9442%" y="517" width="0.3046%" height="15" fill="rgb(220,202,50)" fg:x="817" fg:w="3"/><text x="83.1942%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.30%)</title><rect x="82.9442%" y="501" width="0.3046%" height="15" fill="rgb(248,67,38)" fg:x="817" fg:w="3"/><text x="83.1942%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="83.0457%" y="485" width="0.2030%" height="15" fill="rgb(242,94,35)" fg:x="818" fg:w="2"/><text x="83.2957%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="83.0457%" y="469" width="0.2030%" height="15" fill="rgb(209,78,37)" fg:x="818" fg:w="2"/><text x="83.2957%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="83.1472%" y="453" width="0.1015%" height="15" fill="rgb(230,126,47)" fg:x="819" fg:w="1"/><text x="83.3972%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.10%)</title><rect x="83.1472%" y="437" width="0.1015%" height="15" fill="rgb(222,110,35)" fg:x="819" fg:w="1"/><text x="83.3972%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="83.1472%" y="421" width="0.1015%" height="15" fill="rgb(233,154,20)" fg:x="819" fg:w="1"/><text x="83.3972%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="83.2487%" y="469" width="0.1015%" height="15" fill="rgb(223,53,50)" fg:x="820" fg:w="1"/><text x="83.4987%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="83.2487%" y="517" width="0.2030%" height="15" fill="rgb(251,27,26)" fg:x="820" fg:w="2"/><text x="83.4987%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.20%)</title><rect x="83.2487%" y="501" width="0.2030%" height="15" fill="rgb(223,189,16)" fg:x="820" fg:w="2"/><text x="83.4987%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="83.2487%" y="485" width="0.2030%" height="15" fill="rgb(207,5,54)" fg:x="820" fg:w="2"/><text x="83.4987%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="83.3503%" y="469" width="0.1015%" height="15" fill="rgb(254,124,50)" fg:x="821" fg:w="1"/><text x="83.6003%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="83.3503%" y="453" width="0.1015%" height="15" fill="rgb(253,193,24)" fg:x="821" fg:w="1"/><text x="83.6003%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="83.3503%" y="437" width="0.1015%" height="15" fill="rgb(235,170,24)" fg:x="821" fg:w="1"/><text x="83.6003%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="83.3503%" y="421" width="0.1015%" height="15" fill="rgb(222,212,52)" fg:x="821" fg:w="1"/><text x="83.6003%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="83.3503%" y="405" width="0.1015%" height="15" fill="rgb(223,17,45)" fg:x="821" fg:w="1"/><text x="83.6003%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.10%)</title><rect x="83.5533%" y="485" width="0.1015%" height="15" fill="rgb(227,103,26)" fg:x="823" fg:w="1"/><text x="83.8033%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.10%)</title><rect x="83.6548%" y="485" width="0.1015%" height="15" fill="rgb(251,151,25)" fg:x="824" fg:w="1"/><text x="83.9048%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="83.6548%" y="469" width="0.1015%" height="15" fill="rgb(248,144,29)" fg:x="824" fg:w="1"/><text x="83.9048%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="83.6548%" y="453" width="0.1015%" height="15" fill="rgb(245,97,16)" fg:x="824" fg:w="1"/><text x="83.9048%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.10%)</title><rect x="83.6548%" y="437" width="0.1015%" height="15" fill="rgb(220,200,29)" fg:x="824" fg:w="1"/><text x="83.9048%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.10%)</title><rect x="83.7563%" y="485" width="0.1015%" height="15" fill="rgb(206,38,29)" fg:x="825" fg:w="1"/><text x="84.0063%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="83.7563%" y="469" width="0.1015%" height="15" fill="rgb(245,19,52)" fg:x="825" fg:w="1"/><text x="84.0063%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (5 samples, 0.51%)</title><rect x="83.4518%" y="517" width="0.5076%" height="15" fill="rgb(205,67,43)" fg:x="822" fg:w="5"/><text x="83.7018%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.51%)</title><rect x="83.4518%" y="501" width="0.5076%" height="15" fill="rgb(217,128,23)" fg:x="822" fg:w="5"/><text x="83.7018%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.10%)</title><rect x="83.8579%" y="485" width="0.1015%" height="15" fill="rgb(210,109,28)" fg:x="826" fg:w="1"/><text x="84.1079%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (1 samples, 0.10%)</title><rect x="83.8579%" y="469" width="0.1015%" height="15" fill="rgb(233,181,7)" fg:x="826" fg:w="1"/><text x="84.1079%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="83.8579%" y="453" width="0.1015%" height="15" fill="rgb(244,11,22)" fg:x="826" fg:w="1"/><text x="84.1079%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.10%)</title><rect x="84.1624%" y="421" width="0.1015%" height="15" fill="rgb(205,124,54)" fg:x="829" fg:w="1"/><text x="84.4124%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="84.1624%" y="405" width="0.1015%" height="15" fill="rgb(218,21,27)" fg:x="829" fg:w="1"/><text x="84.4124%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.10%)</title><rect x="84.1624%" y="389" width="0.1015%" height="15" fill="rgb(224,153,33)" fg:x="829" fg:w="1"/><text x="84.4124%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="84.1624%" y="373" width="0.1015%" height="15" fill="rgb(240,219,28)" fg:x="829" fg:w="1"/><text x="84.4124%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.10%)</title><rect x="84.1624%" y="357" width="0.1015%" height="15" fill="rgb(214,80,29)" fg:x="829" fg:w="1"/><text x="84.4124%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="84.1624%" y="341" width="0.1015%" height="15" fill="rgb(247,148,44)" fg:x="829" fg:w="1"/><text x="84.4124%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="84.1624%" y="325" width="0.1015%" height="15" fill="rgb(243,110,30)" fg:x="829" fg:w="1"/><text x="84.4124%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="84.1624%" y="309" width="0.1015%" height="15" fill="rgb(243,173,41)" fg:x="829" fg:w="1"/><text x="84.4124%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="84.1624%" y="293" width="0.1015%" height="15" fill="rgb(225,160,47)" fg:x="829" fg:w="1"/><text x="84.4124%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="84.2640%" y="421" width="0.1015%" height="15" fill="rgb(215,44,21)" fg:x="830" fg:w="1"/><text x="84.5140%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.51%)</title><rect x="83.9594%" y="517" width="0.5076%" height="15" fill="rgb(248,90,3)" fg:x="827" fg:w="5"/><text x="84.2094%" y="527.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.51%)</title><rect x="83.9594%" y="501" width="0.5076%" height="15" fill="rgb(220,196,49)" fg:x="827" fg:w="5"/><text x="84.2094%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.51%)</title><rect x="83.9594%" y="485" width="0.5076%" height="15" fill="rgb(217,138,14)" fg:x="827" fg:w="5"/><text x="84.2094%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.51%)</title><rect x="83.9594%" y="469" width="0.5076%" height="15" fill="rgb(219,111,20)" fg:x="827" fg:w="5"/><text x="84.2094%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.41%)</title><rect x="84.0609%" y="453" width="0.4061%" height="15" fill="rgb(218,114,4)" fg:x="828" fg:w="4"/><text x="84.3109%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.30%)</title><rect x="84.1624%" y="437" width="0.3046%" height="15" fill="rgb(238,133,3)" fg:x="829" fg:w="3"/><text x="84.4124%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="84.3655%" y="421" width="0.1015%" height="15" fill="rgb(224,95,0)" fg:x="831" fg:w="1"/><text x="84.6155%" y="431.50"></text></g><g><title>engine::session::Session::save_entity_changes (33 samples, 3.35%)</title><rect x="81.3198%" y="581" width="3.3503%" height="15" fill="rgb(220,169,35)" fg:x="801" fg:w="33"/><text x="81.5698%" y="591.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (29 samples, 2.94%)</title><rect x="81.7259%" y="565" width="2.9442%" height="15" fill="rgb(242,116,47)" fg:x="805" fg:w="29"/><text x="81.9759%" y="575.50">en..</text></g><g><title>engine::session::Session::check_for_changes (29 samples, 2.94%)</title><rect x="81.7259%" y="549" width="2.9442%" height="15" fill="rgb(251,42,20)" fg:x="805" fg:w="29"/><text x="81.9759%" y="559.50">en..</text></g><g><title>kernel::compare::any_entity_changes (14 samples, 1.42%)</title><rect x="83.2487%" y="533" width="1.4213%" height="15" fill="rgb(234,7,34)" fg:x="820" fg:w="14"/><text x="83.4987%" y="543.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.20%)</title><rect x="84.4670%" y="517" width="0.2030%" height="15" fill="rgb(243,208,13)" fg:x="832" fg:w="2"/><text x="84.7170%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="84.5685%" y="501" width="0.1015%" height="15" fill="rgb(227,33,28)" fg:x="833" fg:w="1"/><text x="84.8185%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="84.5685%" y="485" width="0.1015%" height="15" fill="rgb(250,47,37)" fg:x="833" fg:w="1"/><text x="84.8185%" y="495.50"></text></g><g><title>engine::session::Session::close (39 samples, 3.96%)</title><rect x="80.8122%" y="597" width="3.9594%" height="15" fill="rgb(235,111,52)" fg:x="796" fg:w="39"/><text x="81.0622%" y="607.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.10%)</title><rect x="84.6701%" y="581" width="0.1015%" height="15" fill="rgb(223,64,28)" fg:x="834" fg:w="1"/><text x="84.9201%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.30%)</title><rect x="84.7716%" y="501" width="0.3046%" height="15" fill="rgb(236,67,22)" fg:x="835" fg:w="3"/><text x="85.0216%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.30%)</title><rect x="84.7716%" y="485" width="0.3046%" height="15" fill="rgb(243,79,24)" fg:x="835" fg:w="3"/><text x="85.0216%" y="495.50"></text></g><g><title>realloc (3 samples, 0.30%)</title><rect x="84.7716%" y="469" width="0.3046%" height="15" fill="rgb(241,225,22)" fg:x="835" fg:w="3"/><text x="85.0216%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (4 samples, 0.41%)</title><rect x="84.7716%" y="517" width="0.4061%" height="15" fill="rgb(228,214,26)" fg:x="835" fg:w="4"/><text x="85.0216%" y="527.50"></text></g><g><title>plugins_core::tools::contained_by (1 samples, 0.10%)</title><rect x="85.0761%" y="501" width="0.1015%" height="15" fill="rgb(219,84,52)" fg:x="838" fg:w="1"/><text x="85.3261%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.10%)</title><rect x="85.0761%" y="485" width="0.1015%" height="15" fill="rgb(220,12,22)" fg:x="838" fg:w="1"/><text x="85.3261%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="85.0761%" y="469" width="0.1015%" height="15" fill="rgb(219,9,49)" fg:x="838" fg:w="1"/><text x="85.3261%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.10%)</title><rect x="85.0761%" y="453" width="0.1015%" height="15" fill="rgb(237,40,43)" fg:x="838" fg:w="1"/><text x="85.3261%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.10%)</title><rect x="85.0761%" y="437" width="0.1015%" height="15" fill="rgb(212,189,32)" fg:x="838" fg:w="1"/><text x="85.3261%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="85.0761%" y="421" width="0.1015%" height="15" fill="rgb(247,48,9)" fg:x="838" fg:w="1"/><text x="85.3261%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="85.0761%" y="405" width="0.1015%" height="15" fill="rgb(247,112,3)" fg:x="838" fg:w="1"/><text x="85.3261%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (6 samples, 0.61%)</title><rect x="84.7716%" y="549" width="0.6091%" height="15" fill="rgb(243,110,18)" fg:x="835" fg:w="6"/><text x="85.0216%" y="559.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (6 samples, 0.61%)</title><rect x="84.7716%" y="533" width="0.6091%" height="15" fill="rgb(233,223,44)" fg:x="835" fg:w="6"/><text x="85.0216%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.20%)</title><rect x="85.1777%" y="517" width="0.2030%" height="15" fill="rgb(245,160,20)" fg:x="839" fg:w="2"/><text x="85.4277%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="85.1777%" y="501" width="0.2030%" height="15" fill="rgb(225,37,1)" fg:x="839" fg:w="2"/><text x="85.4277%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.20%)</title><rect x="85.1777%" y="485" width="0.2030%" height="15" fill="rgb(253,227,39)" fg:x="839" fg:w="2"/><text x="85.4277%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="85.3807%" y="517" width="0.1015%" height="15" fill="rgb(240,179,26)" fg:x="841" fg:w="1"/><text x="85.6307%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.20%)</title><rect x="85.3807%" y="533" width="0.2030%" height="15" fill="rgb(237,212,23)" fg:x="841" fg:w="2"/><text x="85.6307%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="85.4822%" y="517" width="0.1015%" height="15" fill="rgb(221,38,11)" fg:x="842" fg:w="1"/><text x="85.7322%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="85.6853%" y="469" width="0.1015%" height="15" fill="rgb(215,85,6)" fg:x="844" fg:w="1"/><text x="85.9353%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.30%)</title><rect x="85.5838%" y="533" width="0.3046%" height="15" fill="rgb(239,64,14)" fg:x="843" fg:w="3"/><text x="85.8338%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.20%)</title><rect x="85.6853%" y="517" width="0.2030%" height="15" fill="rgb(215,150,32)" fg:x="844" fg:w="2"/><text x="85.9353%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.20%)</title><rect x="85.6853%" y="501" width="0.2030%" height="15" fill="rgb(238,15,13)" fg:x="844" fg:w="2"/><text x="85.9353%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="85.6853%" y="485" width="0.2030%" height="15" fill="rgb(251,87,8)" fg:x="844" fg:w="2"/><text x="85.9353%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.10%)</title><rect x="85.7868%" y="469" width="0.1015%" height="15" fill="rgb(206,86,1)" fg:x="845" fg:w="1"/><text x="86.0368%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.10%)</title><rect x="85.7868%" y="453" width="0.1015%" height="15" fill="rgb(208,151,45)" fg:x="845" fg:w="1"/><text x="86.0368%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="85.7868%" y="437" width="0.1015%" height="15" fill="rgb(231,181,24)" fg:x="845" fg:w="1"/><text x="86.0368%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="85.7868%" y="421" width="0.1015%" height="15" fill="rgb(240,106,29)" fg:x="845" fg:w="1"/><text x="86.0368%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="85.7868%" y="405" width="0.1015%" height="15" fill="rgb(227,166,11)" fg:x="845" fg:w="1"/><text x="86.0368%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.10%)</title><rect x="85.7868%" y="389" width="0.1015%" height="15" fill="rgb(254,14,34)" fg:x="845" fg:w="1"/><text x="86.0368%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="85.8883%" y="517" width="0.1015%" height="15" fill="rgb(223,222,6)" fg:x="846" fg:w="1"/><text x="86.1383%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="85.8883%" y="501" width="0.1015%" height="15" fill="rgb(245,69,24)" fg:x="846" fg:w="1"/><text x="86.1383%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (13 samples, 1.32%)</title><rect x="84.7716%" y="565" width="1.3198%" height="15" fill="rgb(213,193,7)" fg:x="835" fg:w="13"/><text x="85.0216%" y="575.50"></text></g><g><title>plugins_core::tools::move_between (7 samples, 0.71%)</title><rect x="85.3807%" y="549" width="0.7107%" height="15" fill="rgb(237,92,51)" fg:x="841" fg:w="7"/><text x="85.6307%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.20%)</title><rect x="85.8883%" y="533" width="0.2030%" height="15" fill="rgb(225,194,6)" fg:x="846" fg:w="2"/><text x="86.1383%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.10%)</title><rect x="85.9898%" y="517" width="0.1015%" height="15" fill="rgb(205,159,49)" fg:x="847" fg:w="1"/><text x="86.2398%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="85.9898%" y="501" width="0.1015%" height="15" fill="rgb(219,69,2)" fg:x="847" fg:w="1"/><text x="86.2398%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="85.9898%" y="485" width="0.1015%" height="15" fill="rgb(215,107,24)" fg:x="847" fg:w="1"/><text x="86.2398%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.30%)</title><rect x="86.0914%" y="501" width="0.3046%" height="15" fill="rgb(249,208,29)" fg:x="848" fg:w="3"/><text x="86.3414%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.30%)</title><rect x="86.0914%" y="485" width="0.3046%" height="15" fill="rgb(213,147,10)" fg:x="848" fg:w="3"/><text x="86.3414%" y="495.50"></text></g><g><title>realloc (3 samples, 0.30%)</title><rect x="86.0914%" y="469" width="0.3046%" height="15" fill="rgb(254,140,42)" fg:x="848" fg:w="3"/><text x="86.3414%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="86.3959%" y="453" width="0.1015%" height="15" fill="rgb(249,9,15)" fg:x="851" fg:w="1"/><text x="86.6459%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="86.3959%" y="437" width="0.1015%" height="15" fill="rgb(210,19,33)" fg:x="851" fg:w="1"/><text x="86.6459%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="86.4975%" y="421" width="0.1015%" height="15" fill="rgb(241,121,22)" fg:x="852" fg:w="1"/><text x="86.7475%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="86.4975%" y="405" width="0.1015%" height="15" fill="rgb(244,69,52)" fg:x="852" fg:w="1"/><text x="86.7475%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (6 samples, 0.61%)</title><rect x="86.0914%" y="517" width="0.6091%" height="15" fill="rgb(244,191,54)" fg:x="848" fg:w="6"/><text x="86.3414%" y="527.50"></text></g><g><title>plugins_core::tools::contained_by (3 samples, 0.30%)</title><rect x="86.3959%" y="501" width="0.3046%" height="15" fill="rgb(250,3,53)" fg:x="851" fg:w="3"/><text x="86.6459%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.30%)</title><rect x="86.3959%" y="485" width="0.3046%" height="15" fill="rgb(205,77,3)" fg:x="851" fg:w="3"/><text x="86.6459%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.30%)</title><rect x="86.3959%" y="469" width="0.3046%" height="15" fill="rgb(207,155,3)" fg:x="851" fg:w="3"/><text x="86.6459%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="86.4975%" y="453" width="0.2030%" height="15" fill="rgb(224,79,2)" fg:x="852" fg:w="2"/><text x="86.7475%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="86.4975%" y="437" width="0.2030%" height="15" fill="rgb(243,172,5)" fg:x="852" fg:w="2"/><text x="86.7475%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.10%)</title><rect x="86.5990%" y="421" width="0.1015%" height="15" fill="rgb(217,23,43)" fg:x="853" fg:w="1"/><text x="86.8490%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.10%)</title><rect x="86.5990%" y="405" width="0.1015%" height="15" fill="rgb(223,109,20)" fg:x="853" fg:w="1"/><text x="86.8490%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.10%)</title><rect x="86.5990%" y="389" width="0.1015%" height="15" fill="rgb(232,159,21)" fg:x="853" fg:w="1"/><text x="86.8490%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="86.5990%" y="373" width="0.1015%" height="15" fill="rgb(219,58,2)" fg:x="853" fg:w="1"/><text x="86.8490%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="86.5990%" y="357" width="0.1015%" height="15" fill="rgb(241,56,8)" fg:x="853" fg:w="1"/><text x="86.8490%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (7 samples, 0.71%)</title><rect x="86.0914%" y="549" width="0.7107%" height="15" fill="rgb(249,10,27)" fg:x="848" fg:w="7"/><text x="86.3414%" y="559.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (7 samples, 0.71%)</title><rect x="86.0914%" y="533" width="0.7107%" height="15" fill="rgb(248,177,5)" fg:x="848" fg:w="7"/><text x="86.3414%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.10%)</title><rect x="86.7005%" y="517" width="0.1015%" height="15" fill="rgb(239,12,30)" fg:x="854" fg:w="1"/><text x="86.9505%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="86.7005%" y="501" width="0.1015%" height="15" fill="rgb(229,164,25)" fg:x="854" fg:w="1"/><text x="86.9505%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="86.7005%" y="485" width="0.1015%" height="15" fill="rgb(231,217,50)" fg:x="854" fg:w="1"/><text x="86.9505%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="86.7005%" y="469" width="0.1015%" height="15" fill="rgb(247,99,32)" fg:x="854" fg:w="1"/><text x="86.9505%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="86.7005%" y="453" width="0.1015%" height="15" fill="rgb(240,74,50)" fg:x="854" fg:w="1"/><text x="86.9505%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="86.7005%" y="437" width="0.1015%" height="15" fill="rgb(218,54,8)" fg:x="854" fg:w="1"/><text x="86.9505%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="86.7005%" y="421" width="0.1015%" height="15" fill="rgb(227,132,20)" fg:x="854" fg:w="1"/><text x="86.9505%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="86.7005%" y="405" width="0.1015%" height="15" fill="rgb(232,134,12)" fg:x="854" fg:w="1"/><text x="86.9505%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="86.7005%" y="389" width="0.1015%" height="15" fill="rgb(250,129,18)" fg:x="854" fg:w="1"/><text x="86.9505%" y="399.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="86.8020%" y="517" width="0.2030%" height="15" fill="rgb(232,129,47)" fg:x="855" fg:w="2"/><text x="87.0520%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="86.9036%" y="501" width="0.1015%" height="15" fill="rgb(230,31,40)" fg:x="856" fg:w="1"/><text x="87.1536%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="86.9036%" y="485" width="0.1015%" height="15" fill="rgb(232,126,10)" fg:x="856" fg:w="1"/><text x="87.1536%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="86.9036%" y="469" width="0.1015%" height="15" fill="rgb(205,46,31)" fg:x="856" fg:w="1"/><text x="87.1536%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="86.9036%" y="453" width="0.1015%" height="15" fill="rgb(232,37,37)" fg:x="856" fg:w="1"/><text x="87.1536%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="86.9036%" y="437" width="0.1015%" height="15" fill="rgb(240,91,16)" fg:x="856" fg:w="1"/><text x="87.1536%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="86.9036%" y="421" width="0.1015%" height="15" fill="rgb(224,160,9)" fg:x="856" fg:w="1"/><text x="87.1536%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="86.9036%" y="405" width="0.1015%" height="15" fill="rgb(215,116,14)" fg:x="856" fg:w="1"/><text x="87.1536%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="86.9036%" y="389" width="0.1015%" height="15" fill="rgb(235,46,36)" fg:x="856" fg:w="1"/><text x="87.1536%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="86.9036%" y="373" width="0.1015%" height="15" fill="rgb(238,39,28)" fg:x="856" fg:w="1"/><text x="87.1536%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="86.9036%" y="357" width="0.1015%" height="15" fill="rgb(242,125,29)" fg:x="856" fg:w="1"/><text x="87.1536%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="86.9036%" y="341" width="0.1015%" height="15" fill="rgb(238,211,30)" fg:x="856" fg:w="1"/><text x="87.1536%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="86.9036%" y="325" width="0.1015%" height="15" fill="rgb(227,201,28)" fg:x="856" fg:w="1"/><text x="87.1536%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="87.1066%" y="501" width="0.1015%" height="15" fill="rgb(238,77,29)" fg:x="858" fg:w="1"/><text x="87.3566%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.51%)</title><rect x="86.8020%" y="533" width="0.5076%" height="15" fill="rgb(213,221,40)" fg:x="855" fg:w="5"/><text x="87.0520%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.30%)</title><rect x="87.0051%" y="517" width="0.3046%" height="15" fill="rgb(226,220,44)" fg:x="857" fg:w="3"/><text x="87.2551%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.10%)</title><rect x="87.2081%" y="501" width="0.1015%" height="15" fill="rgb(228,90,23)" fg:x="859" fg:w="1"/><text x="87.4581%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.10%)</title><rect x="87.2081%" y="485" width="0.1015%" height="15" fill="rgb(235,72,29)" fg:x="859" fg:w="1"/><text x="87.4581%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="87.2081%" y="469" width="0.1015%" height="15" fill="rgb(248,117,39)" fg:x="859" fg:w="1"/><text x="87.4581%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="87.3096%" y="469" width="0.1015%" height="15" fill="rgb(225,43,28)" fg:x="860" fg:w="1"/><text x="87.5596%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="87.3096%" y="453" width="0.1015%" height="15" fill="rgb(240,93,4)" fg:x="860" fg:w="1"/><text x="87.5596%" y="463.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.20%)</title><rect x="87.3096%" y="533" width="0.2030%" height="15" fill="rgb(234,178,27)" fg:x="860" fg:w="2"/><text x="87.5596%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.20%)</title><rect x="87.3096%" y="517" width="0.2030%" height="15" fill="rgb(254,88,22)" fg:x="860" fg:w="2"/><text x="87.5596%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.20%)</title><rect x="87.3096%" y="501" width="0.2030%" height="15" fill="rgb(240,206,50)" fg:x="860" fg:w="2"/><text x="87.5596%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.20%)</title><rect x="87.3096%" y="485" width="0.2030%" height="15" fill="rgb(249,103,8)" fg:x="860" fg:w="2"/><text x="87.5596%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="87.4112%" y="469" width="0.1015%" height="15" fill="rgb(241,178,36)" fg:x="861" fg:w="1"/><text x="87.6612%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.10%)</title><rect x="87.4112%" y="453" width="0.1015%" height="15" fill="rgb(246,110,15)" fg:x="861" fg:w="1"/><text x="87.6612%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.10%)</title><rect x="87.4112%" y="437" width="0.1015%" height="15" fill="rgb(207,14,43)" fg:x="861" fg:w="1"/><text x="87.6612%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="87.4112%" y="421" width="0.1015%" height="15" fill="rgb(253,219,19)" fg:x="861" fg:w="1"/><text x="87.6612%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (15 samples, 1.52%)</title><rect x="86.0914%" y="565" width="1.5228%" height="15" fill="rgb(216,126,5)" fg:x="848" fg:w="15"/><text x="86.3414%" y="575.50"></text></g><g><title>plugins_core::tools::move_between (8 samples, 0.81%)</title><rect x="86.8020%" y="549" width="0.8122%" height="15" fill="rgb(218,78,42)" fg:x="855" fg:w="8"/><text x="87.0520%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.10%)</title><rect x="87.5127%" y="533" width="0.1015%" height="15" fill="rgb(215,154,40)" fg:x="862" fg:w="1"/><text x="87.7627%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.10%)</title><rect x="87.5127%" y="517" width="0.1015%" height="15" fill="rgb(235,129,32)" fg:x="862" fg:w="1"/><text x="87.7627%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.10%)</title><rect x="87.5127%" y="501" width="0.1015%" height="15" fill="rgb(218,51,8)" fg:x="862" fg:w="1"/><text x="87.7627%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="87.5127%" y="485" width="0.1015%" height="15" fill="rgb(245,48,4)" fg:x="862" fg:w="1"/><text x="87.7627%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="87.6142%" y="565" width="0.1015%" height="15" fill="rgb(250,175,12)" fg:x="863" fg:w="1"/><text x="87.8642%" y="575.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.10%)</title><rect x="87.7157%" y="549" width="0.1015%" height="15" fill="rgb(237,95,40)" fg:x="864" fg:w="1"/><text x="87.9657%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="87.8173%" y="421" width="0.1015%" height="15" fill="rgb(244,120,0)" fg:x="865" fg:w="1"/><text x="88.0673%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="87.8173%" y="405" width="0.1015%" height="15" fill="rgb(241,19,42)" fg:x="865" fg:w="1"/><text x="88.0673%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="87.8173%" y="389" width="0.1015%" height="15" fill="rgb(217,174,48)" fg:x="865" fg:w="1"/><text x="88.0673%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="87.8173%" y="373" width="0.1015%" height="15" fill="rgb(239,36,38)" fg:x="865" fg:w="1"/><text x="88.0673%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="87.8173%" y="357" width="0.1015%" height="15" fill="rgb(220,63,49)" fg:x="865" fg:w="1"/><text x="88.0673%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="87.8173%" y="341" width="0.1015%" height="15" fill="rgb(240,101,13)" fg:x="865" fg:w="1"/><text x="88.0673%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="87.8173%" y="325" width="0.1015%" height="15" fill="rgb(209,184,51)" fg:x="865" fg:w="1"/><text x="88.0673%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.30%)</title><rect x="87.7157%" y="565" width="0.3046%" height="15" fill="rgb(206,136,39)" fg:x="864" fg:w="3"/><text x="87.9657%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="87.8173%" y="549" width="0.2030%" height="15" fill="rgb(254,47,45)" fg:x="865" fg:w="2"/><text x="88.0673%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="87.8173%" y="533" width="0.2030%" height="15" fill="rgb(252,103,20)" fg:x="865" fg:w="2"/><text x="88.0673%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.20%)</title><rect x="87.8173%" y="517" width="0.2030%" height="15" fill="rgb(230,69,12)" fg:x="865" fg:w="2"/><text x="88.0673%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.20%)</title><rect x="87.8173%" y="501" width="0.2030%" height="15" fill="rgb(219,2,28)" fg:x="865" fg:w="2"/><text x="88.0673%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.20%)</title><rect x="87.8173%" y="485" width="0.2030%" height="15" fill="rgb(210,9,12)" fg:x="865" fg:w="2"/><text x="88.0673%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.20%)</title><rect x="87.8173%" y="469" width="0.2030%" height="15" fill="rgb(235,99,33)" fg:x="865" fg:w="2"/><text x="88.0673%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.20%)</title><rect x="87.8173%" y="453" width="0.2030%" height="15" fill="rgb(230,11,38)" fg:x="865" fg:w="2"/><text x="88.0673%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="87.8173%" y="437" width="0.2030%" height="15" fill="rgb(217,129,0)" fg:x="865" fg:w="2"/><text x="88.0673%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="87.9188%" y="421" width="0.1015%" height="15" fill="rgb(222,198,4)" fg:x="866" fg:w="1"/><text x="88.1688%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="87.9188%" y="405" width="0.1015%" height="15" fill="rgb(246,170,27)" fg:x="866" fg:w="1"/><text x="88.1688%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.20%)</title><rect x="88.1218%" y="501" width="0.2030%" height="15" fill="rgb(229,17,28)" fg:x="868" fg:w="2"/><text x="88.3718%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.20%)</title><rect x="88.1218%" y="485" width="0.2030%" height="15" fill="rgb(233,198,48)" fg:x="868" fg:w="2"/><text x="88.3718%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="88.1218%" y="469" width="0.2030%" height="15" fill="rgb(238,103,23)" fg:x="868" fg:w="2"/><text x="88.3718%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="88.1218%" y="453" width="0.2030%" height="15" fill="rgb(206,91,41)" fg:x="868" fg:w="2"/><text x="88.3718%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="88.1218%" y="437" width="0.2030%" height="15" fill="rgb(227,34,25)" fg:x="868" fg:w="2"/><text x="88.3718%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="88.1218%" y="421" width="0.2030%" height="15" fill="rgb(210,110,44)" fg:x="868" fg:w="2"/><text x="88.3718%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.20%)</title><rect x="88.1218%" y="405" width="0.2030%" height="15" fill="rgb(216,189,8)" fg:x="868" fg:w="2"/><text x="88.3718%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="88.1218%" y="389" width="0.2030%" height="15" fill="rgb(234,9,46)" fg:x="868" fg:w="2"/><text x="88.3718%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="88.2234%" y="373" width="0.1015%" height="15" fill="rgb(251,200,5)" fg:x="869" fg:w="1"/><text x="88.4734%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="88.2234%" y="357" width="0.1015%" height="15" fill="rgb(238,165,37)" fg:x="869" fg:w="1"/><text x="88.4734%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="88.2234%" y="341" width="0.1015%" height="15" fill="rgb(232,77,38)" fg:x="869" fg:w="1"/><text x="88.4734%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.41%)</title><rect x="88.1218%" y="549" width="0.4061%" height="15" fill="rgb(253,179,33)" fg:x="868" fg:w="4"/><text x="88.3718%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.41%)</title><rect x="88.1218%" y="533" width="0.4061%" height="15" fill="rgb(240,13,35)" fg:x="868" fg:w="4"/><text x="88.3718%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.41%)</title><rect x="88.1218%" y="517" width="0.4061%" height="15" fill="rgb(242,150,49)" fg:x="868" fg:w="4"/><text x="88.3718%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.20%)</title><rect x="88.3249%" y="501" width="0.2030%" height="15" fill="rgb(237,176,28)" fg:x="870" fg:w="2"/><text x="88.5749%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="88.3249%" y="485" width="0.2030%" height="15" fill="rgb(214,176,33)" fg:x="870" fg:w="2"/><text x="88.5749%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.20%)</title><rect x="88.3249%" y="469" width="0.2030%" height="15" fill="rgb(214,25,12)" fg:x="870" fg:w="2"/><text x="88.5749%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="88.3249%" y="453" width="0.2030%" height="15" fill="rgb(238,190,20)" fg:x="870" fg:w="2"/><text x="88.5749%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.20%)</title><rect x="88.3249%" y="437" width="0.2030%" height="15" fill="rgb(208,11,19)" fg:x="870" fg:w="2"/><text x="88.5749%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="88.3249%" y="421" width="0.2030%" height="15" fill="rgb(239,90,4)" fg:x="870" fg:w="2"/><text x="88.5749%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="88.4264%" y="405" width="0.1015%" height="15" fill="rgb(248,110,3)" fg:x="871" fg:w="1"/><text x="88.6764%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="88.4264%" y="389" width="0.1015%" height="15" fill="rgb(210,41,30)" fg:x="871" fg:w="1"/><text x="88.6764%" y="399.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (1 samples, 0.10%)</title><rect x="88.6294%" y="533" width="0.1015%" height="15" fill="rgb(239,36,8)" fg:x="873" fg:w="1"/><text x="88.8794%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.10%)</title><rect x="88.6294%" y="517" width="0.1015%" height="15" fill="rgb(237,201,47)" fg:x="873" fg:w="1"/><text x="88.8794%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.10%)</title><rect x="88.6294%" y="501" width="0.1015%" height="15" fill="rgb(224,140,29)" fg:x="873" fg:w="1"/><text x="88.8794%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="88.6294%" y="485" width="0.1015%" height="15" fill="rgb(231,209,17)" fg:x="873" fg:w="1"/><text x="88.8794%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="88.6294%" y="469" width="0.1015%" height="15" fill="rgb(249,196,1)" fg:x="873" fg:w="1"/><text x="88.8794%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="88.6294%" y="453" width="0.1015%" height="15" fill="rgb(223,207,51)" fg:x="873" fg:w="1"/><text x="88.8794%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="88.6294%" y="437" width="0.1015%" height="15" fill="rgb(210,14,40)" fg:x="873" fg:w="1"/><text x="88.8794%" y="447.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (3 samples, 0.30%)</title><rect x="88.5279%" y="549" width="0.3046%" height="15" fill="rgb(250,20,52)" fg:x="872" fg:w="3"/><text x="88.7779%" y="559.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.10%)</title><rect x="88.7310%" y="533" width="0.1015%" height="15" fill="rgb(241,46,11)" fg:x="874" fg:w="1"/><text x="88.9810%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="88.7310%" y="517" width="0.1015%" height="15" fill="rgb(219,105,5)" fg:x="874" fg:w="1"/><text x="88.9810%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="88.7310%" y="501" width="0.1015%" height="15" fill="rgb(252,77,35)" fg:x="874" fg:w="1"/><text x="88.9810%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="88.7310%" y="485" width="0.1015%" height="15" fill="rgb(243,119,2)" fg:x="874" fg:w="1"/><text x="88.9810%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="88.7310%" y="469" width="0.1015%" height="15" fill="rgb(206,82,28)" fg:x="874" fg:w="1"/><text x="88.9810%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="88.7310%" y="453" width="0.1015%" height="15" fill="rgb(227,120,12)" fg:x="874" fg:w="1"/><text x="88.9810%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="88.7310%" y="437" width="0.1015%" height="15" fill="rgb(229,134,41)" fg:x="874" fg:w="1"/><text x="88.9810%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="88.7310%" y="421" width="0.1015%" height="15" fill="rgb(239,96,32)" fg:x="874" fg:w="1"/><text x="88.9810%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="88.7310%" y="405" width="0.1015%" height="15" fill="rgb(225,46,27)" fg:x="874" fg:w="1"/><text x="88.9810%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="88.7310%" y="389" width="0.1015%" height="15" fill="rgb(215,168,2)" fg:x="874" fg:w="1"/><text x="88.9810%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="88.7310%" y="373" width="0.1015%" height="15" fill="rgb(207,170,52)" fg:x="874" fg:w="1"/><text x="88.9810%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="88.7310%" y="357" width="0.1015%" height="15" fill="rgb(237,198,36)" fg:x="874" fg:w="1"/><text x="88.9810%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="88.7310%" y="341" width="0.1015%" height="15" fill="rgb(213,27,14)" fg:x="874" fg:w="1"/><text x="88.9810%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="88.7310%" y="325" width="0.1015%" height="15" fill="rgb(218,77,5)" fg:x="874" fg:w="1"/><text x="88.9810%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="88.7310%" y="309" width="0.1015%" height="15" fill="rgb(230,219,39)" fg:x="874" fg:w="1"/><text x="88.9810%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.10%)</title><rect x="88.7310%" y="293" width="0.1015%" height="15" fill="rgb(245,177,7)" fg:x="874" fg:w="1"/><text x="88.9810%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="88.7310%" y="277" width="0.1015%" height="15" fill="rgb(246,44,46)" fg:x="874" fg:w="1"/><text x="88.9810%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="88.7310%" y="261" width="0.1015%" height="15" fill="rgb(207,173,15)" fg:x="874" fg:w="1"/><text x="88.9810%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="88.7310%" y="245" width="0.1015%" height="15" fill="rgb(245,170,50)" fg:x="874" fg:w="1"/><text x="88.9810%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="88.7310%" y="229" width="0.1015%" height="15" fill="rgb(233,156,21)" fg:x="874" fg:w="1"/><text x="88.9810%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="88.7310%" y="213" width="0.1015%" height="15" fill="rgb(253,146,27)" fg:x="874" fg:w="1"/><text x="88.9810%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="88.7310%" y="197" width="0.1015%" height="15" fill="rgb(247,66,29)" fg:x="874" fg:w="1"/><text x="88.9810%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="88.7310%" y="181" width="0.1015%" height="15" fill="rgb(218,207,26)" fg:x="874" fg:w="1"/><text x="88.9810%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="88.7310%" y="165" width="0.1015%" height="15" fill="rgb(234,93,26)" fg:x="874" fg:w="1"/><text x="88.9810%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="88.7310%" y="149" width="0.1015%" height="15" fill="rgb(214,75,48)" fg:x="874" fg:w="1"/><text x="88.9810%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="88.7310%" y="133" width="0.1015%" height="15" fill="rgb(229,119,22)" fg:x="874" fg:w="1"/><text x="88.9810%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="88.7310%" y="117" width="0.1015%" height="15" fill="rgb(226,153,19)" fg:x="874" fg:w="1"/><text x="88.9810%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="88.7310%" y="101" width="0.1015%" height="15" fill="rgb(220,204,36)" fg:x="874" fg:w="1"/><text x="88.9810%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="88.7310%" y="85" width="0.1015%" height="15" fill="rgb(253,181,43)" fg:x="874" fg:w="1"/><text x="88.9810%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="88.7310%" y="69" width="0.1015%" height="15" fill="rgb(211,41,51)" fg:x="874" fg:w="1"/><text x="88.9810%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="88.7310%" y="53" width="0.1015%" height="15" fill="rgb(207,215,0)" fg:x="874" fg:w="1"/><text x="88.9810%" y="63.50"></text></g><g><title>realloc (1 samples, 0.10%)</title><rect x="88.7310%" y="37" width="0.1015%" height="15" fill="rgb(212,153,10)" fg:x="874" fg:w="1"/><text x="88.9810%" y="47.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="88.8325%" y="517" width="0.2030%" height="15" fill="rgb(251,171,36)" fg:x="875" fg:w="2"/><text x="89.0825%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.20%)</title><rect x="89.0355%" y="517" width="0.2030%" height="15" fill="rgb(225,219,41)" fg:x="877" fg:w="2"/><text x="89.2855%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.20%)</title><rect x="89.0355%" y="501" width="0.2030%" height="15" fill="rgb(208,200,1)" fg:x="877" fg:w="2"/><text x="89.2855%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="89.1371%" y="485" width="0.1015%" height="15" fill="rgb(206,75,47)" fg:x="878" fg:w="1"/><text x="89.3871%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="89.1371%" y="469" width="0.1015%" height="15" fill="rgb(248,3,16)" fg:x="878" fg:w="1"/><text x="89.3871%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="89.1371%" y="453" width="0.1015%" height="15" fill="rgb(242,157,36)" fg:x="878" fg:w="1"/><text x="89.3871%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="89.1371%" y="437" width="0.1015%" height="15" fill="rgb(215,175,11)" fg:x="878" fg:w="1"/><text x="89.3871%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="89.1371%" y="421" width="0.1015%" height="15" fill="rgb(252,222,22)" fg:x="878" fg:w="1"/><text x="89.3871%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="89.1371%" y="405" width="0.1015%" height="15" fill="rgb(250,121,35)" fg:x="878" fg:w="1"/><text x="89.3871%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="89.1371%" y="389" width="0.1015%" height="15" fill="rgb(233,120,49)" fg:x="878" fg:w="1"/><text x="89.3871%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="89.1371%" y="373" width="0.1015%" height="15" fill="rgb(205,201,14)" fg:x="878" fg:w="1"/><text x="89.3871%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="89.1371%" y="357" width="0.1015%" height="15" fill="rgb(219,58,45)" fg:x="878" fg:w="1"/><text x="89.3871%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="89.1371%" y="341" width="0.1015%" height="15" fill="rgb(251,65,12)" fg:x="878" fg:w="1"/><text x="89.3871%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="89.1371%" y="325" width="0.1015%" height="15" fill="rgb(224,47,31)" fg:x="878" fg:w="1"/><text x="89.3871%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="89.1371%" y="309" width="0.1015%" height="15" fill="rgb(233,74,26)" fg:x="878" fg:w="1"/><text x="89.3871%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="89.1371%" y="293" width="0.1015%" height="15" fill="rgb(231,211,31)" fg:x="878" fg:w="1"/><text x="89.3871%" y="303.50"></text></g><g><title>engine::session::Session::world (5 samples, 0.51%)</title><rect x="88.8325%" y="549" width="0.5076%" height="15" fill="rgb(239,167,5)" fg:x="875" fg:w="5"/><text x="89.0825%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.51%)</title><rect x="88.8325%" y="533" width="0.5076%" height="15" fill="rgb(241,85,0)" fg:x="875" fg:w="5"/><text x="89.0825%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="89.2386%" y="517" width="0.1015%" height="15" fill="rgb(229,130,21)" fg:x="879" fg:w="1"/><text x="89.4886%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="89.2386%" y="501" width="0.1015%" height="15" fill="rgb(254,84,49)" fg:x="879" fg:w="1"/><text x="89.4886%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="89.2386%" y="485" width="0.1015%" height="15" fill="rgb(235,85,21)" fg:x="879" fg:w="1"/><text x="89.4886%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="89.2386%" y="469" width="0.1015%" height="15" fill="rgb(246,128,52)" fg:x="879" fg:w="1"/><text x="89.4886%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="89.2386%" y="453" width="0.1015%" height="15" fill="rgb(243,114,49)" fg:x="879" fg:w="1"/><text x="89.4886%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="89.2386%" y="437" width="0.1015%" height="15" fill="rgb(240,224,22)" fg:x="879" fg:w="1"/><text x="89.4886%" y="447.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (16 samples, 1.62%)</title><rect x="88.0203%" y="565" width="1.6244%" height="15" fill="rgb(247,201,52)" fg:x="867" fg:w="16"/><text x="88.2703%" y="575.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.30%)</title><rect x="89.3401%" y="549" width="0.3046%" height="15" fill="rgb(231,70,45)" fg:x="880" fg:w="3"/><text x="89.5901%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.30%)</title><rect x="89.3401%" y="533" width="0.3046%" height="15" fill="rgb(217,215,20)" fg:x="880" fg:w="3"/><text x="89.5901%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.30%)</title><rect x="89.3401%" y="517" width="0.3046%" height="15" fill="rgb(226,170,30)" fg:x="880" fg:w="3"/><text x="89.5901%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="89.4416%" y="501" width="0.2030%" height="15" fill="rgb(220,190,43)" fg:x="881" fg:w="2"/><text x="89.6916%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="89.4416%" y="485" width="0.2030%" height="15" fill="rgb(218,20,18)" fg:x="881" fg:w="2"/><text x="89.6916%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="89.5431%" y="469" width="0.1015%" height="15" fill="rgb(245,37,26)" fg:x="882" fg:w="1"/><text x="89.7931%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="89.8477%" y="453" width="0.2030%" height="15" fill="rgb(241,127,29)" fg:x="885" fg:w="2"/><text x="90.0977%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.20%)</title><rect x="89.8477%" y="437" width="0.2030%" height="15" fill="rgb(241,33,26)" fg:x="885" fg:w="2"/><text x="90.0977%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.41%)</title><rect x="89.7462%" y="469" width="0.4061%" height="15" fill="rgb(220,106,21)" fg:x="884" fg:w="4"/><text x="89.9962%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="90.0508%" y="453" width="0.1015%" height="15" fill="rgb(225,125,35)" fg:x="887" fg:w="1"/><text x="90.3008%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="90.1523%" y="437" width="0.1015%" height="15" fill="rgb(248,80,22)" fg:x="888" fg:w="1"/><text x="90.4023%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.71%)</title><rect x="89.6447%" y="501" width="0.7107%" height="15" fill="rgb(231,117,39)" fg:x="883" fg:w="7"/><text x="89.8947%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.61%)</title><rect x="89.7462%" y="485" width="0.6091%" height="15" fill="rgb(239,183,16)" fg:x="884" fg:w="6"/><text x="89.9962%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (2 samples, 0.20%)</title><rect x="90.1523%" y="469" width="0.2030%" height="15" fill="rgb(221,61,19)" fg:x="888" fg:w="2"/><text x="90.4023%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="90.1523%" y="453" width="0.2030%" height="15" fill="rgb(239,196,44)" fg:x="888" fg:w="2"/><text x="90.4023%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (1 samples, 0.10%)</title><rect x="90.2538%" y="437" width="0.1015%" height="15" fill="rgb(206,113,19)" fg:x="889" fg:w="1"/><text x="90.5038%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.81%)</title><rect x="89.6447%" y="517" width="0.8122%" height="15" fill="rgb(245,114,12)" fg:x="883" fg:w="8"/><text x="89.8947%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="90.3553%" y="501" width="0.1015%" height="15" fill="rgb(247,89,39)" fg:x="890" fg:w="1"/><text x="90.6053%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynMessage&gt; (9 samples, 0.91%)</title><rect x="89.6447%" y="533" width="0.9137%" height="15" fill="rgb(213,85,14)" fg:x="883" fg:w="9"/><text x="89.8947%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="90.4569%" y="517" width="0.1015%" height="15" fill="rgb(249,206,33)" fg:x="891" fg:w="1"/><text x="90.7069%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="90.7614%" y="485" width="0.1015%" height="15" fill="rgb(235,167,47)" fg:x="894" fg:w="1"/><text x="91.0114%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="90.8629%" y="485" width="0.1015%" height="15" fill="rgb(217,177,16)" fg:x="895" fg:w="1"/><text x="91.1129%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="90.7614%" y="501" width="0.3046%" height="15" fill="rgb(250,228,29)" fg:x="894" fg:w="3"/><text x="91.0114%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.10%)</title><rect x="90.9645%" y="485" width="0.1015%" height="15" fill="rgb(216,195,42)" fg:x="896" fg:w="1"/><text x="91.2145%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="90.9645%" y="469" width="0.1015%" height="15" fill="rgb(232,192,32)" fg:x="896" fg:w="1"/><text x="91.2145%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="90.9645%" y="453" width="0.1015%" height="15" fill="rgb(211,8,47)" fg:x="896" fg:w="1"/><text x="91.2145%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="90.9645%" y="437" width="0.1015%" height="15" fill="rgb(251,201,9)" fg:x="896" fg:w="1"/><text x="91.2145%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="90.9645%" y="421" width="0.1015%" height="15" fill="rgb(206,185,47)" fg:x="896" fg:w="1"/><text x="91.2145%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.10%)</title><rect x="90.9645%" y="405" width="0.1015%" height="15" fill="rgb(245,54,32)" fg:x="896" fg:w="1"/><text x="91.2145%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.20%)</title><rect x="91.0660%" y="501" width="0.2030%" height="15" fill="rgb(208,1,8)" fg:x="897" fg:w="2"/><text x="91.3160%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="91.0660%" y="485" width="0.2030%" height="15" fill="rgb(228,57,24)" fg:x="897" fg:w="2"/><text x="91.3160%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="91.1675%" y="469" width="0.1015%" height="15" fill="rgb(251,24,8)" fg:x="898" fg:w="1"/><text x="91.4175%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="91.1675%" y="453" width="0.1015%" height="15" fill="rgb(236,196,50)" fg:x="898" fg:w="1"/><text x="91.4175%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="91.2690%" y="405" width="0.1015%" height="15" fill="rgb(246,222,29)" fg:x="899" fg:w="1"/><text x="91.5190%" y="415.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.10%)</title><rect x="91.2690%" y="389" width="0.1015%" height="15" fill="rgb(211,34,40)" fg:x="899" fg:w="1"/><text x="91.5190%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="91.2690%" y="373" width="0.1015%" height="15" fill="rgb(210,66,51)" fg:x="899" fg:w="1"/><text x="91.5190%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.10%)</title><rect x="91.2690%" y="357" width="0.1015%" height="15" fill="rgb(250,56,43)" fg:x="899" fg:w="1"/><text x="91.5190%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="91.2690%" y="341" width="0.1015%" height="15" fill="rgb(240,111,50)" fg:x="899" fg:w="1"/><text x="91.5190%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="91.2690%" y="325" width="0.1015%" height="15" fill="rgb(209,117,13)" fg:x="899" fg:w="1"/><text x="91.5190%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="91.2690%" y="309" width="0.1015%" height="15" fill="rgb(232,164,45)" fg:x="899" fg:w="1"/><text x="91.5190%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="91.2690%" y="293" width="0.1015%" height="15" fill="rgb(205,69,32)" fg:x="899" fg:w="1"/><text x="91.5190%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="91.2690%" y="277" width="0.1015%" height="15" fill="rgb(240,147,45)" fg:x="899" fg:w="1"/><text x="91.5190%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="91.2690%" y="261" width="0.1015%" height="15" fill="rgb(221,94,48)" fg:x="899" fg:w="1"/><text x="91.5190%" y="271.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="91.2690%" y="245" width="0.1015%" height="15" fill="rgb(249,209,17)" fg:x="899" fg:w="1"/><text x="91.5190%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="91.2690%" y="229" width="0.1015%" height="15" fill="rgb(228,57,28)" fg:x="899" fg:w="1"/><text x="91.5190%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="91.2690%" y="213" width="0.1015%" height="15" fill="rgb(250,133,26)" fg:x="899" fg:w="1"/><text x="91.5190%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="91.2690%" y="197" width="0.1015%" height="15" fill="rgb(254,15,16)" fg:x="899" fg:w="1"/><text x="91.5190%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="91.2690%" y="181" width="0.1015%" height="15" fill="rgb(209,147,42)" fg:x="899" fg:w="1"/><text x="91.5190%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="91.2690%" y="165" width="0.1015%" height="15" fill="rgb(208,5,29)" fg:x="899" fg:w="1"/><text x="91.5190%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.10%)</title><rect x="91.2690%" y="149" width="0.1015%" height="15" fill="rgb(250,73,31)" fg:x="899" fg:w="1"/><text x="91.5190%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="91.2690%" y="133" width="0.1015%" height="15" fill="rgb(238,45,10)" fg:x="899" fg:w="1"/><text x="91.5190%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="91.2690%" y="117" width="0.1015%" height="15" fill="rgb(214,104,5)" fg:x="899" fg:w="1"/><text x="91.5190%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="91.2690%" y="101" width="0.1015%" height="15" fill="rgb(242,217,19)" fg:x="899" fg:w="1"/><text x="91.5190%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="91.2690%" y="85" width="0.1015%" height="15" fill="rgb(246,113,27)" fg:x="899" fg:w="1"/><text x="91.5190%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="91.2690%" y="69" width="0.1015%" height="15" fill="rgb(221,34,27)" fg:x="899" fg:w="1"/><text x="91.5190%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="91.2690%" y="53" width="0.1015%" height="15" fill="rgb(246,109,6)" fg:x="899" fg:w="1"/><text x="91.5190%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="91.2690%" y="421" width="0.2030%" height="15" fill="rgb(217,12,25)" fg:x="899" fg:w="2"/><text x="91.5190%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::ops::control_flow::ControlFlow&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.10%)</title><rect x="91.3706%" y="405" width="0.1015%" height="15" fill="rgb(250,195,5)" fg:x="900" fg:w="1"/><text x="91.6206%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="91.5736%" y="357" width="0.1015%" height="15" fill="rgb(244,140,45)" fg:x="902" fg:w="1"/><text x="91.8236%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="91.5736%" y="341" width="0.1015%" height="15" fill="rgb(230,64,14)" fg:x="902" fg:w="1"/><text x="91.8236%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="91.5736%" y="325" width="0.1015%" height="15" fill="rgb(206,27,27)" fg:x="902" fg:w="1"/><text x="91.8236%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="91.5736%" y="309" width="0.1015%" height="15" fill="rgb(230,14,50)" fg:x="902" fg:w="1"/><text x="91.8236%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="91.5736%" y="293" width="0.1015%" height="15" fill="rgb(237,172,14)" fg:x="902" fg:w="1"/><text x="91.8236%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="91.5736%" y="277" width="0.1015%" height="15" fill="rgb(209,25,21)" fg:x="902" fg:w="1"/><text x="91.8236%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="91.5736%" y="261" width="0.1015%" height="15" fill="rgb(248,148,22)" fg:x="902" fg:w="1"/><text x="91.8236%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="91.5736%" y="245" width="0.1015%" height="15" fill="rgb(234,100,22)" fg:x="902" fg:w="1"/><text x="91.8236%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="91.5736%" y="229" width="0.1015%" height="15" fill="rgb(210,20,30)" fg:x="902" fg:w="1"/><text x="91.8236%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="91.5736%" y="213" width="0.1015%" height="15" fill="rgb(232,58,0)" fg:x="902" fg:w="1"/><text x="91.8236%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="91.5736%" y="197" width="0.1015%" height="15" fill="rgb(221,68,13)" fg:x="902" fg:w="1"/><text x="91.8236%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="91.5736%" y="181" width="0.1015%" height="15" fill="rgb(231,194,11)" fg:x="902" fg:w="1"/><text x="91.8236%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="91.5736%" y="165" width="0.1015%" height="15" fill="rgb(235,51,41)" fg:x="902" fg:w="1"/><text x="91.8236%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="91.5736%" y="149" width="0.1015%" height="15" fill="rgb(240,50,32)" fg:x="902" fg:w="1"/><text x="91.8236%" y="159.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.51%)</title><rect x="91.2690%" y="437" width="0.5076%" height="15" fill="rgb(240,185,36)" fg:x="899" fg:w="5"/><text x="91.5190%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="91.4721%" y="421" width="0.3046%" height="15" fill="rgb(211,168,15)" fg:x="901" fg:w="3"/><text x="91.7221%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (3 samples, 0.30%)</title><rect x="91.4721%" y="405" width="0.3046%" height="15" fill="rgb(221,70,0)" fg:x="901" fg:w="3"/><text x="91.7221%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (3 samples, 0.30%)</title><rect x="91.4721%" y="389" width="0.3046%" height="15" fill="rgb(205,21,33)" fg:x="901" fg:w="3"/><text x="91.7221%" y="399.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.20%)</title><rect x="91.5736%" y="373" width="0.2030%" height="15" fill="rgb(225,106,10)" fg:x="902" fg:w="2"/><text x="91.8236%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.10%)</title><rect x="91.6751%" y="357" width="0.1015%" height="15" fill="rgb(236,200,50)" fg:x="903" fg:w="1"/><text x="91.9251%" y="367.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="91.6751%" y="341" width="0.1015%" height="15" fill="rgb(249,93,23)" fg:x="903" fg:w="1"/><text x="91.9251%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity (1 samples, 0.10%)</title><rect x="91.6751%" y="325" width="0.1015%" height="15" fill="rgb(244,115,35)" fg:x="903" fg:w="1"/><text x="91.9251%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.10%)</title><rect x="91.6751%" y="309" width="0.1015%" height="15" fill="rgb(231,129,47)" fg:x="903" fg:w="1"/><text x="91.9251%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.10%)</title><rect x="91.6751%" y="293" width="0.1015%" height="15" fill="rgb(225,160,50)" fg:x="903" fg:w="1"/><text x="91.9251%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="91.6751%" y="277" width="0.1015%" height="15" fill="rgb(218,135,23)" fg:x="903" fg:w="1"/><text x="91.9251%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="91.6751%" y="261" width="0.1015%" height="15" fill="rgb(227,119,14)" fg:x="903" fg:w="1"/><text x="91.9251%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="91.6751%" y="245" width="0.1015%" height="15" fill="rgb(242,138,13)" fg:x="903" fg:w="1"/><text x="91.9251%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="91.6751%" y="229" width="0.1015%" height="15" fill="rgb(215,11,16)" fg:x="903" fg:w="1"/><text x="91.9251%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.10%)</title><rect x="91.7766%" y="437" width="0.1015%" height="15" fill="rgb(234,170,50)" fg:x="904" fg:w="1"/><text x="92.0266%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="91.9797%" y="405" width="0.1015%" height="15" fill="rgb(233,34,20)" fg:x="906" fg:w="1"/><text x="92.2297%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="91.9797%" y="389" width="0.1015%" height="15" fill="rgb(237,100,45)" fg:x="906" fg:w="1"/><text x="92.2297%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.10%)</title><rect x="91.9797%" y="373" width="0.1015%" height="15" fill="rgb(231,184,36)" fg:x="906" fg:w="1"/><text x="92.2297%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="91.9797%" y="357" width="0.1015%" height="15" fill="rgb(252,93,2)" fg:x="906" fg:w="1"/><text x="92.2297%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="91.9797%" y="341" width="0.1015%" height="15" fill="rgb(248,176,47)" fg:x="906" fg:w="1"/><text x="92.2297%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="91.9797%" y="325" width="0.1015%" height="15" fill="rgb(249,125,23)" fg:x="906" fg:w="1"/><text x="92.2297%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="91.9797%" y="309" width="0.1015%" height="15" fill="rgb(239,67,42)" fg:x="906" fg:w="1"/><text x="92.2297%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="91.9797%" y="293" width="0.1015%" height="15" fill="rgb(244,162,4)" fg:x="906" fg:w="1"/><text x="92.2297%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="91.9797%" y="277" width="0.1015%" height="15" fill="rgb(214,150,38)" fg:x="906" fg:w="1"/><text x="92.2297%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="91.9797%" y="261" width="0.1015%" height="15" fill="rgb(228,211,28)" fg:x="906" fg:w="1"/><text x="92.2297%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="91.9797%" y="245" width="0.1015%" height="15" fill="rgb(212,98,48)" fg:x="906" fg:w="1"/><text x="92.2297%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="91.9797%" y="229" width="0.1015%" height="15" fill="rgb(213,45,13)" fg:x="906" fg:w="1"/><text x="92.2297%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="91.9797%" y="213" width="0.1015%" height="15" fill="rgb(218,35,29)" fg:x="906" fg:w="1"/><text x="92.2297%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="91.9797%" y="197" width="0.1015%" height="15" fill="rgb(244,13,3)" fg:x="906" fg:w="1"/><text x="92.2297%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="91.9797%" y="181" width="0.1015%" height="15" fill="rgb(235,170,19)" fg:x="906" fg:w="1"/><text x="92.2297%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.20%)</title><rect x="92.0812%" y="405" width="0.2030%" height="15" fill="rgb(233,193,43)" fg:x="907" fg:w="2"/><text x="92.3312%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.20%)</title><rect x="92.0812%" y="389" width="0.2030%" height="15" fill="rgb(228,223,20)" fg:x="907" fg:w="2"/><text x="92.3312%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="92.0812%" y="373" width="0.2030%" height="15" fill="rgb(208,85,54)" fg:x="907" fg:w="2"/><text x="92.3312%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.20%)</title><rect x="92.0812%" y="357" width="0.2030%" height="15" fill="rgb(254,14,45)" fg:x="907" fg:w="2"/><text x="92.3312%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.20%)</title><rect x="92.0812%" y="341" width="0.2030%" height="15" fill="rgb(247,99,29)" fg:x="907" fg:w="2"/><text x="92.3312%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="92.1827%" y="325" width="0.1015%" height="15" fill="rgb(225,180,54)" fg:x="908" fg:w="1"/><text x="92.4327%" y="335.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="92.1827%" y="309" width="0.1015%" height="15" fill="rgb(239,88,43)" fg:x="908" fg:w="1"/><text x="92.4327%" y="319.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (12 samples, 1.22%)</title><rect x="91.2690%" y="453" width="1.2183%" height="15" fill="rgb(209,47,11)" fg:x="899" fg:w="12"/><text x="91.5190%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.61%)</title><rect x="91.8782%" y="437" width="0.6091%" height="15" fill="rgb(219,179,23)" fg:x="905" fg:w="6"/><text x="92.1282%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.61%)</title><rect x="91.8782%" y="421" width="0.6091%" height="15" fill="rgb(213,183,19)" fg:x="905" fg:w="6"/><text x="92.1282%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="92.2843%" y="405" width="0.2030%" height="15" fill="rgb(210,11,9)" fg:x="909" fg:w="2"/><text x="92.5343%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="92.2843%" y="389" width="0.2030%" height="15" fill="rgb(239,194,16)" fg:x="909" fg:w="2"/><text x="92.5343%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.10%)</title><rect x="92.3858%" y="373" width="0.1015%" height="15" fill="rgb(246,23,50)" fg:x="910" fg:w="1"/><text x="92.6358%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.10%)</title><rect x="92.3858%" y="357" width="0.1015%" height="15" fill="rgb(245,10,41)" fg:x="910" fg:w="1"/><text x="92.6358%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.10%)</title><rect x="92.3858%" y="341" width="0.1015%" height="15" fill="rgb(228,43,24)" fg:x="910" fg:w="1"/><text x="92.6358%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="92.3858%" y="325" width="0.1015%" height="15" fill="rgb(220,151,0)" fg:x="910" fg:w="1"/><text x="92.6358%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="92.3858%" y="309" width="0.1015%" height="15" fill="rgb(232,219,10)" fg:x="910" fg:w="1"/><text x="92.6358%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="92.3858%" y="293" width="0.1015%" height="15" fill="rgb(227,217,48)" fg:x="910" fg:w="1"/><text x="92.6358%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="92.5888%" y="245" width="0.1015%" height="15" fill="rgb(210,66,35)" fg:x="912" fg:w="1"/><text x="92.8388%" y="255.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.20%)</title><rect x="92.5888%" y="309" width="0.2030%" height="15" fill="rgb(254,6,7)" fg:x="912" fg:w="2"/><text x="92.8388%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.20%)</title><rect x="92.5888%" y="293" width="0.2030%" height="15" fill="rgb(235,222,42)" fg:x="912" fg:w="2"/><text x="92.8388%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.20%)</title><rect x="92.5888%" y="277" width="0.2030%" height="15" fill="rgb(245,126,5)" fg:x="912" fg:w="2"/><text x="92.8388%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.20%)</title><rect x="92.5888%" y="261" width="0.2030%" height="15" fill="rgb(215,73,17)" fg:x="912" fg:w="2"/><text x="92.8388%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="92.6904%" y="245" width="0.1015%" height="15" fill="rgb(219,198,52)" fg:x="913" fg:w="1"/><text x="92.9404%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.10%)</title><rect x="92.7919%" y="229" width="0.1015%" height="15" fill="rgb(217,159,18)" fg:x="914" fg:w="1"/><text x="93.0419%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="92.7919%" y="213" width="0.1015%" height="15" fill="rgb(212,177,18)" fg:x="914" fg:w="1"/><text x="93.0419%" y="223.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.10%)</title><rect x="92.7919%" y="197" width="0.1015%" height="15" fill="rgb(241,10,11)" fg:x="914" fg:w="1"/><text x="93.0419%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.10%)</title><rect x="92.7919%" y="181" width="0.1015%" height="15" fill="rgb(232,114,35)" fg:x="914" fg:w="1"/><text x="93.0419%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="92.7919%" y="165" width="0.1015%" height="15" fill="rgb(238,222,8)" fg:x="914" fg:w="1"/><text x="93.0419%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.10%)</title><rect x="92.7919%" y="149" width="0.1015%" height="15" fill="rgb(251,153,44)" fg:x="914" fg:w="1"/><text x="93.0419%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="92.7919%" y="133" width="0.1015%" height="15" fill="rgb(210,140,51)" fg:x="914" fg:w="1"/><text x="93.0419%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.10%)</title><rect x="92.7919%" y="117" width="0.1015%" height="15" fill="rgb(222,63,0)" fg:x="914" fg:w="1"/><text x="93.0419%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="92.7919%" y="101" width="0.1015%" height="15" fill="rgb(240,18,40)" fg:x="914" fg:w="1"/><text x="93.0419%" y="111.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.20%)</title><rect x="92.7919%" y="293" width="0.2030%" height="15" fill="rgb(237,88,16)" fg:x="914" fg:w="2"/><text x="93.0419%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.20%)</title><rect x="92.7919%" y="277" width="0.2030%" height="15" fill="rgb(251,117,13)" fg:x="914" fg:w="2"/><text x="93.0419%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.20%)</title><rect x="92.7919%" y="261" width="0.2030%" height="15" fill="rgb(251,228,8)" fg:x="914" fg:w="2"/><text x="93.0419%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.20%)</title><rect x="92.7919%" y="245" width="0.2030%" height="15" fill="rgb(205,107,49)" fg:x="914" fg:w="2"/><text x="93.0419%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="92.8934%" y="229" width="0.1015%" height="15" fill="rgb(238,72,41)" fg:x="915" fg:w="1"/><text x="93.1434%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="92.8934%" y="213" width="0.1015%" height="15" fill="rgb(248,183,52)" fg:x="915" fg:w="1"/><text x="93.1434%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="92.8934%" y="197" width="0.1015%" height="15" fill="rgb(215,58,20)" fg:x="915" fg:w="1"/><text x="93.1434%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.10%)</title><rect x="92.9949%" y="213" width="0.1015%" height="15" fill="rgb(209,49,13)" fg:x="916" fg:w="1"/><text x="93.2449%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (6 samples, 0.61%)</title><rect x="92.5888%" y="405" width="0.6091%" height="15" fill="rgb(208,113,17)" fg:x="912" fg:w="6"/><text x="92.8388%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.61%)</title><rect x="92.5888%" y="389" width="0.6091%" height="15" fill="rgb(208,14,22)" fg:x="912" fg:w="6"/><text x="92.8388%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.61%)</title><rect x="92.5888%" y="373" width="0.6091%" height="15" fill="rgb(222,95,2)" fg:x="912" fg:w="6"/><text x="92.8388%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.61%)</title><rect x="92.5888%" y="357" width="0.6091%" height="15" fill="rgb(253,180,37)" fg:x="912" fg:w="6"/><text x="92.8388%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.61%)</title><rect x="92.5888%" y="341" width="0.6091%" height="15" fill="rgb(250,81,33)" fg:x="912" fg:w="6"/><text x="92.8388%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.61%)</title><rect x="92.5888%" y="325" width="0.6091%" height="15" fill="rgb(251,151,41)" fg:x="912" fg:w="6"/><text x="92.8388%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.41%)</title><rect x="92.7919%" y="309" width="0.4061%" height="15" fill="rgb(210,135,17)" fg:x="914" fg:w="4"/><text x="93.0419%" y="319.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.20%)</title><rect x="92.9949%" y="293" width="0.2030%" height="15" fill="rgb(239,21,29)" fg:x="916" fg:w="2"/><text x="93.2449%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="92.9949%" y="277" width="0.2030%" height="15" fill="rgb(231,215,16)" fg:x="916" fg:w="2"/><text x="93.2449%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.20%)</title><rect x="92.9949%" y="261" width="0.2030%" height="15" fill="rgb(239,151,54)" fg:x="916" fg:w="2"/><text x="93.2449%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.20%)</title><rect x="92.9949%" y="245" width="0.2030%" height="15" fill="rgb(222,122,38)" fg:x="916" fg:w="2"/><text x="93.2449%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.20%)</title><rect x="92.9949%" y="229" width="0.2030%" height="15" fill="rgb(243,128,1)" fg:x="916" fg:w="2"/><text x="93.2449%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.10%)</title><rect x="93.0964%" y="213" width="0.1015%" height="15" fill="rgb(225,74,21)" fg:x="917" fg:w="1"/><text x="93.3464%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.10%)</title><rect x="93.0964%" y="197" width="0.1015%" height="15" fill="rgb(216,210,10)" fg:x="917" fg:w="1"/><text x="93.3464%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="93.0964%" y="181" width="0.1015%" height="15" fill="rgb(228,76,19)" fg:x="917" fg:w="1"/><text x="93.3464%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="93.0964%" y="165" width="0.1015%" height="15" fill="rgb(236,80,34)" fg:x="917" fg:w="1"/><text x="93.3464%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="93.0964%" y="149" width="0.1015%" height="15" fill="rgb(225,173,23)" fg:x="917" fg:w="1"/><text x="93.3464%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 2.03%)</title><rect x="91.2690%" y="485" width="2.0305%" height="15" fill="rgb(253,38,1)" fg:x="899" fg:w="20"/><text x="91.5190%" y="495.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 2.03%)</title><rect x="91.2690%" y="469" width="2.0305%" height="15" fill="rgb(206,155,35)" fg:x="899" fg:w="20"/><text x="91.5190%" y="479.50">&lt;..</text></g><g><title>plugins_core::tools::get_contained_keys (8 samples, 0.81%)</title><rect x="92.4873%" y="453" width="0.8122%" height="15" fill="rgb(254,27,53)" fg:x="911" fg:w="8"/><text x="92.7373%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.81%)</title><rect x="92.4873%" y="437" width="0.8122%" height="15" fill="rgb(225,52,41)" fg:x="911" fg:w="8"/><text x="92.7373%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.81%)</title><rect x="92.4873%" y="421" width="0.8122%" height="15" fill="rgb(244,53,18)" fg:x="911" fg:w="8"/><text x="92.7373%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.10%)</title><rect x="93.1980%" y="405" width="0.1015%" height="15" fill="rgb(254,206,48)" fg:x="918" fg:w="1"/><text x="93.4480%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.10%)</title><rect x="93.1980%" y="389" width="0.1015%" height="15" fill="rgb(236,182,23)" fg:x="918" fg:w="1"/><text x="93.4480%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="93.2995%" y="453" width="0.1015%" height="15" fill="rgb(236,191,37)" fg:x="919" fg:w="1"/><text x="93.5495%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="93.4010%" y="437" width="0.1015%" height="15" fill="rgb(245,53,8)" fg:x="920" fg:w="1"/><text x="93.6510%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="93.4010%" y="421" width="0.1015%" height="15" fill="rgb(245,147,9)" fg:x="920" fg:w="1"/><text x="93.6510%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="93.4010%" y="405" width="0.1015%" height="15" fill="rgb(218,24,48)" fg:x="920" fg:w="1"/><text x="93.6510%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="93.4010%" y="389" width="0.1015%" height="15" fill="rgb(254,23,9)" fg:x="920" fg:w="1"/><text x="93.6510%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="93.4010%" y="373" width="0.1015%" height="15" fill="rgb(244,105,9)" fg:x="920" fg:w="1"/><text x="93.6510%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="93.4010%" y="357" width="0.1015%" height="15" fill="rgb(212,142,22)" fg:x="920" fg:w="1"/><text x="93.6510%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="93.4010%" y="341" width="0.1015%" height="15" fill="rgb(221,114,49)" fg:x="920" fg:w="1"/><text x="93.6510%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="93.4010%" y="325" width="0.1015%" height="15" fill="rgb(223,210,25)" fg:x="920" fg:w="1"/><text x="93.6510%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="93.4010%" y="309" width="0.1015%" height="15" fill="rgb(235,162,44)" fg:x="920" fg:w="1"/><text x="93.6510%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="93.4010%" y="293" width="0.1015%" height="15" fill="rgb(237,65,45)" fg:x="920" fg:w="1"/><text x="93.6510%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="93.4010%" y="277" width="0.1015%" height="15" fill="rgb(208,79,9)" fg:x="920" fg:w="1"/><text x="93.6510%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="93.4010%" y="261" width="0.1015%" height="15" fill="rgb(215,228,8)" fg:x="920" fg:w="1"/><text x="93.6510%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.10%)</title><rect x="93.5025%" y="437" width="0.1015%" height="15" fill="rgb(205,185,17)" fg:x="921" fg:w="1"/><text x="93.7525%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.10%)</title><rect x="93.5025%" y="421" width="0.1015%" height="15" fill="rgb(213,62,36)" fg:x="921" fg:w="1"/><text x="93.7525%" y="431.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.10%)</title><rect x="93.5025%" y="405" width="0.1015%" height="15" fill="rgb(209,34,9)" fg:x="921" fg:w="1"/><text x="93.7525%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="93.5025%" y="389" width="0.1015%" height="15" fill="rgb(246,151,27)" fg:x="921" fg:w="1"/><text x="93.7525%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="93.5025%" y="373" width="0.1015%" height="15" fill="rgb(218,206,3)" fg:x="921" fg:w="1"/><text x="93.7525%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="93.5025%" y="357" width="0.1015%" height="15" fill="rgb(242,202,1)" fg:x="921" fg:w="1"/><text x="93.7525%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="93.5025%" y="341" width="0.1015%" height="15" fill="rgb(227,185,16)" fg:x="921" fg:w="1"/><text x="93.7525%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="93.5025%" y="325" width="0.1015%" height="15" fill="rgb(241,1,14)" fg:x="921" fg:w="1"/><text x="93.7525%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="93.5025%" y="309" width="0.1015%" height="15" fill="rgb(212,113,25)" fg:x="921" fg:w="1"/><text x="93.7525%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="93.5025%" y="293" width="0.1015%" height="15" fill="rgb(247,37,43)" fg:x="921" fg:w="1"/><text x="93.7525%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="93.5025%" y="277" width="0.1015%" height="15" fill="rgb(226,54,8)" fg:x="921" fg:w="1"/><text x="93.7525%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="93.5025%" y="261" width="0.1015%" height="15" fill="rgb(251,205,25)" fg:x="921" fg:w="1"/><text x="93.7525%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="93.5025%" y="245" width="0.1015%" height="15" fill="rgb(246,87,35)" fg:x="921" fg:w="1"/><text x="93.7525%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="93.5025%" y="229" width="0.1015%" height="15" fill="rgb(251,145,46)" fg:x="921" fg:w="1"/><text x="93.7525%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="93.5025%" y="213" width="0.1015%" height="15" fill="rgb(210,210,33)" fg:x="921" fg:w="1"/><text x="93.7525%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="93.5025%" y="197" width="0.1015%" height="15" fill="rgb(221,151,11)" fg:x="921" fg:w="1"/><text x="93.7525%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="95.0254%" y="197" width="0.1015%" height="15" fill="rgb(208,160,28)" fg:x="936" fg:w="1"/><text x="95.2754%" y="207.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.20%)</title><rect x="95.0254%" y="229" width="0.2030%" height="15" fill="rgb(243,69,29)" fg:x="936" fg:w="2"/><text x="95.2754%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="95.0254%" y="213" width="0.2030%" height="15" fill="rgb(224,144,4)" fg:x="936" fg:w="2"/><text x="95.2754%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="95.1269%" y="197" width="0.1015%" height="15" fill="rgb(211,140,38)" fg:x="937" fg:w="1"/><text x="95.3769%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="95.1269%" y="181" width="0.1015%" height="15" fill="rgb(252,189,15)" fg:x="937" fg:w="1"/><text x="95.3769%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.41%)</title><rect x="94.9239%" y="245" width="0.4061%" height="15" fill="rgb(251,175,23)" fg:x="935" fg:w="4"/><text x="95.1739%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.10%)</title><rect x="95.2284%" y="229" width="0.1015%" height="15" fill="rgb(212,184,11)" fg:x="938" fg:w="1"/><text x="95.4784%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.81%)</title><rect x="94.9239%" y="261" width="0.8122%" height="15" fill="rgb(217,205,6)" fg:x="935" fg:w="8"/><text x="95.1739%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.41%)</title><rect x="95.3299%" y="245" width="0.4061%" height="15" fill="rgb(235,45,45)" fg:x="939" fg:w="4"/><text x="95.5799%" y="255.50"></text></g><g><title>__libc_malloc (4 samples, 0.41%)</title><rect x="95.3299%" y="229" width="0.4061%" height="15" fill="rgb(211,157,53)" fg:x="939" fg:w="4"/><text x="95.5799%" y="239.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (10 samples, 1.02%)</title><rect x="94.8223%" y="277" width="1.0152%" height="15" fill="rgb(212,13,8)" fg:x="934" fg:w="10"/><text x="95.0723%" y="287.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="95.7360%" y="261" width="0.1015%" height="15" fill="rgb(218,80,36)" fg:x="943" fg:w="1"/><text x="95.9860%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="95.7360%" y="245" width="0.1015%" height="15" fill="rgb(211,123,43)" fg:x="943" fg:w="1"/><text x="95.9860%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.52%)</title><rect x="94.6193%" y="293" width="1.5228%" height="15" fill="rgb(206,165,2)" fg:x="932" fg:w="15"/><text x="94.8693%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.30%)</title><rect x="95.8376%" y="277" width="0.3046%" height="15" fill="rgb(248,63,35)" fg:x="944" fg:w="3"/><text x="96.0876%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.30%)</title><rect x="95.8376%" y="261" width="0.3046%" height="15" fill="rgb(219,133,41)" fg:x="944" fg:w="3"/><text x="96.0876%" y="271.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (17 samples, 1.73%)</title><rect x="94.5178%" y="325" width="1.7259%" height="15" fill="rgb(206,175,46)" fg:x="931" fg:w="17"/><text x="94.7678%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (16 samples, 1.62%)</title><rect x="94.6193%" y="309" width="1.6244%" height="15" fill="rgb(224,41,35)" fg:x="932" fg:w="16"/><text x="94.8693%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.10%)</title><rect x="96.1421%" y="293" width="0.1015%" height="15" fill="rgb(226,113,24)" fg:x="947" fg:w="1"/><text x="96.3921%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="96.1421%" y="277" width="0.1015%" height="15" fill="rgb(219,51,41)" fg:x="947" fg:w="1"/><text x="96.3921%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.30%)</title><rect x="96.2437%" y="325" width="0.3046%" height="15" fill="rgb(220,145,47)" fg:x="948" fg:w="3"/><text x="96.4937%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.10%)</title><rect x="96.4467%" y="309" width="0.1015%" height="15" fill="rgb(239,121,47)" fg:x="950" fg:w="1"/><text x="96.6967%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 2.54%)</title><rect x="94.1117%" y="341" width="2.5381%" height="15" fill="rgb(207,60,40)" fg:x="927" fg:w="25"/><text x="94.3617%" y="351.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="96.5482%" y="325" width="0.1015%" height="15" fill="rgb(224,229,11)" fg:x="951" fg:w="1"/><text x="96.7982%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="96.5482%" y="309" width="0.1015%" height="15" fill="rgb(252,28,32)" fg:x="951" fg:w="1"/><text x="96.7982%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="96.5482%" y="293" width="0.1015%" height="15" fill="rgb(207,52,49)" fg:x="951" fg:w="1"/><text x="96.7982%" y="303.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (30 samples, 3.05%)</title><rect x="93.9086%" y="373" width="3.0457%" height="15" fill="rgb(243,51,50)" fg:x="925" fg:w="30"/><text x="94.1586%" y="383.50">&lt;pl..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (28 samples, 2.84%)</title><rect x="94.1117%" y="357" width="2.8426%" height="15" fill="rgb(212,92,21)" fg:x="927" fg:w="28"/><text x="94.3617%" y="367.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.30%)</title><rect x="96.6497%" y="341" width="0.3046%" height="15" fill="rgb(230,183,50)" fg:x="952" fg:w="3"/><text x="96.8997%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.30%)</title><rect x="96.6497%" y="325" width="0.3046%" height="15" fill="rgb(225,48,9)" fg:x="952" fg:w="3"/><text x="96.8997%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 3.55%)</title><rect x="93.6041%" y="389" width="3.5533%" height="15" fill="rgb(254,44,4)" fg:x="922" fg:w="35"/><text x="93.8541%" y="399.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.20%)</title><rect x="96.9543%" y="373" width="0.2030%" height="15" fill="rgb(252,128,37)" fg:x="955" fg:w="2"/><text x="97.2043%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.20%)</title><rect x="96.9543%" y="357" width="0.2030%" height="15" fill="rgb(227,178,8)" fg:x="955" fg:w="2"/><text x="97.2043%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="97.0558%" y="341" width="0.1015%" height="15" fill="rgb(205,206,32)" fg:x="956" fg:w="1"/><text x="97.3058%" y="351.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (39 samples, 3.96%)</title><rect x="93.6041%" y="421" width="3.9594%" height="15" fill="rgb(220,218,22)" fg:x="922" fg:w="39"/><text x="93.8541%" y="431.50">&lt;plu..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (39 samples, 3.96%)</title><rect x="93.6041%" y="405" width="3.9594%" height="15" fill="rgb(236,41,28)" fg:x="922" fg:w="39"/><text x="93.8541%" y="415.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.41%)</title><rect x="97.1574%" y="389" width="0.4061%" height="15" fill="rgb(219,37,7)" fg:x="957" fg:w="4"/><text x="97.4074%" y="399.50"></text></g><g><title>__libc_malloc (4 samples, 0.41%)</title><rect x="97.1574%" y="373" width="0.4061%" height="15" fill="rgb(206,160,15)" fg:x="957" fg:w="4"/><text x="97.4074%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="97.6650%" y="373" width="0.1015%" height="15" fill="rgb(208,82,21)" fg:x="962" fg:w="1"/><text x="97.9150%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="97.7665%" y="373" width="0.2030%" height="15" fill="rgb(226,130,25)" fg:x="963" fg:w="2"/><text x="98.0165%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="97.8680%" y="357" width="0.1015%" height="15" fill="rgb(212,72,24)" fg:x="964" fg:w="1"/><text x="98.1180%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.10%)</title><rect x="97.8680%" y="341" width="0.1015%" height="15" fill="rgb(206,28,16)" fg:x="964" fg:w="1"/><text x="98.1180%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.10%)</title><rect x="97.9695%" y="373" width="0.1015%" height="15" fill="rgb(249,41,5)" fg:x="965" fg:w="1"/><text x="98.2195%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.10%)</title><rect x="98.1726%" y="357" width="0.1015%" height="15" fill="rgb(233,96,48)" fg:x="967" fg:w="1"/><text x="98.4226%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (4 samples, 0.41%)</title><rect x="98.0711%" y="373" width="0.4061%" height="15" fill="rgb(240,198,11)" fg:x="966" fg:w="4"/><text x="98.3211%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="98.2741%" y="357" width="0.2030%" height="15" fill="rgb(209,175,35)" fg:x="968" fg:w="2"/><text x="98.5241%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.20%)</title><rect x="98.2741%" y="341" width="0.2030%" height="15" fill="rgb(214,40,51)" fg:x="968" fg:w="2"/><text x="98.5241%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="98.6802%" y="325" width="0.1015%" height="15" fill="rgb(252,56,4)" fg:x="972" fg:w="1"/><text x="98.9302%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="98.6802%" y="309" width="0.1015%" height="15" fill="rgb(219,131,5)" fg:x="972" fg:w="1"/><text x="98.9302%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="98.6802%" y="293" width="0.1015%" height="15" fill="rgb(223,67,53)" fg:x="972" fg:w="1"/><text x="98.9302%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="98.7817%" y="293" width="0.1015%" height="15" fill="rgb(227,154,8)" fg:x="973" fg:w="1"/><text x="99.0317%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.20%)</title><rect x="98.7817%" y="309" width="0.2030%" height="15" fill="rgb(216,174,51)" fg:x="973" fg:w="2"/><text x="99.0317%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.10%)</title><rect x="98.8832%" y="293" width="0.1015%" height="15" fill="rgb(239,60,34)" fg:x="974" fg:w="1"/><text x="99.1332%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.10%)</title><rect x="98.8832%" y="277" width="0.1015%" height="15" fill="rgb(236,165,48)" fg:x="974" fg:w="1"/><text x="99.1332%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="98.8832%" y="261" width="0.1015%" height="15" fill="rgb(210,37,26)" fg:x="974" fg:w="1"/><text x="99.1332%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.10%)</title><rect x="98.8832%" y="245" width="0.1015%" height="15" fill="rgb(211,3,17)" fg:x="974" fg:w="1"/><text x="99.1332%" y="255.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.61%)</title><rect x="98.4772%" y="373" width="0.6091%" height="15" fill="rgb(234,88,49)" fg:x="970" fg:w="6"/><text x="98.7272%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.51%)</title><rect x="98.5787%" y="357" width="0.5076%" height="15" fill="rgb(233,40,17)" fg:x="971" fg:w="5"/><text x="98.8287%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.51%)</title><rect x="98.5787%" y="341" width="0.5076%" height="15" fill="rgb(235,127,31)" fg:x="971" fg:w="5"/><text x="98.8287%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.30%)</title><rect x="98.7817%" y="325" width="0.3046%" height="15" fill="rgb(248,167,17)" fg:x="973" fg:w="3"/><text x="99.0317%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="98.9848%" y="309" width="0.1015%" height="15" fill="rgb(218,179,8)" fg:x="975" fg:w="1"/><text x="99.2348%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="99.2893%" y="357" width="0.1015%" height="15" fill="rgb(216,92,14)" fg:x="978" fg:w="1"/><text x="99.5393%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.10%)</title><rect x="99.3909%" y="293" width="0.1015%" height="15" fill="rgb(221,198,46)" fg:x="979" fg:w="1"/><text x="99.6409%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.20%)</title><rect x="99.3909%" y="341" width="0.2030%" height="15" fill="rgb(244,7,25)" fg:x="979" fg:w="2"/><text x="99.6409%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.20%)</title><rect x="99.3909%" y="325" width="0.2030%" height="15" fill="rgb(233,75,6)" fg:x="979" fg:w="2"/><text x="99.6409%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.20%)</title><rect x="99.3909%" y="309" width="0.2030%" height="15" fill="rgb(240,189,41)" fg:x="979" fg:w="2"/><text x="99.6409%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="99.4924%" y="293" width="0.1015%" height="15" fill="rgb(237,157,21)" fg:x="980" fg:w="1"/><text x="99.7424%" y="303.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (89 samples, 9.04%)</title><rect x="90.6599%" y="517" width="9.0355%" height="15" fill="rgb(210,136,49)" fg:x="893" fg:w="89"/><text x="90.9099%" y="527.50">&lt;plugins_rpc:..</text></g><g><title>core::iter::adapters::try_process (83 samples, 8.43%)</title><rect x="91.2690%" y="501" width="8.4264%" height="15" fill="rgb(210,68,29)" fg:x="899" fg:w="83"/><text x="91.5190%" y="511.50">core::iter::..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (63 samples, 6.40%)</title><rect x="93.2995%" y="485" width="6.3959%" height="15" fill="rgb(247,207,20)" fg:x="919" fg:w="63"/><text x="93.5495%" y="495.50">alloc::v..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (63 samples, 6.40%)</title><rect x="93.2995%" y="469" width="6.3959%" height="15" fill="rgb(224,73,48)" fg:x="919" fg:w="63"/><text x="93.5495%" y="479.50">&lt;core::i..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (62 samples, 6.29%)</title><rect x="93.4010%" y="453" width="6.2944%" height="15" fill="rgb(215,136,47)" fg:x="920" fg:w="62"/><text x="93.6510%" y="463.50">plugins_..</text></g><g><title>&lt;plugins_rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (60 samples, 6.09%)</title><rect x="93.6041%" y="437" width="6.0914%" height="15" fill="rgb(232,222,16)" fg:x="922" fg:w="60"/><text x="93.8541%" y="447.50">&lt;plugins..</text></g><g><title>kernel::model::EntityPtr::to_json_value (21 samples, 2.13%)</title><rect x="97.5635%" y="421" width="2.1320%" height="15" fill="rgb(249,202,47)" fg:x="961" fg:w="21"/><text x="97.8135%" y="431.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (20 samples, 2.03%)</title><rect x="97.6650%" y="405" width="2.0305%" height="15" fill="rgb(236,56,8)" fg:x="962" fg:w="20"/><text x="97.9150%" y="415.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 2.03%)</title><rect x="97.6650%" y="389" width="2.0305%" height="15" fill="rgb(222,6,3)" fg:x="962" fg:w="20"/><text x="97.9150%" y="399.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.61%)</title><rect x="99.0863%" y="373" width="0.6091%" height="15" fill="rgb(254,222,28)" fg:x="976" fg:w="6"/><text x="99.3363%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.30%)</title><rect x="99.3909%" y="357" width="0.3046%" height="15" fill="rgb(219,57,23)" fg:x="979" fg:w="3"/><text x="99.6409%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.10%)</title><rect x="99.5939%" y="341" width="0.1015%" height="15" fill="rgb(251,106,48)" fg:x="981" fg:w="1"/><text x="99.8439%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.10%)</title><rect x="99.5939%" y="325" width="0.1015%" height="15" fill="rgb(242,2,23)" fg:x="981" fg:w="1"/><text x="99.8439%" y="335.50"></text></g><g><title>&lt;plugins_rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.10%)</title><rect x="99.6954%" y="517" width="0.1015%" height="15" fill="rgb(212,109,31)" fg:x="982" fg:w="1"/><text x="99.9454%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="99.6954%" y="501" width="0.1015%" height="15" fill="rgb(241,9,22)" fg:x="982" fg:w="1"/><text x="99.9454%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="99.6954%" y="485" width="0.1015%" height="15" fill="rgb(209,64,27)" fg:x="982" fg:w="1"/><text x="99.9454%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="99.6954%" y="469" width="0.1015%" height="15" fill="rgb(248,13,44)" fg:x="982" fg:w="1"/><text x="99.9454%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="99.6954%" y="453" width="0.1015%" height="15" fill="rgb(213,86,6)" fg:x="982" fg:w="1"/><text x="99.9454%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="99.6954%" y="437" width="0.1015%" height="15" fill="rgb(247,11,18)" fg:x="982" fg:w="1"/><text x="99.9454%" y="447.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (101 samples, 10.25%)</title><rect x="89.6447%" y="565" width="10.2538%" height="15" fill="rgb(252,31,11)" fg:x="883" fg:w="101"/><text x="89.8947%" y="575.50">kernel::plugins..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (101 samples, 10.25%)</title><rect x="89.6447%" y="549" width="10.2538%" height="15" fill="rgb(215,63,51)" fg:x="883" fg:w="101"/><text x="89.8947%" y="559.50">&lt;plugins_dynlib..</text></g><g><title>plugins_rpc::querying::have_surroundings (92 samples, 9.34%)</title><rect x="90.5584%" y="533" width="9.3401%" height="15" fill="rgb(222,180,4)" fg:x="892" fg:w="92"/><text x="90.8084%" y="543.50">plugins_rpc::..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="99.7970%" y="517" width="0.1015%" height="15" fill="rgb(233,4,23)" fg:x="983" fg:w="1"/><text x="100.0470%" y="527.50"></text></g><g><title>plugins_rpc_proto::&lt;impl core::convert::Into&lt;plugins_rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.10%)</title><rect x="99.7970%" y="501" width="0.1015%" height="15" fill="rgb(230,116,22)" fg:x="983" fg:w="1"/><text x="100.0470%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="99.7970%" y="485" width="0.1015%" height="15" fill="rgb(222,20,14)" fg:x="983" fg:w="1"/><text x="100.0470%" y="495.50"></text></g><g><title>all (985 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(210,176,43)" fg:x="0" fg:w="985"/><text x="0.2500%" y="959.50"></text></g><g><title>simple-255e00ed (985 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(219,67,32)" fg:x="0" fg:w="985"/><text x="0.2500%" y="943.50">simple-255e00ed</text></g><g><title>_start (985 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(228,91,39)" fg:x="0" fg:w="985"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (985 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(254,63,14)" fg:x="0" fg:w="985"/><text x="0.2500%" y="911.50">__libc_start_main</text></g><g><title>main (985 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(216,171,39)" fg:x="0" fg:w="985"/><text x="0.2500%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (985 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(248,68,25)" fg:x="0" fg:w="985"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (985 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(239,63,16)" fg:x="0" fg:w="985"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (985 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(225,111,43)" fg:x="0" fg:w="985"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (985 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(246,165,17)" fg:x="0" fg:w="985"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (985 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(208,124,1)" fg:x="0" fg:w="985"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (985 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(234,147,33)" fg:x="0" fg:w="985"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (985 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(240,86,30)" fg:x="0" fg:w="985"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (985 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(237,34,51)" fg:x="0" fg:w="985"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (985 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(232,131,41)" fg:x="0" fg:w="985"/><text x="0.2500%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (985 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(227,129,53)" fg:x="0" fg:w="985"/><text x="0.2500%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (985 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(230,90,35)" fg:x="0" fg:w="985"/><text x="0.2500%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (985 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(248,88,27)" fg:x="0" fg:w="985"/><text x="0.2500%" y="703.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (985 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(223,18,17)" fg:x="0" fg:w="985"/><text x="0.2500%" y="687.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (985 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(241,11,10)" fg:x="0" fg:w="985"/><text x="0.2500%" y="671.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (264 samples, 26.80%)</title><rect x="73.1980%" y="645" width="26.8020%" height="15" fill="rgb(232,111,52)" fg:x="721" fg:w="264"/><text x="73.4480%" y="655.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as cri..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (264 samples, 26.80%)</title><rect x="73.1980%" y="629" width="26.8020%" height="15" fill="rgb(228,67,8)" fg:x="721" fg:w="264"/><text x="73.4480%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (264 samples, 26.80%)</title><rect x="73.1980%" y="613" width="26.8020%" height="15" fill="rgb(251,168,31)" fg:x="721" fg:w="264"/><text x="73.4480%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (150 samples, 15.23%)</title><rect x="84.7716%" y="597" width="15.2284%" height="15" fill="rgb(249,164,11)" fg:x="835" fg:w="150"/><text x="85.0216%" y="607.50">engine::session::Sessio..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (150 samples, 15.23%)</title><rect x="84.7716%" y="581" width="15.2284%" height="15" fill="rgb(239,81,9)" fg:x="835" fg:w="150"/><text x="85.0216%" y="591.50">engine::perform::Standa..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.10%)</title><rect x="99.8985%" y="565" width="0.1015%" height="15" fill="rgb(222,145,38)" fg:x="984" fg:w="1"/><text x="100.1485%" y="575.50"></text></g><g><title>clock_gettime (1 samples, 0.10%)</title><rect x="99.8985%" y="549" width="0.1015%" height="15" fill="rgb(238,80,54)" fg:x="984" fg:w="1"/><text x="100.1485%" y="559.50"></text></g></svg></svg>