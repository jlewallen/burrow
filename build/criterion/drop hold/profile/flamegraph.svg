<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1237.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="1246"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.0803%" y="821" width="0.1605%" height="15" fill="rgb(253,193,46)" fg:x="1" fg:w="2"/><text x="0.3303%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1605%" y="805" width="0.0803%" height="15" fill="rgb(218,187,39)" fg:x="2" fg:w="1"/><text x="0.4105%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.0803%" y="837" width="0.2408%" height="15" fill="rgb(227,162,48)" fg:x="1" fg:w="3"/><text x="0.3303%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2408%" y="821" width="0.0803%" height="15" fill="rgb(222,25,5)" fg:x="3" fg:w="1"/><text x="0.4908%" y="831.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.5618%" y="741" width="0.3210%" height="15" fill="rgb(211,205,16)" fg:x="7" fg:w="4"/><text x="0.8118%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="0.8828%" y="741" width="0.3210%" height="15" fill="rgb(244,191,2)" fg:x="11" fg:w="4"/><text x="1.1328%" y="751.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.9631%" y="725" width="0.2408%" height="15" fill="rgb(248,159,12)" fg:x="12" fg:w="3"/><text x="1.2131%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="1.2039%" y="725" width="0.3210%" height="15" fill="rgb(235,204,17)" fg:x="15" fg:w="4"/><text x="1.4539%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="1.2841%" y="709" width="0.2408%" height="15" fill="rgb(240,21,27)" fg:x="16" fg:w="3"/><text x="1.5341%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4446%" y="693" width="0.0803%" height="15" fill="rgb(224,170,31)" fg:x="18" fg:w="1"/><text x="1.6946%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5249%" y="725" width="0.1605%" height="15" fill="rgb(223,145,32)" fg:x="19" fg:w="2"/><text x="1.7749%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.6854%" y="725" width="0.1605%" height="15" fill="rgb(243,100,5)" fg:x="21" fg:w="2"/><text x="1.9354%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7657%" y="709" width="0.0803%" height="15" fill="rgb(242,131,51)" fg:x="22" fg:w="1"/><text x="2.0157%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9262%" y="693" width="0.0803%" height="15" fill="rgb(223,156,46)" fg:x="24" fg:w="1"/><text x="2.1762%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.93%)</title><rect x="0.3210%" y="773" width="1.9262%" height="15" fill="rgb(215,10,40)" fg:x="4" fg:w="24"/><text x="0.5710%" y="783.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.85%)</title><rect x="0.4013%" y="757" width="1.8459%" height="15" fill="rgb(233,155,0)" fg:x="5" fg:w="23"/><text x="0.6513%" y="767.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="1.2039%" y="741" width="1.0433%" height="15" fill="rgb(247,78,6)" fg:x="15" fg:w="13"/><text x="1.4539%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.8459%" y="725" width="0.4013%" height="15" fill="rgb(237,217,21)" fg:x="23" fg:w="5"/><text x="2.0959%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="1.9262%" y="709" width="0.3210%" height="15" fill="rgb(212,1,21)" fg:x="24" fg:w="4"/><text x="2.1762%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.0064%" y="693" width="0.2408%" height="15" fill="rgb(213,7,14)" fg:x="25" fg:w="3"/><text x="2.2564%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1669%" y="677" width="0.0803%" height="15" fill="rgb(225,84,14)" fg:x="27" fg:w="1"/><text x="2.4169%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.41%)</title><rect x="0.0000%" y="853" width="2.4077%" height="15" fill="rgb(239,216,39)" fg:x="0" fg:w="30"/><text x="0.2500%" y="863.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (26 samples, 2.09%)</title><rect x="0.3210%" y="837" width="2.0867%" height="15" fill="rgb(253,29,23)" fg:x="4" fg:w="26"/><text x="0.5710%" y="847.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.09%)</title><rect x="0.3210%" y="821" width="2.0867%" height="15" fill="rgb(220,167,50)" fg:x="4" fg:w="26"/><text x="0.5710%" y="831.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (26 samples, 2.09%)</title><rect x="0.3210%" y="805" width="2.0867%" height="15" fill="rgb(232,141,1)" fg:x="4" fg:w="26"/><text x="0.5710%" y="815.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.09%)</title><rect x="0.3210%" y="789" width="2.0867%" height="15" fill="rgb(222,210,1)" fg:x="4" fg:w="26"/><text x="0.5710%" y="799.50">&lt;..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.2472%" y="773" width="0.1605%" height="15" fill="rgb(219,84,10)" fg:x="28" fg:w="2"/><text x="2.4972%" y="783.50"></text></g><g><title>engine::session::Session::initialize (14 samples, 1.12%)</title><rect x="2.4077%" y="805" width="1.1236%" height="15" fill="rgb(245,188,6)" fg:x="30" fg:w="14"/><text x="2.6577%" y="815.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (13 samples, 1.04%)</title><rect x="2.4880%" y="789" width="1.0433%" height="15" fill="rgb(252,139,39)" fg:x="31" fg:w="13"/><text x="2.7380%" y="799.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (13 samples, 1.04%)</title><rect x="2.4880%" y="773" width="1.0433%" height="15" fill="rgb(218,42,26)" fg:x="31" fg:w="13"/><text x="2.7380%" y="783.50"></text></g><g><title>libloading::safe::Library::new (13 samples, 1.04%)</title><rect x="2.4880%" y="757" width="1.0433%" height="15" fill="rgb(237,226,51)" fg:x="31" fg:w="13"/><text x="2.7380%" y="767.50"></text></g><g><title>dlopen (11 samples, 0.88%)</title><rect x="2.6485%" y="741" width="0.8828%" height="15" fill="rgb(246,15,17)" fg:x="33" fg:w="11"/><text x="2.8985%" y="751.50"></text></g><g><title>_dl_catch_error (11 samples, 0.88%)</title><rect x="2.6485%" y="725" width="0.8828%" height="15" fill="rgb(228,170,42)" fg:x="33" fg:w="11"/><text x="2.8985%" y="735.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="2.6485%" y="709" width="0.8828%" height="15" fill="rgb(248,118,53)" fg:x="33" fg:w="11"/><text x="2.8985%" y="719.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="2.6485%" y="693" width="0.8828%" height="15" fill="rgb(207,30,10)" fg:x="33" fg:w="11"/><text x="2.8985%" y="703.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.80%)</title><rect x="2.7287%" y="677" width="0.8026%" height="15" fill="rgb(217,104,38)" fg:x="34" fg:w="10"/><text x="2.9787%" y="687.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="3.4510%" y="661" width="0.0803%" height="15" fill="rgb(211,165,26)" fg:x="43" fg:w="1"/><text x="3.7010%" y="671.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="3.4510%" y="645" width="0.0803%" height="15" fill="rgb(247,38,9)" fg:x="43" fg:w="1"/><text x="3.7010%" y="655.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="3.5313%" y="805" width="0.2408%" height="15" fill="rgb(218,187,8)" fg:x="44" fg:w="3"/><text x="3.7813%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="3.5313%" y="789" width="0.2408%" height="15" fill="rgb(247,94,28)" fg:x="44" fg:w="3"/><text x="3.7813%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="3.6116%" y="773" width="0.1605%" height="15" fill="rgb(218,173,30)" fg:x="45" fg:w="2"/><text x="3.8616%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.6918%" y="757" width="0.0803%" height="15" fill="rgb(245,45,36)" fg:x="46" fg:w="1"/><text x="3.9418%" y="767.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.6918%" y="741" width="0.0803%" height="15" fill="rgb(221,172,44)" fg:x="46" fg:w="1"/><text x="3.9418%" y="751.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (18 samples, 1.44%)</title><rect x="2.4077%" y="853" width="1.4446%" height="15" fill="rgb(222,45,12)" fg:x="30" fg:w="18"/><text x="2.6577%" y="863.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (18 samples, 1.44%)</title><rect x="2.4077%" y="837" width="1.4446%" height="15" fill="rgb(250,10,22)" fg:x="30" fg:w="18"/><text x="2.6577%" y="847.50"></text></g><g><title>engine::session::Session::new (18 samples, 1.44%)</title><rect x="2.4077%" y="821" width="1.4446%" height="15" fill="rgb(239,27,0)" fg:x="30" fg:w="18"/><text x="2.6577%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.7721%" y="805" width="0.0803%" height="15" fill="rgb(223,118,22)" fg:x="47" fg:w="1"/><text x="4.0221%" y="815.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.7721%" y="789" width="0.0803%" height="15" fill="rgb(251,81,25)" fg:x="47" fg:w="1"/><text x="4.0221%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="3.9326%" y="837" width="0.0803%" height="15" fill="rgb(237,225,53)" fg:x="49" fg:w="1"/><text x="4.1826%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.9326%" y="821" width="0.0803%" height="15" fill="rgb(237,186,51)" fg:x="49" fg:w="1"/><text x="4.1826%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.9326%" y="805" width="0.0803%" height="15" fill="rgb(247,209,11)" fg:x="49" fg:w="1"/><text x="4.1826%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="4.0128%" y="837" width="0.0803%" height="15" fill="rgb(223,109,27)" fg:x="50" fg:w="1"/><text x="4.2628%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="4.0128%" y="821" width="0.0803%" height="15" fill="rgb(246,181,13)" fg:x="50" fg:w="1"/><text x="4.2628%" y="831.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="4.0931%" y="821" width="0.2408%" height="15" fill="rgb(234,57,44)" fg:x="51" fg:w="3"/><text x="4.3431%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="4.1734%" y="805" width="0.1605%" height="15" fill="rgb(211,227,50)" fg:x="52" fg:w="2"/><text x="4.4234%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.2536%" y="789" width="0.0803%" height="15" fill="rgb(254,57,34)" fg:x="53" fg:w="1"/><text x="4.5036%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.3339%" y="789" width="0.0803%" height="15" fill="rgb(227,212,26)" fg:x="54" fg:w="1"/><text x="4.5839%" y="799.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.3339%" y="773" width="0.0803%" height="15" fill="rgb(244,169,44)" fg:x="54" fg:w="1"/><text x="4.5839%" y="783.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.4141%" y="789" width="0.0803%" height="15" fill="rgb(236,135,50)" fg:x="55" fg:w="1"/><text x="4.6641%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="4.4141%" y="773" width="0.0803%" height="15" fill="rgb(241,89,30)" fg:x="55" fg:w="1"/><text x="4.6641%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="4.4141%" y="757" width="0.0803%" height="15" fill="rgb(206,113,34)" fg:x="55" fg:w="1"/><text x="4.6641%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.5746%" y="677" width="0.0803%" height="15" fill="rgb(218,104,52)" fg:x="57" fg:w="1"/><text x="4.8246%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.4944%" y="725" width="0.2408%" height="15" fill="rgb(223,82,32)" fg:x="56" fg:w="3"/><text x="4.7444%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.5746%" y="709" width="0.1605%" height="15" fill="rgb(249,219,30)" fg:x="57" fg:w="2"/><text x="4.8246%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.5746%" y="693" width="0.1605%" height="15" fill="rgb(233,141,21)" fg:x="57" fg:w="2"/><text x="4.8246%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="4.6549%" y="677" width="0.0803%" height="15" fill="rgb(252,87,44)" fg:x="58" fg:w="1"/><text x="4.9049%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="4.4944%" y="741" width="0.3210%" height="15" fill="rgb(229,48,33)" fg:x="56" fg:w="4"/><text x="4.7444%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.7352%" y="725" width="0.0803%" height="15" fill="rgb(229,23,22)" fg:x="59" fg:w="1"/><text x="4.9852%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="4.8957%" y="725" width="0.1605%" height="15" fill="rgb(244,116,16)" fg:x="61" fg:w="2"/><text x="5.1457%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.8957%" y="709" width="0.1605%" height="15" fill="rgb(247,45,10)" fg:x="61" fg:w="2"/><text x="5.1457%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.9759%" y="693" width="0.0803%" height="15" fill="rgb(228,60,29)" fg:x="62" fg:w="1"/><text x="5.2259%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.9759%" y="677" width="0.0803%" height="15" fill="rgb(205,129,15)" fg:x="62" fg:w="1"/><text x="5.2259%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="5.0562%" y="725" width="0.4013%" height="15" fill="rgb(206,229,4)" fg:x="63" fg:w="5"/><text x="5.3062%" y="735.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.2167%" y="709" width="0.2408%" height="15" fill="rgb(249,191,30)" fg:x="65" fg:w="3"/><text x="5.4667%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.2970%" y="693" width="0.1605%" height="15" fill="rgb(250,84,54)" fg:x="66" fg:w="2"/><text x="5.5470%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.2970%" y="677" width="0.1605%" height="15" fill="rgb(207,25,53)" fg:x="66" fg:w="2"/><text x="5.5470%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.3772%" y="661" width="0.0803%" height="15" fill="rgb(235,40,8)" fg:x="67" fg:w="1"/><text x="5.6272%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.3772%" y="645" width="0.0803%" height="15" fill="rgb(226,169,33)" fg:x="67" fg:w="1"/><text x="5.6272%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.3772%" y="629" width="0.0803%" height="15" fill="rgb(238,110,8)" fg:x="67" fg:w="1"/><text x="5.6272%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="5.5377%" y="709" width="0.0803%" height="15" fill="rgb(251,206,12)" fg:x="69" fg:w="1"/><text x="5.7877%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.5377%" y="693" width="0.0803%" height="15" fill="rgb(248,171,18)" fg:x="69" fg:w="1"/><text x="5.7877%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.5377%" y="677" width="0.0803%" height="15" fill="rgb(213,65,46)" fg:x="69" fg:w="1"/><text x="5.7877%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.5377%" y="661" width="0.0803%" height="15" fill="rgb(211,154,15)" fg:x="69" fg:w="1"/><text x="5.7877%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.6180%" y="709" width="0.0803%" height="15" fill="rgb(217,75,43)" fg:x="70" fg:w="1"/><text x="5.8680%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.6180%" y="693" width="0.0803%" height="15" fill="rgb(230,32,33)" fg:x="70" fg:w="1"/><text x="5.8680%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.6180%" y="677" width="0.0803%" height="15" fill="rgb(221,100,16)" fg:x="70" fg:w="1"/><text x="5.8680%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.6982%" y="693" width="0.0803%" height="15" fill="rgb(212,129,47)" fg:x="71" fg:w="1"/><text x="5.9482%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.7785%" y="693" width="0.2408%" height="15" fill="rgb(239,217,47)" fg:x="72" fg:w="3"/><text x="6.0285%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.8587%" y="677" width="0.1605%" height="15" fill="rgb(230,84,24)" fg:x="73" fg:w="2"/><text x="6.1087%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.0193%" y="677" width="0.0803%" height="15" fill="rgb(214,153,51)" fg:x="75" fg:w="1"/><text x="6.2693%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.0995%" y="661" width="0.0803%" height="15" fill="rgb(231,6,35)" fg:x="76" fg:w="1"/><text x="6.3495%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="6.1798%" y="661" width="0.1605%" height="15" fill="rgb(229,122,30)" fg:x="77" fg:w="2"/><text x="6.4298%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.1798%" y="645" width="0.1605%" height="15" fill="rgb(234,71,10)" fg:x="77" fg:w="2"/><text x="6.4298%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.1798%" y="629" width="0.1605%" height="15" fill="rgb(215,173,26)" fg:x="77" fg:w="2"/><text x="6.4298%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.1798%" y="613" width="0.1605%" height="15" fill="rgb(248,118,52)" fg:x="77" fg:w="2"/><text x="6.4298%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.1798%" y="597" width="0.1605%" height="15" fill="rgb(237,55,46)" fg:x="77" fg:w="2"/><text x="6.4298%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.2600%" y="581" width="0.0803%" height="15" fill="rgb(243,214,43)" fg:x="78" fg:w="1"/><text x="6.5100%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.2600%" y="565" width="0.0803%" height="15" fill="rgb(252,123,30)" fg:x="78" fg:w="1"/><text x="6.5100%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.2600%" y="549" width="0.0803%" height="15" fill="rgb(215,73,39)" fg:x="78" fg:w="1"/><text x="6.5100%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="5.6982%" y="709" width="0.8026%" height="15" fill="rgb(251,194,29)" fg:x="71" fg:w="10"/><text x="5.9482%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="6.0193%" y="693" width="0.4815%" height="15" fill="rgb(224,58,52)" fg:x="75" fg:w="6"/><text x="6.2693%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="6.0995%" y="677" width="0.4013%" height="15" fill="rgb(248,106,46)" fg:x="76" fg:w="5"/><text x="6.3495%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.3403%" y="661" width="0.1605%" height="15" fill="rgb(223,80,29)" fg:x="79" fg:w="2"/><text x="6.5903%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.3403%" y="645" width="0.1605%" height="15" fill="rgb(243,137,9)" fg:x="79" fg:w="2"/><text x="6.5903%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.4205%" y="629" width="0.0803%" height="15" fill="rgb(235,121,28)" fg:x="80" fg:w="1"/><text x="6.6705%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="5.4575%" y="725" width="1.2039%" height="15" fill="rgb(219,121,41)" fg:x="68" fg:w="15"/><text x="5.7075%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.5008%" y="709" width="0.1605%" height="15" fill="rgb(251,60,6)" fg:x="81" fg:w="2"/><text x="6.7508%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.5008%" y="693" width="0.1605%" height="15" fill="rgb(208,12,30)" fg:x="81" fg:w="2"/><text x="6.7508%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.5008%" y="677" width="0.1605%" height="15" fill="rgb(207,176,36)" fg:x="81" fg:w="2"/><text x="6.7508%" y="687.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.33%)</title><rect x="4.4944%" y="757" width="2.3274%" height="15" fill="rgb(211,188,29)" fg:x="56" fg:w="29"/><text x="4.7444%" y="767.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.01%)</title><rect x="4.8154%" y="741" width="2.0064%" height="15" fill="rgb(220,184,37)" fg:x="60" fg:w="25"/><text x="5.0654%" y="751.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.6613%" y="725" width="0.1605%" height="15" fill="rgb(239,87,37)" fg:x="83" fg:w="2"/><text x="6.9113%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.7416%" y="709" width="0.0803%" height="15" fill="rgb(232,113,44)" fg:x="84" fg:w="1"/><text x="6.9916%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.7416%" y="693" width="0.0803%" height="15" fill="rgb(246,25,39)" fg:x="84" fg:w="1"/><text x="6.9916%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.7416%" y="677" width="0.0803%" height="15" fill="rgb(247,30,13)" fg:x="84" fg:w="1"/><text x="6.9916%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.7416%" y="661" width="0.0803%" height="15" fill="rgb(230,176,35)" fg:x="84" fg:w="1"/><text x="6.9916%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.7416%" y="645" width="0.0803%" height="15" fill="rgb(222,23,18)" fg:x="84" fg:w="1"/><text x="6.9916%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.9823%" y="709" width="0.0803%" height="15" fill="rgb(234,86,8)" fg:x="87" fg:w="1"/><text x="7.2323%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.0626%" y="709" width="0.0803%" height="15" fill="rgb(206,218,47)" fg:x="88" fg:w="1"/><text x="7.3126%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0626%" y="693" width="0.0803%" height="15" fill="rgb(229,35,31)" fg:x="88" fg:w="1"/><text x="7.3126%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.1429%" y="677" width="0.0803%" height="15" fill="rgb(242,81,7)" fg:x="89" fg:w="1"/><text x="7.3929%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="7.2231%" y="677" width="0.0803%" height="15" fill="rgb(231,11,35)" fg:x="90" fg:w="1"/><text x="7.4731%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="7.2231%" y="661" width="0.0803%" height="15" fill="rgb(219,218,17)" fg:x="90" fg:w="1"/><text x="7.4731%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2231%" y="645" width="0.0803%" height="15" fill="rgb(221,83,32)" fg:x="90" fg:w="1"/><text x="7.4731%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.3836%" y="661" width="0.0803%" height="15" fill="rgb(233,49,54)" fg:x="92" fg:w="1"/><text x="7.6336%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.4639%" y="645" width="0.0803%" height="15" fill="rgb(206,18,51)" fg:x="93" fg:w="1"/><text x="7.7139%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="6.8218%" y="757" width="0.8026%" height="15" fill="rgb(249,193,15)" fg:x="85" fg:w="10"/><text x="7.0718%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="6.8218%" y="741" width="0.8026%" height="15" fill="rgb(245,186,19)" fg:x="85" fg:w="10"/><text x="7.0718%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="6.8218%" y="725" width="0.8026%" height="15" fill="rgb(230,4,24)" fg:x="85" fg:w="10"/><text x="7.0718%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="7.1429%" y="709" width="0.4815%" height="15" fill="rgb(234,75,27)" fg:x="89" fg:w="6"/><text x="7.3929%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="7.1429%" y="693" width="0.4815%" height="15" fill="rgb(244,187,35)" fg:x="89" fg:w="6"/><text x="7.3929%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="7.3034%" y="677" width="0.3210%" height="15" fill="rgb(241,97,43)" fg:x="91" fg:w="4"/><text x="7.5534%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="7.4639%" y="661" width="0.1605%" height="15" fill="rgb(236,94,2)" fg:x="93" fg:w="2"/><text x="7.7139%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.5441%" y="645" width="0.0803%" height="15" fill="rgb(231,175,7)" fg:x="94" fg:w="1"/><text x="7.7941%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.5441%" y="629" width="0.0803%" height="15" fill="rgb(236,89,47)" fg:x="94" fg:w="1"/><text x="7.7941%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.6244%" y="709" width="0.0803%" height="15" fill="rgb(213,191,37)" fg:x="95" fg:w="1"/><text x="7.8744%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.7047%" y="709" width="0.1605%" height="15" fill="rgb(252,0,34)" fg:x="96" fg:w="2"/><text x="7.9547%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.7047%" y="693" width="0.1605%" height="15" fill="rgb(208,145,44)" fg:x="96" fg:w="2"/><text x="7.9547%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="7.7849%" y="677" width="0.0803%" height="15" fill="rgb(227,95,50)" fg:x="97" fg:w="1"/><text x="8.0349%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.8652%" y="677" width="0.0803%" height="15" fill="rgb(222,136,24)" fg:x="98" fg:w="1"/><text x="8.1152%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="7.8652%" y="709" width="0.1605%" height="15" fill="rgb(218,105,10)" fg:x="98" fg:w="2"/><text x="8.1152%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="7.8652%" y="693" width="0.1605%" height="15" fill="rgb(216,65,28)" fg:x="98" fg:w="2"/><text x="8.1152%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.9454%" y="677" width="0.0803%" height="15" fill="rgb(229,6,28)" fg:x="99" fg:w="1"/><text x="8.1954%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="7.9454%" y="661" width="0.0803%" height="15" fill="rgb(222,160,42)" fg:x="99" fg:w="1"/><text x="8.1954%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="8.0257%" y="709" width="0.0803%" height="15" fill="rgb(235,83,49)" fg:x="100" fg:w="1"/><text x="8.2757%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="8.0257%" y="693" width="0.0803%" height="15" fill="rgb(236,86,36)" fg:x="100" fg:w="1"/><text x="8.2757%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="8.1059%" y="709" width="0.0803%" height="15" fill="rgb(236,19,41)" fg:x="101" fg:w="1"/><text x="8.3559%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.1059%" y="693" width="0.0803%" height="15" fill="rgb(217,71,31)" fg:x="101" fg:w="1"/><text x="8.3559%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.1059%" y="677" width="0.0803%" height="15" fill="rgb(236,209,25)" fg:x="101" fg:w="1"/><text x="8.3559%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.1862%" y="661" width="0.1605%" height="15" fill="rgb(247,104,21)" fg:x="102" fg:w="2"/><text x="8.4362%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.1862%" y="645" width="0.1605%" height="15" fill="rgb(243,80,38)" fg:x="102" fg:w="2"/><text x="8.4362%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2665%" y="629" width="0.0803%" height="15" fill="rgb(232,109,38)" fg:x="103" fg:w="1"/><text x="8.5165%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.3467%" y="661" width="0.0803%" height="15" fill="rgb(212,177,53)" fg:x="104" fg:w="1"/><text x="8.5967%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.3467%" y="645" width="0.0803%" height="15" fill="rgb(227,30,34)" fg:x="104" fg:w="1"/><text x="8.5967%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="8.3467%" y="629" width="0.0803%" height="15" fill="rgb(205,175,25)" fg:x="104" fg:w="1"/><text x="8.5967%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.5875%" y="613" width="0.0803%" height="15" fill="rgb(249,39,54)" fg:x="107" fg:w="1"/><text x="8.8375%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.6677%" y="581" width="0.0803%" height="15" fill="rgb(215,54,37)" fg:x="108" fg:w="1"/><text x="8.9177%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="8.7480%" y="581" width="0.0803%" height="15" fill="rgb(205,60,46)" fg:x="109" fg:w="1"/><text x="8.9980%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.8283%" y="565" width="0.0803%" height="15" fill="rgb(238,89,29)" fg:x="110" fg:w="1"/><text x="9.0783%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.8283%" y="549" width="0.0803%" height="15" fill="rgb(212,48,10)" fg:x="110" fg:w="1"/><text x="9.0783%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="8.8283%" y="533" width="0.0803%" height="15" fill="rgb(237,186,28)" fg:x="110" fg:w="1"/><text x="9.0783%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.9888%" y="533" width="0.0803%" height="15" fill="rgb(237,204,4)" fg:x="112" fg:w="1"/><text x="9.2388%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.9888%" y="517" width="0.0803%" height="15" fill="rgb(237,15,47)" fg:x="112" fg:w="1"/><text x="9.2388%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9888%" y="501" width="0.0803%" height="15" fill="rgb(244,110,25)" fg:x="112" fg:w="1"/><text x="9.2388%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.96%)</title><rect x="8.1862%" y="693" width="0.9631%" height="15" fill="rgb(241,12,16)" fg:x="102" fg:w="12"/><text x="8.4362%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="8.1862%" y="677" width="0.9631%" height="15" fill="rgb(235,25,9)" fg:x="102" fg:w="12"/><text x="8.4362%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="8.4270%" y="661" width="0.7223%" height="15" fill="rgb(245,159,19)" fg:x="105" fg:w="9"/><text x="8.6770%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="8.5072%" y="645" width="0.6421%" height="15" fill="rgb(236,63,32)" fg:x="106" fg:w="8"/><text x="8.7572%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="8.5875%" y="629" width="0.5618%" height="15" fill="rgb(235,32,52)" fg:x="107" fg:w="7"/><text x="8.8375%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="8.6677%" y="613" width="0.4815%" height="15" fill="rgb(209,176,21)" fg:x="108" fg:w="6"/><text x="8.9177%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="8.6677%" y="597" width="0.4815%" height="15" fill="rgb(205,90,42)" fg:x="108" fg:w="6"/><text x="8.9177%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="8.8283%" y="581" width="0.3210%" height="15" fill="rgb(213,132,16)" fg:x="110" fg:w="4"/><text x="9.0783%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="8.9085%" y="565" width="0.2408%" height="15" fill="rgb(232,11,22)" fg:x="111" fg:w="3"/><text x="9.1585%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="8.9085%" y="549" width="0.2408%" height="15" fill="rgb(248,167,41)" fg:x="111" fg:w="3"/><text x="9.1585%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.0690%" y="533" width="0.0803%" height="15" fill="rgb(209,127,6)" fg:x="113" fg:w="1"/><text x="9.3190%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="9.0690%" y="517" width="0.0803%" height="15" fill="rgb(246,210,34)" fg:x="113" fg:w="1"/><text x="9.3190%" y="527.50"></text></g><g><title>engine::session::Session::flush (64 samples, 5.14%)</title><rect x="4.0931%" y="837" width="5.1364%" height="15" fill="rgb(238,165,13)" fg:x="51" fg:w="64"/><text x="4.3431%" y="847.50">engine..</text></g><g><title>engine::session::state::State::close (61 samples, 4.90%)</title><rect x="4.3339%" y="821" width="4.8957%" height="15" fill="rgb(233,98,15)" fg:x="54" fg:w="61"/><text x="4.5839%" y="831.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (61 samples, 4.90%)</title><rect x="4.3339%" y="805" width="4.8957%" height="15" fill="rgb(215,215,51)" fg:x="54" fg:w="61"/><text x="4.5839%" y="815.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (59 samples, 4.74%)</title><rect x="4.4944%" y="789" width="4.7352%" height="15" fill="rgb(217,161,25)" fg:x="56" fg:w="59"/><text x="4.7444%" y="799.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (59 samples, 4.74%)</title><rect x="4.4944%" y="773" width="4.7352%" height="15" fill="rgb(217,167,48)" fg:x="56" fg:w="59"/><text x="4.7444%" y="783.50">engine..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.61%)</title><rect x="7.6244%" y="757" width="1.6051%" height="15" fill="rgb(205,163,34)" fg:x="95" fg:w="20"/><text x="7.8744%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.61%)</title><rect x="7.6244%" y="741" width="1.6051%" height="15" fill="rgb(241,197,31)" fg:x="95" fg:w="20"/><text x="7.8744%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.61%)</title><rect x="7.6244%" y="725" width="1.6051%" height="15" fill="rgb(225,123,11)" fg:x="95" fg:w="20"/><text x="7.8744%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="8.1862%" y="709" width="1.0433%" height="15" fill="rgb(217,4,20)" fg:x="102" fg:w="13"/><text x="8.4362%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.1493%" y="693" width="0.0803%" height="15" fill="rgb(215,55,9)" fg:x="114" fg:w="1"/><text x="9.3993%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.1493%" y="677" width="0.0803%" height="15" fill="rgb(218,165,5)" fg:x="114" fg:w="1"/><text x="9.3993%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="9.1493%" y="661" width="0.0803%" height="15" fill="rgb(222,175,15)" fg:x="114" fg:w="1"/><text x="9.3993%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="9.2295%" y="789" width="0.0803%" height="15" fill="rgb(223,85,34)" fg:x="115" fg:w="1"/><text x="9.4795%" y="799.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="9.2295%" y="773" width="0.0803%" height="15" fill="rgb(234,228,29)" fg:x="115" fg:w="1"/><text x="9.4795%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="9.2295%" y="805" width="0.1605%" height="15" fill="rgb(239,7,28)" fg:x="115" fg:w="2"/><text x="9.4795%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="9.3098%" y="789" width="0.0803%" height="15" fill="rgb(252,222,53)" fg:x="116" fg:w="1"/><text x="9.5598%" y="799.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="9.3900%" y="805" width="0.0803%" height="15" fill="rgb(232,146,44)" fg:x="117" fg:w="1"/><text x="9.6400%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="9.3900%" y="789" width="0.0803%" height="15" fill="rgb(243,223,53)" fg:x="117" fg:w="1"/><text x="9.6400%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.3900%" y="773" width="0.0803%" height="15" fill="rgb(219,128,25)" fg:x="117" fg:w="1"/><text x="9.6400%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.3900%" y="757" width="0.0803%" height="15" fill="rgb(223,56,32)" fg:x="117" fg:w="1"/><text x="9.6400%" y="767.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="9.4703%" y="757" width="0.0803%" height="15" fill="rgb(237,41,3)" fg:x="118" fg:w="1"/><text x="9.7203%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4703%" y="741" width="0.0803%" height="15" fill="rgb(235,138,9)" fg:x="118" fg:w="1"/><text x="9.7203%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="9.4703%" y="725" width="0.0803%" height="15" fill="rgb(214,131,10)" fg:x="118" fg:w="1"/><text x="9.7203%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="9.5506%" y="757" width="0.1605%" height="15" fill="rgb(229,89,7)" fg:x="119" fg:w="2"/><text x="9.8006%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="9.5506%" y="741" width="0.1605%" height="15" fill="rgb(240,24,42)" fg:x="119" fg:w="2"/><text x="9.8006%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.5506%" y="725" width="0.1605%" height="15" fill="rgb(243,188,54)" fg:x="119" fg:w="2"/><text x="9.8006%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.5506%" y="709" width="0.1605%" height="15" fill="rgb(246,92,22)" fg:x="119" fg:w="2"/><text x="9.8006%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.6308%" y="693" width="0.0803%" height="15" fill="rgb(211,176,51)" fg:x="120" fg:w="1"/><text x="9.8808%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.6308%" y="677" width="0.0803%" height="15" fill="rgb(246,207,34)" fg:x="120" fg:w="1"/><text x="9.8808%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="9.6308%" y="661" width="0.0803%" height="15" fill="rgb(239,95,2)" fg:x="120" fg:w="1"/><text x="9.8808%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.6308%" y="645" width="0.0803%" height="15" fill="rgb(211,124,25)" fg:x="120" fg:w="1"/><text x="9.8808%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.7111%" y="725" width="0.0803%" height="15" fill="rgb(231,221,19)" fg:x="121" fg:w="1"/><text x="9.9611%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.7111%" y="709" width="0.0803%" height="15" fill="rgb(239,183,19)" fg:x="121" fg:w="1"/><text x="9.9611%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="9.4703%" y="789" width="0.4013%" height="15" fill="rgb(221,130,29)" fg:x="118" fg:w="5"/><text x="9.7203%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="9.4703%" y="773" width="0.4013%" height="15" fill="rgb(206,130,36)" fg:x="118" fg:w="5"/><text x="9.7203%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="9.7111%" y="757" width="0.1605%" height="15" fill="rgb(215,70,19)" fg:x="121" fg:w="2"/><text x="9.9611%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="9.7111%" y="741" width="0.1605%" height="15" fill="rgb(244,16,43)" fg:x="121" fg:w="2"/><text x="9.9611%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="9.7913%" y="725" width="0.0803%" height="15" fill="rgb(222,115,32)" fg:x="122" fg:w="1"/><text x="10.0413%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.7913%" y="709" width="0.0803%" height="15" fill="rgb(247,48,25)" fg:x="122" fg:w="1"/><text x="10.0413%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="9.7913%" y="693" width="0.0803%" height="15" fill="rgb(226,180,51)" fg:x="122" fg:w="1"/><text x="10.0413%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.7913%" y="677" width="0.0803%" height="15" fill="rgb(217,142,42)" fg:x="122" fg:w="1"/><text x="10.0413%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="9.7913%" y="661" width="0.0803%" height="15" fill="rgb(220,178,3)" fg:x="122" fg:w="1"/><text x="10.0413%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="9.7913%" y="645" width="0.0803%" height="15" fill="rgb(217,221,4)" fg:x="122" fg:w="1"/><text x="10.0413%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.7913%" y="629" width="0.0803%" height="15" fill="rgb(237,63,43)" fg:x="122" fg:w="1"/><text x="10.0413%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="9.7913%" y="613" width="0.0803%" height="15" fill="rgb(220,57,8)" fg:x="122" fg:w="1"/><text x="10.0413%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.7913%" y="597" width="0.0803%" height="15" fill="rgb(254,186,27)" fg:x="122" fg:w="1"/><text x="10.0413%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.7913%" y="581" width="0.0803%" height="15" fill="rgb(251,57,28)" fg:x="122" fg:w="1"/><text x="10.0413%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="9.2295%" y="821" width="0.8026%" height="15" fill="rgb(215,228,0)" fg:x="115" fg:w="10"/><text x="9.4795%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="9.4703%" y="805" width="0.5618%" height="15" fill="rgb(237,218,39)" fg:x="118" fg:w="7"/><text x="9.7203%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="9.8716%" y="789" width="0.1605%" height="15" fill="rgb(207,2,54)" fg:x="123" fg:w="2"/><text x="10.1216%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.8716%" y="773" width="0.1605%" height="15" fill="rgb(232,76,50)" fg:x="123" fg:w="2"/><text x="10.1216%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.8716%" y="757" width="0.1605%" height="15" fill="rgb(211,85,31)" fg:x="123" fg:w="2"/><text x="10.1216%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="9.8716%" y="741" width="0.1605%" height="15" fill="rgb(223,210,27)" fg:x="123" fg:w="2"/><text x="10.1216%" y="751.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.8716%" y="725" width="0.1605%" height="15" fill="rgb(254,36,8)" fg:x="123" fg:w="2"/><text x="10.1216%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="10.0321%" y="821" width="0.0803%" height="15" fill="rgb(213,4,25)" fg:x="125" fg:w="1"/><text x="10.2821%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.0321%" y="805" width="0.0803%" height="15" fill="rgb(224,2,39)" fg:x="125" fg:w="1"/><text x="10.2821%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.1124%" y="661" width="0.0803%" height="15" fill="rgb(208,8,39)" fg:x="126" fg:w="1"/><text x="10.3624%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.1124%" y="693" width="0.1605%" height="15" fill="rgb(216,226,3)" fg:x="126" fg:w="2"/><text x="10.3624%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.1124%" y="677" width="0.1605%" height="15" fill="rgb(249,139,31)" fg:x="126" fg:w="2"/><text x="10.3624%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.1926%" y="661" width="0.0803%" height="15" fill="rgb(242,170,35)" fg:x="127" fg:w="1"/><text x="10.4426%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.1124%" y="725" width="0.2408%" height="15" fill="rgb(238,14,9)" fg:x="126" fg:w="3"/><text x="10.3624%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.1124%" y="709" width="0.2408%" height="15" fill="rgb(251,81,46)" fg:x="126" fg:w="3"/><text x="10.3624%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.2729%" y="693" width="0.0803%" height="15" fill="rgb(230,23,4)" fg:x="128" fg:w="1"/><text x="10.5229%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="10.1124%" y="805" width="0.3210%" height="15" fill="rgb(211,85,25)" fg:x="126" fg:w="4"/><text x="10.3624%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="10.1124%" y="789" width="0.3210%" height="15" fill="rgb(252,23,31)" fg:x="126" fg:w="4"/><text x="10.3624%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="10.1124%" y="773" width="0.3210%" height="15" fill="rgb(234,163,38)" fg:x="126" fg:w="4"/><text x="10.3624%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="10.1124%" y="757" width="0.3210%" height="15" fill="rgb(210,190,50)" fg:x="126" fg:w="4"/><text x="10.3624%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="10.1124%" y="741" width="0.3210%" height="15" fill="rgb(228,158,3)" fg:x="126" fg:w="4"/><text x="10.3624%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.3531%" y="725" width="0.0803%" height="15" fill="rgb(216,130,0)" fg:x="129" fg:w="1"/><text x="10.6031%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.3531%" y="709" width="0.0803%" height="15" fill="rgb(224,184,10)" fg:x="129" fg:w="1"/><text x="10.6031%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.3531%" y="693" width="0.0803%" height="15" fill="rgb(214,202,18)" fg:x="129" fg:w="1"/><text x="10.6031%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.3531%" y="677" width="0.0803%" height="15" fill="rgb(213,229,54)" fg:x="129" fg:w="1"/><text x="10.6031%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.3531%" y="661" width="0.0803%" height="15" fill="rgb(246,120,0)" fg:x="129" fg:w="1"/><text x="10.6031%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.3531%" y="645" width="0.0803%" height="15" fill="rgb(237,6,15)" fg:x="129" fg:w="1"/><text x="10.6031%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.3531%" y="629" width="0.0803%" height="15" fill="rgb(252,156,15)" fg:x="129" fg:w="1"/><text x="10.6031%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.3531%" y="613" width="0.0803%" height="15" fill="rgb(249,78,18)" fg:x="129" fg:w="1"/><text x="10.6031%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.3531%" y="597" width="0.0803%" height="15" fill="rgb(230,223,44)" fg:x="129" fg:w="1"/><text x="10.6031%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="10.4334%" y="805" width="0.0803%" height="15" fill="rgb(230,222,32)" fg:x="130" fg:w="1"/><text x="10.6834%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.4334%" y="789" width="0.0803%" height="15" fill="rgb(247,54,6)" fg:x="130" fg:w="1"/><text x="10.6834%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.4334%" y="773" width="0.0803%" height="15" fill="rgb(247,115,45)" fg:x="130" fg:w="1"/><text x="10.6834%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="10.4334%" y="757" width="0.0803%" height="15" fill="rgb(213,203,37)" fg:x="130" fg:w="1"/><text x="10.6834%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="10.5136%" y="805" width="0.1605%" height="15" fill="rgb(248,188,18)" fg:x="131" fg:w="2"/><text x="10.7636%" y="815.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="10.5136%" y="789" width="0.1605%" height="15" fill="rgb(206,80,8)" fg:x="131" fg:w="2"/><text x="10.7636%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.5939%" y="773" width="0.0803%" height="15" fill="rgb(245,217,31)" fg:x="132" fg:w="1"/><text x="10.8439%" y="783.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.5939%" y="757" width="0.0803%" height="15" fill="rgb(220,193,15)" fg:x="132" fg:w="1"/><text x="10.8439%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="10.5939%" y="741" width="0.0803%" height="15" fill="rgb(226,7,19)" fg:x="132" fg:w="1"/><text x="10.8439%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.5939%" y="725" width="0.0803%" height="15" fill="rgb(222,145,31)" fg:x="132" fg:w="1"/><text x="10.8439%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5939%" y="709" width="0.0803%" height="15" fill="rgb(241,193,36)" fg:x="132" fg:w="1"/><text x="10.8439%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5939%" y="693" width="0.0803%" height="15" fill="rgb(225,123,33)" fg:x="132" fg:w="1"/><text x="10.8439%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.6742%" y="517" width="0.0803%" height="15" fill="rgb(246,136,38)" fg:x="133" fg:w="1"/><text x="10.9242%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.6742%" y="501" width="0.0803%" height="15" fill="rgb(243,56,24)" fg:x="133" fg:w="1"/><text x="10.9242%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.6742%" y="485" width="0.0803%" height="15" fill="rgb(215,147,2)" fg:x="133" fg:w="1"/><text x="10.9242%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6742%" y="469" width="0.0803%" height="15" fill="rgb(209,155,27)" fg:x="133" fg:w="1"/><text x="10.9242%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="10.6742%" y="757" width="0.1605%" height="15" fill="rgb(222,177,11)" fg:x="133" fg:w="2"/><text x="10.9242%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="10.6742%" y="741" width="0.1605%" height="15" fill="rgb(212,227,15)" fg:x="133" fg:w="2"/><text x="10.9242%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.6742%" y="725" width="0.1605%" height="15" fill="rgb(214,138,20)" fg:x="133" fg:w="2"/><text x="10.9242%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.6742%" y="709" width="0.1605%" height="15" fill="rgb(221,170,31)" fg:x="133" fg:w="2"/><text x="10.9242%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.6742%" y="693" width="0.1605%" height="15" fill="rgb(253,207,5)" fg:x="133" fg:w="2"/><text x="10.9242%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.6742%" y="677" width="0.1605%" height="15" fill="rgb(212,64,37)" fg:x="133" fg:w="2"/><text x="10.9242%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.6742%" y="661" width="0.1605%" height="15" fill="rgb(208,113,51)" fg:x="133" fg:w="2"/><text x="10.9242%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="10.6742%" y="645" width="0.1605%" height="15" fill="rgb(237,15,5)" fg:x="133" fg:w="2"/><text x="10.9242%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="10.6742%" y="629" width="0.1605%" height="15" fill="rgb(238,33,18)" fg:x="133" fg:w="2"/><text x="10.9242%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="10.6742%" y="613" width="0.1605%" height="15" fill="rgb(253,206,50)" fg:x="133" fg:w="2"/><text x="10.9242%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="10.6742%" y="597" width="0.1605%" height="15" fill="rgb(242,158,43)" fg:x="133" fg:w="2"/><text x="10.9242%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="10.6742%" y="581" width="0.1605%" height="15" fill="rgb(213,125,27)" fg:x="133" fg:w="2"/><text x="10.9242%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="10.6742%" y="565" width="0.1605%" height="15" fill="rgb(233,161,31)" fg:x="133" fg:w="2"/><text x="10.9242%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="10.6742%" y="549" width="0.1605%" height="15" fill="rgb(218,135,6)" fg:x="133" fg:w="2"/><text x="10.9242%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="10.6742%" y="533" width="0.1605%" height="15" fill="rgb(222,73,53)" fg:x="133" fg:w="2"/><text x="10.9242%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="10.7544%" y="517" width="0.0803%" height="15" fill="rgb(229,66,53)" fg:x="134" fg:w="1"/><text x="11.0044%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="10.7544%" y="501" width="0.0803%" height="15" fill="rgb(208,128,19)" fg:x="134" fg:w="1"/><text x="11.0044%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8347%" y="709" width="0.0803%" height="15" fill="rgb(235,70,27)" fg:x="135" fg:w="1"/><text x="11.0847%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8347%" y="693" width="0.0803%" height="15" fill="rgb(241,130,30)" fg:x="135" fg:w="1"/><text x="11.0847%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8347%" y="677" width="0.0803%" height="15" fill="rgb(222,57,48)" fg:x="135" fg:w="1"/><text x="11.0847%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8347%" y="661" width="0.0803%" height="15" fill="rgb(225,204,29)" fg:x="135" fg:w="1"/><text x="11.0847%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8347%" y="645" width="0.0803%" height="15" fill="rgb(240,196,35)" fg:x="135" fg:w="1"/><text x="11.0847%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.8347%" y="629" width="0.0803%" height="15" fill="rgb(215,150,16)" fg:x="135" fg:w="1"/><text x="11.0847%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.8347%" y="613" width="0.0803%" height="15" fill="rgb(209,170,13)" fg:x="135" fg:w="1"/><text x="11.0847%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.8347%" y="597" width="0.0803%" height="15" fill="rgb(235,75,31)" fg:x="135" fg:w="1"/><text x="11.0847%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.8347%" y="581" width="0.0803%" height="15" fill="rgb(252,1,47)" fg:x="135" fg:w="1"/><text x="11.0847%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.8347%" y="565" width="0.0803%" height="15" fill="rgb(241,2,36)" fg:x="135" fg:w="1"/><text x="11.0847%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.8347%" y="549" width="0.0803%" height="15" fill="rgb(236,191,4)" fg:x="135" fg:w="1"/><text x="11.0847%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.8347%" y="533" width="0.0803%" height="15" fill="rgb(212,65,35)" fg:x="135" fg:w="1"/><text x="11.0847%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.8347%" y="517" width="0.0803%" height="15" fill="rgb(209,49,33)" fg:x="135" fg:w="1"/><text x="11.0847%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.8347%" y="501" width="0.0803%" height="15" fill="rgb(208,36,46)" fg:x="135" fg:w="1"/><text x="11.0847%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.8347%" y="485" width="0.0803%" height="15" fill="rgb(210,125,2)" fg:x="135" fg:w="1"/><text x="11.0847%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.8347%" y="469" width="0.0803%" height="15" fill="rgb(225,62,6)" fg:x="135" fg:w="1"/><text x="11.0847%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.8347%" y="453" width="0.0803%" height="15" fill="rgb(210,54,27)" fg:x="135" fg:w="1"/><text x="11.0847%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9149%" y="677" width="0.0803%" height="15" fill="rgb(249,189,52)" fg:x="136" fg:w="1"/><text x="11.1649%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9149%" y="661" width="0.0803%" height="15" fill="rgb(225,134,40)" fg:x="136" fg:w="1"/><text x="11.1649%" y="671.50"></text></g><g><title>plugins_core::build::Build::holding (23 samples, 1.85%)</title><rect x="9.2295%" y="837" width="1.8459%" height="15" fill="rgb(206,13,37)" fg:x="115" fg:w="23"/><text x="9.4795%" y="847.50">p..</text></g><g><title>plugins_core::tools::set_container (12 samples, 0.96%)</title><rect x="10.1124%" y="821" width="0.9631%" height="15" fill="rgb(232,114,28)" fg:x="126" fg:w="12"/><text x="10.3624%" y="831.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="10.6742%" y="805" width="0.4013%" height="15" fill="rgb(253,215,8)" fg:x="133" fg:w="5"/><text x="10.9242%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="10.6742%" y="789" width="0.4013%" height="15" fill="rgb(254,64,19)" fg:x="133" fg:w="5"/><text x="10.9242%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="10.6742%" y="773" width="0.4013%" height="15" fill="rgb(242,18,46)" fg:x="133" fg:w="5"/><text x="10.9242%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="10.8347%" y="757" width="0.2408%" height="15" fill="rgb(239,192,30)" fg:x="135" fg:w="3"/><text x="11.0847%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="10.8347%" y="741" width="0.2408%" height="15" fill="rgb(232,73,14)" fg:x="135" fg:w="3"/><text x="11.0847%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="10.8347%" y="725" width="0.2408%" height="15" fill="rgb(225,51,9)" fg:x="135" fg:w="3"/><text x="11.0847%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.9149%" y="709" width="0.1605%" height="15" fill="rgb(242,217,54)" fg:x="136" fg:w="2"/><text x="11.1649%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="10.9149%" y="693" width="0.1605%" height="15" fill="rgb(216,93,3)" fg:x="136" fg:w="2"/><text x="11.1649%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.9952%" y="677" width="0.0803%" height="15" fill="rgb(230,119,33)" fg:x="137" fg:w="1"/><text x="11.2452%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="11.0754%" y="805" width="0.0803%" height="15" fill="rgb(238,170,27)" fg:x="138" fg:w="1"/><text x="11.3254%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="11.0754%" y="789" width="0.0803%" height="15" fill="rgb(229,8,2)" fg:x="138" fg:w="1"/><text x="11.3254%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="11.0754%" y="773" width="0.0803%" height="15" fill="rgb(205,214,42)" fg:x="138" fg:w="1"/><text x="11.3254%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.0754%" y="757" width="0.0803%" height="15" fill="rgb(245,113,1)" fg:x="138" fg:w="1"/><text x="11.3254%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.0754%" y="741" width="0.0803%" height="15" fill="rgb(252,50,2)" fg:x="138" fg:w="1"/><text x="11.3254%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.0754%" y="725" width="0.0803%" height="15" fill="rgb(225,122,24)" fg:x="138" fg:w="1"/><text x="11.3254%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="11.0754%" y="709" width="0.0803%" height="15" fill="rgb(234,129,31)" fg:x="138" fg:w="1"/><text x="11.3254%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.0754%" y="693" width="0.0803%" height="15" fill="rgb(219,177,4)" fg:x="138" fg:w="1"/><text x="11.3254%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.0754%" y="677" width="0.0803%" height="15" fill="rgb(225,142,27)" fg:x="138" fg:w="1"/><text x="11.3254%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.0754%" y="661" width="0.0803%" height="15" fill="rgb(205,107,51)" fg:x="138" fg:w="1"/><text x="11.3254%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="11.0754%" y="645" width="0.0803%" height="15" fill="rgb(236,223,15)" fg:x="138" fg:w="1"/><text x="11.3254%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.0754%" y="629" width="0.0803%" height="15" fill="rgb(235,133,11)" fg:x="138" fg:w="1"/><text x="11.3254%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.0754%" y="613" width="0.0803%" height="15" fill="rgb(247,172,13)" fg:x="138" fg:w="1"/><text x="11.3254%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.0754%" y="597" width="0.0803%" height="15" fill="rgb(233,191,41)" fg:x="138" fg:w="1"/><text x="11.3254%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.0754%" y="581" width="0.0803%" height="15" fill="rgb(250,65,16)" fg:x="138" fg:w="1"/><text x="11.3254%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.0754%" y="565" width="0.0803%" height="15" fill="rgb(206,10,27)" fg:x="138" fg:w="1"/><text x="11.3254%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="11.0754%" y="549" width="0.0803%" height="15" fill="rgb(212,96,22)" fg:x="138" fg:w="1"/><text x="11.3254%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="11.0754%" y="533" width="0.0803%" height="15" fill="rgb(206,50,0)" fg:x="138" fg:w="1"/><text x="11.3254%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="11.0754%" y="517" width="0.0803%" height="15" fill="rgb(249,105,52)" fg:x="138" fg:w="1"/><text x="11.3254%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="11.0754%" y="501" width="0.0803%" height="15" fill="rgb(216,93,51)" fg:x="138" fg:w="1"/><text x="11.3254%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.0754%" y="485" width="0.0803%" height="15" fill="rgb(217,172,13)" fg:x="138" fg:w="1"/><text x="11.3254%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.0754%" y="469" width="0.0803%" height="15" fill="rgb(235,199,38)" fg:x="138" fg:w="1"/><text x="11.3254%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.0754%" y="453" width="0.0803%" height="15" fill="rgb(221,97,33)" fg:x="138" fg:w="1"/><text x="11.3254%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="11.0754%" y="437" width="0.0803%" height="15" fill="rgb(205,156,50)" fg:x="138" fg:w="1"/><text x="11.3254%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.0754%" y="421" width="0.0803%" height="15" fill="rgb(215,142,19)" fg:x="138" fg:w="1"/><text x="11.3254%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="11.0754%" y="405" width="0.0803%" height="15" fill="rgb(232,170,7)" fg:x="138" fg:w="1"/><text x="11.3254%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="11.0754%" y="389" width="0.0803%" height="15" fill="rgb(223,50,17)" fg:x="138" fg:w="1"/><text x="11.3254%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="11.0754%" y="373" width="0.0803%" height="15" fill="rgb(230,103,46)" fg:x="138" fg:w="1"/><text x="11.3254%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.0754%" y="357" width="0.0803%" height="15" fill="rgb(254,30,34)" fg:x="138" fg:w="1"/><text x="11.3254%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1557%" y="693" width="0.0803%" height="15" fill="rgb(235,198,1)" fg:x="139" fg:w="1"/><text x="11.4057%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1557%" y="677" width="0.0803%" height="15" fill="rgb(217,105,47)" fg:x="139" fg:w="1"/><text x="11.4057%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.1557%" y="661" width="0.0803%" height="15" fill="rgb(231,18,12)" fg:x="139" fg:w="1"/><text x="11.4057%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.1557%" y="645" width="0.0803%" height="15" fill="rgb(218,196,1)" fg:x="139" fg:w="1"/><text x="11.4057%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.1557%" y="629" width="0.0803%" height="15" fill="rgb(210,32,3)" fg:x="139" fg:w="1"/><text x="11.4057%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1557%" y="613" width="0.0803%" height="15" fill="rgb(227,178,30)" fg:x="139" fg:w="1"/><text x="11.4057%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1557%" y="597" width="0.0803%" height="15" fill="rgb(231,140,27)" fg:x="139" fg:w="1"/><text x="11.4057%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.1557%" y="581" width="0.0803%" height="15" fill="rgb(206,66,35)" fg:x="139" fg:w="1"/><text x="11.4057%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.1557%" y="565" width="0.0803%" height="15" fill="rgb(212,34,2)" fg:x="139" fg:w="1"/><text x="11.4057%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.1557%" y="549" width="0.0803%" height="15" fill="rgb(207,201,33)" fg:x="139" fg:w="1"/><text x="11.4057%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.1557%" y="533" width="0.0803%" height="15" fill="rgb(221,135,32)" fg:x="139" fg:w="1"/><text x="11.4057%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1557%" y="517" width="0.0803%" height="15" fill="rgb(206,77,31)" fg:x="139" fg:w="1"/><text x="11.4057%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.1557%" y="709" width="0.1605%" height="15" fill="rgb(252,198,50)" fg:x="139" fg:w="2"/><text x="11.4057%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.2360%" y="693" width="0.0803%" height="15" fill="rgb(206,79,27)" fg:x="140" fg:w="1"/><text x="11.4860%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3162%" y="709" width="0.0803%" height="15" fill="rgb(228,108,9)" fg:x="141" fg:w="1"/><text x="11.5662%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3162%" y="693" width="0.0803%" height="15" fill="rgb(213,9,39)" fg:x="141" fg:w="1"/><text x="11.5662%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.3162%" y="677" width="0.0803%" height="15" fill="rgb(252,51,13)" fg:x="141" fg:w="1"/><text x="11.5662%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.3162%" y="661" width="0.0803%" height="15" fill="rgb(218,202,39)" fg:x="141" fg:w="1"/><text x="11.5662%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.3162%" y="645" width="0.0803%" height="15" fill="rgb(214,122,21)" fg:x="141" fg:w="1"/><text x="11.5662%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="11.1557%" y="725" width="0.3210%" height="15" fill="rgb(217,205,48)" fg:x="139" fg:w="4"/><text x="11.4057%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3965%" y="709" width="0.0803%" height="15" fill="rgb(230,216,13)" fg:x="142" fg:w="1"/><text x="11.6465%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="11.1557%" y="757" width="0.4013%" height="15" fill="rgb(249,118,4)" fg:x="139" fg:w="5"/><text x="11.4057%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="11.1557%" y="741" width="0.4013%" height="15" fill="rgb(212,207,40)" fg:x="139" fg:w="5"/><text x="11.4057%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4767%" y="725" width="0.0803%" height="15" fill="rgb(217,156,26)" fg:x="143" fg:w="1"/><text x="11.7267%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4767%" y="709" width="0.0803%" height="15" fill="rgb(226,86,34)" fg:x="143" fg:w="1"/><text x="11.7267%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.4767%" y="693" width="0.0803%" height="15" fill="rgb(217,111,30)" fg:x="143" fg:w="1"/><text x="11.7267%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.4767%" y="677" width="0.0803%" height="15" fill="rgb(228,64,18)" fg:x="143" fg:w="1"/><text x="11.7267%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.4767%" y="661" width="0.0803%" height="15" fill="rgb(254,217,48)" fg:x="143" fg:w="1"/><text x="11.7267%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4767%" y="645" width="0.0803%" height="15" fill="rgb(226,156,48)" fg:x="143" fg:w="1"/><text x="11.7267%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4767%" y="629" width="0.0803%" height="15" fill="rgb(236,168,20)" fg:x="143" fg:w="1"/><text x="11.7267%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.4767%" y="613" width="0.0803%" height="15" fill="rgb(239,210,33)" fg:x="143" fg:w="1"/><text x="11.7267%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.4767%" y="597" width="0.0803%" height="15" fill="rgb(242,85,17)" fg:x="143" fg:w="1"/><text x="11.7267%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.4767%" y="581" width="0.0803%" height="15" fill="rgb(221,196,15)" fg:x="143" fg:w="1"/><text x="11.7267%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.4767%" y="565" width="0.0803%" height="15" fill="rgb(249,76,21)" fg:x="143" fg:w="1"/><text x="11.7267%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4767%" y="549" width="0.0803%" height="15" fill="rgb(243,67,29)" fg:x="143" fg:w="1"/><text x="11.7267%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="11.5570%" y="725" width="0.0803%" height="15" fill="rgb(240,159,2)" fg:x="144" fg:w="1"/><text x="11.8070%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.5570%" y="709" width="0.0803%" height="15" fill="rgb(244,64,3)" fg:x="144" fg:w="1"/><text x="11.8070%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.6372%" y="661" width="0.1605%" height="15" fill="rgb(220,86,40)" fg:x="145" fg:w="2"/><text x="11.8872%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="11.6372%" y="645" width="0.1605%" height="15" fill="rgb(222,194,51)" fg:x="145" fg:w="2"/><text x="11.8872%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="11.6372%" y="629" width="0.1605%" height="15" fill="rgb(207,154,19)" fg:x="145" fg:w="2"/><text x="11.8872%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="11.1557%" y="805" width="0.7223%" height="15" fill="rgb(206,178,36)" fg:x="139" fg:w="9"/><text x="11.4057%" y="815.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="11.1557%" y="789" width="0.7223%" height="15" fill="rgb(218,8,24)" fg:x="139" fg:w="9"/><text x="11.4057%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="11.1557%" y="773" width="0.7223%" height="15" fill="rgb(226,83,41)" fg:x="139" fg:w="9"/><text x="11.4057%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="11.5570%" y="757" width="0.3210%" height="15" fill="rgb(224,23,22)" fg:x="144" fg:w="4"/><text x="11.8070%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="11.5570%" y="741" width="0.3210%" height="15" fill="rgb(218,198,45)" fg:x="144" fg:w="4"/><text x="11.8070%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="11.6372%" y="725" width="0.2408%" height="15" fill="rgb(249,147,41)" fg:x="145" fg:w="3"/><text x="11.8872%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.6372%" y="709" width="0.2408%" height="15" fill="rgb(244,224,13)" fg:x="145" fg:w="3"/><text x="11.8872%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="11.6372%" y="693" width="0.2408%" height="15" fill="rgb(225,97,27)" fg:x="145" fg:w="3"/><text x="11.8872%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.6372%" y="677" width="0.2408%" height="15" fill="rgb(254,64,0)" fg:x="145" fg:w="3"/><text x="11.8872%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.7978%" y="661" width="0.0803%" height="15" fill="rgb(208,130,43)" fg:x="147" fg:w="1"/><text x="12.0478%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.7978%" y="645" width="0.0803%" height="15" fill="rgb(247,91,25)" fg:x="147" fg:w="1"/><text x="12.0478%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7978%" y="629" width="0.0803%" height="15" fill="rgb(215,218,42)" fg:x="147" fg:w="1"/><text x="12.0478%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="11.8780%" y="789" width="0.0803%" height="15" fill="rgb(233,9,24)" fg:x="148" fg:w="1"/><text x="12.1280%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="11.8780%" y="773" width="0.0803%" height="15" fill="rgb(252,105,38)" fg:x="148" fg:w="1"/><text x="12.1280%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8780%" y="757" width="0.0803%" height="15" fill="rgb(225,40,49)" fg:x="148" fg:w="1"/><text x="12.1280%" y="767.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="11.8780%" y="805" width="0.1605%" height="15" fill="rgb(232,196,19)" fg:x="148" fg:w="2"/><text x="12.1280%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="11.9583%" y="789" width="0.0803%" height="15" fill="rgb(207,35,15)" fg:x="149" fg:w="1"/><text x="12.2083%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.9583%" y="773" width="0.0803%" height="15" fill="rgb(238,68,36)" fg:x="149" fg:w="1"/><text x="12.2083%" y="783.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.9583%" y="757" width="0.0803%" height="15" fill="rgb(205,158,20)" fg:x="149" fg:w="1"/><text x="12.2083%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.9583%" y="741" width="0.0803%" height="15" fill="rgb(232,32,22)" fg:x="149" fg:w="1"/><text x="12.2083%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.0385%" y="693" width="0.0803%" height="15" fill="rgb(210,169,6)" fg:x="150" fg:w="1"/><text x="12.2885%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0385%" y="677" width="0.0803%" height="15" fill="rgb(229,28,12)" fg:x="150" fg:w="1"/><text x="12.2885%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.0385%" y="757" width="0.1605%" height="15" fill="rgb(229,78,10)" fg:x="150" fg:w="2"/><text x="12.2885%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.0385%" y="741" width="0.1605%" height="15" fill="rgb(223,139,54)" fg:x="150" fg:w="2"/><text x="12.2885%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.0385%" y="725" width="0.1605%" height="15" fill="rgb(207,110,4)" fg:x="150" fg:w="2"/><text x="12.2885%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.0385%" y="709" width="0.1605%" height="15" fill="rgb(248,30,41)" fg:x="150" fg:w="2"/><text x="12.2885%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.1188%" y="693" width="0.0803%" height="15" fill="rgb(235,54,25)" fg:x="151" fg:w="1"/><text x="12.3688%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1188%" y="677" width="0.0803%" height="15" fill="rgb(213,107,41)" fg:x="151" fg:w="1"/><text x="12.3688%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.1188%" y="661" width="0.0803%" height="15" fill="rgb(237,102,9)" fg:x="151" fg:w="1"/><text x="12.3688%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1188%" y="645" width="0.0803%" height="15" fill="rgb(252,137,49)" fg:x="151" fg:w="1"/><text x="12.3688%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.1188%" y="629" width="0.0803%" height="15" fill="rgb(233,202,33)" fg:x="151" fg:w="1"/><text x="12.3688%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1188%" y="613" width="0.0803%" height="15" fill="rgb(223,14,51)" fg:x="151" fg:w="1"/><text x="12.3688%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.1188%" y="597" width="0.0803%" height="15" fill="rgb(248,70,23)" fg:x="151" fg:w="1"/><text x="12.3688%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1188%" y="581" width="0.0803%" height="15" fill="rgb(209,207,47)" fg:x="151" fg:w="1"/><text x="12.3688%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="12.1188%" y="565" width="0.0803%" height="15" fill="rgb(245,124,2)" fg:x="151" fg:w="1"/><text x="12.3688%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.1990%" y="725" width="0.0803%" height="15" fill="rgb(249,208,11)" fg:x="152" fg:w="1"/><text x="12.4490%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.1990%" y="709" width="0.0803%" height="15" fill="rgb(247,112,7)" fg:x="152" fg:w="1"/><text x="12.4490%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.1990%" y="693" width="0.0803%" height="15" fill="rgb(209,192,31)" fg:x="152" fg:w="1"/><text x="12.4490%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.1990%" y="677" width="0.0803%" height="15" fill="rgb(236,55,19)" fg:x="152" fg:w="1"/><text x="12.4490%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.1990%" y="661" width="0.0803%" height="15" fill="rgb(252,89,41)" fg:x="152" fg:w="1"/><text x="12.4490%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.28%)</title><rect x="11.0754%" y="837" width="1.2841%" height="15" fill="rgb(220,172,14)" fg:x="138" fg:w="16"/><text x="11.3254%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="11.0754%" y="821" width="1.2841%" height="15" fill="rgb(252,65,2)" fg:x="138" fg:w="16"/><text x="11.3254%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="12.0385%" y="805" width="0.3210%" height="15" fill="rgb(250,20,8)" fg:x="150" fg:w="4"/><text x="12.2885%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="12.0385%" y="789" width="0.3210%" height="15" fill="rgb(234,149,13)" fg:x="150" fg:w="4"/><text x="12.2885%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="12.0385%" y="773" width="0.3210%" height="15" fill="rgb(223,219,12)" fg:x="150" fg:w="4"/><text x="12.2885%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="12.1990%" y="757" width="0.1605%" height="15" fill="rgb(234,13,49)" fg:x="152" fg:w="2"/><text x="12.4490%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.1990%" y="741" width="0.1605%" height="15" fill="rgb(214,41,25)" fg:x="152" fg:w="2"/><text x="12.4490%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.2793%" y="725" width="0.0803%" height="15" fill="rgb(232,198,52)" fg:x="153" fg:w="1"/><text x="12.5293%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.2793%" y="709" width="0.0803%" height="15" fill="rgb(236,111,46)" fg:x="153" fg:w="1"/><text x="12.5293%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.2793%" y="693" width="0.0803%" height="15" fill="rgb(253,30,20)" fg:x="153" fg:w="1"/><text x="12.5293%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.2793%" y="677" width="0.0803%" height="15" fill="rgb(247,141,17)" fg:x="153" fg:w="1"/><text x="12.5293%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.2793%" y="661" width="0.0803%" height="15" fill="rgb(214,195,21)" fg:x="153" fg:w="1"/><text x="12.5293%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.2793%" y="645" width="0.0803%" height="15" fill="rgb(214,98,12)" fg:x="153" fg:w="1"/><text x="12.5293%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="12.3596%" y="805" width="0.0803%" height="15" fill="rgb(239,4,26)" fg:x="154" fg:w="1"/><text x="12.6096%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.3596%" y="789" width="0.0803%" height="15" fill="rgb(234,210,35)" fg:x="154" fg:w="1"/><text x="12.6096%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.3596%" y="773" width="0.0803%" height="15" fill="rgb(252,178,27)" fg:x="154" fg:w="1"/><text x="12.6096%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.3596%" y="757" width="0.0803%" height="15" fill="rgb(217,50,1)" fg:x="154" fg:w="1"/><text x="12.6096%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.3596%" y="741" width="0.0803%" height="15" fill="rgb(233,137,5)" fg:x="154" fg:w="1"/><text x="12.6096%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.3596%" y="725" width="0.0803%" height="15" fill="rgb(217,227,25)" fg:x="154" fg:w="1"/><text x="12.6096%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.3596%" y="709" width="0.0803%" height="15" fill="rgb(242,89,38)" fg:x="154" fg:w="1"/><text x="12.6096%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.3596%" y="693" width="0.0803%" height="15" fill="rgb(212,190,30)" fg:x="154" fg:w="1"/><text x="12.6096%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="12.3596%" y="837" width="0.1605%" height="15" fill="rgb(222,120,8)" fg:x="154" fg:w="2"/><text x="12.6096%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="12.3596%" y="821" width="0.1605%" height="15" fill="rgb(227,181,9)" fg:x="154" fg:w="2"/><text x="12.6096%" y="831.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="12.4398%" y="805" width="0.0803%" height="15" fill="rgb(222,125,29)" fg:x="155" fg:w="1"/><text x="12.6898%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.4398%" y="789" width="0.0803%" height="15" fill="rgb(215,153,31)" fg:x="155" fg:w="1"/><text x="12.6898%" y="799.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4398%" y="773" width="0.0803%" height="15" fill="rgb(228,77,30)" fg:x="155" fg:w="1"/><text x="12.6898%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.4398%" y="757" width="0.0803%" height="15" fill="rgb(226,110,9)" fg:x="155" fg:w="1"/><text x="12.6898%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4398%" y="741" width="0.0803%" height="15" fill="rgb(219,111,7)" fg:x="155" fg:w="1"/><text x="12.6898%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.4398%" y="725" width="0.0803%" height="15" fill="rgb(229,167,25)" fg:x="155" fg:w="1"/><text x="12.6898%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="12.4398%" y="709" width="0.0803%" height="15" fill="rgb(209,77,43)" fg:x="155" fg:w="1"/><text x="12.6898%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4398%" y="693" width="0.0803%" height="15" fill="rgb(233,70,39)" fg:x="155" fg:w="1"/><text x="12.6898%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.4398%" y="677" width="0.0803%" height="15" fill="rgb(207,171,44)" fg:x="155" fg:w="1"/><text x="12.6898%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4398%" y="661" width="0.0803%" height="15" fill="rgb(244,91,6)" fg:x="155" fg:w="1"/><text x="12.6898%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.6806%" y="709" width="0.1605%" height="15" fill="rgb(234,136,12)" fg:x="158" fg:w="2"/><text x="12.9306%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7608%" y="693" width="0.0803%" height="15" fill="rgb(216,210,38)" fg:x="159" fg:w="1"/><text x="13.0108%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="12.6003%" y="757" width="0.3210%" height="15" fill="rgb(241,227,7)" fg:x="157" fg:w="4"/><text x="12.8503%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="12.6003%" y="741" width="0.3210%" height="15" fill="rgb(241,222,11)" fg:x="157" fg:w="4"/><text x="12.8503%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.6806%" y="725" width="0.2408%" height="15" fill="rgb(246,86,18)" fg:x="158" fg:w="3"/><text x="12.9306%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8411%" y="709" width="0.0803%" height="15" fill="rgb(224,151,49)" fg:x="160" fg:w="1"/><text x="13.0911%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9213%" y="757" width="0.0803%" height="15" fill="rgb(235,4,41)" fg:x="161" fg:w="1"/><text x="13.1713%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.9213%" y="741" width="0.0803%" height="15" fill="rgb(218,30,52)" fg:x="161" fg:w="1"/><text x="13.1713%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9213%" y="725" width="0.0803%" height="15" fill="rgb(205,124,51)" fg:x="161" fg:w="1"/><text x="13.1713%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9213%" y="709" width="0.0803%" height="15" fill="rgb(237,126,51)" fg:x="161" fg:w="1"/><text x="13.1713%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9213%" y="693" width="0.0803%" height="15" fill="rgb(225,32,46)" fg:x="161" fg:w="1"/><text x="13.1713%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9213%" y="677" width="0.0803%" height="15" fill="rgb(251,60,49)" fg:x="161" fg:w="1"/><text x="13.1713%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.9213%" y="661" width="0.0803%" height="15" fill="rgb(234,18,23)" fg:x="161" fg:w="1"/><text x="13.1713%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="12.5201%" y="821" width="0.5618%" height="15" fill="rgb(234,25,23)" fg:x="156" fg:w="7"/><text x="12.7701%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="12.5201%" y="805" width="0.5618%" height="15" fill="rgb(210,43,52)" fg:x="156" fg:w="7"/><text x="12.7701%" y="815.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="12.5201%" y="789" width="0.5618%" height="15" fill="rgb(237,198,21)" fg:x="156" fg:w="7"/><text x="12.7701%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="12.5201%" y="773" width="0.5618%" height="15" fill="rgb(211,20,34)" fg:x="156" fg:w="7"/><text x="12.7701%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0016%" y="757" width="0.0803%" height="15" fill="rgb(221,155,50)" fg:x="162" fg:w="1"/><text x="13.2516%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0016%" y="741" width="0.0803%" height="15" fill="rgb(213,214,53)" fg:x="162" fg:w="1"/><text x="13.2516%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0016%" y="725" width="0.0803%" height="15" fill="rgb(215,229,48)" fg:x="162" fg:w="1"/><text x="13.2516%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0016%" y="709" width="0.0803%" height="15" fill="rgb(243,88,5)" fg:x="162" fg:w="1"/><text x="13.2516%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.0016%" y="693" width="0.0803%" height="15" fill="rgb(216,199,8)" fg:x="162" fg:w="1"/><text x="13.2516%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0016%" y="677" width="0.0803%" height="15" fill="rgb(241,22,4)" fg:x="162" fg:w="1"/><text x="13.2516%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0016%" y="661" width="0.0803%" height="15" fill="rgb(209,190,22)" fg:x="162" fg:w="1"/><text x="13.2516%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0016%" y="645" width="0.0803%" height="15" fill="rgb(251,138,45)" fg:x="162" fg:w="1"/><text x="13.2516%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="13.0016%" y="629" width="0.0803%" height="15" fill="rgb(219,111,22)" fg:x="162" fg:w="1"/><text x="13.2516%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="13.0819%" y="821" width="0.0803%" height="15" fill="rgb(253,29,49)" fg:x="163" fg:w="1"/><text x="13.3319%" y="831.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="13.0819%" y="805" width="0.0803%" height="15" fill="rgb(238,129,49)" fg:x="163" fg:w="1"/><text x="13.3319%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.0819%" y="789" width="0.0803%" height="15" fill="rgb(240,26,41)" fg:x="163" fg:w="1"/><text x="13.3319%" y="799.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="13.1621%" y="789" width="0.0803%" height="15" fill="rgb(221,47,33)" fg:x="164" fg:w="1"/><text x="13.4121%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2424%" y="693" width="0.0803%" height="15" fill="rgb(216,200,17)" fg:x="165" fg:w="1"/><text x="13.4924%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2424%" y="677" width="0.0803%" height="15" fill="rgb(230,151,26)" fg:x="165" fg:w="1"/><text x="13.4924%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2424%" y="661" width="0.0803%" height="15" fill="rgb(242,182,16)" fg:x="165" fg:w="1"/><text x="13.4924%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.2424%" y="741" width="0.1605%" height="15" fill="rgb(236,35,53)" fg:x="165" fg:w="2"/><text x="13.4924%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.2424%" y="725" width="0.1605%" height="15" fill="rgb(214,180,28)" fg:x="165" fg:w="2"/><text x="13.4924%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.2424%" y="709" width="0.1605%" height="15" fill="rgb(208,173,36)" fg:x="165" fg:w="2"/><text x="13.4924%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.3226%" y="693" width="0.0803%" height="15" fill="rgb(218,39,15)" fg:x="166" fg:w="1"/><text x="13.5726%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="13.2424%" y="773" width="0.2408%" height="15" fill="rgb(213,145,15)" fg:x="165" fg:w="3"/><text x="13.4924%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="13.2424%" y="757" width="0.2408%" height="15" fill="rgb(242,110,37)" fg:x="165" fg:w="3"/><text x="13.4924%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="13.4029%" y="741" width="0.0803%" height="15" fill="rgb(247,146,22)" fg:x="167" fg:w="1"/><text x="13.6529%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.4029%" y="725" width="0.0803%" height="15" fill="rgb(215,191,7)" fg:x="167" fg:w="1"/><text x="13.6529%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.4029%" y="709" width="0.0803%" height="15" fill="rgb(240,158,1)" fg:x="167" fg:w="1"/><text x="13.6529%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4029%" y="693" width="0.0803%" height="15" fill="rgb(241,78,32)" fg:x="167" fg:w="1"/><text x="13.6529%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.4029%" y="677" width="0.0803%" height="15" fill="rgb(248,83,10)" fg:x="167" fg:w="1"/><text x="13.6529%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="13.4831%" y="741" width="0.0803%" height="15" fill="rgb(241,52,0)" fg:x="168" fg:w="1"/><text x="13.7331%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.4831%" y="725" width="0.0803%" height="15" fill="rgb(238,37,13)" fg:x="168" fg:w="1"/><text x="13.7331%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.4831%" y="709" width="0.0803%" height="15" fill="rgb(242,194,17)" fg:x="168" fg:w="1"/><text x="13.7331%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="693" width="0.0803%" height="15" fill="rgb(236,96,3)" fg:x="168" fg:w="1"/><text x="13.7331%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.4831%" y="677" width="0.0803%" height="15" fill="rgb(235,148,34)" fg:x="168" fg:w="1"/><text x="13.7331%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="661" width="0.0803%" height="15" fill="rgb(254,12,11)" fg:x="168" fg:w="1"/><text x="13.7331%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="645" width="0.0803%" height="15" fill="rgb(207,31,54)" fg:x="168" fg:w="1"/><text x="13.7331%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="629" width="0.0803%" height="15" fill="rgb(252,14,28)" fg:x="168" fg:w="1"/><text x="13.7331%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.4831%" y="613" width="0.0803%" height="15" fill="rgb(252,108,36)" fg:x="168" fg:w="1"/><text x="13.7331%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="597" width="0.0803%" height="15" fill="rgb(214,149,7)" fg:x="168" fg:w="1"/><text x="13.7331%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="581" width="0.0803%" height="15" fill="rgb(243,94,12)" fg:x="168" fg:w="1"/><text x="13.7331%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="565" width="0.0803%" height="15" fill="rgb(208,36,10)" fg:x="168" fg:w="1"/><text x="13.7331%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.4831%" y="549" width="0.0803%" height="15" fill="rgb(233,185,52)" fg:x="168" fg:w="1"/><text x="13.7331%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="533" width="0.0803%" height="15" fill="rgb(234,50,45)" fg:x="168" fg:w="1"/><text x="13.7331%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="517" width="0.0803%" height="15" fill="rgb(228,92,54)" fg:x="168" fg:w="1"/><text x="13.7331%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="501" width="0.0803%" height="15" fill="rgb(224,85,25)" fg:x="168" fg:w="1"/><text x="13.7331%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.4831%" y="485" width="0.0803%" height="15" fill="rgb(246,1,45)" fg:x="168" fg:w="1"/><text x="13.7331%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.4831%" y="469" width="0.0803%" height="15" fill="rgb(240,66,23)" fg:x="168" fg:w="1"/><text x="13.7331%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.4831%" y="453" width="0.0803%" height="15" fill="rgb(222,96,27)" fg:x="168" fg:w="1"/><text x="13.7331%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.4831%" y="437" width="0.0803%" height="15" fill="rgb(212,136,10)" fg:x="168" fg:w="1"/><text x="13.7331%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.4831%" y="421" width="0.0803%" height="15" fill="rgb(226,192,50)" fg:x="168" fg:w="1"/><text x="13.7331%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.4831%" y="405" width="0.0803%" height="15" fill="rgb(241,182,31)" fg:x="168" fg:w="1"/><text x="13.7331%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.4831%" y="389" width="0.0803%" height="15" fill="rgb(219,205,47)" fg:x="168" fg:w="1"/><text x="13.7331%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.4831%" y="373" width="0.0803%" height="15" fill="rgb(207,96,14)" fg:x="168" fg:w="1"/><text x="13.7331%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.4831%" y="357" width="0.0803%" height="15" fill="rgb(216,119,9)" fg:x="168" fg:w="1"/><text x="13.7331%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.4831%" y="341" width="0.0803%" height="15" fill="rgb(235,62,36)" fg:x="168" fg:w="1"/><text x="13.7331%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.4831%" y="325" width="0.0803%" height="15" fill="rgb(214,41,27)" fg:x="168" fg:w="1"/><text x="13.7331%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.4831%" y="309" width="0.0803%" height="15" fill="rgb(214,174,37)" fg:x="168" fg:w="1"/><text x="13.7331%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.4831%" y="293" width="0.0803%" height="15" fill="rgb(212,11,25)" fg:x="168" fg:w="1"/><text x="13.7331%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="13.4831%" y="277" width="0.0803%" height="15" fill="rgb(217,71,35)" fg:x="168" fg:w="1"/><text x="13.7331%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="13.4831%" y="261" width="0.0803%" height="15" fill="rgb(234,152,9)" fg:x="168" fg:w="1"/><text x="13.7331%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="13.4831%" y="245" width="0.0803%" height="15" fill="rgb(228,32,51)" fg:x="168" fg:w="1"/><text x="13.7331%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.4831%" y="229" width="0.0803%" height="15" fill="rgb(209,14,47)" fg:x="168" fg:w="1"/><text x="13.7331%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5634%" y="613" width="0.0803%" height="15" fill="rgb(218,201,17)" fg:x="169" fg:w="1"/><text x="13.8134%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5634%" y="597" width="0.0803%" height="15" fill="rgb(218,98,15)" fg:x="169" fg:w="1"/><text x="13.8134%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.5634%" y="581" width="0.0803%" height="15" fill="rgb(233,202,29)" fg:x="169" fg:w="1"/><text x="13.8134%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.5634%" y="565" width="0.0803%" height="15" fill="rgb(207,196,44)" fg:x="169" fg:w="1"/><text x="13.8134%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.5634%" y="549" width="0.0803%" height="15" fill="rgb(218,63,34)" fg:x="169" fg:w="1"/><text x="13.8134%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.5634%" y="533" width="0.0803%" height="15" fill="rgb(209,10,5)" fg:x="169" fg:w="1"/><text x="13.8134%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.5634%" y="517" width="0.0803%" height="15" fill="rgb(224,36,28)" fg:x="169" fg:w="1"/><text x="13.8134%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5634%" y="693" width="0.1605%" height="15" fill="rgb(249,178,7)" fg:x="169" fg:w="2"/><text x="13.8134%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5634%" y="677" width="0.1605%" height="15" fill="rgb(253,163,10)" fg:x="169" fg:w="2"/><text x="13.8134%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5634%" y="661" width="0.1605%" height="15" fill="rgb(245,67,46)" fg:x="169" fg:w="2"/><text x="13.8134%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5634%" y="645" width="0.1605%" height="15" fill="rgb(225,14,18)" fg:x="169" fg:w="2"/><text x="13.8134%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5634%" y="629" width="0.1605%" height="15" fill="rgb(217,41,54)" fg:x="169" fg:w="2"/><text x="13.8134%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6437%" y="613" width="0.0803%" height="15" fill="rgb(222,111,11)" fg:x="170" fg:w="1"/><text x="13.8937%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.8844%" y="565" width="0.0803%" height="15" fill="rgb(211,85,31)" fg:x="173" fg:w="1"/><text x="14.1344%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.8844%" y="549" width="0.0803%" height="15" fill="rgb(223,29,26)" fg:x="173" fg:w="1"/><text x="14.1344%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="13.4831%" y="773" width="0.5618%" height="15" fill="rgb(236,124,50)" fg:x="168" fg:w="7"/><text x="13.7331%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="13.4831%" y="757" width="0.5618%" height="15" fill="rgb(219,148,15)" fg:x="168" fg:w="7"/><text x="13.7331%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="13.5634%" y="741" width="0.4815%" height="15" fill="rgb(248,159,33)" fg:x="169" fg:w="6"/><text x="13.8134%" y="751.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="13.5634%" y="725" width="0.4815%" height="15" fill="rgb(252,65,8)" fg:x="169" fg:w="6"/><text x="13.8134%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="13.5634%" y="709" width="0.4815%" height="15" fill="rgb(236,45,7)" fg:x="169" fg:w="6"/><text x="13.8134%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="13.7239%" y="693" width="0.3210%" height="15" fill="rgb(244,3,48)" fg:x="171" fg:w="4"/><text x="13.9739%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="13.7239%" y="677" width="0.3210%" height="15" fill="rgb(224,123,53)" fg:x="171" fg:w="4"/><text x="13.9739%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="13.7239%" y="661" width="0.3210%" height="15" fill="rgb(223,173,15)" fg:x="171" fg:w="4"/><text x="13.9739%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="13.7239%" y="645" width="0.3210%" height="15" fill="rgb(254,181,5)" fg:x="171" fg:w="4"/><text x="13.9739%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="13.7239%" y="629" width="0.3210%" height="15" fill="rgb(243,124,33)" fg:x="171" fg:w="4"/><text x="13.9739%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="13.7239%" y="613" width="0.3210%" height="15" fill="rgb(253,220,11)" fg:x="171" fg:w="4"/><text x="13.9739%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="13.7239%" y="597" width="0.3210%" height="15" fill="rgb(217,14,4)" fg:x="171" fg:w="4"/><text x="13.9739%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="13.8042%" y="581" width="0.2408%" height="15" fill="rgb(209,196,12)" fg:x="172" fg:w="3"/><text x="14.0542%" y="591.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="13.9647%" y="565" width="0.0803%" height="15" fill="rgb(237,108,29)" fg:x="174" fg:w="1"/><text x="14.2147%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.0449%" y="741" width="0.0803%" height="15" fill="rgb(216,173,20)" fg:x="175" fg:w="1"/><text x="14.2949%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.0449%" y="725" width="0.0803%" height="15" fill="rgb(245,27,6)" fg:x="175" fg:w="1"/><text x="14.2949%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.0449%" y="709" width="0.0803%" height="15" fill="rgb(210,181,20)" fg:x="175" fg:w="1"/><text x="14.2949%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.0449%" y="693" width="0.0803%" height="15" fill="rgb(235,213,1)" fg:x="175" fg:w="1"/><text x="14.2949%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="14.1252%" y="709" width="0.0803%" height="15" fill="rgb(239,68,43)" fg:x="176" fg:w="1"/><text x="14.3752%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="14.1252%" y="693" width="0.0803%" height="15" fill="rgb(254,137,43)" fg:x="176" fg:w="1"/><text x="14.3752%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.1252%" y="677" width="0.0803%" height="15" fill="rgb(252,170,38)" fg:x="176" fg:w="1"/><text x="14.3752%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.1252%" y="661" width="0.0803%" height="15" fill="rgb(234,21,42)" fg:x="176" fg:w="1"/><text x="14.3752%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.1252%" y="645" width="0.0803%" height="15" fill="rgb(216,145,40)" fg:x="176" fg:w="1"/><text x="14.3752%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.1252%" y="629" width="0.0803%" height="15" fill="rgb(251,73,9)" fg:x="176" fg:w="1"/><text x="14.3752%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="14.0449%" y="757" width="0.2408%" height="15" fill="rgb(242,54,6)" fg:x="175" fg:w="3"/><text x="14.2949%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="14.1252%" y="741" width="0.1605%" height="15" fill="rgb(239,70,7)" fg:x="176" fg:w="2"/><text x="14.3752%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="14.1252%" y="725" width="0.1605%" height="15" fill="rgb(216,159,35)" fg:x="176" fg:w="2"/><text x="14.3752%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="14.2055%" y="709" width="0.0803%" height="15" fill="rgb(224,50,39)" fg:x="177" fg:w="1"/><text x="14.4555%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.2055%" y="693" width="0.0803%" height="15" fill="rgb(235,9,35)" fg:x="177" fg:w="1"/><text x="14.4555%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.2055%" y="677" width="0.0803%" height="15" fill="rgb(239,34,21)" fg:x="177" fg:w="1"/><text x="14.4555%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.2055%" y="661" width="0.0803%" height="15" fill="rgb(218,162,43)" fg:x="177" fg:w="1"/><text x="14.4555%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.2055%" y="645" width="0.0803%" height="15" fill="rgb(219,89,33)" fg:x="177" fg:w="1"/><text x="14.4555%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.2055%" y="629" width="0.0803%" height="15" fill="rgb(226,125,37)" fg:x="177" fg:w="1"/><text x="14.4555%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.2055%" y="613" width="0.0803%" height="15" fill="rgb(233,149,30)" fg:x="177" fg:w="1"/><text x="14.4555%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.2055%" y="597" width="0.0803%" height="15" fill="rgb(236,8,18)" fg:x="177" fg:w="1"/><text x="14.4555%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="14.2857%" y="757" width="0.0803%" height="15" fill="rgb(205,176,9)" fg:x="178" fg:w="1"/><text x="14.5357%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="14.2857%" y="741" width="0.0803%" height="15" fill="rgb(252,103,44)" fg:x="178" fg:w="1"/><text x="14.5357%" y="751.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="14.3660%" y="693" width="0.0803%" height="15" fill="rgb(207,68,53)" fg:x="179" fg:w="1"/><text x="14.6160%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4462%" y="661" width="0.0803%" height="15" fill="rgb(218,193,48)" fg:x="180" fg:w="1"/><text x="14.6962%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4462%" y="645" width="0.0803%" height="15" fill="rgb(234,121,52)" fg:x="180" fg:w="1"/><text x="14.6962%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4462%" y="629" width="0.0803%" height="15" fill="rgb(227,218,49)" fg:x="180" fg:w="1"/><text x="14.6962%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4462%" y="613" width="0.0803%" height="15" fill="rgb(221,8,7)" fg:x="180" fg:w="1"/><text x="14.6962%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4462%" y="597" width="0.0803%" height="15" fill="rgb(217,151,36)" fg:x="180" fg:w="1"/><text x="14.6962%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4462%" y="581" width="0.0803%" height="15" fill="rgb(213,71,5)" fg:x="180" fg:w="1"/><text x="14.6962%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.4462%" y="565" width="0.0803%" height="15" fill="rgb(225,145,43)" fg:x="180" fg:w="1"/><text x="14.6962%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.4462%" y="549" width="0.0803%" height="15" fill="rgb(235,118,19)" fg:x="180" fg:w="1"/><text x="14.6962%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.4462%" y="533" width="0.0803%" height="15" fill="rgb(214,102,36)" fg:x="180" fg:w="1"/><text x="14.6962%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4462%" y="517" width="0.0803%" height="15" fill="rgb(220,56,43)" fg:x="180" fg:w="1"/><text x="14.6962%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4462%" y="501" width="0.0803%" height="15" fill="rgb(246,136,46)" fg:x="180" fg:w="1"/><text x="14.6962%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.4462%" y="485" width="0.0803%" height="15" fill="rgb(249,99,12)" fg:x="180" fg:w="1"/><text x="14.6962%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.4462%" y="469" width="0.0803%" height="15" fill="rgb(224,31,42)" fg:x="180" fg:w="1"/><text x="14.6962%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.4462%" y="453" width="0.0803%" height="15" fill="rgb(208,96,21)" fg:x="180" fg:w="1"/><text x="14.6962%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.4462%" y="437" width="0.0803%" height="15" fill="rgb(237,229,7)" fg:x="180" fg:w="1"/><text x="14.6962%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4462%" y="421" width="0.0803%" height="15" fill="rgb(210,12,6)" fg:x="180" fg:w="1"/><text x="14.6962%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="14.3660%" y="709" width="0.2408%" height="15" fill="rgb(240,9,34)" fg:x="179" fg:w="3"/><text x="14.6160%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.4462%" y="693" width="0.1605%" height="15" fill="rgb(211,68,37)" fg:x="180" fg:w="2"/><text x="14.6962%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.4462%" y="677" width="0.1605%" height="15" fill="rgb(249,138,50)" fg:x="180" fg:w="2"/><text x="14.6962%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.5265%" y="661" width="0.0803%" height="15" fill="rgb(243,185,40)" fg:x="181" fg:w="1"/><text x="14.7765%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.5265%" y="645" width="0.0803%" height="15" fill="rgb(242,92,35)" fg:x="181" fg:w="1"/><text x="14.7765%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5265%" y="629" width="0.0803%" height="15" fill="rgb(244,98,5)" fg:x="181" fg:w="1"/><text x="14.7765%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="14.6067%" y="693" width="0.0803%" height="15" fill="rgb(228,186,29)" fg:x="182" fg:w="1"/><text x="14.8567%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.6067%" y="677" width="0.0803%" height="15" fill="rgb(253,7,44)" fg:x="182" fg:w="1"/><text x="14.8567%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6870%" y="661" width="0.0803%" height="15" fill="rgb(216,11,45)" fg:x="183" fg:w="1"/><text x="14.9370%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6870%" y="645" width="0.0803%" height="15" fill="rgb(205,67,3)" fg:x="183" fg:w="1"/><text x="14.9370%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6870%" y="629" width="0.0803%" height="15" fill="rgb(250,18,3)" fg:x="183" fg:w="1"/><text x="14.9370%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6870%" y="613" width="0.0803%" height="15" fill="rgb(241,222,43)" fg:x="183" fg:w="1"/><text x="14.9370%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6870%" y="597" width="0.0803%" height="15" fill="rgb(233,115,3)" fg:x="183" fg:w="1"/><text x="14.9370%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6870%" y="581" width="0.0803%" height="15" fill="rgb(215,165,25)" fg:x="183" fg:w="1"/><text x="14.9370%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.6870%" y="565" width="0.0803%" height="15" fill="rgb(234,179,6)" fg:x="183" fg:w="1"/><text x="14.9370%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.6870%" y="549" width="0.0803%" height="15" fill="rgb(215,82,23)" fg:x="183" fg:w="1"/><text x="14.9370%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.6870%" y="533" width="0.0803%" height="15" fill="rgb(211,47,18)" fg:x="183" fg:w="1"/><text x="14.9370%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6870%" y="517" width="0.0803%" height="15" fill="rgb(248,17,9)" fg:x="183" fg:w="1"/><text x="14.9370%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6870%" y="501" width="0.0803%" height="15" fill="rgb(210,212,12)" fg:x="183" fg:w="1"/><text x="14.9370%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.6870%" y="485" width="0.0803%" height="15" fill="rgb(230,135,45)" fg:x="183" fg:w="1"/><text x="14.9370%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.6870%" y="469" width="0.0803%" height="15" fill="rgb(214,121,41)" fg:x="183" fg:w="1"/><text x="14.9370%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.6870%" y="453" width="0.0803%" height="15" fill="rgb(239,165,45)" fg:x="183" fg:w="1"/><text x="14.9370%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.6870%" y="437" width="0.0803%" height="15" fill="rgb(214,85,51)" fg:x="183" fg:w="1"/><text x="14.9370%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6870%" y="421" width="0.0803%" height="15" fill="rgb(223,90,27)" fg:x="183" fg:w="1"/><text x="14.9370%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.7673%" y="661" width="0.1605%" height="15" fill="rgb(244,84,11)" fg:x="184" fg:w="2"/><text x="15.0173%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="14.7673%" y="645" width="0.1605%" height="15" fill="rgb(253,41,47)" fg:x="184" fg:w="2"/><text x="15.0173%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.7673%" y="629" width="0.1605%" height="15" fill="rgb(232,39,5)" fg:x="184" fg:w="2"/><text x="15.0173%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.7673%" y="613" width="0.1605%" height="15" fill="rgb(211,93,4)" fg:x="184" fg:w="2"/><text x="15.0173%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.7673%" y="597" width="0.1605%" height="15" fill="rgb(219,50,49)" fg:x="184" fg:w="2"/><text x="15.0173%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.8475%" y="581" width="0.0803%" height="15" fill="rgb(232,80,19)" fg:x="185" fg:w="1"/><text x="15.0975%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="14.3660%" y="741" width="0.6421%" height="15" fill="rgb(215,227,39)" fg:x="179" fg:w="8"/><text x="14.6160%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="14.3660%" y="725" width="0.6421%" height="15" fill="rgb(211,99,12)" fg:x="179" fg:w="8"/><text x="14.6160%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="14.6067%" y="709" width="0.4013%" height="15" fill="rgb(214,158,5)" fg:x="182" fg:w="5"/><text x="14.8567%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="14.6870%" y="693" width="0.3210%" height="15" fill="rgb(242,19,53)" fg:x="183" fg:w="4"/><text x="14.9370%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.6870%" y="677" width="0.3210%" height="15" fill="rgb(208,18,20)" fg:x="183" fg:w="4"/><text x="14.9370%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9278%" y="661" width="0.0803%" height="15" fill="rgb(250,44,11)" fg:x="186" fg:w="1"/><text x="15.1778%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9278%" y="645" width="0.0803%" height="15" fill="rgb(238,159,13)" fg:x="186" fg:w="1"/><text x="15.1778%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9278%" y="629" width="0.0803%" height="15" fill="rgb(231,74,18)" fg:x="186" fg:w="1"/><text x="15.1778%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9278%" y="613" width="0.0803%" height="15" fill="rgb(229,219,45)" fg:x="186" fg:w="1"/><text x="15.1778%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9278%" y="597" width="0.0803%" height="15" fill="rgb(210,221,1)" fg:x="186" fg:w="1"/><text x="15.1778%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.9278%" y="581" width="0.0803%" height="15" fill="rgb(209,60,51)" fg:x="186" fg:w="1"/><text x="15.1778%" y="591.50"></text></g><g><title>plugins_core::build::Build::leads_to (13 samples, 1.04%)</title><rect x="14.0449%" y="773" width="1.0433%" height="15" fill="rgb(252,97,34)" fg:x="175" fg:w="13"/><text x="14.2949%" y="783.50"></text></g><g><title>plugins_core::tools::leads_to (9 samples, 0.72%)</title><rect x="14.3660%" y="757" width="0.7223%" height="15" fill="rgb(243,211,37)" fg:x="179" fg:w="9"/><text x="14.6160%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.0080%" y="741" width="0.0803%" height="15" fill="rgb(210,229,37)" fg:x="187" fg:w="1"/><text x="15.2580%" y="751.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0080%" y="725" width="0.0803%" height="15" fill="rgb(220,208,43)" fg:x="187" fg:w="1"/><text x="15.2580%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.0080%" y="709" width="0.0803%" height="15" fill="rgb(218,118,50)" fg:x="187" fg:w="1"/><text x="15.2580%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0080%" y="693" width="0.0803%" height="15" fill="rgb(254,169,52)" fg:x="187" fg:w="1"/><text x="15.2580%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.0883%" y="741" width="0.0803%" height="15" fill="rgb(221,214,37)" fg:x="188" fg:w="1"/><text x="15.3383%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.0883%" y="725" width="0.0803%" height="15" fill="rgb(254,186,32)" fg:x="188" fg:w="1"/><text x="15.3383%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0883%" y="709" width="0.0803%" height="15" fill="rgb(215,144,43)" fg:x="188" fg:w="1"/><text x="15.3383%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1685%" y="677" width="0.0803%" height="15" fill="rgb(252,21,46)" fg:x="189" fg:w="1"/><text x="15.4185%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (27 samples, 2.17%)</title><rect x="13.1621%" y="821" width="2.1669%" height="15" fill="rgb(207,166,46)" fg:x="164" fg:w="27"/><text x="13.4121%" y="831.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.17%)</title><rect x="13.1621%" y="805" width="2.1669%" height="15" fill="rgb(253,37,49)" fg:x="164" fg:w="27"/><text x="13.4121%" y="815.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (26 samples, 2.09%)</title><rect x="13.2424%" y="789" width="2.0867%" height="15" fill="rgb(222,97,20)" fg:x="165" fg:w="26"/><text x="13.4924%" y="799.50">p..</text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="15.0883%" y="773" width="0.2408%" height="15" fill="rgb(244,181,26)" fg:x="188" fg:w="3"/><text x="15.3383%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="15.0883%" y="757" width="0.2408%" height="15" fill="rgb(241,22,29)" fg:x="188" fg:w="3"/><text x="15.3383%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="15.1685%" y="741" width="0.1605%" height="15" fill="rgb(206,200,43)" fg:x="189" fg:w="2"/><text x="15.4185%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.1685%" y="725" width="0.1605%" height="15" fill="rgb(226,224,43)" fg:x="189" fg:w="2"/><text x="15.4185%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="15.1685%" y="709" width="0.1605%" height="15" fill="rgb(253,129,28)" fg:x="189" fg:w="2"/><text x="15.4185%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.1685%" y="693" width="0.1605%" height="15" fill="rgb(252,99,33)" fg:x="189" fg:w="2"/><text x="15.4185%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2488%" y="677" width="0.0803%" height="15" fill="rgb(208,123,45)" fg:x="190" fg:w="1"/><text x="15.4988%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.2488%" y="661" width="0.0803%" height="15" fill="rgb(251,106,12)" fg:x="190" fg:w="1"/><text x="15.4988%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.2488%" y="645" width="0.0803%" height="15" fill="rgb(240,209,35)" fg:x="190" fg:w="1"/><text x="15.4988%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2488%" y="629" width="0.0803%" height="15" fill="rgb(214,52,50)" fg:x="190" fg:w="1"/><text x="15.4988%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.2488%" y="613" width="0.0803%" height="15" fill="rgb(234,119,4)" fg:x="190" fg:w="1"/><text x="15.4988%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.2488%" y="597" width="0.0803%" height="15" fill="rgb(228,181,36)" fg:x="190" fg:w="1"/><text x="15.4988%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.2488%" y="581" width="0.0803%" height="15" fill="rgb(213,171,42)" fg:x="190" fg:w="1"/><text x="15.4988%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2488%" y="565" width="0.0803%" height="15" fill="rgb(239,14,41)" fg:x="190" fg:w="1"/><text x="15.4988%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="15.3291%" y="805" width="0.0803%" height="15" fill="rgb(239,111,46)" fg:x="191" fg:w="1"/><text x="15.5791%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3291%" y="789" width="0.0803%" height="15" fill="rgb(214,72,7)" fg:x="191" fg:w="1"/><text x="15.5791%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3291%" y="773" width="0.0803%" height="15" fill="rgb(221,114,1)" fg:x="191" fg:w="1"/><text x="15.5791%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.3291%" y="757" width="0.0803%" height="15" fill="rgb(213,143,14)" fg:x="191" fg:w="1"/><text x="15.5791%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.3291%" y="741" width="0.0803%" height="15" fill="rgb(220,221,53)" fg:x="191" fg:w="1"/><text x="15.5791%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.3291%" y="725" width="0.0803%" height="15" fill="rgb(236,189,27)" fg:x="191" fg:w="1"/><text x="15.5791%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3291%" y="709" width="0.0803%" height="15" fill="rgb(252,139,49)" fg:x="191" fg:w="1"/><text x="15.5791%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3291%" y="693" width="0.0803%" height="15" fill="rgb(231,158,33)" fg:x="191" fg:w="1"/><text x="15.5791%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.3291%" y="677" width="0.0803%" height="15" fill="rgb(207,201,15)" fg:x="191" fg:w="1"/><text x="15.5791%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.3291%" y="661" width="0.0803%" height="15" fill="rgb(218,43,48)" fg:x="191" fg:w="1"/><text x="15.5791%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.3291%" y="645" width="0.0803%" height="15" fill="rgb(244,63,52)" fg:x="191" fg:w="1"/><text x="15.5791%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.3291%" y="629" width="0.0803%" height="15" fill="rgb(236,60,17)" fg:x="191" fg:w="1"/><text x="15.5791%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3291%" y="613" width="0.0803%" height="15" fill="rgb(205,206,29)" fg:x="191" fg:w="1"/><text x="15.5791%" y="623.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="15.4896%" y="789" width="0.0803%" height="15" fill="rgb(205,209,35)" fg:x="193" fg:w="1"/><text x="15.7396%" y="799.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="15.4896%" y="773" width="0.0803%" height="15" fill="rgb(227,112,14)" fg:x="193" fg:w="1"/><text x="15.7396%" y="783.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="15.4896%" y="757" width="0.0803%" height="15" fill="rgb(248,151,9)" fg:x="193" fg:w="1"/><text x="15.7396%" y="767.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="15.4896%" y="741" width="0.0803%" height="15" fill="rgb(247,45,40)" fg:x="193" fg:w="1"/><text x="15.7396%" y="751.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="15.4896%" y="725" width="0.0803%" height="15" fill="rgb(232,185,16)" fg:x="193" fg:w="1"/><text x="15.7396%" y="735.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="15.4896%" y="709" width="0.0803%" height="15" fill="rgb(215,45,44)" fg:x="193" fg:w="1"/><text x="15.7396%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="15.4896%" y="693" width="0.0803%" height="15" fill="rgb(206,69,32)" fg:x="193" fg:w="1"/><text x="15.7396%" y="703.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="15.4896%" y="677" width="0.0803%" height="15" fill="rgb(233,98,50)" fg:x="193" fg:w="1"/><text x="15.7396%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="15.5698%" y="757" width="0.0803%" height="15" fill="rgb(232,217,52)" fg:x="194" fg:w="1"/><text x="15.8198%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="15.5698%" y="741" width="0.0803%" height="15" fill="rgb(250,42,51)" fg:x="194" fg:w="1"/><text x="15.8198%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5698%" y="725" width="0.0803%" height="15" fill="rgb(241,200,26)" fg:x="194" fg:w="1"/><text x="15.8198%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="15.6501%" y="741" width="0.0803%" height="15" fill="rgb(207,10,32)" fg:x="195" fg:w="1"/><text x="15.9001%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.6501%" y="725" width="0.0803%" height="15" fill="rgb(214,63,15)" fg:x="195" fg:w="1"/><text x="15.9001%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.6501%" y="709" width="0.0803%" height="15" fill="rgb(234,176,14)" fg:x="195" fg:w="1"/><text x="15.9001%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.7303%" y="693" width="0.0803%" height="15" fill="rgb(226,104,52)" fg:x="196" fg:w="1"/><text x="15.9803%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.8106%" y="693" width="0.0803%" height="15" fill="rgb(211,222,1)" fg:x="197" fg:w="1"/><text x="16.0606%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="15.8909%" y="693" width="0.4013%" height="15" fill="rgb(237,7,3)" fg:x="198" fg:w="5"/><text x="16.1409%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.0514%" y="677" width="0.2408%" height="15" fill="rgb(218,143,7)" fg:x="200" fg:w="3"/><text x="16.3014%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="16.0514%" y="661" width="0.2408%" height="15" fill="rgb(208,25,22)" fg:x="200" fg:w="3"/><text x="16.3014%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.1316%" y="645" width="0.1605%" height="15" fill="rgb(228,127,16)" fg:x="201" fg:w="2"/><text x="16.3816%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.2119%" y="629" width="0.0803%" height="15" fill="rgb(237,86,27)" fg:x="202" fg:w="1"/><text x="16.4619%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.2119%" y="613" width="0.0803%" height="15" fill="rgb(207,125,19)" fg:x="202" fg:w="1"/><text x="16.4619%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.2119%" y="597" width="0.0803%" height="15" fill="rgb(243,195,0)" fg:x="202" fg:w="1"/><text x="16.4619%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.3724%" y="645" width="0.0803%" height="15" fill="rgb(230,95,18)" fg:x="204" fg:w="1"/><text x="16.6224%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.3724%" y="629" width="0.0803%" height="15" fill="rgb(232,157,21)" fg:x="204" fg:w="1"/><text x="16.6224%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="16.3724%" y="677" width="0.2408%" height="15" fill="rgb(212,120,50)" fg:x="204" fg:w="3"/><text x="16.6224%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.3724%" y="661" width="0.2408%" height="15" fill="rgb(222,204,44)" fg:x="204" fg:w="3"/><text x="16.6224%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="16.4526%" y="645" width="0.1605%" height="15" fill="rgb(236,6,33)" fg:x="205" fg:w="2"/><text x="16.7026%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.4526%" y="629" width="0.1605%" height="15" fill="rgb(247,11,38)" fg:x="205" fg:w="2"/><text x="16.7026%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.5329%" y="613" width="0.0803%" height="15" fill="rgb(215,111,0)" fg:x="206" fg:w="1"/><text x="16.7829%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.5329%" y="597" width="0.0803%" height="15" fill="rgb(211,65,46)" fg:x="206" fg:w="1"/><text x="16.7829%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5329%" y="581" width="0.0803%" height="15" fill="rgb(216,5,12)" fg:x="206" fg:w="1"/><text x="16.7829%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.6132%" y="677" width="0.0803%" height="15" fill="rgb(226,7,2)" fg:x="207" fg:w="1"/><text x="16.8632%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.6934%" y="661" width="0.1605%" height="15" fill="rgb(242,116,12)" fg:x="208" fg:w="2"/><text x="16.9434%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.6934%" y="645" width="0.1605%" height="15" fill="rgb(249,209,7)" fg:x="208" fg:w="2"/><text x="16.9434%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.7737%" y="629" width="0.0803%" height="15" fill="rgb(232,73,17)" fg:x="209" fg:w="1"/><text x="17.0237%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.0144%" y="597" width="0.0803%" height="15" fill="rgb(214,13,32)" fg:x="212" fg:w="1"/><text x="17.2644%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="16.8539%" y="645" width="0.3210%" height="15" fill="rgb(221,125,10)" fg:x="210" fg:w="4"/><text x="17.1039%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.9342%" y="629" width="0.2408%" height="15" fill="rgb(246,7,44)" fg:x="211" fg:w="3"/><text x="17.1842%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="16.9342%" y="613" width="0.2408%" height="15" fill="rgb(239,18,35)" fg:x="211" fg:w="3"/><text x="17.1842%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.0947%" y="597" width="0.0803%" height="15" fill="rgb(250,222,16)" fg:x="213" fg:w="1"/><text x="17.3447%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="17.1750%" y="629" width="0.2408%" height="15" fill="rgb(219,100,8)" fg:x="214" fg:w="3"/><text x="17.4250%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.1750%" y="613" width="0.2408%" height="15" fill="rgb(240,62,13)" fg:x="214" fg:w="3"/><text x="17.4250%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="17.1750%" y="597" width="0.2408%" height="15" fill="rgb(253,194,2)" fg:x="214" fg:w="3"/><text x="17.4250%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.2552%" y="581" width="0.1605%" height="15" fill="rgb(235,58,31)" fg:x="215" fg:w="2"/><text x="17.5052%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="17.4960%" y="613" width="0.0803%" height="15" fill="rgb(231,37,11)" fg:x="218" fg:w="1"/><text x="17.7460%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.4960%" y="597" width="0.0803%" height="15" fill="rgb(235,133,0)" fg:x="218" fg:w="1"/><text x="17.7460%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="17.5762%" y="613" width="0.4013%" height="15" fill="rgb(212,185,40)" fg:x="219" fg:w="5"/><text x="17.8262%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.7368%" y="597" width="0.2408%" height="15" fill="rgb(216,68,42)" fg:x="221" fg:w="3"/><text x="17.9868%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.8973%" y="581" width="0.0803%" height="15" fill="rgb(239,81,4)" fg:x="223" fg:w="1"/><text x="18.1473%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.8973%" y="565" width="0.0803%" height="15" fill="rgb(206,86,6)" fg:x="223" fg:w="1"/><text x="18.1473%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="17.1750%" y="645" width="0.8828%" height="15" fill="rgb(249,95,27)" fg:x="214" fg:w="11"/><text x="17.4250%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="17.4157%" y="629" width="0.6421%" height="15" fill="rgb(205,155,45)" fg:x="217" fg:w="8"/><text x="17.6657%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.9775%" y="613" width="0.0803%" height="15" fill="rgb(213,55,42)" fg:x="224" fg:w="1"/><text x="18.2275%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.9775%" y="597" width="0.0803%" height="15" fill="rgb(249,197,4)" fg:x="224" fg:w="1"/><text x="18.2275%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.9775%" y="581" width="0.0803%" height="15" fill="rgb(212,128,32)" fg:x="224" fg:w="1"/><text x="18.2275%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="16.8539%" y="661" width="1.2841%" height="15" fill="rgb(252,47,30)" fg:x="210" fg:w="16"/><text x="17.1039%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.0578%" y="645" width="0.0803%" height="15" fill="rgb(209,79,18)" fg:x="225" fg:w="1"/><text x="18.3078%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.61%)</title><rect x="16.6934%" y="677" width="1.6051%" height="15" fill="rgb(225,81,38)" fg:x="208" fg:w="20"/><text x="16.9434%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.1380%" y="661" width="0.1605%" height="15" fill="rgb(205,95,16)" fg:x="226" fg:w="2"/><text x="18.3880%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.1380%" y="645" width="0.1605%" height="15" fill="rgb(214,30,4)" fg:x="226" fg:w="2"/><text x="18.3880%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.1380%" y="629" width="0.1605%" height="15" fill="rgb(232,137,22)" fg:x="226" fg:w="2"/><text x="18.3880%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.17%)</title><rect x="16.2921%" y="693" width="2.1669%" height="15" fill="rgb(232,156,19)" fg:x="203" fg:w="27"/><text x="16.5421%" y="703.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.2986%" y="677" width="0.1605%" height="15" fill="rgb(248,157,26)" fg:x="228" fg:w="2"/><text x="18.5486%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.2986%" y="661" width="0.1605%" height="15" fill="rgb(242,24,3)" fg:x="228" fg:w="2"/><text x="18.5486%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.2986%" y="645" width="0.1605%" height="15" fill="rgb(218,195,48)" fg:x="228" fg:w="2"/><text x="18.5486%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (43 samples, 3.45%)</title><rect x="15.7303%" y="725" width="3.4510%" height="15" fill="rgb(214,193,36)" fg:x="196" fg:w="43"/><text x="15.9803%" y="735.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (43 samples, 3.45%)</title><rect x="15.7303%" y="709" width="3.4510%" height="15" fill="rgb(242,110,40)" fg:x="196" fg:w="43"/><text x="15.9803%" y="719.50">ser..</text></g><g><title>std::io::Write::write_all (9 samples, 0.72%)</title><rect x="18.4591%" y="693" width="0.7223%" height="15" fill="rgb(233,150,26)" fg:x="230" fg:w="9"/><text x="18.7091%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.64%)</title><rect x="18.5393%" y="677" width="0.6421%" height="15" fill="rgb(239,200,30)" fg:x="231" fg:w="8"/><text x="18.7893%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.56%)</title><rect x="18.6196%" y="661" width="0.5618%" height="15" fill="rgb(226,28,11)" fg:x="232" fg:w="7"/><text x="18.8696%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="18.7801%" y="645" width="0.4013%" height="15" fill="rgb(220,26,48)" fg:x="234" fg:w="5"/><text x="19.0301%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="18.7801%" y="629" width="0.4013%" height="15" fill="rgb(232,10,11)" fg:x="234" fg:w="5"/><text x="19.0301%" y="639.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="18.8604%" y="613" width="0.3210%" height="15" fill="rgb(252,143,50)" fg:x="235" fg:w="4"/><text x="19.1104%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.2616%" y="693" width="0.0803%" height="15" fill="rgb(206,58,22)" fg:x="240" fg:w="1"/><text x="19.5116%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.2616%" y="677" width="0.0803%" height="15" fill="rgb(250,9,45)" fg:x="240" fg:w="1"/><text x="19.5116%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.3419%" y="677" width="0.1605%" height="15" fill="rgb(225,148,14)" fg:x="241" fg:w="2"/><text x="19.5919%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.4222%" y="661" width="0.0803%" height="15" fill="rgb(205,178,40)" fg:x="242" fg:w="1"/><text x="19.6722%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5024%" y="661" width="0.0803%" height="15" fill="rgb(215,201,4)" fg:x="243" fg:w="1"/><text x="19.7524%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.5827%" y="661" width="0.1605%" height="15" fill="rgb(219,223,24)" fg:x="244" fg:w="2"/><text x="19.8327%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7432%" y="645" width="0.0803%" height="15" fill="rgb(217,19,31)" fg:x="246" fg:w="1"/><text x="19.9932%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.8234%" y="645" width="0.0803%" height="15" fill="rgb(235,33,3)" fg:x="247" fg:w="1"/><text x="20.0734%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="19.9037%" y="645" width="0.0803%" height="15" fill="rgb(221,39,18)" fg:x="248" fg:w="1"/><text x="20.1537%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9037%" y="629" width="0.0803%" height="15" fill="rgb(242,162,33)" fg:x="248" fg:w="1"/><text x="20.1537%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9037%" y="613" width="0.0803%" height="15" fill="rgb(233,215,28)" fg:x="248" fg:w="1"/><text x="20.1537%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.0642%" y="629" width="0.0803%" height="15" fill="rgb(212,117,9)" fg:x="250" fg:w="1"/><text x="20.3142%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="19.1814%" y="725" width="1.0433%" height="15" fill="rgb(237,70,47)" fg:x="239" fg:w="13"/><text x="19.4314%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="19.2616%" y="709" width="0.9631%" height="15" fill="rgb(206,177,13)" fg:x="240" fg:w="12"/><text x="19.5116%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="19.3419%" y="693" width="0.8828%" height="15" fill="rgb(209,174,33)" fg:x="241" fg:w="11"/><text x="19.5919%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="19.5024%" y="677" width="0.7223%" height="15" fill="rgb(226,6,11)" fg:x="243" fg:w="9"/><text x="19.7524%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="19.7432%" y="661" width="0.4815%" height="15" fill="rgb(240,214,6)" fg:x="246" fg:w="6"/><text x="19.9932%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="19.9839%" y="645" width="0.2408%" height="15" fill="rgb(254,214,40)" fg:x="249" fg:w="3"/><text x="20.2339%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.1445%" y="629" width="0.0803%" height="15" fill="rgb(230,187,15)" fg:x="251" fg:w="1"/><text x="20.3945%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.1445%" y="613" width="0.0803%" height="15" fill="rgb(250,11,27)" fg:x="251" fg:w="1"/><text x="20.3945%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.1445%" y="597" width="0.0803%" height="15" fill="rgb(243,107,19)" fg:x="251" fg:w="1"/><text x="20.3945%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.1445%" y="581" width="0.0803%" height="15" fill="rgb(253,66,26)" fg:x="251" fg:w="1"/><text x="20.3945%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2247%" y="693" width="0.0803%" height="15" fill="rgb(228,43,8)" fg:x="252" fg:w="1"/><text x="20.4747%" y="703.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="20.2247%" y="709" width="0.1605%" height="15" fill="rgb(232,197,36)" fg:x="252" fg:w="2"/><text x="20.4747%" y="719.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="20.3050%" y="693" width="0.0803%" height="15" fill="rgb(221,182,31)" fg:x="253" fg:w="1"/><text x="20.5550%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="20.3050%" y="677" width="0.0803%" height="15" fill="rgb(244,25,36)" fg:x="253" fg:w="1"/><text x="20.5550%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.3050%" y="661" width="0.0803%" height="15" fill="rgb(247,101,19)" fg:x="253" fg:w="1"/><text x="20.5550%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.3050%" y="645" width="0.0803%" height="15" fill="rgb(223,117,19)" fg:x="253" fg:w="1"/><text x="20.5550%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="20.6260%" y="677" width="0.0803%" height="15" fill="rgb(249,63,38)" fg:x="257" fg:w="1"/><text x="20.8760%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.6260%" y="661" width="0.0803%" height="15" fill="rgb(220,143,23)" fg:x="257" fg:w="1"/><text x="20.8760%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.6260%" y="645" width="0.0803%" height="15" fill="rgb(252,183,22)" fg:x="257" fg:w="1"/><text x="20.8760%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="20.7063%" y="677" width="0.0803%" height="15" fill="rgb(243,176,15)" fg:x="258" fg:w="1"/><text x="20.9563%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.8668%" y="645" width="0.0803%" height="15" fill="rgb(244,204,46)" fg:x="260" fg:w="1"/><text x="21.1168%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="20.7865%" y="677" width="0.3210%" height="15" fill="rgb(227,28,54)" fg:x="259" fg:w="4"/><text x="21.0365%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="20.8668%" y="661" width="0.2408%" height="15" fill="rgb(231,10,15)" fg:x="260" fg:w="3"/><text x="21.1168%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.9470%" y="645" width="0.1605%" height="15" fill="rgb(210,200,17)" fg:x="261" fg:w="2"/><text x="21.1970%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="21.1075%" y="661" width="0.0803%" height="15" fill="rgb(251,106,46)" fg:x="263" fg:w="1"/><text x="21.3575%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="21.2681%" y="645" width="0.1605%" height="15" fill="rgb(218,211,15)" fg:x="265" fg:w="2"/><text x="21.5181%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="21.4286%" y="645" width="0.0803%" height="15" fill="rgb(239,62,10)" fg:x="267" fg:w="1"/><text x="21.6786%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.5088%" y="629" width="0.2408%" height="15" fill="rgb(225,53,53)" fg:x="268" fg:w="3"/><text x="21.7588%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.5891%" y="613" width="0.1605%" height="15" fill="rgb(207,16,24)" fg:x="269" fg:w="2"/><text x="21.8391%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.5891%" y="597" width="0.1605%" height="15" fill="rgb(217,52,28)" fg:x="269" fg:w="2"/><text x="21.8391%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="21.7496%" y="613" width="0.0803%" height="15" fill="rgb(246,1,5)" fg:x="271" fg:w="1"/><text x="21.9996%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="21.7496%" y="597" width="0.0803%" height="15" fill="rgb(221,29,26)" fg:x="271" fg:w="1"/><text x="21.9996%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="21.7496%" y="581" width="0.0803%" height="15" fill="rgb(250,133,32)" fg:x="271" fg:w="1"/><text x="21.9996%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.8299%" y="597" width="0.0803%" height="15" fill="rgb(236,63,16)" fg:x="272" fg:w="1"/><text x="22.0799%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="21.7496%" y="629" width="0.2408%" height="15" fill="rgb(231,159,14)" fg:x="271" fg:w="3"/><text x="21.9996%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="21.8299%" y="613" width="0.1605%" height="15" fill="rgb(207,102,36)" fg:x="272" fg:w="2"/><text x="22.0799%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.9101%" y="597" width="0.0803%" height="15" fill="rgb(230,224,31)" fg:x="273" fg:w="1"/><text x="22.1601%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9101%" y="581" width="0.0803%" height="15" fill="rgb(215,182,16)" fg:x="273" fg:w="1"/><text x="22.1601%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9101%" y="565" width="0.0803%" height="15" fill="rgb(226,113,2)" fg:x="273" fg:w="1"/><text x="22.1601%" y="575.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="21.9101%" y="549" width="0.0803%" height="15" fill="rgb(241,18,35)" fg:x="273" fg:w="1"/><text x="22.1601%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.9101%" y="533" width="0.0803%" height="15" fill="rgb(240,165,44)" fg:x="273" fg:w="1"/><text x="22.1601%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="22.3917%" y="597" width="0.3210%" height="15" fill="rgb(229,130,47)" fg:x="279" fg:w="4"/><text x="22.6417%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="22.4719%" y="581" width="0.2408%" height="15" fill="rgb(223,93,7)" fg:x="280" fg:w="3"/><text x="22.7219%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.5522%" y="565" width="0.1605%" height="15" fill="rgb(205,180,36)" fg:x="281" fg:w="2"/><text x="22.8022%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7929%" y="533" width="0.0803%" height="15" fill="rgb(221,103,28)" fg:x="284" fg:w="1"/><text x="23.0429%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7929%" y="517" width="0.0803%" height="15" fill="rgb(212,4,3)" fg:x="284" fg:w="1"/><text x="23.0429%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.8732%" y="517" width="0.0803%" height="15" fill="rgb(209,221,53)" fg:x="285" fg:w="1"/><text x="23.1232%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="22.7929%" y="581" width="0.2408%" height="15" fill="rgb(233,229,52)" fg:x="284" fg:w="3"/><text x="23.0429%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="22.7929%" y="565" width="0.2408%" height="15" fill="rgb(254,127,37)" fg:x="284" fg:w="3"/><text x="23.0429%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="22.7929%" y="549" width="0.2408%" height="15" fill="rgb(207,161,26)" fg:x="284" fg:w="3"/><text x="23.0429%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="22.8732%" y="533" width="0.1605%" height="15" fill="rgb(223,75,5)" fg:x="285" fg:w="2"/><text x="23.1232%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.9535%" y="517" width="0.0803%" height="15" fill="rgb(235,115,52)" fg:x="286" fg:w="1"/><text x="23.2035%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9535%" y="501" width="0.0803%" height="15" fill="rgb(240,91,46)" fg:x="286" fg:w="1"/><text x="23.2035%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9535%" y="485" width="0.0803%" height="15" fill="rgb(251,144,21)" fg:x="286" fg:w="1"/><text x="23.2035%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9535%" y="469" width="0.0803%" height="15" fill="rgb(247,220,47)" fg:x="286" fg:w="1"/><text x="23.2035%" y="479.50"></text></g><g><title>engine::session::Session::flush (97 samples, 7.78%)</title><rect x="15.3291%" y="821" width="7.7849%" height="15" fill="rgb(253,122,1)" fg:x="191" fg:w="97"/><text x="15.5791%" y="831.50">engine::ses..</text></g><g><title>engine::session::Session::save_changes (96 samples, 7.70%)</title><rect x="15.4093%" y="805" width="7.7047%" height="15" fill="rgb(221,0,24)" fg:x="192" fg:w="96"/><text x="15.6593%" y="815.50">engine::ses..</text></g><g><title>engine::session::state::State::close (94 samples, 7.54%)</title><rect x="15.5698%" y="789" width="7.5441%" height="15" fill="rgb(220,204,54)" fg:x="194" fg:w="94"/><text x="15.8198%" y="799.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (94 samples, 7.54%)</title><rect x="15.5698%" y="773" width="7.5441%" height="15" fill="rgb(205,96,25)" fg:x="194" fg:w="94"/><text x="15.8198%" y="783.50">engine::se..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (93 samples, 7.46%)</title><rect x="15.6501%" y="757" width="7.4639%" height="15" fill="rgb(247,77,20)" fg:x="195" fg:w="93"/><text x="15.9001%" y="767.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (92 samples, 7.38%)</title><rect x="15.7303%" y="741" width="7.3836%" height="15" fill="rgb(245,151,8)" fg:x="196" fg:w="92"/><text x="15.9803%" y="751.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.89%)</title><rect x="20.2247%" y="725" width="2.8892%" height="15" fill="rgb(242,158,39)" fg:x="252" fg:w="36"/><text x="20.4747%" y="735.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (34 samples, 2.73%)</title><rect x="20.3852%" y="709" width="2.7287%" height="15" fill="rgb(222,214,50)" fg:x="254" fg:w="34"/><text x="20.6352%" y="719.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.65%)</title><rect x="20.4655%" y="693" width="2.6485%" height="15" fill="rgb(229,60,39)" fg:x="255" fg:w="33"/><text x="20.7155%" y="703.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (25 samples, 2.01%)</title><rect x="21.1075%" y="677" width="2.0064%" height="15" fill="rgb(240,148,18)" fg:x="263" fg:w="25"/><text x="21.3575%" y="687.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (24 samples, 1.93%)</title><rect x="21.1878%" y="661" width="1.9262%" height="15" fill="rgb(215,96,11)" fg:x="264" fg:w="24"/><text x="21.4378%" y="671.50">&lt;..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.61%)</title><rect x="21.5088%" y="645" width="1.6051%" height="15" fill="rgb(238,162,53)" fg:x="268" fg:w="20"/><text x="21.7588%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="21.9904%" y="629" width="1.1236%" height="15" fill="rgb(214,83,18)" fg:x="274" fg:w="14"/><text x="22.2404%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="22.3114%" y="613" width="0.8026%" height="15" fill="rgb(248,117,24)" fg:x="278" fg:w="10"/><text x="22.5614%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="22.7127%" y="597" width="0.4013%" height="15" fill="rgb(238,190,6)" fg:x="283" fg:w="5"/><text x="22.9627%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.0337%" y="581" width="0.0803%" height="15" fill="rgb(213,51,6)" fg:x="287" fg:w="1"/><text x="23.2837%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.1140%" y="789" width="0.0803%" height="15" fill="rgb(212,136,1)" fg:x="288" fg:w="1"/><text x="23.3640%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.1140%" y="773" width="0.0803%" height="15" fill="rgb(221,192,14)" fg:x="288" fg:w="1"/><text x="23.3640%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.1140%" y="757" width="0.0803%" height="15" fill="rgb(244,38,54)" fg:x="288" fg:w="1"/><text x="23.3640%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.1140%" y="741" width="0.0803%" height="15" fill="rgb(240,45,28)" fg:x="288" fg:w="1"/><text x="23.3640%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.1140%" y="725" width="0.0803%" height="15" fill="rgb(240,123,12)" fg:x="288" fg:w="1"/><text x="23.3640%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.1140%" y="709" width="0.0803%" height="15" fill="rgb(216,14,30)" fg:x="288" fg:w="1"/><text x="23.3640%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1942%" y="773" width="0.0803%" height="15" fill="rgb(212,50,24)" fg:x="289" fg:w="1"/><text x="23.4442%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="23.1140%" y="821" width="0.2408%" height="15" fill="rgb(253,229,47)" fg:x="288" fg:w="3"/><text x="23.3640%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="23.1140%" y="805" width="0.2408%" height="15" fill="rgb(214,26,17)" fg:x="288" fg:w="3"/><text x="23.3640%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.1942%" y="789" width="0.1605%" height="15" fill="rgb(252,60,11)" fg:x="289" fg:w="2"/><text x="23.4442%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.2745%" y="773" width="0.0803%" height="15" fill="rgb(209,59,37)" fg:x="290" fg:w="1"/><text x="23.5245%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.2745%" y="757" width="0.0803%" height="15" fill="rgb(228,126,53)" fg:x="290" fg:w="1"/><text x="23.5245%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2745%" y="741" width="0.0803%" height="15" fill="rgb(233,99,2)" fg:x="290" fg:w="1"/><text x="23.5245%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2745%" y="725" width="0.0803%" height="15" fill="rgb(217,106,34)" fg:x="290" fg:w="1"/><text x="23.5245%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="23.3547%" y="789" width="0.2408%" height="15" fill="rgb(222,46,19)" fg:x="291" fg:w="3"/><text x="23.6047%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="23.4350%" y="773" width="0.1605%" height="15" fill="rgb(251,87,31)" fg:x="292" fg:w="2"/><text x="23.6850%" y="783.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="23.4350%" y="757" width="0.1605%" height="15" fill="rgb(213,70,51)" fg:x="292" fg:w="2"/><text x="23.6850%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.5152%" y="741" width="0.0803%" height="15" fill="rgb(229,144,18)" fg:x="293" fg:w="1"/><text x="23.7652%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.5152%" y="725" width="0.0803%" height="15" fill="rgb(254,60,26)" fg:x="293" fg:w="1"/><text x="23.7652%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.5955%" y="741" width="0.1605%" height="15" fill="rgb(243,127,51)" fg:x="294" fg:w="2"/><text x="23.8455%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.5955%" y="725" width="0.1605%" height="15" fill="rgb(221,51,25)" fg:x="294" fg:w="2"/><text x="23.8455%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6758%" y="709" width="0.0803%" height="15" fill="rgb(205,42,7)" fg:x="295" fg:w="1"/><text x="23.9258%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6758%" y="693" width="0.0803%" height="15" fill="rgb(236,177,48)" fg:x="295" fg:w="1"/><text x="23.9258%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6758%" y="677" width="0.0803%" height="15" fill="rgb(226,79,31)" fg:x="295" fg:w="1"/><text x="23.9258%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="23.5955%" y="789" width="0.2408%" height="15" fill="rgb(216,170,12)" fg:x="294" fg:w="3"/><text x="23.8455%" y="799.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="23.5955%" y="773" width="0.2408%" height="15" fill="rgb(208,62,51)" fg:x="294" fg:w="3"/><text x="23.8455%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="23.5955%" y="757" width="0.2408%" height="15" fill="rgb(254,129,9)" fg:x="294" fg:w="3"/><text x="23.8455%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7560%" y="741" width="0.0803%" height="15" fill="rgb(243,209,31)" fg:x="296" fg:w="1"/><text x="24.0060%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.7560%" y="725" width="0.0803%" height="15" fill="rgb(213,159,23)" fg:x="296" fg:w="1"/><text x="24.0060%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7560%" y="709" width="0.0803%" height="15" fill="rgb(249,77,39)" fg:x="296" fg:w="1"/><text x="24.0060%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7560%" y="693" width="0.0803%" height="15" fill="rgb(230,13,33)" fg:x="296" fg:w="1"/><text x="24.0060%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7560%" y="677" width="0.0803%" height="15" fill="rgb(215,215,7)" fg:x="296" fg:w="1"/><text x="24.0060%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7560%" y="661" width="0.0803%" height="15" fill="rgb(222,92,25)" fg:x="296" fg:w="1"/><text x="24.0060%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="23.8363%" y="773" width="0.0803%" height="15" fill="rgb(215,173,22)" fg:x="297" fg:w="1"/><text x="24.0863%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.8363%" y="757" width="0.0803%" height="15" fill="rgb(247,205,52)" fg:x="297" fg:w="1"/><text x="24.0863%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9165%" y="757" width="0.0803%" height="15" fill="rgb(240,210,37)" fg:x="298" fg:w="1"/><text x="24.1665%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="23.3547%" y="805" width="0.7223%" height="15" fill="rgb(224,13,10)" fg:x="291" fg:w="9"/><text x="23.6047%" y="815.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="23.8363%" y="789" width="0.2408%" height="15" fill="rgb(209,48,33)" fg:x="297" fg:w="3"/><text x="24.0863%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.9165%" y="773" width="0.1605%" height="15" fill="rgb(228,219,23)" fg:x="298" fg:w="2"/><text x="24.1665%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9968%" y="757" width="0.0803%" height="15" fill="rgb(239,46,49)" fg:x="299" fg:w="1"/><text x="24.2468%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="24.0770%" y="789" width="0.0803%" height="15" fill="rgb(206,172,51)" fg:x="300" fg:w="1"/><text x="24.3270%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.0770%" y="773" width="0.0803%" height="15" fill="rgb(213,212,35)" fg:x="300" fg:w="1"/><text x="24.3270%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0770%" y="757" width="0.0803%" height="15" fill="rgb(252,40,27)" fg:x="300" fg:w="1"/><text x="24.3270%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.1573%" y="693" width="0.1605%" height="15" fill="rgb(212,33,41)" fg:x="301" fg:w="2"/><text x="24.4073%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.2376%" y="677" width="0.0803%" height="15" fill="rgb(232,160,27)" fg:x="302" fg:w="1"/><text x="24.4876%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.2376%" y="661" width="0.0803%" height="15" fill="rgb(244,160,20)" fg:x="302" fg:w="1"/><text x="24.4876%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.2376%" y="645" width="0.0803%" height="15" fill="rgb(205,66,20)" fg:x="302" fg:w="1"/><text x="24.4876%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.2376%" y="629" width="0.0803%" height="15" fill="rgb(236,158,6)" fg:x="302" fg:w="1"/><text x="24.4876%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.2376%" y="613" width="0.0803%" height="15" fill="rgb(232,25,36)" fg:x="302" fg:w="1"/><text x="24.4876%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.2376%" y="597" width="0.0803%" height="15" fill="rgb(220,153,35)" fg:x="302" fg:w="1"/><text x="24.4876%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.2376%" y="581" width="0.0803%" height="15" fill="rgb(216,5,8)" fg:x="302" fg:w="1"/><text x="24.4876%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.2376%" y="565" width="0.0803%" height="15" fill="rgb(240,97,3)" fg:x="302" fg:w="1"/><text x="24.4876%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.2376%" y="549" width="0.0803%" height="15" fill="rgb(220,99,26)" fg:x="302" fg:w="1"/><text x="24.4876%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.2376%" y="533" width="0.0803%" height="15" fill="rgb(237,96,2)" fg:x="302" fg:w="1"/><text x="24.4876%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.2376%" y="517" width="0.0803%" height="15" fill="rgb(217,197,47)" fg:x="302" fg:w="1"/><text x="24.4876%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.2376%" y="501" width="0.0803%" height="15" fill="rgb(252,133,54)" fg:x="302" fg:w="1"/><text x="24.4876%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.2376%" y="485" width="0.0803%" height="15" fill="rgb(233,37,30)" fg:x="302" fg:w="1"/><text x="24.4876%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2376%" y="469" width="0.0803%" height="15" fill="rgb(239,182,12)" fg:x="302" fg:w="1"/><text x="24.4876%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.1573%" y="709" width="0.2408%" height="15" fill="rgb(245,83,39)" fg:x="301" fg:w="3"/><text x="24.4073%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3178%" y="693" width="0.0803%" height="15" fill="rgb(222,109,36)" fg:x="303" fg:w="1"/><text x="24.5678%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.3178%" y="677" width="0.0803%" height="15" fill="rgb(237,95,44)" fg:x="303" fg:w="1"/><text x="24.5678%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.3178%" y="661" width="0.0803%" height="15" fill="rgb(216,36,54)" fg:x="303" fg:w="1"/><text x="24.5678%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.3178%" y="645" width="0.0803%" height="15" fill="rgb(236,164,3)" fg:x="303" fg:w="1"/><text x="24.5678%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.3178%" y="629" width="0.0803%" height="15" fill="rgb(223,15,21)" fg:x="303" fg:w="1"/><text x="24.5678%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3178%" y="613" width="0.0803%" height="15" fill="rgb(239,191,12)" fg:x="303" fg:w="1"/><text x="24.5678%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.3178%" y="597" width="0.0803%" height="15" fill="rgb(231,191,37)" fg:x="303" fg:w="1"/><text x="24.5678%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.3178%" y="581" width="0.0803%" height="15" fill="rgb(209,155,36)" fg:x="303" fg:w="1"/><text x="24.5678%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.3178%" y="565" width="0.0803%" height="15" fill="rgb(216,222,49)" fg:x="303" fg:w="1"/><text x="24.5678%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.3178%" y="549" width="0.0803%" height="15" fill="rgb(218,181,2)" fg:x="303" fg:w="1"/><text x="24.5678%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.3178%" y="533" width="0.0803%" height="15" fill="rgb(239,125,9)" fg:x="303" fg:w="1"/><text x="24.5678%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3178%" y="517" width="0.0803%" height="15" fill="rgb(233,103,7)" fg:x="303" fg:w="1"/><text x="24.5678%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.3981%" y="645" width="0.0803%" height="15" fill="rgb(209,223,5)" fg:x="304" fg:w="1"/><text x="24.6481%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5586%" y="581" width="0.0803%" height="15" fill="rgb(234,71,27)" fg:x="306" fg:w="1"/><text x="24.8086%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="24.1573%" y="757" width="0.5618%" height="15" fill="rgb(251,202,16)" fg:x="301" fg:w="7"/><text x="24.4073%" y="767.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="24.1573%" y="741" width="0.5618%" height="15" fill="rgb(231,180,0)" fg:x="301" fg:w="7"/><text x="24.4073%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="24.1573%" y="725" width="0.5618%" height="15" fill="rgb(223,58,28)" fg:x="301" fg:w="7"/><text x="24.4073%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="24.3981%" y="709" width="0.3210%" height="15" fill="rgb(250,34,24)" fg:x="304" fg:w="4"/><text x="24.6481%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="24.3981%" y="693" width="0.3210%" height="15" fill="rgb(235,24,16)" fg:x="304" fg:w="4"/><text x="24.6481%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="24.3981%" y="677" width="0.3210%" height="15" fill="rgb(219,28,33)" fg:x="304" fg:w="4"/><text x="24.6481%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="24.3981%" y="661" width="0.3210%" height="15" fill="rgb(228,150,43)" fg:x="304" fg:w="4"/><text x="24.6481%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="24.4783%" y="645" width="0.2408%" height="15" fill="rgb(221,228,36)" fg:x="305" fg:w="3"/><text x="24.7283%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="24.4783%" y="629" width="0.2408%" height="15" fill="rgb(232,116,17)" fg:x="305" fg:w="3"/><text x="24.7283%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="24.4783%" y="613" width="0.2408%" height="15" fill="rgb(220,110,51)" fg:x="305" fg:w="3"/><text x="24.7283%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="24.4783%" y="597" width="0.2408%" height="15" fill="rgb(207,26,25)" fg:x="305" fg:w="3"/><text x="24.7283%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.6388%" y="581" width="0.0803%" height="15" fill="rgb(223,58,19)" fg:x="307" fg:w="1"/><text x="24.8888%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.7191%" y="677" width="0.0803%" height="15" fill="rgb(234,125,39)" fg:x="308" fg:w="1"/><text x="24.9691%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7191%" y="661" width="0.0803%" height="15" fill="rgb(241,48,36)" fg:x="308" fg:w="1"/><text x="24.9691%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7191%" y="645" width="0.0803%" height="15" fill="rgb(217,148,51)" fg:x="308" fg:w="1"/><text x="24.9691%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.7191%" y="629" width="0.0803%" height="15" fill="rgb(247,17,25)" fg:x="308" fg:w="1"/><text x="24.9691%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.7191%" y="613" width="0.0803%" height="15" fill="rgb(219,89,38)" fg:x="308" fg:w="1"/><text x="24.9691%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.7191%" y="597" width="0.0803%" height="15" fill="rgb(220,145,2)" fg:x="308" fg:w="1"/><text x="24.9691%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.7191%" y="581" width="0.0803%" height="15" fill="rgb(244,66,47)" fg:x="308" fg:w="1"/><text x="24.9691%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.7191%" y="565" width="0.0803%" height="15" fill="rgb(226,182,5)" fg:x="308" fg:w="1"/><text x="24.9691%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.7191%" y="709" width="0.1605%" height="15" fill="rgb(211,98,20)" fg:x="308" fg:w="2"/><text x="24.9691%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.7191%" y="693" width="0.1605%" height="15" fill="rgb(217,103,52)" fg:x="308" fg:w="2"/><text x="24.9691%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7994%" y="677" width="0.0803%" height="15" fill="rgb(208,125,52)" fg:x="309" fg:w="1"/><text x="25.0494%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7994%" y="661" width="0.0803%" height="15" fill="rgb(244,70,13)" fg:x="309" fg:w="1"/><text x="25.0494%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.7994%" y="645" width="0.0803%" height="15" fill="rgb(253,124,3)" fg:x="309" fg:w="1"/><text x="25.0494%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.7994%" y="629" width="0.0803%" height="15" fill="rgb(222,145,32)" fg:x="309" fg:w="1"/><text x="25.0494%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.7994%" y="613" width="0.0803%" height="15" fill="rgb(232,183,47)" fg:x="309" fg:w="1"/><text x="25.0494%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.7994%" y="597" width="0.0803%" height="15" fill="rgb(246,226,4)" fg:x="309" fg:w="1"/><text x="25.0494%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.7994%" y="581" width="0.0803%" height="15" fill="rgb(228,185,46)" fg:x="309" fg:w="1"/><text x="25.0494%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.8796%" y="677" width="0.0803%" height="15" fill="rgb(213,196,4)" fg:x="310" fg:w="1"/><text x="25.1296%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8796%" y="661" width="0.0803%" height="15" fill="rgb(212,2,45)" fg:x="310" fg:w="1"/><text x="25.1296%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.8796%" y="645" width="0.0803%" height="15" fill="rgb(217,145,50)" fg:x="310" fg:w="1"/><text x="25.1296%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8796%" y="629" width="0.0803%" height="15" fill="rgb(242,10,46)" fg:x="310" fg:w="1"/><text x="25.1296%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.8796%" y="613" width="0.0803%" height="15" fill="rgb(252,91,48)" fg:x="310" fg:w="1"/><text x="25.1296%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="24.1573%" y="789" width="0.8828%" height="15" fill="rgb(216,72,13)" fg:x="301" fg:w="11"/><text x="24.4073%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="24.1573%" y="773" width="0.8828%" height="15" fill="rgb(219,6,37)" fg:x="301" fg:w="11"/><text x="24.4073%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="24.7191%" y="757" width="0.3210%" height="15" fill="rgb(236,185,40)" fg:x="308" fg:w="4"/><text x="24.9691%" y="767.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="24.7191%" y="741" width="0.3210%" height="15" fill="rgb(208,81,48)" fg:x="308" fg:w="4"/><text x="24.9691%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="24.7191%" y="725" width="0.3210%" height="15" fill="rgb(211,42,33)" fg:x="308" fg:w="4"/><text x="24.9691%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.8796%" y="709" width="0.1605%" height="15" fill="rgb(211,90,39)" fg:x="310" fg:w="2"/><text x="25.1296%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.8796%" y="693" width="0.1605%" height="15" fill="rgb(218,136,12)" fg:x="310" fg:w="2"/><text x="25.1296%" y="703.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="24.9599%" y="677" width="0.0803%" height="15" fill="rgb(234,12,32)" fg:x="311" fg:w="1"/><text x="25.2099%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.0401%" y="789" width="0.1605%" height="15" fill="rgb(221,164,18)" fg:x="312" fg:w="2"/><text x="25.2901%" y="799.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="25.0401%" y="773" width="0.1605%" height="15" fill="rgb(239,135,14)" fg:x="312" fg:w="2"/><text x="25.2901%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.0401%" y="757" width="0.1605%" height="15" fill="rgb(226,198,47)" fg:x="312" fg:w="2"/><text x="25.2901%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="25.0401%" y="741" width="0.1605%" height="15" fill="rgb(244,121,47)" fg:x="312" fg:w="2"/><text x="25.2901%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.0401%" y="725" width="0.1605%" height="15" fill="rgb(226,21,48)" fg:x="312" fg:w="2"/><text x="25.2901%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1204%" y="709" width="0.0803%" height="15" fill="rgb(215,178,47)" fg:x="313" fg:w="1"/><text x="25.3704%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.2809%" y="677" width="0.1605%" height="15" fill="rgb(206,212,19)" fg:x="315" fg:w="2"/><text x="25.5309%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.2809%" y="661" width="0.1605%" height="15" fill="rgb(230,104,34)" fg:x="315" fg:w="2"/><text x="25.5309%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.2809%" y="645" width="0.1605%" height="15" fill="rgb(210,96,51)" fg:x="315" fg:w="2"/><text x="25.5309%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.2809%" y="693" width="0.2408%" height="15" fill="rgb(229,111,47)" fg:x="315" fg:w="3"/><text x="25.5309%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4414%" y="677" width="0.0803%" height="15" fill="rgb(218,174,45)" fg:x="317" fg:w="1"/><text x="25.6914%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="25.2809%" y="741" width="0.3210%" height="15" fill="rgb(215,21,32)" fg:x="315" fg:w="4"/><text x="25.5309%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="25.2809%" y="725" width="0.3210%" height="15" fill="rgb(235,72,21)" fg:x="315" fg:w="4"/><text x="25.5309%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="25.2809%" y="709" width="0.3210%" height="15" fill="rgb(250,113,30)" fg:x="315" fg:w="4"/><text x="25.5309%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5217%" y="693" width="0.0803%" height="15" fill="rgb(244,136,34)" fg:x="318" fg:w="1"/><text x="25.7717%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5217%" y="677" width="0.0803%" height="15" fill="rgb(213,226,47)" fg:x="318" fg:w="1"/><text x="25.7717%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5217%" y="661" width="0.0803%" height="15" fill="rgb(224,136,40)" fg:x="318" fg:w="1"/><text x="25.7717%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5217%" y="645" width="0.0803%" height="15" fill="rgb(253,124,12)" fg:x="318" fg:w="1"/><text x="25.7717%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.5217%" y="629" width="0.0803%" height="15" fill="rgb(210,67,8)" fg:x="318" fg:w="1"/><text x="25.7717%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5217%" y="613" width="0.0803%" height="15" fill="rgb(210,204,0)" fg:x="318" fg:w="1"/><text x="25.7717%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.5217%" y="597" width="0.0803%" height="15" fill="rgb(217,179,22)" fg:x="318" fg:w="1"/><text x="25.7717%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.5217%" y="581" width="0.0803%" height="15" fill="rgb(237,192,33)" fg:x="318" fg:w="1"/><text x="25.7717%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.5217%" y="565" width="0.0803%" height="15" fill="rgb(211,104,28)" fg:x="318" fg:w="1"/><text x="25.7717%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6019%" y="693" width="0.0803%" height="15" fill="rgb(214,75,30)" fg:x="319" fg:w="1"/><text x="25.8519%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6019%" y="677" width="0.0803%" height="15" fill="rgb(220,227,12)" fg:x="319" fg:w="1"/><text x="25.8519%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6019%" y="661" width="0.0803%" height="15" fill="rgb(233,134,28)" fg:x="319" fg:w="1"/><text x="25.8519%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.6019%" y="645" width="0.0803%" height="15" fill="rgb(215,146,24)" fg:x="319" fg:w="1"/><text x="25.8519%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.6019%" y="629" width="0.0803%" height="15" fill="rgb(248,227,20)" fg:x="319" fg:w="1"/><text x="25.8519%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.6019%" y="613" width="0.0803%" height="15" fill="rgb(250,44,42)" fg:x="319" fg:w="1"/><text x="25.8519%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.6019%" y="597" width="0.0803%" height="15" fill="rgb(219,5,35)" fg:x="319" fg:w="1"/><text x="25.8519%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="25.6019%" y="581" width="0.0803%" height="15" fill="rgb(241,132,32)" fg:x="319" fg:w="1"/><text x="25.8519%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="25.6019%" y="565" width="0.0803%" height="15" fill="rgb(234,212,51)" fg:x="319" fg:w="1"/><text x="25.8519%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (30 samples, 2.41%)</title><rect x="23.3547%" y="821" width="2.4077%" height="15" fill="rgb(242,173,29)" fg:x="291" fg:w="30"/><text x="23.6047%" y="831.50">pl..</text></g><g><title>plugins_core::tools::set_container (21 samples, 1.69%)</title><rect x="24.0770%" y="805" width="1.6854%" height="15" fill="rgb(212,159,2)" fg:x="300" fg:w="21"/><text x="24.3270%" y="815.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="25.2006%" y="789" width="0.5618%" height="15" fill="rgb(238,165,31)" fg:x="314" fg:w="7"/><text x="25.4506%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="25.2006%" y="773" width="0.5618%" height="15" fill="rgb(241,57,36)" fg:x="314" fg:w="7"/><text x="25.4506%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="25.2006%" y="757" width="0.5618%" height="15" fill="rgb(249,7,4)" fg:x="314" fg:w="7"/><text x="25.4506%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="25.6019%" y="741" width="0.1605%" height="15" fill="rgb(250,137,44)" fg:x="319" fg:w="2"/><text x="25.8519%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="25.6019%" y="725" width="0.1605%" height="15" fill="rgb(244,185,1)" fg:x="319" fg:w="2"/><text x="25.8519%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.6019%" y="709" width="0.1605%" height="15" fill="rgb(216,5,53)" fg:x="319" fg:w="2"/><text x="25.8519%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.6822%" y="693" width="0.0803%" height="15" fill="rgb(234,89,21)" fg:x="320" fg:w="1"/><text x="25.9322%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.6822%" y="677" width="0.0803%" height="15" fill="rgb(250,81,43)" fg:x="320" fg:w="1"/><text x="25.9322%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.6822%" y="661" width="0.0803%" height="15" fill="rgb(243,132,11)" fg:x="320" fg:w="1"/><text x="25.9322%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.6822%" y="645" width="0.0803%" height="15" fill="rgb(253,159,28)" fg:x="320" fg:w="1"/><text x="25.9322%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.6822%" y="629" width="0.0803%" height="15" fill="rgb(237,167,34)" fg:x="320" fg:w="1"/><text x="25.9322%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.6822%" y="613" width="0.0803%" height="15" fill="rgb(237,16,50)" fg:x="320" fg:w="1"/><text x="25.9322%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.8427%" y="677" width="0.1605%" height="15" fill="rgb(247,125,2)" fg:x="322" fg:w="2"/><text x="26.0927%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.9230%" y="661" width="0.0803%" height="15" fill="rgb(254,35,3)" fg:x="323" fg:w="1"/><text x="26.1730%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="25.7624%" y="821" width="0.3210%" height="15" fill="rgb(237,209,21)" fg:x="321" fg:w="4"/><text x="26.0124%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="25.7624%" y="805" width="0.3210%" height="15" fill="rgb(224,122,20)" fg:x="321" fg:w="4"/><text x="26.0124%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="25.7624%" y="789" width="0.3210%" height="15" fill="rgb(224,11,46)" fg:x="321" fg:w="4"/><text x="26.0124%" y="799.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="25.7624%" y="773" width="0.3210%" height="15" fill="rgb(248,21,33)" fg:x="321" fg:w="4"/><text x="26.0124%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="25.7624%" y="757" width="0.3210%" height="15" fill="rgb(222,144,7)" fg:x="321" fg:w="4"/><text x="26.0124%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="25.7624%" y="741" width="0.3210%" height="15" fill="rgb(205,141,37)" fg:x="321" fg:w="4"/><text x="26.0124%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="25.7624%" y="725" width="0.3210%" height="15" fill="rgb(237,130,8)" fg:x="321" fg:w="4"/><text x="26.0124%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="25.7624%" y="709" width="0.3210%" height="15" fill="rgb(209,179,39)" fg:x="321" fg:w="4"/><text x="26.0124%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.8427%" y="693" width="0.2408%" height="15" fill="rgb(207,52,17)" fg:x="322" fg:w="3"/><text x="26.0927%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0032%" y="677" width="0.0803%" height="15" fill="rgb(253,158,17)" fg:x="324" fg:w="1"/><text x="26.2532%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0032%" y="661" width="0.0803%" height="15" fill="rgb(208,19,53)" fg:x="324" fg:w="1"/><text x="26.2532%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.0032%" y="645" width="0.0803%" height="15" fill="rgb(233,152,13)" fg:x="324" fg:w="1"/><text x="26.2532%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.0032%" y="629" width="0.0803%" height="15" fill="rgb(231,84,1)" fg:x="324" fg:w="1"/><text x="26.2532%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.0032%" y="613" width="0.0803%" height="15" fill="rgb(229,142,48)" fg:x="324" fg:w="1"/><text x="26.2532%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0032%" y="597" width="0.0803%" height="15" fill="rgb(248,70,29)" fg:x="324" fg:w="1"/><text x="26.2532%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0032%" y="581" width="0.0803%" height="15" fill="rgb(250,85,7)" fg:x="324" fg:w="1"/><text x="26.2532%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.0032%" y="565" width="0.0803%" height="15" fill="rgb(235,140,43)" fg:x="324" fg:w="1"/><text x="26.2532%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.0032%" y="549" width="0.0803%" height="15" fill="rgb(216,0,5)" fg:x="324" fg:w="1"/><text x="26.2532%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.0032%" y="533" width="0.0803%" height="15" fill="rgb(223,167,29)" fg:x="324" fg:w="1"/><text x="26.2532%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.0032%" y="517" width="0.0803%" height="15" fill="rgb(229,150,33)" fg:x="324" fg:w="1"/><text x="26.2532%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0032%" y="501" width="0.0803%" height="15" fill="rgb(227,26,52)" fg:x="324" fg:w="1"/><text x="26.2532%" y="511.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="26.0835%" y="789" width="0.0803%" height="15" fill="rgb(250,60,52)" fg:x="325" fg:w="1"/><text x="26.3335%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0835%" y="773" width="0.0803%" height="15" fill="rgb(228,81,46)" fg:x="325" fg:w="1"/><text x="26.3335%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.0835%" y="757" width="0.0803%" height="15" fill="rgb(225,218,31)" fg:x="325" fg:w="1"/><text x="26.3335%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.1637%" y="789" width="0.0803%" height="15" fill="rgb(230,35,16)" fg:x="326" fg:w="1"/><text x="26.4137%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.1637%" y="773" width="0.0803%" height="15" fill="rgb(247,100,0)" fg:x="326" fg:w="1"/><text x="26.4137%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.1637%" y="757" width="0.0803%" height="15" fill="rgb(223,135,11)" fg:x="326" fg:w="1"/><text x="26.4137%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1637%" y="741" width="0.0803%" height="15" fill="rgb(207,136,0)" fg:x="326" fg:w="1"/><text x="26.4137%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.1637%" y="725" width="0.0803%" height="15" fill="rgb(246,131,25)" fg:x="326" fg:w="1"/><text x="26.4137%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1637%" y="709" width="0.0803%" height="15" fill="rgb(209,47,12)" fg:x="326" fg:w="1"/><text x="26.4137%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.1637%" y="693" width="0.0803%" height="15" fill="rgb(221,25,16)" fg:x="326" fg:w="1"/><text x="26.4137%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2440%" y="757" width="0.0803%" height="15" fill="rgb(223,164,33)" fg:x="327" fg:w="1"/><text x="26.4940%" y="767.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="26.2440%" y="741" width="0.0803%" height="15" fill="rgb(220,26,23)" fg:x="327" fg:w="1"/><text x="26.4940%" y="751.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.2440%" y="725" width="0.0803%" height="15" fill="rgb(231,224,1)" fg:x="327" fg:w="1"/><text x="26.4940%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.3242%" y="757" width="0.0803%" height="15" fill="rgb(229,221,24)" fg:x="328" fg:w="1"/><text x="26.5742%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.3242%" y="741" width="0.0803%" height="15" fill="rgb(213,34,10)" fg:x="328" fg:w="1"/><text x="26.5742%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="26.4045%" y="661" width="0.0803%" height="15" fill="rgb(215,33,11)" fg:x="329" fg:w="1"/><text x="26.6545%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.4045%" y="645" width="0.0803%" height="15" fill="rgb(216,20,41)" fg:x="329" fg:w="1"/><text x="26.6545%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.48%)</title><rect x="26.0835%" y="821" width="0.4815%" height="15" fill="rgb(228,43,31)" fg:x="325" fg:w="6"/><text x="26.3335%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (6 samples, 0.48%)</title><rect x="26.0835%" y="805" width="0.4815%" height="15" fill="rgb(227,83,26)" fg:x="325" fg:w="6"/><text x="26.3335%" y="815.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="26.2440%" y="789" width="0.3210%" height="15" fill="rgb(217,168,19)" fg:x="327" fg:w="4"/><text x="26.4940%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="26.2440%" y="773" width="0.3210%" height="15" fill="rgb(231,34,33)" fg:x="327" fg:w="4"/><text x="26.4940%" y="783.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="26.4045%" y="757" width="0.1605%" height="15" fill="rgb(230,120,51)" fg:x="329" fg:w="2"/><text x="26.6545%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.4045%" y="741" width="0.1605%" height="15" fill="rgb(215,138,27)" fg:x="329" fg:w="2"/><text x="26.6545%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="26.4045%" y="725" width="0.1605%" height="15" fill="rgb(246,80,47)" fg:x="329" fg:w="2"/><text x="26.6545%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.4045%" y="709" width="0.1605%" height="15" fill="rgb(215,57,53)" fg:x="329" fg:w="2"/><text x="26.6545%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="26.4045%" y="693" width="0.1605%" height="15" fill="rgb(229,137,5)" fg:x="329" fg:w="2"/><text x="26.6545%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="26.4045%" y="677" width="0.1605%" height="15" fill="rgb(210,86,2)" fg:x="329" fg:w="2"/><text x="26.6545%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.4848%" y="661" width="0.0803%" height="15" fill="rgb(231,226,51)" fg:x="330" fg:w="1"/><text x="26.7348%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4848%" y="645" width="0.0803%" height="15" fill="rgb(216,62,29)" fg:x="330" fg:w="1"/><text x="26.7348%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="26.5650%" y="773" width="0.0803%" height="15" fill="rgb(248,202,3)" fg:x="331" fg:w="1"/><text x="26.8150%" y="783.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="26.5650%" y="757" width="0.0803%" height="15" fill="rgb(225,181,7)" fg:x="331" fg:w="1"/><text x="26.8150%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.5650%" y="741" width="0.0803%" height="15" fill="rgb(247,170,54)" fg:x="331" fg:w="1"/><text x="26.8150%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="26.5650%" y="789" width="0.1605%" height="15" fill="rgb(236,204,33)" fg:x="331" fg:w="2"/><text x="26.8150%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="26.6453%" y="773" width="0.0803%" height="15" fill="rgb(216,45,30)" fg:x="332" fg:w="1"/><text x="26.8953%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.6453%" y="757" width="0.0803%" height="15" fill="rgb(213,203,16)" fg:x="332" fg:w="1"/><text x="26.8953%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.6453%" y="741" width="0.0803%" height="15" fill="rgb(215,46,16)" fg:x="332" fg:w="1"/><text x="26.8953%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.6453%" y="725" width="0.0803%" height="15" fill="rgb(217,162,46)" fg:x="332" fg:w="1"/><text x="26.8953%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.6453%" y="709" width="0.0803%" height="15" fill="rgb(224,189,20)" fg:x="332" fg:w="1"/><text x="26.8953%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="26.6453%" y="693" width="0.0803%" height="15" fill="rgb(232,35,51)" fg:x="332" fg:w="1"/><text x="26.8953%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="26.6453%" y="677" width="0.0803%" height="15" fill="rgb(243,221,46)" fg:x="332" fg:w="1"/><text x="26.8953%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.6453%" y="661" width="0.0803%" height="15" fill="rgb(248,16,16)" fg:x="332" fg:w="1"/><text x="26.8953%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.6453%" y="645" width="0.0803%" height="15" fill="rgb(220,168,13)" fg:x="332" fg:w="1"/><text x="26.8953%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="26.6453%" y="629" width="0.0803%" height="15" fill="rgb(243,102,39)" fg:x="332" fg:w="1"/><text x="26.8953%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="26.6453%" y="613" width="0.0803%" height="15" fill="rgb(245,82,32)" fg:x="332" fg:w="1"/><text x="26.8953%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.6453%" y="597" width="0.0803%" height="15" fill="rgb(230,164,19)" fg:x="332" fg:w="1"/><text x="26.8953%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.6453%" y="581" width="0.0803%" height="15" fill="rgb(221,9,41)" fg:x="332" fg:w="1"/><text x="26.8953%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.6453%" y="565" width="0.0803%" height="15" fill="rgb(216,93,0)" fg:x="332" fg:w="1"/><text x="26.8953%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="26.6453%" y="549" width="0.0803%" height="15" fill="rgb(235,113,9)" fg:x="332" fg:w="1"/><text x="26.8953%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="26.6453%" y="533" width="0.0803%" height="15" fill="rgb(209,224,10)" fg:x="332" fg:w="1"/><text x="26.8953%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="26.6453%" y="517" width="0.0803%" height="15" fill="rgb(226,54,34)" fg:x="332" fg:w="1"/><text x="26.8953%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="26.6453%" y="501" width="0.0803%" height="15" fill="rgb(222,60,8)" fg:x="332" fg:w="1"/><text x="26.8953%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.6453%" y="485" width="0.0803%" height="15" fill="rgb(248,228,41)" fg:x="332" fg:w="1"/><text x="26.8953%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.6453%" y="469" width="0.0803%" height="15" fill="rgb(226,31,32)" fg:x="332" fg:w="1"/><text x="26.8953%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.6453%" y="453" width="0.0803%" height="15" fill="rgb(242,132,49)" fg:x="332" fg:w="1"/><text x="26.8953%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="26.6453%" y="437" width="0.0803%" height="15" fill="rgb(224,194,19)" fg:x="332" fg:w="1"/><text x="26.8953%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.6453%" y="421" width="0.0803%" height="15" fill="rgb(232,200,51)" fg:x="332" fg:w="1"/><text x="26.8953%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6453%" y="405" width="0.0803%" height="15" fill="rgb(235,60,46)" fg:x="332" fg:w="1"/><text x="26.8953%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="26.7255%" y="789" width="0.2408%" height="15" fill="rgb(240,109,52)" fg:x="333" fg:w="3"/><text x="26.9755%" y="799.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="26.7255%" y="773" width="0.2408%" height="15" fill="rgb(215,78,37)" fg:x="333" fg:w="3"/><text x="26.9755%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="26.7255%" y="757" width="0.2408%" height="15" fill="rgb(225,141,7)" fg:x="333" fg:w="3"/><text x="26.9755%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.8058%" y="741" width="0.1605%" height="15" fill="rgb(216,102,54)" fg:x="334" fg:w="2"/><text x="27.0558%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.8058%" y="725" width="0.1605%" height="15" fill="rgb(238,143,13)" fg:x="334" fg:w="2"/><text x="27.0558%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.8860%" y="709" width="0.0803%" height="15" fill="rgb(219,45,51)" fg:x="335" fg:w="1"/><text x="27.1360%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8860%" y="693" width="0.0803%" height="15" fill="rgb(242,105,46)" fg:x="335" fg:w="1"/><text x="27.1360%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.8860%" y="677" width="0.0803%" height="15" fill="rgb(206,154,49)" fg:x="335" fg:w="1"/><text x="27.1360%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8860%" y="661" width="0.0803%" height="15" fill="rgb(239,215,4)" fg:x="335" fg:w="1"/><text x="27.1360%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.8860%" y="645" width="0.0803%" height="15" fill="rgb(238,82,17)" fg:x="335" fg:w="1"/><text x="27.1360%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8860%" y="629" width="0.0803%" height="15" fill="rgb(242,49,30)" fg:x="335" fg:w="1"/><text x="27.1360%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9663%" y="709" width="0.0803%" height="15" fill="rgb(248,5,16)" fg:x="336" fg:w="1"/><text x="27.2163%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9663%" y="693" width="0.0803%" height="15" fill="rgb(237,138,32)" fg:x="336" fg:w="1"/><text x="27.2163%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9663%" y="677" width="0.0803%" height="15" fill="rgb(235,79,45)" fg:x="336" fg:w="1"/><text x="27.2163%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9663%" y="661" width="0.0803%" height="15" fill="rgb(213,105,25)" fg:x="336" fg:w="1"/><text x="27.2163%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9663%" y="645" width="0.0803%" height="15" fill="rgb(251,131,7)" fg:x="336" fg:w="1"/><text x="27.2163%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9663%" y="629" width="0.0803%" height="15" fill="rgb(211,155,7)" fg:x="336" fg:w="1"/><text x="27.2163%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.9663%" y="741" width="0.1605%" height="15" fill="rgb(243,70,15)" fg:x="336" fg:w="2"/><text x="27.2163%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.9663%" y="725" width="0.1605%" height="15" fill="rgb(215,171,2)" fg:x="336" fg:w="2"/><text x="27.2163%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.0465%" y="709" width="0.0803%" height="15" fill="rgb(244,121,35)" fg:x="337" fg:w="1"/><text x="27.2965%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.0465%" y="693" width="0.0803%" height="15" fill="rgb(249,147,17)" fg:x="337" fg:w="1"/><text x="27.2965%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.0465%" y="677" width="0.0803%" height="15" fill="rgb(241,193,52)" fg:x="337" fg:w="1"/><text x="27.2965%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.0465%" y="661" width="0.0803%" height="15" fill="rgb(217,159,39)" fg:x="337" fg:w="1"/><text x="27.2965%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="26.5650%" y="805" width="0.6421%" height="15" fill="rgb(248,110,0)" fg:x="331" fg:w="8"/><text x="26.8150%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="26.9663%" y="789" width="0.2408%" height="15" fill="rgb(233,227,0)" fg:x="336" fg:w="3"/><text x="27.2163%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="26.9663%" y="773" width="0.2408%" height="15" fill="rgb(252,55,2)" fg:x="336" fg:w="3"/><text x="27.2163%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="26.9663%" y="757" width="0.2408%" height="15" fill="rgb(224,194,24)" fg:x="336" fg:w="3"/><text x="27.2163%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="27.1268%" y="741" width="0.0803%" height="15" fill="rgb(247,5,33)" fg:x="338" fg:w="1"/><text x="27.3768%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="27.1268%" y="725" width="0.0803%" height="15" fill="rgb(242,66,47)" fg:x="338" fg:w="1"/><text x="27.3768%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="27.1268%" y="709" width="0.0803%" height="15" fill="rgb(213,107,12)" fg:x="338" fg:w="1"/><text x="27.3768%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.1268%" y="693" width="0.0803%" height="15" fill="rgb(206,131,1)" fg:x="338" fg:w="1"/><text x="27.3768%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="27.1268%" y="677" width="0.0803%" height="15" fill="rgb(214,9,36)" fg:x="338" fg:w="1"/><text x="27.3768%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.1268%" y="661" width="0.0803%" height="15" fill="rgb(251,215,18)" fg:x="338" fg:w="1"/><text x="27.3768%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="27.1268%" y="645" width="0.0803%" height="15" fill="rgb(251,64,9)" fg:x="338" fg:w="1"/><text x="27.3768%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="27.1268%" y="629" width="0.0803%" height="15" fill="rgb(235,68,21)" fg:x="338" fg:w="1"/><text x="27.3768%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.1268%" y="613" width="0.0803%" height="15" fill="rgb(240,69,38)" fg:x="338" fg:w="1"/><text x="27.3768%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="27.1268%" y="597" width="0.0803%" height="15" fill="rgb(231,18,27)" fg:x="338" fg:w="1"/><text x="27.3768%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.1268%" y="581" width="0.0803%" height="15" fill="rgb(215,154,25)" fg:x="338" fg:w="1"/><text x="27.3768%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.1268%" y="565" width="0.0803%" height="15" fill="rgb(224,33,46)" fg:x="338" fg:w="1"/><text x="27.3768%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="27.2071%" y="789" width="0.0803%" height="15" fill="rgb(248,191,53)" fg:x="339" fg:w="1"/><text x="27.4571%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.2873%" y="645" width="0.1605%" height="15" fill="rgb(231,3,37)" fg:x="340" fg:w="2"/><text x="27.5373%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.3676%" y="629" width="0.0803%" height="15" fill="rgb(209,152,2)" fg:x="341" fg:w="1"/><text x="27.6176%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="27.2873%" y="757" width="0.2408%" height="15" fill="rgb(212,208,43)" fg:x="340" fg:w="3"/><text x="27.5373%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="27.2873%" y="741" width="0.2408%" height="15" fill="rgb(208,60,49)" fg:x="340" fg:w="3"/><text x="27.5373%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.2873%" y="725" width="0.2408%" height="15" fill="rgb(245,135,6)" fg:x="340" fg:w="3"/><text x="27.5373%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.2873%" y="709" width="0.2408%" height="15" fill="rgb(243,86,23)" fg:x="340" fg:w="3"/><text x="27.5373%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.2873%" y="693" width="0.2408%" height="15" fill="rgb(223,7,20)" fg:x="340" fg:w="3"/><text x="27.5373%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.2873%" y="677" width="0.2408%" height="15" fill="rgb(212,182,17)" fg:x="340" fg:w="3"/><text x="27.5373%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.2873%" y="661" width="0.2408%" height="15" fill="rgb(237,94,50)" fg:x="340" fg:w="3"/><text x="27.5373%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4478%" y="645" width="0.0803%" height="15" fill="rgb(232,185,44)" fg:x="342" fg:w="1"/><text x="27.6978%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5281%" y="709" width="0.0803%" height="15" fill="rgb(205,50,36)" fg:x="343" fg:w="1"/><text x="27.7781%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5281%" y="693" width="0.0803%" height="15" fill="rgb(252,32,32)" fg:x="343" fg:w="1"/><text x="27.7781%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5281%" y="677" width="0.0803%" height="15" fill="rgb(241,123,33)" fg:x="343" fg:w="1"/><text x="27.7781%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5281%" y="661" width="0.0803%" height="15" fill="rgb(212,140,16)" fg:x="343" fg:w="1"/><text x="27.7781%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5281%" y="645" width="0.0803%" height="15" fill="rgb(247,132,5)" fg:x="343" fg:w="1"/><text x="27.7781%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5281%" y="629" width="0.0803%" height="15" fill="rgb(209,137,38)" fg:x="343" fg:w="1"/><text x="27.7781%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.5281%" y="613" width="0.0803%" height="15" fill="rgb(248,32,42)" fg:x="343" fg:w="1"/><text x="27.7781%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.5281%" y="597" width="0.0803%" height="15" fill="rgb(216,188,40)" fg:x="343" fg:w="1"/><text x="27.7781%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.5281%" y="581" width="0.0803%" height="15" fill="rgb(209,127,53)" fg:x="343" fg:w="1"/><text x="27.7781%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5281%" y="565" width="0.0803%" height="15" fill="rgb(254,162,9)" fg:x="343" fg:w="1"/><text x="27.7781%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5281%" y="549" width="0.0803%" height="15" fill="rgb(219,183,10)" fg:x="343" fg:w="1"/><text x="27.7781%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.5281%" y="533" width="0.0803%" height="15" fill="rgb(217,192,21)" fg:x="343" fg:w="1"/><text x="27.7781%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.5281%" y="517" width="0.0803%" height="15" fill="rgb(251,89,27)" fg:x="343" fg:w="1"/><text x="27.7781%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.5281%" y="501" width="0.0803%" height="15" fill="rgb(253,55,28)" fg:x="343" fg:w="1"/><text x="27.7781%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.5281%" y="485" width="0.0803%" height="15" fill="rgb(216,159,8)" fg:x="343" fg:w="1"/><text x="27.7781%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5281%" y="469" width="0.0803%" height="15" fill="rgb(231,228,44)" fg:x="343" fg:w="1"/><text x="27.7781%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="27.2873%" y="789" width="0.4013%" height="15" fill="rgb(247,34,48)" fg:x="340" fg:w="5"/><text x="27.5373%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="27.2873%" y="773" width="0.4013%" height="15" fill="rgb(247,222,18)" fg:x="340" fg:w="5"/><text x="27.5373%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="27.5281%" y="757" width="0.1605%" height="15" fill="rgb(227,49,4)" fg:x="343" fg:w="2"/><text x="27.7781%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="27.5281%" y="741" width="0.1605%" height="15" fill="rgb(219,189,53)" fg:x="343" fg:w="2"/><text x="27.7781%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.5281%" y="725" width="0.1605%" height="15" fill="rgb(241,160,53)" fg:x="343" fg:w="2"/><text x="27.7781%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.6083%" y="709" width="0.0803%" height="15" fill="rgb(227,115,4)" fg:x="344" fg:w="1"/><text x="27.8583%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7689%" y="741" width="0.0803%" height="15" fill="rgb(215,28,28)" fg:x="346" fg:w="1"/><text x="28.0189%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7689%" y="725" width="0.0803%" height="15" fill="rgb(237,143,40)" fg:x="346" fg:w="1"/><text x="28.0189%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="27.7689%" y="709" width="0.0803%" height="15" fill="rgb(205,107,24)" fg:x="346" fg:w="1"/><text x="28.0189%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="27.6886%" y="789" width="0.2408%" height="15" fill="rgb(209,112,35)" fg:x="345" fg:w="3"/><text x="27.9386%" y="799.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="27.6886%" y="773" width="0.2408%" height="15" fill="rgb(206,135,5)" fg:x="345" fg:w="3"/><text x="27.9386%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="27.6886%" y="757" width="0.2408%" height="15" fill="rgb(227,217,38)" fg:x="345" fg:w="3"/><text x="27.9386%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.8491%" y="741" width="0.0803%" height="15" fill="rgb(205,0,41)" fg:x="347" fg:w="1"/><text x="28.0991%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="27.8491%" y="725" width="0.0803%" height="15" fill="rgb(220,20,40)" fg:x="347" fg:w="1"/><text x="28.0991%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.8491%" y="709" width="0.0803%" height="15" fill="rgb(216,145,3)" fg:x="347" fg:w="1"/><text x="28.0991%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.8491%" y="693" width="0.0803%" height="15" fill="rgb(207,130,51)" fg:x="347" fg:w="1"/><text x="28.0991%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.9294%" y="741" width="0.0803%" height="15" fill="rgb(252,93,13)" fg:x="348" fg:w="1"/><text x="28.1794%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.9294%" y="725" width="0.0803%" height="15" fill="rgb(210,105,15)" fg:x="348" fg:w="1"/><text x="28.1794%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.9294%" y="709" width="0.0803%" height="15" fill="rgb(212,126,31)" fg:x="348" fg:w="1"/><text x="28.1794%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.9294%" y="693" width="0.0803%" height="15" fill="rgb(241,167,46)" fg:x="348" fg:w="1"/><text x="28.1794%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.9294%" y="677" width="0.0803%" height="15" fill="rgb(217,143,19)" fg:x="348" fg:w="1"/><text x="28.1794%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.9294%" y="661" width="0.0803%" height="15" fill="rgb(235,117,33)" fg:x="348" fg:w="1"/><text x="28.1794%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.9294%" y="645" width="0.0803%" height="15" fill="rgb(247,95,6)" fg:x="348" fg:w="1"/><text x="28.1794%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.9294%" y="629" width="0.0803%" height="15" fill="rgb(243,206,43)" fg:x="348" fg:w="1"/><text x="28.1794%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="28.0096%" y="725" width="0.0803%" height="15" fill="rgb(229,65,54)" fg:x="349" fg:w="1"/><text x="28.2596%" y="735.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="28.0899%" y="725" width="0.0803%" height="15" fill="rgb(247,137,34)" fg:x="350" fg:w="1"/><text x="28.3399%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.1701%" y="629" width="0.0803%" height="15" fill="rgb(245,174,44)" fg:x="351" fg:w="1"/><text x="28.4201%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.1701%" y="613" width="0.0803%" height="15" fill="rgb(223,64,15)" fg:x="351" fg:w="1"/><text x="28.4201%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.1701%" y="693" width="0.1605%" height="15" fill="rgb(243,153,36)" fg:x="351" fg:w="2"/><text x="28.4201%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.1701%" y="677" width="0.1605%" height="15" fill="rgb(252,23,4)" fg:x="351" fg:w="2"/><text x="28.4201%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.1701%" y="661" width="0.1605%" height="15" fill="rgb(209,132,13)" fg:x="351" fg:w="2"/><text x="28.4201%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.1701%" y="645" width="0.1605%" height="15" fill="rgb(209,196,21)" fg:x="351" fg:w="2"/><text x="28.4201%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.2504%" y="629" width="0.0803%" height="15" fill="rgb(252,197,1)" fg:x="352" fg:w="1"/><text x="28.5004%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.3307%" y="693" width="0.0803%" height="15" fill="rgb(229,42,46)" fg:x="353" fg:w="1"/><text x="28.5807%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4109%" y="597" width="0.0803%" height="15" fill="rgb(219,85,8)" fg:x="354" fg:w="1"/><text x="28.6609%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4109%" y="581" width="0.0803%" height="15" fill="rgb(223,185,14)" fg:x="354" fg:w="1"/><text x="28.6609%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (200 samples, 16.05%)</title><rect x="12.5201%" y="837" width="16.0514%" height="15" fill="rgb(217,196,18)" fg:x="156" fg:w="200"/><text x="12.7701%" y="847.50">plugins_core::build::Buil..</text></g><g><title>plugins_core::build::Build::occupying (25 samples, 2.01%)</title><rect x="26.5650%" y="821" width="2.0064%" height="15" fill="rgb(220,122,37)" fg:x="331" fg:w="25"/><text x="26.8150%" y="831.50">p..</text></g><g><title>plugins_core::tools::set_occupying (17 samples, 1.36%)</title><rect x="27.2071%" y="805" width="1.3644%" height="15" fill="rgb(236,135,33)" fg:x="339" fg:w="17"/><text x="27.4571%" y="815.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (8 samples, 0.64%)</title><rect x="27.9294%" y="789" width="0.6421%" height="15" fill="rgb(222,86,54)" fg:x="348" fg:w="8"/><text x="28.1794%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="27.9294%" y="773" width="0.6421%" height="15" fill="rgb(227,42,22)" fg:x="348" fg:w="8"/><text x="28.1794%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="27.9294%" y="757" width="0.6421%" height="15" fill="rgb(243,101,27)" fg:x="348" fg:w="8"/><text x="28.1794%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="28.0096%" y="741" width="0.5618%" height="15" fill="rgb(229,100,8)" fg:x="349" fg:w="7"/><text x="28.2596%" y="751.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="28.1701%" y="725" width="0.4013%" height="15" fill="rgb(252,68,10)" fg:x="351" fg:w="5"/><text x="28.4201%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="28.1701%" y="709" width="0.4013%" height="15" fill="rgb(219,19,31)" fg:x="351" fg:w="5"/><text x="28.4201%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.4109%" y="693" width="0.1605%" height="15" fill="rgb(246,150,44)" fg:x="354" fg:w="2"/><text x="28.6609%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.4109%" y="677" width="0.1605%" height="15" fill="rgb(211,14,39)" fg:x="354" fg:w="2"/><text x="28.6609%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.4109%" y="661" width="0.1605%" height="15" fill="rgb(221,98,29)" fg:x="354" fg:w="2"/><text x="28.6609%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.4109%" y="645" width="0.1605%" height="15" fill="rgb(221,70,26)" fg:x="354" fg:w="2"/><text x="28.6609%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="28.4109%" y="629" width="0.1605%" height="15" fill="rgb(236,146,30)" fg:x="354" fg:w="2"/><text x="28.6609%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.4109%" y="613" width="0.1605%" height="15" fill="rgb(226,94,34)" fg:x="354" fg:w="2"/><text x="28.6609%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.4912%" y="597" width="0.0803%" height="15" fill="rgb(248,132,21)" fg:x="355" fg:w="1"/><text x="28.7412%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.4912%" y="581" width="0.0803%" height="15" fill="rgb(245,43,50)" fg:x="355" fg:w="1"/><text x="28.7412%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="28.5714%" y="805" width="0.0803%" height="15" fill="rgb(245,132,31)" fg:x="356" fg:w="1"/><text x="28.8214%" y="815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="28.5714%" y="789" width="0.0803%" height="15" fill="rgb(230,171,4)" fg:x="356" fg:w="1"/><text x="28.8214%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.5714%" y="773" width="0.0803%" height="15" fill="rgb(235,6,45)" fg:x="356" fg:w="1"/><text x="28.8214%" y="783.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="28.5714%" y="837" width="0.1605%" height="15" fill="rgb(220,80,28)" fg:x="356" fg:w="2"/><text x="28.8214%" y="847.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="28.5714%" y="821" width="0.1605%" height="15" fill="rgb(242,171,9)" fg:x="356" fg:w="2"/><text x="28.8214%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="28.6517%" y="805" width="0.0803%" height="15" fill="rgb(214,135,29)" fg:x="357" fg:w="1"/><text x="28.9017%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="28.6517%" y="789" width="0.0803%" height="15" fill="rgb(221,229,16)" fg:x="357" fg:w="1"/><text x="28.9017%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="28.6517%" y="773" width="0.0803%" height="15" fill="rgb(253,59,46)" fg:x="357" fg:w="1"/><text x="28.9017%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.6517%" y="757" width="0.0803%" height="15" fill="rgb(250,147,20)" fg:x="357" fg:w="1"/><text x="28.9017%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="28.9727%" y="773" width="0.1605%" height="15" fill="rgb(236,64,48)" fg:x="361" fg:w="2"/><text x="29.2227%" y="783.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="29.0530%" y="757" width="0.0803%" height="15" fill="rgb(240,37,42)" fg:x="362" fg:w="1"/><text x="29.3030%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="29.1332%" y="773" width="0.1605%" height="15" fill="rgb(220,41,50)" fg:x="363" fg:w="2"/><text x="29.3832%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2135%" y="757" width="0.0803%" height="15" fill="rgb(216,51,14)" fg:x="364" fg:w="1"/><text x="29.4635%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="28.9727%" y="789" width="0.4013%" height="15" fill="rgb(215,83,10)" fg:x="361" fg:w="5"/><text x="29.2227%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="29.2937%" y="773" width="0.0803%" height="15" fill="rgb(206,144,17)" fg:x="365" fg:w="1"/><text x="29.5437%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.2937%" y="757" width="0.0803%" height="15" fill="rgb(219,196,37)" fg:x="365" fg:w="1"/><text x="29.5437%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.2937%" y="741" width="0.0803%" height="15" fill="rgb(226,135,26)" fg:x="365" fg:w="1"/><text x="29.5437%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.2937%" y="725" width="0.0803%" height="15" fill="rgb(237,195,40)" fg:x="365" fg:w="1"/><text x="29.5437%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.2937%" y="709" width="0.0803%" height="15" fill="rgb(228,182,42)" fg:x="365" fg:w="1"/><text x="29.5437%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.2937%" y="693" width="0.0803%" height="15" fill="rgb(224,135,50)" fg:x="365" fg:w="1"/><text x="29.5437%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.2937%" y="677" width="0.0803%" height="15" fill="rgb(236,215,34)" fg:x="365" fg:w="1"/><text x="29.5437%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.2937%" y="661" width="0.0803%" height="15" fill="rgb(244,213,27)" fg:x="365" fg:w="1"/><text x="29.5437%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.2937%" y="645" width="0.0803%" height="15" fill="rgb(233,37,53)" fg:x="365" fg:w="1"/><text x="29.5437%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.2937%" y="629" width="0.0803%" height="15" fill="rgb(222,132,14)" fg:x="365" fg:w="1"/><text x="29.5437%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.2937%" y="613" width="0.0803%" height="15" fill="rgb(219,202,29)" fg:x="365" fg:w="1"/><text x="29.5437%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.2937%" y="597" width="0.0803%" height="15" fill="rgb(226,157,39)" fg:x="365" fg:w="1"/><text x="29.5437%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.2937%" y="581" width="0.0803%" height="15" fill="rgb(235,213,2)" fg:x="365" fg:w="1"/><text x="29.5437%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.2937%" y="565" width="0.0803%" height="15" fill="rgb(250,121,2)" fg:x="365" fg:w="1"/><text x="29.5437%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="29.2937%" y="549" width="0.0803%" height="15" fill="rgb(206,192,33)" fg:x="365" fg:w="1"/><text x="29.5437%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="29.2937%" y="533" width="0.0803%" height="15" fill="rgb(240,161,6)" fg:x="365" fg:w="1"/><text x="29.5437%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="29.2937%" y="517" width="0.0803%" height="15" fill="rgb(246,53,30)" fg:x="365" fg:w="1"/><text x="29.5437%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="29.2937%" y="501" width="0.0803%" height="15" fill="rgb(219,123,43)" fg:x="365" fg:w="1"/><text x="29.5437%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="29.2937%" y="485" width="0.0803%" height="15" fill="rgb(236,53,49)" fg:x="365" fg:w="1"/><text x="29.5437%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="29.2937%" y="469" width="0.0803%" height="15" fill="rgb(241,156,1)" fg:x="365" fg:w="1"/><text x="29.5437%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.2937%" y="453" width="0.0803%" height="15" fill="rgb(209,73,26)" fg:x="365" fg:w="1"/><text x="29.5437%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="29.2937%" y="437" width="0.0803%" height="15" fill="rgb(206,114,3)" fg:x="365" fg:w="1"/><text x="29.5437%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.2937%" y="421" width="0.0803%" height="15" fill="rgb(230,214,9)" fg:x="365" fg:w="1"/><text x="29.5437%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2937%" y="405" width="0.0803%" height="15" fill="rgb(240,184,46)" fg:x="365" fg:w="1"/><text x="29.5437%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3740%" y="645" width="0.0803%" height="15" fill="rgb(242,169,54)" fg:x="366" fg:w="1"/><text x="29.6240%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3740%" y="629" width="0.0803%" height="15" fill="rgb(207,168,50)" fg:x="366" fg:w="1"/><text x="29.6240%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3740%" y="613" width="0.0803%" height="15" fill="rgb(240,114,2)" fg:x="366" fg:w="1"/><text x="29.6240%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3740%" y="597" width="0.0803%" height="15" fill="rgb(211,17,40)" fg:x="366" fg:w="1"/><text x="29.6240%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.3740%" y="789" width="0.1605%" height="15" fill="rgb(235,97,36)" fg:x="366" fg:w="2"/><text x="29.6240%" y="799.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.3740%" y="773" width="0.1605%" height="15" fill="rgb(208,164,11)" fg:x="366" fg:w="2"/><text x="29.6240%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.3740%" y="757" width="0.1605%" height="15" fill="rgb(242,11,17)" fg:x="366" fg:w="2"/><text x="29.6240%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.3740%" y="741" width="0.1605%" height="15" fill="rgb(215,86,33)" fg:x="366" fg:w="2"/><text x="29.6240%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.3740%" y="725" width="0.1605%" height="15" fill="rgb(245,185,28)" fg:x="366" fg:w="2"/><text x="29.6240%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.3740%" y="709" width="0.1605%" height="15" fill="rgb(231,89,42)" fg:x="366" fg:w="2"/><text x="29.6240%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.3740%" y="693" width="0.1605%" height="15" fill="rgb(210,18,47)" fg:x="366" fg:w="2"/><text x="29.6240%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="29.3740%" y="677" width="0.1605%" height="15" fill="rgb(214,84,8)" fg:x="366" fg:w="2"/><text x="29.6240%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.3740%" y="661" width="0.1605%" height="15" fill="rgb(214,222,23)" fg:x="366" fg:w="2"/><text x="29.6240%" y="671.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="29.4543%" y="645" width="0.0803%" height="15" fill="rgb(213,104,21)" fg:x="367" fg:w="1"/><text x="29.7043%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="29.5345%" y="789" width="0.0803%" height="15" fill="rgb(238,138,6)" fg:x="368" fg:w="1"/><text x="29.7845%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.5345%" y="773" width="0.0803%" height="15" fill="rgb(205,167,50)" fg:x="368" fg:w="1"/><text x="29.7845%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="29.5345%" y="757" width="0.0803%" height="15" fill="rgb(230,105,27)" fg:x="368" fg:w="1"/><text x="29.7845%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.5345%" y="741" width="0.0803%" height="15" fill="rgb(222,97,48)" fg:x="368" fg:w="1"/><text x="29.7845%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.5345%" y="725" width="0.0803%" height="15" fill="rgb(222,197,14)" fg:x="368" fg:w="1"/><text x="29.7845%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6950%" y="757" width="0.0803%" height="15" fill="rgb(210,105,47)" fg:x="370" fg:w="1"/><text x="29.9450%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6950%" y="741" width="0.0803%" height="15" fill="rgb(238,158,19)" fg:x="370" fg:w="1"/><text x="29.9450%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.6950%" y="725" width="0.0803%" height="15" fill="rgb(226,176,23)" fg:x="370" fg:w="1"/><text x="29.9450%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.6950%" y="709" width="0.0803%" height="15" fill="rgb(208,79,31)" fg:x="370" fg:w="1"/><text x="29.9450%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.6950%" y="693" width="0.0803%" height="15" fill="rgb(221,154,21)" fg:x="370" fg:w="1"/><text x="29.9450%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6950%" y="677" width="0.0803%" height="15" fill="rgb(213,61,41)" fg:x="370" fg:w="1"/><text x="29.9450%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6950%" y="661" width="0.0803%" height="15" fill="rgb(215,28,33)" fg:x="370" fg:w="1"/><text x="29.9450%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.6950%" y="645" width="0.0803%" height="15" fill="rgb(231,139,26)" fg:x="370" fg:w="1"/><text x="29.9450%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.6950%" y="629" width="0.0803%" height="15" fill="rgb(232,159,16)" fg:x="370" fg:w="1"/><text x="29.9450%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.6950%" y="613" width="0.0803%" height="15" fill="rgb(233,80,10)" fg:x="370" fg:w="1"/><text x="29.9450%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.6950%" y="597" width="0.0803%" height="15" fill="rgb(208,147,29)" fg:x="370" fg:w="1"/><text x="29.9450%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6950%" y="581" width="0.0803%" height="15" fill="rgb(213,10,12)" fg:x="370" fg:w="1"/><text x="29.9450%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.7753%" y="741" width="0.0803%" height="15" fill="rgb(231,218,13)" fg:x="371" fg:w="1"/><text x="30.0253%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.7753%" y="725" width="0.0803%" height="15" fill="rgb(244,199,44)" fg:x="371" fg:w="1"/><text x="30.0253%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.7753%" y="709" width="0.0803%" height="15" fill="rgb(240,144,53)" fg:x="371" fg:w="1"/><text x="30.0253%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7753%" y="693" width="0.0803%" height="15" fill="rgb(223,57,28)" fg:x="371" fg:w="1"/><text x="30.0253%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8555%" y="709" width="0.0803%" height="15" fill="rgb(213,134,38)" fg:x="372" fg:w="1"/><text x="30.1055%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="28.8122%" y="805" width="1.2039%" height="15" fill="rgb(251,182,42)" fg:x="359" fg:w="15"/><text x="29.0622%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="29.6148%" y="789" width="0.4013%" height="15" fill="rgb(229,93,13)" fg:x="369" fg:w="5"/><text x="29.8648%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="29.6148%" y="773" width="0.4013%" height="15" fill="rgb(234,171,3)" fg:x="369" fg:w="5"/><text x="29.8648%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="29.7753%" y="757" width="0.2408%" height="15" fill="rgb(241,105,32)" fg:x="371" fg:w="3"/><text x="30.0253%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="29.8555%" y="741" width="0.1605%" height="15" fill="rgb(221,66,3)" fg:x="372" fg:w="2"/><text x="30.1055%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="29.8555%" y="725" width="0.1605%" height="15" fill="rgb(248,155,29)" fg:x="372" fg:w="2"/><text x="30.1055%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.9358%" y="709" width="0.0803%" height="15" fill="rgb(231,31,5)" fg:x="373" fg:w="1"/><text x="30.1858%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.9358%" y="693" width="0.0803%" height="15" fill="rgb(213,188,31)" fg:x="373" fg:w="1"/><text x="30.1858%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.9358%" y="677" width="0.0803%" height="15" fill="rgb(212,104,33)" fg:x="373" fg:w="1"/><text x="30.1858%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.9358%" y="661" width="0.0803%" height="15" fill="rgb(254,77,51)" fg:x="373" fg:w="1"/><text x="30.1858%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.9358%" y="645" width="0.0803%" height="15" fill="rgb(234,39,26)" fg:x="373" fg:w="1"/><text x="30.1858%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.9358%" y="629" width="0.0803%" height="15" fill="rgb(208,88,36)" fg:x="373" fg:w="1"/><text x="30.1858%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.9358%" y="613" width="0.0803%" height="15" fill="rgb(243,222,10)" fg:x="373" fg:w="1"/><text x="30.1858%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0161%" y="677" width="0.0803%" height="15" fill="rgb(218,133,52)" fg:x="374" fg:w="1"/><text x="30.2661%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (18 samples, 1.44%)</title><rect x="28.7319%" y="837" width="1.4446%" height="15" fill="rgb(222,25,26)" fg:x="358" fg:w="18"/><text x="28.9819%" y="847.50"></text></g><g><title>plugins_core::build::QuickThing::make (18 samples, 1.44%)</title><rect x="28.7319%" y="821" width="1.4446%" height="15" fill="rgb(243,174,24)" fg:x="358" fg:w="18"/><text x="28.9819%" y="831.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="30.0161%" y="805" width="0.1605%" height="15" fill="rgb(233,188,52)" fg:x="374" fg:w="2"/><text x="30.2661%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="30.0161%" y="789" width="0.1605%" height="15" fill="rgb(208,89,14)" fg:x="374" fg:w="2"/><text x="30.2661%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="30.0161%" y="773" width="0.1605%" height="15" fill="rgb(205,204,21)" fg:x="374" fg:w="2"/><text x="30.2661%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="30.0161%" y="757" width="0.1605%" height="15" fill="rgb(246,39,28)" fg:x="374" fg:w="2"/><text x="30.2661%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="30.0161%" y="741" width="0.1605%" height="15" fill="rgb(235,71,19)" fg:x="374" fg:w="2"/><text x="30.2661%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.0161%" y="725" width="0.1605%" height="15" fill="rgb(211,62,39)" fg:x="374" fg:w="2"/><text x="30.2661%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="30.0161%" y="709" width="0.1605%" height="15" fill="rgb(246,118,20)" fg:x="374" fg:w="2"/><text x="30.2661%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.0161%" y="693" width="0.1605%" height="15" fill="rgb(230,82,12)" fg:x="374" fg:w="2"/><text x="30.2661%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="30.0963%" y="677" width="0.0803%" height="15" fill="rgb(205,212,34)" fg:x="375" fg:w="1"/><text x="30.3463%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0963%" y="661" width="0.0803%" height="15" fill="rgb(239,90,1)" fg:x="375" fg:w="1"/><text x="30.3463%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.0963%" y="645" width="0.0803%" height="15" fill="rgb(225,198,50)" fg:x="375" fg:w="1"/><text x="30.3463%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0963%" y="629" width="0.0803%" height="15" fill="rgb(227,208,48)" fg:x="375" fg:w="1"/><text x="30.3463%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0963%" y="613" width="0.0803%" height="15" fill="rgb(238,134,41)" fg:x="375" fg:w="1"/><text x="30.3463%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="30.1766%" y="789" width="0.0803%" height="15" fill="rgb(241,58,39)" fg:x="376" fg:w="1"/><text x="30.4266%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1766%" y="773" width="0.0803%" height="15" fill="rgb(214,126,4)" fg:x="376" fg:w="1"/><text x="30.4266%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1766%" y="757" width="0.0803%" height="15" fill="rgb(235,149,4)" fg:x="376" fg:w="1"/><text x="30.4266%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.1766%" y="741" width="0.0803%" height="15" fill="rgb(236,59,29)" fg:x="376" fg:w="1"/><text x="30.4266%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.1766%" y="725" width="0.0803%" height="15" fill="rgb(246,11,33)" fg:x="376" fg:w="1"/><text x="30.4266%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.1766%" y="709" width="0.0803%" height="15" fill="rgb(232,180,35)" fg:x="376" fg:w="1"/><text x="30.4266%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1766%" y="693" width="0.0803%" height="15" fill="rgb(220,35,37)" fg:x="376" fg:w="1"/><text x="30.4266%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1766%" y="677" width="0.0803%" height="15" fill="rgb(238,107,48)" fg:x="376" fg:w="1"/><text x="30.4266%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.1766%" y="661" width="0.0803%" height="15" fill="rgb(205,65,21)" fg:x="376" fg:w="1"/><text x="30.4266%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.1766%" y="645" width="0.0803%" height="15" fill="rgb(246,138,48)" fg:x="376" fg:w="1"/><text x="30.4266%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.1766%" y="629" width="0.0803%" height="15" fill="rgb(209,220,47)" fg:x="376" fg:w="1"/><text x="30.4266%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.1766%" y="613" width="0.0803%" height="15" fill="rgb(222,162,49)" fg:x="376" fg:w="1"/><text x="30.4266%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1766%" y="597" width="0.0803%" height="15" fill="rgb(243,123,11)" fg:x="376" fg:w="1"/><text x="30.4266%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="30.1766%" y="805" width="0.1605%" height="15" fill="rgb(221,229,41)" fg:x="376" fg:w="2"/><text x="30.4266%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="30.2568%" y="789" width="0.0803%" height="15" fill="rgb(216,68,4)" fg:x="377" fg:w="1"/><text x="30.5068%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.2568%" y="773" width="0.0803%" height="15" fill="rgb(207,88,35)" fg:x="377" fg:w="1"/><text x="30.5068%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.2568%" y="757" width="0.0803%" height="15" fill="rgb(252,2,5)" fg:x="377" fg:w="1"/><text x="30.5068%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.2568%" y="741" width="0.0803%" height="15" fill="rgb(209,173,7)" fg:x="377" fg:w="1"/><text x="30.5068%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.2568%" y="725" width="0.0803%" height="15" fill="rgb(210,198,52)" fg:x="377" fg:w="1"/><text x="30.5068%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.2568%" y="709" width="0.0803%" height="15" fill="rgb(228,152,32)" fg:x="377" fg:w="1"/><text x="30.5068%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.2568%" y="693" width="0.0803%" height="15" fill="rgb(249,98,29)" fg:x="377" fg:w="1"/><text x="30.5068%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.2568%" y="677" width="0.0803%" height="15" fill="rgb(205,148,48)" fg:x="377" fg:w="1"/><text x="30.5068%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.2568%" y="661" width="0.0803%" height="15" fill="rgb(236,69,34)" fg:x="377" fg:w="1"/><text x="30.5068%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.2568%" y="645" width="0.0803%" height="15" fill="rgb(220,151,41)" fg:x="377" fg:w="1"/><text x="30.5068%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2568%" y="629" width="0.0803%" height="15" fill="rgb(254,106,24)" fg:x="377" fg:w="1"/><text x="30.5068%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.3371%" y="805" width="0.0803%" height="15" fill="rgb(210,37,48)" fg:x="378" fg:w="1"/><text x="30.5871%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.3371%" y="789" width="0.0803%" height="15" fill="rgb(254,131,5)" fg:x="378" fg:w="1"/><text x="30.5871%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.3371%" y="773" width="0.0803%" height="15" fill="rgb(216,55,41)" fg:x="378" fg:w="1"/><text x="30.5871%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.3371%" y="757" width="0.0803%" height="15" fill="rgb(250,35,31)" fg:x="378" fg:w="1"/><text x="30.5871%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.3371%" y="741" width="0.0803%" height="15" fill="rgb(207,124,33)" fg:x="378" fg:w="1"/><text x="30.5871%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.3371%" y="725" width="0.0803%" height="15" fill="rgb(249,175,17)" fg:x="378" fg:w="1"/><text x="30.5871%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.4173%" y="725" width="0.1605%" height="15" fill="rgb(224,175,39)" fg:x="379" fg:w="2"/><text x="30.6673%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.4173%" y="709" width="0.1605%" height="15" fill="rgb(208,67,49)" fg:x="379" fg:w="2"/><text x="30.6673%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4976%" y="693" width="0.0803%" height="15" fill="rgb(222,188,41)" fg:x="380" fg:w="1"/><text x="30.7476%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4976%" y="677" width="0.0803%" height="15" fill="rgb(243,213,30)" fg:x="380" fg:w="1"/><text x="30.7476%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4976%" y="661" width="0.0803%" height="15" fill="rgb(253,100,45)" fg:x="380" fg:w="1"/><text x="30.7476%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4976%" y="645" width="0.0803%" height="15" fill="rgb(226,24,44)" fg:x="380" fg:w="1"/><text x="30.7476%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.4976%" y="629" width="0.0803%" height="15" fill="rgb(215,41,24)" fg:x="380" fg:w="1"/><text x="30.7476%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.4976%" y="613" width="0.0803%" height="15" fill="rgb(254,53,33)" fg:x="380" fg:w="1"/><text x="30.7476%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.4976%" y="597" width="0.0803%" height="15" fill="rgb(242,103,10)" fg:x="380" fg:w="1"/><text x="30.7476%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4976%" y="581" width="0.0803%" height="15" fill="rgb(246,29,21)" fg:x="380" fg:w="1"/><text x="30.7476%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4976%" y="565" width="0.0803%" height="15" fill="rgb(251,154,1)" fg:x="380" fg:w="1"/><text x="30.7476%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.4976%" y="549" width="0.0803%" height="15" fill="rgb(254,212,26)" fg:x="380" fg:w="1"/><text x="30.7476%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.4976%" y="533" width="0.0803%" height="15" fill="rgb(251,187,46)" fg:x="380" fg:w="1"/><text x="30.7476%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.4976%" y="517" width="0.0803%" height="15" fill="rgb(224,208,14)" fg:x="380" fg:w="1"/><text x="30.7476%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.4976%" y="501" width="0.0803%" height="15" fill="rgb(222,176,26)" fg:x="380" fg:w="1"/><text x="30.7476%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="30.4976%" y="485" width="0.0803%" height="15" fill="rgb(241,219,52)" fg:x="380" fg:w="1"/><text x="30.7476%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="30.4976%" y="469" width="0.0803%" height="15" fill="rgb(252,198,21)" fg:x="380" fg:w="1"/><text x="30.7476%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.5778%" y="725" width="0.0803%" height="15" fill="rgb(244,196,23)" fg:x="381" fg:w="1"/><text x="30.8278%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.5778%" y="709" width="0.0803%" height="15" fill="rgb(239,121,44)" fg:x="381" fg:w="1"/><text x="30.8278%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.5778%" y="693" width="0.0803%" height="15" fill="rgb(249,203,23)" fg:x="381" fg:w="1"/><text x="30.8278%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.5778%" y="677" width="0.0803%" height="15" fill="rgb(238,219,10)" fg:x="381" fg:w="1"/><text x="30.8278%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6581%" y="661" width="0.0803%" height="15" fill="rgb(241,35,46)" fg:x="382" fg:w="1"/><text x="30.9081%" y="671.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="30.4173%" y="757" width="0.4013%" height="15" fill="rgb(218,28,6)" fg:x="379" fg:w="5"/><text x="30.6673%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="30.4173%" y="741" width="0.4013%" height="15" fill="rgb(233,151,50)" fg:x="379" fg:w="5"/><text x="30.6673%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.6581%" y="725" width="0.1605%" height="15" fill="rgb(208,57,8)" fg:x="382" fg:w="2"/><text x="30.9081%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.6581%" y="709" width="0.1605%" height="15" fill="rgb(253,99,10)" fg:x="382" fg:w="2"/><text x="30.9081%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.6581%" y="693" width="0.1605%" height="15" fill="rgb(237,196,49)" fg:x="382" fg:w="2"/><text x="30.9081%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.6581%" y="677" width="0.1605%" height="15" fill="rgb(209,51,3)" fg:x="382" fg:w="2"/><text x="30.9081%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.7384%" y="661" width="0.0803%" height="15" fill="rgb(238,129,10)" fg:x="383" fg:w="1"/><text x="30.9884%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7384%" y="645" width="0.0803%" height="15" fill="rgb(246,201,16)" fg:x="383" fg:w="1"/><text x="30.9884%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.7384%" y="629" width="0.0803%" height="15" fill="rgb(250,160,20)" fg:x="383" fg:w="1"/><text x="30.9884%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.7384%" y="613" width="0.0803%" height="15" fill="rgb(251,107,25)" fg:x="383" fg:w="1"/><text x="30.9884%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.8186%" y="725" width="0.0803%" height="15" fill="rgb(212,103,39)" fg:x="384" fg:w="1"/><text x="31.0686%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.8186%" y="709" width="0.0803%" height="15" fill="rgb(207,9,29)" fg:x="384" fg:w="1"/><text x="31.0686%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.8186%" y="693" width="0.0803%" height="15" fill="rgb(227,84,3)" fg:x="384" fg:w="1"/><text x="31.0686%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.8186%" y="677" width="0.0803%" height="15" fill="rgb(242,194,7)" fg:x="384" fg:w="1"/><text x="31.0686%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="30.4173%" y="789" width="0.5618%" height="15" fill="rgb(230,40,4)" fg:x="379" fg:w="7"/><text x="30.6673%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.56%)</title><rect x="30.4173%" y="773" width="0.5618%" height="15" fill="rgb(243,229,33)" fg:x="379" fg:w="7"/><text x="30.6673%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="30.8186%" y="757" width="0.1605%" height="15" fill="rgb(240,65,24)" fg:x="384" fg:w="2"/><text x="31.0686%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="30.8186%" y="741" width="0.1605%" height="15" fill="rgb(212,28,20)" fg:x="384" fg:w="2"/><text x="31.0686%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="30.8989%" y="725" width="0.0803%" height="15" fill="rgb(209,72,3)" fg:x="385" fg:w="1"/><text x="31.1489%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.8989%" y="709" width="0.0803%" height="15" fill="rgb(238,170,36)" fg:x="385" fg:w="1"/><text x="31.1489%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.8989%" y="693" width="0.0803%" height="15" fill="rgb(236,19,38)" fg:x="385" fg:w="1"/><text x="31.1489%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="30.4173%" y="805" width="0.6421%" height="15" fill="rgb(230,67,43)" fg:x="379" fg:w="8"/><text x="30.6673%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="30.9791%" y="789" width="0.0803%" height="15" fill="rgb(227,14,36)" fg:x="386" fg:w="1"/><text x="31.2291%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.9791%" y="773" width="0.0803%" height="15" fill="rgb(247,171,49)" fg:x="386" fg:w="1"/><text x="31.2291%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="30.9791%" y="757" width="0.0803%" height="15" fill="rgb(235,164,51)" fg:x="386" fg:w="1"/><text x="31.2291%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="30.1766%" y="821" width="1.0433%" height="15" fill="rgb(246,107,20)" fg:x="376" fg:w="13"/><text x="30.4266%" y="831.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="31.0594%" y="805" width="0.1605%" height="15" fill="rgb(226,88,18)" fg:x="387" fg:w="2"/><text x="31.3094%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1396%" y="789" width="0.0803%" height="15" fill="rgb(235,136,9)" fg:x="388" fg:w="1"/><text x="31.3896%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1396%" y="773" width="0.0803%" height="15" fill="rgb(209,3,34)" fg:x="388" fg:w="1"/><text x="31.3896%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.1396%" y="757" width="0.0803%" height="15" fill="rgb(213,38,19)" fg:x="388" fg:w="1"/><text x="31.3896%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.1396%" y="741" width="0.0803%" height="15" fill="rgb(254,24,24)" fg:x="388" fg:w="1"/><text x="31.3896%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.1396%" y="725" width="0.0803%" height="15" fill="rgb(219,122,42)" fg:x="388" fg:w="1"/><text x="31.3896%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1396%" y="709" width="0.0803%" height="15" fill="rgb(205,128,31)" fg:x="388" fg:w="1"/><text x="31.3896%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1396%" y="693" width="0.0803%" height="15" fill="rgb(212,142,0)" fg:x="388" fg:w="1"/><text x="31.3896%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.1396%" y="677" width="0.0803%" height="15" fill="rgb(211,25,35)" fg:x="388" fg:w="1"/><text x="31.3896%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.1396%" y="661" width="0.0803%" height="15" fill="rgb(220,150,53)" fg:x="388" fg:w="1"/><text x="31.3896%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.1396%" y="645" width="0.0803%" height="15" fill="rgb(220,30,24)" fg:x="388" fg:w="1"/><text x="31.3896%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.1396%" y="629" width="0.0803%" height="15" fill="rgb(218,86,23)" fg:x="388" fg:w="1"/><text x="31.3896%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1396%" y="613" width="0.0803%" height="15" fill="rgb(206,62,27)" fg:x="388" fg:w="1"/><text x="31.3896%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.2199%" y="789" width="0.0803%" height="15" fill="rgb(249,174,0)" fg:x="389" fg:w="1"/><text x="31.4699%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.2199%" y="773" width="0.0803%" height="15" fill="rgb(246,67,27)" fg:x="389" fg:w="1"/><text x="31.4699%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.2199%" y="757" width="0.0803%" height="15" fill="rgb(250,195,30)" fg:x="389" fg:w="1"/><text x="31.4699%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2199%" y="741" width="0.0803%" height="15" fill="rgb(251,171,50)" fg:x="389" fg:w="1"/><text x="31.4699%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.2199%" y="725" width="0.0803%" height="15" fill="rgb(236,196,10)" fg:x="389" fg:w="1"/><text x="31.4699%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2199%" y="709" width="0.0803%" height="15" fill="rgb(249,228,52)" fg:x="389" fg:w="1"/><text x="31.4699%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.2199%" y="693" width="0.0803%" height="15" fill="rgb(219,60,51)" fg:x="389" fg:w="1"/><text x="31.4699%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="31.2199%" y="821" width="0.1605%" height="15" fill="rgb(240,198,24)" fg:x="389" fg:w="2"/><text x="31.4699%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="31.2199%" y="805" width="0.1605%" height="15" fill="rgb(240,192,40)" fg:x="389" fg:w="2"/><text x="31.4699%" y="815.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="31.3002%" y="789" width="0.0803%" height="15" fill="rgb(219,118,5)" fg:x="390" fg:w="1"/><text x="31.5502%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.3002%" y="773" width="0.0803%" height="15" fill="rgb(205,202,34)" fg:x="390" fg:w="1"/><text x="31.5502%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="31.3804%" y="805" width="0.1605%" height="15" fill="rgb(234,153,26)" fg:x="391" fg:w="2"/><text x="31.6304%" y="815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="31.4607%" y="789" width="0.0803%" height="15" fill="rgb(229,26,29)" fg:x="392" fg:w="1"/><text x="31.7107%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="31.4607%" y="773" width="0.0803%" height="15" fill="rgb(237,115,21)" fg:x="392" fg:w="1"/><text x="31.7107%" y="783.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="31.5409%" y="757" width="0.0803%" height="15" fill="rgb(252,144,15)" fg:x="393" fg:w="1"/><text x="31.7909%" y="767.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (347 samples, 27.85%)</title><rect x="3.8523%" y="853" width="27.8491%" height="15" fill="rgb(232,26,13)" fg:x="48" fg:w="347"/><text x="4.1023%" y="863.50">&lt;tests::HoldingKeyInVessel as tests::WorldFix..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (19 samples, 1.52%)</title><rect x="30.1766%" y="837" width="1.5249%" height="15" fill="rgb(206,44,19)" fg:x="376" fg:w="19"/><text x="30.4266%" y="847.50"></text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.32%)</title><rect x="31.3804%" y="821" width="0.3210%" height="15" fill="rgb(249,159,2)" fg:x="391" fg:w="4"/><text x="31.6304%" y="831.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="31.5409%" y="805" width="0.1605%" height="15" fill="rgb(231,5,32)" fg:x="393" fg:w="2"/><text x="31.7909%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="31.5409%" y="789" width="0.1605%" height="15" fill="rgb(249,210,18)" fg:x="393" fg:w="2"/><text x="31.7909%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="31.5409%" y="773" width="0.1605%" height="15" fill="rgb(215,223,36)" fg:x="393" fg:w="2"/><text x="31.7909%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.6212%" y="757" width="0.0803%" height="15" fill="rgb(245,185,20)" fg:x="394" fg:w="1"/><text x="31.8712%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.6212%" y="741" width="0.0803%" height="15" fill="rgb(206,224,11)" fg:x="394" fg:w="1"/><text x="31.8712%" y="751.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="31.7014%" y="821" width="0.0803%" height="15" fill="rgb(248,73,42)" fg:x="395" fg:w="1"/><text x="31.9514%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="31.7014%" y="805" width="0.0803%" height="15" fill="rgb(219,149,31)" fg:x="395" fg:w="1"/><text x="31.9514%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.7014%" y="789" width="0.0803%" height="15" fill="rgb(243,104,17)" fg:x="395" fg:w="1"/><text x="31.9514%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.7014%" y="773" width="0.0803%" height="15" fill="rgb(244,117,33)" fg:x="395" fg:w="1"/><text x="31.9514%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.7014%" y="757" width="0.0803%" height="15" fill="rgb(251,25,47)" fg:x="395" fg:w="1"/><text x="31.9514%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.9422%" y="693" width="0.0803%" height="15" fill="rgb(249,70,13)" fg:x="398" fg:w="1"/><text x="32.1922%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.9422%" y="677" width="0.0803%" height="15" fill="rgb(217,133,18)" fg:x="398" fg:w="1"/><text x="32.1922%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.9422%" y="661" width="0.0803%" height="15" fill="rgb(248,97,28)" fg:x="398" fg:w="1"/><text x="32.1922%" y="671.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.9422%" y="645" width="0.0803%" height="15" fill="rgb(237,193,4)" fg:x="398" fg:w="1"/><text x="32.1922%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.9422%" y="629" width="0.0803%" height="15" fill="rgb(247,198,45)" fg:x="398" fg:w="1"/><text x="32.1922%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.9422%" y="613" width="0.0803%" height="15" fill="rgb(245,2,20)" fg:x="398" fg:w="1"/><text x="32.1922%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.9422%" y="597" width="0.0803%" height="15" fill="rgb(210,71,36)" fg:x="398" fg:w="1"/><text x="32.1922%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.9422%" y="581" width="0.0803%" height="15" fill="rgb(238,114,30)" fg:x="398" fg:w="1"/><text x="32.1922%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.9422%" y="565" width="0.0803%" height="15" fill="rgb(241,200,2)" fg:x="398" fg:w="1"/><text x="32.1922%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="31.8620%" y="725" width="0.2408%" height="15" fill="rgb(232,106,18)" fg:x="397" fg:w="3"/><text x="32.1120%" y="735.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="31.8620%" y="709" width="0.2408%" height="15" fill="rgb(211,141,18)" fg:x="397" fg:w="3"/><text x="32.1120%" y="719.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="32.0225%" y="693" width="0.0803%" height="15" fill="rgb(224,9,9)" fg:x="399" fg:w="1"/><text x="32.2725%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.0225%" y="677" width="0.0803%" height="15" fill="rgb(249,137,46)" fg:x="399" fg:w="1"/><text x="32.2725%" y="687.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="32.0225%" y="661" width="0.0803%" height="15" fill="rgb(236,44,45)" fg:x="399" fg:w="1"/><text x="32.2725%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="31.7817%" y="773" width="0.4013%" height="15" fill="rgb(205,68,40)" fg:x="396" fg:w="5"/><text x="32.0317%" y="783.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (5 samples, 0.40%)</title><rect x="31.7817%" y="757" width="0.4013%" height="15" fill="rgb(214,198,49)" fg:x="396" fg:w="5"/><text x="32.0317%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (4 samples, 0.32%)</title><rect x="31.8620%" y="741" width="0.3210%" height="15" fill="rgb(226,140,45)" fg:x="397" fg:w="4"/><text x="32.1120%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.1027%" y="725" width="0.0803%" height="15" fill="rgb(209,109,20)" fg:x="400" fg:w="1"/><text x="32.3527%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.1027%" y="709" width="0.0803%" height="15" fill="rgb(217,33,46)" fg:x="400" fg:w="1"/><text x="32.3527%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.56%)</title><rect x="31.7014%" y="837" width="0.5618%" height="15" fill="rgb(232,150,33)" fg:x="395" fg:w="7"/><text x="31.9514%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.48%)</title><rect x="31.7817%" y="821" width="0.4815%" height="15" fill="rgb(233,76,25)" fg:x="396" fg:w="6"/><text x="32.0317%" y="831.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="31.7817%" y="805" width="0.4815%" height="15" fill="rgb(254,219,23)" fg:x="396" fg:w="6"/><text x="32.0317%" y="815.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.48%)</title><rect x="31.7817%" y="789" width="0.4815%" height="15" fill="rgb(233,108,4)" fg:x="396" fg:w="6"/><text x="32.0317%" y="799.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.08%)</title><rect x="32.1830%" y="773" width="0.0803%" height="15" fill="rgb(229,98,6)" fg:x="401" fg:w="1"/><text x="32.4330%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2632%" y="629" width="0.0803%" height="15" fill="rgb(217,40,27)" fg:x="402" fg:w="1"/><text x="32.5132%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2632%" y="613" width="0.0803%" height="15" fill="rgb(221,35,43)" fg:x="402" fg:w="1"/><text x="32.5132%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.2632%" y="597" width="0.0803%" height="15" fill="rgb(212,107,11)" fg:x="402" fg:w="1"/><text x="32.5132%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.2632%" y="581" width="0.0803%" height="15" fill="rgb(245,42,44)" fg:x="402" fg:w="1"/><text x="32.5132%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.2632%" y="565" width="0.0803%" height="15" fill="rgb(209,31,12)" fg:x="402" fg:w="1"/><text x="32.5132%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2632%" y="549" width="0.0803%" height="15" fill="rgb(210,228,54)" fg:x="402" fg:w="1"/><text x="32.5132%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2632%" y="533" width="0.0803%" height="15" fill="rgb(241,19,33)" fg:x="402" fg:w="1"/><text x="32.5132%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.2632%" y="517" width="0.0803%" height="15" fill="rgb(229,51,27)" fg:x="402" fg:w="1"/><text x="32.5132%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.2632%" y="501" width="0.0803%" height="15" fill="rgb(214,167,49)" fg:x="402" fg:w="1"/><text x="32.5132%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.2632%" y="485" width="0.0803%" height="15" fill="rgb(248,140,47)" fg:x="402" fg:w="1"/><text x="32.5132%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.2632%" y="469" width="0.0803%" height="15" fill="rgb(228,6,51)" fg:x="402" fg:w="1"/><text x="32.5132%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2632%" y="453" width="0.0803%" height="15" fill="rgb(242,44,53)" fg:x="402" fg:w="1"/><text x="32.5132%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3435%" y="629" width="0.0803%" height="15" fill="rgb(249,90,50)" fg:x="403" fg:w="1"/><text x="32.5935%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="32.2632%" y="805" width="0.3210%" height="15" fill="rgb(222,84,19)" fg:x="402" fg:w="4"/><text x="32.5132%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="32.2632%" y="789" width="0.3210%" height="15" fill="rgb(214,140,12)" fg:x="402" fg:w="4"/><text x="32.5132%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="32.2632%" y="773" width="0.3210%" height="15" fill="rgb(210,20,43)" fg:x="402" fg:w="4"/><text x="32.5132%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="32.2632%" y="757" width="0.3210%" height="15" fill="rgb(243,1,40)" fg:x="402" fg:w="4"/><text x="32.5132%" y="767.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="32.2632%" y="741" width="0.3210%" height="15" fill="rgb(224,102,26)" fg:x="402" fg:w="4"/><text x="32.5132%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="32.2632%" y="725" width="0.3210%" height="15" fill="rgb(221,179,1)" fg:x="402" fg:w="4"/><text x="32.5132%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="32.2632%" y="709" width="0.3210%" height="15" fill="rgb(216,209,47)" fg:x="402" fg:w="4"/><text x="32.5132%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="32.2632%" y="693" width="0.3210%" height="15" fill="rgb(251,135,9)" fg:x="402" fg:w="4"/><text x="32.5132%" y="703.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="32.2632%" y="677" width="0.3210%" height="15" fill="rgb(242,9,36)" fg:x="402" fg:w="4"/><text x="32.5132%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="32.2632%" y="661" width="0.3210%" height="15" fill="rgb(249,60,37)" fg:x="402" fg:w="4"/><text x="32.5132%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="32.2632%" y="645" width="0.3210%" height="15" fill="rgb(230,66,45)" fg:x="402" fg:w="4"/><text x="32.5132%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="32.4238%" y="629" width="0.1605%" height="15" fill="rgb(216,1,47)" fg:x="404" fg:w="2"/><text x="32.6738%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="32.4238%" y="613" width="0.1605%" height="15" fill="rgb(235,8,23)" fg:x="404" fg:w="2"/><text x="32.6738%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="32.4238%" y="597" width="0.1605%" height="15" fill="rgb(225,136,11)" fg:x="404" fg:w="2"/><text x="32.6738%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="32.4238%" y="581" width="0.1605%" height="15" fill="rgb(228,63,44)" fg:x="404" fg:w="2"/><text x="32.6738%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="32.4238%" y="565" width="0.1605%" height="15" fill="rgb(240,43,52)" fg:x="404" fg:w="2"/><text x="32.6738%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.5040%" y="549" width="0.0803%" height="15" fill="rgb(217,167,36)" fg:x="405" fg:w="1"/><text x="32.7540%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.5040%" y="533" width="0.0803%" height="15" fill="rgb(250,19,6)" fg:x="405" fg:w="1"/><text x="32.7540%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.5040%" y="517" width="0.0803%" height="15" fill="rgb(236,60,51)" fg:x="405" fg:w="1"/><text x="32.7540%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.5040%" y="501" width="0.0803%" height="15" fill="rgb(222,217,20)" fg:x="405" fg:w="1"/><text x="32.7540%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="32.5040%" y="485" width="0.0803%" height="15" fill="rgb(242,65,52)" fg:x="405" fg:w="1"/><text x="32.7540%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="32.5040%" y="469" width="0.0803%" height="15" fill="rgb(217,5,41)" fg:x="405" fg:w="1"/><text x="32.7540%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="32.5040%" y="453" width="0.0803%" height="15" fill="rgb(223,208,53)" fg:x="405" fg:w="1"/><text x="32.7540%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="32.5040%" y="437" width="0.0803%" height="15" fill="rgb(221,104,30)" fg:x="405" fg:w="1"/><text x="32.7540%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.5040%" y="421" width="0.0803%" height="15" fill="rgb(230,210,42)" fg:x="405" fg:w="1"/><text x="32.7540%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.5040%" y="405" width="0.0803%" height="15" fill="rgb(206,205,27)" fg:x="405" fg:w="1"/><text x="32.7540%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="32.5040%" y="389" width="0.0803%" height="15" fill="rgb(233,114,38)" fg:x="405" fg:w="1"/><text x="32.7540%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="32.5040%" y="373" width="0.0803%" height="15" fill="rgb(216,174,36)" fg:x="405" fg:w="1"/><text x="32.7540%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.5040%" y="357" width="0.0803%" height="15" fill="rgb(211,30,9)" fg:x="405" fg:w="1"/><text x="32.7540%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="32.5040%" y="341" width="0.0803%" height="15" fill="rgb(216,8,21)" fg:x="405" fg:w="1"/><text x="32.7540%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="32.5040%" y="325" width="0.0803%" height="15" fill="rgb(237,209,39)" fg:x="405" fg:w="1"/><text x="32.7540%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="32.5040%" y="309" width="0.0803%" height="15" fill="rgb(235,111,47)" fg:x="405" fg:w="1"/><text x="32.7540%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="32.5040%" y="293" width="0.0803%" height="15" fill="rgb(216,139,9)" fg:x="405" fg:w="1"/><text x="32.7540%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.5843%" y="725" width="0.1605%" height="15" fill="rgb(248,185,4)" fg:x="406" fg:w="2"/><text x="32.8343%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5843%" y="709" width="0.1605%" height="15" fill="rgb(239,185,25)" fg:x="406" fg:w="2"/><text x="32.8343%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.5843%" y="693" width="0.1605%" height="15" fill="rgb(233,207,8)" fg:x="406" fg:w="2"/><text x="32.8343%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.5843%" y="677" width="0.1605%" height="15" fill="rgb(249,220,24)" fg:x="406" fg:w="2"/><text x="32.8343%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="32.5843%" y="661" width="0.1605%" height="15" fill="rgb(221,50,14)" fg:x="406" fg:w="2"/><text x="32.8343%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="32.5843%" y="645" width="0.1605%" height="15" fill="rgb(227,79,42)" fg:x="406" fg:w="2"/><text x="32.8343%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="32.5843%" y="629" width="0.1605%" height="15" fill="rgb(228,218,49)" fg:x="406" fg:w="2"/><text x="32.8343%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.5843%" y="613" width="0.1605%" height="15" fill="rgb(249,18,15)" fg:x="406" fg:w="2"/><text x="32.8343%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.5843%" y="597" width="0.1605%" height="15" fill="rgb(212,84,27)" fg:x="406" fg:w="2"/><text x="32.8343%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="32.5843%" y="581" width="0.1605%" height="15" fill="rgb(207,83,24)" fg:x="406" fg:w="2"/><text x="32.8343%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="32.5843%" y="565" width="0.1605%" height="15" fill="rgb(219,61,7)" fg:x="406" fg:w="2"/><text x="32.8343%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="32.5843%" y="549" width="0.1605%" height="15" fill="rgb(211,43,29)" fg:x="406" fg:w="2"/><text x="32.8343%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="32.5843%" y="533" width="0.1605%" height="15" fill="rgb(243,15,23)" fg:x="406" fg:w="2"/><text x="32.8343%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.5843%" y="517" width="0.1605%" height="15" fill="rgb(217,52,28)" fg:x="406" fg:w="2"/><text x="32.8343%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="32.5843%" y="757" width="0.2408%" height="15" fill="rgb(210,35,6)" fg:x="406" fg:w="3"/><text x="32.8343%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.5843%" y="741" width="0.2408%" height="15" fill="rgb(237,187,28)" fg:x="406" fg:w="3"/><text x="32.8343%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.7448%" y="725" width="0.0803%" height="15" fill="rgb(231,136,24)" fg:x="408" fg:w="1"/><text x="32.9948%" y="735.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="32.8250%" y="757" width="0.0803%" height="15" fill="rgb(205,176,52)" fg:x="409" fg:w="1"/><text x="33.0750%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.8250%" y="741" width="0.0803%" height="15" fill="rgb(218,65,12)" fg:x="409" fg:w="1"/><text x="33.0750%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="32.9856%" y="725" width="0.0803%" height="15" fill="rgb(234,101,21)" fg:x="411" fg:w="1"/><text x="33.2356%" y="735.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="32.9856%" y="709" width="0.0803%" height="15" fill="rgb(206,13,20)" fg:x="411" fg:w="1"/><text x="33.2356%" y="719.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="32.9856%" y="693" width="0.0803%" height="15" fill="rgb(236,89,44)" fg:x="411" fg:w="1"/><text x="33.2356%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.9856%" y="677" width="0.0803%" height="15" fill="rgb(225,52,17)" fg:x="411" fg:w="1"/><text x="33.2356%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9856%" y="661" width="0.0803%" height="15" fill="rgb(214,27,25)" fg:x="411" fg:w="1"/><text x="33.2356%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="33.0658%" y="725" width="0.2408%" height="15" fill="rgb(240,141,35)" fg:x="412" fg:w="3"/><text x="33.3158%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="33.0658%" y="709" width="0.2408%" height="15" fill="rgb(216,126,3)" fg:x="412" fg:w="3"/><text x="33.3158%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="33.1461%" y="693" width="0.1605%" height="15" fill="rgb(249,196,23)" fg:x="413" fg:w="2"/><text x="33.3961%" y="703.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="33.2263%" y="677" width="0.0803%" height="15" fill="rgb(215,185,43)" fg:x="414" fg:w="1"/><text x="33.4763%" y="687.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (14 samples, 1.12%)</title><rect x="32.2632%" y="821" width="1.1236%" height="15" fill="rgb(208,194,36)" fg:x="402" fg:w="14"/><text x="32.5132%" y="831.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (10 samples, 0.80%)</title><rect x="32.5843%" y="805" width="0.8026%" height="15" fill="rgb(245,182,12)" fg:x="406" fg:w="10"/><text x="32.8343%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.80%)</title><rect x="32.5843%" y="789" width="0.8026%" height="15" fill="rgb(244,222,52)" fg:x="406" fg:w="10"/><text x="32.8343%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="32.5843%" y="773" width="0.8026%" height="15" fill="rgb(236,222,51)" fg:x="406" fg:w="10"/><text x="32.8343%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="32.9053%" y="757" width="0.4815%" height="15" fill="rgb(254,71,22)" fg:x="410" fg:w="6"/><text x="33.1553%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="32.9053%" y="741" width="0.4815%" height="15" fill="rgb(250,104,15)" fg:x="410" fg:w="6"/><text x="33.1553%" y="751.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="33.3066%" y="725" width="0.0803%" height="15" fill="rgb(229,223,46)" fg:x="415" fg:w="1"/><text x="33.5566%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3868%" y="821" width="0.0803%" height="15" fill="rgb(209,129,18)" fg:x="416" fg:w="1"/><text x="33.6368%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="33.4671%" y="821" width="0.0803%" height="15" fill="rgb(224,160,1)" fg:x="417" fg:w="1"/><text x="33.7171%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (1 samples, 0.08%)</title><rect x="33.4671%" y="805" width="0.0803%" height="15" fill="rgb(237,112,21)" fg:x="417" fg:w="1"/><text x="33.7171%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.4671%" y="789" width="0.0803%" height="15" fill="rgb(215,198,53)" fg:x="417" fg:w="1"/><text x="33.7171%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.5474%" y="805" width="0.0803%" height="15" fill="rgb(218,227,35)" fg:x="418" fg:w="1"/><text x="33.7974%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="33.5474%" y="789" width="0.0803%" height="15" fill="rgb(232,121,22)" fg:x="418" fg:w="1"/><text x="33.7974%" y="799.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="33.5474%" y="773" width="0.0803%" height="15" fill="rgb(235,52,54)" fg:x="418" fg:w="1"/><text x="33.7974%" y="783.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="33.5474%" y="757" width="0.0803%" height="15" fill="rgb(219,21,44)" fg:x="418" fg:w="1"/><text x="33.7974%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6276%" y="773" width="0.0803%" height="15" fill="rgb(221,51,43)" fg:x="419" fg:w="1"/><text x="33.8776%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6276%" y="757" width="0.0803%" height="15" fill="rgb(225,77,42)" fg:x="419" fg:w="1"/><text x="33.8776%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.6276%" y="741" width="0.0803%" height="15" fill="rgb(214,117,53)" fg:x="419" fg:w="1"/><text x="33.8776%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.6276%" y="725" width="0.0803%" height="15" fill="rgb(218,227,27)" fg:x="419" fg:w="1"/><text x="33.8776%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.6276%" y="709" width="0.0803%" height="15" fill="rgb(223,214,36)" fg:x="419" fg:w="1"/><text x="33.8776%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6276%" y="693" width="0.0803%" height="15" fill="rgb(235,21,7)" fg:x="419" fg:w="1"/><text x="33.8776%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6276%" y="677" width="0.0803%" height="15" fill="rgb(244,216,4)" fg:x="419" fg:w="1"/><text x="33.8776%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.6276%" y="661" width="0.0803%" height="15" fill="rgb(249,197,24)" fg:x="419" fg:w="1"/><text x="33.8776%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.6276%" y="645" width="0.0803%" height="15" fill="rgb(222,169,49)" fg:x="419" fg:w="1"/><text x="33.8776%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.6276%" y="629" width="0.0803%" height="15" fill="rgb(207,137,33)" fg:x="419" fg:w="1"/><text x="33.8776%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.6276%" y="613" width="0.0803%" height="15" fill="rgb(219,180,40)" fg:x="419" fg:w="1"/><text x="33.8776%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6276%" y="597" width="0.0803%" height="15" fill="rgb(250,163,42)" fg:x="419" fg:w="1"/><text x="33.8776%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="33.7079%" y="773" width="0.0803%" height="15" fill="rgb(239,163,0)" fg:x="420" fg:w="1"/><text x="33.9579%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="33.7079%" y="757" width="0.0803%" height="15" fill="rgb(252,38,28)" fg:x="420" fg:w="1"/><text x="33.9579%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.7079%" y="741" width="0.0803%" height="15" fill="rgb(254,203,26)" fg:x="420" fg:w="1"/><text x="33.9579%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.7881%" y="757" width="0.0803%" height="15" fill="rgb(209,129,32)" fg:x="421" fg:w="1"/><text x="34.0381%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="34.0289%" y="741" width="0.3210%" height="15" fill="rgb(207,177,52)" fg:x="424" fg:w="4"/><text x="34.2789%" y="751.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="34.0289%" y="725" width="0.3210%" height="15" fill="rgb(230,209,36)" fg:x="424" fg:w="4"/><text x="34.2789%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="34.1091%" y="709" width="0.2408%" height="15" fill="rgb(238,131,0)" fg:x="425" fg:w="3"/><text x="34.3591%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.2697%" y="693" width="0.0803%" height="15" fill="rgb(218,61,31)" fg:x="427" fg:w="1"/><text x="34.5197%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="33.8684%" y="757" width="0.5618%" height="15" fill="rgb(232,6,53)" fg:x="422" fg:w="7"/><text x="34.1184%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.3499%" y="741" width="0.0803%" height="15" fill="rgb(254,100,32)" fg:x="428" fg:w="1"/><text x="34.5999%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.3499%" y="725" width="0.0803%" height="15" fill="rgb(229,194,49)" fg:x="428" fg:w="1"/><text x="34.5999%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="34.3499%" y="709" width="0.0803%" height="15" fill="rgb(206,208,39)" fg:x="428" fg:w="1"/><text x="34.5999%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="34.4302%" y="741" width="0.2408%" height="15" fill="rgb(246,226,14)" fg:x="429" fg:w="3"/><text x="34.6802%" y="751.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="34.4302%" y="725" width="0.2408%" height="15" fill="rgb(226,48,32)" fg:x="429" fg:w="3"/><text x="34.6802%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="34.4302%" y="709" width="0.2408%" height="15" fill="rgb(252,43,54)" fg:x="429" fg:w="3"/><text x="34.6802%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="34.4302%" y="693" width="0.2408%" height="15" fill="rgb(207,124,0)" fg:x="429" fg:w="3"/><text x="34.6802%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="34.5104%" y="677" width="0.1605%" height="15" fill="rgb(248,188,30)" fg:x="430" fg:w="2"/><text x="34.7604%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="34.5104%" y="661" width="0.1605%" height="15" fill="rgb(232,14,43)" fg:x="430" fg:w="2"/><text x="34.7604%" y="671.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="34.5104%" y="645" width="0.1605%" height="15" fill="rgb(218,52,29)" fg:x="430" fg:w="2"/><text x="34.7604%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="34.6709%" y="693" width="0.1605%" height="15" fill="rgb(218,176,50)" fg:x="432" fg:w="2"/><text x="34.9209%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.6709%" y="677" width="0.1605%" height="15" fill="rgb(213,112,0)" fg:x="432" fg:w="2"/><text x="34.9209%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.7512%" y="661" width="0.0803%" height="15" fill="rgb(244,216,8)" fg:x="433" fg:w="1"/><text x="35.0012%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.7512%" y="645" width="0.0803%" height="15" fill="rgb(224,148,53)" fg:x="433" fg:w="1"/><text x="35.0012%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="34.8315%" y="693" width="0.0803%" height="15" fill="rgb(241,133,40)" fg:x="434" fg:w="1"/><text x="35.0815%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="34.8315%" y="677" width="0.0803%" height="15" fill="rgb(232,17,44)" fg:x="434" fg:w="1"/><text x="35.0815%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="34.6709%" y="709" width="0.3210%" height="15" fill="rgb(213,32,25)" fg:x="432" fg:w="4"/><text x="34.9209%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.9117%" y="693" width="0.0803%" height="15" fill="rgb(249,115,27)" fg:x="435" fg:w="1"/><text x="35.1617%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.9117%" y="677" width="0.0803%" height="15" fill="rgb(241,50,1)" fg:x="435" fg:w="1"/><text x="35.1617%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="34.6709%" y="725" width="0.4013%" height="15" fill="rgb(244,175,40)" fg:x="432" fg:w="5"/><text x="34.9209%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.9920%" y="709" width="0.0803%" height="15" fill="rgb(230,94,34)" fg:x="436" fg:w="1"/><text x="35.2420%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.9920%" y="693" width="0.0803%" height="15" fill="rgb(223,185,29)" fg:x="436" fg:w="1"/><text x="35.2420%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.9920%" y="677" width="0.0803%" height="15" fill="rgb(225,193,15)" fg:x="436" fg:w="1"/><text x="35.2420%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="35.0722%" y="725" width="0.2408%" height="15" fill="rgb(252,121,38)" fg:x="437" fg:w="3"/><text x="35.3222%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.1525%" y="709" width="0.1605%" height="15" fill="rgb(232,44,12)" fg:x="438" fg:w="2"/><text x="35.4025%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.2327%" y="693" width="0.0803%" height="15" fill="rgb(226,45,54)" fg:x="439" fg:w="1"/><text x="35.4827%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.2327%" y="677" width="0.0803%" height="15" fill="rgb(209,67,17)" fg:x="439" fg:w="1"/><text x="35.4827%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.2327%" y="661" width="0.0803%" height="15" fill="rgb(219,108,52)" fg:x="439" fg:w="1"/><text x="35.4827%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.2327%" y="645" width="0.0803%" height="15" fill="rgb(216,118,19)" fg:x="439" fg:w="1"/><text x="35.4827%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.2327%" y="629" width="0.0803%" height="15" fill="rgb(228,120,40)" fg:x="439" fg:w="1"/><text x="35.4827%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.3130%" y="709" width="0.0803%" height="15" fill="rgb(221,218,34)" fg:x="440" fg:w="1"/><text x="35.5630%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="35.3933%" y="709" width="0.0803%" height="15" fill="rgb(235,89,14)" fg:x="441" fg:w="1"/><text x="35.6433%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="35.4735%" y="693" width="0.0803%" height="15" fill="rgb(248,89,7)" fg:x="442" fg:w="1"/><text x="35.7235%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.4735%" y="677" width="0.0803%" height="15" fill="rgb(212,114,34)" fg:x="442" fg:w="1"/><text x="35.7235%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.7143%" y="677" width="0.1605%" height="15" fill="rgb(246,88,32)" fg:x="445" fg:w="2"/><text x="35.9643%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="35.8748%" y="661" width="0.0803%" height="15" fill="rgb(237,135,0)" fg:x="447" fg:w="1"/><text x="36.1248%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.8748%" y="645" width="0.0803%" height="15" fill="rgb(220,201,54)" fg:x="447" fg:w="1"/><text x="36.1248%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.8748%" y="629" width="0.0803%" height="15" fill="rgb(210,142,36)" fg:x="447" fg:w="1"/><text x="36.1248%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.8748%" y="613" width="0.0803%" height="15" fill="rgb(247,189,26)" fg:x="447" fg:w="1"/><text x="36.1248%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.8748%" y="597" width="0.0803%" height="15" fill="rgb(223,89,24)" fg:x="447" fg:w="1"/><text x="36.1248%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.8748%" y="581" width="0.0803%" height="15" fill="rgb(205,90,19)" fg:x="447" fg:w="1"/><text x="36.1248%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.8748%" y="565" width="0.0803%" height="15" fill="rgb(234,57,40)" fg:x="447" fg:w="1"/><text x="36.1248%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="35.8748%" y="677" width="0.1605%" height="15" fill="rgb(213,109,10)" fg:x="447" fg:w="2"/><text x="36.1248%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.9551%" y="661" width="0.0803%" height="15" fill="rgb(214,189,23)" fg:x="448" fg:w="1"/><text x="36.2051%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.9551%" y="645" width="0.0803%" height="15" fill="rgb(234,200,10)" fg:x="448" fg:w="1"/><text x="36.2051%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.9551%" y="629" width="0.0803%" height="15" fill="rgb(221,148,16)" fg:x="448" fg:w="1"/><text x="36.2051%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="36.0353%" y="645" width="0.2408%" height="15" fill="rgb(230,115,10)" fg:x="449" fg:w="3"/><text x="36.2853%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="36.0353%" y="629" width="0.2408%" height="15" fill="rgb(220,106,42)" fg:x="449" fg:w="3"/><text x="36.2853%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="36.0353%" y="613" width="0.2408%" height="15" fill="rgb(225,105,39)" fg:x="449" fg:w="3"/><text x="36.2853%" y="623.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="36.0353%" y="597" width="0.2408%" height="15" fill="rgb(211,161,38)" fg:x="449" fg:w="3"/><text x="36.2853%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="35.4735%" y="709" width="0.8828%" height="15" fill="rgb(213,23,19)" fg:x="442" fg:w="11"/><text x="35.7235%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="35.5538%" y="693" width="0.8026%" height="15" fill="rgb(240,2,33)" fg:x="443" fg:w="10"/><text x="35.8038%" y="703.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="36.0353%" y="677" width="0.3210%" height="15" fill="rgb(221,29,45)" fg:x="449" fg:w="4"/><text x="36.2853%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="36.0353%" y="661" width="0.3210%" height="15" fill="rgb(242,10,19)" fg:x="449" fg:w="4"/><text x="36.2853%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="36.2761%" y="645" width="0.0803%" height="15" fill="rgb(250,84,37)" fg:x="452" fg:w="1"/><text x="36.5261%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="35.3130%" y="725" width="1.1236%" height="15" fill="rgb(214,136,7)" fg:x="440" fg:w="14"/><text x="35.5630%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.3563%" y="709" width="0.0803%" height="15" fill="rgb(231,189,12)" fg:x="453" fg:w="1"/><text x="36.6063%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.3563%" y="693" width="0.0803%" height="15" fill="rgb(244,40,16)" fg:x="453" fg:w="1"/><text x="36.6063%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.93%)</title><rect x="34.6709%" y="741" width="1.9262%" height="15" fill="rgb(217,29,15)" fg:x="432" fg:w="24"/><text x="34.9209%" y="751.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.4366%" y="725" width="0.1605%" height="15" fill="rgb(235,172,33)" fg:x="454" fg:w="2"/><text x="36.6866%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="36.7576%" y="709" width="0.2408%" height="15" fill="rgb(206,148,28)" fg:x="458" fg:w="3"/><text x="37.0076%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="36.8379%" y="693" width="0.1605%" height="15" fill="rgb(251,167,37)" fg:x="459" fg:w="2"/><text x="37.0879%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="36.8379%" y="677" width="0.1605%" height="15" fill="rgb(229,94,52)" fg:x="459" fg:w="2"/><text x="37.0879%" y="687.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="36.8379%" y="661" width="0.1605%" height="15" fill="rgb(216,132,9)" fg:x="459" fg:w="2"/><text x="37.0879%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (41 samples, 3.29%)</title><rect x="33.7881%" y="773" width="3.2905%" height="15" fill="rgb(208,110,29)" fg:x="421" fg:w="41"/><text x="34.0381%" y="783.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.65%)</title><rect x="34.4302%" y="757" width="2.6485%" height="15" fill="rgb(241,23,8)" fg:x="429" fg:w="33"/><text x="34.6802%" y="767.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="36.5971%" y="741" width="0.4815%" height="15" fill="rgb(208,26,35)" fg:x="456" fg:w="6"/><text x="36.8471%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="36.6774%" y="725" width="0.4013%" height="15" fill="rgb(242,165,34)" fg:x="457" fg:w="5"/><text x="36.9274%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="36.9984%" y="709" width="0.0803%" height="15" fill="rgb(222,222,33)" fg:x="461" fg:w="1"/><text x="37.2484%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.1589%" y="741" width="0.0803%" height="15" fill="rgb(227,16,52)" fg:x="463" fg:w="1"/><text x="37.4089%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1589%" y="725" width="0.0803%" height="15" fill="rgb(213,93,12)" fg:x="463" fg:w="1"/><text x="37.4089%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.3997%" y="709" width="0.0803%" height="15" fill="rgb(238,41,5)" fg:x="466" fg:w="1"/><text x="37.6497%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="37.5602%" y="693" width="0.0803%" height="15" fill="rgb(211,60,15)" fg:x="468" fg:w="1"/><text x="37.8102%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.5602%" y="677" width="0.0803%" height="15" fill="rgb(209,11,34)" fg:x="468" fg:w="1"/><text x="37.8102%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.5602%" y="661" width="0.0803%" height="15" fill="rgb(254,155,53)" fg:x="468" fg:w="1"/><text x="37.8102%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.5602%" y="645" width="0.0803%" height="15" fill="rgb(236,174,8)" fg:x="468" fg:w="1"/><text x="37.8102%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.7207%" y="677" width="0.0803%" height="15" fill="rgb(229,31,27)" fg:x="470" fg:w="1"/><text x="37.9707%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7207%" y="661" width="0.0803%" height="15" fill="rgb(242,226,26)" fg:x="470" fg:w="1"/><text x="37.9707%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="37.0787%" y="773" width="0.9631%" height="15" fill="rgb(234,32,40)" fg:x="462" fg:w="12"/><text x="37.3287%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="37.0787%" y="757" width="0.9631%" height="15" fill="rgb(249,226,47)" fg:x="462" fg:w="12"/><text x="37.3287%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="37.2392%" y="741" width="0.8026%" height="15" fill="rgb(212,6,26)" fg:x="464" fg:w="10"/><text x="37.4892%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="37.2392%" y="725" width="0.8026%" height="15" fill="rgb(249,202,29)" fg:x="464" fg:w="10"/><text x="37.4892%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="37.4799%" y="709" width="0.5618%" height="15" fill="rgb(226,106,4)" fg:x="467" fg:w="7"/><text x="37.7299%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="37.6404%" y="693" width="0.4013%" height="15" fill="rgb(251,2,27)" fg:x="469" fg:w="5"/><text x="37.8904%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="37.8010%" y="677" width="0.2408%" height="15" fill="rgb(236,208,0)" fg:x="471" fg:w="3"/><text x="38.0510%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.9615%" y="661" width="0.0803%" height="15" fill="rgb(211,66,17)" fg:x="473" fg:w="1"/><text x="38.2115%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.9615%" y="645" width="0.0803%" height="15" fill="rgb(216,129,9)" fg:x="473" fg:w="1"/><text x="38.2115%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.2825%" y="709" width="0.0803%" height="15" fill="rgb(215,130,23)" fg:x="477" fg:w="1"/><text x="38.5325%" y="719.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="38.3628%" y="693" width="0.2408%" height="15" fill="rgb(253,157,11)" fg:x="478" fg:w="3"/><text x="38.6128%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="38.6035%" y="693" width="0.4013%" height="15" fill="rgb(224,25,14)" fg:x="481" fg:w="5"/><text x="38.8535%" y="703.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="38.7640%" y="677" width="0.2408%" height="15" fill="rgb(238,16,7)" fg:x="483" fg:w="3"/><text x="39.0140%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="39.0048%" y="677" width="0.2408%" height="15" fill="rgb(228,74,11)" fg:x="486" fg:w="3"/><text x="39.2548%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.0851%" y="661" width="0.1605%" height="15" fill="rgb(239,221,27)" fg:x="487" fg:w="2"/><text x="39.3351%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.3258%" y="661" width="0.0803%" height="15" fill="rgb(229,166,18)" fg:x="490" fg:w="1"/><text x="39.5758%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4061%" y="645" width="0.0803%" height="15" fill="rgb(254,94,46)" fg:x="491" fg:w="1"/><text x="39.6561%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.69%)</title><rect x="38.1220%" y="741" width="1.6854%" height="15" fill="rgb(241,79,19)" fg:x="475" fg:w="21"/><text x="38.3720%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (21 samples, 1.69%)</title><rect x="38.1220%" y="725" width="1.6854%" height="15" fill="rgb(228,99,51)" fg:x="475" fg:w="21"/><text x="38.3720%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.44%)</title><rect x="38.3628%" y="709" width="1.4446%" height="15" fill="rgb(211,15,6)" fg:x="478" fg:w="18"/><text x="38.6128%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="39.0048%" y="693" width="0.8026%" height="15" fill="rgb(245,107,54)" fg:x="486" fg:w="10"/><text x="39.2548%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="39.2456%" y="677" width="0.5618%" height="15" fill="rgb(243,3,2)" fg:x="489" fg:w="7"/><text x="39.4956%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="39.4061%" y="661" width="0.4013%" height="15" fill="rgb(206,122,10)" fg:x="491" fg:w="5"/><text x="39.6561%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="39.4864%" y="645" width="0.3210%" height="15" fill="rgb(224,88,4)" fg:x="492" fg:w="4"/><text x="39.7364%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.6469%" y="629" width="0.1605%" height="15" fill="rgb(230,1,41)" fg:x="494" fg:w="2"/><text x="39.8969%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="39.8074%" y="741" width="0.1605%" height="15" fill="rgb(230,1,31)" fg:x="496" fg:w="2"/><text x="40.0574%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="40.2087%" y="677" width="0.0803%" height="15" fill="rgb(232,67,19)" fg:x="501" fg:w="1"/><text x="40.4587%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.2087%" y="661" width="0.0803%" height="15" fill="rgb(222,206,20)" fg:x="501" fg:w="1"/><text x="40.4587%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="39.9679%" y="709" width="0.5618%" height="15" fill="rgb(217,225,19)" fg:x="498" fg:w="7"/><text x="40.2179%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="40.1284%" y="693" width="0.4013%" height="15" fill="rgb(234,13,33)" fg:x="500" fg:w="5"/><text x="40.3784%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="40.2889%" y="677" width="0.2408%" height="15" fill="rgb(254,5,1)" fg:x="502" fg:w="3"/><text x="40.5389%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="40.3692%" y="661" width="0.1605%" height="15" fill="rgb(211,121,41)" fg:x="503" fg:w="2"/><text x="40.6192%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.4494%" y="645" width="0.0803%" height="15" fill="rgb(213,199,35)" fg:x="504" fg:w="1"/><text x="40.6994%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.4494%" y="629" width="0.0803%" height="15" fill="rgb(240,118,22)" fg:x="504" fg:w="1"/><text x="40.6994%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.4494%" y="613" width="0.0803%" height="15" fill="rgb(238,184,25)" fg:x="504" fg:w="1"/><text x="40.6994%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="39.9679%" y="725" width="0.7223%" height="15" fill="rgb(210,165,6)" fg:x="498" fg:w="9"/><text x="40.2179%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="40.5297%" y="709" width="0.1605%" height="15" fill="rgb(235,149,5)" fg:x="505" fg:w="2"/><text x="40.7797%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6902%" y="725" width="0.0803%" height="15" fill="rgb(221,63,5)" fg:x="507" fg:w="1"/><text x="40.9402%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6902%" y="709" width="0.0803%" height="15" fill="rgb(250,44,41)" fg:x="507" fg:w="1"/><text x="40.9402%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.6902%" y="693" width="0.0803%" height="15" fill="rgb(235,112,47)" fg:x="507" fg:w="1"/><text x="40.9402%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.6902%" y="677" width="0.0803%" height="15" fill="rgb(252,176,34)" fg:x="507" fg:w="1"/><text x="40.9402%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.6902%" y="661" width="0.0803%" height="15" fill="rgb(234,50,19)" fg:x="507" fg:w="1"/><text x="40.9402%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6902%" y="645" width="0.0803%" height="15" fill="rgb(241,195,31)" fg:x="507" fg:w="1"/><text x="40.9402%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6902%" y="629" width="0.0803%" height="15" fill="rgb(212,93,11)" fg:x="507" fg:w="1"/><text x="40.9402%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.6902%" y="613" width="0.0803%" height="15" fill="rgb(254,98,51)" fg:x="507" fg:w="1"/><text x="40.9402%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.6902%" y="597" width="0.0803%" height="15" fill="rgb(246,18,45)" fg:x="507" fg:w="1"/><text x="40.9402%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.6902%" y="581" width="0.0803%" height="15" fill="rgb(215,148,23)" fg:x="507" fg:w="1"/><text x="40.9402%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.6902%" y="565" width="0.0803%" height="15" fill="rgb(227,22,7)" fg:x="507" fg:w="1"/><text x="40.9402%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6902%" y="549" width="0.0803%" height="15" fill="rgb(207,210,37)" fg:x="507" fg:w="1"/><text x="40.9402%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.7705%" y="725" width="0.0803%" height="15" fill="rgb(247,147,42)" fg:x="508" fg:w="1"/><text x="41.0205%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.8507%" y="725" width="0.1605%" height="15" fill="rgb(226,213,14)" fg:x="509" fg:w="2"/><text x="41.1007%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="41.0112%" y="725" width="0.0803%" height="15" fill="rgb(223,18,10)" fg:x="511" fg:w="1"/><text x="41.2612%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.0112%" y="709" width="0.0803%" height="15" fill="rgb(253,34,22)" fg:x="511" fg:w="1"/><text x="41.2612%" y="719.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="41.0112%" y="693" width="0.0803%" height="15" fill="rgb(222,90,31)" fg:x="511" fg:w="1"/><text x="41.2612%" y="703.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.0112%" y="677" width="0.0803%" height="15" fill="rgb(220,182,30)" fg:x="511" fg:w="1"/><text x="41.2612%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="41.0915%" y="709" width="0.1605%" height="15" fill="rgb(229,170,12)" fg:x="512" fg:w="2"/><text x="41.3415%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.2520%" y="709" width="0.0803%" height="15" fill="rgb(210,101,21)" fg:x="514" fg:w="1"/><text x="41.5020%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="41.3323%" y="709" width="0.0803%" height="15" fill="rgb(237,177,31)" fg:x="515" fg:w="1"/><text x="41.5823%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.3323%" y="693" width="0.0803%" height="15" fill="rgb(215,91,34)" fg:x="515" fg:w="1"/><text x="41.5823%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.3323%" y="677" width="0.0803%" height="15" fill="rgb(229,206,16)" fg:x="515" fg:w="1"/><text x="41.5823%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="41.4125%" y="693" width="0.1605%" height="15" fill="rgb(235,207,10)" fg:x="516" fg:w="2"/><text x="41.6625%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.4125%" y="677" width="0.1605%" height="15" fill="rgb(247,18,10)" fg:x="516" fg:w="2"/><text x="41.6625%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.4125%" y="661" width="0.1605%" height="15" fill="rgb(232,4,6)" fg:x="516" fg:w="2"/><text x="41.6625%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="41.4125%" y="645" width="0.1605%" height="15" fill="rgb(247,93,45)" fg:x="516" fg:w="2"/><text x="41.6625%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="41.4125%" y="629" width="0.1605%" height="15" fill="rgb(240,181,18)" fg:x="516" fg:w="2"/><text x="41.6625%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="41.4125%" y="613" width="0.1605%" height="15" fill="rgb(208,224,0)" fg:x="516" fg:w="2"/><text x="41.6625%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.4928%" y="597" width="0.0803%" height="15" fill="rgb(224,207,54)" fg:x="517" fg:w="1"/><text x="41.7428%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.4928%" y="581" width="0.0803%" height="15" fill="rgb(217,152,29)" fg:x="517" fg:w="1"/><text x="41.7428%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.4928%" y="565" width="0.0803%" height="15" fill="rgb(243,78,27)" fg:x="517" fg:w="1"/><text x="41.7428%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.4928%" y="549" width="0.0803%" height="15" fill="rgb(228,111,9)" fg:x="517" fg:w="1"/><text x="41.7428%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.4928%" y="533" width="0.0803%" height="15" fill="rgb(230,213,21)" fg:x="517" fg:w="1"/><text x="41.7428%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.4928%" y="517" width="0.0803%" height="15" fill="rgb(248,50,36)" fg:x="517" fg:w="1"/><text x="41.7428%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="41.4928%" y="501" width="0.0803%" height="15" fill="rgb(226,19,31)" fg:x="517" fg:w="1"/><text x="41.7428%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="41.4928%" y="485" width="0.0803%" height="15" fill="rgb(205,132,21)" fg:x="517" fg:w="1"/><text x="41.7428%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="41.6533%" y="661" width="0.0803%" height="15" fill="rgb(207,42,19)" fg:x="519" fg:w="1"/><text x="41.9033%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.7335%" y="661" width="0.0803%" height="15" fill="rgb(229,69,35)" fg:x="520" fg:w="1"/><text x="41.9835%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.8138%" y="661" width="0.0803%" height="15" fill="rgb(226,96,11)" fg:x="521" fg:w="1"/><text x="42.0638%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8138%" y="645" width="0.0803%" height="15" fill="rgb(236,133,54)" fg:x="521" fg:w="1"/><text x="42.0638%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8138%" y="629" width="0.0803%" height="15" fill="rgb(247,166,21)" fg:x="521" fg:w="1"/><text x="42.0638%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8138%" y="613" width="0.0803%" height="15" fill="rgb(220,132,12)" fg:x="521" fg:w="1"/><text x="42.0638%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8138%" y="597" width="0.0803%" height="15" fill="rgb(233,27,30)" fg:x="521" fg:w="1"/><text x="42.0638%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8138%" y="581" width="0.0803%" height="15" fill="rgb(246,161,27)" fg:x="521" fg:w="1"/><text x="42.0638%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8138%" y="565" width="0.0803%" height="15" fill="rgb(240,56,3)" fg:x="521" fg:w="1"/><text x="42.0638%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8138%" y="549" width="0.0803%" height="15" fill="rgb(242,190,9)" fg:x="521" fg:w="1"/><text x="42.0638%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.8138%" y="533" width="0.0803%" height="15" fill="rgb(234,3,52)" fg:x="521" fg:w="1"/><text x="42.0638%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.8138%" y="517" width="0.0803%" height="15" fill="rgb(220,221,19)" fg:x="521" fg:w="1"/><text x="42.0638%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.8138%" y="501" width="0.0803%" height="15" fill="rgb(247,178,30)" fg:x="521" fg:w="1"/><text x="42.0638%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.8138%" y="485" width="0.0803%" height="15" fill="rgb(234,212,27)" fg:x="521" fg:w="1"/><text x="42.0638%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8138%" y="469" width="0.0803%" height="15" fill="rgb(226,199,38)" fg:x="521" fg:w="1"/><text x="42.0638%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.8941%" y="661" width="0.0803%" height="15" fill="rgb(248,114,22)" fg:x="522" fg:w="1"/><text x="42.1441%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8941%" y="645" width="0.0803%" height="15" fill="rgb(221,180,4)" fg:x="522" fg:w="1"/><text x="42.1441%" y="655.50"></text></g><g><title>treediff::diff::diff (14 samples, 1.12%)</title><rect x="41.0915%" y="725" width="1.1236%" height="15" fill="rgb(220,229,24)" fg:x="512" fg:w="14"/><text x="41.3415%" y="735.50"></text></g><g><title>treediff::diff::diff (10 samples, 0.80%)</title><rect x="41.4125%" y="709" width="0.8026%" height="15" fill="rgb(226,184,27)" fg:x="516" fg:w="10"/><text x="41.6625%" y="719.50"></text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="41.5730%" y="693" width="0.6421%" height="15" fill="rgb(232,99,15)" fg:x="518" fg:w="8"/><text x="41.8230%" y="703.50"></text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="41.5730%" y="677" width="0.6421%" height="15" fill="rgb(250,167,16)" fg:x="518" fg:w="8"/><text x="41.8230%" y="687.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (3 samples, 0.24%)</title><rect x="41.9743%" y="661" width="0.2408%" height="15" fill="rgb(243,113,6)" fg:x="523" fg:w="3"/><text x="42.2243%" y="671.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (54 samples, 4.33%)</title><rect x="38.0417%" y="757" width="4.3339%" height="15" fill="rgb(244,147,52)" fg:x="474" fg:w="54"/><text x="38.2917%" y="767.50">&lt;kern..</text></g><g><title>treediff::diff::diff (30 samples, 2.41%)</title><rect x="39.9679%" y="741" width="2.4077%" height="15" fill="rgb(235,59,50)" fg:x="498" fg:w="30"/><text x="40.2179%" y="751.50">tr..</text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (2 samples, 0.16%)</title><rect x="42.2151%" y="725" width="0.1605%" height="15" fill="rgb(250,188,6)" fg:x="526" fg:w="2"/><text x="42.4651%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2953%" y="709" width="0.0803%" height="15" fill="rgb(236,173,11)" fg:x="527" fg:w="1"/><text x="42.5453%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="42.3756%" y="757" width="0.0803%" height="15" fill="rgb(233,64,3)" fg:x="528" fg:w="1"/><text x="42.6256%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3756%" y="741" width="0.0803%" height="15" fill="rgb(207,92,7)" fg:x="528" fg:w="1"/><text x="42.6256%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.6966%" y="725" width="0.0803%" height="15" fill="rgb(221,30,19)" fg:x="532" fg:w="1"/><text x="42.9466%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="42.7769%" y="725" width="0.2408%" height="15" fill="rgb(245,22,49)" fg:x="533" fg:w="3"/><text x="43.0269%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9374%" y="709" width="0.0803%" height="15" fill="rgb(218,39,20)" fg:x="535" fg:w="1"/><text x="43.1874%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="43.0177%" y="725" width="0.0803%" height="15" fill="rgb(222,144,21)" fg:x="536" fg:w="1"/><text x="43.2677%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.0177%" y="709" width="0.0803%" height="15" fill="rgb(222,78,51)" fg:x="536" fg:w="1"/><text x="43.2677%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0177%" y="693" width="0.0803%" height="15" fill="rgb(248,213,53)" fg:x="536" fg:w="1"/><text x="43.2677%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0177%" y="677" width="0.0803%" height="15" fill="rgb(245,28,34)" fg:x="536" fg:w="1"/><text x="43.2677%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0177%" y="661" width="0.0803%" height="15" fill="rgb(229,186,26)" fg:x="536" fg:w="1"/><text x="43.2677%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="43.0979%" y="725" width="0.1605%" height="15" fill="rgb(224,0,41)" fg:x="537" fg:w="2"/><text x="43.3479%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.0979%" y="709" width="0.1605%" height="15" fill="rgb(223,136,51)" fg:x="537" fg:w="2"/><text x="43.3479%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.1782%" y="693" width="0.0803%" height="15" fill="rgb(234,50,9)" fg:x="538" fg:w="1"/><text x="43.4282%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.1782%" y="677" width="0.0803%" height="15" fill="rgb(242,164,20)" fg:x="538" fg:w="1"/><text x="43.4282%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1782%" y="661" width="0.0803%" height="15" fill="rgb(230,169,22)" fg:x="538" fg:w="1"/><text x="43.4282%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.2584%" y="693" width="0.1605%" height="15" fill="rgb(228,82,26)" fg:x="539" fg:w="2"/><text x="43.5084%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="43.2584%" y="725" width="0.2408%" height="15" fill="rgb(244,220,31)" fg:x="539" fg:w="3"/><text x="43.5084%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="43.2584%" y="709" width="0.2408%" height="15" fill="rgb(214,35,25)" fg:x="539" fg:w="3"/><text x="43.5084%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4189%" y="693" width="0.0803%" height="15" fill="rgb(245,162,54)" fg:x="541" fg:w="1"/><text x="43.6689%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4189%" y="677" width="0.0803%" height="15" fill="rgb(210,43,24)" fg:x="541" fg:w="1"/><text x="43.6689%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.7400%" y="693" width="0.0803%" height="15" fill="rgb(226,145,51)" fg:x="545" fg:w="1"/><text x="43.9900%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="43.8202%" y="693" width="0.0803%" height="15" fill="rgb(237,52,53)" fg:x="546" fg:w="1"/><text x="44.0702%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.9005%" y="677" width="0.0803%" height="15" fill="rgb(216,226,7)" fg:x="547" fg:w="1"/><text x="44.1505%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.9005%" y="661" width="0.0803%" height="15" fill="rgb(206,223,18)" fg:x="547" fg:w="1"/><text x="44.1505%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="43.9807%" y="645" width="0.0803%" height="15" fill="rgb(221,1,10)" fg:x="548" fg:w="1"/><text x="44.2307%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="43.9807%" y="629" width="0.0803%" height="15" fill="rgb(221,151,42)" fg:x="548" fg:w="1"/><text x="44.2307%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="43.9807%" y="677" width="0.1605%" height="15" fill="rgb(205,183,46)" fg:x="548" fg:w="2"/><text x="44.2307%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="43.9807%" y="661" width="0.1605%" height="15" fill="rgb(239,229,1)" fg:x="548" fg:w="2"/><text x="44.2307%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.0610%" y="645" width="0.0803%" height="15" fill="rgb(236,192,23)" fg:x="549" fg:w="1"/><text x="44.3110%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.2215%" y="661" width="0.0803%" height="15" fill="rgb(215,146,3)" fg:x="551" fg:w="1"/><text x="44.4715%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="44.3018%" y="661" width="0.0803%" height="15" fill="rgb(235,52,27)" fg:x="552" fg:w="1"/><text x="44.5518%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="44.3820%" y="645" width="0.3210%" height="15" fill="rgb(236,45,20)" fg:x="553" fg:w="4"/><text x="44.6320%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.4623%" y="629" width="0.2408%" height="15" fill="rgb(235,86,41)" fg:x="554" fg:w="3"/><text x="44.7123%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.5425%" y="613" width="0.1605%" height="15" fill="rgb(235,27,27)" fg:x="555" fg:w="2"/><text x="44.7925%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7030%" y="613" width="0.0803%" height="15" fill="rgb(232,4,34)" fg:x="557" fg:w="1"/><text x="44.9530%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.7030%" y="597" width="0.0803%" height="15" fill="rgb(215,22,10)" fg:x="557" fg:w="1"/><text x="44.9530%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.9438%" y="597" width="0.0803%" height="15" fill="rgb(230,228,27)" fg:x="560" fg:w="1"/><text x="45.1938%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="45.0241%" y="597" width="0.0803%" height="15" fill="rgb(216,26,51)" fg:x="561" fg:w="1"/><text x="45.2741%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="45.1043%" y="581" width="0.4013%" height="15" fill="rgb(225,180,50)" fg:x="562" fg:w="5"/><text x="45.3543%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="45.1846%" y="565" width="0.3210%" height="15" fill="rgb(236,211,2)" fg:x="563" fg:w="4"/><text x="45.4346%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="45.2648%" y="549" width="0.2408%" height="15" fill="rgb(250,51,20)" fg:x="564" fg:w="3"/><text x="45.5148%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="45.1043%" y="597" width="0.6421%" height="15" fill="rgb(232,70,37)" fg:x="562" fg:w="8"/><text x="45.3543%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="45.5056%" y="581" width="0.2408%" height="15" fill="rgb(226,183,39)" fg:x="567" fg:w="3"/><text x="45.7556%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="45.6661%" y="565" width="0.0803%" height="15" fill="rgb(232,228,21)" fg:x="569" fg:w="1"/><text x="45.9161%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="45.6661%" y="549" width="0.0803%" height="15" fill="rgb(251,118,32)" fg:x="569" fg:w="1"/><text x="45.9161%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="45.6661%" y="533" width="0.0803%" height="15" fill="rgb(235,172,38)" fg:x="569" fg:w="1"/><text x="45.9161%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="44.7030%" y="629" width="1.1236%" height="15" fill="rgb(235,63,18)" fg:x="557" fg:w="14"/><text x="44.9530%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="44.7833%" y="613" width="1.0433%" height="15" fill="rgb(225,4,7)" fg:x="558" fg:w="13"/><text x="45.0333%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.7464%" y="597" width="0.0803%" height="15" fill="rgb(231,61,1)" fg:x="570" fg:w="1"/><text x="45.9964%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.01%)</title><rect x="43.9005%" y="693" width="2.0064%" height="15" fill="rgb(241,155,22)" fg:x="547" fg:w="25"/><text x="44.1505%" y="703.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 1.77%)</title><rect x="44.1413%" y="677" width="1.7657%" height="15" fill="rgb(209,100,26)" fg:x="550" fg:w="22"/><text x="44.3913%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.52%)</title><rect x="44.3820%" y="661" width="1.5249%" height="15" fill="rgb(248,181,15)" fg:x="553" fg:w="19"/><text x="44.6320%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="44.7030%" y="645" width="1.2039%" height="15" fill="rgb(214,94,31)" fg:x="557" fg:w="15"/><text x="44.9530%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8266%" y="629" width="0.0803%" height="15" fill="rgb(207,16,42)" fg:x="571" fg:w="1"/><text x="46.0766%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 2.49%)</title><rect x="43.6597%" y="709" width="2.4880%" height="15" fill="rgb(208,127,13)" fg:x="544" fg:w="31"/><text x="43.9097%" y="719.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="45.9069%" y="693" width="0.2408%" height="15" fill="rgb(220,211,18)" fg:x="572" fg:w="3"/><text x="46.1569%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (47 samples, 3.77%)</title><rect x="42.4559%" y="757" width="3.7721%" height="15" fill="rgb(221,55,38)" fg:x="529" fg:w="47"/><text x="42.7059%" y="767.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (47 samples, 3.77%)</title><rect x="42.4559%" y="741" width="3.7721%" height="15" fill="rgb(252,219,45)" fg:x="529" fg:w="47"/><text x="42.7059%" y="751.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (34 samples, 2.73%)</title><rect x="43.4992%" y="725" width="2.7287%" height="15" fill="rgb(248,53,35)" fg:x="542" fg:w="34"/><text x="43.7492%" y="735.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1477%" y="709" width="0.0803%" height="15" fill="rgb(210,87,2)" fg:x="575" fg:w="1"/><text x="46.3977%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1477%" y="693" width="0.0803%" height="15" fill="rgb(239,133,9)" fg:x="575" fg:w="1"/><text x="46.3977%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="46.1477%" y="677" width="0.0803%" height="15" fill="rgb(214,114,5)" fg:x="575" fg:w="1"/><text x="46.3977%" y="687.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.3884%" y="645" width="0.0803%" height="15" fill="rgb(206,124,24)" fg:x="578" fg:w="1"/><text x="46.6384%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.4687%" y="581" width="0.0803%" height="15" fill="rgb(212,57,33)" fg:x="579" fg:w="1"/><text x="46.7187%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.4687%" y="565" width="0.0803%" height="15" fill="rgb(246,21,20)" fg:x="579" fg:w="1"/><text x="46.7187%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="46.4687%" y="613" width="0.2408%" height="15" fill="rgb(253,210,39)" fg:x="579" fg:w="3"/><text x="46.7187%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="46.4687%" y="597" width="0.2408%" height="15" fill="rgb(209,187,24)" fg:x="579" fg:w="3"/><text x="46.7187%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.5490%" y="581" width="0.1605%" height="15" fill="rgb(246,136,17)" fg:x="580" fg:w="2"/><text x="46.7990%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.6292%" y="565" width="0.0803%" height="15" fill="rgb(211,0,30)" fg:x="581" fg:w="1"/><text x="46.8792%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.8700%" y="517" width="0.0803%" height="15" fill="rgb(216,199,7)" fg:x="584" fg:w="1"/><text x="47.1200%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.8700%" y="533" width="0.1605%" height="15" fill="rgb(207,210,19)" fg:x="584" fg:w="2"/><text x="47.1200%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.9502%" y="517" width="0.0803%" height="15" fill="rgb(237,187,39)" fg:x="585" fg:w="1"/><text x="47.2002%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9502%" y="501" width="0.0803%" height="15" fill="rgb(243,194,42)" fg:x="585" fg:w="1"/><text x="47.2002%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9502%" y="485" width="0.0803%" height="15" fill="rgb(225,194,19)" fg:x="585" fg:w="1"/><text x="47.2002%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9502%" y="469" width="0.0803%" height="15" fill="rgb(224,192,14)" fg:x="585" fg:w="1"/><text x="47.2002%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="46.8700%" y="565" width="0.3210%" height="15" fill="rgb(252,21,18)" fg:x="584" fg:w="4"/><text x="47.1200%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="46.8700%" y="549" width="0.3210%" height="15" fill="rgb(229,69,19)" fg:x="584" fg:w="4"/><text x="47.1200%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.0305%" y="533" width="0.1605%" height="15" fill="rgb(251,31,53)" fg:x="586" fg:w="2"/><text x="47.2805%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.0305%" y="517" width="0.1605%" height="15" fill="rgb(218,39,50)" fg:x="586" fg:w="2"/><text x="47.2805%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1108%" y="501" width="0.0803%" height="15" fill="rgb(231,50,17)" fg:x="587" fg:w="1"/><text x="47.3608%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="46.8700%" y="597" width="0.4013%" height="15" fill="rgb(223,217,31)" fg:x="584" fg:w="5"/><text x="47.1200%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="46.8700%" y="581" width="0.4013%" height="15" fill="rgb(225,91,12)" fg:x="584" fg:w="5"/><text x="47.1200%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.1910%" y="565" width="0.0803%" height="15" fill="rgb(242,58,43)" fg:x="588" fg:w="1"/><text x="47.4410%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.1910%" y="549" width="0.0803%" height="15" fill="rgb(242,32,21)" fg:x="588" fg:w="1"/><text x="47.4410%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1910%" y="533" width="0.0803%" height="15" fill="rgb(211,127,1)" fg:x="588" fg:w="1"/><text x="47.4410%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.2713%" y="597" width="0.0803%" height="15" fill="rgb(231,93,13)" fg:x="589" fg:w="1"/><text x="47.5213%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="46.4687%" y="629" width="1.0433%" height="15" fill="rgb(218,83,4)" fg:x="579" fg:w="13"/><text x="46.7187%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="46.7095%" y="613" width="0.8026%" height="15" fill="rgb(230,218,10)" fg:x="582" fg:w="10"/><text x="46.9595%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.3515%" y="597" width="0.1605%" height="15" fill="rgb(235,127,18)" fg:x="590" fg:w="2"/><text x="47.6015%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.3515%" y="581" width="0.1605%" height="15" fill="rgb(213,137,46)" fg:x="590" fg:w="2"/><text x="47.6015%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.3515%" y="565" width="0.1605%" height="15" fill="rgb(235,179,24)" fg:x="590" fg:w="2"/><text x="47.6015%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.5120%" y="629" width="0.1605%" height="15" fill="rgb(247,58,49)" fg:x="592" fg:w="2"/><text x="47.7620%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5923%" y="613" width="0.0803%" height="15" fill="rgb(242,222,5)" fg:x="593" fg:w="1"/><text x="47.8423%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="46.3884%" y="661" width="1.4446%" height="15" fill="rgb(230,16,48)" fg:x="578" fg:w="18"/><text x="46.6384%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="46.4687%" y="645" width="1.3644%" height="15" fill="rgb(241,192,16)" fg:x="579" fg:w="17"/><text x="46.7187%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.6726%" y="629" width="0.1605%" height="15" fill="rgb(209,25,37)" fg:x="594" fg:w="2"/><text x="47.9226%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.7528%" y="613" width="0.0803%" height="15" fill="rgb(229,215,13)" fg:x="595" fg:w="1"/><text x="48.0028%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.7528%" y="597" width="0.0803%" height="15" fill="rgb(213,199,8)" fg:x="595" fg:w="1"/><text x="48.0028%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.85%)</title><rect x="46.2279%" y="693" width="1.8459%" height="15" fill="rgb(226,151,19)" fg:x="576" fg:w="23"/><text x="46.4779%" y="703.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.77%)</title><rect x="46.3082%" y="677" width="1.7657%" height="15" fill="rgb(254,183,12)" fg:x="577" fg:w="22"/><text x="46.5582%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="47.8331%" y="661" width="0.2408%" height="15" fill="rgb(245,8,3)" fg:x="596" fg:w="3"/><text x="48.0831%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.9936%" y="645" width="0.0803%" height="15" fill="rgb(229,159,35)" fg:x="598" fg:w="1"/><text x="48.2436%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.1541%" y="677" width="0.0803%" height="15" fill="rgb(209,145,1)" fg:x="600" fg:w="1"/><text x="48.4041%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="48.0738%" y="693" width="0.2408%" height="15" fill="rgb(228,183,16)" fg:x="599" fg:w="3"/><text x="48.3238%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.2343%" y="677" width="0.0803%" height="15" fill="rgb(222,68,0)" fg:x="601" fg:w="1"/><text x="48.4843%" y="687.50"></text></g><g><title>engine::session::Session::close (208 samples, 16.69%)</title><rect x="31.7014%" y="853" width="16.6934%" height="15" fill="rgb(209,130,50)" fg:x="395" fg:w="208"/><text x="31.9514%" y="863.50">engine::session::Session::..</text></g><g><title>engine::session::state::State::close (201 samples, 16.13%)</title><rect x="32.2632%" y="837" width="16.1316%" height="15" fill="rgb(228,176,44)" fg:x="402" fg:w="201"/><text x="32.5132%" y="847.50">engine::session::state::S..</text></g><g><title>engine::session::state::State::flush_entities (185 samples, 14.85%)</title><rect x="33.5474%" y="821" width="14.8475%" height="15" fill="rgb(221,164,2)" fg:x="418" fg:w="185"/><text x="33.7974%" y="831.50">engine::session::state:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (184 samples, 14.77%)</title><rect x="33.6276%" y="805" width="14.7673%" height="15" fill="rgb(249,199,49)" fg:x="419" fg:w="184"/><text x="33.8776%" y="815.50">engine::session::intern..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (184 samples, 14.77%)</title><rect x="33.6276%" y="789" width="14.7673%" height="15" fill="rgb(228,205,53)" fg:x="419" fg:w="184"/><text x="33.8776%" y="799.50">engine::session::state:..</text></g><g><title>kernel::model::any_entity_changes (129 samples, 10.35%)</title><rect x="38.0417%" y="773" width="10.3531%" height="15" fill="rgb(235,77,20)" fg:x="474" fg:w="129"/><text x="38.2917%" y="783.50">kernel::model::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (27 samples, 2.17%)</title><rect x="46.2279%" y="757" width="2.1669%" height="15" fill="rgb(227,147,34)" fg:x="576" fg:w="27"/><text x="46.4779%" y="767.50">s..</text></g><g><title>serde_json::de::from_trait (27 samples, 2.17%)</title><rect x="46.2279%" y="741" width="2.1669%" height="15" fill="rgb(226,203,52)" fg:x="576" fg:w="27"/><text x="46.4779%" y="751.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (27 samples, 2.17%)</title><rect x="46.2279%" y="725" width="2.1669%" height="15" fill="rgb(226,186,23)" fg:x="576" fg:w="27"/><text x="46.4779%" y="735.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (27 samples, 2.17%)</title><rect x="46.2279%" y="709" width="2.1669%" height="15" fill="rgb(236,13,30)" fg:x="576" fg:w="27"/><text x="46.4779%" y="719.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.3146%" y="693" width="0.0803%" height="15" fill="rgb(228,121,22)" fg:x="602" fg:w="1"/><text x="48.5646%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.3146%" y="677" width="0.0803%" height="15" fill="rgb(248,222,26)" fg:x="602" fg:w="1"/><text x="48.5646%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="48.7159%" y="709" width="0.0803%" height="15" fill="rgb(251,72,25)" fg:x="607" fg:w="1"/><text x="48.9659%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.7159%" y="693" width="0.0803%" height="15" fill="rgb(223,114,24)" fg:x="607" fg:w="1"/><text x="48.9659%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.7159%" y="677" width="0.0803%" height="15" fill="rgb(232,190,43)" fg:x="607" fg:w="1"/><text x="48.9659%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.7159%" y="661" width="0.0803%" height="15" fill="rgb(208,90,0)" fg:x="607" fg:w="1"/><text x="48.9659%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.7159%" y="645" width="0.0803%" height="15" fill="rgb(234,149,31)" fg:x="607" fg:w="1"/><text x="48.9659%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.7159%" y="629" width="0.0803%" height="15" fill="rgb(235,188,36)" fg:x="607" fg:w="1"/><text x="48.9659%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.7159%" y="613" width="0.0803%" height="15" fill="rgb(219,59,51)" fg:x="607" fg:w="1"/><text x="48.9659%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.7159%" y="597" width="0.0803%" height="15" fill="rgb(236,101,40)" fg:x="607" fg:w="1"/><text x="48.9659%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.7159%" y="581" width="0.0803%" height="15" fill="rgb(235,33,7)" fg:x="607" fg:w="1"/><text x="48.9659%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.7159%" y="565" width="0.0803%" height="15" fill="rgb(213,169,26)" fg:x="607" fg:w="1"/><text x="48.9659%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.7159%" y="549" width="0.0803%" height="15" fill="rgb(218,99,34)" fg:x="607" fg:w="1"/><text x="48.9659%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.7159%" y="533" width="0.0803%" height="15" fill="rgb(210,57,24)" fg:x="607" fg:w="1"/><text x="48.9659%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7159%" y="517" width="0.0803%" height="15" fill="rgb(231,181,54)" fg:x="607" fg:w="1"/><text x="48.9659%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.24%)</title><rect x="48.7961%" y="405" width="0.2408%" height="15" fill="rgb(251,188,48)" fg:x="608" fg:w="3"/><text x="49.0461%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.24%)</title><rect x="48.7961%" y="389" width="0.2408%" height="15" fill="rgb(243,12,45)" fg:x="608" fg:w="3"/><text x="49.0461%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="48.7961%" y="373" width="0.2408%" height="15" fill="rgb(250,197,9)" fg:x="608" fg:w="3"/><text x="49.0461%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.24%)</title><rect x="48.7961%" y="357" width="0.2408%" height="15" fill="rgb(235,149,35)" fg:x="608" fg:w="3"/><text x="49.0461%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="48.7961%" y="341" width="0.2408%" height="15" fill="rgb(219,27,19)" fg:x="608" fg:w="3"/><text x="49.0461%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.24%)</title><rect x="48.7961%" y="325" width="0.2408%" height="15" fill="rgb(244,78,31)" fg:x="608" fg:w="3"/><text x="49.0461%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.24%)</title><rect x="48.7961%" y="309" width="0.2408%" height="15" fill="rgb(241,13,4)" fg:x="608" fg:w="3"/><text x="49.0461%" y="319.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.24%)</title><rect x="48.7961%" y="293" width="0.2408%" height="15" fill="rgb(212,194,26)" fg:x="608" fg:w="3"/><text x="49.0461%" y="303.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="48.7961%" y="277" width="0.2408%" height="15" fill="rgb(236,80,11)" fg:x="608" fg:w="3"/><text x="49.0461%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="48.7159%" y="725" width="0.4013%" height="15" fill="rgb(206,1,24)" fg:x="607" fg:w="5"/><text x="48.9659%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="48.7961%" y="709" width="0.3210%" height="15" fill="rgb(238,215,50)" fg:x="608" fg:w="4"/><text x="49.0461%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="48.7961%" y="693" width="0.3210%" height="15" fill="rgb(254,126,32)" fg:x="608" fg:w="4"/><text x="49.0461%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="48.7961%" y="677" width="0.3210%" height="15" fill="rgb(206,111,53)" fg:x="608" fg:w="4"/><text x="49.0461%" y="687.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="48.7961%" y="661" width="0.3210%" height="15" fill="rgb(218,72,44)" fg:x="608" fg:w="4"/><text x="49.0461%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="48.7961%" y="645" width="0.3210%" height="15" fill="rgb(238,25,3)" fg:x="608" fg:w="4"/><text x="49.0461%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="48.7961%" y="629" width="0.3210%" height="15" fill="rgb(250,191,7)" fg:x="608" fg:w="4"/><text x="49.0461%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="48.7961%" y="613" width="0.3210%" height="15" fill="rgb(238,56,30)" fg:x="608" fg:w="4"/><text x="49.0461%" y="623.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="48.7961%" y="597" width="0.3210%" height="15" fill="rgb(210,27,45)" fg:x="608" fg:w="4"/><text x="49.0461%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="48.7961%" y="581" width="0.3210%" height="15" fill="rgb(207,10,50)" fg:x="608" fg:w="4"/><text x="49.0461%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="48.7961%" y="565" width="0.3210%" height="15" fill="rgb(249,30,23)" fg:x="608" fg:w="4"/><text x="49.0461%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="48.7961%" y="549" width="0.3210%" height="15" fill="rgb(250,80,12)" fg:x="608" fg:w="4"/><text x="49.0461%" y="559.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="48.7961%" y="533" width="0.3210%" height="15" fill="rgb(210,221,37)" fg:x="608" fg:w="4"/><text x="49.0461%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="48.7961%" y="517" width="0.3210%" height="15" fill="rgb(205,96,24)" fg:x="608" fg:w="4"/><text x="49.0461%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="48.7961%" y="501" width="0.3210%" height="15" fill="rgb(247,104,22)" fg:x="608" fg:w="4"/><text x="49.0461%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="48.7961%" y="485" width="0.3210%" height="15" fill="rgb(222,61,53)" fg:x="608" fg:w="4"/><text x="49.0461%" y="495.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.32%)</title><rect x="48.7961%" y="469" width="0.3210%" height="15" fill="rgb(241,11,53)" fg:x="608" fg:w="4"/><text x="49.0461%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.32%)</title><rect x="48.7961%" y="453" width="0.3210%" height="15" fill="rgb(230,111,47)" fg:x="608" fg:w="4"/><text x="49.0461%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.32%)</title><rect x="48.7961%" y="437" width="0.3210%" height="15" fill="rgb(218,187,29)" fg:x="608" fg:w="4"/><text x="49.0461%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.32%)</title><rect x="48.7961%" y="421" width="0.3210%" height="15" fill="rgb(210,121,46)" fg:x="608" fg:w="4"/><text x="49.0461%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.0369%" y="405" width="0.0803%" height="15" fill="rgb(250,43,19)" fg:x="611" fg:w="1"/><text x="49.2869%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (6 samples, 0.48%)</title><rect x="48.7159%" y="741" width="0.4815%" height="15" fill="rgb(238,61,12)" fg:x="607" fg:w="6"/><text x="48.9659%" y="751.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="49.1172%" y="725" width="0.0803%" height="15" fill="rgb(251,198,9)" fg:x="612" fg:w="1"/><text x="49.3672%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1974%" y="661" width="0.0803%" height="15" fill="rgb(214,192,38)" fg:x="613" fg:w="1"/><text x="49.4474%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1974%" y="645" width="0.0803%" height="15" fill="rgb(214,73,19)" fg:x="613" fg:w="1"/><text x="49.4474%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1974%" y="629" width="0.0803%" height="15" fill="rgb(249,222,49)" fg:x="613" fg:w="1"/><text x="49.4474%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.1974%" y="613" width="0.0803%" height="15" fill="rgb(231,181,54)" fg:x="613" fg:w="1"/><text x="49.4474%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.1974%" y="597" width="0.0803%" height="15" fill="rgb(240,1,13)" fg:x="613" fg:w="1"/><text x="49.4474%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.1974%" y="581" width="0.0803%" height="15" fill="rgb(225,21,16)" fg:x="613" fg:w="1"/><text x="49.4474%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.1974%" y="565" width="0.0803%" height="15" fill="rgb(246,176,50)" fg:x="613" fg:w="1"/><text x="49.4474%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.1974%" y="549" width="0.0803%" height="15" fill="rgb(208,96,50)" fg:x="613" fg:w="1"/><text x="49.4474%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.1974%" y="533" width="0.0803%" height="15" fill="rgb(240,219,19)" fg:x="613" fg:w="1"/><text x="49.4474%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.1974%" y="517" width="0.0803%" height="15" fill="rgb(234,73,5)" fg:x="613" fg:w="1"/><text x="49.4474%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.1974%" y="501" width="0.0803%" height="15" fill="rgb(225,52,53)" fg:x="613" fg:w="1"/><text x="49.4474%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.1974%" y="485" width="0.0803%" height="15" fill="rgb(250,12,14)" fg:x="613" fg:w="1"/><text x="49.4474%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.1974%" y="469" width="0.0803%" height="15" fill="rgb(242,185,54)" fg:x="613" fg:w="1"/><text x="49.4474%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="49.2777%" y="629" width="0.1605%" height="15" fill="rgb(211,206,31)" fg:x="614" fg:w="2"/><text x="49.5277%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="49.2777%" y="613" width="0.1605%" height="15" fill="rgb(252,10,33)" fg:x="614" fg:w="2"/><text x="49.5277%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="49.2777%" y="597" width="0.1605%" height="15" fill="rgb(216,26,7)" fg:x="614" fg:w="2"/><text x="49.5277%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.3579%" y="581" width="0.0803%" height="15" fill="rgb(228,112,40)" fg:x="615" fg:w="1"/><text x="49.6079%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.3579%" y="565" width="0.0803%" height="15" fill="rgb(212,21,16)" fg:x="615" fg:w="1"/><text x="49.6079%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.3579%" y="549" width="0.0803%" height="15" fill="rgb(249,3,29)" fg:x="615" fg:w="1"/><text x="49.6079%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.3579%" y="533" width="0.0803%" height="15" fill="rgb(221,42,51)" fg:x="615" fg:w="1"/><text x="49.6079%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.3579%" y="517" width="0.0803%" height="15" fill="rgb(225,90,21)" fg:x="615" fg:w="1"/><text x="49.6079%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.3579%" y="501" width="0.0803%" height="15" fill="rgb(242,131,5)" fg:x="615" fg:w="1"/><text x="49.6079%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="49.2777%" y="661" width="0.3210%" height="15" fill="rgb(220,187,28)" fg:x="614" fg:w="4"/><text x="49.5277%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="49.2777%" y="645" width="0.3210%" height="15" fill="rgb(210,75,48)" fg:x="614" fg:w="4"/><text x="49.5277%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="49.4382%" y="629" width="0.1605%" height="15" fill="rgb(211,91,40)" fg:x="616" fg:w="2"/><text x="49.6882%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="49.4382%" y="613" width="0.1605%" height="15" fill="rgb(205,43,18)" fg:x="616" fg:w="2"/><text x="49.6882%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="49.4382%" y="597" width="0.1605%" height="15" fill="rgb(207,123,11)" fg:x="616" fg:w="2"/><text x="49.6882%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.5185%" y="581" width="0.0803%" height="15" fill="rgb(235,89,39)" fg:x="617" fg:w="1"/><text x="49.7685%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5185%" y="565" width="0.0803%" height="15" fill="rgb(245,217,27)" fg:x="617" fg:w="1"/><text x="49.7685%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.5185%" y="549" width="0.0803%" height="15" fill="rgb(216,55,17)" fg:x="617" fg:w="1"/><text x="49.7685%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5185%" y="533" width="0.0803%" height="15" fill="rgb(252,116,44)" fg:x="617" fg:w="1"/><text x="49.7685%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.5185%" y="517" width="0.0803%" height="15" fill="rgb(229,153,4)" fg:x="617" fg:w="1"/><text x="49.7685%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5185%" y="501" width="0.0803%" height="15" fill="rgb(222,24,35)" fg:x="617" fg:w="1"/><text x="49.7685%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5185%" y="485" width="0.0803%" height="15" fill="rgb(214,26,20)" fg:x="617" fg:w="1"/><text x="49.7685%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.6790%" y="565" width="0.0803%" height="15" fill="rgb(215,14,45)" fg:x="619" fg:w="1"/><text x="49.9290%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.6790%" y="549" width="0.0803%" height="15" fill="rgb(217,212,50)" fg:x="619" fg:w="1"/><text x="49.9290%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.7592%" y="533" width="0.0803%" height="15" fill="rgb(230,172,52)" fg:x="620" fg:w="1"/><text x="50.0092%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.7592%" y="565" width="0.1605%" height="15" fill="rgb(210,48,36)" fg:x="620" fg:w="2"/><text x="50.0092%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.7592%" y="549" width="0.1605%" height="15" fill="rgb(216,213,32)" fg:x="620" fg:w="2"/><text x="50.0092%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.8395%" y="533" width="0.0803%" height="15" fill="rgb(237,202,41)" fg:x="621" fg:w="1"/><text x="50.0895%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.9197%" y="437" width="0.0803%" height="15" fill="rgb(209,14,29)" fg:x="622" fg:w="1"/><text x="50.1697%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.9197%" y="421" width="0.0803%" height="15" fill="rgb(219,29,3)" fg:x="622" fg:w="1"/><text x="50.1697%" y="431.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="49.5987%" y="645" width="0.4815%" height="15" fill="rgb(229,13,49)" fg:x="618" fg:w="6"/><text x="49.8487%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="49.5987%" y="629" width="0.4815%" height="15" fill="rgb(210,206,2)" fg:x="618" fg:w="6"/><text x="49.8487%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="49.5987%" y="613" width="0.4815%" height="15" fill="rgb(216,154,46)" fg:x="618" fg:w="6"/><text x="49.8487%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="49.6790%" y="597" width="0.4013%" height="15" fill="rgb(211,170,52)" fg:x="619" fg:w="5"/><text x="49.9290%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="49.6790%" y="581" width="0.4013%" height="15" fill="rgb(233,109,47)" fg:x="619" fg:w="5"/><text x="49.9290%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.9197%" y="565" width="0.1605%" height="15" fill="rgb(208,212,30)" fg:x="622" fg:w="2"/><text x="50.1697%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.9197%" y="549" width="0.1605%" height="15" fill="rgb(215,190,19)" fg:x="622" fg:w="2"/><text x="50.1697%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.9197%" y="533" width="0.1605%" height="15" fill="rgb(207,164,53)" fg:x="622" fg:w="2"/><text x="50.1697%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.9197%" y="517" width="0.1605%" height="15" fill="rgb(213,87,49)" fg:x="622" fg:w="2"/><text x="50.1697%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.9197%" y="501" width="0.1605%" height="15" fill="rgb(241,216,24)" fg:x="622" fg:w="2"/><text x="50.1697%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.9197%" y="485" width="0.1605%" height="15" fill="rgb(241,123,45)" fg:x="622" fg:w="2"/><text x="50.1697%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.9197%" y="469" width="0.1605%" height="15" fill="rgb(220,36,15)" fg:x="622" fg:w="2"/><text x="50.1697%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.9197%" y="453" width="0.1605%" height="15" fill="rgb(215,202,9)" fg:x="622" fg:w="2"/><text x="50.1697%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.0000%" y="437" width="0.0803%" height="15" fill="rgb(252,71,26)" fg:x="623" fg:w="1"/><text x="50.2500%" y="447.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="50.0000%" y="421" width="0.0803%" height="15" fill="rgb(243,195,19)" fg:x="623" fg:w="1"/><text x="50.2500%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.0803%" y="581" width="0.0803%" height="15" fill="rgb(207,167,27)" fg:x="624" fg:w="1"/><text x="50.3303%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.0803%" y="565" width="0.0803%" height="15" fill="rgb(250,146,54)" fg:x="624" fg:w="1"/><text x="50.3303%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.1605%" y="501" width="0.0803%" height="15" fill="rgb(245,79,9)" fg:x="625" fg:w="1"/><text x="50.4105%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.1605%" y="485" width="0.0803%" height="15" fill="rgb(234,197,22)" fg:x="625" fg:w="1"/><text x="50.4105%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="50.1605%" y="469" width="0.0803%" height="15" fill="rgb(221,52,48)" fg:x="625" fg:w="1"/><text x="50.4105%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.1605%" y="453" width="0.0803%" height="15" fill="rgb(235,80,0)" fg:x="625" fg:w="1"/><text x="50.4105%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.1605%" y="437" width="0.0803%" height="15" fill="rgb(221,117,53)" fg:x="625" fg:w="1"/><text x="50.4105%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.1605%" y="421" width="0.0803%" height="15" fill="rgb(239,48,47)" fg:x="625" fg:w="1"/><text x="50.4105%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.1605%" y="405" width="0.0803%" height="15" fill="rgb(227,191,52)" fg:x="625" fg:w="1"/><text x="50.4105%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.1605%" y="389" width="0.0803%" height="15" fill="rgb(241,118,1)" fg:x="625" fg:w="1"/><text x="50.4105%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="50.1605%" y="565" width="0.1605%" height="15" fill="rgb(240,85,3)" fg:x="625" fg:w="2"/><text x="50.4105%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.1605%" y="549" width="0.1605%" height="15" fill="rgb(237,68,37)" fg:x="625" fg:w="2"/><text x="50.4105%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="50.1605%" y="533" width="0.1605%" height="15" fill="rgb(212,9,20)" fg:x="625" fg:w="2"/><text x="50.4105%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.1605%" y="517" width="0.1605%" height="15" fill="rgb(218,84,17)" fg:x="625" fg:w="2"/><text x="50.4105%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="50.2408%" y="501" width="0.0803%" height="15" fill="rgb(235,147,20)" fg:x="626" fg:w="1"/><text x="50.4908%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.3210%" y="533" width="0.0803%" height="15" fill="rgb(208,224,1)" fg:x="627" fg:w="1"/><text x="50.5710%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="50.3210%" y="565" width="0.1605%" height="15" fill="rgb(232,97,50)" fg:x="627" fg:w="2"/><text x="50.5710%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="50.3210%" y="549" width="0.1605%" height="15" fill="rgb(238,15,45)" fg:x="627" fg:w="2"/><text x="50.5710%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="50.4013%" y="533" width="0.0803%" height="15" fill="rgb(231,46,18)" fg:x="628" fg:w="1"/><text x="50.6513%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="50.4013%" y="517" width="0.0803%" height="15" fill="rgb(254,169,10)" fg:x="628" fg:w="1"/><text x="50.6513%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="50.4013%" y="501" width="0.0803%" height="15" fill="rgb(243,169,30)" fg:x="628" fg:w="1"/><text x="50.6513%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="50.0803%" y="613" width="0.4815%" height="15" fill="rgb(236,90,49)" fg:x="624" fg:w="6"/><text x="50.3303%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="50.0803%" y="597" width="0.4815%" height="15" fill="rgb(218,80,15)" fg:x="624" fg:w="6"/><text x="50.3303%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="50.1605%" y="581" width="0.4013%" height="15" fill="rgb(222,115,37)" fg:x="625" fg:w="5"/><text x="50.4105%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.4815%" y="565" width="0.0803%" height="15" fill="rgb(227,0,6)" fg:x="629" fg:w="1"/><text x="50.7315%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.4815%" y="549" width="0.0803%" height="15" fill="rgb(217,189,13)" fg:x="629" fg:w="1"/><text x="50.7315%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.4815%" y="533" width="0.0803%" height="15" fill="rgb(220,74,19)" fg:x="629" fg:w="1"/><text x="50.7315%" y="543.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="50.4815%" y="517" width="0.0803%" height="15" fill="rgb(224,81,18)" fg:x="629" fg:w="1"/><text x="50.7315%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (13 samples, 1.04%)</title><rect x="49.5987%" y="661" width="1.0433%" height="15" fill="rgb(245,178,48)" fg:x="618" fg:w="13"/><text x="49.8487%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="50.0803%" y="645" width="0.5618%" height="15" fill="rgb(207,78,24)" fg:x="624" fg:w="7"/><text x="50.3303%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="50.0803%" y="629" width="0.5618%" height="15" fill="rgb(223,222,30)" fg:x="624" fg:w="7"/><text x="50.3303%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.5618%" y="613" width="0.0803%" height="15" fill="rgb(234,101,12)" fg:x="630" fg:w="1"/><text x="50.8118%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.5618%" y="597" width="0.0803%" height="15" fill="rgb(209,80,46)" fg:x="630" fg:w="1"/><text x="50.8118%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="50.6421%" y="661" width="0.0803%" height="15" fill="rgb(228,79,14)" fg:x="631" fg:w="1"/><text x="50.8921%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="50.6421%" y="645" width="0.0803%" height="15" fill="rgb(220,219,34)" fg:x="631" fg:w="1"/><text x="50.8921%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="50.6421%" y="629" width="0.0803%" height="15" fill="rgb(207,80,21)" fg:x="631" fg:w="1"/><text x="50.8921%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.6421%" y="613" width="0.0803%" height="15" fill="rgb(210,154,44)" fg:x="631" fg:w="1"/><text x="50.8921%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.6421%" y="597" width="0.0803%" height="15" fill="rgb(246,44,39)" fg:x="631" fg:w="1"/><text x="50.8921%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.6421%" y="581" width="0.0803%" height="15" fill="rgb(252,175,13)" fg:x="631" fg:w="1"/><text x="50.8921%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.6421%" y="565" width="0.0803%" height="15" fill="rgb(211,50,39)" fg:x="631" fg:w="1"/><text x="50.8921%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.61%)</title><rect x="49.1974%" y="677" width="1.6051%" height="15" fill="rgb(231,204,27)" fg:x="613" fg:w="20"/><text x="49.4474%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="50.7223%" y="661" width="0.0803%" height="15" fill="rgb(253,26,34)" fg:x="632" fg:w="1"/><text x="50.9723%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.69%)</title><rect x="49.1974%" y="693" width="1.6854%" height="15" fill="rgb(207,139,38)" fg:x="613" fg:w="21"/><text x="49.4474%" y="703.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="50.8026%" y="677" width="0.0803%" height="15" fill="rgb(248,54,27)" fg:x="633" fg:w="1"/><text x="51.0526%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.8026%" y="661" width="0.0803%" height="15" fill="rgb(234,25,33)" fg:x="633" fg:w="1"/><text x="51.0526%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (22 samples, 1.77%)</title><rect x="49.1974%" y="709" width="1.7657%" height="15" fill="rgb(249,107,47)" fg:x="613" fg:w="22"/><text x="49.4474%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.8828%" y="693" width="0.0803%" height="15" fill="rgb(230,190,31)" fg:x="634" fg:w="1"/><text x="51.1328%" y="703.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9631%" y="709" width="0.0803%" height="15" fill="rgb(238,173,45)" fg:x="635" fg:w="1"/><text x="51.2131%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9631%" y="693" width="0.0803%" height="15" fill="rgb(222,16,50)" fg:x="635" fg:w="1"/><text x="51.2131%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9631%" y="677" width="0.0803%" height="15" fill="rgb(251,204,47)" fg:x="635" fg:w="1"/><text x="51.2131%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9631%" y="661" width="0.0803%" height="15" fill="rgb(225,12,3)" fg:x="635" fg:w="1"/><text x="51.2131%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9631%" y="645" width="0.0803%" height="15" fill="rgb(214,208,22)" fg:x="635" fg:w="1"/><text x="51.2131%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.9631%" y="629" width="0.0803%" height="15" fill="rgb(240,57,32)" fg:x="635" fg:w="1"/><text x="51.2131%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.9631%" y="613" width="0.0803%" height="15" fill="rgb(243,113,48)" fg:x="635" fg:w="1"/><text x="51.2131%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.9631%" y="597" width="0.0803%" height="15" fill="rgb(225,135,30)" fg:x="635" fg:w="1"/><text x="51.2131%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="50.9631%" y="581" width="0.0803%" height="15" fill="rgb(222,3,53)" fg:x="635" fg:w="1"/><text x="51.2131%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="50.9631%" y="565" width="0.0803%" height="15" fill="rgb(243,142,2)" fg:x="635" fg:w="1"/><text x="51.2131%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="51.0433%" y="709" width="0.0803%" height="15" fill="rgb(233,67,14)" fg:x="636" fg:w="1"/><text x="51.2933%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0433%" y="693" width="0.0803%" height="15" fill="rgb(245,125,36)" fg:x="636" fg:w="1"/><text x="51.2933%" y="703.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (35 samples, 2.81%)</title><rect x="48.4751%" y="773" width="2.8090%" height="15" fill="rgb(225,199,6)" fg:x="604" fg:w="35"/><text x="48.7251%" y="783.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (32 samples, 2.57%)</title><rect x="48.7159%" y="757" width="2.5682%" height="15" fill="rgb(244,71,6)" fg:x="607" fg:w="32"/><text x="48.9659%" y="767.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (26 samples, 2.09%)</title><rect x="49.1974%" y="741" width="2.0867%" height="15" fill="rgb(225,62,9)" fg:x="613" fg:w="26"/><text x="49.4474%" y="751.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (26 samples, 2.09%)</title><rect x="49.1974%" y="725" width="2.0867%" height="15" fill="rgb(246,139,53)" fg:x="613" fg:w="26"/><text x="49.4474%" y="735.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.1236%" y="709" width="0.1605%" height="15" fill="rgb(243,161,46)" fg:x="637" fg:w="2"/><text x="51.3736%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.1236%" y="693" width="0.1605%" height="15" fill="rgb(236,153,7)" fg:x="637" fg:w="2"/><text x="51.3736%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.1236%" y="677" width="0.1605%" height="15" fill="rgb(248,42,35)" fg:x="637" fg:w="2"/><text x="51.3736%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.1236%" y="661" width="0.1605%" height="15" fill="rgb(250,17,31)" fg:x="637" fg:w="2"/><text x="51.3736%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2841%" y="773" width="0.0803%" height="15" fill="rgb(248,138,14)" fg:x="639" fg:w="1"/><text x="51.5341%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2841%" y="757" width="0.0803%" height="15" fill="rgb(228,161,3)" fg:x="639" fg:w="1"/><text x="51.5341%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2841%" y="741" width="0.0803%" height="15" fill="rgb(248,116,17)" fg:x="639" fg:w="1"/><text x="51.5341%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.2841%" y="725" width="0.0803%" height="15" fill="rgb(207,78,24)" fg:x="639" fg:w="1"/><text x="51.5341%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.2841%" y="709" width="0.0803%" height="15" fill="rgb(234,99,48)" fg:x="639" fg:w="1"/><text x="51.5341%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.2841%" y="693" width="0.0803%" height="15" fill="rgb(242,22,26)" fg:x="639" fg:w="1"/><text x="51.5341%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2841%" y="677" width="0.0803%" height="15" fill="rgb(227,78,32)" fg:x="639" fg:w="1"/><text x="51.5341%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2841%" y="661" width="0.0803%" height="15" fill="rgb(226,189,43)" fg:x="639" fg:w="1"/><text x="51.5341%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.2841%" y="645" width="0.0803%" height="15" fill="rgb(227,218,35)" fg:x="639" fg:w="1"/><text x="51.5341%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.2841%" y="629" width="0.0803%" height="15" fill="rgb(206,111,40)" fg:x="639" fg:w="1"/><text x="51.5341%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.2841%" y="613" width="0.0803%" height="15" fill="rgb(208,217,22)" fg:x="639" fg:w="1"/><text x="51.5341%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.2841%" y="597" width="0.0803%" height="15" fill="rgb(248,20,20)" fg:x="639" fg:w="1"/><text x="51.5341%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2841%" y="581" width="0.0803%" height="15" fill="rgb(239,155,16)" fg:x="639" fg:w="1"/><text x="51.5341%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4446%" y="581" width="0.0803%" height="15" fill="rgb(238,171,46)" fg:x="641" fg:w="1"/><text x="51.6946%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4446%" y="565" width="0.0803%" height="15" fill="rgb(248,11,36)" fg:x="641" fg:w="1"/><text x="51.6946%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4446%" y="549" width="0.0803%" height="15" fill="rgb(220,148,37)" fg:x="641" fg:w="1"/><text x="51.6946%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4446%" y="533" width="0.0803%" height="15" fill="rgb(218,144,42)" fg:x="641" fg:w="1"/><text x="51.6946%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.4446%" y="517" width="0.0803%" height="15" fill="rgb(245,20,20)" fg:x="641" fg:w="1"/><text x="51.6946%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.4446%" y="501" width="0.0803%" height="15" fill="rgb(240,111,48)" fg:x="641" fg:w="1"/><text x="51.6946%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.4446%" y="485" width="0.0803%" height="15" fill="rgb(237,225,32)" fg:x="641" fg:w="1"/><text x="51.6946%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.4446%" y="469" width="0.0803%" height="15" fill="rgb(228,161,46)" fg:x="641" fg:w="1"/><text x="51.6946%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.4446%" y="453" width="0.0803%" height="15" fill="rgb(235,196,21)" fg:x="641" fg:w="1"/><text x="51.6946%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.4446%" y="437" width="0.0803%" height="15" fill="rgb(250,133,21)" fg:x="641" fg:w="1"/><text x="51.6946%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.4446%" y="421" width="0.0803%" height="15" fill="rgb(236,94,32)" fg:x="641" fg:w="1"/><text x="51.6946%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.4446%" y="405" width="0.0803%" height="15" fill="rgb(219,176,25)" fg:x="641" fg:w="1"/><text x="51.6946%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.4446%" y="389" width="0.0803%" height="15" fill="rgb(211,17,43)" fg:x="641" fg:w="1"/><text x="51.6946%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.4446%" y="373" width="0.0803%" height="15" fill="rgb(220,75,23)" fg:x="641" fg:w="1"/><text x="51.6946%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="51.5249%" y="581" width="0.1605%" height="15" fill="rgb(215,122,32)" fg:x="642" fg:w="2"/><text x="51.7749%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="51.5249%" y="565" width="0.1605%" height="15" fill="rgb(218,57,38)" fg:x="642" fg:w="2"/><text x="51.7749%" y="575.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="51.5249%" y="549" width="0.1605%" height="15" fill="rgb(233,208,46)" fg:x="642" fg:w="2"/><text x="51.7749%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="51.6854%" y="581" width="0.1605%" height="15" fill="rgb(221,35,50)" fg:x="644" fg:w="2"/><text x="51.9354%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.7657%" y="565" width="0.0803%" height="15" fill="rgb(229,213,29)" fg:x="645" fg:w="1"/><text x="52.0157%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="51.8459%" y="565" width="0.2408%" height="15" fill="rgb(229,110,40)" fg:x="646" fg:w="3"/><text x="52.0959%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="51.8459%" y="549" width="0.2408%" height="15" fill="rgb(247,206,19)" fg:x="646" fg:w="3"/><text x="52.0959%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="51.8459%" y="533" width="0.2408%" height="15" fill="rgb(216,229,45)" fg:x="646" fg:w="3"/><text x="52.0959%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="51.8459%" y="517" width="0.2408%" height="15" fill="rgb(205,184,31)" fg:x="646" fg:w="3"/><text x="52.0959%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="51.8459%" y="501" width="0.2408%" height="15" fill="rgb(213,91,10)" fg:x="646" fg:w="3"/><text x="52.0959%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="51.8459%" y="485" width="0.2408%" height="15" fill="rgb(250,49,8)" fg:x="646" fg:w="3"/><text x="52.0959%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="51.8459%" y="469" width="0.2408%" height="15" fill="rgb(207,26,8)" fg:x="646" fg:w="3"/><text x="52.0959%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="51.8459%" y="453" width="0.2408%" height="15" fill="rgb(224,2,13)" fg:x="646" fg:w="3"/><text x="52.0959%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="51.8459%" y="437" width="0.2408%" height="15" fill="rgb(219,108,27)" fg:x="646" fg:w="3"/><text x="52.0959%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="51.8459%" y="421" width="0.2408%" height="15" fill="rgb(240,89,32)" fg:x="646" fg:w="3"/><text x="52.0959%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="51.8459%" y="405" width="0.2408%" height="15" fill="rgb(248,205,3)" fg:x="646" fg:w="3"/><text x="52.0959%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="51.8459%" y="389" width="0.2408%" height="15" fill="rgb(236,197,47)" fg:x="646" fg:w="3"/><text x="52.0959%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="51.9262%" y="373" width="0.1605%" height="15" fill="rgb(244,185,52)" fg:x="647" fg:w="2"/><text x="52.1762%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="51.9262%" y="357" width="0.1605%" height="15" fill="rgb(210,206,23)" fg:x="647" fg:w="2"/><text x="52.1762%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.0064%" y="341" width="0.0803%" height="15" fill="rgb(251,177,30)" fg:x="648" fg:w="1"/><text x="52.2564%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.0064%" y="325" width="0.0803%" height="15" fill="rgb(243,27,45)" fg:x="648" fg:w="1"/><text x="52.2564%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.0064%" y="309" width="0.0803%" height="15" fill="rgb(248,141,51)" fg:x="648" fg:w="1"/><text x="52.2564%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="52.0064%" y="293" width="0.0803%" height="15" fill="rgb(235,102,15)" fg:x="648" fg:w="1"/><text x="52.2564%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="52.0064%" y="277" width="0.0803%" height="15" fill="rgb(214,164,53)" fg:x="648" fg:w="1"/><text x="52.2564%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="52.0064%" y="261" width="0.0803%" height="15" fill="rgb(228,18,51)" fg:x="648" fg:w="1"/><text x="52.2564%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="52.0064%" y="245" width="0.0803%" height="15" fill="rgb(205,211,11)" fg:x="648" fg:w="1"/><text x="52.2564%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.0064%" y="229" width="0.0803%" height="15" fill="rgb(208,63,6)" fg:x="648" fg:w="1"/><text x="52.2564%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.0064%" y="213" width="0.0803%" height="15" fill="rgb(245,76,14)" fg:x="648" fg:w="1"/><text x="52.2564%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.0064%" y="197" width="0.0803%" height="15" fill="rgb(234,176,34)" fg:x="648" fg:w="1"/><text x="52.2564%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="52.0064%" y="181" width="0.0803%" height="15" fill="rgb(243,156,42)" fg:x="648" fg:w="1"/><text x="52.2564%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.0064%" y="165" width="0.0803%" height="15" fill="rgb(237,182,10)" fg:x="648" fg:w="1"/><text x="52.2564%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="52.0064%" y="149" width="0.0803%" height="15" fill="rgb(244,117,0)" fg:x="648" fg:w="1"/><text x="52.2564%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="52.0064%" y="133" width="0.0803%" height="15" fill="rgb(239,91,50)" fg:x="648" fg:w="1"/><text x="52.2564%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="52.0064%" y="117" width="0.0803%" height="15" fill="rgb(206,38,9)" fg:x="648" fg:w="1"/><text x="52.2564%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="52.0867%" y="565" width="0.0803%" height="15" fill="rgb(205,25,10)" fg:x="649" fg:w="1"/><text x="52.3367%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.0867%" y="549" width="0.0803%" height="15" fill="rgb(206,224,7)" fg:x="649" fg:w="1"/><text x="52.3367%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0867%" y="533" width="0.0803%" height="15" fill="rgb(227,157,10)" fg:x="649" fg:w="1"/><text x="52.3367%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1669%" y="437" width="0.0803%" height="15" fill="rgb(214,157,37)" fg:x="650" fg:w="1"/><text x="52.4169%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1669%" y="421" width="0.0803%" height="15" fill="rgb(209,180,35)" fg:x="650" fg:w="1"/><text x="52.4169%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1669%" y="405" width="0.0803%" height="15" fill="rgb(216,174,49)" fg:x="650" fg:w="1"/><text x="52.4169%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.1669%" y="389" width="0.0803%" height="15" fill="rgb(205,96,20)" fg:x="650" fg:w="1"/><text x="52.4169%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.1669%" y="373" width="0.0803%" height="15" fill="rgb(214,220,39)" fg:x="650" fg:w="1"/><text x="52.4169%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.1669%" y="357" width="0.0803%" height="15" fill="rgb(245,126,30)" fg:x="650" fg:w="1"/><text x="52.4169%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.1669%" y="341" width="0.0803%" height="15" fill="rgb(215,88,33)" fg:x="650" fg:w="1"/><text x="52.4169%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.1669%" y="325" width="0.0803%" height="15" fill="rgb(210,1,49)" fg:x="650" fg:w="1"/><text x="52.4169%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.1669%" y="309" width="0.0803%" height="15" fill="rgb(207,133,3)" fg:x="650" fg:w="1"/><text x="52.4169%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.1669%" y="293" width="0.0803%" height="15" fill="rgb(231,47,43)" fg:x="650" fg:w="1"/><text x="52.4169%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.1669%" y="277" width="0.0803%" height="15" fill="rgb(245,64,1)" fg:x="650" fg:w="1"/><text x="52.4169%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.1669%" y="261" width="0.0803%" height="15" fill="rgb(253,145,20)" fg:x="650" fg:w="1"/><text x="52.4169%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1669%" y="245" width="0.0803%" height="15" fill="rgb(211,39,18)" fg:x="650" fg:w="1"/><text x="52.4169%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="52.2472%" y="389" width="0.0803%" height="15" fill="rgb(223,225,18)" fg:x="651" fg:w="1"/><text x="52.4972%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.2472%" y="373" width="0.0803%" height="15" fill="rgb(210,202,44)" fg:x="651" fg:w="1"/><text x="52.4972%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="52.2472%" y="357" width="0.0803%" height="15" fill="rgb(231,138,36)" fg:x="651" fg:w="1"/><text x="52.4972%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.4077%" y="357" width="0.0803%" height="15" fill="rgb(237,115,25)" fg:x="653" fg:w="1"/><text x="52.6577%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.4077%" y="341" width="0.0803%" height="15" fill="rgb(215,53,48)" fg:x="653" fg:w="1"/><text x="52.6577%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.4077%" y="325" width="0.0803%" height="15" fill="rgb(243,193,24)" fg:x="653" fg:w="1"/><text x="52.6577%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.4077%" y="309" width="0.0803%" height="15" fill="rgb(210,106,28)" fg:x="653" fg:w="1"/><text x="52.6577%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.4077%" y="293" width="0.0803%" height="15" fill="rgb(249,192,0)" fg:x="653" fg:w="1"/><text x="52.6577%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="52.2472%" y="405" width="0.3210%" height="15" fill="rgb(224,96,21)" fg:x="651" fg:w="4"/><text x="52.4972%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="52.3274%" y="389" width="0.2408%" height="15" fill="rgb(243,160,19)" fg:x="652" fg:w="3"/><text x="52.5774%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="52.3274%" y="373" width="0.2408%" height="15" fill="rgb(219,205,50)" fg:x="652" fg:w="3"/><text x="52.5774%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.4880%" y="357" width="0.0803%" height="15" fill="rgb(218,175,44)" fg:x="654" fg:w="1"/><text x="52.7380%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.4880%" y="341" width="0.0803%" height="15" fill="rgb(251,84,47)" fg:x="654" fg:w="1"/><text x="52.7380%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.4880%" y="325" width="0.0803%" height="15" fill="rgb(241,14,16)" fg:x="654" fg:w="1"/><text x="52.7380%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.4880%" y="309" width="0.0803%" height="15" fill="rgb(207,142,28)" fg:x="654" fg:w="1"/><text x="52.7380%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.4880%" y="293" width="0.0803%" height="15" fill="rgb(208,116,22)" fg:x="654" fg:w="1"/><text x="52.7380%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.4880%" y="277" width="0.0803%" height="15" fill="rgb(210,0,43)" fg:x="654" fg:w="1"/><text x="52.7380%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="52.5682%" y="389" width="0.0803%" height="15" fill="rgb(246,33,21)" fg:x="655" fg:w="1"/><text x="52.8182%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="52.2472%" y="437" width="0.5618%" height="15" fill="rgb(208,158,54)" fg:x="651" fg:w="7"/><text x="52.4972%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="52.2472%" y="421" width="0.5618%" height="15" fill="rgb(218,99,29)" fg:x="651" fg:w="7"/><text x="52.4972%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="52.5682%" y="405" width="0.2408%" height="15" fill="rgb(226,29,7)" fg:x="655" fg:w="3"/><text x="52.8182%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="52.6485%" y="389" width="0.1605%" height="15" fill="rgb(206,178,46)" fg:x="656" fg:w="2"/><text x="52.8985%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="52.6485%" y="373" width="0.1605%" height="15" fill="rgb(205,169,32)" fg:x="656" fg:w="2"/><text x="52.8985%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.6485%" y="357" width="0.1605%" height="15" fill="rgb(217,4,13)" fg:x="656" fg:w="2"/><text x="52.8985%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.6485%" y="341" width="0.1605%" height="15" fill="rgb(210,140,37)" fg:x="656" fg:w="2"/><text x="52.8985%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.7287%" y="325" width="0.0803%" height="15" fill="rgb(229,80,10)" fg:x="657" fg:w="1"/><text x="52.9787%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7287%" y="309" width="0.0803%" height="15" fill="rgb(212,175,34)" fg:x="657" fg:w="1"/><text x="52.9787%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.7287%" y="293" width="0.0803%" height="15" fill="rgb(216,207,24)" fg:x="657" fg:w="1"/><text x="52.9787%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7287%" y="277" width="0.0803%" height="15" fill="rgb(234,163,3)" fg:x="657" fg:w="1"/><text x="52.9787%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.7287%" y="261" width="0.0803%" height="15" fill="rgb(248,101,16)" fg:x="657" fg:w="1"/><text x="52.9787%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7287%" y="245" width="0.0803%" height="15" fill="rgb(209,152,54)" fg:x="657" fg:w="1"/><text x="52.9787%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.7287%" y="229" width="0.0803%" height="15" fill="rgb(229,124,51)" fg:x="657" fg:w="1"/><text x="52.9787%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7287%" y="213" width="0.0803%" height="15" fill="rgb(219,83,18)" fg:x="657" fg:w="1"/><text x="52.9787%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="52.7287%" y="197" width="0.0803%" height="15" fill="rgb(206,29,38)" fg:x="657" fg:w="1"/><text x="52.9787%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="52.7287%" y="181" width="0.0803%" height="15" fill="rgb(245,123,23)" fg:x="657" fg:w="1"/><text x="52.9787%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="52.8090%" y="373" width="0.1605%" height="15" fill="rgb(238,50,33)" fg:x="658" fg:w="2"/><text x="53.0590%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="52.9695%" y="325" width="0.1605%" height="15" fill="rgb(234,165,23)" fg:x="660" fg:w="2"/><text x="53.2195%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="52.9695%" y="341" width="0.2408%" height="15" fill="rgb(211,82,31)" fg:x="660" fg:w="3"/><text x="53.2195%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.1300%" y="325" width="0.0803%" height="15" fill="rgb(224,166,46)" fg:x="662" fg:w="1"/><text x="53.3800%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2103%" y="341" width="0.0803%" height="15" fill="rgb(211,13,8)" fg:x="663" fg:w="1"/><text x="53.4603%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2103%" y="325" width="0.0803%" height="15" fill="rgb(212,7,42)" fg:x="663" fg:w="1"/><text x="53.4603%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2103%" y="309" width="0.0803%" height="15" fill="rgb(249,102,19)" fg:x="663" fg:w="1"/><text x="53.4603%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.3708%" y="277" width="0.0803%" height="15" fill="rgb(225,41,13)" fg:x="665" fg:w="1"/><text x="53.6208%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.5313%" y="213" width="0.0803%" height="15" fill="rgb(220,65,27)" fg:x="667" fg:w="1"/><text x="53.7813%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="53.6116%" y="181" width="0.1605%" height="15" fill="rgb(206,4,41)" fg:x="668" fg:w="2"/><text x="53.8616%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.6918%" y="165" width="0.0803%" height="15" fill="rgb(219,60,39)" fg:x="669" fg:w="1"/><text x="53.9418%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="53.3708%" y="293" width="0.4815%" height="15" fill="rgb(226,4,38)" fg:x="665" fg:w="6"/><text x="53.6208%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="53.4510%" y="277" width="0.4013%" height="15" fill="rgb(250,52,3)" fg:x="666" fg:w="5"/><text x="53.7010%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="53.5313%" y="261" width="0.3210%" height="15" fill="rgb(234,93,0)" fg:x="667" fg:w="4"/><text x="53.7813%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="53.5313%" y="245" width="0.3210%" height="15" fill="rgb(251,47,47)" fg:x="667" fg:w="4"/><text x="53.7813%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="53.5313%" y="229" width="0.3210%" height="15" fill="rgb(205,166,47)" fg:x="667" fg:w="4"/><text x="53.7813%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="53.6116%" y="213" width="0.2408%" height="15" fill="rgb(231,148,8)" fg:x="668" fg:w="3"/><text x="53.8616%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="53.6116%" y="197" width="0.2408%" height="15" fill="rgb(244,185,19)" fg:x="668" fg:w="3"/><text x="53.8616%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.7721%" y="181" width="0.0803%" height="15" fill="rgb(224,201,45)" fg:x="670" fg:w="1"/><text x="54.0221%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.7721%" y="165" width="0.0803%" height="15" fill="rgb(240,77,39)" fg:x="670" fg:w="1"/><text x="54.0221%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7721%" y="149" width="0.0803%" height="15" fill="rgb(248,211,29)" fg:x="670" fg:w="1"/><text x="54.0221%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.8523%" y="261" width="0.0803%" height="15" fill="rgb(232,214,46)" fg:x="671" fg:w="1"/><text x="54.1023%" y="271.50"></text></g><g><title>serde_json::de::from_trait (15 samples, 1.20%)</title><rect x="52.8090%" y="421" width="1.2039%" height="15" fill="rgb(213,99,54)" fg:x="658" fg:w="15"/><text x="53.0590%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.20%)</title><rect x="52.8090%" y="405" width="1.2039%" height="15" fill="rgb(240,19,46)" fg:x="658" fg:w="15"/><text x="53.0590%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.20%)</title><rect x="52.8090%" y="389" width="1.2039%" height="15" fill="rgb(243,89,10)" fg:x="658" fg:w="15"/><text x="53.0590%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.04%)</title><rect x="52.9695%" y="373" width="1.0433%" height="15" fill="rgb(249,28,32)" fg:x="660" fg:w="13"/><text x="53.2195%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="52.9695%" y="357" width="1.0433%" height="15" fill="rgb(253,30,9)" fg:x="660" fg:w="13"/><text x="53.2195%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="53.2905%" y="341" width="0.7223%" height="15" fill="rgb(217,2,26)" fg:x="664" fg:w="9"/><text x="53.5405%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="53.2905%" y="325" width="0.7223%" height="15" fill="rgb(220,28,10)" fg:x="664" fg:w="9"/><text x="53.5405%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="53.3708%" y="309" width="0.6421%" height="15" fill="rgb(228,167,49)" fg:x="665" fg:w="8"/><text x="53.6208%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.8523%" y="293" width="0.1605%" height="15" fill="rgb(238,212,3)" fg:x="671" fg:w="2"/><text x="54.1023%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.8523%" y="277" width="0.1605%" height="15" fill="rgb(229,134,44)" fg:x="671" fg:w="2"/><text x="54.1023%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.9326%" y="261" width="0.0803%" height="15" fill="rgb(208,71,4)" fg:x="672" fg:w="1"/><text x="54.1826%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.2536%" y="245" width="0.0803%" height="15" fill="rgb(221,205,45)" fg:x="676" fg:w="1"/><text x="54.5036%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.2536%" y="229" width="0.0803%" height="15" fill="rgb(215,132,38)" fg:x="676" fg:w="1"/><text x="54.5036%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.2536%" y="213" width="0.0803%" height="15" fill="rgb(227,158,6)" fg:x="676" fg:w="1"/><text x="54.5036%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.2536%" y="197" width="0.0803%" height="15" fill="rgb(250,10,38)" fg:x="676" fg:w="1"/><text x="54.5036%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="54.2536%" y="181" width="0.0803%" height="15" fill="rgb(225,171,40)" fg:x="676" fg:w="1"/><text x="54.5036%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2536%" y="165" width="0.0803%" height="15" fill="rgb(238,17,43)" fg:x="676" fg:w="1"/><text x="54.5036%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.2536%" y="309" width="0.1605%" height="15" fill="rgb(208,145,4)" fg:x="676" fg:w="2"/><text x="54.5036%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.2536%" y="293" width="0.1605%" height="15" fill="rgb(232,82,7)" fg:x="676" fg:w="2"/><text x="54.5036%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.2536%" y="277" width="0.1605%" height="15" fill="rgb(205,166,38)" fg:x="676" fg:w="2"/><text x="54.5036%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.2536%" y="261" width="0.1605%" height="15" fill="rgb(240,228,4)" fg:x="676" fg:w="2"/><text x="54.5036%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="54.3339%" y="245" width="0.0803%" height="15" fill="rgb(233,121,40)" fg:x="677" fg:w="1"/><text x="54.5839%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.3339%" y="229" width="0.0803%" height="15" fill="rgb(243,84,30)" fg:x="677" fg:w="1"/><text x="54.5839%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.3339%" y="213" width="0.0803%" height="15" fill="rgb(235,81,48)" fg:x="677" fg:w="1"/><text x="54.5839%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="54.3339%" y="197" width="0.0803%" height="15" fill="rgb(218,137,0)" fg:x="677" fg:w="1"/><text x="54.5839%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="54.2536%" y="341" width="0.2408%" height="15" fill="rgb(223,151,48)" fg:x="676" fg:w="3"/><text x="54.5036%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.2536%" y="325" width="0.2408%" height="15" fill="rgb(247,30,19)" fg:x="676" fg:w="3"/><text x="54.5036%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="54.4141%" y="309" width="0.0803%" height="15" fill="rgb(205,129,29)" fg:x="678" fg:w="1"/><text x="54.6641%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.4944%" y="341" width="0.0803%" height="15" fill="rgb(222,29,2)" fg:x="679" fg:w="1"/><text x="54.7444%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.4944%" y="325" width="0.0803%" height="15" fill="rgb(232,145,33)" fg:x="679" fg:w="1"/><text x="54.7444%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.4944%" y="309" width="0.0803%" height="15" fill="rgb(217,30,31)" fg:x="679" fg:w="1"/><text x="54.7444%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.4944%" y="293" width="0.0803%" height="15" fill="rgb(243,22,52)" fg:x="679" fg:w="1"/><text x="54.7444%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4944%" y="277" width="0.0803%" height="15" fill="rgb(254,228,14)" fg:x="679" fg:w="1"/><text x="54.7444%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.5746%" y="309" width="0.0803%" height="15" fill="rgb(231,45,50)" fg:x="680" fg:w="1"/><text x="54.8246%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="54.6549%" y="293" width="0.1605%" height="15" fill="rgb(248,125,3)" fg:x="681" fg:w="2"/><text x="54.9049%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="54.6549%" y="277" width="0.1605%" height="15" fill="rgb(213,76,9)" fg:x="681" fg:w="2"/><text x="54.9049%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6549%" y="261" width="0.1605%" height="15" fill="rgb(238,108,21)" fg:x="681" fg:w="2"/><text x="54.9049%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.7352%" y="245" width="0.0803%" height="15" fill="rgb(229,214,19)" fg:x="682" fg:w="1"/><text x="54.9852%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.8957%" y="165" width="0.0803%" height="15" fill="rgb(252,201,5)" fg:x="684" fg:w="1"/><text x="55.1457%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (28 samples, 2.25%)</title><rect x="52.8090%" y="437" width="2.2472%" height="15" fill="rgb(233,165,49)" fg:x="658" fg:w="28"/><text x="53.0590%" y="447.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.04%)</title><rect x="54.0128%" y="421" width="1.0433%" height="15" fill="rgb(208,165,19)" fg:x="673" fg:w="13"/><text x="54.2628%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="54.0128%" y="405" width="1.0433%" height="15" fill="rgb(216,220,31)" fg:x="673" fg:w="13"/><text x="54.2628%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.96%)</title><rect x="54.0931%" y="389" width="0.9631%" height="15" fill="rgb(214,8,31)" fg:x="674" fg:w="12"/><text x="54.3431%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="54.0931%" y="373" width="0.9631%" height="15" fill="rgb(220,32,32)" fg:x="674" fg:w="12"/><text x="54.3431%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.88%)</title><rect x="54.1734%" y="357" width="0.8828%" height="15" fill="rgb(237,172,34)" fg:x="675" fg:w="11"/><text x="54.4234%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="54.5746%" y="341" width="0.4815%" height="15" fill="rgb(240,209,5)" fg:x="680" fg:w="6"/><text x="54.8246%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="54.5746%" y="325" width="0.4815%" height="15" fill="rgb(221,219,1)" fg:x="680" fg:w="6"/><text x="54.8246%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="54.6549%" y="309" width="0.4013%" height="15" fill="rgb(237,90,36)" fg:x="681" fg:w="5"/><text x="54.9049%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.8154%" y="293" width="0.2408%" height="15" fill="rgb(245,14,51)" fg:x="683" fg:w="3"/><text x="55.0654%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.8154%" y="277" width="0.2408%" height="15" fill="rgb(211,71,49)" fg:x="683" fg:w="3"/><text x="55.0654%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="54.8957%" y="261" width="0.1605%" height="15" fill="rgb(230,223,9)" fg:x="684" fg:w="2"/><text x="55.1457%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.8957%" y="245" width="0.1605%" height="15" fill="rgb(212,33,31)" fg:x="684" fg:w="2"/><text x="55.1457%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.8957%" y="229" width="0.1605%" height="15" fill="rgb(218,141,5)" fg:x="684" fg:w="2"/><text x="55.1457%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="54.8957%" y="213" width="0.1605%" height="15" fill="rgb(239,194,8)" fg:x="684" fg:w="2"/><text x="55.1457%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.8957%" y="197" width="0.1605%" height="15" fill="rgb(225,119,29)" fg:x="684" fg:w="2"/><text x="55.1457%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.8957%" y="181" width="0.1605%" height="15" fill="rgb(233,32,3)" fg:x="684" fg:w="2"/><text x="55.1457%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.9759%" y="165" width="0.0803%" height="15" fill="rgb(248,126,40)" fg:x="685" fg:w="1"/><text x="55.2259%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.9759%" y="149" width="0.0803%" height="15" fill="rgb(213,102,53)" fg:x="685" fg:w="1"/><text x="55.2259%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.9759%" y="133" width="0.0803%" height="15" fill="rgb(212,69,15)" fg:x="685" fg:w="1"/><text x="55.2259%" y="143.50"></text></g><g><title>core::iter::adapters::try_process (48 samples, 3.85%)</title><rect x="52.1669%" y="517" width="3.8523%" height="15" fill="rgb(253,39,34)" fg:x="650" fg:w="48"/><text x="52.4169%" y="527.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 3.85%)</title><rect x="52.1669%" y="501" width="3.8523%" height="15" fill="rgb(205,189,54)" fg:x="650" fg:w="48"/><text x="52.4169%" y="511.50">&lt;all..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (48 samples, 3.85%)</title><rect x="52.1669%" y="485" width="3.8523%" height="15" fill="rgb(234,229,45)" fg:x="650" fg:w="48"/><text x="52.4169%" y="495.50">&lt;eng..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (48 samples, 3.85%)</title><rect x="52.1669%" y="469" width="3.8523%" height="15" fill="rgb(243,79,48)" fg:x="650" fg:w="48"/><text x="52.4169%" y="479.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (48 samples, 3.85%)</title><rect x="52.1669%" y="453" width="3.8523%" height="15" fill="rgb(206,71,50)" fg:x="650" fg:w="48"/><text x="52.4169%" y="463.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (12 samples, 0.96%)</title><rect x="55.0562%" y="437" width="0.9631%" height="15" fill="rgb(209,32,17)" fg:x="686" fg:w="12"/><text x="55.3062%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.96%)</title><rect x="55.0562%" y="421" width="0.9631%" height="15" fill="rgb(219,229,6)" fg:x="686" fg:w="12"/><text x="55.3062%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.96%)</title><rect x="55.0562%" y="405" width="0.9631%" height="15" fill="rgb(226,25,27)" fg:x="686" fg:w="12"/><text x="55.3062%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.96%)</title><rect x="55.0562%" y="389" width="0.9631%" height="15" fill="rgb(218,185,23)" fg:x="686" fg:w="12"/><text x="55.3062%" y="399.50"></text></g><g><title>__libc_malloc (12 samples, 0.96%)</title><rect x="55.0562%" y="373" width="0.9631%" height="15" fill="rgb(242,123,5)" fg:x="686" fg:w="12"/><text x="55.3062%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (50 samples, 4.01%)</title><rect x="52.1669%" y="533" width="4.0128%" height="15" fill="rgb(215,53,19)" fg:x="650" fg:w="50"/><text x="52.4169%" y="543.50">&lt;plu..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="56.0193%" y="517" width="0.1605%" height="15" fill="rgb(233,20,30)" fg:x="698" fg:w="2"/><text x="56.2693%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="56.0193%" y="501" width="0.1605%" height="15" fill="rgb(209,67,20)" fg:x="698" fg:w="2"/><text x="56.2693%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.3403%" y="501" width="0.0803%" height="15" fill="rgb(227,181,50)" fg:x="702" fg:w="1"/><text x="56.5903%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (64 samples, 5.14%)</title><rect x="51.4446%" y="597" width="5.1364%" height="15" fill="rgb(252,75,38)" fg:x="641" fg:w="64"/><text x="51.6946%" y="607.50">plugin..</text></g><g><title>plugins_core::tools::contained_by (59 samples, 4.74%)</title><rect x="51.8459%" y="581" width="4.7352%" height="15" fill="rgb(235,9,33)" fg:x="646" fg:w="59"/><text x="52.0959%" y="591.50">plugin..</text></g><g><title>kernel::model::entry::Entry::scope (55 samples, 4.41%)</title><rect x="52.1669%" y="565" width="4.4141%" height="15" fill="rgb(208,87,30)" fg:x="650" fg:w="55"/><text x="52.4169%" y="575.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (55 samples, 4.41%)</title><rect x="52.1669%" y="549" width="4.4141%" height="15" fill="rgb(215,199,39)" fg:x="650" fg:w="55"/><text x="52.4169%" y="559.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="56.1798%" y="533" width="0.4013%" height="15" fill="rgb(246,208,12)" fg:x="700" fg:w="5"/><text x="56.4298%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="56.1798%" y="517" width="0.4013%" height="15" fill="rgb(206,195,10)" fg:x="700" fg:w="5"/><text x="56.4298%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="56.4205%" y="501" width="0.1605%" height="15" fill="rgb(244,1,30)" fg:x="703" fg:w="2"/><text x="56.6705%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.5008%" y="485" width="0.0803%" height="15" fill="rgb(230,83,5)" fg:x="704" fg:w="1"/><text x="56.7508%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="56.5008%" y="469" width="0.0803%" height="15" fill="rgb(239,62,17)" fg:x="704" fg:w="1"/><text x="56.7508%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.5811%" y="581" width="0.2408%" height="15" fill="rgb(252,193,41)" fg:x="705" fg:w="3"/><text x="56.8311%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.6613%" y="565" width="0.1605%" height="15" fill="rgb(216,142,19)" fg:x="706" fg:w="2"/><text x="56.9113%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.6613%" y="549" width="0.1605%" height="15" fill="rgb(240,81,38)" fg:x="706" fg:w="2"/><text x="56.9113%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7416%" y="533" width="0.0803%" height="15" fill="rgb(240,109,40)" fg:x="707" fg:w="1"/><text x="56.9916%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.7416%" y="517" width="0.0803%" height="15" fill="rgb(230,123,10)" fg:x="707" fg:w="1"/><text x="56.9916%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.7416%" y="501" width="0.0803%" height="15" fill="rgb(253,42,32)" fg:x="707" fg:w="1"/><text x="56.9916%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.7416%" y="485" width="0.0803%" height="15" fill="rgb(218,154,8)" fg:x="707" fg:w="1"/><text x="56.9916%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7416%" y="469" width="0.0803%" height="15" fill="rgb(216,197,10)" fg:x="707" fg:w="1"/><text x="56.9916%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7416%" y="453" width="0.0803%" height="15" fill="rgb(223,107,12)" fg:x="707" fg:w="1"/><text x="56.9916%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.7416%" y="437" width="0.0803%" height="15" fill="rgb(241,174,42)" fg:x="707" fg:w="1"/><text x="56.9916%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.7416%" y="421" width="0.0803%" height="15" fill="rgb(231,78,20)" fg:x="707" fg:w="1"/><text x="56.9916%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.7416%" y="405" width="0.0803%" height="15" fill="rgb(230,208,49)" fg:x="707" fg:w="1"/><text x="56.9916%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.7416%" y="389" width="0.0803%" height="15" fill="rgb(238,11,34)" fg:x="707" fg:w="1"/><text x="56.9916%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7416%" y="373" width="0.0803%" height="15" fill="rgb(210,130,26)" fg:x="707" fg:w="1"/><text x="56.9916%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="56.8218%" y="581" width="0.0803%" height="15" fill="rgb(242,131,11)" fg:x="708" fg:w="1"/><text x="57.0718%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.8218%" y="565" width="0.0803%" height="15" fill="rgb(237,38,28)" fg:x="708" fg:w="1"/><text x="57.0718%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.8218%" y="549" width="0.0803%" height="15" fill="rgb(244,180,43)" fg:x="708" fg:w="1"/><text x="57.0718%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="56.9021%" y="581" width="0.0803%" height="15" fill="rgb(214,171,19)" fg:x="709" fg:w="1"/><text x="57.1521%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.9823%" y="453" width="0.0803%" height="15" fill="rgb(252,101,45)" fg:x="710" fg:w="1"/><text x="57.2323%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.9823%" y="437" width="0.0803%" height="15" fill="rgb(211,96,33)" fg:x="710" fg:w="1"/><text x="57.2323%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.9823%" y="421" width="0.0803%" height="15" fill="rgb(207,80,25)" fg:x="710" fg:w="1"/><text x="57.2323%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9823%" y="405" width="0.0803%" height="15" fill="rgb(225,15,35)" fg:x="710" fg:w="1"/><text x="57.2323%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.9823%" y="485" width="0.1605%" height="15" fill="rgb(214,93,43)" fg:x="710" fg:w="2"/><text x="57.2323%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.9823%" y="469" width="0.1605%" height="15" fill="rgb(248,42,37)" fg:x="710" fg:w="2"/><text x="57.2323%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.0626%" y="453" width="0.0803%" height="15" fill="rgb(217,135,32)" fg:x="711" fg:w="1"/><text x="57.3126%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.1429%" y="389" width="0.0803%" height="15" fill="rgb(216,74,28)" fg:x="712" fg:w="1"/><text x="57.3929%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1429%" y="373" width="0.0803%" height="15" fill="rgb(247,108,16)" fg:x="712" fg:w="1"/><text x="57.3929%" y="383.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (10 samples, 0.80%)</title><rect x="56.5811%" y="597" width="0.8026%" height="15" fill="rgb(205,219,30)" fg:x="705" fg:w="10"/><text x="56.8311%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.40%)</title><rect x="56.9823%" y="581" width="0.4013%" height="15" fill="rgb(241,122,9)" fg:x="710" fg:w="5"/><text x="57.2323%" y="591.50"></text></g><g><title>plugins_core::finding::matches_description (5 samples, 0.40%)</title><rect x="56.9823%" y="565" width="0.4013%" height="15" fill="rgb(216,148,50)" fg:x="710" fg:w="5"/><text x="57.2323%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::name (5 samples, 0.40%)</title><rect x="56.9823%" y="549" width="0.4013%" height="15" fill="rgb(226,154,2)" fg:x="710" fg:w="5"/><text x="57.2323%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="56.9823%" y="533" width="0.4013%" height="15" fill="rgb(220,128,1)" fg:x="710" fg:w="5"/><text x="57.2323%" y="543.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="56.9823%" y="517" width="0.4013%" height="15" fill="rgb(245,185,29)" fg:x="710" fg:w="5"/><text x="57.2323%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="56.9823%" y="501" width="0.4013%" height="15" fill="rgb(243,161,2)" fg:x="710" fg:w="5"/><text x="57.2323%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.1429%" y="485" width="0.2408%" height="15" fill="rgb(249,215,17)" fg:x="712" fg:w="3"/><text x="57.3929%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.1429%" y="469" width="0.2408%" height="15" fill="rgb(237,67,11)" fg:x="712" fg:w="3"/><text x="57.3929%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.1429%" y="453" width="0.2408%" height="15" fill="rgb(239,17,24)" fg:x="712" fg:w="3"/><text x="57.3929%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.1429%" y="437" width="0.2408%" height="15" fill="rgb(215,97,29)" fg:x="712" fg:w="3"/><text x="57.3929%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="57.1429%" y="421" width="0.2408%" height="15" fill="rgb(253,228,42)" fg:x="712" fg:w="3"/><text x="57.3929%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.1429%" y="405" width="0.2408%" height="15" fill="rgb(240,85,2)" fg:x="712" fg:w="3"/><text x="57.3929%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.2231%" y="389" width="0.1605%" height="15" fill="rgb(214,155,4)" fg:x="713" fg:w="2"/><text x="57.4731%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.2231%" y="373" width="0.1605%" height="15" fill="rgb(247,120,22)" fg:x="713" fg:w="2"/><text x="57.4731%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.2231%" y="357" width="0.1605%" height="15" fill="rgb(211,208,6)" fg:x="713" fg:w="2"/><text x="57.4731%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.2231%" y="341" width="0.1605%" height="15" fill="rgb(235,99,41)" fg:x="713" fg:w="2"/><text x="57.4731%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.3034%" y="325" width="0.0803%" height="15" fill="rgb(223,28,8)" fg:x="714" fg:w="1"/><text x="57.5534%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.3034%" y="309" width="0.0803%" height="15" fill="rgb(212,71,20)" fg:x="714" fg:w="1"/><text x="57.5534%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (76 samples, 6.10%)</title><rect x="51.4446%" y="629" width="6.0995%" height="15" fill="rgb(206,85,3)" fg:x="641" fg:w="76"/><text x="51.6946%" y="639.50">&lt;engine:..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (76 samples, 6.10%)</title><rect x="51.4446%" y="613" width="6.0995%" height="15" fill="rgb(244,180,11)" fg:x="641" fg:w="76"/><text x="51.6946%" y="623.50">&lt;plugins..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="57.3836%" y="597" width="0.1605%" height="15" fill="rgb(223,16,21)" fg:x="715" fg:w="2"/><text x="57.6336%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.3836%" y="581" width="0.1605%" height="15" fill="rgb(238,85,42)" fg:x="715" fg:w="2"/><text x="57.6336%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4639%" y="565" width="0.0803%" height="15" fill="rgb(205,85,8)" fg:x="716" fg:w="1"/><text x="57.7139%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4639%" y="549" width="0.0803%" height="15" fill="rgb(217,190,15)" fg:x="716" fg:w="1"/><text x="57.7139%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.4639%" y="533" width="0.0803%" height="15" fill="rgb(243,192,23)" fg:x="716" fg:w="1"/><text x="57.7139%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.4639%" y="517" width="0.0803%" height="15" fill="rgb(223,220,37)" fg:x="716" fg:w="1"/><text x="57.7139%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.4639%" y="501" width="0.0803%" height="15" fill="rgb(208,41,17)" fg:x="716" fg:w="1"/><text x="57.7139%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.4639%" y="485" width="0.0803%" height="15" fill="rgb(224,188,7)" fg:x="716" fg:w="1"/><text x="57.7139%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.4639%" y="469" width="0.0803%" height="15" fill="rgb(236,16,50)" fg:x="716" fg:w="1"/><text x="57.7139%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.4639%" y="453" width="0.0803%" height="15" fill="rgb(238,6,24)" fg:x="716" fg:w="1"/><text x="57.7139%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.4639%" y="437" width="0.0803%" height="15" fill="rgb(253,67,45)" fg:x="716" fg:w="1"/><text x="57.7139%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.4639%" y="421" width="0.0803%" height="15" fill="rgb(210,89,32)" fg:x="716" fg:w="1"/><text x="57.7139%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.4639%" y="405" width="0.0803%" height="15" fill="rgb(208,89,9)" fg:x="716" fg:w="1"/><text x="57.7139%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4639%" y="389" width="0.0803%" height="15" fill="rgb(222,180,44)" fg:x="716" fg:w="1"/><text x="57.7139%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="57.5441%" y="629" width="0.1605%" height="15" fill="rgb(250,181,46)" fg:x="717" fg:w="2"/><text x="57.7941%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.6244%" y="613" width="0.0803%" height="15" fill="rgb(210,190,26)" fg:x="718" fg:w="1"/><text x="57.8744%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6244%" y="597" width="0.0803%" height="15" fill="rgb(253,49,13)" fg:x="718" fg:w="1"/><text x="57.8744%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.7849%" y="581" width="0.0803%" height="15" fill="rgb(240,184,42)" fg:x="720" fg:w="1"/><text x="58.0349%" y="591.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="57.8652%" y="581" width="0.0803%" height="15" fill="rgb(246,59,37)" fg:x="721" fg:w="1"/><text x="58.1152%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.0257%" y="517" width="0.1605%" height="15" fill="rgb(207,134,54)" fg:x="723" fg:w="2"/><text x="58.2757%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.0257%" y="501" width="0.1605%" height="15" fill="rgb(250,122,24)" fg:x="723" fg:w="2"/><text x="58.2757%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.1059%" y="485" width="0.0803%" height="15" fill="rgb(239,206,3)" fg:x="724" fg:w="1"/><text x="58.3559%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="57.9454%" y="533" width="0.3210%" height="15" fill="rgb(253,220,32)" fg:x="722" fg:w="4"/><text x="58.1954%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1862%" y="517" width="0.0803%" height="15" fill="rgb(209,217,48)" fg:x="725" fg:w="1"/><text x="58.4362%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="57.9454%" y="549" width="0.4013%" height="15" fill="rgb(242,91,39)" fg:x="722" fg:w="5"/><text x="58.1954%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2665%" y="533" width="0.0803%" height="15" fill="rgb(228,4,13)" fg:x="726" fg:w="1"/><text x="58.5165%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.3467%" y="549" width="0.0803%" height="15" fill="rgb(223,133,4)" fg:x="727" fg:w="1"/><text x="58.5967%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.3467%" y="533" width="0.0803%" height="15" fill="rgb(215,105,30)" fg:x="727" fg:w="1"/><text x="58.5967%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.3467%" y="517" width="0.0803%" height="15" fill="rgb(230,9,4)" fg:x="727" fg:w="1"/><text x="58.5967%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.3467%" y="501" width="0.0803%" height="15" fill="rgb(248,15,2)" fg:x="727" fg:w="1"/><text x="58.5967%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.3467%" y="485" width="0.0803%" height="15" fill="rgb(208,210,22)" fg:x="727" fg:w="1"/><text x="58.5967%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.3467%" y="469" width="0.0803%" height="15" fill="rgb(208,112,41)" fg:x="727" fg:w="1"/><text x="58.5967%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.4270%" y="453" width="0.0803%" height="15" fill="rgb(232,83,14)" fg:x="728" fg:w="1"/><text x="58.6770%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.4270%" y="437" width="0.0803%" height="15" fill="rgb(229,65,11)" fg:x="728" fg:w="1"/><text x="58.6770%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.5072%" y="453" width="0.0803%" height="15" fill="rgb(228,126,24)" fg:x="729" fg:w="1"/><text x="58.7572%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.5072%" y="437" width="0.0803%" height="15" fill="rgb(218,66,33)" fg:x="729" fg:w="1"/><text x="58.7572%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.5072%" y="421" width="0.0803%" height="15" fill="rgb(251,49,52)" fg:x="729" fg:w="1"/><text x="58.7572%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (12 samples, 0.96%)</title><rect x="57.7849%" y="597" width="0.9631%" height="15" fill="rgb(219,46,37)" fg:x="720" fg:w="12"/><text x="58.0349%" y="607.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="57.9454%" y="581" width="0.8026%" height="15" fill="rgb(213,53,49)" fg:x="722" fg:w="10"/><text x="58.1954%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="57.9454%" y="565" width="0.8026%" height="15" fill="rgb(214,134,1)" fg:x="722" fg:w="10"/><text x="58.1954%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="58.4270%" y="549" width="0.3210%" height="15" fill="rgb(208,139,43)" fg:x="728" fg:w="4"/><text x="58.6770%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.4270%" y="533" width="0.3210%" height="15" fill="rgb(231,105,35)" fg:x="728" fg:w="4"/><text x="58.6770%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="58.4270%" y="517" width="0.3210%" height="15" fill="rgb(247,189,9)" fg:x="728" fg:w="4"/><text x="58.6770%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.4270%" y="501" width="0.3210%" height="15" fill="rgb(252,48,51)" fg:x="728" fg:w="4"/><text x="58.6770%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="58.4270%" y="485" width="0.3210%" height="15" fill="rgb(209,121,1)" fg:x="728" fg:w="4"/><text x="58.6770%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.4270%" y="469" width="0.3210%" height="15" fill="rgb(231,40,26)" fg:x="728" fg:w="4"/><text x="58.6770%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.5875%" y="453" width="0.1605%" height="15" fill="rgb(251,8,13)" fg:x="730" fg:w="2"/><text x="58.8375%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.5875%" y="437" width="0.1605%" height="15" fill="rgb(231,110,2)" fg:x="730" fg:w="2"/><text x="58.8375%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.6677%" y="421" width="0.0803%" height="15" fill="rgb(216,153,22)" fg:x="731" fg:w="1"/><text x="58.9177%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.6677%" y="405" width="0.0803%" height="15" fill="rgb(249,116,49)" fg:x="731" fg:w="1"/><text x="58.9177%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.6677%" y="389" width="0.0803%" height="15" fill="rgb(230,89,2)" fg:x="731" fg:w="1"/><text x="58.9177%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7480%" y="581" width="0.0803%" height="15" fill="rgb(231,125,23)" fg:x="732" fg:w="1"/><text x="58.9980%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7480%" y="565" width="0.0803%" height="15" fill="rgb(212,217,18)" fg:x="732" fg:w="1"/><text x="58.9980%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.7480%" y="549" width="0.0803%" height="15" fill="rgb(210,21,33)" fg:x="732" fg:w="1"/><text x="58.9980%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.7480%" y="533" width="0.0803%" height="15" fill="rgb(241,97,9)" fg:x="732" fg:w="1"/><text x="58.9980%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.7480%" y="517" width="0.0803%" height="15" fill="rgb(221,35,31)" fg:x="732" fg:w="1"/><text x="58.9980%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7480%" y="501" width="0.0803%" height="15" fill="rgb(251,23,23)" fg:x="732" fg:w="1"/><text x="58.9980%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7480%" y="485" width="0.0803%" height="15" fill="rgb(227,165,2)" fg:x="732" fg:w="1"/><text x="58.9980%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.7480%" y="469" width="0.0803%" height="15" fill="rgb(242,24,2)" fg:x="732" fg:w="1"/><text x="58.9980%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.7480%" y="453" width="0.0803%" height="15" fill="rgb(242,138,51)" fg:x="732" fg:w="1"/><text x="58.9980%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.7480%" y="437" width="0.0803%" height="15" fill="rgb(220,219,5)" fg:x="732" fg:w="1"/><text x="58.9980%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.7480%" y="421" width="0.0803%" height="15" fill="rgb(247,53,29)" fg:x="732" fg:w="1"/><text x="58.9980%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7480%" y="405" width="0.0803%" height="15" fill="rgb(233,43,39)" fg:x="732" fg:w="1"/><text x="58.9980%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.8283%" y="517" width="0.1605%" height="15" fill="rgb(230,128,54)" fg:x="733" fg:w="2"/><text x="59.0783%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.8283%" y="501" width="0.1605%" height="15" fill="rgb(218,20,12)" fg:x="733" fg:w="2"/><text x="59.0783%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.9085%" y="485" width="0.0803%" height="15" fill="rgb(206,51,14)" fg:x="734" fg:w="1"/><text x="59.1585%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.9085%" y="469" width="0.0803%" height="15" fill="rgb(223,16,35)" fg:x="734" fg:w="1"/><text x="59.1585%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.9085%" y="453" width="0.0803%" height="15" fill="rgb(226,165,37)" fg:x="734" fg:w="1"/><text x="59.1585%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.9085%" y="437" width="0.0803%" height="15" fill="rgb(240,26,21)" fg:x="734" fg:w="1"/><text x="59.1585%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.9085%" y="421" width="0.0803%" height="15" fill="rgb(240,72,46)" fg:x="734" fg:w="1"/><text x="59.1585%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.9085%" y="405" width="0.0803%" height="15" fill="rgb(211,33,41)" fg:x="734" fg:w="1"/><text x="59.1585%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.9085%" y="389" width="0.0803%" height="15" fill="rgb(224,157,46)" fg:x="734" fg:w="1"/><text x="59.1585%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.9085%" y="373" width="0.0803%" height="15" fill="rgb(223,59,19)" fg:x="734" fg:w="1"/><text x="59.1585%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.9085%" y="357" width="0.0803%" height="15" fill="rgb(239,187,1)" fg:x="734" fg:w="1"/><text x="59.1585%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.9085%" y="341" width="0.0803%" height="15" fill="rgb(226,95,9)" fg:x="734" fg:w="1"/><text x="59.1585%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9085%" y="325" width="0.0803%" height="15" fill="rgb(234,61,54)" fg:x="734" fg:w="1"/><text x="59.1585%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.8283%" y="549" width="0.2408%" height="15" fill="rgb(205,209,47)" fg:x="733" fg:w="3"/><text x="59.0783%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.8283%" y="533" width="0.2408%" height="15" fill="rgb(228,7,43)" fg:x="733" fg:w="3"/><text x="59.0783%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.9888%" y="517" width="0.0803%" height="15" fill="rgb(240,217,52)" fg:x="735" fg:w="1"/><text x="59.2388%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.9888%" y="501" width="0.0803%" height="15" fill="rgb(211,178,21)" fg:x="735" fg:w="1"/><text x="59.2388%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.9888%" y="485" width="0.0803%" height="15" fill="rgb(205,25,34)" fg:x="735" fg:w="1"/><text x="59.2388%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.9888%" y="469" width="0.0803%" height="15" fill="rgb(209,57,11)" fg:x="735" fg:w="1"/><text x="59.2388%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.9888%" y="453" width="0.0803%" height="15" fill="rgb(221,99,2)" fg:x="735" fg:w="1"/><text x="59.2388%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.9888%" y="437" width="0.0803%" height="15" fill="rgb(232,79,22)" fg:x="735" fg:w="1"/><text x="59.2388%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.9888%" y="421" width="0.0803%" height="15" fill="rgb(221,145,32)" fg:x="735" fg:w="1"/><text x="59.2388%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.9888%" y="405" width="0.0803%" height="15" fill="rgb(236,133,36)" fg:x="735" fg:w="1"/><text x="59.2388%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.9888%" y="389" width="0.0803%" height="15" fill="rgb(208,224,44)" fg:x="735" fg:w="1"/><text x="59.2388%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.9888%" y="373" width="0.0803%" height="15" fill="rgb(235,143,15)" fg:x="735" fg:w="1"/><text x="59.2388%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.9888%" y="357" width="0.0803%" height="15" fill="rgb(249,83,27)" fg:x="735" fg:w="1"/><text x="59.2388%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9888%" y="341" width="0.0803%" height="15" fill="rgb(238,226,19)" fg:x="735" fg:w="1"/><text x="59.2388%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.1493%" y="421" width="0.0803%" height="15" fill="rgb(226,206,27)" fg:x="737" fg:w="1"/><text x="59.3993%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="59.2295%" y="421" width="0.1605%" height="15" fill="rgb(251,182,9)" fg:x="738" fg:w="2"/><text x="59.4795%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.3900%" y="389" width="0.0803%" height="15" fill="rgb(212,140,41)" fg:x="740" fg:w="1"/><text x="59.6400%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (23 samples, 1.85%)</title><rect x="57.7047%" y="629" width="1.8459%" height="15" fill="rgb(220,106,18)" fg:x="719" fg:w="23"/><text x="57.9547%" y="639.50">k..</text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (23 samples, 1.85%)</title><rect x="57.7047%" y="613" width="1.8459%" height="15" fill="rgb(252,46,41)" fg:x="719" fg:w="23"/><text x="57.9547%" y="623.50">k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.80%)</title><rect x="58.7480%" y="597" width="0.8026%" height="15" fill="rgb(209,222,15)" fg:x="732" fg:w="10"/><text x="58.9980%" y="607.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="58.8283%" y="581" width="0.7223%" height="15" fill="rgb(233,83,50)" fg:x="733" fg:w="9"/><text x="59.0783%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="58.8283%" y="565" width="0.7223%" height="15" fill="rgb(205,212,0)" fg:x="733" fg:w="9"/><text x="59.0783%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="59.0690%" y="549" width="0.4815%" height="15" fill="rgb(235,117,51)" fg:x="736" fg:w="6"/><text x="59.3190%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="59.0690%" y="533" width="0.4815%" height="15" fill="rgb(233,133,48)" fg:x="736" fg:w="6"/><text x="59.3190%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="59.0690%" y="517" width="0.4815%" height="15" fill="rgb(219,3,2)" fg:x="736" fg:w="6"/><text x="59.3190%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="59.0690%" y="501" width="0.4815%" height="15" fill="rgb(225,80,52)" fg:x="736" fg:w="6"/><text x="59.3190%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="59.0690%" y="485" width="0.4815%" height="15" fill="rgb(235,195,42)" fg:x="736" fg:w="6"/><text x="59.3190%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="59.0690%" y="469" width="0.4815%" height="15" fill="rgb(240,207,46)" fg:x="736" fg:w="6"/><text x="59.3190%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="59.1493%" y="453" width="0.4013%" height="15" fill="rgb(236,112,50)" fg:x="737" fg:w="5"/><text x="59.3993%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="59.1493%" y="437" width="0.4013%" height="15" fill="rgb(249,151,27)" fg:x="737" fg:w="5"/><text x="59.3993%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.3900%" y="421" width="0.1605%" height="15" fill="rgb(253,223,52)" fg:x="740" fg:w="2"/><text x="59.6400%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.3900%" y="405" width="0.1605%" height="15" fill="rgb(215,55,33)" fg:x="740" fg:w="2"/><text x="59.6400%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="59.4703%" y="389" width="0.0803%" height="15" fill="rgb(207,24,17)" fg:x="741" fg:w="1"/><text x="59.7203%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.4703%" y="373" width="0.0803%" height="15" fill="rgb(218,169,32)" fg:x="741" fg:w="1"/><text x="59.7203%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.6308%" y="421" width="0.0803%" height="15" fill="rgb(209,210,6)" fg:x="743" fg:w="1"/><text x="59.8808%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.6308%" y="517" width="0.1605%" height="15" fill="rgb(225,208,8)" fg:x="743" fg:w="2"/><text x="59.8808%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.6308%" y="501" width="0.1605%" height="15" fill="rgb(238,14,32)" fg:x="743" fg:w="2"/><text x="59.8808%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.6308%" y="485" width="0.1605%" height="15" fill="rgb(211,137,3)" fg:x="743" fg:w="2"/><text x="59.8808%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="59.6308%" y="469" width="0.1605%" height="15" fill="rgb(207,171,19)" fg:x="743" fg:w="2"/><text x="59.8808%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="59.6308%" y="453" width="0.1605%" height="15" fill="rgb(250,80,8)" fg:x="743" fg:w="2"/><text x="59.8808%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="59.6308%" y="437" width="0.1605%" height="15" fill="rgb(209,103,53)" fg:x="743" fg:w="2"/><text x="59.8808%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7111%" y="421" width="0.0803%" height="15" fill="rgb(233,198,10)" fg:x="744" fg:w="1"/><text x="59.9611%" y="431.50"></text></g><g><title>kernel::surround::Surroundings::unpack (4 samples, 0.32%)</title><rect x="59.5506%" y="629" width="0.3210%" height="15" fill="rgb(236,125,25)" fg:x="742" fg:w="4"/><text x="59.8006%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="59.5506%" y="613" width="0.3210%" height="15" fill="rgb(254,182,48)" fg:x="742" fg:w="4"/><text x="59.8006%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="59.6308%" y="597" width="0.2408%" height="15" fill="rgb(216,108,44)" fg:x="743" fg:w="3"/><text x="59.8808%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="59.6308%" y="581" width="0.2408%" height="15" fill="rgb(222,72,39)" fg:x="743" fg:w="3"/><text x="59.8808%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="59.6308%" y="565" width="0.2408%" height="15" fill="rgb(252,70,39)" fg:x="743" fg:w="3"/><text x="59.8808%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="59.6308%" y="549" width="0.2408%" height="15" fill="rgb(243,99,34)" fg:x="743" fg:w="3"/><text x="59.8808%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="59.6308%" y="533" width="0.2408%" height="15" fill="rgb(252,109,12)" fg:x="743" fg:w="3"/><text x="59.8808%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.7913%" y="517" width="0.0803%" height="15" fill="rgb(211,186,10)" fg:x="745" fg:w="1"/><text x="60.0413%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.7913%" y="501" width="0.0803%" height="15" fill="rgb(246,90,8)" fg:x="745" fg:w="1"/><text x="60.0413%" y="511.50"></text></g><g><title>plugins_core::library::actions::reply_done (2 samples, 0.16%)</title><rect x="59.8716%" y="629" width="0.1605%" height="15" fill="rgb(226,91,24)" fg:x="746" fg:w="2"/><text x="60.1216%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="59.9518%" y="613" width="0.0803%" height="15" fill="rgb(216,28,44)" fg:x="747" fg:w="1"/><text x="60.2018%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="59.9518%" y="597" width="0.0803%" height="15" fill="rgb(229,36,0)" fg:x="747" fg:w="1"/><text x="60.2018%" y="607.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="59.9518%" y="581" width="0.0803%" height="15" fill="rgb(245,97,18)" fg:x="747" fg:w="1"/><text x="60.2018%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="59.9518%" y="565" width="0.0803%" height="15" fill="rgb(241,97,54)" fg:x="747" fg:w="1"/><text x="60.2018%" y="575.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="59.9518%" y="549" width="0.0803%" height="15" fill="rgb(234,125,17)" fg:x="747" fg:w="1"/><text x="60.2018%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="59.9518%" y="533" width="0.0803%" height="15" fill="rgb(228,172,39)" fg:x="747" fg:w="1"/><text x="60.2018%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="59.9518%" y="517" width="0.0803%" height="15" fill="rgb(227,169,1)" fg:x="747" fg:w="1"/><text x="60.2018%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="60.1124%" y="613" width="0.0803%" height="15" fill="rgb(206,13,35)" fg:x="749" fg:w="1"/><text x="60.3624%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="60.1124%" y="597" width="0.0803%" height="15" fill="rgb(211,117,30)" fg:x="749" fg:w="1"/><text x="60.3624%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.1124%" y="581" width="0.0803%" height="15" fill="rgb(230,198,4)" fg:x="749" fg:w="1"/><text x="60.3624%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="60.1926%" y="613" width="0.0803%" height="15" fill="rgb(213,87,54)" fg:x="750" fg:w="1"/><text x="60.4426%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3531%" y="533" width="0.0803%" height="15" fill="rgb(248,43,22)" fg:x="752" fg:w="1"/><text x="60.6031%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3531%" y="517" width="0.0803%" height="15" fill="rgb(213,175,48)" fg:x="752" fg:w="1"/><text x="60.6031%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3531%" y="501" width="0.0803%" height="15" fill="rgb(252,55,9)" fg:x="752" fg:w="1"/><text x="60.6031%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3531%" y="485" width="0.0803%" height="15" fill="rgb(231,72,33)" fg:x="752" fg:w="1"/><text x="60.6031%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3531%" y="469" width="0.0803%" height="15" fill="rgb(213,2,54)" fg:x="752" fg:w="1"/><text x="60.6031%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5136%" y="437" width="0.0803%" height="15" fill="rgb(208,88,25)" fg:x="754" fg:w="1"/><text x="60.7636%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5136%" y="421" width="0.0803%" height="15" fill="rgb(215,117,13)" fg:x="754" fg:w="1"/><text x="60.7636%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.5939%" y="405" width="0.0803%" height="15" fill="rgb(243,147,21)" fg:x="755" fg:w="1"/><text x="60.8439%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="60.2729%" y="581" width="0.4815%" height="15" fill="rgb(208,215,36)" fg:x="751" fg:w="6"/><text x="60.5229%" y="591.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="60.2729%" y="565" width="0.4815%" height="15" fill="rgb(238,187,24)" fg:x="751" fg:w="6"/><text x="60.5229%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="60.2729%" y="549" width="0.4815%" height="15" fill="rgb(214,173,11)" fg:x="751" fg:w="6"/><text x="60.5229%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.4334%" y="533" width="0.3210%" height="15" fill="rgb(222,71,20)" fg:x="753" fg:w="4"/><text x="60.6834%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.4334%" y="517" width="0.3210%" height="15" fill="rgb(242,125,4)" fg:x="753" fg:w="4"/><text x="60.6834%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.4334%" y="501" width="0.3210%" height="15" fill="rgb(217,101,52)" fg:x="753" fg:w="4"/><text x="60.6834%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.4334%" y="485" width="0.3210%" height="15" fill="rgb(223,2,50)" fg:x="753" fg:w="4"/><text x="60.6834%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="60.4334%" y="469" width="0.3210%" height="15" fill="rgb(225,197,9)" fg:x="753" fg:w="4"/><text x="60.6834%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.4334%" y="453" width="0.3210%" height="15" fill="rgb(234,76,27)" fg:x="753" fg:w="4"/><text x="60.6834%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.5939%" y="437" width="0.1605%" height="15" fill="rgb(213,161,26)" fg:x="755" fg:w="2"/><text x="60.8439%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.5939%" y="421" width="0.1605%" height="15" fill="rgb(210,228,2)" fg:x="755" fg:w="2"/><text x="60.8439%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.6742%" y="405" width="0.0803%" height="15" fill="rgb(235,4,16)" fg:x="756" fg:w="1"/><text x="60.9242%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.6742%" y="389" width="0.0803%" height="15" fill="rgb(235,83,42)" fg:x="756" fg:w="1"/><text x="60.9242%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="60.6742%" y="373" width="0.0803%" height="15" fill="rgb(207,116,39)" fg:x="756" fg:w="1"/><text x="60.9242%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.6742%" y="357" width="0.0803%" height="15" fill="rgb(253,206,9)" fg:x="756" fg:w="1"/><text x="60.9242%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.6742%" y="341" width="0.0803%" height="15" fill="rgb(234,32,47)" fg:x="756" fg:w="1"/><text x="60.9242%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8347%" y="469" width="0.0803%" height="15" fill="rgb(247,40,39)" fg:x="758" fg:w="1"/><text x="61.0847%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="60.7544%" y="533" width="0.3210%" height="15" fill="rgb(236,199,13)" fg:x="757" fg:w="4"/><text x="61.0044%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="60.7544%" y="517" width="0.3210%" height="15" fill="rgb(240,127,44)" fg:x="757" fg:w="4"/><text x="61.0044%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="60.8347%" y="501" width="0.2408%" height="15" fill="rgb(248,220,47)" fg:x="758" fg:w="3"/><text x="61.0847%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="60.8347%" y="485" width="0.2408%" height="15" fill="rgb(240,78,9)" fg:x="758" fg:w="3"/><text x="61.0847%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.9149%" y="469" width="0.1605%" height="15" fill="rgb(245,119,5)" fg:x="759" fg:w="2"/><text x="61.1649%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.04%)</title><rect x="60.2729%" y="613" width="1.0433%" height="15" fill="rgb(238,175,31)" fg:x="751" fg:w="13"/><text x="60.5229%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.04%)</title><rect x="60.2729%" y="597" width="1.0433%" height="15" fill="rgb(232,140,42)" fg:x="751" fg:w="13"/><text x="60.5229%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="60.7544%" y="581" width="0.5618%" height="15" fill="rgb(218,179,7)" fg:x="757" fg:w="7"/><text x="61.0044%" y="591.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="60.7544%" y="565" width="0.5618%" height="15" fill="rgb(232,79,27)" fg:x="757" fg:w="7"/><text x="61.0044%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="60.7544%" y="549" width="0.5618%" height="15" fill="rgb(247,11,19)" fg:x="757" fg:w="7"/><text x="61.0044%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.0754%" y="533" width="0.2408%" height="15" fill="rgb(216,171,54)" fg:x="761" fg:w="3"/><text x="61.3254%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.0754%" y="517" width="0.2408%" height="15" fill="rgb(233,158,36)" fg:x="761" fg:w="3"/><text x="61.3254%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.0754%" y="501" width="0.2408%" height="15" fill="rgb(215,48,47)" fg:x="761" fg:w="3"/><text x="61.3254%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.0754%" y="485" width="0.2408%" height="15" fill="rgb(230,223,15)" fg:x="761" fg:w="3"/><text x="61.3254%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="61.0754%" y="469" width="0.2408%" height="15" fill="rgb(234,49,19)" fg:x="761" fg:w="3"/><text x="61.3254%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.0754%" y="453" width="0.2408%" height="15" fill="rgb(232,89,25)" fg:x="761" fg:w="3"/><text x="61.3254%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.1557%" y="437" width="0.1605%" height="15" fill="rgb(237,206,28)" fg:x="762" fg:w="2"/><text x="61.4057%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.1557%" y="421" width="0.1605%" height="15" fill="rgb(249,68,37)" fg:x="762" fg:w="2"/><text x="61.4057%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="61.5570%" y="581" width="0.0803%" height="15" fill="rgb(226,99,43)" fg:x="767" fg:w="1"/><text x="61.8070%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="61.5570%" y="565" width="0.0803%" height="15" fill="rgb(216,46,28)" fg:x="767" fg:w="1"/><text x="61.8070%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.5570%" y="549" width="0.0803%" height="15" fill="rgb(216,33,9)" fg:x="767" fg:w="1"/><text x="61.8070%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="61.5570%" y="533" width="0.0803%" height="15" fill="rgb(216,129,4)" fg:x="767" fg:w="1"/><text x="61.8070%" y="543.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="61.5570%" y="517" width="0.0803%" height="15" fill="rgb(216,106,3)" fg:x="767" fg:w="1"/><text x="61.8070%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5570%" y="501" width="0.0803%" height="15" fill="rgb(217,79,45)" fg:x="767" fg:w="1"/><text x="61.8070%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5570%" y="485" width="0.0803%" height="15" fill="rgb(239,98,13)" fg:x="767" fg:w="1"/><text x="61.8070%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.5570%" y="469" width="0.0803%" height="15" fill="rgb(221,115,4)" fg:x="767" fg:w="1"/><text x="61.8070%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.5570%" y="453" width="0.0803%" height="15" fill="rgb(215,85,0)" fg:x="767" fg:w="1"/><text x="61.8070%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.5570%" y="437" width="0.0803%" height="15" fill="rgb(230,62,15)" fg:x="767" fg:w="1"/><text x="61.8070%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.5570%" y="421" width="0.0803%" height="15" fill="rgb(247,162,2)" fg:x="767" fg:w="1"/><text x="61.8070%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.5570%" y="405" width="0.0803%" height="15" fill="rgb(212,112,32)" fg:x="767" fg:w="1"/><text x="61.8070%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.5570%" y="389" width="0.0803%" height="15" fill="rgb(216,137,9)" fg:x="767" fg:w="1"/><text x="61.8070%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.5570%" y="373" width="0.0803%" height="15" fill="rgb(250,149,33)" fg:x="767" fg:w="1"/><text x="61.8070%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.5570%" y="357" width="0.0803%" height="15" fill="rgb(246,124,31)" fg:x="767" fg:w="1"/><text x="61.8070%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.5570%" y="341" width="0.0803%" height="15" fill="rgb(216,210,22)" fg:x="767" fg:w="1"/><text x="61.8070%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5570%" y="325" width="0.0803%" height="15" fill="rgb(228,128,36)" fg:x="767" fg:w="1"/><text x="61.8070%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.6372%" y="581" width="0.0803%" height="15" fill="rgb(231,41,0)" fg:x="768" fg:w="1"/><text x="61.8872%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (8 samples, 0.64%)</title><rect x="61.3162%" y="613" width="0.6421%" height="15" fill="rgb(232,61,26)" fg:x="764" fg:w="8"/><text x="61.5662%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="61.3965%" y="597" width="0.5618%" height="15" fill="rgb(217,60,9)" fg:x="765" fg:w="7"/><text x="61.6465%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.7175%" y="581" width="0.2408%" height="15" fill="rgb(233,41,35)" fg:x="769" fg:w="3"/><text x="61.9675%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.7175%" y="565" width="0.2408%" height="15" fill="rgb(253,139,43)" fg:x="769" fg:w="3"/><text x="61.9675%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="61.7175%" y="549" width="0.2408%" height="15" fill="rgb(245,100,51)" fg:x="769" fg:w="3"/><text x="61.9675%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="61.7175%" y="533" width="0.2408%" height="15" fill="rgb(250,208,18)" fg:x="769" fg:w="3"/><text x="61.9675%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="61.7175%" y="517" width="0.2408%" height="15" fill="rgb(245,33,2)" fg:x="769" fg:w="3"/><text x="61.9675%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.7175%" y="501" width="0.2408%" height="15" fill="rgb(244,171,31)" fg:x="769" fg:w="3"/><text x="61.9675%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.7175%" y="485" width="0.2408%" height="15" fill="rgb(229,1,43)" fg:x="769" fg:w="3"/><text x="61.9675%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.0385%" y="565" width="0.2408%" height="15" fill="rgb(223,153,28)" fg:x="773" fg:w="3"/><text x="62.2885%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.1188%" y="549" width="0.1605%" height="15" fill="rgb(241,4,46)" fg:x="774" fg:w="2"/><text x="62.3688%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.1188%" y="533" width="0.1605%" height="15" fill="rgb(230,81,11)" fg:x="774" fg:w="2"/><text x="62.3688%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="62.1188%" y="517" width="0.1605%" height="15" fill="rgb(253,204,39)" fg:x="774" fg:w="2"/><text x="62.3688%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="62.1188%" y="501" width="0.1605%" height="15" fill="rgb(250,96,8)" fg:x="774" fg:w="2"/><text x="62.3688%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="62.1188%" y="485" width="0.1605%" height="15" fill="rgb(219,89,54)" fg:x="774" fg:w="2"/><text x="62.3688%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.1188%" y="469" width="0.1605%" height="15" fill="rgb(235,136,39)" fg:x="774" fg:w="2"/><text x="62.3688%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.1188%" y="453" width="0.1605%" height="15" fill="rgb(230,155,37)" fg:x="774" fg:w="2"/><text x="62.3688%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="62.1188%" y="437" width="0.1605%" height="15" fill="rgb(235,199,50)" fg:x="774" fg:w="2"/><text x="62.3688%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="62.1188%" y="421" width="0.1605%" height="15" fill="rgb(227,81,32)" fg:x="774" fg:w="2"/><text x="62.3688%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="62.1188%" y="405" width="0.1605%" height="15" fill="rgb(225,6,28)" fg:x="774" fg:w="2"/><text x="62.3688%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="62.1188%" y="389" width="0.1605%" height="15" fill="rgb(207,211,17)" fg:x="774" fg:w="2"/><text x="62.3688%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.1188%" y="373" width="0.1605%" height="15" fill="rgb(228,31,49)" fg:x="774" fg:w="2"/><text x="62.3688%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="62.0385%" y="581" width="0.3210%" height="15" fill="rgb(230,185,3)" fg:x="773" fg:w="4"/><text x="62.2885%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2793%" y="565" width="0.0803%" height="15" fill="rgb(206,167,15)" fg:x="776" fg:w="1"/><text x="62.5293%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.3596%" y="581" width="0.0803%" height="15" fill="rgb(234,2,36)" fg:x="777" fg:w="1"/><text x="62.6096%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.3596%" y="565" width="0.0803%" height="15" fill="rgb(239,160,29)" fg:x="777" fg:w="1"/><text x="62.6096%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="62.4398%" y="581" width="0.2408%" height="15" fill="rgb(236,117,2)" fg:x="778" fg:w="3"/><text x="62.6898%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="62.4398%" y="565" width="0.2408%" height="15" fill="rgb(215,117,37)" fg:x="778" fg:w="3"/><text x="62.6898%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="62.5201%" y="549" width="0.1605%" height="15" fill="rgb(244,48,36)" fg:x="779" fg:w="2"/><text x="62.7701%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="62.5201%" y="533" width="0.1605%" height="15" fill="rgb(223,101,37)" fg:x="779" fg:w="2"/><text x="62.7701%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="62.5201%" y="517" width="0.1605%" height="15" fill="rgb(205,200,1)" fg:x="779" fg:w="2"/><text x="62.7701%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.6003%" y="501" width="0.0803%" height="15" fill="rgb(209,193,20)" fg:x="780" fg:w="1"/><text x="62.8503%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="62.6806%" y="581" width="0.2408%" height="15" fill="rgb(214,63,13)" fg:x="781" fg:w="3"/><text x="62.9306%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8411%" y="565" width="0.0803%" height="15" fill="rgb(253,113,46)" fg:x="783" fg:w="1"/><text x="63.0911%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.9213%" y="549" width="0.0803%" height="15" fill="rgb(237,103,34)" fg:x="784" fg:w="1"/><text x="63.1713%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (14 samples, 1.12%)</title><rect x="61.9583%" y="613" width="1.1236%" height="15" fill="rgb(223,38,25)" fg:x="772" fg:w="14"/><text x="62.2083%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (14 samples, 1.12%)</title><rect x="61.9583%" y="597" width="1.1236%" height="15" fill="rgb(251,32,32)" fg:x="772" fg:w="14"/><text x="62.2083%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="62.9213%" y="581" width="0.1605%" height="15" fill="rgb(228,65,22)" fg:x="784" fg:w="2"/><text x="63.1713%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="62.9213%" y="565" width="0.1605%" height="15" fill="rgb(205,11,46)" fg:x="784" fg:w="2"/><text x="63.1713%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="63.0016%" y="549" width="0.0803%" height="15" fill="rgb(220,35,2)" fg:x="785" fg:w="1"/><text x="63.2516%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="63.0016%" y="533" width="0.0803%" height="15" fill="rgb(217,151,17)" fg:x="785" fg:w="1"/><text x="63.2516%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="63.0016%" y="517" width="0.0803%" height="15" fill="rgb(243,227,35)" fg:x="785" fg:w="1"/><text x="63.2516%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.0016%" y="501" width="0.0803%" height="15" fill="rgb(214,0,34)" fg:x="785" fg:w="1"/><text x="63.2516%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.0016%" y="485" width="0.0803%" height="15" fill="rgb(209,42,37)" fg:x="785" fg:w="1"/><text x="63.2516%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="63.0016%" y="469" width="0.0803%" height="15" fill="rgb(251,176,30)" fg:x="785" fg:w="1"/><text x="63.2516%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.0819%" y="597" width="0.0803%" height="15" fill="rgb(223,64,40)" fg:x="786" fg:w="1"/><text x="63.3319%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="63.1621%" y="597" width="0.1605%" height="15" fill="rgb(227,180,23)" fg:x="787" fg:w="2"/><text x="63.4121%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="63.1621%" y="581" width="0.1605%" height="15" fill="rgb(220,137,31)" fg:x="787" fg:w="2"/><text x="63.4121%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.2424%" y="565" width="0.0803%" height="15" fill="rgb(245,124,25)" fg:x="788" fg:w="1"/><text x="63.4924%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.3226%" y="421" width="0.0803%" height="15" fill="rgb(217,157,5)" fg:x="789" fg:w="1"/><text x="63.5726%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="63.3226%" y="565" width="0.2408%" height="15" fill="rgb(225,59,2)" fg:x="789" fg:w="3"/><text x="63.5726%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="63.3226%" y="549" width="0.2408%" height="15" fill="rgb(220,182,9)" fg:x="789" fg:w="3"/><text x="63.5726%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="63.3226%" y="533" width="0.2408%" height="15" fill="rgb(249,54,24)" fg:x="789" fg:w="3"/><text x="63.5726%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.3226%" y="517" width="0.2408%" height="15" fill="rgb(216,89,17)" fg:x="789" fg:w="3"/><text x="63.5726%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.3226%" y="501" width="0.2408%" height="15" fill="rgb(245,20,45)" fg:x="789" fg:w="3"/><text x="63.5726%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.3226%" y="485" width="0.2408%" height="15" fill="rgb(230,83,14)" fg:x="789" fg:w="3"/><text x="63.5726%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.3226%" y="469" width="0.2408%" height="15" fill="rgb(246,109,11)" fg:x="789" fg:w="3"/><text x="63.5726%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="63.3226%" y="453" width="0.2408%" height="15" fill="rgb(235,85,23)" fg:x="789" fg:w="3"/><text x="63.5726%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.3226%" y="437" width="0.2408%" height="15" fill="rgb(215,101,36)" fg:x="789" fg:w="3"/><text x="63.5726%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.4029%" y="421" width="0.1605%" height="15" fill="rgb(228,140,31)" fg:x="790" fg:w="2"/><text x="63.6529%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.4029%" y="405" width="0.1605%" height="15" fill="rgb(234,162,37)" fg:x="790" fg:w="2"/><text x="63.6529%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.4831%" y="389" width="0.0803%" height="15" fill="rgb(221,0,24)" fg:x="791" fg:w="1"/><text x="63.7331%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.5634%" y="517" width="0.1605%" height="15" fill="rgb(230,161,41)" fg:x="792" fg:w="2"/><text x="63.8134%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.5634%" y="501" width="0.1605%" height="15" fill="rgb(224,46,24)" fg:x="792" fg:w="2"/><text x="63.8134%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.5634%" y="485" width="0.1605%" height="15" fill="rgb(205,59,32)" fg:x="792" fg:w="2"/><text x="63.8134%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.5634%" y="469" width="0.1605%" height="15" fill="rgb(239,31,20)" fg:x="792" fg:w="2"/><text x="63.8134%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6437%" y="453" width="0.0803%" height="15" fill="rgb(233,149,44)" fg:x="793" fg:w="1"/><text x="63.8937%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6437%" y="437" width="0.0803%" height="15" fill="rgb(243,47,26)" fg:x="793" fg:w="1"/><text x="63.8937%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6437%" y="421" width="0.0803%" height="15" fill="rgb(233,107,5)" fg:x="793" fg:w="1"/><text x="63.8937%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.6437%" y="405" width="0.0803%" height="15" fill="rgb(248,140,33)" fg:x="793" fg:w="1"/><text x="63.8937%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.6437%" y="389" width="0.0803%" height="15" fill="rgb(228,178,19)" fg:x="793" fg:w="1"/><text x="63.8937%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.6437%" y="373" width="0.0803%" height="15" fill="rgb(224,39,49)" fg:x="793" fg:w="1"/><text x="63.8937%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6437%" y="357" width="0.0803%" height="15" fill="rgb(246,56,47)" fg:x="793" fg:w="1"/><text x="63.8937%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6437%" y="341" width="0.0803%" height="15" fill="rgb(220,73,27)" fg:x="793" fg:w="1"/><text x="63.8937%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.6437%" y="325" width="0.0803%" height="15" fill="rgb(239,112,21)" fg:x="793" fg:w="1"/><text x="63.8937%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.6437%" y="309" width="0.0803%" height="15" fill="rgb(253,14,51)" fg:x="793" fg:w="1"/><text x="63.8937%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.6437%" y="293" width="0.0803%" height="15" fill="rgb(215,58,12)" fg:x="793" fg:w="1"/><text x="63.8937%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.6437%" y="277" width="0.0803%" height="15" fill="rgb(207,181,19)" fg:x="793" fg:w="1"/><text x="63.8937%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="63.6437%" y="261" width="0.0803%" height="15" fill="rgb(211,214,34)" fg:x="793" fg:w="1"/><text x="63.8937%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="63.6437%" y="245" width="0.0803%" height="15" fill="rgb(243,124,39)" fg:x="793" fg:w="1"/><text x="63.8937%" y="255.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="63.3226%" y="597" width="0.4815%" height="15" fill="rgb(248,135,21)" fg:x="789" fg:w="6"/><text x="63.5726%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="63.3226%" y="581" width="0.4815%" height="15" fill="rgb(245,218,3)" fg:x="789" fg:w="6"/><text x="63.5726%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="63.5634%" y="565" width="0.2408%" height="15" fill="rgb(225,144,22)" fg:x="792" fg:w="3"/><text x="63.8134%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="63.5634%" y="549" width="0.2408%" height="15" fill="rgb(250,90,15)" fg:x="792" fg:w="3"/><text x="63.8134%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="63.5634%" y="533" width="0.2408%" height="15" fill="rgb(224,64,29)" fg:x="792" fg:w="3"/><text x="63.8134%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.7239%" y="517" width="0.0803%" height="15" fill="rgb(217,50,47)" fg:x="794" fg:w="1"/><text x="63.9739%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.7239%" y="501" width="0.0803%" height="15" fill="rgb(231,159,47)" fg:x="794" fg:w="1"/><text x="63.9739%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.7239%" y="485" width="0.0803%" height="15" fill="rgb(213,89,29)" fg:x="794" fg:w="1"/><text x="63.9739%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="63.8042%" y="565" width="0.0803%" height="15" fill="rgb(243,90,23)" fg:x="795" fg:w="1"/><text x="64.0542%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="63.0819%" y="613" width="0.8828%" height="15" fill="rgb(213,21,6)" fg:x="786" fg:w="11"/><text x="63.3319%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="63.8042%" y="597" width="0.1605%" height="15" fill="rgb(237,139,17)" fg:x="795" fg:w="2"/><text x="64.0542%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="63.8042%" y="581" width="0.1605%" height="15" fill="rgb(250,147,17)" fg:x="795" fg:w="2"/><text x="64.0542%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="63.8844%" y="565" width="0.0803%" height="15" fill="rgb(212,208,42)" fg:x="796" fg:w="1"/><text x="64.1344%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="63.8844%" y="549" width="0.0803%" height="15" fill="rgb(215,229,40)" fg:x="796" fg:w="1"/><text x="64.1344%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="63.8844%" y="533" width="0.0803%" height="15" fill="rgb(206,204,1)" fg:x="796" fg:w="1"/><text x="64.1344%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.8844%" y="517" width="0.0803%" height="15" fill="rgb(230,62,32)" fg:x="796" fg:w="1"/><text x="64.1344%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.8844%" y="501" width="0.0803%" height="15" fill="rgb(223,22,42)" fg:x="796" fg:w="1"/><text x="64.1344%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.8844%" y="485" width="0.0803%" height="15" fill="rgb(244,6,23)" fg:x="796" fg:w="1"/><text x="64.1344%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="63.8844%" y="469" width="0.0803%" height="15" fill="rgb(240,221,42)" fg:x="796" fg:w="1"/><text x="64.1344%" y="479.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="63.8844%" y="453" width="0.0803%" height="15" fill="rgb(222,74,7)" fg:x="796" fg:w="1"/><text x="64.1344%" y="463.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="63.8844%" y="437" width="0.0803%" height="15" fill="rgb(227,191,38)" fg:x="796" fg:w="1"/><text x="64.1344%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (157 samples, 12.60%)</title><rect x="51.4446%" y="645" width="12.6003%" height="15" fill="rgb(227,89,34)" fg:x="641" fg:w="157"/><text x="51.6946%" y="655.50">&lt;plugins_core::carr..</text></g><g><title>plugins_core::tools::move_between (50 samples, 4.01%)</title><rect x="60.0321%" y="629" width="4.0128%" height="15" fill="rgb(215,153,25)" fg:x="748" fg:w="50"/><text x="60.2821%" y="639.50">plug..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="63.9647%" y="613" width="0.0803%" height="15" fill="rgb(215,153,46)" fg:x="797" fg:w="1"/><text x="64.2147%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="63.9647%" y="597" width="0.0803%" height="15" fill="rgb(242,38,52)" fg:x="797" fg:w="1"/><text x="64.2147%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.9647%" y="581" width="0.0803%" height="15" fill="rgb(218,112,4)" fg:x="797" fg:w="1"/><text x="64.2147%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="63.9647%" y="565" width="0.0803%" height="15" fill="rgb(231,210,31)" fg:x="797" fg:w="1"/><text x="64.2147%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="63.9647%" y="549" width="0.0803%" height="15" fill="rgb(245,223,36)" fg:x="797" fg:w="1"/><text x="64.2147%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="63.9647%" y="533" width="0.0803%" height="15" fill="rgb(246,41,2)" fg:x="797" fg:w="1"/><text x="64.2147%" y="543.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="63.9647%" y="517" width="0.0803%" height="15" fill="rgb(227,51,31)" fg:x="797" fg:w="1"/><text x="64.2147%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="63.9647%" y="501" width="0.0803%" height="15" fill="rgb(222,95,26)" fg:x="797" fg:w="1"/><text x="64.2147%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9647%" y="485" width="0.0803%" height="15" fill="rgb(224,190,1)" fg:x="797" fg:w="1"/><text x="64.2147%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9647%" y="469" width="0.0803%" height="15" fill="rgb(209,90,42)" fg:x="797" fg:w="1"/><text x="64.2147%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.9647%" y="453" width="0.0803%" height="15" fill="rgb(232,225,50)" fg:x="797" fg:w="1"/><text x="64.2147%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.9647%" y="437" width="0.0803%" height="15" fill="rgb(239,89,47)" fg:x="797" fg:w="1"/><text x="64.2147%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.9647%" y="421" width="0.0803%" height="15" fill="rgb(230,212,50)" fg:x="797" fg:w="1"/><text x="64.2147%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.9647%" y="405" width="0.0803%" height="15" fill="rgb(252,1,27)" fg:x="797" fg:w="1"/><text x="64.2147%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9647%" y="389" width="0.0803%" height="15" fill="rgb(237,179,41)" fg:x="797" fg:w="1"/><text x="64.2147%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2055%" y="629" width="0.0803%" height="15" fill="rgb(214,151,37)" fg:x="800" fg:w="1"/><text x="64.4555%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.2857%" y="597" width="0.1605%" height="15" fill="rgb(211,74,11)" fg:x="801" fg:w="2"/><text x="64.5357%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="64.4462%" y="597" width="0.0803%" height="15" fill="rgb(242,21,21)" fg:x="803" fg:w="1"/><text x="64.6962%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="64.4462%" y="581" width="0.0803%" height="15" fill="rgb(226,106,43)" fg:x="803" fg:w="1"/><text x="64.6962%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.4462%" y="565" width="0.0803%" height="15" fill="rgb(229,162,39)" fg:x="803" fg:w="1"/><text x="64.6962%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="64.5265%" y="581" width="0.1605%" height="15" fill="rgb(228,159,25)" fg:x="804" fg:w="2"/><text x="64.7765%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="64.5265%" y="565" width="0.1605%" height="15" fill="rgb(237,32,23)" fg:x="804" fg:w="2"/><text x="64.7765%" y="575.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="64.5265%" y="549" width="0.1605%" height="15" fill="rgb(212,35,32)" fg:x="804" fg:w="2"/><text x="64.7765%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="64.6870%" y="581" width="0.0803%" height="15" fill="rgb(215,199,1)" fg:x="806" fg:w="1"/><text x="64.9370%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6870%" y="565" width="0.0803%" height="15" fill="rgb(215,67,13)" fg:x="806" fg:w="1"/><text x="64.9370%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="64.7673%" y="533" width="0.1605%" height="15" fill="rgb(216,20,47)" fg:x="807" fg:w="2"/><text x="65.0173%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="64.7673%" y="517" width="0.1605%" height="15" fill="rgb(249,183,48)" fg:x="807" fg:w="2"/><text x="65.0173%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8475%" y="501" width="0.0803%" height="15" fill="rgb(208,86,37)" fg:x="808" fg:w="1"/><text x="65.0975%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8475%" y="485" width="0.0803%" height="15" fill="rgb(251,192,7)" fg:x="808" fg:w="1"/><text x="65.0975%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8475%" y="469" width="0.0803%" height="15" fill="rgb(234,196,3)" fg:x="808" fg:w="1"/><text x="65.0975%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.8475%" y="453" width="0.0803%" height="15" fill="rgb(229,150,39)" fg:x="808" fg:w="1"/><text x="65.0975%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.8475%" y="437" width="0.0803%" height="15" fill="rgb(226,19,29)" fg:x="808" fg:w="1"/><text x="65.0975%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.8475%" y="421" width="0.0803%" height="15" fill="rgb(226,222,2)" fg:x="808" fg:w="1"/><text x="65.0975%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.8475%" y="405" width="0.0803%" height="15" fill="rgb(235,85,29)" fg:x="808" fg:w="1"/><text x="65.0975%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.8475%" y="389" width="0.0803%" height="15" fill="rgb(237,194,43)" fg:x="808" fg:w="1"/><text x="65.0975%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.8475%" y="373" width="0.0803%" height="15" fill="rgb(211,4,42)" fg:x="808" fg:w="1"/><text x="65.0975%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.8475%" y="357" width="0.0803%" height="15" fill="rgb(221,80,37)" fg:x="808" fg:w="1"/><text x="65.0975%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.8475%" y="341" width="0.0803%" height="15" fill="rgb(222,47,31)" fg:x="808" fg:w="1"/><text x="65.0975%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.8475%" y="325" width="0.0803%" height="15" fill="rgb(249,82,52)" fg:x="808" fg:w="1"/><text x="65.0975%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8475%" y="309" width="0.0803%" height="15" fill="rgb(218,203,2)" fg:x="808" fg:w="1"/><text x="65.0975%" y="319.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="64.9278%" y="533" width="0.0803%" height="15" fill="rgb(210,175,14)" fg:x="809" fg:w="1"/><text x="65.1778%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9278%" y="517" width="0.0803%" height="15" fill="rgb(216,210,12)" fg:x="809" fg:w="1"/><text x="65.1778%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9278%" y="501" width="0.0803%" height="15" fill="rgb(229,120,18)" fg:x="809" fg:w="1"/><text x="65.1778%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.9278%" y="485" width="0.0803%" height="15" fill="rgb(231,174,12)" fg:x="809" fg:w="1"/><text x="65.1778%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.9278%" y="469" width="0.0803%" height="15" fill="rgb(214,101,53)" fg:x="809" fg:w="1"/><text x="65.1778%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.9278%" y="453" width="0.0803%" height="15" fill="rgb(246,89,43)" fg:x="809" fg:w="1"/><text x="65.1778%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9278%" y="437" width="0.0803%" height="15" fill="rgb(222,9,51)" fg:x="809" fg:w="1"/><text x="65.1778%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9278%" y="421" width="0.0803%" height="15" fill="rgb(252,221,9)" fg:x="809" fg:w="1"/><text x="65.1778%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.9278%" y="405" width="0.0803%" height="15" fill="rgb(248,28,15)" fg:x="809" fg:w="1"/><text x="65.1778%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.9278%" y="389" width="0.0803%" height="15" fill="rgb(213,54,52)" fg:x="809" fg:w="1"/><text x="65.1778%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.9278%" y="373" width="0.0803%" height="15" fill="rgb(240,3,45)" fg:x="809" fg:w="1"/><text x="65.1778%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.9278%" y="357" width="0.0803%" height="15" fill="rgb(239,138,24)" fg:x="809" fg:w="1"/><text x="65.1778%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9278%" y="341" width="0.0803%" height="15" fill="rgb(233,45,54)" fg:x="809" fg:w="1"/><text x="65.1778%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="64.7673%" y="565" width="0.3210%" height="15" fill="rgb(220,131,2)" fg:x="807" fg:w="4"/><text x="65.0173%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="64.7673%" y="549" width="0.3210%" height="15" fill="rgb(240,154,36)" fg:x="807" fg:w="4"/><text x="65.0173%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="65.0080%" y="533" width="0.0803%" height="15" fill="rgb(251,221,1)" fg:x="810" fg:w="1"/><text x="65.2580%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="65.0080%" y="517" width="0.0803%" height="15" fill="rgb(225,217,1)" fg:x="810" fg:w="1"/><text x="65.2580%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="501" width="0.0803%" height="15" fill="rgb(241,105,49)" fg:x="810" fg:w="1"/><text x="65.2580%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.0080%" y="485" width="0.0803%" height="15" fill="rgb(215,44,32)" fg:x="810" fg:w="1"/><text x="65.2580%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="469" width="0.0803%" height="15" fill="rgb(213,222,14)" fg:x="810" fg:w="1"/><text x="65.2580%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="453" width="0.0803%" height="15" fill="rgb(207,99,52)" fg:x="810" fg:w="1"/><text x="65.2580%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="437" width="0.0803%" height="15" fill="rgb(214,208,52)" fg:x="810" fg:w="1"/><text x="65.2580%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.0080%" y="421" width="0.0803%" height="15" fill="rgb(244,169,0)" fg:x="810" fg:w="1"/><text x="65.2580%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="405" width="0.0803%" height="15" fill="rgb(216,193,37)" fg:x="810" fg:w="1"/><text x="65.2580%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="389" width="0.0803%" height="15" fill="rgb(212,158,10)" fg:x="810" fg:w="1"/><text x="65.2580%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="373" width="0.0803%" height="15" fill="rgb(213,110,20)" fg:x="810" fg:w="1"/><text x="65.2580%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.0080%" y="357" width="0.0803%" height="15" fill="rgb(226,5,42)" fg:x="810" fg:w="1"/><text x="65.2580%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="341" width="0.0803%" height="15" fill="rgb(211,93,8)" fg:x="810" fg:w="1"/><text x="65.2580%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="325" width="0.0803%" height="15" fill="rgb(240,208,12)" fg:x="810" fg:w="1"/><text x="65.2580%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.0080%" y="309" width="0.0803%" height="15" fill="rgb(233,127,50)" fg:x="810" fg:w="1"/><text x="65.2580%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.0883%" y="565" width="0.0803%" height="15" fill="rgb(227,199,53)" fg:x="811" fg:w="1"/><text x="65.3383%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="65.1685%" y="501" width="0.4815%" height="15" fill="rgb(235,199,10)" fg:x="812" fg:w="6"/><text x="65.4185%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="65.1685%" y="485" width="0.4815%" height="15" fill="rgb(228,148,35)" fg:x="812" fg:w="6"/><text x="65.4185%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="65.2488%" y="469" width="0.4013%" height="15" fill="rgb(217,87,19)" fg:x="813" fg:w="5"/><text x="65.4988%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="65.2488%" y="453" width="0.4013%" height="15" fill="rgb(239,9,32)" fg:x="813" fg:w="5"/><text x="65.4988%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.40%)</title><rect x="65.2488%" y="437" width="0.4013%" height="15" fill="rgb(229,101,29)" fg:x="813" fg:w="5"/><text x="65.4988%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="65.2488%" y="421" width="0.4013%" height="15" fill="rgb(208,143,26)" fg:x="813" fg:w="5"/><text x="65.4988%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.40%)</title><rect x="65.2488%" y="405" width="0.4013%" height="15" fill="rgb(214,10,2)" fg:x="813" fg:w="5"/><text x="65.4988%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="65.4093%" y="389" width="0.2408%" height="15" fill="rgb(254,203,30)" fg:x="815" fg:w="3"/><text x="65.6593%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="65.4093%" y="373" width="0.2408%" height="15" fill="rgb(242,45,3)" fg:x="815" fg:w="3"/><text x="65.6593%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="65.4093%" y="357" width="0.2408%" height="15" fill="rgb(209,146,51)" fg:x="815" fg:w="3"/><text x="65.6593%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="65.4093%" y="341" width="0.2408%" height="15" fill="rgb(222,80,5)" fg:x="815" fg:w="3"/><text x="65.6593%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="65.4093%" y="325" width="0.2408%" height="15" fill="rgb(252,80,35)" fg:x="815" fg:w="3"/><text x="65.6593%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="65.4093%" y="309" width="0.2408%" height="15" fill="rgb(246,125,28)" fg:x="815" fg:w="3"/><text x="65.6593%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="65.4093%" y="293" width="0.2408%" height="15" fill="rgb(224,143,51)" fg:x="815" fg:w="3"/><text x="65.6593%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="65.1685%" y="533" width="0.5618%" height="15" fill="rgb(205,24,17)" fg:x="812" fg:w="7"/><text x="65.4185%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="65.1685%" y="517" width="0.5618%" height="15" fill="rgb(253,128,30)" fg:x="812" fg:w="7"/><text x="65.4185%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6501%" y="501" width="0.0803%" height="15" fill="rgb(214,153,25)" fg:x="818" fg:w="1"/><text x="65.9001%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.7303%" y="517" width="0.1605%" height="15" fill="rgb(214,4,28)" fg:x="819" fg:w="2"/><text x="65.9803%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="65.7303%" y="533" width="0.2408%" height="15" fill="rgb(235,179,52)" fg:x="819" fg:w="3"/><text x="65.9803%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="65.8909%" y="517" width="0.0803%" height="15" fill="rgb(233,27,42)" fg:x="821" fg:w="1"/><text x="66.1409%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8909%" y="501" width="0.0803%" height="15" fill="rgb(238,35,25)" fg:x="821" fg:w="1"/><text x="66.1409%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.9711%" y="533" width="0.0803%" height="15" fill="rgb(227,44,31)" fg:x="822" fg:w="1"/><text x="66.2211%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.9711%" y="517" width="0.0803%" height="15" fill="rgb(232,201,13)" fg:x="822" fg:w="1"/><text x="66.2211%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.0514%" y="501" width="0.1605%" height="15" fill="rgb(224,172,52)" fg:x="823" fg:w="2"/><text x="66.3014%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.2119%" y="501" width="0.0803%" height="15" fill="rgb(214,27,26)" fg:x="825" fg:w="1"/><text x="66.4619%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.2119%" y="485" width="0.0803%" height="15" fill="rgb(210,185,52)" fg:x="825" fg:w="1"/><text x="66.4619%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (6 samples, 0.48%)</title><rect x="66.0514%" y="533" width="0.4815%" height="15" fill="rgb(249,59,32)" fg:x="823" fg:w="6"/><text x="66.3014%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="66.0514%" y="517" width="0.4815%" height="15" fill="rgb(242,209,18)" fg:x="823" fg:w="6"/><text x="66.3014%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="66.2921%" y="501" width="0.2408%" height="15" fill="rgb(229,0,18)" fg:x="826" fg:w="3"/><text x="66.5421%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="66.3724%" y="485" width="0.1605%" height="15" fill="rgb(217,138,29)" fg:x="827" fg:w="2"/><text x="66.6224%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="66.3724%" y="469" width="0.1605%" height="15" fill="rgb(215,72,42)" fg:x="827" fg:w="2"/><text x="66.6224%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.3724%" y="453" width="0.1605%" height="15" fill="rgb(254,115,11)" fg:x="827" fg:w="2"/><text x="66.6224%" y="463.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="66.5329%" y="533" width="0.0803%" height="15" fill="rgb(205,133,39)" fg:x="829" fg:w="1"/><text x="66.7829%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.6132%" y="501" width="0.1605%" height="15" fill="rgb(211,36,27)" fg:x="830" fg:w="2"/><text x="66.8632%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (29 samples, 2.33%)</title><rect x="64.5265%" y="597" width="2.3274%" height="15" fill="rgb(221,48,10)" fg:x="804" fg:w="29"/><text x="64.7765%" y="607.50">p..</text></g><g><title>plugins_core::tools::contained_by (26 samples, 2.09%)</title><rect x="64.7673%" y="581" width="2.0867%" height="15" fill="rgb(230,172,50)" fg:x="807" fg:w="26"/><text x="65.0173%" y="591.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (21 samples, 1.69%)</title><rect x="65.1685%" y="565" width="1.6854%" height="15" fill="rgb(249,72,18)" fg:x="812" fg:w="21"/><text x="65.4185%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (21 samples, 1.69%)</title><rect x="65.1685%" y="549" width="1.6854%" height="15" fill="rgb(237,58,48)" fg:x="812" fg:w="21"/><text x="65.4185%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.6132%" y="533" width="0.2408%" height="15" fill="rgb(242,123,3)" fg:x="830" fg:w="3"/><text x="66.8632%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.6132%" y="517" width="0.2408%" height="15" fill="rgb(232,111,32)" fg:x="830" fg:w="3"/><text x="66.8632%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="66.7737%" y="501" width="0.0803%" height="15" fill="rgb(229,108,3)" fg:x="832" fg:w="1"/><text x="67.0237%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="66.7737%" y="485" width="0.0803%" height="15" fill="rgb(222,158,10)" fg:x="832" fg:w="1"/><text x="67.0237%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="66.7737%" y="469" width="0.0803%" height="15" fill="rgb(205,34,49)" fg:x="832" fg:w="1"/><text x="67.0237%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.7737%" y="453" width="0.0803%" height="15" fill="rgb(232,21,14)" fg:x="832" fg:w="1"/><text x="67.0237%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7737%" y="437" width="0.0803%" height="15" fill="rgb(229,127,44)" fg:x="832" fg:w="1"/><text x="67.0237%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="66.8539%" y="533" width="0.0803%" height="15" fill="rgb(232,171,4)" fg:x="833" fg:w="1"/><text x="67.1039%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.1750%" y="341" width="0.0803%" height="15" fill="rgb(250,92,16)" fg:x="837" fg:w="1"/><text x="67.4250%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.1750%" y="325" width="0.0803%" height="15" fill="rgb(230,103,38)" fg:x="837" fg:w="1"/><text x="67.4250%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.1750%" y="309" width="0.0803%" height="15" fill="rgb(253,167,9)" fg:x="837" fg:w="1"/><text x="67.4250%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.1750%" y="293" width="0.0803%" height="15" fill="rgb(222,118,11)" fg:x="837" fg:w="1"/><text x="67.4250%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.1750%" y="277" width="0.0803%" height="15" fill="rgb(240,202,0)" fg:x="837" fg:w="1"/><text x="67.4250%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.1750%" y="261" width="0.0803%" height="15" fill="rgb(236,124,4)" fg:x="837" fg:w="1"/><text x="67.4250%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1750%" y="245" width="0.0803%" height="15" fill="rgb(244,128,18)" fg:x="837" fg:w="1"/><text x="67.4250%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.1750%" y="437" width="0.1605%" height="15" fill="rgb(231,206,5)" fg:x="837" fg:w="2"/><text x="67.4250%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.1750%" y="421" width="0.1605%" height="15" fill="rgb(237,111,8)" fg:x="837" fg:w="2"/><text x="67.4250%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.1750%" y="405" width="0.1605%" height="15" fill="rgb(225,127,3)" fg:x="837" fg:w="2"/><text x="67.4250%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="67.1750%" y="389" width="0.1605%" height="15" fill="rgb(222,85,48)" fg:x="837" fg:w="2"/><text x="67.4250%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="67.1750%" y="373" width="0.1605%" height="15" fill="rgb(221,108,37)" fg:x="837" fg:w="2"/><text x="67.4250%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="67.1750%" y="357" width="0.1605%" height="15" fill="rgb(226,169,36)" fg:x="837" fg:w="2"/><text x="67.4250%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.2552%" y="341" width="0.0803%" height="15" fill="rgb(237,76,12)" fg:x="838" fg:w="1"/><text x="67.5052%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.2552%" y="325" width="0.0803%" height="15" fill="rgb(210,227,32)" fg:x="838" fg:w="1"/><text x="67.5052%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="67.0947%" y="485" width="0.3210%" height="15" fill="rgb(214,117,20)" fg:x="836" fg:w="4"/><text x="67.3447%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="67.0947%" y="469" width="0.3210%" height="15" fill="rgb(234,119,41)" fg:x="836" fg:w="4"/><text x="67.3447%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="67.0947%" y="453" width="0.3210%" height="15" fill="rgb(230,130,47)" fg:x="836" fg:w="4"/><text x="67.3447%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3355%" y="437" width="0.0803%" height="15" fill="rgb(215,21,41)" fg:x="839" fg:w="1"/><text x="67.5855%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3355%" y="421" width="0.0803%" height="15" fill="rgb(226,26,53)" fg:x="839" fg:w="1"/><text x="67.5855%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.3355%" y="405" width="0.0803%" height="15" fill="rgb(221,92,23)" fg:x="839" fg:w="1"/><text x="67.5855%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.3355%" y="389" width="0.0803%" height="15" fill="rgb(213,156,21)" fg:x="839" fg:w="1"/><text x="67.5855%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.3355%" y="373" width="0.0803%" height="15" fill="rgb(254,166,29)" fg:x="839" fg:w="1"/><text x="67.5855%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3355%" y="357" width="0.0803%" height="15" fill="rgb(213,71,1)" fg:x="839" fg:w="1"/><text x="67.5855%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3355%" y="341" width="0.0803%" height="15" fill="rgb(245,8,13)" fg:x="839" fg:w="1"/><text x="67.5855%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.3355%" y="325" width="0.0803%" height="15" fill="rgb(213,32,32)" fg:x="839" fg:w="1"/><text x="67.5855%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.3355%" y="309" width="0.0803%" height="15" fill="rgb(251,86,50)" fg:x="839" fg:w="1"/><text x="67.5855%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.3355%" y="293" width="0.0803%" height="15" fill="rgb(252,92,41)" fg:x="839" fg:w="1"/><text x="67.5855%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.3355%" y="277" width="0.0803%" height="15" fill="rgb(234,70,35)" fg:x="839" fg:w="1"/><text x="67.5855%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3355%" y="261" width="0.0803%" height="15" fill="rgb(210,157,19)" fg:x="839" fg:w="1"/><text x="67.5855%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="67.0144%" y="501" width="0.4815%" height="15" fill="rgb(206,20,45)" fg:x="835" fg:w="6"/><text x="67.2644%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4157%" y="485" width="0.0803%" height="15" fill="rgb(207,34,7)" fg:x="840" fg:w="1"/><text x="67.6657%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4960%" y="469" width="0.0803%" height="15" fill="rgb(253,151,14)" fg:x="841" fg:w="1"/><text x="67.7460%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="67.6565%" y="405" width="0.1605%" height="15" fill="rgb(252,1,18)" fg:x="843" fg:w="2"/><text x="67.9065%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.6565%" y="389" width="0.1605%" height="15" fill="rgb(214,77,52)" fg:x="843" fg:w="2"/><text x="67.9065%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="67.6565%" y="373" width="0.1605%" height="15" fill="rgb(254,106,35)" fg:x="843" fg:w="2"/><text x="67.9065%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.6565%" y="357" width="0.1605%" height="15" fill="rgb(212,67,40)" fg:x="843" fg:w="2"/><text x="67.9065%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.7368%" y="341" width="0.0803%" height="15" fill="rgb(228,76,23)" fg:x="844" fg:w="1"/><text x="67.9868%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (45 samples, 3.61%)</title><rect x="64.2857%" y="629" width="3.6116%" height="15" fill="rgb(250,198,5)" fg:x="801" fg:w="45"/><text x="64.5357%" y="639.50">&lt;eng..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (45 samples, 3.61%)</title><rect x="64.2857%" y="613" width="3.6116%" height="15" fill="rgb(209,20,25)" fg:x="801" fg:w="45"/><text x="64.5357%" y="623.50">&lt;plu..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (13 samples, 1.04%)</title><rect x="66.8539%" y="597" width="1.0433%" height="15" fill="rgb(236,32,4)" fg:x="833" fg:w="13"/><text x="67.1039%" y="607.50"></text></g><g><title>plugins_core::finding::matches_description (13 samples, 1.04%)</title><rect x="66.8539%" y="581" width="1.0433%" height="15" fill="rgb(215,31,6)" fg:x="833" fg:w="13"/><text x="67.1039%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::name (13 samples, 1.04%)</title><rect x="66.8539%" y="565" width="1.0433%" height="15" fill="rgb(207,186,49)" fg:x="833" fg:w="13"/><text x="67.1039%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (13 samples, 1.04%)</title><rect x="66.8539%" y="549" width="1.0433%" height="15" fill="rgb(211,212,49)" fg:x="833" fg:w="13"/><text x="67.1039%" y="559.50"></text></g><g><title>kernel::model::props::load_props (12 samples, 0.96%)</title><rect x="66.9342%" y="533" width="0.9631%" height="15" fill="rgb(229,51,41)" fg:x="834" fg:w="12"/><text x="67.1842%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="66.9342%" y="517" width="0.9631%" height="15" fill="rgb(205,225,36)" fg:x="834" fg:w="12"/><text x="67.1842%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="67.4960%" y="501" width="0.4013%" height="15" fill="rgb(209,213,45)" fg:x="841" fg:w="5"/><text x="67.7460%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="67.4960%" y="485" width="0.4013%" height="15" fill="rgb(219,35,49)" fg:x="841" fg:w="5"/><text x="67.7460%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="67.5762%" y="469" width="0.3210%" height="15" fill="rgb(215,205,22)" fg:x="842" fg:w="4"/><text x="67.8262%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="67.5762%" y="453" width="0.3210%" height="15" fill="rgb(248,204,34)" fg:x="842" fg:w="4"/><text x="67.8262%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="67.5762%" y="437" width="0.3210%" height="15" fill="rgb(219,223,31)" fg:x="842" fg:w="4"/><text x="67.8262%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="67.5762%" y="421" width="0.3210%" height="15" fill="rgb(236,14,8)" fg:x="842" fg:w="4"/><text x="67.8262%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="67.8170%" y="405" width="0.0803%" height="15" fill="rgb(243,129,23)" fg:x="845" fg:w="1"/><text x="68.0670%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="67.8973%" y="629" width="0.0803%" height="15" fill="rgb(205,204,5)" fg:x="846" fg:w="1"/><text x="68.1473%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.8973%" y="613" width="0.0803%" height="15" fill="rgb(244,115,32)" fg:x="846" fg:w="1"/><text x="68.1473%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.9775%" y="549" width="0.0803%" height="15" fill="rgb(229,123,14)" fg:x="847" fg:w="1"/><text x="68.2275%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.1380%" y="485" width="0.0803%" height="15" fill="rgb(250,85,1)" fg:x="849" fg:w="1"/><text x="68.3880%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.2183%" y="453" width="0.0803%" height="15" fill="rgb(209,141,54)" fg:x="850" fg:w="1"/><text x="68.4683%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.2986%" y="453" width="0.0803%" height="15" fill="rgb(244,107,39)" fg:x="851" fg:w="1"/><text x="68.5486%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="67.9775%" y="597" width="0.4815%" height="15" fill="rgb(230,68,26)" fg:x="847" fg:w="6"/><text x="68.2275%" y="607.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="67.9775%" y="581" width="0.4815%" height="15" fill="rgb(220,178,33)" fg:x="847" fg:w="6"/><text x="68.2275%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="67.9775%" y="565" width="0.4815%" height="15" fill="rgb(220,77,53)" fg:x="847" fg:w="6"/><text x="68.2275%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="68.0578%" y="549" width="0.4013%" height="15" fill="rgb(224,108,19)" fg:x="848" fg:w="5"/><text x="68.3078%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="68.1380%" y="533" width="0.3210%" height="15" fill="rgb(223,203,27)" fg:x="849" fg:w="4"/><text x="68.3880%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="68.1380%" y="517" width="0.3210%" height="15" fill="rgb(211,32,46)" fg:x="849" fg:w="4"/><text x="68.3880%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="68.1380%" y="501" width="0.3210%" height="15" fill="rgb(240,101,27)" fg:x="849" fg:w="4"/><text x="68.3880%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="68.2183%" y="485" width="0.2408%" height="15" fill="rgb(217,210,11)" fg:x="850" fg:w="3"/><text x="68.4683%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.2183%" y="469" width="0.2408%" height="15" fill="rgb(236,130,21)" fg:x="850" fg:w="3"/><text x="68.4683%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.3788%" y="453" width="0.0803%" height="15" fill="rgb(250,136,8)" fg:x="852" fg:w="1"/><text x="68.6288%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.3788%" y="437" width="0.0803%" height="15" fill="rgb(243,223,36)" fg:x="852" fg:w="1"/><text x="68.6288%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.3788%" y="421" width="0.0803%" height="15" fill="rgb(246,184,8)" fg:x="852" fg:w="1"/><text x="68.6288%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="68.4591%" y="581" width="0.0803%" height="15" fill="rgb(222,158,36)" fg:x="853" fg:w="1"/><text x="68.7091%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7801%" y="469" width="0.0803%" height="15" fill="rgb(210,220,19)" fg:x="857" fg:w="1"/><text x="69.0301%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.5393%" y="549" width="0.4013%" height="15" fill="rgb(246,44,38)" fg:x="854" fg:w="5"/><text x="68.7893%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.6196%" y="533" width="0.3210%" height="15" fill="rgb(246,186,14)" fg:x="855" fg:w="4"/><text x="68.8696%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.6196%" y="517" width="0.3210%" height="15" fill="rgb(233,193,20)" fg:x="855" fg:w="4"/><text x="68.8696%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.6196%" y="501" width="0.3210%" height="15" fill="rgb(215,60,5)" fg:x="855" fg:w="4"/><text x="68.8696%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.6196%" y="485" width="0.3210%" height="15" fill="rgb(207,128,10)" fg:x="855" fg:w="4"/><text x="68.8696%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="68.8604%" y="469" width="0.0803%" height="15" fill="rgb(238,84,54)" fg:x="858" fg:w="1"/><text x="69.1104%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="68.8604%" y="453" width="0.0803%" height="15" fill="rgb(213,130,11)" fg:x="858" fg:w="1"/><text x="69.1104%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.9406%" y="469" width="0.0803%" height="15" fill="rgb(235,62,9)" fg:x="859" fg:w="1"/><text x="69.1906%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.9406%" y="549" width="0.1605%" height="15" fill="rgb(222,64,24)" fg:x="859" fg:w="2"/><text x="69.1906%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="68.9406%" y="533" width="0.1605%" height="15" fill="rgb(238,193,42)" fg:x="859" fg:w="2"/><text x="69.1906%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.9406%" y="517" width="0.1605%" height="15" fill="rgb(243,204,46)" fg:x="859" fg:w="2"/><text x="69.1906%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.9406%" y="501" width="0.1605%" height="15" fill="rgb(243,196,11)" fg:x="859" fg:w="2"/><text x="69.1906%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.9406%" y="485" width="0.1605%" height="15" fill="rgb(232,77,22)" fg:x="859" fg:w="2"/><text x="69.1906%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.0209%" y="469" width="0.0803%" height="15" fill="rgb(215,80,25)" fg:x="860" fg:w="1"/><text x="69.2709%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.0209%" y="453" width="0.0803%" height="15" fill="rgb(210,173,7)" fg:x="860" fg:w="1"/><text x="69.2709%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0209%" y="437" width="0.0803%" height="15" fill="rgb(207,101,10)" fg:x="860" fg:w="1"/><text x="69.2709%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.1814%" y="517" width="0.0803%" height="15" fill="rgb(246,57,48)" fg:x="862" fg:w="1"/><text x="69.4314%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.2616%" y="453" width="0.0803%" height="15" fill="rgb(236,184,40)" fg:x="863" fg:w="1"/><text x="69.5116%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (19 samples, 1.52%)</title><rect x="67.9775%" y="629" width="1.5249%" height="15" fill="rgb(210,205,13)" fg:x="847" fg:w="19"/><text x="68.2275%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (19 samples, 1.52%)</title><rect x="67.9775%" y="613" width="1.5249%" height="15" fill="rgb(231,129,42)" fg:x="847" fg:w="19"/><text x="68.2275%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (13 samples, 1.04%)</title><rect x="68.4591%" y="597" width="1.0433%" height="15" fill="rgb(220,229,54)" fg:x="853" fg:w="13"/><text x="68.7091%" y="607.50"></text></g><g><title>kernel::model::props::load_props (12 samples, 0.96%)</title><rect x="68.5393%" y="581" width="0.9631%" height="15" fill="rgb(230,192,26)" fg:x="854" fg:w="12"/><text x="68.7893%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="68.5393%" y="565" width="0.9631%" height="15" fill="rgb(253,18,30)" fg:x="854" fg:w="12"/><text x="68.7893%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="69.1011%" y="549" width="0.4013%" height="15" fill="rgb(216,62,53)" fg:x="861" fg:w="5"/><text x="69.3511%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="69.1011%" y="533" width="0.4013%" height="15" fill="rgb(230,79,29)" fg:x="861" fg:w="5"/><text x="69.3511%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="69.2616%" y="517" width="0.2408%" height="15" fill="rgb(242,26,26)" fg:x="863" fg:w="3"/><text x="69.5116%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.2616%" y="501" width="0.2408%" height="15" fill="rgb(227,125,21)" fg:x="863" fg:w="3"/><text x="69.5116%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="69.2616%" y="485" width="0.2408%" height="15" fill="rgb(229,93,26)" fg:x="863" fg:w="3"/><text x="69.5116%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.2616%" y="469" width="0.2408%" height="15" fill="rgb(227,228,8)" fg:x="863" fg:w="3"/><text x="69.5116%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.3419%" y="453" width="0.1605%" height="15" fill="rgb(233,56,0)" fg:x="864" fg:w="2"/><text x="69.5919%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.3419%" y="437" width="0.1605%" height="15" fill="rgb(225,185,17)" fg:x="864" fg:w="2"/><text x="69.5919%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.4222%" y="421" width="0.0803%" height="15" fill="rgb(238,202,30)" fg:x="865" fg:w="1"/><text x="69.6722%" y="431.50"></text></g><g><title>kernel::surround::Surroundings::unpack (3 samples, 0.24%)</title><rect x="69.5024%" y="629" width="0.2408%" height="15" fill="rgb(236,60,13)" fg:x="866" fg:w="3"/><text x="69.7524%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="69.5024%" y="613" width="0.2408%" height="15" fill="rgb(244,92,0)" fg:x="866" fg:w="3"/><text x="69.7524%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6629%" y="597" width="0.0803%" height="15" fill="rgb(225,57,15)" fg:x="868" fg:w="1"/><text x="69.9129%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6629%" y="581" width="0.0803%" height="15" fill="rgb(228,5,28)" fg:x="868" fg:w="1"/><text x="69.9129%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.6629%" y="565" width="0.0803%" height="15" fill="rgb(252,34,51)" fg:x="868" fg:w="1"/><text x="69.9129%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.6629%" y="549" width="0.0803%" height="15" fill="rgb(235,58,7)" fg:x="868" fg:w="1"/><text x="69.9129%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.6629%" y="533" width="0.0803%" height="15" fill="rgb(250,132,20)" fg:x="868" fg:w="1"/><text x="69.9129%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6629%" y="517" width="0.0803%" height="15" fill="rgb(217,164,0)" fg:x="868" fg:w="1"/><text x="69.9129%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6629%" y="501" width="0.0803%" height="15" fill="rgb(208,220,35)" fg:x="868" fg:w="1"/><text x="69.9129%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.6629%" y="485" width="0.0803%" height="15" fill="rgb(227,42,51)" fg:x="868" fg:w="1"/><text x="69.9129%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.6629%" y="469" width="0.0803%" height="15" fill="rgb(225,146,38)" fg:x="868" fg:w="1"/><text x="69.9129%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.6629%" y="453" width="0.0803%" height="15" fill="rgb(252,108,37)" fg:x="868" fg:w="1"/><text x="69.9129%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.6629%" y="437" width="0.0803%" height="15" fill="rgb(244,101,24)" fg:x="868" fg:w="1"/><text x="69.9129%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6629%" y="421" width="0.0803%" height="15" fill="rgb(213,161,50)" fg:x="868" fg:w="1"/><text x="69.9129%" y="431.50"></text></g><g><title>plugins_core::library::actions::reply_done (3 samples, 0.24%)</title><rect x="69.7432%" y="629" width="0.2408%" height="15" fill="rgb(248,159,19)" fg:x="869" fg:w="3"/><text x="69.9932%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (2 samples, 0.16%)</title><rect x="69.8234%" y="613" width="0.1605%" height="15" fill="rgb(233,179,15)" fg:x="870" fg:w="2"/><text x="70.0734%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="69.9037%" y="597" width="0.0803%" height="15" fill="rgb(248,178,3)" fg:x="871" fg:w="1"/><text x="70.1537%" y="607.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="69.9037%" y="581" width="0.0803%" height="15" fill="rgb(245,190,41)" fg:x="871" fg:w="1"/><text x="70.1537%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="69.9037%" y="565" width="0.0803%" height="15" fill="rgb(218,151,19)" fg:x="871" fg:w="1"/><text x="70.1537%" y="575.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="69.9037%" y="549" width="0.0803%" height="15" fill="rgb(245,25,44)" fg:x="871" fg:w="1"/><text x="70.1537%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="69.9037%" y="533" width="0.0803%" height="15" fill="rgb(235,172,47)" fg:x="871" fg:w="1"/><text x="70.1537%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="69.9037%" y="517" width="0.0803%" height="15" fill="rgb(246,33,12)" fg:x="871" fg:w="1"/><text x="70.1537%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="69.9037%" y="501" width="0.0803%" height="15" fill="rgb(214,124,7)" fg:x="871" fg:w="1"/><text x="70.1537%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="69.9037%" y="485" width="0.0803%" height="15" fill="rgb(246,186,18)" fg:x="871" fg:w="1"/><text x="70.1537%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="69.9037%" y="469" width="0.0803%" height="15" fill="rgb(231,94,1)" fg:x="871" fg:w="1"/><text x="70.1537%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="69.9037%" y="453" width="0.0803%" height="15" fill="rgb(208,33,48)" fg:x="871" fg:w="1"/><text x="70.1537%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="69.9037%" y="437" width="0.0803%" height="15" fill="rgb(208,195,44)" fg:x="871" fg:w="1"/><text x="70.1537%" y="447.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="69.9037%" y="421" width="0.0803%" height="15" fill="rgb(226,13,52)" fg:x="871" fg:w="1"/><text x="70.1537%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="69.9839%" y="613" width="0.0803%" height="15" fill="rgb(217,219,45)" fg:x="872" fg:w="1"/><text x="70.2339%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="70.0642%" y="613" width="0.0803%" height="15" fill="rgb(223,45,25)" fg:x="873" fg:w="1"/><text x="70.3142%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.0642%" y="597" width="0.0803%" height="15" fill="rgb(241,163,0)" fg:x="873" fg:w="1"/><text x="70.3142%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="70.1445%" y="613" width="0.0803%" height="15" fill="rgb(216,68,47)" fg:x="874" fg:w="1"/><text x="70.3945%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="70.2247%" y="613" width="0.0803%" height="15" fill="rgb(236,119,45)" fg:x="875" fg:w="1"/><text x="70.4747%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="70.2247%" y="597" width="0.0803%" height="15" fill="rgb(209,188,24)" fg:x="875" fg:w="1"/><text x="70.4747%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3852%" y="581" width="0.0803%" height="15" fill="rgb(221,118,7)" fg:x="877" fg:w="1"/><text x="70.6352%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3852%" y="565" width="0.0803%" height="15" fill="rgb(213,148,43)" fg:x="877" fg:w="1"/><text x="70.6352%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.3852%" y="549" width="0.0803%" height="15" fill="rgb(231,21,43)" fg:x="877" fg:w="1"/><text x="70.6352%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.3852%" y="533" width="0.0803%" height="15" fill="rgb(232,213,43)" fg:x="877" fg:w="1"/><text x="70.6352%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.3852%" y="517" width="0.0803%" height="15" fill="rgb(239,145,50)" fg:x="877" fg:w="1"/><text x="70.6352%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3852%" y="501" width="0.0803%" height="15" fill="rgb(222,131,18)" fg:x="877" fg:w="1"/><text x="70.6352%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3852%" y="485" width="0.0803%" height="15" fill="rgb(243,181,13)" fg:x="877" fg:w="1"/><text x="70.6352%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.3852%" y="469" width="0.0803%" height="15" fill="rgb(212,74,41)" fg:x="877" fg:w="1"/><text x="70.6352%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.3852%" y="453" width="0.0803%" height="15" fill="rgb(237,143,34)" fg:x="877" fg:w="1"/><text x="70.6352%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.3852%" y="437" width="0.0803%" height="15" fill="rgb(228,139,0)" fg:x="877" fg:w="1"/><text x="70.6352%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.3852%" y="421" width="0.0803%" height="15" fill="rgb(227,214,11)" fg:x="877" fg:w="1"/><text x="70.6352%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3852%" y="405" width="0.0803%" height="15" fill="rgb(228,118,39)" fg:x="877" fg:w="1"/><text x="70.6352%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4655%" y="533" width="0.0803%" height="15" fill="rgb(207,117,22)" fg:x="878" fg:w="1"/><text x="70.7155%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4655%" y="517" width="0.0803%" height="15" fill="rgb(225,91,8)" fg:x="878" fg:w="1"/><text x="70.7155%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4655%" y="501" width="0.0803%" height="15" fill="rgb(230,219,48)" fg:x="878" fg:w="1"/><text x="70.7155%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4655%" y="485" width="0.0803%" height="15" fill="rgb(244,0,23)" fg:x="878" fg:w="1"/><text x="70.7155%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4655%" y="469" width="0.0803%" height="15" fill="rgb(206,212,23)" fg:x="878" fg:w="1"/><text x="70.7155%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.4655%" y="453" width="0.0803%" height="15" fill="rgb(254,62,10)" fg:x="878" fg:w="1"/><text x="70.7155%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="70.4655%" y="581" width="0.2408%" height="15" fill="rgb(236,58,8)" fg:x="878" fg:w="3"/><text x="70.7155%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="70.4655%" y="565" width="0.2408%" height="15" fill="rgb(232,212,17)" fg:x="878" fg:w="3"/><text x="70.7155%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="70.4655%" y="549" width="0.2408%" height="15" fill="rgb(206,132,9)" fg:x="878" fg:w="3"/><text x="70.7155%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.5457%" y="533" width="0.1605%" height="15" fill="rgb(234,97,28)" fg:x="879" fg:w="2"/><text x="70.7957%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.5457%" y="517" width="0.1605%" height="15" fill="rgb(254,144,9)" fg:x="879" fg:w="2"/><text x="70.7957%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.6260%" y="501" width="0.0803%" height="15" fill="rgb(244,204,43)" fg:x="880" fg:w="1"/><text x="70.8760%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6260%" y="485" width="0.0803%" height="15" fill="rgb(248,177,16)" fg:x="880" fg:w="1"/><text x="70.8760%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.6260%" y="469" width="0.0803%" height="15" fill="rgb(219,110,15)" fg:x="880" fg:w="1"/><text x="70.8760%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6260%" y="453" width="0.0803%" height="15" fill="rgb(212,203,25)" fg:x="880" fg:w="1"/><text x="70.8760%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.6260%" y="437" width="0.0803%" height="15" fill="rgb(205,50,1)" fg:x="880" fg:w="1"/><text x="70.8760%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="70.7063%" y="565" width="0.0803%" height="15" fill="rgb(222,152,41)" fg:x="881" fg:w="1"/><text x="70.9563%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.7063%" y="549" width="0.0803%" height="15" fill="rgb(236,83,3)" fg:x="881" fg:w="1"/><text x="70.9563%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.7865%" y="533" width="0.1605%" height="15" fill="rgb(214,30,54)" fg:x="882" fg:w="2"/><text x="71.0365%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="70.7865%" y="517" width="0.1605%" height="15" fill="rgb(250,117,31)" fg:x="882" fg:w="2"/><text x="71.0365%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.7865%" y="501" width="0.1605%" height="15" fill="rgb(228,77,14)" fg:x="882" fg:w="2"/><text x="71.0365%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.7865%" y="485" width="0.1605%" height="15" fill="rgb(241,3,28)" fg:x="882" fg:w="2"/><text x="71.0365%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.0273%" y="405" width="0.0803%" height="15" fill="rgb(221,175,52)" fg:x="885" fg:w="1"/><text x="71.2773%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.0273%" y="389" width="0.0803%" height="15" fill="rgb(237,91,6)" fg:x="885" fg:w="1"/><text x="71.2773%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="70.3050%" y="613" width="0.8828%" height="15" fill="rgb(246,46,42)" fg:x="876" fg:w="11"/><text x="70.5550%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="70.3050%" y="597" width="0.8828%" height="15" fill="rgb(235,199,0)" fg:x="876" fg:w="11"/><text x="70.5550%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="70.7063%" y="581" width="0.4815%" height="15" fill="rgb(224,44,40)" fg:x="881" fg:w="6"/><text x="70.9563%" y="591.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="70.7865%" y="565" width="0.4013%" height="15" fill="rgb(209,24,35)" fg:x="882" fg:w="5"/><text x="71.0365%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="70.7865%" y="549" width="0.4013%" height="15" fill="rgb(244,46,22)" fg:x="882" fg:w="5"/><text x="71.0365%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.9470%" y="533" width="0.2408%" height="15" fill="rgb(235,99,8)" fg:x="884" fg:w="3"/><text x="71.1970%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.9470%" y="517" width="0.2408%" height="15" fill="rgb(218,127,36)" fg:x="884" fg:w="3"/><text x="71.1970%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.9470%" y="501" width="0.2408%" height="15" fill="rgb(238,47,46)" fg:x="884" fg:w="3"/><text x="71.1970%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.9470%" y="485" width="0.2408%" height="15" fill="rgb(233,65,17)" fg:x="884" fg:w="3"/><text x="71.1970%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="70.9470%" y="469" width="0.2408%" height="15" fill="rgb(239,22,33)" fg:x="884" fg:w="3"/><text x="71.1970%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.9470%" y="453" width="0.2408%" height="15" fill="rgb(243,66,43)" fg:x="884" fg:w="3"/><text x="71.1970%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.0273%" y="437" width="0.1605%" height="15" fill="rgb(235,210,28)" fg:x="885" fg:w="2"/><text x="71.2773%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.0273%" y="421" width="0.1605%" height="15" fill="rgb(205,191,50)" fg:x="885" fg:w="2"/><text x="71.2773%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.1075%" y="405" width="0.0803%" height="15" fill="rgb(251,217,19)" fg:x="886" fg:w="1"/><text x="71.3575%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.1075%" y="389" width="0.0803%" height="15" fill="rgb(205,174,37)" fg:x="886" fg:w="1"/><text x="71.3575%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="71.1075%" y="373" width="0.0803%" height="15" fill="rgb(212,158,42)" fg:x="886" fg:w="1"/><text x="71.3575%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.1878%" y="597" width="0.0803%" height="15" fill="rgb(212,208,51)" fg:x="887" fg:w="1"/><text x="71.4378%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.1878%" y="581" width="0.0803%" height="15" fill="rgb(225,198,20)" fg:x="887" fg:w="1"/><text x="71.4378%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.1878%" y="565" width="0.0803%" height="15" fill="rgb(247,41,44)" fg:x="887" fg:w="1"/><text x="71.4378%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.1878%" y="549" width="0.0803%" height="15" fill="rgb(228,33,41)" fg:x="887" fg:w="1"/><text x="71.4378%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.1878%" y="533" width="0.0803%" height="15" fill="rgb(215,47,52)" fg:x="887" fg:w="1"/><text x="71.4378%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.1878%" y="517" width="0.0803%" height="15" fill="rgb(248,106,37)" fg:x="887" fg:w="1"/><text x="71.4378%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.1878%" y="501" width="0.0803%" height="15" fill="rgb(238,91,29)" fg:x="887" fg:w="1"/><text x="71.4378%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.1878%" y="485" width="0.0803%" height="15" fill="rgb(226,111,40)" fg:x="887" fg:w="1"/><text x="71.4378%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.1878%" y="469" width="0.0803%" height="15" fill="rgb(229,159,36)" fg:x="887" fg:w="1"/><text x="71.4378%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.1878%" y="453" width="0.0803%" height="15" fill="rgb(221,109,4)" fg:x="887" fg:w="1"/><text x="71.4378%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.1878%" y="437" width="0.0803%" height="15" fill="rgb(236,56,25)" fg:x="887" fg:w="1"/><text x="71.4378%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.1878%" y="421" width="0.0803%" height="15" fill="rgb(244,113,23)" fg:x="887" fg:w="1"/><text x="71.4378%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.1878%" y="405" width="0.0803%" height="15" fill="rgb(249,132,2)" fg:x="887" fg:w="1"/><text x="71.4378%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="71.3483%" y="549" width="0.3210%" height="15" fill="rgb(205,185,21)" fg:x="889" fg:w="4"/><text x="71.5983%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.5088%" y="533" width="0.1605%" height="15" fill="rgb(245,130,2)" fg:x="891" fg:w="2"/><text x="71.7588%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.5088%" y="517" width="0.1605%" height="15" fill="rgb(246,71,26)" fg:x="891" fg:w="2"/><text x="71.7588%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="71.5088%" y="501" width="0.1605%" height="15" fill="rgb(234,194,6)" fg:x="891" fg:w="2"/><text x="71.7588%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="71.5088%" y="485" width="0.1605%" height="15" fill="rgb(206,24,32)" fg:x="891" fg:w="2"/><text x="71.7588%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="71.5088%" y="469" width="0.1605%" height="15" fill="rgb(233,7,54)" fg:x="891" fg:w="2"/><text x="71.7588%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.5088%" y="453" width="0.1605%" height="15" fill="rgb(252,46,1)" fg:x="891" fg:w="2"/><text x="71.7588%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.5088%" y="437" width="0.1605%" height="15" fill="rgb(216,113,53)" fg:x="891" fg:w="2"/><text x="71.7588%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="71.5088%" y="421" width="0.1605%" height="15" fill="rgb(215,40,24)" fg:x="891" fg:w="2"/><text x="71.7588%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="71.5088%" y="405" width="0.1605%" height="15" fill="rgb(233,222,8)" fg:x="891" fg:w="2"/><text x="71.7588%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="71.5088%" y="389" width="0.1605%" height="15" fill="rgb(248,73,28)" fg:x="891" fg:w="2"/><text x="71.7588%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="71.5088%" y="373" width="0.1605%" height="15" fill="rgb(247,126,28)" fg:x="891" fg:w="2"/><text x="71.7588%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.5088%" y="357" width="0.1605%" height="15" fill="rgb(242,173,54)" fg:x="891" fg:w="2"/><text x="71.7588%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.6693%" y="549" width="0.0803%" height="15" fill="rgb(244,186,22)" fg:x="893" fg:w="1"/><text x="71.9193%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.6693%" y="533" width="0.0803%" height="15" fill="rgb(231,187,4)" fg:x="893" fg:w="1"/><text x="71.9193%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.6693%" y="517" width="0.0803%" height="15" fill="rgb(252,66,47)" fg:x="893" fg:w="1"/><text x="71.9193%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.6693%" y="501" width="0.0803%" height="15" fill="rgb(240,228,28)" fg:x="893" fg:w="1"/><text x="71.9193%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.6693%" y="485" width="0.0803%" height="15" fill="rgb(237,63,43)" fg:x="893" fg:w="1"/><text x="71.9193%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.6693%" y="469" width="0.0803%" height="15" fill="rgb(214,1,44)" fg:x="893" fg:w="1"/><text x="71.9193%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.6693%" y="453" width="0.0803%" height="15" fill="rgb(212,2,46)" fg:x="893" fg:w="1"/><text x="71.9193%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.6693%" y="437" width="0.0803%" height="15" fill="rgb(213,142,5)" fg:x="893" fg:w="1"/><text x="71.9193%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.6693%" y="421" width="0.0803%" height="15" fill="rgb(229,135,1)" fg:x="893" fg:w="1"/><text x="71.9193%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.6693%" y="405" width="0.0803%" height="15" fill="rgb(252,98,38)" fg:x="893" fg:w="1"/><text x="71.9193%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.6693%" y="389" width="0.0803%" height="15" fill="rgb(206,89,40)" fg:x="893" fg:w="1"/><text x="71.9193%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6693%" y="373" width="0.0803%" height="15" fill="rgb(219,73,36)" fg:x="893" fg:w="1"/><text x="71.9193%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (8 samples, 0.64%)</title><rect x="71.3483%" y="581" width="0.6421%" height="15" fill="rgb(207,168,32)" fg:x="889" fg:w="8"/><text x="71.5983%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="71.3483%" y="565" width="0.6421%" height="15" fill="rgb(215,113,21)" fg:x="889" fg:w="8"/><text x="71.5983%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="71.7496%" y="549" width="0.2408%" height="15" fill="rgb(217,144,43)" fg:x="894" fg:w="3"/><text x="71.9996%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.7496%" y="533" width="0.2408%" height="15" fill="rgb(249,48,50)" fg:x="894" fg:w="3"/><text x="71.9996%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.8299%" y="517" width="0.1605%" height="15" fill="rgb(242,1,26)" fg:x="895" fg:w="2"/><text x="72.0799%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.8299%" y="501" width="0.1605%" height="15" fill="rgb(231,167,42)" fg:x="895" fg:w="2"/><text x="72.0799%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="71.8299%" y="485" width="0.1605%" height="15" fill="rgb(242,177,45)" fg:x="895" fg:w="2"/><text x="72.0799%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="71.8299%" y="469" width="0.1605%" height="15" fill="rgb(232,121,42)" fg:x="895" fg:w="2"/><text x="72.0799%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="71.8299%" y="453" width="0.1605%" height="15" fill="rgb(205,8,42)" fg:x="895" fg:w="2"/><text x="72.0799%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.8299%" y="437" width="0.1605%" height="15" fill="rgb(238,199,24)" fg:x="895" fg:w="2"/><text x="72.0799%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.8299%" y="421" width="0.1605%" height="15" fill="rgb(228,112,2)" fg:x="895" fg:w="2"/><text x="72.0799%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="71.8299%" y="405" width="0.1605%" height="15" fill="rgb(215,115,33)" fg:x="895" fg:w="2"/><text x="72.0799%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="71.8299%" y="389" width="0.1605%" height="15" fill="rgb(230,209,34)" fg:x="895" fg:w="2"/><text x="72.0799%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="71.8299%" y="373" width="0.1605%" height="15" fill="rgb(246,76,12)" fg:x="895" fg:w="2"/><text x="72.0799%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="71.8299%" y="357" width="0.1605%" height="15" fill="rgb(240,110,9)" fg:x="895" fg:w="2"/><text x="72.0799%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.8299%" y="341" width="0.1605%" height="15" fill="rgb(224,94,46)" fg:x="895" fg:w="2"/><text x="72.0799%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="71.9904%" y="581" width="0.3210%" height="15" fill="rgb(247,150,22)" fg:x="897" fg:w="4"/><text x="72.2404%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="72.0706%" y="565" width="0.2408%" height="15" fill="rgb(249,85,13)" fg:x="898" fg:w="3"/><text x="72.3206%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="72.1509%" y="549" width="0.1605%" height="15" fill="rgb(208,77,41)" fg:x="899" fg:w="2"/><text x="72.4009%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="72.1509%" y="533" width="0.1605%" height="15" fill="rgb(240,42,44)" fg:x="899" fg:w="2"/><text x="72.4009%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="72.2311%" y="517" width="0.0803%" height="15" fill="rgb(222,10,51)" fg:x="900" fg:w="1"/><text x="72.4811%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="72.3114%" y="581" width="0.0803%" height="15" fill="rgb(208,146,53)" fg:x="901" fg:w="1"/><text x="72.5614%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.3114%" y="565" width="0.0803%" height="15" fill="rgb(236,162,23)" fg:x="901" fg:w="1"/><text x="72.5614%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.3114%" y="549" width="0.0803%" height="15" fill="rgb(218,66,21)" fg:x="901" fg:w="1"/><text x="72.5614%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="72.3114%" y="533" width="0.0803%" height="15" fill="rgb(233,6,47)" fg:x="901" fg:w="1"/><text x="72.5614%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.3114%" y="517" width="0.0803%" height="15" fill="rgb(236,59,51)" fg:x="901" fg:w="1"/><text x="72.5614%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.3114%" y="501" width="0.0803%" height="15" fill="rgb(242,12,46)" fg:x="901" fg:w="1"/><text x="72.5614%" y="511.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (2 samples, 0.16%)</title><rect x="72.3917%" y="581" width="0.1605%" height="15" fill="rgb(243,142,19)" fg:x="902" fg:w="2"/><text x="72.6417%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="72.3917%" y="565" width="0.1605%" height="15" fill="rgb(217,28,17)" fg:x="902" fg:w="2"/><text x="72.6417%" y="575.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="72.4719%" y="549" width="0.0803%" height="15" fill="rgb(228,2,27)" fg:x="903" fg:w="1"/><text x="72.7219%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.4719%" y="533" width="0.0803%" height="15" fill="rgb(214,221,4)" fg:x="903" fg:w="1"/><text x="72.7219%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.4719%" y="517" width="0.0803%" height="15" fill="rgb(224,69,26)" fg:x="903" fg:w="1"/><text x="72.7219%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.4719%" y="501" width="0.0803%" height="15" fill="rgb(219,70,4)" fg:x="903" fg:w="1"/><text x="72.7219%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.4719%" y="485" width="0.0803%" height="15" fill="rgb(218,157,39)" fg:x="903" fg:w="1"/><text x="72.7219%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.4719%" y="469" width="0.0803%" height="15" fill="rgb(238,36,28)" fg:x="903" fg:w="1"/><text x="72.7219%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.4719%" y="453" width="0.0803%" height="15" fill="rgb(232,29,0)" fg:x="903" fg:w="1"/><text x="72.7219%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.4719%" y="437" width="0.0803%" height="15" fill="rgb(243,138,46)" fg:x="903" fg:w="1"/><text x="72.7219%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5522%" y="549" width="0.0803%" height="15" fill="rgb(232,186,41)" fg:x="904" fg:w="1"/><text x="72.8022%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.6324%" y="549" width="0.0803%" height="15" fill="rgb(252,166,17)" fg:x="905" fg:w="1"/><text x="72.8824%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6324%" y="533" width="0.0803%" height="15" fill="rgb(228,179,12)" fg:x="905" fg:w="1"/><text x="72.8824%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (21 samples, 1.69%)</title><rect x="71.1878%" y="613" width="1.6854%" height="15" fill="rgb(254,205,53)" fg:x="887" fg:w="21"/><text x="71.4378%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (20 samples, 1.61%)</title><rect x="71.2681%" y="597" width="1.6051%" height="15" fill="rgb(224,163,47)" fg:x="888" fg:w="20"/><text x="71.5181%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="72.5522%" y="581" width="0.3210%" height="15" fill="rgb(208,43,47)" fg:x="904" fg:w="4"/><text x="72.8022%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="72.5522%" y="565" width="0.3210%" height="15" fill="rgb(224,198,38)" fg:x="904" fg:w="4"/><text x="72.8022%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="72.7127%" y="549" width="0.1605%" height="15" fill="rgb(234,12,40)" fg:x="906" fg:w="2"/><text x="72.9627%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="72.7127%" y="533" width="0.1605%" height="15" fill="rgb(237,212,39)" fg:x="906" fg:w="2"/><text x="72.9627%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="72.7127%" y="517" width="0.1605%" height="15" fill="rgb(253,2,33)" fg:x="906" fg:w="2"/><text x="72.9627%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.7127%" y="501" width="0.1605%" height="15" fill="rgb(251,29,16)" fg:x="906" fg:w="2"/><text x="72.9627%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.7127%" y="485" width="0.1605%" height="15" fill="rgb(214,38,29)" fg:x="906" fg:w="2"/><text x="72.9627%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.7127%" y="469" width="0.1605%" height="15" fill="rgb(226,226,29)" fg:x="906" fg:w="2"/><text x="72.9627%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9535%" y="549" width="0.0803%" height="15" fill="rgb(236,79,42)" fg:x="909" fg:w="1"/><text x="73.2035%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="73.0337%" y="549" width="0.1605%" height="15" fill="rgb(222,12,36)" fg:x="910" fg:w="2"/><text x="73.2837%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1942%" y="533" width="0.0803%" height="15" fill="rgb(232,123,44)" fg:x="912" fg:w="1"/><text x="73.4442%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (10 samples, 0.80%)</title><rect x="72.8732%" y="581" width="0.8026%" height="15" fill="rgb(234,93,50)" fg:x="908" fg:w="10"/><text x="73.1232%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="72.8732%" y="565" width="0.8026%" height="15" fill="rgb(210,86,49)" fg:x="908" fg:w="10"/><text x="73.1232%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="73.1942%" y="549" width="0.4815%" height="15" fill="rgb(224,91,54)" fg:x="912" fg:w="6"/><text x="73.4442%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5 samples, 0.40%)</title><rect x="73.2745%" y="533" width="0.4013%" height="15" fill="rgb(239,169,9)" fg:x="913" fg:w="5"/><text x="73.5245%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="73.2745%" y="517" width="0.4013%" height="15" fill="rgb(238,29,17)" fg:x="913" fg:w="5"/><text x="73.5245%" y="527.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="73.2745%" y="501" width="0.4013%" height="15" fill="rgb(227,160,22)" fg:x="913" fg:w="5"/><text x="73.5245%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="73.6758%" y="581" width="0.0803%" height="15" fill="rgb(231,129,52)" fg:x="918" fg:w="1"/><text x="73.9258%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.6758%" y="565" width="0.0803%" height="15" fill="rgb(241,184,9)" fg:x="918" fg:w="1"/><text x="73.9258%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7560%" y="517" width="0.0803%" height="15" fill="rgb(217,43,48)" fg:x="919" fg:w="1"/><text x="74.0060%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (13 samples, 1.04%)</title><rect x="72.8732%" y="613" width="1.0433%" height="15" fill="rgb(213,49,1)" fg:x="908" fg:w="13"/><text x="73.1232%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (13 samples, 1.04%)</title><rect x="72.8732%" y="597" width="1.0433%" height="15" fill="rgb(223,79,39)" fg:x="908" fg:w="13"/><text x="73.1232%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="73.7560%" y="581" width="0.1605%" height="15" fill="rgb(228,227,46)" fg:x="919" fg:w="2"/><text x="74.0060%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.7560%" y="565" width="0.1605%" height="15" fill="rgb(245,89,41)" fg:x="919" fg:w="2"/><text x="74.0060%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="73.7560%" y="549" width="0.1605%" height="15" fill="rgb(253,83,21)" fg:x="919" fg:w="2"/><text x="74.0060%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.7560%" y="533" width="0.1605%" height="15" fill="rgb(229,116,51)" fg:x="919" fg:w="2"/><text x="74.0060%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.8363%" y="517" width="0.0803%" height="15" fill="rgb(246,67,26)" fg:x="920" fg:w="1"/><text x="74.0863%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.8363%" y="501" width="0.0803%" height="15" fill="rgb(250,117,20)" fg:x="920" fg:w="1"/><text x="74.0863%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="73.9165%" y="549" width="0.0803%" height="15" fill="rgb(207,88,17)" fg:x="921" fg:w="1"/><text x="74.1665%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.9165%" y="533" width="0.0803%" height="15" fill="rgb(212,98,36)" fg:x="921" fg:w="1"/><text x="74.1665%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9968%" y="485" width="0.0803%" height="15" fill="rgb(221,72,6)" fg:x="922" fg:w="1"/><text x="74.2468%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9968%" y="469" width="0.0803%" height="15" fill="rgb(235,129,19)" fg:x="922" fg:w="1"/><text x="74.2468%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9968%" y="453" width="0.0803%" height="15" fill="rgb(237,200,6)" fg:x="922" fg:w="1"/><text x="74.2468%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.9968%" y="517" width="0.1605%" height="15" fill="rgb(239,69,54)" fg:x="922" fg:w="2"/><text x="74.2468%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.9968%" y="501" width="0.1605%" height="15" fill="rgb(214,68,45)" fg:x="922" fg:w="2"/><text x="74.2468%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.0770%" y="485" width="0.0803%" height="15" fill="rgb(254,160,8)" fg:x="923" fg:w="1"/><text x="74.3270%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.0770%" y="469" width="0.0803%" height="15" fill="rgb(215,226,31)" fg:x="923" fg:w="1"/><text x="74.3270%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.0770%" y="453" width="0.0803%" height="15" fill="rgb(253,6,35)" fg:x="923" fg:w="1"/><text x="74.3270%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.0770%" y="437" width="0.0803%" height="15" fill="rgb(219,96,42)" fg:x="923" fg:w="1"/><text x="74.3270%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.0770%" y="421" width="0.0803%" height="15" fill="rgb(207,170,13)" fg:x="923" fg:w="1"/><text x="74.3270%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.0770%" y="405" width="0.0803%" height="15" fill="rgb(239,101,5)" fg:x="923" fg:w="1"/><text x="74.3270%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.0770%" y="389" width="0.0803%" height="15" fill="rgb(228,183,34)" fg:x="923" fg:w="1"/><text x="74.3270%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.0770%" y="373" width="0.0803%" height="15" fill="rgb(205,28,31)" fg:x="923" fg:w="1"/><text x="74.3270%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.0770%" y="357" width="0.0803%" height="15" fill="rgb(214,118,50)" fg:x="923" fg:w="1"/><text x="74.3270%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.0770%" y="341" width="0.0803%" height="15" fill="rgb(213,108,51)" fg:x="923" fg:w="1"/><text x="74.3270%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.0770%" y="325" width="0.0803%" height="15" fill="rgb(238,56,37)" fg:x="923" fg:w="1"/><text x="74.3270%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.0770%" y="309" width="0.0803%" height="15" fill="rgb(214,136,28)" fg:x="923" fg:w="1"/><text x="74.3270%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.0770%" y="293" width="0.0803%" height="15" fill="rgb(221,201,54)" fg:x="923" fg:w="1"/><text x="74.3270%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="73.9165%" y="565" width="0.3210%" height="15" fill="rgb(228,216,39)" fg:x="921" fg:w="4"/><text x="74.1665%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="73.9968%" y="549" width="0.2408%" height="15" fill="rgb(207,229,49)" fg:x="922" fg:w="3"/><text x="74.2468%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="73.9968%" y="533" width="0.2408%" height="15" fill="rgb(224,23,43)" fg:x="922" fg:w="3"/><text x="74.2468%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1573%" y="517" width="0.0803%" height="15" fill="rgb(247,97,18)" fg:x="924" fg:w="1"/><text x="74.4073%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1573%" y="501" width="0.0803%" height="15" fill="rgb(232,53,32)" fg:x="924" fg:w="1"/><text x="74.4073%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1573%" y="485" width="0.0803%" height="15" fill="rgb(247,38,23)" fg:x="924" fg:w="1"/><text x="74.4073%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1573%" y="469" width="0.0803%" height="15" fill="rgb(228,101,52)" fg:x="924" fg:w="1"/><text x="74.4073%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.1573%" y="453" width="0.0803%" height="15" fill="rgb(231,45,36)" fg:x="924" fg:w="1"/><text x="74.4073%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1573%" y="437" width="0.0803%" height="15" fill="rgb(221,183,50)" fg:x="924" fg:w="1"/><text x="74.4073%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1573%" y="421" width="0.0803%" height="15" fill="rgb(251,132,12)" fg:x="924" fg:w="1"/><text x="74.4073%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1573%" y="405" width="0.0803%" height="15" fill="rgb(252,50,16)" fg:x="924" fg:w="1"/><text x="74.4073%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1573%" y="389" width="0.0803%" height="15" fill="rgb(224,60,15)" fg:x="924" fg:w="1"/><text x="74.4073%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1573%" y="373" width="0.0803%" height="15" fill="rgb(254,2,34)" fg:x="924" fg:w="1"/><text x="74.4073%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="74.1573%" y="357" width="0.0803%" height="15" fill="rgb(232,154,8)" fg:x="924" fg:w="1"/><text x="74.4073%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="74.1573%" y="341" width="0.0803%" height="15" fill="rgb(235,190,52)" fg:x="924" fg:w="1"/><text x="74.4073%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2376%" y="469" width="0.0803%" height="15" fill="rgb(213,218,38)" fg:x="925" fg:w="1"/><text x="74.4876%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2376%" y="453" width="0.0803%" height="15" fill="rgb(237,50,37)" fg:x="925" fg:w="1"/><text x="74.4876%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.2376%" y="517" width="0.1605%" height="15" fill="rgb(235,51,35)" fg:x="925" fg:w="2"/><text x="74.4876%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.2376%" y="501" width="0.1605%" height="15" fill="rgb(244,40,52)" fg:x="925" fg:w="2"/><text x="74.4876%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.2376%" y="485" width="0.1605%" height="15" fill="rgb(217,225,45)" fg:x="925" fg:w="2"/><text x="74.4876%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3178%" y="469" width="0.0803%" height="15" fill="rgb(247,191,36)" fg:x="926" fg:w="1"/><text x="74.5678%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3178%" y="453" width="0.0803%" height="15" fill="rgb(251,144,31)" fg:x="926" fg:w="1"/><text x="74.5678%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.3178%" y="437" width="0.0803%" height="15" fill="rgb(227,155,41)" fg:x="926" fg:w="1"/><text x="74.5678%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.3178%" y="421" width="0.0803%" height="15" fill="rgb(236,121,36)" fg:x="926" fg:w="1"/><text x="74.5678%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.3178%" y="405" width="0.0803%" height="15" fill="rgb(221,128,28)" fg:x="926" fg:w="1"/><text x="74.5678%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.3178%" y="389" width="0.0803%" height="15" fill="rgb(249,67,50)" fg:x="926" fg:w="1"/><text x="74.5678%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.3178%" y="373" width="0.0803%" height="15" fill="rgb(241,126,38)" fg:x="926" fg:w="1"/><text x="74.5678%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.3178%" y="357" width="0.0803%" height="15" fill="rgb(239,33,14)" fg:x="926" fg:w="1"/><text x="74.5678%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.3178%" y="341" width="0.0803%" height="15" fill="rgb(207,221,54)" fg:x="926" fg:w="1"/><text x="74.5678%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.3178%" y="325" width="0.0803%" height="15" fill="rgb(242,138,43)" fg:x="926" fg:w="1"/><text x="74.5678%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.3178%" y="309" width="0.0803%" height="15" fill="rgb(231,118,19)" fg:x="926" fg:w="1"/><text x="74.5678%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3178%" y="293" width="0.0803%" height="15" fill="rgb(214,128,54)" fg:x="926" fg:w="1"/><text x="74.5678%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3981%" y="421" width="0.0803%" height="15" fill="rgb(236,136,6)" fg:x="927" fg:w="1"/><text x="74.6481%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.3981%" y="405" width="0.0803%" height="15" fill="rgb(247,30,38)" fg:x="927" fg:w="1"/><text x="74.6481%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.3981%" y="389" width="0.0803%" height="15" fill="rgb(249,189,40)" fg:x="927" fg:w="1"/><text x="74.6481%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="73.9165%" y="597" width="0.6421%" height="15" fill="rgb(247,179,7)" fg:x="921" fg:w="8"/><text x="74.1665%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="73.9165%" y="581" width="0.6421%" height="15" fill="rgb(239,46,52)" fg:x="921" fg:w="8"/><text x="74.1665%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="74.2376%" y="565" width="0.3210%" height="15" fill="rgb(225,28,52)" fg:x="925" fg:w="4"/><text x="74.4876%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="74.2376%" y="549" width="0.3210%" height="15" fill="rgb(217,208,44)" fg:x="925" fg:w="4"/><text x="74.4876%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="74.2376%" y="533" width="0.3210%" height="15" fill="rgb(224,11,34)" fg:x="925" fg:w="4"/><text x="74.4876%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.3981%" y="517" width="0.1605%" height="15" fill="rgb(205,134,17)" fg:x="927" fg:w="2"/><text x="74.6481%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.3981%" y="501" width="0.1605%" height="15" fill="rgb(237,125,9)" fg:x="927" fg:w="2"/><text x="74.6481%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.3981%" y="485" width="0.1605%" height="15" fill="rgb(208,139,47)" fg:x="927" fg:w="2"/><text x="74.6481%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.3981%" y="469" width="0.1605%" height="15" fill="rgb(242,5,5)" fg:x="927" fg:w="2"/><text x="74.6481%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="74.3981%" y="453" width="0.1605%" height="15" fill="rgb(218,78,2)" fg:x="927" fg:w="2"/><text x="74.6481%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.3981%" y="437" width="0.1605%" height="15" fill="rgb(217,75,16)" fg:x="927" fg:w="2"/><text x="74.6481%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4783%" y="421" width="0.0803%" height="15" fill="rgb(212,56,17)" fg:x="928" fg:w="1"/><text x="74.7283%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4783%" y="405" width="0.0803%" height="15" fill="rgb(228,61,29)" fg:x="928" fg:w="1"/><text x="74.7283%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="73.9165%" y="613" width="0.7223%" height="15" fill="rgb(247,202,38)" fg:x="921" fg:w="9"/><text x="74.1665%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="74.5586%" y="597" width="0.0803%" height="15" fill="rgb(211,216,43)" fg:x="929" fg:w="1"/><text x="74.8086%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.5586%" y="581" width="0.0803%" height="15" fill="rgb(220,7,49)" fg:x="929" fg:w="1"/><text x="74.8086%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (328 samples, 26.32%)</title><rect x="48.3949%" y="837" width="26.3242%" height="15" fill="rgb(219,158,7)" fg:x="603" fg:w="328"/><text x="48.6449%" y="847.50">&lt;engine::session::Session as kernel::actio..</text></g><g><title>kernel::plugins::mw::apply_middleware (328 samples, 26.32%)</title><rect x="48.3949%" y="821" width="26.3242%" height="15" fill="rgb(206,127,9)" fg:x="603" fg:w="328"/><text x="48.6449%" y="831.50">kernel::plugins::mw::apply_middleware</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (327 samples, 26.24%)</title><rect x="48.4751%" y="805" width="26.2440%" height="15" fill="rgb(206,103,43)" fg:x="604" fg:w="327"/><text x="48.7251%" y="815.50">kernel::plugins::mw::MiddlewareNext::handle</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (327 samples, 26.24%)</title><rect x="48.4751%" y="789" width="26.2440%" height="15" fill="rgb(240,108,41)" fg:x="604" fg:w="327"/><text x="48.7251%" y="799.50">&lt;engine::session::ExpandSurroundingsMiddle..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (291 samples, 23.35%)</title><rect x="51.3644%" y="773" width="23.3547%" height="15" fill="rgb(252,212,6)" fg:x="640" fg:w="291"/><text x="51.6144%" y="783.50">kernel::plugins::mw::MiddlewareNext::..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (291 samples, 23.35%)</title><rect x="51.3644%" y="757" width="23.3547%" height="15" fill="rgb(248,105,31)" fg:x="640" fg:w="291"/><text x="51.6144%" y="767.50">&lt;plugins_dynlib::DynamicMiddleware as..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (290 samples, 23.27%)</title><rect x="51.4446%" y="741" width="23.2745%" height="15" fill="rgb(241,123,4)" fg:x="641" fg:w="290"/><text x="51.6946%" y="751.50">kernel::plugins::mw::MiddlewareNext::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (290 samples, 23.27%)</title><rect x="51.4446%" y="725" width="23.2745%" height="15" fill="rgb(223,74,37)" fg:x="641" fg:w="290"/><text x="51.6946%" y="735.50">core::ops::function::FnOnce::call_onc..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (290 samples, 23.27%)</title><rect x="51.4446%" y="709" width="23.2745%" height="15" fill="rgb(251,219,28)" fg:x="641" fg:w="290"/><text x="51.6946%" y="719.50">kernel::plugins::mw::MiddlewareNext::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (290 samples, 23.27%)</title><rect x="51.4446%" y="693" width="23.2745%" height="15" fill="rgb(218,36,31)" fg:x="641" fg:w="290"/><text x="51.6946%" y="703.50">core::ops::function::FnOnce::call_onc..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (290 samples, 23.27%)</title><rect x="51.4446%" y="677" width="23.2745%" height="15" fill="rgb(229,40,15)" fg:x="641" fg:w="290"/><text x="51.6946%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (290 samples, 23.27%)</title><rect x="51.4446%" y="661" width="23.2745%" height="15" fill="rgb(208,138,37)" fg:x="641" fg:w="290"/><text x="51.6946%" y="671.50">&lt;engine::session::state::State as ker..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (133 samples, 10.67%)</title><rect x="64.0449%" y="645" width="10.6742%" height="15" fill="rgb(208,40,52)" fg:x="798" fg:w="133"/><text x="64.2949%" y="655.50">&lt;plugins_core::c..</text></g><g><title>plugins_core::tools::move_between (59 samples, 4.74%)</title><rect x="69.9839%" y="629" width="4.7352%" height="15" fill="rgb(246,181,48)" fg:x="872" fg:w="59"/><text x="70.2339%" y="639.50">plugin..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="74.6388%" y="613" width="0.0803%" height="15" fill="rgb(253,178,36)" fg:x="930" fg:w="1"/><text x="74.8888%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.6388%" y="597" width="0.0803%" height="15" fill="rgb(210,170,6)" fg:x="930" fg:w="1"/><text x="74.8888%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.6388%" y="581" width="0.0803%" height="15" fill="rgb(243,62,22)" fg:x="930" fg:w="1"/><text x="74.8888%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="74.6388%" y="565" width="0.0803%" height="15" fill="rgb(213,145,26)" fg:x="930" fg:w="1"/><text x="74.8888%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::key (1 samples, 0.08%)</title><rect x="74.6388%" y="549" width="0.0803%" height="15" fill="rgb(237,177,23)" fg:x="930" fg:w="1"/><text x="74.8888%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.7191%" y="773" width="0.1605%" height="15" fill="rgb(252,5,24)" fg:x="931" fg:w="2"/><text x="74.9691%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.7191%" y="757" width="0.1605%" height="15" fill="rgb(230,108,54)" fg:x="931" fg:w="2"/><text x="74.9691%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.7191%" y="741" width="0.1605%" height="15" fill="rgb(252,192,41)" fg:x="931" fg:w="2"/><text x="74.9691%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.7191%" y="725" width="0.1605%" height="15" fill="rgb(218,125,20)" fg:x="931" fg:w="2"/><text x="74.9691%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7191%" y="709" width="0.1605%" height="15" fill="rgb(230,223,15)" fg:x="931" fg:w="2"/><text x="74.9691%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="74.7191%" y="693" width="0.1605%" height="15" fill="rgb(239,99,47)" fg:x="931" fg:w="2"/><text x="74.9691%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.7994%" y="677" width="0.0803%" height="15" fill="rgb(222,214,23)" fg:x="932" fg:w="1"/><text x="75.0494%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8796%" y="725" width="0.0803%" height="15" fill="rgb(250,98,43)" fg:x="933" fg:w="1"/><text x="75.1296%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8796%" y="709" width="0.0803%" height="15" fill="rgb(226,140,11)" fg:x="933" fg:w="1"/><text x="75.1296%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8796%" y="693" width="0.0803%" height="15" fill="rgb(239,2,22)" fg:x="933" fg:w="1"/><text x="75.1296%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8796%" y="677" width="0.0803%" height="15" fill="rgb(209,106,26)" fg:x="933" fg:w="1"/><text x="75.1296%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8796%" y="661" width="0.0803%" height="15" fill="rgb(209,135,11)" fg:x="933" fg:w="1"/><text x="75.1296%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8796%" y="645" width="0.0803%" height="15" fill="rgb(241,58,6)" fg:x="933" fg:w="1"/><text x="75.1296%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.8796%" y="629" width="0.0803%" height="15" fill="rgb(214,78,1)" fg:x="933" fg:w="1"/><text x="75.1296%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.8796%" y="613" width="0.0803%" height="15" fill="rgb(229,135,33)" fg:x="933" fg:w="1"/><text x="75.1296%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.8796%" y="597" width="0.0803%" height="15" fill="rgb(245,87,50)" fg:x="933" fg:w="1"/><text x="75.1296%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8796%" y="581" width="0.0803%" height="15" fill="rgb(222,222,8)" fg:x="933" fg:w="1"/><text x="75.1296%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8796%" y="565" width="0.0803%" height="15" fill="rgb(214,97,50)" fg:x="933" fg:w="1"/><text x="75.1296%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.8796%" y="549" width="0.0803%" height="15" fill="rgb(244,161,51)" fg:x="933" fg:w="1"/><text x="75.1296%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.8796%" y="533" width="0.0803%" height="15" fill="rgb(225,17,4)" fg:x="933" fg:w="1"/><text x="75.1296%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.8796%" y="517" width="0.0803%" height="15" fill="rgb(238,10,13)" fg:x="933" fg:w="1"/><text x="75.1296%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.8796%" y="501" width="0.0803%" height="15" fill="rgb(239,169,14)" fg:x="933" fg:w="1"/><text x="75.1296%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.8796%" y="485" width="0.0803%" height="15" fill="rgb(213,105,25)" fg:x="933" fg:w="1"/><text x="75.1296%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.8796%" y="469" width="0.0803%" height="15" fill="rgb(233,4,17)" fg:x="933" fg:w="1"/><text x="75.1296%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="74.7191%" y="805" width="0.4013%" height="15" fill="rgb(212,5,35)" fg:x="931" fg:w="5"/><text x="74.9691%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="74.7191%" y="789" width="0.4013%" height="15" fill="rgb(216,3,14)" fg:x="931" fg:w="5"/><text x="74.9691%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="74.8796%" y="773" width="0.2408%" height="15" fill="rgb(240,105,33)" fg:x="933" fg:w="3"/><text x="75.1296%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.8796%" y="757" width="0.2408%" height="15" fill="rgb(216,73,0)" fg:x="933" fg:w="3"/><text x="75.1296%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.8796%" y="741" width="0.2408%" height="15" fill="rgb(217,153,48)" fg:x="933" fg:w="3"/><text x="75.1296%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.9599%" y="725" width="0.1605%" height="15" fill="rgb(218,180,8)" fg:x="934" fg:w="2"/><text x="75.2099%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.9599%" y="709" width="0.1605%" height="15" fill="rgb(252,168,2)" fg:x="934" fg:w="2"/><text x="75.2099%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.1204%" y="661" width="0.1605%" height="15" fill="rgb(224,116,33)" fg:x="936" fg:w="2"/><text x="75.3704%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.2006%" y="645" width="0.0803%" height="15" fill="rgb(229,205,17)" fg:x="937" fg:w="1"/><text x="75.4506%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.2006%" y="629" width="0.0803%" height="15" fill="rgb(234,1,41)" fg:x="937" fg:w="1"/><text x="75.4506%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.2006%" y="613" width="0.0803%" height="15" fill="rgb(244,185,8)" fg:x="937" fg:w="1"/><text x="75.4506%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.2006%" y="597" width="0.0803%" height="15" fill="rgb(248,51,21)" fg:x="937" fg:w="1"/><text x="75.4506%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.2006%" y="581" width="0.0803%" height="15" fill="rgb(248,157,31)" fg:x="937" fg:w="1"/><text x="75.4506%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.2006%" y="565" width="0.0803%" height="15" fill="rgb(210,34,47)" fg:x="937" fg:w="1"/><text x="75.4506%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.2809%" y="629" width="0.0803%" height="15" fill="rgb(227,139,53)" fg:x="938" fg:w="1"/><text x="75.5309%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.2809%" y="613" width="0.0803%" height="15" fill="rgb(232,211,37)" fg:x="938" fg:w="1"/><text x="75.5309%" y="623.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="75.1204%" y="789" width="0.4013%" height="15" fill="rgb(236,133,10)" fg:x="936" fg:w="5"/><text x="75.3704%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.1204%" y="773" width="0.4013%" height="15" fill="rgb(243,202,25)" fg:x="936" fg:w="5"/><text x="75.3704%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="75.1204%" y="757" width="0.4013%" height="15" fill="rgb(224,59,9)" fg:x="936" fg:w="5"/><text x="75.3704%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.1204%" y="741" width="0.4013%" height="15" fill="rgb(206,146,16)" fg:x="936" fg:w="5"/><text x="75.3704%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="75.1204%" y="725" width="0.4013%" height="15" fill="rgb(220,47,2)" fg:x="936" fg:w="5"/><text x="75.3704%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.1204%" y="709" width="0.4013%" height="15" fill="rgb(225,124,51)" fg:x="936" fg:w="5"/><text x="75.3704%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="75.1204%" y="693" width="0.4013%" height="15" fill="rgb(241,220,50)" fg:x="936" fg:w="5"/><text x="75.3704%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.1204%" y="677" width="0.4013%" height="15" fill="rgb(232,168,5)" fg:x="936" fg:w="5"/><text x="75.3704%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.2809%" y="661" width="0.2408%" height="15" fill="rgb(243,90,22)" fg:x="938" fg:w="3"/><text x="75.5309%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.2809%" y="645" width="0.2408%" height="15" fill="rgb(223,153,32)" fg:x="938" fg:w="3"/><text x="75.5309%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.3612%" y="629" width="0.1605%" height="15" fill="rgb(243,124,20)" fg:x="939" fg:w="2"/><text x="75.6112%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="75.3612%" y="613" width="0.1605%" height="15" fill="rgb(246,168,39)" fg:x="939" fg:w="2"/><text x="75.6112%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.6822%" y="709" width="0.0803%" height="15" fill="rgb(222,165,54)" fg:x="943" fg:w="1"/><text x="75.9322%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.6822%" y="693" width="0.0803%" height="15" fill="rgb(251,142,27)" fg:x="943" fg:w="1"/><text x="75.9322%" y="703.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.6822%" y="677" width="0.0803%" height="15" fill="rgb(207,168,50)" fg:x="943" fg:w="1"/><text x="75.9322%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.6822%" y="661" width="0.0803%" height="15" fill="rgb(250,139,25)" fg:x="943" fg:w="1"/><text x="75.9322%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.6822%" y="645" width="0.0803%" height="15" fill="rgb(214,194,48)" fg:x="943" fg:w="1"/><text x="75.9322%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (10 samples, 0.80%)</title><rect x="75.1204%" y="805" width="0.8026%" height="15" fill="rgb(227,138,47)" fg:x="936" fg:w="10"/><text x="75.3704%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="75.5217%" y="789" width="0.4013%" height="15" fill="rgb(250,162,5)" fg:x="941" fg:w="5"/><text x="75.7717%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="75.6019%" y="773" width="0.3210%" height="15" fill="rgb(229,74,25)" fg:x="942" fg:w="4"/><text x="75.8519%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="75.6822%" y="757" width="0.2408%" height="15" fill="rgb(221,124,34)" fg:x="943" fg:w="3"/><text x="75.9322%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.6822%" y="741" width="0.2408%" height="15" fill="rgb(225,94,25)" fg:x="943" fg:w="3"/><text x="75.9322%" y="751.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.6822%" y="725" width="0.2408%" height="15" fill="rgb(210,100,12)" fg:x="943" fg:w="3"/><text x="75.9322%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7624%" y="709" width="0.1605%" height="15" fill="rgb(206,62,48)" fg:x="944" fg:w="2"/><text x="76.0124%" y="719.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.7624%" y="693" width="0.1605%" height="15" fill="rgb(222,181,9)" fg:x="944" fg:w="2"/><text x="76.0124%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.8427%" y="677" width="0.0803%" height="15" fill="rgb(248,42,38)" fg:x="945" fg:w="1"/><text x="76.0927%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8427%" y="661" width="0.0803%" height="15" fill="rgb(213,40,6)" fg:x="945" fg:w="1"/><text x="76.0927%" y="671.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="75.8427%" y="645" width="0.0803%" height="15" fill="rgb(211,108,15)" fg:x="945" fg:w="1"/><text x="76.0927%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9230%" y="709" width="0.0803%" height="15" fill="rgb(249,62,9)" fg:x="946" fg:w="1"/><text x="76.1730%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9230%" y="693" width="0.0803%" height="15" fill="rgb(233,26,54)" fg:x="946" fg:w="1"/><text x="76.1730%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.9230%" y="677" width="0.0803%" height="15" fill="rgb(210,175,26)" fg:x="946" fg:w="1"/><text x="76.1730%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.9230%" y="757" width="0.2408%" height="15" fill="rgb(210,43,33)" fg:x="946" fg:w="3"/><text x="76.1730%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.9230%" y="741" width="0.2408%" height="15" fill="rgb(224,46,17)" fg:x="946" fg:w="3"/><text x="76.1730%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.9230%" y="725" width="0.2408%" height="15" fill="rgb(254,24,38)" fg:x="946" fg:w="3"/><text x="76.1730%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.0032%" y="709" width="0.1605%" height="15" fill="rgb(248,32,0)" fg:x="947" fg:w="2"/><text x="76.2532%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.61%)</title><rect x="74.7191%" y="821" width="1.6051%" height="15" fill="rgb(224,37,41)" fg:x="931" fg:w="20"/><text x="74.9691%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="75.9230%" y="805" width="0.4013%" height="15" fill="rgb(252,70,22)" fg:x="946" fg:w="5"/><text x="76.1730%" y="815.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="75.9230%" y="789" width="0.4013%" height="15" fill="rgb(241,123,50)" fg:x="946" fg:w="5"/><text x="76.1730%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="75.9230%" y="773" width="0.4013%" height="15" fill="rgb(246,138,33)" fg:x="946" fg:w="5"/><text x="76.1730%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.1637%" y="757" width="0.1605%" height="15" fill="rgb(218,39,32)" fg:x="949" fg:w="2"/><text x="76.4137%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.1637%" y="741" width="0.1605%" height="15" fill="rgb(241,229,10)" fg:x="949" fg:w="2"/><text x="76.4137%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2440%" y="725" width="0.0803%" height="15" fill="rgb(212,160,10)" fg:x="950" fg:w="1"/><text x="76.4940%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2440%" y="709" width="0.0803%" height="15" fill="rgb(227,48,51)" fg:x="950" fg:w="1"/><text x="76.4940%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.2440%" y="693" width="0.0803%" height="15" fill="rgb(238,159,21)" fg:x="950" fg:w="1"/><text x="76.4940%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2440%" y="677" width="0.0803%" height="15" fill="rgb(216,1,10)" fg:x="950" fg:w="1"/><text x="76.4940%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2440%" y="661" width="0.0803%" height="15" fill="rgb(209,228,25)" fg:x="950" fg:w="1"/><text x="76.4940%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2440%" y="645" width="0.0803%" height="15" fill="rgb(234,160,10)" fg:x="950" fg:w="1"/><text x="76.4940%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.2440%" y="629" width="0.0803%" height="15" fill="rgb(212,66,25)" fg:x="950" fg:w="1"/><text x="76.4940%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.69%)</title><rect x="74.7191%" y="837" width="1.6854%" height="15" fill="rgb(254,121,18)" fg:x="931" fg:w="21"/><text x="74.9691%" y="847.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="76.3242%" y="821" width="0.0803%" height="15" fill="rgb(219,127,1)" fg:x="951" fg:w="1"/><text x="76.5742%" y="831.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3242%" y="805" width="0.0803%" height="15" fill="rgb(219,224,42)" fg:x="951" fg:w="1"/><text x="76.5742%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.4045%" y="709" width="0.1605%" height="15" fill="rgb(253,130,22)" fg:x="952" fg:w="2"/><text x="76.6545%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.4045%" y="693" width="0.1605%" height="15" fill="rgb(253,39,28)" fg:x="952" fg:w="2"/><text x="76.6545%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.4045%" y="677" width="0.1605%" height="15" fill="rgb(231,126,37)" fg:x="952" fg:w="2"/><text x="76.6545%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.4045%" y="661" width="0.1605%" height="15" fill="rgb(251,145,14)" fg:x="952" fg:w="2"/><text x="76.6545%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.4045%" y="645" width="0.1605%" height="15" fill="rgb(229,164,30)" fg:x="952" fg:w="2"/><text x="76.6545%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4848%" y="629" width="0.0803%" height="15" fill="rgb(233,227,54)" fg:x="953" fg:w="1"/><text x="76.7348%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5650%" y="677" width="0.0803%" height="15" fill="rgb(240,94,22)" fg:x="954" fg:w="1"/><text x="76.8150%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5650%" y="661" width="0.0803%" height="15" fill="rgb(217,56,16)" fg:x="954" fg:w="1"/><text x="76.8150%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="76.4045%" y="789" width="0.3210%" height="15" fill="rgb(229,133,38)" fg:x="952" fg:w="4"/><text x="76.6545%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="76.4045%" y="773" width="0.3210%" height="15" fill="rgb(225,139,35)" fg:x="952" fg:w="4"/><text x="76.6545%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="76.4045%" y="757" width="0.3210%" height="15" fill="rgb(223,100,16)" fg:x="952" fg:w="4"/><text x="76.6545%" y="767.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="76.4045%" y="741" width="0.3210%" height="15" fill="rgb(207,43,50)" fg:x="952" fg:w="4"/><text x="76.6545%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="76.4045%" y="725" width="0.3210%" height="15" fill="rgb(237,221,9)" fg:x="952" fg:w="4"/><text x="76.6545%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.5650%" y="709" width="0.1605%" height="15" fill="rgb(236,134,24)" fg:x="954" fg:w="2"/><text x="76.8150%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.5650%" y="693" width="0.1605%" height="15" fill="rgb(222,173,4)" fg:x="954" fg:w="2"/><text x="76.8150%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.6453%" y="677" width="0.0803%" height="15" fill="rgb(234,144,52)" fg:x="955" fg:w="1"/><text x="76.8953%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6453%" y="661" width="0.0803%" height="15" fill="rgb(223,41,7)" fg:x="955" fg:w="1"/><text x="76.8953%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.6453%" y="645" width="0.0803%" height="15" fill="rgb(226,143,9)" fg:x="955" fg:w="1"/><text x="76.8953%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6453%" y="629" width="0.0803%" height="15" fill="rgb(234,43,37)" fg:x="955" fg:w="1"/><text x="76.8953%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.6453%" y="613" width="0.0803%" height="15" fill="rgb(224,188,11)" fg:x="955" fg:w="1"/><text x="76.8953%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.6453%" y="597" width="0.0803%" height="15" fill="rgb(233,113,28)" fg:x="955" fg:w="1"/><text x="76.8953%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.8058%" y="693" width="0.0803%" height="15" fill="rgb(215,16,1)" fg:x="957" fg:w="1"/><text x="77.0558%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8860%" y="661" width="0.0803%" height="15" fill="rgb(238,74,38)" fg:x="958" fg:w="1"/><text x="77.1360%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8860%" y="645" width="0.0803%" height="15" fill="rgb(221,66,35)" fg:x="958" fg:w="1"/><text x="77.1360%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8860%" y="629" width="0.0803%" height="15" fill="rgb(251,225,2)" fg:x="958" fg:w="1"/><text x="77.1360%" y="639.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="76.7255%" y="773" width="0.3210%" height="15" fill="rgb(240,169,18)" fg:x="956" fg:w="4"/><text x="76.9755%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="76.7255%" y="757" width="0.3210%" height="15" fill="rgb(243,130,50)" fg:x="956" fg:w="4"/><text x="76.9755%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.7255%" y="741" width="0.3210%" height="15" fill="rgb(228,75,13)" fg:x="956" fg:w="4"/><text x="76.9755%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="76.7255%" y="725" width="0.3210%" height="15" fill="rgb(252,95,35)" fg:x="956" fg:w="4"/><text x="76.9755%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.7255%" y="709" width="0.3210%" height="15" fill="rgb(222,180,54)" fg:x="956" fg:w="4"/><text x="76.9755%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.8860%" y="693" width="0.1605%" height="15" fill="rgb(250,110,34)" fg:x="958" fg:w="2"/><text x="77.1360%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.8860%" y="677" width="0.1605%" height="15" fill="rgb(208,100,21)" fg:x="958" fg:w="2"/><text x="77.1360%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.9663%" y="661" width="0.0803%" height="15" fill="rgb(209,123,47)" fg:x="959" fg:w="1"/><text x="77.2163%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.9663%" y="645" width="0.0803%" height="15" fill="rgb(237,147,9)" fg:x="959" fg:w="1"/><text x="77.2163%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.9663%" y="629" width="0.0803%" height="15" fill="rgb(228,206,23)" fg:x="959" fg:w="1"/><text x="77.2163%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.9663%" y="613" width="0.0803%" height="15" fill="rgb(217,174,46)" fg:x="959" fg:w="1"/><text x="77.2163%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.9663%" y="597" width="0.0803%" height="15" fill="rgb(231,126,21)" fg:x="959" fg:w="1"/><text x="77.2163%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.9663%" y="581" width="0.0803%" height="15" fill="rgb(245,26,1)" fg:x="959" fg:w="1"/><text x="77.2163%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.9663%" y="565" width="0.0803%" height="15" fill="rgb(224,138,39)" fg:x="959" fg:w="1"/><text x="77.2163%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.9663%" y="549" width="0.0803%" height="15" fill="rgb(208,97,3)" fg:x="959" fg:w="1"/><text x="77.2163%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9663%" y="533" width="0.0803%" height="15" fill="rgb(222,77,29)" fg:x="959" fg:w="1"/><text x="77.2163%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9663%" y="517" width="0.0803%" height="15" fill="rgb(243,188,36)" fg:x="959" fg:w="1"/><text x="77.2163%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9663%" y="501" width="0.0803%" height="15" fill="rgb(218,214,3)" fg:x="959" fg:w="1"/><text x="77.2163%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="76.7255%" y="789" width="0.4815%" height="15" fill="rgb(211,183,45)" fg:x="956" fg:w="6"/><text x="76.9755%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.0465%" y="773" width="0.1605%" height="15" fill="rgb(230,218,25)" fg:x="960" fg:w="2"/><text x="77.2965%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.0465%" y="757" width="0.1605%" height="15" fill="rgb(233,86,6)" fg:x="960" fg:w="2"/><text x="77.2965%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="77.1268%" y="741" width="0.0803%" height="15" fill="rgb(220,59,24)" fg:x="961" fg:w="1"/><text x="77.3768%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.88%)</title><rect x="76.4045%" y="821" width="0.8828%" height="15" fill="rgb(227,60,1)" fg:x="952" fg:w="11"/><text x="76.6545%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="76.4045%" y="805" width="0.8828%" height="15" fill="rgb(216,212,54)" fg:x="952" fg:w="11"/><text x="76.6545%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="77.2071%" y="789" width="0.0803%" height="15" fill="rgb(227,81,54)" fg:x="962" fg:w="1"/><text x="77.4571%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.2071%" y="773" width="0.0803%" height="15" fill="rgb(206,204,43)" fg:x="962" fg:w="1"/><text x="77.4571%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.2071%" y="757" width="0.0803%" height="15" fill="rgb(219,29,26)" fg:x="962" fg:w="1"/><text x="77.4571%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (13 samples, 1.04%)</title><rect x="76.4045%" y="837" width="1.0433%" height="15" fill="rgb(252,40,36)" fg:x="952" fg:w="13"/><text x="76.6545%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="77.2873%" y="821" width="0.1605%" height="15" fill="rgb(224,205,39)" fg:x="963" fg:w="2"/><text x="77.5373%" y="831.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="77.2873%" y="805" width="0.1605%" height="15" fill="rgb(222,13,21)" fg:x="963" fg:w="2"/><text x="77.5373%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="789" width="0.1605%" height="15" fill="rgb(243,139,6)" fg:x="963" fg:w="2"/><text x="77.5373%" y="799.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.2873%" y="773" width="0.1605%" height="15" fill="rgb(237,101,11)" fg:x="963" fg:w="2"/><text x="77.5373%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="757" width="0.1605%" height="15" fill="rgb(254,49,28)" fg:x="963" fg:w="2"/><text x="77.5373%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="741" width="0.1605%" height="15" fill="rgb(223,41,21)" fg:x="963" fg:w="2"/><text x="77.5373%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="725" width="0.1605%" height="15" fill="rgb(225,103,29)" fg:x="963" fg:w="2"/><text x="77.5373%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.2873%" y="709" width="0.1605%" height="15" fill="rgb(244,82,43)" fg:x="963" fg:w="2"/><text x="77.5373%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="693" width="0.1605%" height="15" fill="rgb(217,39,3)" fg:x="963" fg:w="2"/><text x="77.5373%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="677" width="0.1605%" height="15" fill="rgb(239,128,25)" fg:x="963" fg:w="2"/><text x="77.5373%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="661" width="0.1605%" height="15" fill="rgb(210,192,37)" fg:x="963" fg:w="2"/><text x="77.5373%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.2873%" y="645" width="0.1605%" height="15" fill="rgb(219,98,18)" fg:x="963" fg:w="2"/><text x="77.5373%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="629" width="0.1605%" height="15" fill="rgb(224,228,38)" fg:x="963" fg:w="2"/><text x="77.5373%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="613" width="0.1605%" height="15" fill="rgb(241,129,43)" fg:x="963" fg:w="2"/><text x="77.5373%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="77.2873%" y="597" width="0.1605%" height="15" fill="rgb(223,8,51)" fg:x="963" fg:w="2"/><text x="77.5373%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.2873%" y="581" width="0.1605%" height="15" fill="rgb(233,76,24)" fg:x="963" fg:w="2"/><text x="77.5373%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.3676%" y="565" width="0.0803%" height="15" fill="rgb(219,115,10)" fg:x="964" fg:w="1"/><text x="77.6176%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="77.3676%" y="549" width="0.0803%" height="15" fill="rgb(222,137,12)" fg:x="964" fg:w="1"/><text x="77.6176%" y="559.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="77.3676%" y="533" width="0.0803%" height="15" fill="rgb(216,192,16)" fg:x="964" fg:w="1"/><text x="77.6176%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3676%" y="517" width="0.0803%" height="15" fill="rgb(247,6,27)" fg:x="964" fg:w="1"/><text x="77.6176%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3676%" y="501" width="0.0803%" height="15" fill="rgb(254,39,44)" fg:x="964" fg:w="1"/><text x="77.6176%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.3676%" y="485" width="0.0803%" height="15" fill="rgb(251,116,35)" fg:x="964" fg:w="1"/><text x="77.6176%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.3676%" y="469" width="0.0803%" height="15" fill="rgb(208,61,44)" fg:x="964" fg:w="1"/><text x="77.6176%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.3676%" y="453" width="0.0803%" height="15" fill="rgb(250,34,5)" fg:x="964" fg:w="1"/><text x="77.6176%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.3676%" y="437" width="0.0803%" height="15" fill="rgb(241,40,15)" fg:x="964" fg:w="1"/><text x="77.6176%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.3676%" y="421" width="0.0803%" height="15" fill="rgb(229,182,2)" fg:x="964" fg:w="1"/><text x="77.6176%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.3676%" y="405" width="0.0803%" height="15" fill="rgb(244,148,52)" fg:x="964" fg:w="1"/><text x="77.6176%" y="415.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="77.4478%" y="837" width="0.2408%" height="15" fill="rgb(225,211,4)" fg:x="965" fg:w="3"/><text x="77.6978%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="77.4478%" y="821" width="0.2408%" height="15" fill="rgb(208,222,47)" fg:x="965" fg:w="3"/><text x="77.6978%" y="831.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.6083%" y="805" width="0.0803%" height="15" fill="rgb(233,162,0)" fg:x="967" fg:w="1"/><text x="77.8583%" y="815.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.6083%" y="789" width="0.0803%" height="15" fill="rgb(241,54,13)" fg:x="967" fg:w="1"/><text x="77.8583%" y="799.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="77.6083%" y="773" width="0.0803%" height="15" fill="rgb(213,89,18)" fg:x="967" fg:w="1"/><text x="77.8583%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="77.6083%" y="757" width="0.0803%" height="15" fill="rgb(215,170,37)" fg:x="967" fg:w="1"/><text x="77.8583%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6886%" y="837" width="0.0803%" height="15" fill="rgb(216,133,15)" fg:x="968" fg:w="1"/><text x="77.9386%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.7689%" y="821" width="0.0803%" height="15" fill="rgb(230,42,19)" fg:x="969" fg:w="1"/><text x="78.0189%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.7689%" y="805" width="0.0803%" height="15" fill="rgb(221,103,41)" fg:x="969" fg:w="1"/><text x="78.0189%" y="815.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="77.7689%" y="837" width="0.3210%" height="15" fill="rgb(220,142,31)" fg:x="969" fg:w="4"/><text x="78.0189%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="77.8491%" y="821" width="0.2408%" height="15" fill="rgb(239,218,4)" fg:x="970" fg:w="3"/><text x="78.0991%" y="831.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="77.8491%" y="805" width="0.2408%" height="15" fill="rgb(232,16,4)" fg:x="970" fg:w="3"/><text x="78.0991%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.0096%" y="789" width="0.0803%" height="15" fill="rgb(226,213,25)" fg:x="972" fg:w="1"/><text x="78.2596%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0096%" y="773" width="0.0803%" height="15" fill="rgb(235,135,19)" fg:x="972" fg:w="1"/><text x="78.2596%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.0096%" y="757" width="0.0803%" height="15" fill="rgb(240,107,29)" fg:x="972" fg:w="1"/><text x="78.2596%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0096%" y="741" width="0.0803%" height="15" fill="rgb(206,164,44)" fg:x="972" fg:w="1"/><text x="78.2596%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0096%" y="725" width="0.0803%" height="15" fill="rgb(210,23,48)" fg:x="972" fg:w="1"/><text x="78.2596%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (975 samples, 78.25%)</title><rect x="0.0000%" y="901" width="78.2504%" height="15" fill="rgb(212,138,25)" fg:x="0" fg:w="975"/><text x="0.2500%" y="911.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (975 samples, 78.25%)</title><rect x="0.0000%" y="885" width="78.2504%" height="15" fill="rgb(224,152,3)" fg:x="0" fg:w="975"/><text x="0.2500%" y="895.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (975 samples, 78.25%)</title><rect x="0.0000%" y="869" width="78.2504%" height="15" fill="rgb(214,38,23)" fg:x="0" fg:w="975"/><text x="0.2500%" y="879.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (372 samples, 29.86%)</title><rect x="48.3949%" y="853" width="29.8555%" height="15" fill="rgb(215,161,10)" fg:x="603" fg:w="372"/><text x="48.6449%" y="863.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="78.0899%" y="837" width="0.1605%" height="15" fill="rgb(240,185,7)" fg:x="973" fg:w="2"/><text x="78.3399%" y="847.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="78.0899%" y="821" width="0.1605%" height="15" fill="rgb(244,104,25)" fg:x="973" fg:w="2"/><text x="78.3399%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="78.0899%" y="805" width="0.1605%" height="15" fill="rgb(242,140,44)" fg:x="973" fg:w="2"/><text x="78.3399%" y="815.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.0899%" y="789" width="0.1605%" height="15" fill="rgb(245,30,19)" fg:x="973" fg:w="2"/><text x="78.3399%" y="799.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.0899%" y="773" width="0.1605%" height="15" fill="rgb(219,208,35)" fg:x="973" fg:w="2"/><text x="78.3399%" y="783.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.0899%" y="757" width="0.1605%" height="15" fill="rgb(235,200,7)" fg:x="973" fg:w="2"/><text x="78.3399%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="78.0899%" y="741" width="0.1605%" height="15" fill="rgb(220,193,10)" fg:x="973" fg:w="2"/><text x="78.3399%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.0899%" y="725" width="0.1605%" height="15" fill="rgb(212,216,39)" fg:x="973" fg:w="2"/><text x="78.3399%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.0899%" y="709" width="0.1605%" height="15" fill="rgb(212,134,19)" fg:x="973" fg:w="2"/><text x="78.3399%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.0899%" y="693" width="0.1605%" height="15" fill="rgb(230,57,24)" fg:x="973" fg:w="2"/><text x="78.3399%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="78.0899%" y="677" width="0.1605%" height="15" fill="rgb(238,209,37)" fg:x="973" fg:w="2"/><text x="78.3399%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.0899%" y="661" width="0.1605%" height="15" fill="rgb(247,11,45)" fg:x="973" fg:w="2"/><text x="78.3399%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.1701%" y="645" width="0.0803%" height="15" fill="rgb(222,126,6)" fg:x="974" fg:w="1"/><text x="78.4201%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.1701%" y="629" width="0.0803%" height="15" fill="rgb(245,77,24)" fg:x="974" fg:w="1"/><text x="78.4201%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.1701%" y="613" width="0.0803%" height="15" fill="rgb(227,14,24)" fg:x="974" fg:w="1"/><text x="78.4201%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.1701%" y="597" width="0.0803%" height="15" fill="rgb(211,112,42)" fg:x="974" fg:w="1"/><text x="78.4201%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.1701%" y="581" width="0.0803%" height="15" fill="rgb(230,103,42)" fg:x="974" fg:w="1"/><text x="78.4201%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.1701%" y="565" width="0.0803%" height="15" fill="rgb(228,125,42)" fg:x="974" fg:w="1"/><text x="78.4201%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.1701%" y="549" width="0.0803%" height="15" fill="rgb(243,33,6)" fg:x="974" fg:w="1"/><text x="78.4201%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.1701%" y="533" width="0.0803%" height="15" fill="rgb(231,2,40)" fg:x="974" fg:w="1"/><text x="78.4201%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.1701%" y="517" width="0.0803%" height="15" fill="rgb(224,200,53)" fg:x="974" fg:w="1"/><text x="78.4201%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.1701%" y="501" width="0.0803%" height="15" fill="rgb(215,116,36)" fg:x="974" fg:w="1"/><text x="78.4201%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.1701%" y="485" width="0.0803%" height="15" fill="rgb(240,23,51)" fg:x="974" fg:w="1"/><text x="78.4201%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.1701%" y="469" width="0.0803%" height="15" fill="rgb(221,72,5)" fg:x="974" fg:w="1"/><text x="78.4201%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="78.1701%" y="453" width="0.0803%" height="15" fill="rgb(245,142,9)" fg:x="974" fg:w="1"/><text x="78.4201%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="78.1701%" y="437" width="0.0803%" height="15" fill="rgb(207,34,16)" fg:x="974" fg:w="1"/><text x="78.4201%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="78.1701%" y="421" width="0.0803%" height="15" fill="rgb(252,101,12)" fg:x="974" fg:w="1"/><text x="78.4201%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.1701%" y="405" width="0.0803%" height="15" fill="rgb(239,89,37)" fg:x="974" fg:w="1"/><text x="78.4201%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2504%" y="805" width="0.0803%" height="15" fill="rgb(252,227,37)" fg:x="975" fg:w="1"/><text x="78.5004%" y="815.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.4109%" y="741" width="0.0803%" height="15" fill="rgb(212,164,17)" fg:x="977" fg:w="1"/><text x="78.6609%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4912%" y="725" width="0.0803%" height="15" fill="rgb(240,86,13)" fg:x="978" fg:w="1"/><text x="78.7412%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.5714%" y="693" width="0.0803%" height="15" fill="rgb(233,183,32)" fg:x="979" fg:w="1"/><text x="78.8214%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="78.2504%" y="853" width="0.4815%" height="15" fill="rgb(205,201,38)" fg:x="975" fg:w="6"/><text x="78.5004%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (6 samples, 0.48%)</title><rect x="78.2504%" y="837" width="0.4815%" height="15" fill="rgb(210,122,38)" fg:x="975" fg:w="6"/><text x="78.5004%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="78.2504%" y="821" width="0.4815%" height="15" fill="rgb(241,174,26)" fg:x="975" fg:w="6"/><text x="78.5004%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (5 samples, 0.40%)</title><rect x="78.3307%" y="805" width="0.4013%" height="15" fill="rgb(219,89,7)" fg:x="976" fg:w="5"/><text x="78.5807%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="78.3307%" y="789" width="0.4013%" height="15" fill="rgb(246,9,24)" fg:x="976" fg:w="5"/><text x="78.5807%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="78.3307%" y="773" width="0.4013%" height="15" fill="rgb(205,132,21)" fg:x="976" fg:w="5"/><text x="78.5807%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="78.3307%" y="757" width="0.4013%" height="15" fill="rgb(210,11,17)" fg:x="976" fg:w="5"/><text x="78.5807%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="78.4912%" y="741" width="0.2408%" height="15" fill="rgb(226,138,14)" fg:x="978" fg:w="3"/><text x="78.7412%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.5714%" y="725" width="0.1605%" height="15" fill="rgb(224,108,44)" fg:x="979" fg:w="2"/><text x="78.8214%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.5714%" y="709" width="0.1605%" height="15" fill="rgb(247,114,36)" fg:x="979" fg:w="2"/><text x="78.8214%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.6517%" y="693" width="0.0803%" height="15" fill="rgb(231,183,14)" fg:x="980" fg:w="1"/><text x="78.9017%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.6517%" y="677" width="0.0803%" height="15" fill="rgb(218,168,4)" fg:x="980" fg:w="1"/><text x="78.9017%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6517%" y="661" width="0.0803%" height="15" fill="rgb(210,8,3)" fg:x="980" fg:w="1"/><text x="78.9017%" y="671.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (4 samples, 0.32%)</title><rect x="78.7319%" y="853" width="0.3210%" height="15" fill="rgb(216,165,0)" fg:x="981" fg:w="4"/><text x="78.9819%" y="863.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (4 samples, 0.32%)</title><rect x="78.7319%" y="837" width="0.3210%" height="15" fill="rgb(245,120,5)" fg:x="981" fg:w="4"/><text x="78.9819%" y="847.50"></text></g><g><title>engine::session::Session::new (4 samples, 0.32%)</title><rect x="78.7319%" y="821" width="0.3210%" height="15" fill="rgb(249,121,32)" fg:x="981" fg:w="4"/><text x="78.9819%" y="831.50"></text></g><g><title>engine::session::Session::initialize (4 samples, 0.32%)</title><rect x="78.7319%" y="805" width="0.3210%" height="15" fill="rgb(211,55,33)" fg:x="981" fg:w="4"/><text x="78.9819%" y="815.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (4 samples, 0.32%)</title><rect x="78.7319%" y="789" width="0.3210%" height="15" fill="rgb(254,46,35)" fg:x="981" fg:w="4"/><text x="78.9819%" y="799.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="78.7319%" y="773" width="0.3210%" height="15" fill="rgb(213,213,19)" fg:x="981" fg:w="4"/><text x="78.9819%" y="783.50"></text></g><g><title>libloading::safe::Library::new (4 samples, 0.32%)</title><rect x="78.7319%" y="757" width="0.3210%" height="15" fill="rgb(207,152,44)" fg:x="981" fg:w="4"/><text x="78.9819%" y="767.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="78.8122%" y="741" width="0.2408%" height="15" fill="rgb(227,195,36)" fg:x="982" fg:w="3"/><text x="79.0622%" y="751.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="78.8122%" y="725" width="0.2408%" height="15" fill="rgb(210,137,36)" fg:x="982" fg:w="3"/><text x="79.0622%" y="735.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="78.8122%" y="709" width="0.2408%" height="15" fill="rgb(253,47,47)" fg:x="982" fg:w="3"/><text x="79.0622%" y="719.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="78.8925%" y="693" width="0.1605%" height="15" fill="rgb(230,147,18)" fg:x="983" fg:w="2"/><text x="79.1425%" y="703.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="78.8925%" y="677" width="0.1605%" height="15" fill="rgb(247,33,49)" fg:x="983" fg:w="2"/><text x="79.1425%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.0530%" y="789" width="0.0803%" height="15" fill="rgb(239,26,29)" fg:x="985" fg:w="1"/><text x="79.3030%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="79.0530%" y="773" width="0.0803%" height="15" fill="rgb(245,145,52)" fg:x="985" fg:w="1"/><text x="79.3030%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0530%" y="757" width="0.0803%" height="15" fill="rgb(224,139,32)" fg:x="985" fg:w="1"/><text x="79.3030%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.1332%" y="741" width="0.0803%" height="15" fill="rgb(238,202,19)" fg:x="986" fg:w="1"/><text x="79.3832%" y="751.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.2135%" y="741" width="0.0803%" height="15" fill="rgb(249,211,53)" fg:x="987" fg:w="1"/><text x="79.4635%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2135%" y="725" width="0.0803%" height="15" fill="rgb(237,229,33)" fg:x="987" fg:w="1"/><text x="79.4635%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.2937%" y="725" width="0.0803%" height="15" fill="rgb(208,97,40)" fg:x="988" fg:w="1"/><text x="79.5437%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2937%" y="709" width="0.0803%" height="15" fill="rgb(254,36,16)" fg:x="988" fg:w="1"/><text x="79.5437%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.3740%" y="677" width="0.0803%" height="15" fill="rgb(221,7,12)" fg:x="989" fg:w="1"/><text x="79.6240%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.3740%" y="661" width="0.0803%" height="15" fill="rgb(205,11,12)" fg:x="989" fg:w="1"/><text x="79.6240%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.3740%" y="645" width="0.0803%" height="15" fill="rgb(227,72,28)" fg:x="989" fg:w="1"/><text x="79.6240%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="79.3740%" y="709" width="0.1605%" height="15" fill="rgb(228,7,34)" fg:x="989" fg:w="2"/><text x="79.6240%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.3740%" y="693" width="0.1605%" height="15" fill="rgb(230,52,42)" fg:x="989" fg:w="2"/><text x="79.6240%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.4543%" y="677" width="0.0803%" height="15" fill="rgb(219,177,53)" fg:x="990" fg:w="1"/><text x="79.7043%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.5345%" y="709" width="0.1605%" height="15" fill="rgb(243,196,34)" fg:x="991" fg:w="2"/><text x="79.7845%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.6148%" y="693" width="0.0803%" height="15" fill="rgb(213,66,49)" fg:x="992" fg:w="1"/><text x="79.8648%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.6148%" y="677" width="0.0803%" height="15" fill="rgb(233,11,50)" fg:x="992" fg:w="1"/><text x="79.8648%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.6148%" y="661" width="0.0803%" height="15" fill="rgb(235,190,6)" fg:x="992" fg:w="1"/><text x="79.8648%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.6950%" y="677" width="0.1605%" height="15" fill="rgb(212,64,44)" fg:x="993" fg:w="2"/><text x="79.9450%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="79.3740%" y="725" width="0.5618%" height="15" fill="rgb(206,95,44)" fg:x="989" fg:w="7"/><text x="79.6240%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.6950%" y="709" width="0.2408%" height="15" fill="rgb(227,136,25)" fg:x="993" fg:w="3"/><text x="79.9450%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.6950%" y="693" width="0.2408%" height="15" fill="rgb(206,178,17)" fg:x="993" fg:w="3"/><text x="79.9450%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8555%" y="677" width="0.0803%" height="15" fill="rgb(208,168,35)" fg:x="995" fg:w="1"/><text x="80.1055%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.8555%" y="661" width="0.0803%" height="15" fill="rgb(213,210,40)" fg:x="995" fg:w="1"/><text x="80.1055%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.8555%" y="645" width="0.0803%" height="15" fill="rgb(236,60,6)" fg:x="995" fg:w="1"/><text x="80.1055%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="79.1332%" y="757" width="0.9631%" height="15" fill="rgb(220,186,36)" fg:x="986" fg:w="12"/><text x="79.3832%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="79.2937%" y="741" width="0.8026%" height="15" fill="rgb(225,120,49)" fg:x="988" fg:w="10"/><text x="79.5437%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.9358%" y="725" width="0.1605%" height="15" fill="rgb(250,115,20)" fg:x="996" fg:w="2"/><text x="80.1858%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.0161%" y="709" width="0.0803%" height="15" fill="rgb(207,214,23)" fg:x="997" fg:w="1"/><text x="80.2661%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.0161%" y="693" width="0.0803%" height="15" fill="rgb(240,9,18)" fg:x="997" fg:w="1"/><text x="80.2661%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.0161%" y="677" width="0.0803%" height="15" fill="rgb(232,170,48)" fg:x="997" fg:w="1"/><text x="80.2661%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.0161%" y="661" width="0.0803%" height="15" fill="rgb(236,149,23)" fg:x="997" fg:w="1"/><text x="80.2661%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.0161%" y="645" width="0.0803%" height="15" fill="rgb(210,125,42)" fg:x="997" fg:w="1"/><text x="80.2661%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.0963%" y="725" width="0.0803%" height="15" fill="rgb(207,201,52)" fg:x="998" fg:w="1"/><text x="80.3463%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.0963%" y="757" width="0.1605%" height="15" fill="rgb(250,187,37)" fg:x="998" fg:w="2"/><text x="80.3463%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="80.0963%" y="741" width="0.1605%" height="15" fill="rgb(214,186,2)" fg:x="998" fg:w="2"/><text x="80.3463%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1766%" y="725" width="0.0803%" height="15" fill="rgb(207,189,15)" fg:x="999" fg:w="1"/><text x="80.4266%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1766%" y="709" width="0.0803%" height="15" fill="rgb(221,99,21)" fg:x="999" fg:w="1"/><text x="80.4266%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1766%" y="693" width="0.0803%" height="15" fill="rgb(212,67,18)" fg:x="999" fg:w="1"/><text x="80.4266%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1766%" y="677" width="0.0803%" height="15" fill="rgb(226,24,24)" fg:x="999" fg:w="1"/><text x="80.4266%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1766%" y="661" width="0.0803%" height="15" fill="rgb(252,123,31)" fg:x="999" fg:w="1"/><text x="80.4266%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1766%" y="645" width="0.0803%" height="15" fill="rgb(251,227,47)" fg:x="999" fg:w="1"/><text x="80.4266%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2568%" y="709" width="0.0803%" height="15" fill="rgb(233,84,53)" fg:x="1000" fg:w="1"/><text x="80.5068%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2568%" y="693" width="0.0803%" height="15" fill="rgb(228,57,19)" fg:x="1000" fg:w="1"/><text x="80.5068%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.2568%" y="677" width="0.0803%" height="15" fill="rgb(251,81,5)" fg:x="1000" fg:w="1"/><text x="80.5068%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3371%" y="661" width="0.0803%" height="15" fill="rgb(236,211,27)" fg:x="1001" fg:w="1"/><text x="80.5871%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3371%" y="645" width="0.0803%" height="15" fill="rgb(218,21,6)" fg:x="1001" fg:w="1"/><text x="80.5871%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.3371%" y="629" width="0.0803%" height="15" fill="rgb(239,104,19)" fg:x="1001" fg:w="1"/><text x="80.5871%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.4173%" y="645" width="0.0803%" height="15" fill="rgb(234,179,27)" fg:x="1002" fg:w="1"/><text x="80.6673%" y="655.50"></text></g><g><title>engine::session::Session::flush (20 samples, 1.61%)</title><rect x="79.0530%" y="837" width="1.6051%" height="15" fill="rgb(221,154,39)" fg:x="985" fg:w="20"/><text x="79.3030%" y="847.50"></text></g><g><title>engine::session::state::State::close (20 samples, 1.61%)</title><rect x="79.0530%" y="821" width="1.6051%" height="15" fill="rgb(228,190,1)" fg:x="985" fg:w="20"/><text x="79.3030%" y="831.50"></text></g><g><title>engine::session::state::State::flush_entities (20 samples, 1.61%)</title><rect x="79.0530%" y="805" width="1.6051%" height="15" fill="rgb(244,122,33)" fg:x="985" fg:w="20"/><text x="79.3030%" y="815.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (19 samples, 1.52%)</title><rect x="79.1332%" y="789" width="1.5249%" height="15" fill="rgb(227,56,37)" fg:x="986" fg:w="19"/><text x="79.3832%" y="799.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (19 samples, 1.52%)</title><rect x="79.1332%" y="773" width="1.5249%" height="15" fill="rgb(207,158,16)" fg:x="986" fg:w="19"/><text x="79.3832%" y="783.50"></text></g><g><title>kernel::model::any_entity_changes (5 samples, 0.40%)</title><rect x="80.2568%" y="757" width="0.4013%" height="15" fill="rgb(251,222,30)" fg:x="1000" fg:w="5"/><text x="80.5068%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="80.2568%" y="741" width="0.4013%" height="15" fill="rgb(240,22,49)" fg:x="1000" fg:w="5"/><text x="80.5068%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="80.2568%" y="725" width="0.4013%" height="15" fill="rgb(224,207,37)" fg:x="1000" fg:w="5"/><text x="80.5068%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="80.3371%" y="709" width="0.3210%" height="15" fill="rgb(249,188,40)" fg:x="1001" fg:w="4"/><text x="80.5871%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="80.3371%" y="693" width="0.3210%" height="15" fill="rgb(254,141,11)" fg:x="1001" fg:w="4"/><text x="80.5871%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="80.3371%" y="677" width="0.3210%" height="15" fill="rgb(231,177,6)" fg:x="1001" fg:w="4"/><text x="80.5871%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="80.4173%" y="661" width="0.2408%" height="15" fill="rgb(241,6,16)" fg:x="1002" fg:w="3"/><text x="80.6673%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.4976%" y="645" width="0.1605%" height="15" fill="rgb(230,50,14)" fg:x="1003" fg:w="2"/><text x="80.7476%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="80.4976%" y="629" width="0.1605%" height="15" fill="rgb(254,36,3)" fg:x="1003" fg:w="2"/><text x="80.7476%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.5778%" y="613" width="0.0803%" height="15" fill="rgb(226,149,37)" fg:x="1004" fg:w="1"/><text x="80.8278%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.5778%" y="597" width="0.0803%" height="15" fill="rgb(253,49,27)" fg:x="1004" fg:w="1"/><text x="80.8278%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.5778%" y="581" width="0.0803%" height="15" fill="rgb(249,182,52)" fg:x="1004" fg:w="1"/><text x="80.8278%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.5778%" y="565" width="0.0803%" height="15" fill="rgb(223,42,15)" fg:x="1004" fg:w="1"/><text x="80.8278%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5778%" y="549" width="0.0803%" height="15" fill="rgb(232,31,42)" fg:x="1004" fg:w="1"/><text x="80.8278%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="80.6581%" y="789" width="0.0803%" height="15" fill="rgb(233,56,46)" fg:x="1005" fg:w="1"/><text x="80.9081%" y="799.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="80.6581%" y="773" width="0.0803%" height="15" fill="rgb(241,143,21)" fg:x="1005" fg:w="1"/><text x="80.9081%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="80.6581%" y="805" width="0.1605%" height="15" fill="rgb(251,222,15)" fg:x="1005" fg:w="2"/><text x="80.9081%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="80.7384%" y="789" width="0.0803%" height="15" fill="rgb(242,101,40)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.7384%" y="773" width="0.0803%" height="15" fill="rgb(247,60,44)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.7384%" y="757" width="0.0803%" height="15" fill="rgb(254,48,47)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.7384%" y="741" width="0.0803%" height="15" fill="rgb(253,30,33)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.7384%" y="725" width="0.0803%" height="15" fill="rgb(253,214,47)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.7384%" y="709" width="0.0803%" height="15" fill="rgb(241,108,29)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.7384%" y="693" width="0.0803%" height="15" fill="rgb(240,36,2)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.7384%" y="677" width="0.0803%" height="15" fill="rgb(243,198,24)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.7384%" y="661" width="0.0803%" height="15" fill="rgb(225,98,27)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.7384%" y="645" width="0.0803%" height="15" fill="rgb(208,86,30)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.7384%" y="629" width="0.0803%" height="15" fill="rgb(242,157,11)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.7384%" y="613" width="0.0803%" height="15" fill="rgb(244,84,16)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.7384%" y="597" width="0.0803%" height="15" fill="rgb(247,20,46)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7384%" y="581" width="0.0803%" height="15" fill="rgb(240,157,20)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="80.8186%" y="805" width="0.0803%" height="15" fill="rgb(212,151,38)" fg:x="1007" fg:w="1"/><text x="81.0686%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="80.8186%" y="789" width="0.0803%" height="15" fill="rgb(233,197,14)" fg:x="1007" fg:w="1"/><text x="81.0686%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.8186%" y="773" width="0.0803%" height="15" fill="rgb(226,148,28)" fg:x="1007" fg:w="1"/><text x="81.0686%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="80.6581%" y="821" width="0.4013%" height="15" fill="rgb(244,141,30)" fg:x="1005" fg:w="5"/><text x="80.9081%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="80.8989%" y="805" width="0.1605%" height="15" fill="rgb(215,73,38)" fg:x="1008" fg:w="2"/><text x="81.1489%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="80.8989%" y="789" width="0.1605%" height="15" fill="rgb(230,148,29)" fg:x="1008" fg:w="2"/><text x="81.1489%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.8989%" y="773" width="0.1605%" height="15" fill="rgb(250,41,52)" fg:x="1008" fg:w="2"/><text x="81.1489%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.8989%" y="757" width="0.1605%" height="15" fill="rgb(215,48,1)" fg:x="1008" fg:w="2"/><text x="81.1489%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="80.8989%" y="741" width="0.1605%" height="15" fill="rgb(205,223,38)" fg:x="1008" fg:w="2"/><text x="81.1489%" y="751.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.8989%" y="725" width="0.1605%" height="15" fill="rgb(213,51,8)" fg:x="1008" fg:w="2"/><text x="81.1489%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0594%" y="725" width="0.0803%" height="15" fill="rgb(248,53,11)" fg:x="1010" fg:w="1"/><text x="81.3094%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0594%" y="709" width="0.0803%" height="15" fill="rgb(218,140,4)" fg:x="1010" fg:w="1"/><text x="81.3094%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.0594%" y="693" width="0.0803%" height="15" fill="rgb(248,161,31)" fg:x="1010" fg:w="1"/><text x="81.3094%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="81.0594%" y="805" width="0.1605%" height="15" fill="rgb(239,88,32)" fg:x="1010" fg:w="2"/><text x="81.3094%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="81.0594%" y="789" width="0.1605%" height="15" fill="rgb(234,14,28)" fg:x="1010" fg:w="2"/><text x="81.3094%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.0594%" y="773" width="0.1605%" height="15" fill="rgb(235,173,11)" fg:x="1010" fg:w="2"/><text x="81.3094%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="81.0594%" y="757" width="0.1605%" height="15" fill="rgb(222,70,2)" fg:x="1010" fg:w="2"/><text x="81.3094%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.0594%" y="741" width="0.1605%" height="15" fill="rgb(228,196,41)" fg:x="1010" fg:w="2"/><text x="81.3094%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.1396%" y="725" width="0.0803%" height="15" fill="rgb(249,19,9)" fg:x="1011" fg:w="1"/><text x="81.3896%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.1396%" y="709" width="0.0803%" height="15" fill="rgb(221,16,43)" fg:x="1011" fg:w="1"/><text x="81.3896%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.1396%" y="693" width="0.0803%" height="15" fill="rgb(225,207,6)" fg:x="1011" fg:w="1"/><text x="81.3896%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.1396%" y="677" width="0.0803%" height="15" fill="rgb(249,32,32)" fg:x="1011" fg:w="1"/><text x="81.3896%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.1396%" y="661" width="0.0803%" height="15" fill="rgb(232,163,43)" fg:x="1011" fg:w="1"/><text x="81.3896%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.1396%" y="645" width="0.0803%" height="15" fill="rgb(236,158,54)" fg:x="1011" fg:w="1"/><text x="81.3896%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.1396%" y="629" width="0.0803%" height="15" fill="rgb(205,126,44)" fg:x="1011" fg:w="1"/><text x="81.3896%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2199%" y="661" width="0.0803%" height="15" fill="rgb(210,162,12)" fg:x="1012" fg:w="1"/><text x="81.4699%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2199%" y="645" width="0.0803%" height="15" fill="rgb(218,156,48)" fg:x="1012" fg:w="1"/><text x="81.4699%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.2199%" y="709" width="0.1605%" height="15" fill="rgb(248,210,3)" fg:x="1012" fg:w="2"/><text x="81.4699%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.2199%" y="693" width="0.1605%" height="15" fill="rgb(212,43,27)" fg:x="1012" fg:w="2"/><text x="81.4699%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.2199%" y="677" width="0.1605%" height="15" fill="rgb(241,52,6)" fg:x="1012" fg:w="2"/><text x="81.4699%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3002%" y="661" width="0.0803%" height="15" fill="rgb(222,178,35)" fg:x="1013" fg:w="1"/><text x="81.5502%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="81.2199%" y="789" width="0.2408%" height="15" fill="rgb(205,121,46)" fg:x="1012" fg:w="3"/><text x="81.4699%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="81.2199%" y="773" width="0.2408%" height="15" fill="rgb(249,67,1)" fg:x="1012" fg:w="3"/><text x="81.4699%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="81.2199%" y="757" width="0.2408%" height="15" fill="rgb(238,168,42)" fg:x="1012" fg:w="3"/><text x="81.4699%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.2199%" y="741" width="0.2408%" height="15" fill="rgb(205,36,48)" fg:x="1012" fg:w="3"/><text x="81.4699%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.2199%" y="725" width="0.2408%" height="15" fill="rgb(240,85,12)" fg:x="1012" fg:w="3"/><text x="81.4699%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3804%" y="709" width="0.0803%" height="15" fill="rgb(245,27,39)" fg:x="1014" fg:w="1"/><text x="81.6304%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.3804%" y="693" width="0.0803%" height="15" fill="rgb(218,129,34)" fg:x="1014" fg:w="1"/><text x="81.6304%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3804%" y="677" width="0.0803%" height="15" fill="rgb(221,157,12)" fg:x="1014" fg:w="1"/><text x="81.6304%" y="687.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.88%)</title><rect x="80.6581%" y="837" width="0.8828%" height="15" fill="rgb(213,206,20)" fg:x="1005" fg:w="11"/><text x="80.9081%" y="847.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="81.0594%" y="821" width="0.4815%" height="15" fill="rgb(227,115,30)" fg:x="1010" fg:w="6"/><text x="81.3094%" y="831.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="81.2199%" y="805" width="0.3210%" height="15" fill="rgb(221,40,47)" fg:x="1012" fg:w="4"/><text x="81.4699%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="81.4607%" y="789" width="0.0803%" height="15" fill="rgb(239,96,49)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.4607%" y="773" width="0.0803%" height="15" fill="rgb(223,24,38)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="81.4607%" y="757" width="0.0803%" height="15" fill="rgb(242,35,45)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="767.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="81.4607%" y="741" width="0.0803%" height="15" fill="rgb(236,20,9)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.4607%" y="725" width="0.0803%" height="15" fill="rgb(239,124,8)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="735.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="81.4607%" y="709" width="0.0803%" height="15" fill="rgb(228,92,29)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="81.4607%" y="693" width="0.0803%" height="15" fill="rgb(251,53,39)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.4607%" y="677" width="0.0803%" height="15" fill="rgb(224,44,10)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.4607%" y="661" width="0.0803%" height="15" fill="rgb(254,10,15)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.4607%" y="645" width="0.0803%" height="15" fill="rgb(245,173,6)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.4607%" y="629" width="0.0803%" height="15" fill="rgb(228,74,0)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.4607%" y="613" width="0.0803%" height="15" fill="rgb(206,138,29)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.4607%" y="597" width="0.0803%" height="15" fill="rgb(253,27,43)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4607%" y="581" width="0.0803%" height="15" fill="rgb(231,73,0)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5409%" y="709" width="0.0803%" height="15" fill="rgb(218,9,23)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5409%" y="693" width="0.0803%" height="15" fill="rgb(251,55,29)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.5409%" y="677" width="0.0803%" height="15" fill="rgb(223,180,22)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.5409%" y="661" width="0.0803%" height="15" fill="rgb(223,29,21)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.5409%" y="645" width="0.0803%" height="15" fill="rgb(251,103,37)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.5409%" y="629" width="0.0803%" height="15" fill="rgb(214,11,21)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.5409%" y="613" width="0.0803%" height="15" fill="rgb(205,137,13)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.5409%" y="597" width="0.0803%" height="15" fill="rgb(225,58,47)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.5409%" y="581" width="0.0803%" height="15" fill="rgb(222,197,14)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.5409%" y="565" width="0.0803%" height="15" fill="rgb(215,210,33)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.5409%" y="549" width="0.0803%" height="15" fill="rgb(242,13,9)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5409%" y="533" width="0.0803%" height="15" fill="rgb(218,31,39)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.5409%" y="741" width="0.1605%" height="15" fill="rgb(211,214,23)" fg:x="1016" fg:w="2"/><text x="81.7909%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.5409%" y="725" width="0.1605%" height="15" fill="rgb(237,92,14)" fg:x="1016" fg:w="2"/><text x="81.7909%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6212%" y="709" width="0.0803%" height="15" fill="rgb(220,78,5)" fg:x="1017" fg:w="1"/><text x="81.8712%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="81.5409%" y="757" width="0.2408%" height="15" fill="rgb(237,23,21)" fg:x="1016" fg:w="3"/><text x="81.7909%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7014%" y="741" width="0.0803%" height="15" fill="rgb(251,207,51)" fg:x="1018" fg:w="1"/><text x="81.9514%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="81.5409%" y="805" width="0.3210%" height="15" fill="rgb(249,206,18)" fg:x="1016" fg:w="4"/><text x="81.7909%" y="815.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="81.5409%" y="789" width="0.3210%" height="15" fill="rgb(236,20,19)" fg:x="1016" fg:w="4"/><text x="81.7909%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="81.5409%" y="773" width="0.3210%" height="15" fill="rgb(214,227,29)" fg:x="1016" fg:w="4"/><text x="81.7909%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7817%" y="757" width="0.0803%" height="15" fill="rgb(209,183,4)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7817%" y="741" width="0.0803%" height="15" fill="rgb(233,111,23)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7817%" y="725" width="0.0803%" height="15" fill="rgb(238,121,27)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7817%" y="709" width="0.0803%" height="15" fill="rgb(236,120,41)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.7817%" y="693" width="0.0803%" height="15" fill="rgb(241,143,10)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7817%" y="677" width="0.0803%" height="15" fill="rgb(224,86,31)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7817%" y="661" width="0.0803%" height="15" fill="rgb(236,212,27)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7817%" y="645" width="0.0803%" height="15" fill="rgb(219,43,51)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7817%" y="629" width="0.0803%" height="15" fill="rgb(232,216,8)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7817%" y="613" width="0.0803%" height="15" fill="rgb(206,222,39)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="81.7817%" y="597" width="0.0803%" height="15" fill="rgb(209,149,48)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="81.7817%" y="581" width="0.0803%" height="15" fill="rgb(229,155,21)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="81.5409%" y="837" width="0.4013%" height="15" fill="rgb(246,152,26)" fg:x="1016" fg:w="5"/><text x="81.7909%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="81.5409%" y="821" width="0.4013%" height="15" fill="rgb(206,70,42)" fg:x="1016" fg:w="5"/><text x="81.7909%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.8620%" y="805" width="0.0803%" height="15" fill="rgb(236,9,11)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.8620%" y="789" width="0.0803%" height="15" fill="rgb(238,145,47)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.8620%" y="773" width="0.0803%" height="15" fill="rgb(252,189,7)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.8620%" y="757" width="0.0803%" height="15" fill="rgb(254,168,51)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.8620%" y="741" width="0.0803%" height="15" fill="rgb(227,105,46)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8620%" y="725" width="0.0803%" height="15" fill="rgb(227,74,30)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.8620%" y="709" width="0.0803%" height="15" fill="rgb(206,212,44)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8620%" y="693" width="0.0803%" height="15" fill="rgb(252,69,11)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.8620%" y="677" width="0.0803%" height="15" fill="rgb(239,116,0)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.8620%" y="661" width="0.0803%" height="15" fill="rgb(246,189,23)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8620%" y="645" width="0.0803%" height="15" fill="rgb(229,50,41)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9422%" y="741" width="0.0803%" height="15" fill="rgb(214,66,37)" fg:x="1021" fg:w="1"/><text x="82.1922%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9422%" y="725" width="0.0803%" height="15" fill="rgb(226,28,6)" fg:x="1021" fg:w="1"/><text x="82.1922%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.9422%" y="757" width="0.1605%" height="15" fill="rgb(239,154,0)" fg:x="1021" fg:w="2"/><text x="82.1922%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0225%" y="741" width="0.0803%" height="15" fill="rgb(233,97,11)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0225%" y="725" width="0.0803%" height="15" fill="rgb(236,215,16)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.0225%" y="709" width="0.0803%" height="15" fill="rgb(246,188,29)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.0225%" y="693" width="0.0803%" height="15" fill="rgb(207,7,29)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.0225%" y="677" width="0.0803%" height="15" fill="rgb(238,112,43)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0225%" y="661" width="0.0803%" height="15" fill="rgb(230,110,32)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0225%" y="645" width="0.0803%" height="15" fill="rgb(218,197,32)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.0225%" y="629" width="0.0803%" height="15" fill="rgb(252,61,9)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.0225%" y="613" width="0.0803%" height="15" fill="rgb(244,140,14)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.0225%" y="597" width="0.0803%" height="15" fill="rgb(216,14,47)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.0225%" y="581" width="0.0803%" height="15" fill="rgb(224,130,52)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.0225%" y="565" width="0.0803%" height="15" fill="rgb(210,229,51)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="81.9422%" y="821" width="0.2408%" height="15" fill="rgb(242,13,9)" fg:x="1021" fg:w="3"/><text x="82.1922%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.9422%" y="805" width="0.2408%" height="15" fill="rgb(252,71,50)" fg:x="1021" fg:w="3"/><text x="82.1922%" y="815.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.9422%" y="789" width="0.2408%" height="15" fill="rgb(218,225,6)" fg:x="1021" fg:w="3"/><text x="82.1922%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.9422%" y="773" width="0.2408%" height="15" fill="rgb(219,27,35)" fg:x="1021" fg:w="3"/><text x="82.1922%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1027%" y="757" width="0.0803%" height="15" fill="rgb(226,30,1)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1027%" y="741" width="0.0803%" height="15" fill="rgb(227,164,34)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1027%" y="725" width="0.0803%" height="15" fill="rgb(206,103,4)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1027%" y="709" width="0.0803%" height="15" fill="rgb(214,166,19)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.1027%" y="693" width="0.0803%" height="15" fill="rgb(240,56,20)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1027%" y="677" width="0.0803%" height="15" fill="rgb(224,25,3)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1027%" y="661" width="0.0803%" height="15" fill="rgb(216,206,54)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1027%" y="645" width="0.0803%" height="15" fill="rgb(225,142,10)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1027%" y="629" width="0.0803%" height="15" fill="rgb(246,9,18)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1027%" y="613" width="0.0803%" height="15" fill="rgb(247,140,18)" fg:x="1023" fg:w="1"/><text x="82.3527%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.2632%" y="741" width="0.0803%" height="15" fill="rgb(239,184,22)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.2632%" y="725" width="0.0803%" height="15" fill="rgb(227,94,44)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.2632%" y="709" width="0.0803%" height="15" fill="rgb(219,43,3)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.2632%" y="693" width="0.0803%" height="15" fill="rgb(210,76,31)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.2632%" y="677" width="0.0803%" height="15" fill="rgb(225,85,12)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.2632%" y="661" width="0.0803%" height="15" fill="rgb(214,191,28)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="671.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="82.3435%" y="661" width="0.0803%" height="15" fill="rgb(214,43,14)" fg:x="1026" fg:w="1"/><text x="82.5935%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="82.2632%" y="757" width="0.2408%" height="15" fill="rgb(253,117,5)" fg:x="1025" fg:w="3"/><text x="82.5132%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.3435%" y="741" width="0.1605%" height="15" fill="rgb(208,124,26)" fg:x="1026" fg:w="2"/><text x="82.5935%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="82.3435%" y="725" width="0.1605%" height="15" fill="rgb(228,208,39)" fg:x="1026" fg:w="2"/><text x="82.5935%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="82.3435%" y="709" width="0.1605%" height="15" fill="rgb(206,180,39)" fg:x="1026" fg:w="2"/><text x="82.5935%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.3435%" y="693" width="0.1605%" height="15" fill="rgb(205,111,37)" fg:x="1026" fg:w="2"/><text x="82.5935%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.3435%" y="677" width="0.1605%" height="15" fill="rgb(208,121,24)" fg:x="1026" fg:w="2"/><text x="82.5935%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4238%" y="661" width="0.0803%" height="15" fill="rgb(218,215,32)" fg:x="1027" fg:w="1"/><text x="82.6738%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4238%" y="645" width="0.0803%" height="15" fill="rgb(244,168,53)" fg:x="1027" fg:w="1"/><text x="82.6738%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4238%" y="629" width="0.0803%" height="15" fill="rgb(214,9,36)" fg:x="1027" fg:w="1"/><text x="82.6738%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4238%" y="613" width="0.0803%" height="15" fill="rgb(231,4,34)" fg:x="1027" fg:w="1"/><text x="82.6738%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.4238%" y="597" width="0.0803%" height="15" fill="rgb(210,83,51)" fg:x="1027" fg:w="1"/><text x="82.6738%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4238%" y="581" width="0.0803%" height="15" fill="rgb(224,112,1)" fg:x="1027" fg:w="1"/><text x="82.6738%" y="591.50"></text></g><g><title>plugins_core::build::Build::leads_to (5 samples, 0.40%)</title><rect x="82.1830%" y="773" width="0.4013%" height="15" fill="rgb(216,33,41)" fg:x="1024" fg:w="5"/><text x="82.4330%" y="783.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="82.5040%" y="757" width="0.0803%" height="15" fill="rgb(215,179,42)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.5040%" y="741" width="0.0803%" height="15" fill="rgb(205,81,48)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.5040%" y="725" width="0.0803%" height="15" fill="rgb(246,17,30)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.5040%" y="709" width="0.0803%" height="15" fill="rgb(226,19,16)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.5040%" y="693" width="0.0803%" height="15" fill="rgb(207,3,14)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.5040%" y="677" width="0.0803%" height="15" fill="rgb(226,77,12)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5040%" y="661" width="0.0803%" height="15" fill="rgb(226,76,25)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5040%" y="645" width="0.0803%" height="15" fill="rgb(217,216,25)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5040%" y="629" width="0.0803%" height="15" fill="rgb(247,127,42)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5040%" y="613" width="0.0803%" height="15" fill="rgb(226,10,34)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5040%" y="597" width="0.0803%" height="15" fill="rgb(249,78,0)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5040%" y="581" width="0.0803%" height="15" fill="rgb(226,218,38)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="82.1830%" y="821" width="0.4815%" height="15" fill="rgb(240,92,1)" fg:x="1024" fg:w="6"/><text x="82.4330%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="82.1830%" y="805" width="0.4815%" height="15" fill="rgb(237,224,33)" fg:x="1024" fg:w="6"/><text x="82.4330%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="82.1830%" y="789" width="0.4815%" height="15" fill="rgb(211,46,1)" fg:x="1024" fg:w="6"/><text x="82.4330%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="82.5843%" y="773" width="0.0803%" height="15" fill="rgb(239,190,4)" fg:x="1029" fg:w="1"/><text x="82.8343%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="82.5843%" y="757" width="0.0803%" height="15" fill="rgb(221,50,22)" fg:x="1029" fg:w="1"/><text x="82.8343%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.5843%" y="741" width="0.0803%" height="15" fill="rgb(207,176,8)" fg:x="1029" fg:w="1"/><text x="82.8343%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.5843%" y="725" width="0.0803%" height="15" fill="rgb(244,114,50)" fg:x="1029" fg:w="1"/><text x="82.8343%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5843%" y="709" width="0.0803%" height="15" fill="rgb(226,206,19)" fg:x="1029" fg:w="1"/><text x="82.8343%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5843%" y="693" width="0.0803%" height="15" fill="rgb(208,199,16)" fg:x="1029" fg:w="1"/><text x="82.8343%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.6645%" y="757" width="0.0803%" height="15" fill="rgb(208,38,14)" fg:x="1030" fg:w="1"/><text x="82.9145%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="82.6645%" y="741" width="0.0803%" height="15" fill="rgb(221,211,49)" fg:x="1030" fg:w="1"/><text x="82.9145%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="82.6645%" y="725" width="0.0803%" height="15" fill="rgb(227,214,34)" fg:x="1030" fg:w="1"/><text x="82.9145%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.7448%" y="709" width="0.0803%" height="15" fill="rgb(234,5,54)" fg:x="1031" fg:w="1"/><text x="82.9948%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.7448%" y="693" width="0.0803%" height="15" fill="rgb(236,215,22)" fg:x="1031" fg:w="1"/><text x="82.9948%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.7448%" y="677" width="0.0803%" height="15" fill="rgb(244,0,11)" fg:x="1031" fg:w="1"/><text x="82.9948%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.7448%" y="661" width="0.0803%" height="15" fill="rgb(212,140,16)" fg:x="1031" fg:w="1"/><text x="82.9948%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.7448%" y="645" width="0.0803%" height="15" fill="rgb(238,101,37)" fg:x="1031" fg:w="1"/><text x="82.9948%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.8250%" y="693" width="0.0803%" height="15" fill="rgb(247,46,3)" fg:x="1032" fg:w="1"/><text x="83.0750%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.8250%" y="677" width="0.0803%" height="15" fill="rgb(208,106,19)" fg:x="1032" fg:w="1"/><text x="83.0750%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.8250%" y="661" width="0.0803%" height="15" fill="rgb(240,227,15)" fg:x="1032" fg:w="1"/><text x="83.0750%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.9053%" y="677" width="0.0803%" height="15" fill="rgb(226,173,6)" fg:x="1033" fg:w="1"/><text x="83.1553%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9053%" y="661" width="0.0803%" height="15" fill="rgb(213,191,1)" fg:x="1033" fg:w="1"/><text x="83.1553%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.9053%" y="645" width="0.0803%" height="15" fill="rgb(246,51,36)" fg:x="1033" fg:w="1"/><text x="83.1553%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.9856%" y="677" width="0.0803%" height="15" fill="rgb(238,40,32)" fg:x="1034" fg:w="1"/><text x="83.2356%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.9856%" y="661" width="0.0803%" height="15" fill="rgb(208,126,27)" fg:x="1034" fg:w="1"/><text x="83.2356%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.9856%" y="645" width="0.0803%" height="15" fill="rgb(227,117,38)" fg:x="1034" fg:w="1"/><text x="83.2356%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9856%" y="629" width="0.0803%" height="15" fill="rgb(232,16,1)" fg:x="1034" fg:w="1"/><text x="83.2356%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.0658%" y="645" width="0.0803%" height="15" fill="rgb(212,111,31)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.0658%" y="629" width="0.0803%" height="15" fill="rgb(253,227,2)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.0658%" y="613" width="0.0803%" height="15" fill="rgb(216,122,17)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.0658%" y="597" width="0.0803%" height="15" fill="rgb(227,37,2)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.0658%" y="677" width="0.1605%" height="15" fill="rgb(244,113,40)" fg:x="1035" fg:w="2"/><text x="83.3158%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.0658%" y="661" width="0.1605%" height="15" fill="rgb(217,193,34)" fg:x="1035" fg:w="2"/><text x="83.3158%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1461%" y="645" width="0.0803%" height="15" fill="rgb(212,223,15)" fg:x="1036" fg:w="1"/><text x="83.3961%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.1461%" y="629" width="0.0803%" height="15" fill="rgb(238,143,18)" fg:x="1036" fg:w="1"/><text x="83.3961%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.1461%" y="613" width="0.0803%" height="15" fill="rgb(231,18,49)" fg:x="1036" fg:w="1"/><text x="83.3961%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.1461%" y="597" width="0.0803%" height="15" fill="rgb(249,122,4)" fg:x="1036" fg:w="1"/><text x="83.3961%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="82.9053%" y="693" width="0.4815%" height="15" fill="rgb(245,138,54)" fg:x="1033" fg:w="6"/><text x="83.1553%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.2263%" y="677" width="0.1605%" height="15" fill="rgb(218,130,18)" fg:x="1037" fg:w="2"/><text x="83.4763%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.2263%" y="661" width="0.1605%" height="15" fill="rgb(235,94,13)" fg:x="1037" fg:w="2"/><text x="83.4763%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.3066%" y="645" width="0.0803%" height="15" fill="rgb(247,143,5)" fg:x="1038" fg:w="1"/><text x="83.5566%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="82.7448%" y="725" width="0.8026%" height="15" fill="rgb(212,59,54)" fg:x="1031" fg:w="10"/><text x="82.9948%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="82.8250%" y="709" width="0.7223%" height="15" fill="rgb(206,121,24)" fg:x="1032" fg:w="9"/><text x="83.0750%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.3868%" y="693" width="0.1605%" height="15" fill="rgb(235,38,8)" fg:x="1039" fg:w="2"/><text x="83.6368%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.4671%" y="677" width="0.0803%" height="15" fill="rgb(227,102,26)" fg:x="1040" fg:w="1"/><text x="83.7171%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.4671%" y="661" width="0.0803%" height="15" fill="rgb(240,183,46)" fg:x="1040" fg:w="1"/><text x="83.7171%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.5474%" y="677" width="0.0803%" height="15" fill="rgb(208,177,23)" fg:x="1041" fg:w="1"/><text x="83.7974%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="83.5474%" y="725" width="0.1605%" height="15" fill="rgb(216,152,5)" fg:x="1041" fg:w="2"/><text x="83.7974%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="83.5474%" y="709" width="0.1605%" height="15" fill="rgb(238,199,2)" fg:x="1041" fg:w="2"/><text x="83.7974%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="83.5474%" y="693" width="0.1605%" height="15" fill="rgb(235,142,28)" fg:x="1041" fg:w="2"/><text x="83.7974%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6276%" y="677" width="0.0803%" height="15" fill="rgb(225,97,25)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6276%" y="661" width="0.0803%" height="15" fill="rgb(208,75,46)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6276%" y="645" width="0.0803%" height="15" fill="rgb(240,136,15)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6276%" y="629" width="0.0803%" height="15" fill="rgb(235,36,27)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6276%" y="613" width="0.0803%" height="15" fill="rgb(231,132,23)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6276%" y="597" width="0.0803%" height="15" fill="rgb(205,208,20)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="83.7079%" y="709" width="0.0803%" height="15" fill="rgb(215,26,40)" fg:x="1043" fg:w="1"/><text x="83.9579%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7881%" y="677" width="0.0803%" height="15" fill="rgb(238,183,34)" fg:x="1044" fg:w="1"/><text x="84.0381%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8684%" y="677" width="0.0803%" height="15" fill="rgb(207,96,10)" fg:x="1045" fg:w="1"/><text x="84.1184%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.9486%" y="629" width="0.0803%" height="15" fill="rgb(218,88,6)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9486%" y="613" width="0.0803%" height="15" fill="rgb(217,22,49)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.9486%" y="597" width="0.0803%" height="15" fill="rgb(240,195,14)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9486%" y="581" width="0.0803%" height="15" fill="rgb(229,48,27)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9486%" y="565" width="0.0803%" height="15" fill="rgb(220,194,45)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.1894%" y="501" width="0.0803%" height="15" fill="rgb(252,60,20)" fg:x="1049" fg:w="1"/><text x="84.4394%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="84.1091%" y="549" width="0.2408%" height="15" fill="rgb(244,169,33)" fg:x="1048" fg:w="3"/><text x="84.3591%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="84.1091%" y="533" width="0.2408%" height="15" fill="rgb(234,141,34)" fg:x="1048" fg:w="3"/><text x="84.3591%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.1894%" y="517" width="0.1605%" height="15" fill="rgb(241,141,9)" fg:x="1049" fg:w="2"/><text x="84.4394%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2697%" y="501" width="0.0803%" height="15" fill="rgb(246,27,36)" fg:x="1050" fg:w="1"/><text x="84.5197%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="84.1091%" y="581" width="0.3210%" height="15" fill="rgb(216,188,42)" fg:x="1048" fg:w="4"/><text x="84.3591%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="84.1091%" y="565" width="0.3210%" height="15" fill="rgb(234,205,22)" fg:x="1048" fg:w="4"/><text x="84.3591%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3499%" y="549" width="0.0803%" height="15" fill="rgb(210,202,32)" fg:x="1051" fg:w="1"/><text x="84.5999%" y="559.50"></text></g><g><title>engine::session::Session::flush (23 samples, 1.85%)</title><rect x="82.6645%" y="821" width="1.8459%" height="15" fill="rgb(217,0,48)" fg:x="1030" fg:w="23"/><text x="82.9145%" y="831.50">e..</text></g><g><title>engine::session::Session::save_changes (23 samples, 1.85%)</title><rect x="82.6645%" y="805" width="1.8459%" height="15" fill="rgb(207,115,37)" fg:x="1030" fg:w="23"/><text x="82.9145%" y="815.50">e..</text></g><g><title>engine::session::state::State::close (23 samples, 1.85%)</title><rect x="82.6645%" y="789" width="1.8459%" height="15" fill="rgb(237,221,44)" fg:x="1030" fg:w="23"/><text x="82.9145%" y="799.50">e..</text></g><g><title>engine::session::state::State::flush_entities (23 samples, 1.85%)</title><rect x="82.6645%" y="773" width="1.8459%" height="15" fill="rgb(249,78,2)" fg:x="1030" fg:w="23"/><text x="82.9145%" y="783.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (22 samples, 1.77%)</title><rect x="82.7448%" y="757" width="1.7657%" height="15" fill="rgb(211,169,23)" fg:x="1031" fg:w="22"/><text x="82.9948%" y="767.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (22 samples, 1.77%)</title><rect x="82.7448%" y="741" width="1.7657%" height="15" fill="rgb(207,116,29)" fg:x="1031" fg:w="22"/><text x="82.9948%" y="751.50"></text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.80%)</title><rect x="83.7079%" y="725" width="0.8026%" height="15" fill="rgb(240,84,33)" fg:x="1043" fg:w="10"/><text x="83.9579%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="83.7881%" y="709" width="0.7223%" height="15" fill="rgb(229,224,31)" fg:x="1044" fg:w="9"/><text x="84.0381%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="83.7881%" y="693" width="0.7223%" height="15" fill="rgb(227,90,31)" fg:x="1044" fg:w="9"/><text x="84.0381%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="83.9486%" y="677" width="0.5618%" height="15" fill="rgb(249,22,41)" fg:x="1046" fg:w="7"/><text x="84.1986%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="83.9486%" y="661" width="0.5618%" height="15" fill="rgb(239,65,11)" fg:x="1046" fg:w="7"/><text x="84.1986%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="83.9486%" y="645" width="0.5618%" height="15" fill="rgb(205,5,23)" fg:x="1046" fg:w="7"/><text x="84.1986%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="84.0289%" y="629" width="0.4815%" height="15" fill="rgb(254,78,52)" fg:x="1047" fg:w="6"/><text x="84.2789%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="84.0289%" y="613" width="0.4815%" height="15" fill="rgb(214,156,33)" fg:x="1047" fg:w="6"/><text x="84.2789%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="84.0289%" y="597" width="0.4815%" height="15" fill="rgb(208,20,30)" fg:x="1047" fg:w="6"/><text x="84.2789%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4302%" y="581" width="0.0803%" height="15" fill="rgb(223,133,18)" fg:x="1052" fg:w="1"/><text x="84.6802%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.5104%" y="789" width="0.0803%" height="15" fill="rgb(222,91,41)" fg:x="1053" fg:w="1"/><text x="84.7604%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.5104%" y="773" width="0.0803%" height="15" fill="rgb(247,137,48)" fg:x="1053" fg:w="1"/><text x="84.7604%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.5104%" y="757" width="0.0803%" height="15" fill="rgb(239,156,11)" fg:x="1053" fg:w="1"/><text x="84.7604%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5104%" y="741" width="0.0803%" height="15" fill="rgb(244,56,26)" fg:x="1053" fg:w="1"/><text x="84.7604%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.5104%" y="725" width="0.0803%" height="15" fill="rgb(205,131,49)" fg:x="1053" fg:w="1"/><text x="84.7604%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="84.5104%" y="805" width="0.1605%" height="15" fill="rgb(224,0,2)" fg:x="1053" fg:w="2"/><text x="84.7604%" y="815.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="84.5907%" y="789" width="0.0803%" height="15" fill="rgb(247,59,36)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.5907%" y="773" width="0.0803%" height="15" fill="rgb(215,4,47)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5907%" y="757" width="0.0803%" height="15" fill="rgb(242,72,42)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5907%" y="741" width="0.0803%" height="15" fill="rgb(232,145,44)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5907%" y="725" width="0.0803%" height="15" fill="rgb(205,108,43)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5907%" y="709" width="0.0803%" height="15" fill="rgb(215,190,17)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.5907%" y="693" width="0.0803%" height="15" fill="rgb(223,90,34)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="84.6709%" y="789" width="0.1605%" height="15" fill="rgb(216,25,0)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.6709%" y="773" width="0.1605%" height="15" fill="rgb(223,51,28)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.6709%" y="757" width="0.1605%" height="15" fill="rgb(227,131,7)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.6709%" y="741" width="0.1605%" height="15" fill="rgb(216,72,36)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.6709%" y="725" width="0.1605%" height="15" fill="rgb(243,158,40)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.6709%" y="709" width="0.1605%" height="15" fill="rgb(218,60,54)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.6709%" y="693" width="0.1605%" height="15" fill="rgb(230,15,46)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.6709%" y="677" width="0.1605%" height="15" fill="rgb(250,22,26)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.6709%" y="661" width="0.1605%" height="15" fill="rgb(239,194,40)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="84.6709%" y="645" width="0.1605%" height="15" fill="rgb(219,62,9)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.6709%" y="629" width="0.1605%" height="15" fill="rgb(228,45,21)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.6709%" y="613" width="0.1605%" height="15" fill="rgb(242,56,44)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.6709%" y="597" width="0.1605%" height="15" fill="rgb(239,170,14)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8315%" y="741" width="0.0803%" height="15" fill="rgb(236,150,13)" fg:x="1057" fg:w="1"/><text x="85.0815%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="84.8315%" y="789" width="0.1605%" height="15" fill="rgb(228,15,30)" fg:x="1057" fg:w="2"/><text x="85.0815%" y="799.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="84.8315%" y="773" width="0.1605%" height="15" fill="rgb(217,43,28)" fg:x="1057" fg:w="2"/><text x="85.0815%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.8315%" y="757" width="0.1605%" height="15" fill="rgb(246,223,1)" fg:x="1057" fg:w="2"/><text x="85.0815%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.9117%" y="741" width="0.0803%" height="15" fill="rgb(247,103,7)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9117%" y="725" width="0.0803%" height="15" fill="rgb(205,105,39)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9117%" y="709" width="0.0803%" height="15" fill="rgb(216,134,18)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.9117%" y="693" width="0.0803%" height="15" fill="rgb(226,139,50)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.9117%" y="677" width="0.0803%" height="15" fill="rgb(251,152,38)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9920%" y="693" width="0.0803%" height="15" fill="rgb(222,63,15)" fg:x="1059" fg:w="1"/><text x="85.2420%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9920%" y="677" width="0.0803%" height="15" fill="rgb(212,198,28)" fg:x="1059" fg:w="1"/><text x="85.2420%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9920%" y="661" width="0.0803%" height="15" fill="rgb(216,93,38)" fg:x="1059" fg:w="1"/><text x="85.2420%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9920%" y="645" width="0.0803%" height="15" fill="rgb(247,202,44)" fg:x="1059" fg:w="1"/><text x="85.2420%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9920%" y="629" width="0.0803%" height="15" fill="rgb(237,204,46)" fg:x="1059" fg:w="1"/><text x="85.2420%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9920%" y="613" width="0.0803%" height="15" fill="rgb(224,98,48)" fg:x="1059" fg:w="1"/><text x="85.2420%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.9920%" y="741" width="0.1605%" height="15" fill="rgb(247,105,21)" fg:x="1059" fg:w="2"/><text x="85.2420%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.9920%" y="725" width="0.1605%" height="15" fill="rgb(212,137,52)" fg:x="1059" fg:w="2"/><text x="85.2420%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.9920%" y="709" width="0.1605%" height="15" fill="rgb(223,76,33)" fg:x="1059" fg:w="2"/><text x="85.2420%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0722%" y="693" width="0.0803%" height="15" fill="rgb(209,156,27)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0722%" y="677" width="0.0803%" height="15" fill="rgb(249,81,54)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0722%" y="661" width="0.0803%" height="15" fill="rgb(241,46,29)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0722%" y="645" width="0.0803%" height="15" fill="rgb(213,193,39)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.0722%" y="629" width="0.0803%" height="15" fill="rgb(214,85,16)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0722%" y="613" width="0.0803%" height="15" fill="rgb(216,184,17)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0722%" y="597" width="0.0803%" height="15" fill="rgb(254,219,29)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0722%" y="581" width="0.0803%" height="15" fill="rgb(209,148,34)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0722%" y="565" width="0.0803%" height="15" fill="rgb(253,215,11)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.72%)</title><rect x="84.5104%" y="821" width="0.7223%" height="15" fill="rgb(232,126,20)" fg:x="1053" fg:w="9"/><text x="84.7604%" y="831.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="84.6709%" y="805" width="0.5618%" height="15" fill="rgb(248,118,51)" fg:x="1055" fg:w="7"/><text x="84.9209%" y="815.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="84.9920%" y="789" width="0.2408%" height="15" fill="rgb(226,121,21)" fg:x="1059" fg:w="3"/><text x="85.2420%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="84.9920%" y="773" width="0.2408%" height="15" fill="rgb(216,128,16)" fg:x="1059" fg:w="3"/><text x="85.2420%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="84.9920%" y="757" width="0.2408%" height="15" fill="rgb(205,17,9)" fg:x="1059" fg:w="3"/><text x="85.2420%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.1525%" y="741" width="0.0803%" height="15" fill="rgb(206,197,21)" fg:x="1061" fg:w="1"/><text x="85.4025%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.1525%" y="725" width="0.0803%" height="15" fill="rgb(212,202,9)" fg:x="1061" fg:w="1"/><text x="85.4025%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.1525%" y="709" width="0.0803%" height="15" fill="rgb(241,131,50)" fg:x="1061" fg:w="1"/><text x="85.4025%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1525%" y="693" width="0.0803%" height="15" fill="rgb(228,115,51)" fg:x="1061" fg:w="1"/><text x="85.4025%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1525%" y="677" width="0.0803%" height="15" fill="rgb(237,209,8)" fg:x="1061" fg:w="1"/><text x="85.4025%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1525%" y="661" width="0.0803%" height="15" fill="rgb(241,121,28)" fg:x="1061" fg:w="1"/><text x="85.4025%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="85.2327%" y="821" width="0.0803%" height="15" fill="rgb(238,194,51)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="85.2327%" y="805" width="0.0803%" height="15" fill="rgb(208,41,39)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.2327%" y="789" width="0.0803%" height="15" fill="rgb(223,95,44)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.2327%" y="773" width="0.0803%" height="15" fill="rgb(253,98,40)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.2327%" y="757" width="0.0803%" height="15" fill="rgb(210,5,12)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2327%" y="741" width="0.0803%" height="15" fill="rgb(233,201,23)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2327%" y="725" width="0.0803%" height="15" fill="rgb(251,68,15)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2327%" y="709" width="0.0803%" height="15" fill="rgb(243,10,46)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2327%" y="693" width="0.0803%" height="15" fill="rgb(253,130,44)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2327%" y="677" width="0.0803%" height="15" fill="rgb(244,5,26)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="85.3130%" y="821" width="0.0803%" height="15" fill="rgb(220,126,20)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="85.3130%" y="805" width="0.0803%" height="15" fill="rgb(212,188,29)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="815.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.3130%" y="789" width="0.0803%" height="15" fill="rgb(227,194,48)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.3130%" y="773" width="0.0803%" height="15" fill="rgb(245,64,28)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3130%" y="757" width="0.0803%" height="15" fill="rgb(205,44,7)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.3130%" y="741" width="0.0803%" height="15" fill="rgb(213,193,11)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3130%" y="725" width="0.0803%" height="15" fill="rgb(238,157,6)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.3933%" y="741" width="0.0803%" height="15" fill="rgb(222,73,7)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3933%" y="725" width="0.0803%" height="15" fill="rgb(224,78,15)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3933%" y="709" width="0.0803%" height="15" fill="rgb(218,149,46)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3933%" y="693" width="0.0803%" height="15" fill="rgb(218,175,44)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3933%" y="677" width="0.0803%" height="15" fill="rgb(215,183,45)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3933%" y="661" width="0.0803%" height="15" fill="rgb(226,116,37)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.3933%" y="645" width="0.0803%" height="15" fill="rgb(252,224,12)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3933%" y="629" width="0.0803%" height="15" fill="rgb(232,212,21)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.3933%" y="613" width="0.0803%" height="15" fill="rgb(226,191,16)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3933%" y="597" width="0.0803%" height="15" fill="rgb(231,156,11)" fg:x="1064" fg:w="1"/><text x="85.6433%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.3933%" y="805" width="0.1605%" height="15" fill="rgb(225,134,49)" fg:x="1064" fg:w="2"/><text x="85.6433%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="85.3933%" y="789" width="0.1605%" height="15" fill="rgb(254,55,32)" fg:x="1064" fg:w="2"/><text x="85.6433%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="85.3933%" y="773" width="0.1605%" height="15" fill="rgb(242,195,29)" fg:x="1064" fg:w="2"/><text x="85.6433%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="85.3933%" y="757" width="0.1605%" height="15" fill="rgb(210,155,20)" fg:x="1064" fg:w="2"/><text x="85.6433%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.4735%" y="741" width="0.0803%" height="15" fill="rgb(243,170,23)" fg:x="1065" fg:w="1"/><text x="85.7235%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.4735%" y="725" width="0.0803%" height="15" fill="rgb(242,197,51)" fg:x="1065" fg:w="1"/><text x="85.7235%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5538%" y="709" width="0.0803%" height="15" fill="rgb(248,48,13)" fg:x="1066" fg:w="1"/><text x="85.8038%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.5538%" y="693" width="0.0803%" height="15" fill="rgb(221,185,15)" fg:x="1066" fg:w="1"/><text x="85.8038%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5538%" y="677" width="0.0803%" height="15" fill="rgb(244,49,7)" fg:x="1066" fg:w="1"/><text x="85.8038%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5538%" y="661" width="0.0803%" height="15" fill="rgb(213,182,52)" fg:x="1066" fg:w="1"/><text x="85.8038%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5538%" y="645" width="0.0803%" height="15" fill="rgb(209,15,45)" fg:x="1066" fg:w="1"/><text x="85.8038%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5538%" y="629" width="0.0803%" height="15" fill="rgb(233,23,44)" fg:x="1066" fg:w="1"/><text x="85.8038%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="85.5538%" y="789" width="0.1605%" height="15" fill="rgb(220,182,30)" fg:x="1066" fg:w="2"/><text x="85.8038%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="85.5538%" y="773" width="0.1605%" height="15" fill="rgb(219,116,33)" fg:x="1066" fg:w="2"/><text x="85.8038%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.5538%" y="757" width="0.1605%" height="15" fill="rgb(231,15,21)" fg:x="1066" fg:w="2"/><text x="85.8038%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.5538%" y="741" width="0.1605%" height="15" fill="rgb(238,119,25)" fg:x="1066" fg:w="2"/><text x="85.8038%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.5538%" y="725" width="0.1605%" height="15" fill="rgb(232,30,39)" fg:x="1066" fg:w="2"/><text x="85.8038%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6340%" y="709" width="0.0803%" height="15" fill="rgb(241,26,30)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6340%" y="693" width="0.0803%" height="15" fill="rgb(234,154,4)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6340%" y="677" width="0.0803%" height="15" fill="rgb(229,199,39)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6340%" y="661" width="0.0803%" height="15" fill="rgb(236,213,10)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.6340%" y="645" width="0.0803%" height="15" fill="rgb(247,28,19)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6340%" y="629" width="0.0803%" height="15" fill="rgb(239,199,24)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6340%" y="613" width="0.0803%" height="15" fill="rgb(246,122,13)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6340%" y="597" width="0.0803%" height="15" fill="rgb(210,203,29)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6340%" y="581" width="0.0803%" height="15" fill="rgb(218,4,50)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6340%" y="565" width="0.0803%" height="15" fill="rgb(236,142,48)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="85.6340%" y="549" width="0.0803%" height="15" fill="rgb(245,173,2)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="85.6340%" y="533" width="0.0803%" height="15" fill="rgb(244,196,18)" fg:x="1067" fg:w="1"/><text x="85.8840%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.7143%" y="789" width="0.0803%" height="15" fill="rgb(221,27,33)" fg:x="1068" fg:w="1"/><text x="85.9643%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.7945%" y="789" width="0.0803%" height="15" fill="rgb(210,206,16)" fg:x="1069" fg:w="1"/><text x="86.0445%" y="799.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7945%" y="773" width="0.0803%" height="15" fill="rgb(238,161,34)" fg:x="1069" fg:w="1"/><text x="86.0445%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.7945%" y="757" width="0.0803%" height="15" fill="rgb(243,118,39)" fg:x="1069" fg:w="1"/><text x="86.0445%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7945%" y="741" width="0.0803%" height="15" fill="rgb(234,126,9)" fg:x="1069" fg:w="1"/><text x="86.0445%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.8748%" y="741" width="0.0803%" height="15" fill="rgb(234,167,42)" fg:x="1070" fg:w="1"/><text x="86.1248%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.8748%" y="725" width="0.0803%" height="15" fill="rgb(238,54,48)" fg:x="1070" fg:w="1"/><text x="86.1248%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.8748%" y="709" width="0.0803%" height="15" fill="rgb(226,105,2)" fg:x="1070" fg:w="1"/><text x="86.1248%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8748%" y="693" width="0.0803%" height="15" fill="rgb(223,95,23)" fg:x="1070" fg:w="1"/><text x="86.1248%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.8748%" y="677" width="0.0803%" height="15" fill="rgb(249,212,19)" fg:x="1070" fg:w="1"/><text x="86.1248%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8748%" y="661" width="0.0803%" height="15" fill="rgb(234,158,54)" fg:x="1070" fg:w="1"/><text x="86.1248%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8748%" y="645" width="0.0803%" height="15" fill="rgb(247,114,32)" fg:x="1070" fg:w="1"/><text x="86.1248%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8748%" y="629" width="0.0803%" height="15" fill="rgb(250,68,44)" fg:x="1070" fg:w="1"/><text x="86.1248%" y="639.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (51 samples, 4.09%)</title><rect x="81.9422%" y="837" width="4.0931%" height="15" fill="rgb(242,3,15)" fg:x="1021" fg:w="51"/><text x="82.1922%" y="847.50">plug..</text></g><g><title>plugins_core::build::Build::occupying (8 samples, 0.64%)</title><rect x="85.3933%" y="821" width="0.6421%" height="15" fill="rgb(223,110,32)" fg:x="1064" fg:w="8"/><text x="85.6433%" y="831.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.48%)</title><rect x="85.5538%" y="805" width="0.4815%" height="15" fill="rgb(216,26,54)" fg:x="1066" fg:w="6"/><text x="85.8038%" y="815.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="85.8748%" y="789" width="0.1605%" height="15" fill="rgb(209,145,42)" fg:x="1070" fg:w="2"/><text x="86.1248%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="85.8748%" y="773" width="0.1605%" height="15" fill="rgb(240,111,53)" fg:x="1070" fg:w="2"/><text x="86.1248%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="85.8748%" y="757" width="0.1605%" height="15" fill="rgb(209,101,4)" fg:x="1070" fg:w="2"/><text x="86.1248%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.9551%" y="741" width="0.0803%" height="15" fill="rgb(231,74,29)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.9551%" y="725" width="0.0803%" height="15" fill="rgb(223,12,12)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.9551%" y="709" width="0.0803%" height="15" fill="rgb(207,162,2)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9551%" y="693" width="0.0803%" height="15" fill="rgb(230,152,0)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.9551%" y="677" width="0.0803%" height="15" fill="rgb(254,156,19)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9551%" y="661" width="0.0803%" height="15" fill="rgb(250,28,0)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9551%" y="645" width="0.0803%" height="15" fill="rgb(253,27,5)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9551%" y="629" width="0.0803%" height="15" fill="rgb(244,154,7)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.9551%" y="613" width="0.0803%" height="15" fill="rgb(242,108,21)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="86.0353%" y="837" width="0.0803%" height="15" fill="rgb(254,200,38)" fg:x="1072" fg:w="1"/><text x="86.2853%" y="847.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="86.0353%" y="821" width="0.0803%" height="15" fill="rgb(250,145,41)" fg:x="1072" fg:w="1"/><text x="86.2853%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.0353%" y="805" width="0.0803%" height="15" fill="rgb(235,136,31)" fg:x="1072" fg:w="1"/><text x="86.2853%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="86.1156%" y="805" width="0.0803%" height="15" fill="rgb(215,13,18)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="815.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.1156%" y="789" width="0.0803%" height="15" fill="rgb(238,199,12)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.1156%" y="773" width="0.0803%" height="15" fill="rgb(242,179,49)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1156%" y="757" width="0.0803%" height="15" fill="rgb(214,10,44)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1156%" y="741" width="0.0803%" height="15" fill="rgb(229,181,11)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="751.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1156%" y="725" width="0.0803%" height="15" fill="rgb(244,155,10)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1156%" y="709" width="0.0803%" height="15" fill="rgb(254,13,48)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1156%" y="693" width="0.0803%" height="15" fill="rgb(210,164,6)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1156%" y="677" width="0.0803%" height="15" fill="rgb(216,187,40)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="687.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="86.1958%" y="773" width="0.0803%" height="15" fill="rgb(208,143,21)" fg:x="1074" fg:w="1"/><text x="86.4458%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1958%" y="757" width="0.0803%" height="15" fill="rgb(211,73,41)" fg:x="1074" fg:w="1"/><text x="86.4458%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1958%" y="741" width="0.0803%" height="15" fill="rgb(244,69,21)" fg:x="1074" fg:w="1"/><text x="86.4458%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="86.1958%" y="725" width="0.0803%" height="15" fill="rgb(230,152,32)" fg:x="1074" fg:w="1"/><text x="86.4458%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.2761%" y="741" width="0.0803%" height="15" fill="rgb(208,110,18)" fg:x="1075" fg:w="1"/><text x="86.5261%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.2761%" y="725" width="0.0803%" height="15" fill="rgb(214,201,49)" fg:x="1075" fg:w="1"/><text x="86.5261%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.2761%" y="709" width="0.0803%" height="15" fill="rgb(253,153,27)" fg:x="1075" fg:w="1"/><text x="86.5261%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.2761%" y="693" width="0.0803%" height="15" fill="rgb(238,61,11)" fg:x="1075" fg:w="1"/><text x="86.5261%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2761%" y="677" width="0.0803%" height="15" fill="rgb(227,84,2)" fg:x="1075" fg:w="1"/><text x="86.5261%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (4 samples, 0.32%)</title><rect x="86.1156%" y="837" width="0.3210%" height="15" fill="rgb(233,52,8)" fg:x="1073" fg:w="4"/><text x="86.3656%" y="847.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="86.1156%" y="821" width="0.3210%" height="15" fill="rgb(209,136,13)" fg:x="1073" fg:w="4"/><text x="86.3656%" y="831.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="86.1958%" y="805" width="0.2408%" height="15" fill="rgb(229,86,25)" fg:x="1074" fg:w="3"/><text x="86.4458%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="86.1958%" y="789" width="0.2408%" height="15" fill="rgb(235,47,16)" fg:x="1074" fg:w="3"/><text x="86.4458%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="86.2761%" y="773" width="0.1605%" height="15" fill="rgb(231,186,4)" fg:x="1075" fg:w="2"/><text x="86.5261%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.2761%" y="757" width="0.1605%" height="15" fill="rgb(209,213,23)" fg:x="1075" fg:w="2"/><text x="86.5261%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3563%" y="741" width="0.0803%" height="15" fill="rgb(212,142,47)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.3563%" y="725" width="0.0803%" height="15" fill="rgb(251,86,24)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3563%" y="709" width="0.0803%" height="15" fill="rgb(206,217,17)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.3563%" y="693" width="0.0803%" height="15" fill="rgb(248,92,38)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.3563%" y="677" width="0.0803%" height="15" fill="rgb(214,25,29)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3563%" y="661" width="0.0803%" height="15" fill="rgb(245,117,13)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.3563%" y="645" width="0.0803%" height="15" fill="rgb(205,169,9)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3563%" y="629" width="0.0803%" height="15" fill="rgb(223,134,38)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="86.3563%" y="613" width="0.0803%" height="15" fill="rgb(249,129,49)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="623.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (93 samples, 7.46%)</title><rect x="79.0530%" y="853" width="7.4639%" height="15" fill="rgb(229,157,45)" fg:x="985" fg:w="93"/><text x="79.3030%" y="863.50">&lt;tests::Ho..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (1 samples, 0.08%)</title><rect x="86.4366%" y="837" width="0.0803%" height="15" fill="rgb(232,159,11)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="847.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="86.4366%" y="821" width="0.0803%" height="15" fill="rgb(230,134,26)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="86.4366%" y="805" width="0.0803%" height="15" fill="rgb(234,149,40)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.4366%" y="789" width="0.0803%" height="15" fill="rgb(221,122,15)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.4366%" y="773" width="0.0803%" height="15" fill="rgb(228,127,0)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.4366%" y="757" width="0.0803%" height="15" fill="rgb(248,37,7)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.4366%" y="741" width="0.0803%" height="15" fill="rgb(215,140,49)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4366%" y="725" width="0.0803%" height="15" fill="rgb(236,65,39)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4366%" y="709" width="0.0803%" height="15" fill="rgb(253,102,38)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.4366%" y="693" width="0.0803%" height="15" fill="rgb(244,100,34)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.4366%" y="677" width="0.0803%" height="15" fill="rgb(210,179,47)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.4366%" y="661" width="0.0803%" height="15" fill="rgb(231,41,37)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4366%" y="645" width="0.0803%" height="15" fill="rgb(226,209,17)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4366%" y="629" width="0.0803%" height="15" fill="rgb(231,154,20)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.4366%" y="613" width="0.0803%" height="15" fill="rgb(216,134,24)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.4366%" y="597" width="0.0803%" height="15" fill="rgb(224,71,42)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.4366%" y="581" width="0.0803%" height="15" fill="rgb(250,65,23)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.4366%" y="565" width="0.0803%" height="15" fill="rgb(209,160,35)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4366%" y="549" width="0.0803%" height="15" fill="rgb(215,8,11)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="86.5169%" y="853" width="0.0803%" height="15" fill="rgb(227,27,12)" fg:x="1078" fg:w="1"/><text x="86.7669%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.5169%" y="837" width="0.0803%" height="15" fill="rgb(226,111,41)" fg:x="1078" fg:w="1"/><text x="86.7669%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="86.5971%" y="853" width="0.0803%" height="15" fill="rgb(212,195,15)" fg:x="1079" fg:w="1"/><text x="86.8471%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="86.5971%" y="837" width="0.0803%" height="15" fill="rgb(216,191,17)" fg:x="1079" fg:w="1"/><text x="86.8471%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="86.5971%" y="821" width="0.0803%" height="15" fill="rgb(215,57,44)" fg:x="1079" fg:w="1"/><text x="86.8471%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5971%" y="805" width="0.0803%" height="15" fill="rgb(209,38,4)" fg:x="1079" fg:w="1"/><text x="86.8471%" y="815.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="86.7576%" y="837" width="0.0803%" height="15" fill="rgb(238,49,31)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7576%" y="821" width="0.0803%" height="15" fill="rgb(219,48,39)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7576%" y="805" width="0.0803%" height="15" fill="rgb(252,223,43)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.7576%" y="789" width="0.0803%" height="15" fill="rgb(247,205,46)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.7576%" y="773" width="0.0803%" height="15" fill="rgb(231,16,40)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.7576%" y="757" width="0.0803%" height="15" fill="rgb(231,115,5)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7576%" y="741" width="0.0803%" height="15" fill="rgb(206,127,43)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7576%" y="725" width="0.0803%" height="15" fill="rgb(218,101,9)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.7576%" y="709" width="0.0803%" height="15" fill="rgb(235,138,50)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.7576%" y="693" width="0.0803%" height="15" fill="rgb(214,197,52)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.7576%" y="677" width="0.0803%" height="15" fill="rgb(230,80,19)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.7576%" y="661" width="0.0803%" height="15" fill="rgb(224,77,16)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7576%" y="645" width="0.0803%" height="15" fill="rgb(246,4,13)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="86.9984%" y="789" width="0.2408%" height="15" fill="rgb(220,177,26)" fg:x="1084" fg:w="3"/><text x="87.2484%" y="799.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="86.9984%" y="773" width="0.2408%" height="15" fill="rgb(215,114,45)" fg:x="1084" fg:w="3"/><text x="87.2484%" y="783.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.1589%" y="757" width="0.0803%" height="15" fill="rgb(215,71,54)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.1589%" y="741" width="0.0803%" height="15" fill="rgb(211,155,22)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.1589%" y="725" width="0.0803%" height="15" fill="rgb(245,206,18)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.1589%" y="709" width="0.0803%" height="15" fill="rgb(248,216,48)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.1589%" y="693" width="0.0803%" height="15" fill="rgb(244,84,45)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.1589%" y="677" width="0.0803%" height="15" fill="rgb(245,13,45)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="87.1589%" y="661" width="0.0803%" height="15" fill="rgb(247,163,2)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.1589%" y="645" width="0.0803%" height="15" fill="rgb(211,175,10)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="86.9984%" y="805" width="0.3210%" height="15" fill="rgb(215,186,31)" fg:x="1084" fg:w="4"/><text x="87.2484%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.2392%" y="789" width="0.0803%" height="15" fill="rgb(207,42,11)" fg:x="1087" fg:w="1"/><text x="87.4892%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2392%" y="773" width="0.0803%" height="15" fill="rgb(224,197,20)" fg:x="1087" fg:w="1"/><text x="87.4892%" y="783.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3194%" y="757" width="0.0803%" height="15" fill="rgb(244,119,36)" fg:x="1088" fg:w="1"/><text x="87.5694%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3194%" y="741" width="0.0803%" height="15" fill="rgb(250,60,27)" fg:x="1088" fg:w="1"/><text x="87.5694%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3194%" y="725" width="0.0803%" height="15" fill="rgb(252,202,1)" fg:x="1088" fg:w="1"/><text x="87.5694%" y="735.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="87.3997%" y="757" width="0.0803%" height="15" fill="rgb(206,53,25)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.3997%" y="741" width="0.0803%" height="15" fill="rgb(210,88,4)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="87.3997%" y="725" width="0.0803%" height="15" fill="rgb(211,144,28)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="87.3997%" y="709" width="0.0803%" height="15" fill="rgb(247,81,32)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="87.3997%" y="693" width="0.0803%" height="15" fill="rgb(225,192,11)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="703.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (9 samples, 0.72%)</title><rect x="86.8379%" y="821" width="0.7223%" height="15" fill="rgb(232,212,27)" fg:x="1082" fg:w="9"/><text x="87.0879%" y="831.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.24%)</title><rect x="87.3194%" y="805" width="0.2408%" height="15" fill="rgb(239,3,29)" fg:x="1088" fg:w="3"/><text x="87.5694%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="87.3194%" y="789" width="0.2408%" height="15" fill="rgb(252,225,29)" fg:x="1088" fg:w="3"/><text x="87.5694%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="87.3194%" y="773" width="0.2408%" height="15" fill="rgb(205,151,9)" fg:x="1088" fg:w="3"/><text x="87.5694%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4799%" y="757" width="0.0803%" height="15" fill="rgb(216,171,47)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4799%" y="741" width="0.0803%" height="15" fill="rgb(206,181,1)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="87.4799%" y="725" width="0.0803%" height="15" fill="rgb(232,218,10)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="735.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="87.4799%" y="709" width="0.0803%" height="15" fill="rgb(244,222,51)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="719.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="87.4799%" y="693" width="0.0803%" height="15" fill="rgb(252,215,16)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4799%" y="677" width="0.0803%" height="15" fill="rgb(212,130,13)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4799%" y="661" width="0.0803%" height="15" fill="rgb(227,103,37)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="87.5602%" y="789" width="0.0803%" height="15" fill="rgb(249,48,15)" fg:x="1091" fg:w="1"/><text x="87.8102%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.5602%" y="773" width="0.0803%" height="15" fill="rgb(225,96,9)" fg:x="1091" fg:w="1"/><text x="87.8102%" y="783.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="87.6404%" y="757" width="0.0803%" height="15" fill="rgb(213,81,41)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.6404%" y="741" width="0.0803%" height="15" fill="rgb(230,15,12)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.6404%" y="725" width="0.0803%" height="15" fill="rgb(218,106,37)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.6404%" y="709" width="0.0803%" height="15" fill="rgb(223,172,47)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.7207%" y="741" width="0.0803%" height="15" fill="rgb(246,180,49)" fg:x="1093" fg:w="1"/><text x="87.9707%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.7207%" y="725" width="0.0803%" height="15" fill="rgb(231,63,37)" fg:x="1093" fg:w="1"/><text x="87.9707%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.7207%" y="709" width="0.0803%" height="15" fill="rgb(235,70,40)" fg:x="1093" fg:w="1"/><text x="87.9707%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.7207%" y="693" width="0.0803%" height="15" fill="rgb(250,54,26)" fg:x="1093" fg:w="1"/><text x="87.9707%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.7207%" y="677" width="0.0803%" height="15" fill="rgb(214,190,1)" fg:x="1093" fg:w="1"/><text x="87.9707%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.7207%" y="661" width="0.0803%" height="15" fill="rgb(212,40,35)" fg:x="1093" fg:w="1"/><text x="87.9707%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.7207%" y="645" width="0.0803%" height="15" fill="rgb(239,183,47)" fg:x="1093" fg:w="1"/><text x="87.9707%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.8010%" y="693" width="0.0803%" height="15" fill="rgb(211,171,49)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="87.8010%" y="725" width="0.1605%" height="15" fill="rgb(249,186,27)" fg:x="1094" fg:w="2"/><text x="88.0510%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="87.8010%" y="709" width="0.1605%" height="15" fill="rgb(223,23,48)" fg:x="1094" fg:w="2"/><text x="88.0510%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.8812%" y="693" width="0.0803%" height="15" fill="rgb(209,203,21)" fg:x="1095" fg:w="1"/><text x="88.1312%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.8812%" y="677" width="0.0803%" height="15" fill="rgb(229,33,27)" fg:x="1095" fg:w="1"/><text x="88.1312%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.8812%" y="661" width="0.0803%" height="15" fill="rgb(207,8,53)" fg:x="1095" fg:w="1"/><text x="88.1312%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.8812%" y="645" width="0.0803%" height="15" fill="rgb(221,42,0)" fg:x="1095" fg:w="1"/><text x="88.1312%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="87.8812%" y="629" width="0.0803%" height="15" fill="rgb(223,115,3)" fg:x="1095" fg:w="1"/><text x="88.1312%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.9615%" y="725" width="0.0803%" height="15" fill="rgb(239,35,26)" fg:x="1096" fg:w="1"/><text x="88.2115%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.9615%" y="709" width="0.0803%" height="15" fill="rgb(233,22,9)" fg:x="1096" fg:w="1"/><text x="88.2115%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.9615%" y="693" width="0.0803%" height="15" fill="rgb(236,221,48)" fg:x="1096" fg:w="1"/><text x="88.2115%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.9615%" y="677" width="0.0803%" height="15" fill="rgb(235,52,30)" fg:x="1096" fg:w="1"/><text x="88.2115%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.0417%" y="661" width="0.0803%" height="15" fill="rgb(238,133,51)" fg:x="1097" fg:w="1"/><text x="88.2917%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.0417%" y="645" width="0.0803%" height="15" fill="rgb(213,122,23)" fg:x="1097" fg:w="1"/><text x="88.2917%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.0417%" y="677" width="0.1605%" height="15" fill="rgb(225,8,15)" fg:x="1097" fg:w="2"/><text x="88.2917%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1220%" y="661" width="0.0803%" height="15" fill="rgb(219,126,35)" fg:x="1098" fg:w="1"/><text x="88.3720%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="87.8010%" y="741" width="0.5618%" height="15" fill="rgb(246,113,21)" fg:x="1094" fg:w="7"/><text x="88.0510%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.0417%" y="725" width="0.3210%" height="15" fill="rgb(241,193,32)" fg:x="1097" fg:w="4"/><text x="88.2917%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.0417%" y="709" width="0.3210%" height="15" fill="rgb(218,99,18)" fg:x="1097" fg:w="4"/><text x="88.2917%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.0417%" y="693" width="0.3210%" height="15" fill="rgb(225,114,4)" fg:x="1097" fg:w="4"/><text x="88.2917%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.2022%" y="677" width="0.1605%" height="15" fill="rgb(235,0,15)" fg:x="1099" fg:w="2"/><text x="88.4522%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.2825%" y="661" width="0.0803%" height="15" fill="rgb(247,45,27)" fg:x="1100" fg:w="1"/><text x="88.5325%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.2825%" y="645" width="0.0803%" height="15" fill="rgb(249,88,53)" fg:x="1100" fg:w="1"/><text x="88.5325%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.2825%" y="629" width="0.0803%" height="15" fill="rgb(207,58,45)" fg:x="1100" fg:w="1"/><text x="88.5325%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.2825%" y="613" width="0.0803%" height="15" fill="rgb(216,7,11)" fg:x="1100" fg:w="1"/><text x="88.5325%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.2825%" y="597" width="0.0803%" height="15" fill="rgb(230,40,33)" fg:x="1100" fg:w="1"/><text x="88.5325%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="87.6404%" y="773" width="0.8828%" height="15" fill="rgb(232,24,46)" fg:x="1092" fg:w="11"/><text x="87.8904%" y="783.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="87.7207%" y="757" width="0.8026%" height="15" fill="rgb(219,222,45)" fg:x="1093" fg:w="10"/><text x="87.9707%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.3628%" y="741" width="0.1605%" height="15" fill="rgb(229,85,44)" fg:x="1101" fg:w="2"/><text x="88.6128%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.4430%" y="725" width="0.0803%" height="15" fill="rgb(243,71,36)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.4430%" y="709" width="0.0803%" height="15" fill="rgb(230,203,45)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.5233%" y="741" width="0.0803%" height="15" fill="rgb(224,77,49)" fg:x="1103" fg:w="1"/><text x="88.7733%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5233%" y="725" width="0.0803%" height="15" fill="rgb(210,186,47)" fg:x="1103" fg:w="1"/><text x="88.7733%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.6035%" y="725" width="0.0803%" height="15" fill="rgb(232,146,10)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.6838%" y="709" width="0.0803%" height="15" fill="rgb(236,185,51)" fg:x="1105" fg:w="1"/><text x="88.9338%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6838%" y="693" width="0.0803%" height="15" fill="rgb(223,206,43)" fg:x="1105" fg:w="1"/><text x="88.9338%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="88.5233%" y="773" width="0.3210%" height="15" fill="rgb(227,212,9)" fg:x="1103" fg:w="4"/><text x="88.7733%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="88.5233%" y="757" width="0.3210%" height="15" fill="rgb(205,82,3)" fg:x="1103" fg:w="4"/><text x="88.7733%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.6035%" y="741" width="0.2408%" height="15" fill="rgb(214,2,27)" fg:x="1104" fg:w="3"/><text x="88.8535%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.6838%" y="725" width="0.1605%" height="15" fill="rgb(241,37,22)" fg:x="1105" fg:w="2"/><text x="88.9338%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.7640%" y="709" width="0.0803%" height="15" fill="rgb(219,182,1)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.7640%" y="693" width="0.0803%" height="15" fill="rgb(208,224,23)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.7640%" y="677" width="0.0803%" height="15" fill="rgb(219,121,32)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7640%" y="661" width="0.0803%" height="15" fill="rgb(253,13,40)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0048%" y="661" width="0.0803%" height="15" fill="rgb(233,6,28)" fg:x="1109" fg:w="1"/><text x="89.2548%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.0851%" y="645" width="0.0803%" height="15" fill="rgb(233,73,8)" fg:x="1110" fg:w="1"/><text x="89.3351%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.0048%" y="741" width="0.2408%" height="15" fill="rgb(223,48,27)" fg:x="1109" fg:w="3"/><text x="89.2548%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="89.0048%" y="725" width="0.2408%" height="15" fill="rgb(231,98,37)" fg:x="1109" fg:w="3"/><text x="89.2548%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.0048%" y="709" width="0.2408%" height="15" fill="rgb(249,43,32)" fg:x="1109" fg:w="3"/><text x="89.2548%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.0048%" y="693" width="0.2408%" height="15" fill="rgb(246,184,20)" fg:x="1109" fg:w="3"/><text x="89.2548%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.0048%" y="677" width="0.2408%" height="15" fill="rgb(251,216,0)" fg:x="1109" fg:w="3"/><text x="89.2548%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.0851%" y="661" width="0.1605%" height="15" fill="rgb(238,41,42)" fg:x="1110" fg:w="2"/><text x="89.3351%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1653%" y="645" width="0.0803%" height="15" fill="rgb(227,224,50)" fg:x="1111" fg:w="1"/><text x="89.4153%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1653%" y="629" width="0.0803%" height="15" fill="rgb(237,189,18)" fg:x="1111" fg:w="1"/><text x="89.4153%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1653%" y="613" width="0.0803%" height="15" fill="rgb(238,108,6)" fg:x="1111" fg:w="1"/><text x="89.4153%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.2456%" y="741" width="0.0803%" height="15" fill="rgb(214,197,53)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.3258%" y="725" width="0.0803%" height="15" fill="rgb(206,183,15)" fg:x="1113" fg:w="1"/><text x="89.5758%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.3258%" y="709" width="0.0803%" height="15" fill="rgb(208,130,32)" fg:x="1113" fg:w="1"/><text x="89.5758%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.3258%" y="693" width="0.0803%" height="15" fill="rgb(226,128,52)" fg:x="1113" fg:w="1"/><text x="89.5758%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.3258%" y="677" width="0.0803%" height="15" fill="rgb(231,183,21)" fg:x="1113" fg:w="1"/><text x="89.5758%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4061%" y="725" width="0.0803%" height="15" fill="rgb(216,8,35)" fg:x="1114" fg:w="1"/><text x="89.6561%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.4864%" y="693" width="0.0803%" height="15" fill="rgb(224,221,8)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.4864%" y="677" width="0.0803%" height="15" fill="rgb(210,111,33)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="687.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="88.9246%" y="757" width="0.7223%" height="15" fill="rgb(232,211,38)" fg:x="1108" fg:w="9"/><text x="89.1746%" y="767.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="89.3258%" y="741" width="0.3210%" height="15" fill="rgb(216,190,27)" fg:x="1113" fg:w="4"/><text x="89.5758%" y="751.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="89.4864%" y="725" width="0.1605%" height="15" fill="rgb(237,215,27)" fg:x="1115" fg:w="2"/><text x="89.7364%" y="735.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="89.4864%" y="709" width="0.1605%" height="15" fill="rgb(251,121,39)" fg:x="1115" fg:w="2"/><text x="89.7364%" y="719.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="89.5666%" y="693" width="0.0803%" height="15" fill="rgb(244,21,14)" fg:x="1116" fg:w="1"/><text x="89.8166%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5666%" y="677" width="0.0803%" height="15" fill="rgb(221,192,22)" fg:x="1116" fg:w="1"/><text x="89.8166%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.6469%" y="757" width="0.0803%" height="15" fill="rgb(251,190,28)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6469%" y="741" width="0.0803%" height="15" fill="rgb(217,4,51)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="751.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8074%" y="725" width="0.0803%" height="15" fill="rgb(215,183,49)" fg:x="1119" fg:w="1"/><text x="90.0574%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8074%" y="709" width="0.0803%" height="15" fill="rgb(249,28,49)" fg:x="1119" fg:w="1"/><text x="90.0574%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.8074%" y="693" width="0.0803%" height="15" fill="rgb(214,42,20)" fg:x="1119" fg:w="1"/><text x="90.0574%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="89.8074%" y="677" width="0.0803%" height="15" fill="rgb(222,77,27)" fg:x="1119" fg:w="1"/><text x="90.0574%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="89.8876%" y="725" width="0.1605%" height="15" fill="rgb(252,198,32)" fg:x="1120" fg:w="2"/><text x="90.1376%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.8876%" y="709" width="0.1605%" height="15" fill="rgb(207,140,50)" fg:x="1120" fg:w="2"/><text x="90.1376%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9679%" y="693" width="0.0803%" height="15" fill="rgb(251,170,16)" fg:x="1121" fg:w="1"/><text x="90.2179%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0482%" y="677" width="0.0803%" height="15" fill="rgb(249,111,45)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0482%" y="661" width="0.0803%" height="15" fill="rgb(241,99,35)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0482%" y="645" width="0.0803%" height="15" fill="rgb(216,188,17)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.1284%" y="645" width="0.0803%" height="15" fill="rgb(254,209,53)" fg:x="1123" fg:w="1"/><text x="90.3784%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="90.1284%" y="677" width="0.1605%" height="15" fill="rgb(231,105,41)" fg:x="1123" fg:w="2"/><text x="90.3784%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.1284%" y="661" width="0.1605%" height="15" fill="rgb(242,93,23)" fg:x="1123" fg:w="2"/><text x="90.3784%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2087%" y="645" width="0.0803%" height="15" fill="rgb(218,159,11)" fg:x="1124" fg:w="1"/><text x="90.4587%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="90.2889%" y="661" width="0.4013%" height="15" fill="rgb(209,90,32)" fg:x="1125" fg:w="5"/><text x="90.5389%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="90.3692%" y="645" width="0.3210%" height="15" fill="rgb(253,118,46)" fg:x="1126" fg:w="4"/><text x="90.6192%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="90.4494%" y="629" width="0.2408%" height="15" fill="rgb(219,121,2)" fg:x="1127" fg:w="3"/><text x="90.6994%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.5297%" y="613" width="0.1605%" height="15" fill="rgb(207,57,47)" fg:x="1128" fg:w="2"/><text x="90.7797%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.5297%" y="597" width="0.1605%" height="15" fill="rgb(235,113,43)" fg:x="1128" fg:w="2"/><text x="90.7797%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.5297%" y="581" width="0.1605%" height="15" fill="rgb(238,30,50)" fg:x="1128" fg:w="2"/><text x="90.7797%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.5297%" y="565" width="0.1605%" height="15" fill="rgb(237,47,29)" fg:x="1128" fg:w="2"/><text x="90.7797%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.5297%" y="549" width="0.1605%" height="15" fill="rgb(245,102,24)" fg:x="1128" fg:w="2"/><text x="90.7797%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="90.0482%" y="693" width="0.7223%" height="15" fill="rgb(245,152,9)" fg:x="1122" fg:w="9"/><text x="90.2982%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="90.2889%" y="677" width="0.4815%" height="15" fill="rgb(223,213,17)" fg:x="1125" fg:w="6"/><text x="90.5389%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6902%" y="661" width="0.0803%" height="15" fill="rgb(241,164,4)" fg:x="1130" fg:w="1"/><text x="90.9402%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.12%)</title><rect x="89.7271%" y="757" width="1.1236%" height="15" fill="rgb(205,209,31)" fg:x="1118" fg:w="14"/><text x="89.9771%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.12%)</title><rect x="89.7271%" y="741" width="1.1236%" height="15" fill="rgb(248,173,2)" fg:x="1118" fg:w="14"/><text x="89.9771%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="90.0482%" y="725" width="0.8026%" height="15" fill="rgb(207,67,32)" fg:x="1122" fg:w="10"/><text x="90.2982%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="90.0482%" y="709" width="0.8026%" height="15" fill="rgb(239,109,13)" fg:x="1122" fg:w="10"/><text x="90.2982%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="90.7705%" y="693" width="0.0803%" height="15" fill="rgb(233,123,24)" fg:x="1131" fg:w="1"/><text x="91.0205%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.9310%" y="613" width="0.0803%" height="15" fill="rgb(232,120,19)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9310%" y="597" width="0.0803%" height="15" fill="rgb(225,17,50)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.9310%" y="581" width="0.0803%" height="15" fill="rgb(239,216,13)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.9310%" y="565" width="0.0803%" height="15" fill="rgb(232,213,26)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="90.8507%" y="629" width="0.3210%" height="15" fill="rgb(244,59,39)" fg:x="1132" fg:w="4"/><text x="91.1007%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.0112%" y="613" width="0.1605%" height="15" fill="rgb(234,61,35)" fg:x="1134" fg:w="2"/><text x="91.2612%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.0915%" y="597" width="0.0803%" height="15" fill="rgb(245,94,24)" fg:x="1135" fg:w="1"/><text x="91.3415%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0915%" y="581" width="0.0803%" height="15" fill="rgb(238,190,44)" fg:x="1135" fg:w="1"/><text x="91.3415%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.0915%" y="565" width="0.0803%" height="15" fill="rgb(205,145,25)" fg:x="1135" fg:w="1"/><text x="91.3415%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0915%" y="549" width="0.0803%" height="15" fill="rgb(229,158,41)" fg:x="1135" fg:w="1"/><text x="91.3415%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.0915%" y="533" width="0.0803%" height="15" fill="rgb(224,121,5)" fg:x="1135" fg:w="1"/><text x="91.3415%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0915%" y="517" width="0.0803%" height="15" fill="rgb(238,168,35)" fg:x="1135" fg:w="1"/><text x="91.3415%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.1717%" y="629" width="0.0803%" height="15" fill="rgb(231,11,42)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1717%" y="613" width="0.0803%" height="15" fill="rgb(241,105,19)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="90.8507%" y="661" width="0.4815%" height="15" fill="rgb(253,210,20)" fg:x="1132" fg:w="6"/><text x="91.1007%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="90.8507%" y="645" width="0.4815%" height="15" fill="rgb(215,72,52)" fg:x="1132" fg:w="6"/><text x="91.1007%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2520%" y="629" width="0.0803%" height="15" fill="rgb(223,225,30)" fg:x="1137" fg:w="1"/><text x="91.5020%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.3323%" y="661" width="0.0803%" height="15" fill="rgb(220,138,44)" fg:x="1138" fg:w="1"/><text x="91.5823%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.3323%" y="645" width="0.0803%" height="15" fill="rgb(206,128,12)" fg:x="1138" fg:w="1"/><text x="91.5823%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="90.8507%" y="693" width="0.7223%" height="15" fill="rgb(245,194,0)" fg:x="1132" fg:w="9"/><text x="91.1007%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="90.8507%" y="677" width="0.7223%" height="15" fill="rgb(235,175,41)" fg:x="1132" fg:w="9"/><text x="91.1007%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.4125%" y="661" width="0.1605%" height="15" fill="rgb(216,15,48)" fg:x="1139" fg:w="2"/><text x="91.6625%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4928%" y="645" width="0.0803%" height="15" fill="rgb(223,179,5)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.4928%" y="629" width="0.0803%" height="15" fill="rgb(220,80,15)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="639.50"></text></g><g><title>engine::session::Session::close (62 samples, 4.98%)</title><rect x="86.6774%" y="853" width="4.9759%" height="15" fill="rgb(228,20,30)" fg:x="1080" fg:w="62"/><text x="86.9274%" y="863.50">engine..</text></g><g><title>engine::session::state::State::close (60 samples, 4.82%)</title><rect x="86.8379%" y="837" width="4.8154%" height="15" fill="rgb(229,194,27)" fg:x="1082" fg:w="60"/><text x="87.0879%" y="847.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (51 samples, 4.09%)</title><rect x="87.5602%" y="821" width="4.0931%" height="15" fill="rgb(238,202,32)" fg:x="1091" fg:w="51"/><text x="87.8102%" y="831.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (51 samples, 4.09%)</title><rect x="87.5602%" y="805" width="4.0931%" height="15" fill="rgb(207,82,27)" fg:x="1091" fg:w="51"/><text x="87.8102%" y="815.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (50 samples, 4.01%)</title><rect x="87.6404%" y="789" width="4.0128%" height="15" fill="rgb(246,122,46)" fg:x="1092" fg:w="50"/><text x="87.8904%" y="799.50">engi..</text></g><g><title>kernel::model::any_entity_changes (35 samples, 2.81%)</title><rect x="88.8443%" y="773" width="2.8090%" height="15" fill="rgb(220,101,26)" fg:x="1107" fg:w="35"/><text x="89.0943%" y="783.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.80%)</title><rect x="90.8507%" y="757" width="0.8026%" height="15" fill="rgb(251,63,9)" fg:x="1132" fg:w="10"/><text x="91.1007%" y="767.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="90.8507%" y="741" width="0.8026%" height="15" fill="rgb(235,186,5)" fg:x="1132" fg:w="10"/><text x="91.1007%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="90.8507%" y="725" width="0.8026%" height="15" fill="rgb(241,139,37)" fg:x="1132" fg:w="10"/><text x="91.1007%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="90.8507%" y="709" width="0.8026%" height="15" fill="rgb(252,177,51)" fg:x="1132" fg:w="10"/><text x="91.1007%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.5730%" y="693" width="0.0803%" height="15" fill="rgb(214,131,22)" fg:x="1141" fg:w="1"/><text x="91.8230%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.5730%" y="677" width="0.0803%" height="15" fill="rgb(246,53,19)" fg:x="1141" fg:w="1"/><text x="91.8230%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="91.6533%" y="741" width="0.0803%" height="15" fill="rgb(231,158,27)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="91.6533%" y="725" width="0.0803%" height="15" fill="rgb(226,166,46)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="91.6533%" y="709" width="0.0803%" height="15" fill="rgb(218,178,26)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="91.6533%" y="693" width="0.0803%" height="15" fill="rgb(206,25,39)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="677" width="0.0803%" height="15" fill="rgb(232,218,41)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.6533%" y="661" width="0.0803%" height="15" fill="rgb(212,151,15)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="645" width="0.0803%" height="15" fill="rgb(213,49,22)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="629" width="0.0803%" height="15" fill="rgb(247,116,21)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="613" width="0.0803%" height="15" fill="rgb(248,98,14)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.6533%" y="597" width="0.0803%" height="15" fill="rgb(247,72,6)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="581" width="0.0803%" height="15" fill="rgb(213,9,22)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="565" width="0.0803%" height="15" fill="rgb(213,122,30)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="549" width="0.0803%" height="15" fill="rgb(244,11,30)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.6533%" y="533" width="0.0803%" height="15" fill="rgb(236,102,26)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="517" width="0.0803%" height="15" fill="rgb(231,166,37)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="501" width="0.0803%" height="15" fill="rgb(220,224,29)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="485" width="0.0803%" height="15" fill="rgb(227,30,40)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.6533%" y="469" width="0.0803%" height="15" fill="rgb(235,8,36)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.6533%" y="453" width="0.0803%" height="15" fill="rgb(232,175,19)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.6533%" y="437" width="0.0803%" height="15" fill="rgb(217,114,10)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.6533%" y="421" width="0.0803%" height="15" fill="rgb(214,112,41)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="91.6533%" y="405" width="0.0803%" height="15" fill="rgb(226,69,34)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="91.6533%" y="389" width="0.0803%" height="15" fill="rgb(219,23,46)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="91.6533%" y="373" width="0.0803%" height="15" fill="rgb(233,3,8)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="91.6533%" y="357" width="0.0803%" height="15" fill="rgb(251,34,42)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="91.6533%" y="341" width="0.0803%" height="15" fill="rgb(215,84,9)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="91.6533%" y="325" width="0.0803%" height="15" fill="rgb(231,75,52)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.6533%" y="309" width="0.0803%" height="15" fill="rgb(247,201,31)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="91.6533%" y="293" width="0.0803%" height="15" fill="rgb(215,171,37)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.6533%" y="277" width="0.0803%" height="15" fill="rgb(208,208,44)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="91.6533%" y="261" width="0.0803%" height="15" fill="rgb(247,146,54)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="91.6533%" y="245" width="0.0803%" height="15" fill="rgb(209,0,40)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="91.6533%" y="229" width="0.0803%" height="15" fill="rgb(221,59,4)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="91.6533%" y="213" width="0.0803%" height="15" fill="rgb(227,153,47)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8138%" y="501" width="0.0803%" height="15" fill="rgb(253,225,10)" fg:x="1144" fg:w="1"/><text x="92.0638%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8138%" y="485" width="0.0803%" height="15" fill="rgb(237,201,24)" fg:x="1144" fg:w="1"/><text x="92.0638%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.8138%" y="469" width="0.0803%" height="15" fill="rgb(238,23,27)" fg:x="1144" fg:w="1"/><text x="92.0638%" y="479.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="91.8138%" y="645" width="0.1605%" height="15" fill="rgb(236,54,50)" fg:x="1144" fg:w="2"/><text x="92.0638%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.8138%" y="629" width="0.1605%" height="15" fill="rgb(216,106,0)" fg:x="1144" fg:w="2"/><text x="92.0638%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.8138%" y="613" width="0.1605%" height="15" fill="rgb(234,179,35)" fg:x="1144" fg:w="2"/><text x="92.0638%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.8138%" y="597" width="0.1605%" height="15" fill="rgb(210,35,8)" fg:x="1144" fg:w="2"/><text x="92.0638%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.8138%" y="581" width="0.1605%" height="15" fill="rgb(238,144,16)" fg:x="1144" fg:w="2"/><text x="92.0638%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.8138%" y="565" width="0.1605%" height="15" fill="rgb(244,54,7)" fg:x="1144" fg:w="2"/><text x="92.0638%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.8138%" y="549" width="0.1605%" height="15" fill="rgb(233,225,40)" fg:x="1144" fg:w="2"/><text x="92.0638%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.8138%" y="533" width="0.1605%" height="15" fill="rgb(249,227,23)" fg:x="1144" fg:w="2"/><text x="92.0638%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.8138%" y="517" width="0.1605%" height="15" fill="rgb(215,42,44)" fg:x="1144" fg:w="2"/><text x="92.0638%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.8941%" y="501" width="0.0803%" height="15" fill="rgb(220,145,40)" fg:x="1145" fg:w="1"/><text x="92.1441%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8941%" y="485" width="0.0803%" height="15" fill="rgb(228,218,40)" fg:x="1145" fg:w="1"/><text x="92.1441%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.9743%" y="517" width="0.0803%" height="15" fill="rgb(217,52,54)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.9743%" y="501" width="0.0803%" height="15" fill="rgb(223,90,22)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9743%" y="485" width="0.0803%" height="15" fill="rgb(232,114,35)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.9743%" y="469" width="0.0803%" height="15" fill="rgb(227,223,50)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.9743%" y="453" width="0.0803%" height="15" fill="rgb(249,175,7)" fg:x="1146" fg:w="1"/><text x="92.2243%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="91.8138%" y="709" width="0.3210%" height="15" fill="rgb(249,173,15)" fg:x="1144" fg:w="4"/><text x="92.0638%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="91.8138%" y="693" width="0.3210%" height="15" fill="rgb(240,131,6)" fg:x="1144" fg:w="4"/><text x="92.0638%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="91.8138%" y="677" width="0.3210%" height="15" fill="rgb(246,117,16)" fg:x="1144" fg:w="4"/><text x="92.0638%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="91.8138%" y="661" width="0.3210%" height="15" fill="rgb(209,32,16)" fg:x="1144" fg:w="4"/><text x="92.0638%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.9743%" y="645" width="0.1605%" height="15" fill="rgb(207,45,44)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.9743%" y="629" width="0.1605%" height="15" fill="rgb(210,66,3)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="91.9743%" y="613" width="0.1605%" height="15" fill="rgb(246,133,30)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.9743%" y="597" width="0.1605%" height="15" fill="rgb(224,37,17)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.9743%" y="581" width="0.1605%" height="15" fill="rgb(237,218,18)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.9743%" y="565" width="0.1605%" height="15" fill="rgb(240,57,8)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.9743%" y="549" width="0.1605%" height="15" fill="rgb(231,51,38)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="91.9743%" y="533" width="0.1605%" height="15" fill="rgb(230,89,50)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0546%" y="517" width="0.0803%" height="15" fill="rgb(234,103,34)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0546%" y="501" width="0.0803%" height="15" fill="rgb(220,45,48)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.0546%" y="485" width="0.0803%" height="15" fill="rgb(250,210,3)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0546%" y="469" width="0.0803%" height="15" fill="rgb(210,118,12)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0546%" y="453" width="0.0803%" height="15" fill="rgb(238,154,21)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.0546%" y="437" width="0.0803%" height="15" fill="rgb(227,220,4)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0546%" y="421" width="0.0803%" height="15" fill="rgb(207,179,27)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0546%" y="405" width="0.0803%" height="15" fill="rgb(240,111,30)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.0546%" y="389" width="0.0803%" height="15" fill="rgb(251,29,1)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="399.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.56%)</title><rect x="91.6533%" y="757" width="0.5618%" height="15" fill="rgb(224,141,39)" fg:x="1142" fg:w="7"/><text x="91.9033%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="91.7335%" y="741" width="0.4815%" height="15" fill="rgb(207,98,26)" fg:x="1143" fg:w="6"/><text x="91.9835%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="91.7335%" y="725" width="0.4815%" height="15" fill="rgb(221,37,6)" fg:x="1143" fg:w="6"/><text x="91.9835%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.1348%" y="709" width="0.0803%" height="15" fill="rgb(217,32,44)" fg:x="1148" fg:w="1"/><text x="92.3848%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.1348%" y="693" width="0.0803%" height="15" fill="rgb(253,149,2)" fg:x="1148" fg:w="1"/><text x="92.3848%" y="703.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (9 samples, 0.72%)</title><rect x="91.6533%" y="773" width="0.7223%" height="15" fill="rgb(220,165,39)" fg:x="1142" fg:w="9"/><text x="91.9033%" y="783.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="92.2151%" y="757" width="0.1605%" height="15" fill="rgb(235,33,48)" fg:x="1149" fg:w="2"/><text x="92.4651%" y="767.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="92.2953%" y="741" width="0.0803%" height="15" fill="rgb(221,89,6)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="92.2953%" y="725" width="0.0803%" height="15" fill="rgb(215,214,6)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="92.2953%" y="709" width="0.0803%" height="15" fill="rgb(241,1,30)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="92.2953%" y="693" width="0.0803%" height="15" fill="rgb(211,140,32)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.2953%" y="677" width="0.0803%" height="15" fill="rgb(232,48,21)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.2953%" y="661" width="0.0803%" height="15" fill="rgb(252,217,9)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.2953%" y="645" width="0.0803%" height="15" fill="rgb(206,123,34)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.2953%" y="629" width="0.0803%" height="15" fill="rgb(245,161,38)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.2953%" y="613" width="0.0803%" height="15" fill="rgb(233,205,7)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.2953%" y="597" width="0.0803%" height="15" fill="rgb(217,119,18)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.2953%" y="581" width="0.0803%" height="15" fill="rgb(252,126,3)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.2953%" y="565" width="0.0803%" height="15" fill="rgb(252,188,15)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.2953%" y="549" width="0.0803%" height="15" fill="rgb(228,1,48)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.2953%" y="533" width="0.0803%" height="15" fill="rgb(205,187,8)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.2953%" y="517" width="0.0803%" height="15" fill="rgb(205,105,50)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.2953%" y="501" width="0.0803%" height="15" fill="rgb(211,31,46)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.2953%" y="485" width="0.0803%" height="15" fill="rgb(213,126,5)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="92.2953%" y="469" width="0.0803%" height="15" fill="rgb(231,87,9)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="92.2953%" y="453" width="0.0803%" height="15" fill="rgb(219,224,20)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="92.2953%" y="437" width="0.0803%" height="15" fill="rgb(230,84,21)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="92.2953%" y="421" width="0.0803%" height="15" fill="rgb(224,169,42)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.2953%" y="405" width="0.0803%" height="15" fill="rgb(227,182,13)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.2953%" y="389" width="0.0803%" height="15" fill="rgb(249,57,41)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.2953%" y="373" width="0.0803%" height="15" fill="rgb(214,93,52)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="92.2953%" y="357" width="0.0803%" height="15" fill="rgb(229,161,34)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.2953%" y="341" width="0.0803%" height="15" fill="rgb(227,193,17)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="92.2953%" y="325" width="0.0803%" height="15" fill="rgb(242,164,46)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="92.2953%" y="309" width="0.0803%" height="15" fill="rgb(242,142,47)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="92.2953%" y="293" width="0.0803%" height="15" fill="rgb(208,23,18)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.2953%" y="277" width="0.0803%" height="15" fill="rgb(219,54,38)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="92.3756%" y="597" width="0.0803%" height="15" fill="rgb(206,97,35)" fg:x="1151" fg:w="1"/><text x="92.6256%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.3756%" y="581" width="0.0803%" height="15" fill="rgb(208,76,8)" fg:x="1151" fg:w="1"/><text x="92.6256%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.3756%" y="565" width="0.0803%" height="15" fill="rgb(220,92,28)" fg:x="1151" fg:w="1"/><text x="92.6256%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.4559%" y="581" width="0.0803%" height="15" fill="rgb(209,158,39)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.4559%" y="565" width="0.0803%" height="15" fill="rgb(238,175,9)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.4559%" y="549" width="0.0803%" height="15" fill="rgb(240,116,17)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="92.5361%" y="565" width="0.0803%" height="15" fill="rgb(208,7,2)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="92.5361%" y="549" width="0.0803%" height="15" fill="rgb(252,52,4)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="92.5361%" y="533" width="0.0803%" height="15" fill="rgb(222,68,34)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="92.5361%" y="517" width="0.0803%" height="15" fill="rgb(242,154,35)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.8571%" y="357" width="0.1605%" height="15" fill="rgb(210,125,54)" fg:x="1157" fg:w="2"/><text x="93.1071%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.8571%" y="341" width="0.1605%" height="15" fill="rgb(247,121,18)" fg:x="1157" fg:w="2"/><text x="93.1071%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.8571%" y="325" width="0.1605%" height="15" fill="rgb(223,48,51)" fg:x="1157" fg:w="2"/><text x="93.1071%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9374%" y="309" width="0.0803%" height="15" fill="rgb(211,156,48)" fg:x="1158" fg:w="1"/><text x="93.1874%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="92.8571%" y="437" width="0.2408%" height="15" fill="rgb(236,56,31)" fg:x="1157" fg:w="3"/><text x="93.1071%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="92.8571%" y="421" width="0.2408%" height="15" fill="rgb(247,157,52)" fg:x="1157" fg:w="3"/><text x="93.1071%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="92.8571%" y="405" width="0.2408%" height="15" fill="rgb(244,121,39)" fg:x="1157" fg:w="3"/><text x="93.1071%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="92.8571%" y="389" width="0.2408%" height="15" fill="rgb(239,4,40)" fg:x="1157" fg:w="3"/><text x="93.1071%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="92.8571%" y="373" width="0.2408%" height="15" fill="rgb(213,204,45)" fg:x="1157" fg:w="3"/><text x="93.1071%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.0177%" y="357" width="0.0803%" height="15" fill="rgb(242,107,0)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0177%" y="341" width="0.0803%" height="15" fill="rgb(215,152,25)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.0177%" y="325" width="0.0803%" height="15" fill="rgb(233,151,6)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0177%" y="309" width="0.0803%" height="15" fill="rgb(206,126,44)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.0177%" y="293" width="0.0803%" height="15" fill="rgb(209,145,15)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0177%" y="277" width="0.0803%" height="15" fill="rgb(235,214,8)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.0177%" y="261" width="0.0803%" height="15" fill="rgb(216,140,51)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0177%" y="245" width="0.0803%" height="15" fill="rgb(213,83,34)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.0979%" y="373" width="0.1605%" height="15" fill="rgb(218,186,44)" fg:x="1160" fg:w="2"/><text x="93.3479%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.2584%" y="277" width="0.0803%" height="15" fill="rgb(225,147,10)" fg:x="1162" fg:w="1"/><text x="93.5084%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3387%" y="213" width="0.0803%" height="15" fill="rgb(209,214,20)" fg:x="1163" fg:w="1"/><text x="93.5887%" y="223.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="93.0979%" y="421" width="0.4013%" height="15" fill="rgb(252,61,32)" fg:x="1160" fg:w="5"/><text x="93.3479%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="93.0979%" y="405" width="0.4013%" height="15" fill="rgb(237,204,10)" fg:x="1160" fg:w="5"/><text x="93.3479%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.0979%" y="389" width="0.4013%" height="15" fill="rgb(246,118,16)" fg:x="1160" fg:w="5"/><text x="93.3479%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.2584%" y="373" width="0.2408%" height="15" fill="rgb(214,50,9)" fg:x="1162" fg:w="3"/><text x="93.5084%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.2584%" y="357" width="0.2408%" height="15" fill="rgb(212,41,1)" fg:x="1162" fg:w="3"/><text x="93.5084%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.2584%" y="341" width="0.2408%" height="15" fill="rgb(228,172,32)" fg:x="1162" fg:w="3"/><text x="93.5084%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.2584%" y="325" width="0.2408%" height="15" fill="rgb(231,85,38)" fg:x="1162" fg:w="3"/><text x="93.5084%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.2584%" y="309" width="0.2408%" height="15" fill="rgb(223,120,31)" fg:x="1162" fg:w="3"/><text x="93.5084%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.2584%" y="293" width="0.2408%" height="15" fill="rgb(254,174,9)" fg:x="1162" fg:w="3"/><text x="93.5084%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.3387%" y="277" width="0.1605%" height="15" fill="rgb(243,197,0)" fg:x="1163" fg:w="2"/><text x="93.5887%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.3387%" y="261" width="0.1605%" height="15" fill="rgb(226,186,17)" fg:x="1163" fg:w="2"/><text x="93.5887%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.3387%" y="245" width="0.1605%" height="15" fill="rgb(229,38,38)" fg:x="1163" fg:w="2"/><text x="93.5887%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.3387%" y="229" width="0.1605%" height="15" fill="rgb(238,82,14)" fg:x="1163" fg:w="2"/><text x="93.5887%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.4189%" y="213" width="0.0803%" height="15" fill="rgb(230,154,54)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.4189%" y="197" width="0.0803%" height="15" fill="rgb(243,84,17)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="93.0979%" y="437" width="0.4815%" height="15" fill="rgb(226,41,37)" fg:x="1160" fg:w="6"/><text x="93.3479%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4992%" y="421" width="0.0803%" height="15" fill="rgb(219,20,18)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4992%" y="405" width="0.0803%" height="15" fill="rgb(243,173,39)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.4992%" y="389" width="0.0803%" height="15" fill="rgb(245,79,20)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="93.5795%" y="437" width="0.0803%" height="15" fill="rgb(229,101,45)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.5795%" y="421" width="0.0803%" height="15" fill="rgb(215,123,52)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.5795%" y="405" width="0.0803%" height="15" fill="rgb(215,11,33)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5795%" y="389" width="0.0803%" height="15" fill="rgb(245,105,20)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5795%" y="373" width="0.0803%" height="15" fill="rgb(231,132,30)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5795%" y="357" width="0.0803%" height="15" fill="rgb(224,62,21)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5795%" y="341" width="0.0803%" height="15" fill="rgb(209,221,38)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.5795%" y="325" width="0.0803%" height="15" fill="rgb(229,200,30)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5795%" y="309" width="0.0803%" height="15" fill="rgb(237,142,41)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5795%" y="293" width="0.0803%" height="15" fill="rgb(238,37,22)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5795%" y="277" width="0.0803%" height="15" fill="rgb(234,182,17)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5795%" y="261" width="0.0803%" height="15" fill="rgb(237,58,48)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5795%" y="245" width="0.0803%" height="15" fill="rgb(226,112,37)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (13 samples, 1.04%)</title><rect x="92.6966%" y="533" width="1.0433%" height="15" fill="rgb(230,201,20)" fg:x="1155" fg:w="13"/><text x="92.9466%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.96%)</title><rect x="92.7769%" y="517" width="0.9631%" height="15" fill="rgb(252,95,39)" fg:x="1156" fg:w="12"/><text x="93.0269%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="92.7769%" y="501" width="0.9631%" height="15" fill="rgb(240,150,33)" fg:x="1156" fg:w="12"/><text x="93.0269%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.96%)</title><rect x="92.7769%" y="485" width="0.9631%" height="15" fill="rgb(208,202,37)" fg:x="1156" fg:w="12"/><text x="93.0269%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.96%)</title><rect x="92.7769%" y="469" width="0.9631%" height="15" fill="rgb(251,37,12)" fg:x="1156" fg:w="12"/><text x="93.0269%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="92.8571%" y="453" width="0.8828%" height="15" fill="rgb(247,150,26)" fg:x="1157" fg:w="11"/><text x="93.1071%" y="463.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="93.6597%" y="437" width="0.0803%" height="15" fill="rgb(232,28,8)" fg:x="1167" fg:w="1"/><text x="93.9097%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6597%" y="421" width="0.0803%" height="15" fill="rgb(226,121,34)" fg:x="1167" fg:w="1"/><text x="93.9097%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="93.6597%" y="405" width="0.0803%" height="15" fill="rgb(237,23,13)" fg:x="1167" fg:w="1"/><text x="93.9097%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6597%" y="389" width="0.0803%" height="15" fill="rgb(214,42,29)" fg:x="1167" fg:w="1"/><text x="93.9097%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (17 samples, 1.36%)</title><rect x="92.4559%" y="597" width="1.3644%" height="15" fill="rgb(246,204,29)" fg:x="1152" fg:w="17"/><text x="92.7059%" y="607.50"></text></g><g><title>plugins_core::tools::contained_by (16 samples, 1.28%)</title><rect x="92.5361%" y="581" width="1.2841%" height="15" fill="rgb(242,28,40)" fg:x="1153" fg:w="16"/><text x="92.7861%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.20%)</title><rect x="92.6164%" y="565" width="1.2039%" height="15" fill="rgb(243,64,49)" fg:x="1154" fg:w="15"/><text x="92.8664%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.12%)</title><rect x="92.6966%" y="549" width="1.1236%" height="15" fill="rgb(226,93,13)" fg:x="1155" fg:w="14"/><text x="92.9466%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7400%" y="533" width="0.0803%" height="15" fill="rgb(241,113,26)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7400%" y="517" width="0.0803%" height="15" fill="rgb(209,209,0)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.7400%" y="501" width="0.0803%" height="15" fill="rgb(251,183,50)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.7400%" y="485" width="0.0803%" height="15" fill="rgb(248,24,43)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.7400%" y="469" width="0.0803%" height="15" fill="rgb(218,102,9)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7400%" y="453" width="0.0803%" height="15" fill="rgb(249,209,39)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7400%" y="437" width="0.0803%" height="15" fill="rgb(210,37,6)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.7400%" y="421" width="0.0803%" height="15" fill="rgb(212,99,4)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8202%" y="581" width="0.0803%" height="15" fill="rgb(253,59,46)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8202%" y="565" width="0.0803%" height="15" fill="rgb(229,96,9)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8202%" y="549" width="0.0803%" height="15" fill="rgb(207,103,49)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8202%" y="533" width="0.0803%" height="15" fill="rgb(250,226,20)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.8202%" y="517" width="0.0803%" height="15" fill="rgb(238,220,11)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.8202%" y="501" width="0.0803%" height="15" fill="rgb(236,74,15)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.8202%" y="485" width="0.0803%" height="15" fill="rgb(218,43,40)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8202%" y="469" width="0.0803%" height="15" fill="rgb(245,206,37)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8202%" y="453" width="0.0803%" height="15" fill="rgb(206,30,3)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.8202%" y="437" width="0.0803%" height="15" fill="rgb(211,29,35)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.8202%" y="421" width="0.0803%" height="15" fill="rgb(218,49,50)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.8202%" y="405" width="0.0803%" height="15" fill="rgb(211,114,30)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.8202%" y="389" width="0.0803%" height="15" fill="rgb(238,70,33)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.8202%" y="373" width="0.0803%" height="15" fill="rgb(238,141,50)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="93.9005%" y="581" width="0.0803%" height="15" fill="rgb(205,69,6)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="93.9005%" y="565" width="0.0803%" height="15" fill="rgb(229,65,0)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.9005%" y="549" width="0.0803%" height="15" fill="rgb(211,3,37)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="93.9807%" y="581" width="0.0803%" height="15" fill="rgb(223,196,42)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="93.8202%" y="597" width="0.3210%" height="15" fill="rgb(227,191,15)" fg:x="1169" fg:w="4"/><text x="94.0702%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="94.0610%" y="581" width="0.0803%" height="15" fill="rgb(229,210,53)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="591.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="94.0610%" y="565" width="0.0803%" height="15" fill="rgb(250,203,10)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="94.0610%" y="549" width="0.0803%" height="15" fill="rgb(247,8,37)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.0610%" y="533" width="0.0803%" height="15" fill="rgb(240,52,9)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.0610%" y="517" width="0.0803%" height="15" fill="rgb(243,100,52)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.0610%" y="501" width="0.0803%" height="15" fill="rgb(224,149,30)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0610%" y="485" width="0.0803%" height="15" fill="rgb(232,27,45)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0610%" y="469" width="0.0803%" height="15" fill="rgb(242,161,36)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0610%" y="453" width="0.0803%" height="15" fill="rgb(235,223,32)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (23 samples, 1.85%)</title><rect x="92.3756%" y="629" width="1.8459%" height="15" fill="rgb(242,78,19)" fg:x="1151" fg:w="23"/><text x="92.6256%" y="639.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (23 samples, 1.85%)</title><rect x="92.3756%" y="613" width="1.8459%" height="15" fill="rgb(233,157,47)" fg:x="1151" fg:w="23"/><text x="92.6256%" y="623.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="94.1413%" y="597" width="0.0803%" height="15" fill="rgb(251,213,5)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1413%" y="581" width="0.0803%" height="15" fill="rgb(215,223,5)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1413%" y="565" width="0.0803%" height="15" fill="rgb(230,14,7)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1413%" y="549" width="0.0803%" height="15" fill="rgb(249,179,20)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.1413%" y="533" width="0.0803%" height="15" fill="rgb(230,204,44)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.1413%" y="517" width="0.0803%" height="15" fill="rgb(233,229,46)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.1413%" y="501" width="0.0803%" height="15" fill="rgb(210,154,35)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.1413%" y="485" width="0.0803%" height="15" fill="rgb(220,178,16)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.1413%" y="469" width="0.0803%" height="15" fill="rgb(243,0,53)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.1413%" y="453" width="0.0803%" height="15" fill="rgb(223,221,47)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.1413%" y="437" width="0.0803%" height="15" fill="rgb(233,82,15)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.1413%" y="421" width="0.0803%" height="15" fill="rgb(222,8,38)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.1413%" y="405" width="0.0803%" height="15" fill="rgb(241,28,48)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1413%" y="389" width="0.0803%" height="15" fill="rgb(209,227,15)" fg:x="1173" fg:w="1"/><text x="94.3913%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2215%" y="629" width="0.0803%" height="15" fill="rgb(234,189,48)" fg:x="1174" fg:w="1"/><text x="94.4715%" y="639.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="94.3018%" y="629" width="0.0803%" height="15" fill="rgb(212,27,44)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.3018%" y="613" width="0.0803%" height="15" fill="rgb(249,55,42)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.3018%" y="597" width="0.0803%" height="15" fill="rgb(215,211,28)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.3018%" y="581" width="0.0803%" height="15" fill="rgb(221,155,16)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.3018%" y="565" width="0.0803%" height="15" fill="rgb(247,106,30)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.3018%" y="549" width="0.0803%" height="15" fill="rgb(230,76,31)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.3018%" y="533" width="0.0803%" height="15" fill="rgb(222,6,48)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.3018%" y="517" width="0.0803%" height="15" fill="rgb(228,82,3)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.3018%" y="501" width="0.0803%" height="15" fill="rgb(245,208,52)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.3018%" y="485" width="0.0803%" height="15" fill="rgb(218,65,17)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.3018%" y="469" width="0.0803%" height="15" fill="rgb(242,63,26)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.3018%" y="453" width="0.0803%" height="15" fill="rgb(224,119,39)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.3018%" y="437" width="0.0803%" height="15" fill="rgb(229,106,3)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3018%" y="421" width="0.0803%" height="15" fill="rgb(248,6,33)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="94.3820%" y="613" width="0.0803%" height="15" fill="rgb(226,3,49)" fg:x="1176" fg:w="1"/><text x="94.6320%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.4623%" y="581" width="0.0803%" height="15" fill="rgb(228,142,14)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.4623%" y="565" width="0.0803%" height="15" fill="rgb(241,141,54)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.4623%" y="549" width="0.0803%" height="15" fill="rgb(252,17,50)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.4623%" y="533" width="0.0803%" height="15" fill="rgb(221,120,48)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.4623%" y="517" width="0.0803%" height="15" fill="rgb(229,171,33)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.4623%" y="501" width="0.0803%" height="15" fill="rgb(236,207,21)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.4623%" y="485" width="0.0803%" height="15" fill="rgb(218,93,35)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.4623%" y="469" width="0.0803%" height="15" fill="rgb(207,101,8)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5425%" y="437" width="0.0803%" height="15" fill="rgb(237,67,44)" fg:x="1178" fg:w="1"/><text x="94.7925%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="94.4623%" y="613" width="0.2408%" height="15" fill="rgb(236,218,7)" fg:x="1177" fg:w="3"/><text x="94.7123%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="94.4623%" y="597" width="0.2408%" height="15" fill="rgb(252,207,10)" fg:x="1177" fg:w="3"/><text x="94.7123%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="94.5425%" y="581" width="0.1605%" height="15" fill="rgb(221,175,6)" fg:x="1178" fg:w="2"/><text x="94.7925%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="94.5425%" y="565" width="0.1605%" height="15" fill="rgb(230,105,53)" fg:x="1178" fg:w="2"/><text x="94.7925%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.5425%" y="549" width="0.1605%" height="15" fill="rgb(253,83,6)" fg:x="1178" fg:w="2"/><text x="94.7925%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.5425%" y="533" width="0.1605%" height="15" fill="rgb(206,198,44)" fg:x="1178" fg:w="2"/><text x="94.7925%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.5425%" y="517" width="0.1605%" height="15" fill="rgb(206,164,29)" fg:x="1178" fg:w="2"/><text x="94.7925%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.5425%" y="501" width="0.1605%" height="15" fill="rgb(215,2,50)" fg:x="1178" fg:w="2"/><text x="94.7925%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.5425%" y="485" width="0.1605%" height="15" fill="rgb(246,127,18)" fg:x="1178" fg:w="2"/><text x="94.7925%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.5425%" y="469" width="0.1605%" height="15" fill="rgb(232,6,21)" fg:x="1178" fg:w="2"/><text x="94.7925%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.5425%" y="453" width="0.1605%" height="15" fill="rgb(224,154,1)" fg:x="1178" fg:w="2"/><text x="94.7925%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.6228%" y="437" width="0.0803%" height="15" fill="rgb(248,135,32)" fg:x="1179" fg:w="1"/><text x="94.8728%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6228%" y="421" width="0.0803%" height="15" fill="rgb(253,129,38)" fg:x="1179" fg:w="1"/><text x="94.8728%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.6228%" y="405" width="0.0803%" height="15" fill="rgb(214,110,11)" fg:x="1179" fg:w="1"/><text x="94.8728%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6228%" y="389" width="0.0803%" height="15" fill="rgb(246,150,22)" fg:x="1179" fg:w="1"/><text x="94.8728%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9438%" y="581" width="0.0803%" height="15" fill="rgb(219,170,39)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9438%" y="565" width="0.0803%" height="15" fill="rgb(221,143,52)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9438%" y="549" width="0.0803%" height="15" fill="rgb(237,122,11)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9438%" y="533" width="0.0803%" height="15" fill="rgb(217,114,13)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9438%" y="517" width="0.0803%" height="15" fill="rgb(218,184,28)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9438%" y="501" width="0.0803%" height="15" fill="rgb(237,33,22)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.9438%" y="485" width="0.0803%" height="15" fill="rgb(224,56,42)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.9438%" y="469" width="0.0803%" height="15" fill="rgb(216,138,53)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.9438%" y="453" width="0.0803%" height="15" fill="rgb(233,229,40)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.9438%" y="437" width="0.0803%" height="15" fill="rgb(252,105,0)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.9438%" y="421" width="0.0803%" height="15" fill="rgb(212,75,24)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.9438%" y="405" width="0.0803%" height="15" fill="rgb(235,168,50)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.9438%" y="389" width="0.0803%" height="15" fill="rgb(247,204,12)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.9438%" y="373" width="0.0803%" height="15" fill="rgb(250,203,27)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.9438%" y="357" width="0.0803%" height="15" fill="rgb(221,215,2)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9438%" y="341" width="0.0803%" height="15" fill="rgb(242,163,47)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (6 samples, 0.48%)</title><rect x="94.7030%" y="613" width="0.4815%" height="15" fill="rgb(237,136,50)" fg:x="1180" fg:w="6"/><text x="94.9530%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="94.8636%" y="597" width="0.3210%" height="15" fill="rgb(217,201,47)" fg:x="1182" fg:w="4"/><text x="95.1136%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.0241%" y="581" width="0.1605%" height="15" fill="rgb(212,38,47)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.0241%" y="565" width="0.1605%" height="15" fill="rgb(254,113,41)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="95.0241%" y="549" width="0.1605%" height="15" fill="rgb(236,7,22)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="95.0241%" y="533" width="0.1605%" height="15" fill="rgb(235,81,25)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="95.0241%" y="517" width="0.1605%" height="15" fill="rgb(216,41,31)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.0241%" y="501" width="0.1605%" height="15" fill="rgb(249,219,15)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.0241%" y="485" width="0.1605%" height="15" fill="rgb(248,201,3)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.1043%" y="469" width="0.0803%" height="15" fill="rgb(249,141,18)" fg:x="1185" fg:w="1"/><text x="95.3543%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1846%" y="581" width="0.0803%" height="15" fill="rgb(222,32,39)" fg:x="1186" fg:w="1"/><text x="95.4346%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="95.1846%" y="613" width="0.1605%" height="15" fill="rgb(237,139,51)" fg:x="1186" fg:w="2"/><text x="95.4346%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="95.1846%" y="597" width="0.1605%" height="15" fill="rgb(218,210,4)" fg:x="1186" fg:w="2"/><text x="95.4346%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="95.2648%" y="581" width="0.0803%" height="15" fill="rgb(217,199,13)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.2648%" y="565" width="0.0803%" height="15" fill="rgb(222,118,25)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="95.2648%" y="549" width="0.0803%" height="15" fill="rgb(241,70,28)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="95.3451%" y="597" width="0.1605%" height="15" fill="rgb(205,51,41)" fg:x="1188" fg:w="2"/><text x="95.5951%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="95.3451%" y="581" width="0.1605%" height="15" fill="rgb(237,165,49)" fg:x="1188" fg:w="2"/><text x="95.5951%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="95.3451%" y="565" width="0.1605%" height="15" fill="rgb(213,10,51)" fg:x="1188" fg:w="2"/><text x="95.5951%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.4254%" y="549" width="0.0803%" height="15" fill="rgb(245,89,32)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="95.4254%" y="533" width="0.0803%" height="15" fill="rgb(249,81,54)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.4254%" y="517" width="0.0803%" height="15" fill="rgb(223,134,14)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="501" width="0.0803%" height="15" fill="rgb(233,62,37)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.4254%" y="485" width="0.0803%" height="15" fill="rgb(219,117,42)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="469" width="0.0803%" height="15" fill="rgb(248,40,28)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="453" width="0.0803%" height="15" fill="rgb(246,66,35)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="437" width="0.0803%" height="15" fill="rgb(250,229,22)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.4254%" y="421" width="0.0803%" height="15" fill="rgb(213,89,18)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="405" width="0.0803%" height="15" fill="rgb(213,122,9)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="389" width="0.0803%" height="15" fill="rgb(220,213,48)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="373" width="0.0803%" height="15" fill="rgb(244,109,54)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.4254%" y="357" width="0.0803%" height="15" fill="rgb(254,104,49)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="341" width="0.0803%" height="15" fill="rgb(219,28,32)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="325" width="0.0803%" height="15" fill="rgb(249,153,33)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="309" width="0.0803%" height="15" fill="rgb(230,116,21)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.4254%" y="293" width="0.0803%" height="15" fill="rgb(247,110,3)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.4254%" y="277" width="0.0803%" height="15" fill="rgb(227,128,3)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.4254%" y="261" width="0.0803%" height="15" fill="rgb(208,21,1)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.4254%" y="245" width="0.0803%" height="15" fill="rgb(225,24,20)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="95.4254%" y="229" width="0.0803%" height="15" fill="rgb(250,159,24)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="95.4254%" y="213" width="0.0803%" height="15" fill="rgb(214,30,53)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="95.4254%" y="197" width="0.0803%" height="15" fill="rgb(243,198,11)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="95.4254%" y="181" width="0.0803%" height="15" fill="rgb(232,33,1)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.4254%" y="165" width="0.0803%" height="15" fill="rgb(242,60,11)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.4254%" y="149" width="0.0803%" height="15" fill="rgb(241,229,34)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="95.4254%" y="133" width="0.0803%" height="15" fill="rgb(230,92,51)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="95.4254%" y="117" width="0.0803%" height="15" fill="rgb(212,209,8)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.4254%" y="101" width="0.0803%" height="15" fill="rgb(241,55,35)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="95.4254%" y="85" width="0.0803%" height="15" fill="rgb(208,187,52)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="95.4254%" y="69" width="0.0803%" height="15" fill="rgb(251,110,17)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="95.4254%" y="53" width="0.0803%" height="15" fill="rgb(246,225,54)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="95.4254%" y="37" width="0.0803%" height="15" fill="rgb(220,109,6)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5056%" y="517" width="0.0803%" height="15" fill="rgb(228,56,50)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5056%" y="501" width="0.0803%" height="15" fill="rgb(230,34,30)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5056%" y="485" width="0.0803%" height="15" fill="rgb(205,28,42)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5056%" y="469" width="0.0803%" height="15" fill="rgb(215,68,0)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5056%" y="453" width="0.0803%" height="15" fill="rgb(206,91,47)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5056%" y="437" width="0.0803%" height="15" fill="rgb(241,159,43)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5056%" y="421" width="0.0803%" height="15" fill="rgb(232,191,38)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5056%" y="405" width="0.0803%" height="15" fill="rgb(212,180,41)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5056%" y="389" width="0.0803%" height="15" fill="rgb(236,134,49)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5056%" y="373" width="0.0803%" height="15" fill="rgb(221,83,26)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5056%" y="357" width="0.0803%" height="15" fill="rgb(215,87,39)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.5056%" y="341" width="0.0803%" height="15" fill="rgb(242,28,29)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.5056%" y="325" width="0.0803%" height="15" fill="rgb(212,219,47)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.5056%" y="309" width="0.0803%" height="15" fill="rgb(221,35,20)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.5056%" y="293" width="0.0803%" height="15" fill="rgb(234,144,13)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5056%" y="277" width="0.0803%" height="15" fill="rgb(237,41,27)" fg:x="1190" fg:w="1"/><text x="95.7556%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (41 samples, 3.29%)</title><rect x="92.3756%" y="645" width="3.2905%" height="15" fill="rgb(253,175,5)" fg:x="1151" fg:w="41"/><text x="92.6256%" y="655.50">&lt;pl..</text></g><g><title>plugins_core::tools::move_between (16 samples, 1.28%)</title><rect x="94.3820%" y="629" width="1.2841%" height="15" fill="rgb(235,210,51)" fg:x="1176" fg:w="16"/><text x="94.6320%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="95.3451%" y="613" width="0.3210%" height="15" fill="rgb(241,180,35)" fg:x="1188" fg:w="4"/><text x="95.5951%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="95.5056%" y="597" width="0.1605%" height="15" fill="rgb(219,45,16)" fg:x="1190" fg:w="2"/><text x="95.7556%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="95.5056%" y="581" width="0.1605%" height="15" fill="rgb(247,212,4)" fg:x="1190" fg:w="2"/><text x="95.7556%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="95.5056%" y="565" width="0.1605%" height="15" fill="rgb(224,211,1)" fg:x="1190" fg:w="2"/><text x="95.7556%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.5056%" y="549" width="0.1605%" height="15" fill="rgb(210,193,36)" fg:x="1190" fg:w="2"/><text x="95.7556%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.5056%" y="533" width="0.1605%" height="15" fill="rgb(215,121,20)" fg:x="1190" fg:w="2"/><text x="95.7556%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.5859%" y="517" width="0.0803%" height="15" fill="rgb(238,146,2)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.5859%" y="501" width="0.0803%" height="15" fill="rgb(254,123,45)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.5859%" y="485" width="0.0803%" height="15" fill="rgb(225,126,11)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6661%" y="581" width="0.0803%" height="15" fill="rgb(239,12,5)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6661%" y="565" width="0.0803%" height="15" fill="rgb(241,207,14)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="95.7464%" y="565" width="0.0803%" height="15" fill="rgb(227,134,33)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.7464%" y="549" width="0.0803%" height="15" fill="rgb(221,40,52)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="95.7464%" y="533" width="0.0803%" height="15" fill="rgb(206,93,8)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="95.7464%" y="517" width="0.0803%" height="15" fill="rgb(242,160,22)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7464%" y="501" width="0.0803%" height="15" fill="rgb(232,204,40)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7464%" y="485" width="0.0803%" height="15" fill="rgb(247,210,47)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7464%" y="469" width="0.0803%" height="15" fill="rgb(211,91,7)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.7464%" y="453" width="0.0803%" height="15" fill="rgb(252,160,34)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.7464%" y="437" width="0.0803%" height="15" fill="rgb(220,34,39)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.7464%" y="421" width="0.0803%" height="15" fill="rgb(247,49,38)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.7464%" y="405" width="0.0803%" height="15" fill="rgb(228,175,44)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.7464%" y="389" width="0.0803%" height="15" fill="rgb(218,214,32)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.7464%" y="373" width="0.0803%" height="15" fill="rgb(213,50,12)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.7464%" y="357" width="0.0803%" height="15" fill="rgb(219,35,41)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.7464%" y="341" width="0.0803%" height="15" fill="rgb(219,18,38)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.7464%" y="325" width="0.0803%" height="15" fill="rgb(223,217,6)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7464%" y="309" width="0.0803%" height="15" fill="rgb(208,193,35)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8266%" y="501" width="0.0803%" height="15" fill="rgb(254,212,54)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8266%" y="485" width="0.0803%" height="15" fill="rgb(205,10,2)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.8266%" y="469" width="0.0803%" height="15" fill="rgb(230,133,29)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.8266%" y="453" width="0.0803%" height="15" fill="rgb(226,14,15)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.8266%" y="437" width="0.0803%" height="15" fill="rgb(226,140,54)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.8266%" y="421" width="0.0803%" height="15" fill="rgb(250,47,41)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.8266%" y="405" width="0.0803%" height="15" fill="rgb(227,218,41)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.8266%" y="389" width="0.0803%" height="15" fill="rgb(254,183,7)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.8266%" y="373" width="0.0803%" height="15" fill="rgb(206,84,53)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.8266%" y="357" width="0.0803%" height="15" fill="rgb(213,177,2)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.8266%" y="341" width="0.0803%" height="15" fill="rgb(234,28,29)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8266%" y="325" width="0.0803%" height="15" fill="rgb(248,211,38)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.8266%" y="533" width="0.1605%" height="15" fill="rgb(246,30,0)" fg:x="1194" fg:w="2"/><text x="96.0766%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.8266%" y="517" width="0.1605%" height="15" fill="rgb(244,115,24)" fg:x="1194" fg:w="2"/><text x="96.0766%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9069%" y="501" width="0.0803%" height="15" fill="rgb(226,193,14)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (5 samples, 0.40%)</title><rect x="95.6661%" y="597" width="0.4013%" height="15" fill="rgb(211,196,48)" fg:x="1192" fg:w="5"/><text x="95.9161%" y="607.50"></text></g><g><title>plugins_core::tools::contained_by (4 samples, 0.32%)</title><rect x="95.7464%" y="581" width="0.3210%" height="15" fill="rgb(235,32,20)" fg:x="1193" fg:w="4"/><text x="95.9964%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="95.8266%" y="565" width="0.2408%" height="15" fill="rgb(251,151,49)" fg:x="1194" fg:w="3"/><text x="96.0766%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="95.8266%" y="549" width="0.2408%" height="15" fill="rgb(254,141,38)" fg:x="1194" fg:w="3"/><text x="96.0766%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="95.9872%" y="533" width="0.0803%" height="15" fill="rgb(209,118,44)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="95.9872%" y="517" width="0.0803%" height="15" fill="rgb(205,81,4)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.9872%" y="501" width="0.0803%" height="15" fill="rgb(241,25,6)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.0674%" y="501" width="0.1605%" height="15" fill="rgb(212,179,29)" fg:x="1197" fg:w="2"/><text x="96.3174%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1477%" y="485" width="0.0803%" height="15" fill="rgb(241,40,32)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1477%" y="469" width="0.0803%" height="15" fill="rgb(223,35,2)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1477%" y="453" width="0.0803%" height="15" fill="rgb(221,125,54)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1477%" y="437" width="0.0803%" height="15" fill="rgb(230,5,49)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2279%" y="501" width="0.0803%" height="15" fill="rgb(221,157,7)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2279%" y="485" width="0.0803%" height="15" fill="rgb(242,163,10)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.2279%" y="469" width="0.0803%" height="15" fill="rgb(232,30,2)" fg:x="1199" fg:w="1"/><text x="96.4779%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.3082%" y="405" width="0.0803%" height="15" fill="rgb(245,102,40)" fg:x="1200" fg:w="1"/><text x="96.5582%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3082%" y="389" width="0.0803%" height="15" fill="rgb(242,10,41)" fg:x="1200" fg:w="1"/><text x="96.5582%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.40%)</title><rect x="96.0674%" y="597" width="0.4013%" height="15" fill="rgb(236,184,36)" fg:x="1197" fg:w="5"/><text x="96.3174%" y="607.50"></text></g><g><title>plugins_core::finding::matches_description (5 samples, 0.40%)</title><rect x="96.0674%" y="581" width="0.4013%" height="15" fill="rgb(247,147,48)" fg:x="1197" fg:w="5"/><text x="96.3174%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::name (5 samples, 0.40%)</title><rect x="96.0674%" y="565" width="0.4013%" height="15" fill="rgb(226,166,2)" fg:x="1197" fg:w="5"/><text x="96.3174%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="96.0674%" y="549" width="0.4013%" height="15" fill="rgb(251,196,7)" fg:x="1197" fg:w="5"/><text x="96.3174%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="96.0674%" y="533" width="0.4013%" height="15" fill="rgb(241,40,13)" fg:x="1197" fg:w="5"/><text x="96.3174%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="96.0674%" y="517" width="0.4013%" height="15" fill="rgb(254,4,12)" fg:x="1197" fg:w="5"/><text x="96.3174%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3082%" y="501" width="0.1605%" height="15" fill="rgb(244,139,49)" fg:x="1200" fg:w="2"/><text x="96.5582%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3082%" y="485" width="0.1605%" height="15" fill="rgb(227,28,42)" fg:x="1200" fg:w="2"/><text x="96.5582%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3082%" y="469" width="0.1605%" height="15" fill="rgb(231,135,32)" fg:x="1200" fg:w="2"/><text x="96.5582%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3082%" y="453" width="0.1605%" height="15" fill="rgb(244,182,3)" fg:x="1200" fg:w="2"/><text x="96.5582%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.3082%" y="437" width="0.1605%" height="15" fill="rgb(247,46,19)" fg:x="1200" fg:w="2"/><text x="96.5582%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3082%" y="421" width="0.1605%" height="15" fill="rgb(251,179,10)" fg:x="1200" fg:w="2"/><text x="96.5582%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.3884%" y="405" width="0.0803%" height="15" fill="rgb(229,222,18)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3884%" y="389" width="0.0803%" height="15" fill="rgb(251,107,20)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.3884%" y="373" width="0.0803%" height="15" fill="rgb(233,193,19)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3884%" y="357" width="0.0803%" height="15" fill="rgb(229,146,53)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3884%" y="341" width="0.0803%" height="15" fill="rgb(244,52,11)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (11 samples, 0.88%)</title><rect x="95.6661%" y="629" width="0.8828%" height="15" fill="rgb(245,211,46)" fg:x="1192" fg:w="11"/><text x="95.9161%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (11 samples, 0.88%)</title><rect x="95.6661%" y="613" width="0.8828%" height="15" fill="rgb(213,8,31)" fg:x="1192" fg:w="11"/><text x="95.9161%" y="623.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="96.4687%" y="597" width="0.0803%" height="15" fill="rgb(205,101,39)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4687%" y="581" width="0.0803%" height="15" fill="rgb(212,157,1)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4687%" y="565" width="0.0803%" height="15" fill="rgb(232,30,46)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4687%" y="549" width="0.0803%" height="15" fill="rgb(216,201,6)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.4687%" y="533" width="0.0803%" height="15" fill="rgb(209,18,6)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.4687%" y="517" width="0.0803%" height="15" fill="rgb(219,138,3)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.4687%" y="501" width="0.0803%" height="15" fill="rgb(210,91,46)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4687%" y="485" width="0.0803%" height="15" fill="rgb(241,80,44)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4687%" y="469" width="0.0803%" height="15" fill="rgb(236,205,36)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.4687%" y="453" width="0.0803%" height="15" fill="rgb(205,59,37)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.4687%" y="437" width="0.0803%" height="15" fill="rgb(239,166,39)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.4687%" y="421" width="0.0803%" height="15" fill="rgb(239,146,40)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.4687%" y="405" width="0.0803%" height="15" fill="rgb(231,11,52)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.4687%" y="389" width="0.0803%" height="15" fill="rgb(253,21,37)" fg:x="1202" fg:w="1"/><text x="96.7187%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.5490%" y="549" width="0.0803%" height="15" fill="rgb(224,87,39)" fg:x="1203" fg:w="1"/><text x="96.7990%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.5490%" y="533" width="0.0803%" height="15" fill="rgb(249,15,46)" fg:x="1203" fg:w="1"/><text x="96.7990%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.5490%" y="517" width="0.0803%" height="15" fill="rgb(250,37,51)" fg:x="1203" fg:w="1"/><text x="96.7990%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.5490%" y="501" width="0.0803%" height="15" fill="rgb(205,185,43)" fg:x="1203" fg:w="1"/><text x="96.7990%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.6292%" y="549" width="0.0803%" height="15" fill="rgb(206,65,41)" fg:x="1204" fg:w="1"/><text x="96.8792%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.6292%" y="533" width="0.0803%" height="15" fill="rgb(236,159,32)" fg:x="1204" fg:w="1"/><text x="96.8792%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.6292%" y="517" width="0.0803%" height="15" fill="rgb(228,199,27)" fg:x="1204" fg:w="1"/><text x="96.8792%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.6292%" y="501" width="0.0803%" height="15" fill="rgb(212,0,37)" fg:x="1204" fg:w="1"/><text x="96.8792%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.6292%" y="485" width="0.0803%" height="15" fill="rgb(248,50,11)" fg:x="1204" fg:w="1"/><text x="96.8792%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (3 samples, 0.24%)</title><rect x="96.5490%" y="629" width="0.2408%" height="15" fill="rgb(231,164,25)" fg:x="1203" fg:w="3"/><text x="96.7990%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="96.5490%" y="613" width="0.2408%" height="15" fill="rgb(238,38,39)" fg:x="1203" fg:w="3"/><text x="96.7990%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="96.5490%" y="597" width="0.2408%" height="15" fill="rgb(210,15,50)" fg:x="1203" fg:w="3"/><text x="96.7990%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="96.5490%" y="581" width="0.2408%" height="15" fill="rgb(251,126,36)" fg:x="1203" fg:w="3"/><text x="96.7990%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="96.5490%" y="565" width="0.2408%" height="15" fill="rgb(243,59,26)" fg:x="1203" fg:w="3"/><text x="96.7990%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7095%" y="549" width="0.0803%" height="15" fill="rgb(215,24,30)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7095%" y="533" width="0.0803%" height="15" fill="rgb(253,50,51)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7095%" y="517" width="0.0803%" height="15" fill="rgb(252,2,16)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7095%" y="501" width="0.0803%" height="15" fill="rgb(209,123,36)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.7095%" y="485" width="0.0803%" height="15" fill="rgb(245,60,15)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7095%" y="469" width="0.0803%" height="15" fill="rgb(246,4,13)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7095%" y="453" width="0.0803%" height="15" fill="rgb(210,223,46)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7095%" y="437" width="0.0803%" height="15" fill="rgb(248,1,9)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7095%" y="421" width="0.0803%" height="15" fill="rgb(254,2,34)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7095%" y="405" width="0.0803%" height="15" fill="rgb(239,176,1)" fg:x="1205" fg:w="1"/><text x="96.9595%" y="415.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="96.7897%" y="629" width="0.1605%" height="15" fill="rgb(250,25,32)" fg:x="1206" fg:w="2"/><text x="97.0397%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.7897%" y="613" width="0.1605%" height="15" fill="rgb(225,28,39)" fg:x="1206" fg:w="2"/><text x="97.0397%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8700%" y="597" width="0.0803%" height="15" fill="rgb(230,166,37)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8700%" y="581" width="0.0803%" height="15" fill="rgb(246,220,4)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.8700%" y="565" width="0.0803%" height="15" fill="rgb(219,119,33)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.8700%" y="549" width="0.0803%" height="15" fill="rgb(221,207,38)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.8700%" y="533" width="0.0803%" height="15" fill="rgb(214,153,5)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8700%" y="517" width="0.0803%" height="15" fill="rgb(223,50,16)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8700%" y="501" width="0.0803%" height="15" fill="rgb(209,207,12)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.8700%" y="485" width="0.0803%" height="15" fill="rgb(207,3,46)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.8700%" y="469" width="0.0803%" height="15" fill="rgb(232,45,53)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.8700%" y="453" width="0.0803%" height="15" fill="rgb(206,140,15)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.8700%" y="437" width="0.0803%" height="15" fill="rgb(245,66,17)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8700%" y="421" width="0.0803%" height="15" fill="rgb(221,25,37)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="431.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="96.9502%" y="629" width="0.0803%" height="15" fill="rgb(215,99,47)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="96.9502%" y="613" width="0.0803%" height="15" fill="rgb(219,154,44)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="96.9502%" y="597" width="0.0803%" height="15" fill="rgb(210,197,36)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.9502%" y="581" width="0.0803%" height="15" fill="rgb(217,137,10)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1108%" y="485" width="0.0803%" height="15" fill="rgb(240,216,26)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1108%" y="469" width="0.0803%" height="15" fill="rgb(242,76,17)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1108%" y="453" width="0.0803%" height="15" fill="rgb(243,142,51)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1108%" y="437" width="0.0803%" height="15" fill="rgb(233,109,46)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1108%" y="421" width="0.0803%" height="15" fill="rgb(252,45,32)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1108%" y="405" width="0.0803%" height="15" fill="rgb(210,69,52)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1108%" y="389" width="0.0803%" height="15" fill="rgb(242,30,2)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1108%" y="373" width="0.0803%" height="15" fill="rgb(246,137,1)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1108%" y="357" width="0.0803%" height="15" fill="rgb(221,205,25)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.1108%" y="341" width="0.0803%" height="15" fill="rgb(224,44,43)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.1108%" y="325" width="0.0803%" height="15" fill="rgb(209,81,13)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.1108%" y="309" width="0.0803%" height="15" fill="rgb(227,88,4)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1108%" y="293" width="0.0803%" height="15" fill="rgb(228,118,49)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1108%" y="533" width="0.1605%" height="15" fill="rgb(225,215,27)" fg:x="1210" fg:w="2"/><text x="97.3608%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1108%" y="517" width="0.1605%" height="15" fill="rgb(235,226,1)" fg:x="1210" fg:w="2"/><text x="97.3608%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1108%" y="501" width="0.1605%" height="15" fill="rgb(205,107,17)" fg:x="1210" fg:w="2"/><text x="97.3608%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1910%" y="485" width="0.0803%" height="15" fill="rgb(247,85,8)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="97.1108%" y="581" width="0.2408%" height="15" fill="rgb(230,220,20)" fg:x="1210" fg:w="3"/><text x="97.3608%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="97.1108%" y="565" width="0.2408%" height="15" fill="rgb(237,22,6)" fg:x="1210" fg:w="3"/><text x="97.3608%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.1108%" y="549" width="0.2408%" height="15" fill="rgb(253,39,1)" fg:x="1210" fg:w="3"/><text x="97.3608%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2713%" y="533" width="0.0803%" height="15" fill="rgb(251,206,50)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2713%" y="517" width="0.0803%" height="15" fill="rgb(239,162,11)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2713%" y="501" width="0.0803%" height="15" fill="rgb(234,164,6)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2713%" y="485" width="0.0803%" height="15" fill="rgb(238,112,10)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.2713%" y="469" width="0.0803%" height="15" fill="rgb(232,78,29)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2713%" y="453" width="0.0803%" height="15" fill="rgb(232,20,13)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2713%" y="437" width="0.0803%" height="15" fill="rgb(222,175,9)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2713%" y="421" width="0.0803%" height="15" fill="rgb(233,61,14)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2713%" y="405" width="0.0803%" height="15" fill="rgb(224,152,29)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2713%" y="389" width="0.0803%" height="15" fill="rgb(232,26,6)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.2713%" y="373" width="0.0803%" height="15" fill="rgb(210,116,11)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3515%" y="517" width="0.0803%" height="15" fill="rgb(238,213,15)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3515%" y="501" width="0.0803%" height="15" fill="rgb(236,177,32)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3515%" y="485" width="0.0803%" height="15" fill="rgb(230,36,43)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3515%" y="469" width="0.0803%" height="15" fill="rgb(212,76,23)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3515%" y="453" width="0.0803%" height="15" fill="rgb(225,168,24)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.3515%" y="533" width="0.1605%" height="15" fill="rgb(206,40,44)" fg:x="1213" fg:w="2"/><text x="97.6015%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4318%" y="517" width="0.0803%" height="15" fill="rgb(251,213,6)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5120%" y="437" width="0.0803%" height="15" fill="rgb(220,7,47)" fg:x="1215" fg:w="1"/><text x="97.7620%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="97.0305%" y="613" width="0.6421%" height="15" fill="rgb(254,130,53)" fg:x="1209" fg:w="8"/><text x="97.2805%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="97.1108%" y="597" width="0.5618%" height="15" fill="rgb(240,2,46)" fg:x="1210" fg:w="7"/><text x="97.3608%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="97.3515%" y="581" width="0.3210%" height="15" fill="rgb(252,144,40)" fg:x="1213" fg:w="4"/><text x="97.6015%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="97.3515%" y="565" width="0.3210%" height="15" fill="rgb(226,23,10)" fg:x="1213" fg:w="4"/><text x="97.6015%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="97.3515%" y="549" width="0.3210%" height="15" fill="rgb(212,204,35)" fg:x="1213" fg:w="4"/><text x="97.6015%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.5120%" y="533" width="0.1605%" height="15" fill="rgb(218,201,15)" fg:x="1215" fg:w="2"/><text x="97.7620%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5120%" y="517" width="0.1605%" height="15" fill="rgb(224,197,5)" fg:x="1215" fg:w="2"/><text x="97.7620%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.5120%" y="501" width="0.1605%" height="15" fill="rgb(224,185,18)" fg:x="1215" fg:w="2"/><text x="97.7620%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5120%" y="485" width="0.1605%" height="15" fill="rgb(251,71,45)" fg:x="1215" fg:w="2"/><text x="97.7620%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="97.5120%" y="469" width="0.1605%" height="15" fill="rgb(216,74,24)" fg:x="1215" fg:w="2"/><text x="97.7620%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5120%" y="453" width="0.1605%" height="15" fill="rgb(250,36,51)" fg:x="1215" fg:w="2"/><text x="97.7620%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.5923%" y="437" width="0.0803%" height="15" fill="rgb(209,224,28)" fg:x="1216" fg:w="1"/><text x="97.8423%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5923%" y="421" width="0.0803%" height="15" fill="rgb(228,5,10)" fg:x="1216" fg:w="1"/><text x="97.8423%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.5923%" y="405" width="0.0803%" height="15" fill="rgb(250,57,40)" fg:x="1216" fg:w="1"/><text x="97.8423%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5923%" y="389" width="0.0803%" height="15" fill="rgb(228,194,41)" fg:x="1216" fg:w="1"/><text x="97.8423%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="97.5923%" y="373" width="0.0803%" height="15" fill="rgb(206,68,23)" fg:x="1216" fg:w="1"/><text x="97.8423%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.7528%" y="581" width="0.1605%" height="15" fill="rgb(230,33,29)" fg:x="1218" fg:w="2"/><text x="98.0028%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.7528%" y="565" width="0.1605%" height="15" fill="rgb(210,39,32)" fg:x="1218" fg:w="2"/><text x="98.0028%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8331%" y="549" width="0.0803%" height="15" fill="rgb(236,89,23)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8331%" y="533" width="0.0803%" height="15" fill="rgb(218,52,52)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8331%" y="517" width="0.0803%" height="15" fill="rgb(235,154,5)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.8331%" y="501" width="0.0803%" height="15" fill="rgb(223,168,9)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.8331%" y="485" width="0.0803%" height="15" fill="rgb(220,8,33)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.8331%" y="469" width="0.0803%" height="15" fill="rgb(216,176,3)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.8331%" y="453" width="0.0803%" height="15" fill="rgb(254,150,22)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.8331%" y="437" width="0.0803%" height="15" fill="rgb(231,61,53)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.9133%" y="549" width="0.0803%" height="15" fill="rgb(249,177,41)" fg:x="1220" fg:w="1"/><text x="98.1633%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9133%" y="533" width="0.0803%" height="15" fill="rgb(221,122,7)" fg:x="1220" fg:w="1"/><text x="98.1633%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.9133%" y="517" width="0.0803%" height="15" fill="rgb(215,115,7)" fg:x="1220" fg:w="1"/><text x="98.1633%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="97.6726%" y="613" width="0.4013%" height="15" fill="rgb(218,108,33)" fg:x="1217" fg:w="5"/><text x="97.9226%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="97.6726%" y="597" width="0.4013%" height="15" fill="rgb(221,205,39)" fg:x="1217" fg:w="5"/><text x="97.9226%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.9133%" y="581" width="0.1605%" height="15" fill="rgb(220,171,18)" fg:x="1220" fg:w="2"/><text x="98.1633%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.9133%" y="565" width="0.1605%" height="15" fill="rgb(236,188,29)" fg:x="1220" fg:w="2"/><text x="98.1633%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9936%" y="549" width="0.0803%" height="15" fill="rgb(239,29,5)" fg:x="1221" fg:w="1"/><text x="98.2436%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9936%" y="533" width="0.0803%" height="15" fill="rgb(236,114,44)" fg:x="1221" fg:w="1"/><text x="98.2436%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="98.0738%" y="613" width="0.1605%" height="15" fill="rgb(239,214,48)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="98.0738%" y="597" width="0.1605%" height="15" fill="rgb(241,56,8)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1541%" y="581" width="0.0803%" height="15" fill="rgb(228,201,0)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1541%" y="565" width="0.0803%" height="15" fill="rgb(226,219,34)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1541%" y="549" width="0.0803%" height="15" fill="rgb(209,204,54)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.1541%" y="533" width="0.0803%" height="15" fill="rgb(251,160,17)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.1541%" y="517" width="0.0803%" height="15" fill="rgb(235,15,25)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.1541%" y="501" width="0.0803%" height="15" fill="rgb(216,209,28)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1541%" y="485" width="0.0803%" height="15" fill="rgb(248,123,21)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1541%" y="469" width="0.0803%" height="15" fill="rgb(226,138,44)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.1541%" y="453" width="0.0803%" height="15" fill="rgb(211,104,54)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.1541%" y="437" width="0.0803%" height="15" fill="rgb(241,198,15)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.1541%" y="421" width="0.0803%" height="15" fill="rgb(227,155,54)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.1541%" y="405" width="0.0803%" height="15" fill="rgb(225,131,31)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1541%" y="389" width="0.0803%" height="15" fill="rgb(242,40,17)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="98.3146%" y="597" width="0.0803%" height="15" fill="rgb(254,57,35)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="98.3146%" y="581" width="0.0803%" height="15" fill="rgb(240,64,32)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.3146%" y="565" width="0.0803%" height="15" fill="rgb(251,136,26)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.3146%" y="549" width="0.0803%" height="15" fill="rgb(208,60,54)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.3146%" y="533" width="0.0803%" height="15" fill="rgb(220,13,12)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3146%" y="517" width="0.0803%" height="15" fill="rgb(213,149,1)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3146%" y="501" width="0.0803%" height="15" fill="rgb(212,191,39)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="98.2343%" y="613" width="0.2408%" height="15" fill="rgb(215,221,42)" fg:x="1224" fg:w="3"/><text x="98.4843%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="98.3949%" y="597" width="0.0803%" height="15" fill="rgb(244,79,23)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.3949%" y="581" width="0.0803%" height="15" fill="rgb(247,17,29)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="98.3949%" y="565" width="0.0803%" height="15" fill="rgb(251,221,21)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="98.3949%" y="549" width="0.0803%" height="15" fill="rgb(207,202,34)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.3949%" y="533" width="0.0803%" height="15" fill="rgb(217,4,34)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.3949%" y="517" width="0.0803%" height="15" fill="rgb(253,17,16)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.3949%" y="501" width="0.0803%" height="15" fill="rgb(223,91,48)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.3949%" y="485" width="0.0803%" height="15" fill="rgb(244,191,22)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="98.3949%" y="469" width="0.0803%" height="15" fill="rgb(211,107,14)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="479.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="98.3949%" y="453" width="0.0803%" height="15" fill="rgb(232,81,23)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.3949%" y="437" width="0.0803%" height="15" fill="rgb(237,126,14)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.3949%" y="421" width="0.0803%" height="15" fill="rgb(230,65,39)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="98.3949%" y="405" width="0.0803%" height="15" fill="rgb(208,106,41)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="98.3949%" y="389" width="0.0803%" height="15" fill="rgb(206,125,25)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="98.3949%" y="373" width="0.0803%" height="15" fill="rgb(250,24,29)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="98.3949%" y="357" width="0.0803%" height="15" fill="rgb(226,49,32)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.3949%" y="341" width="0.0803%" height="15" fill="rgb(217,110,16)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (37 samples, 2.97%)</title><rect x="95.6661%" y="645" width="2.9695%" height="15" fill="rgb(252,16,53)" fg:x="1192" fg:w="37"/><text x="95.9161%" y="655.50">&lt;pl..</text></g><g><title>plugins_core::tools::move_between (20 samples, 1.61%)</title><rect x="97.0305%" y="629" width="1.6051%" height="15" fill="rgb(238,163,11)" fg:x="1209" fg:w="20"/><text x="97.2805%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="98.4751%" y="613" width="0.1605%" height="15" fill="rgb(206,210,1)" fg:x="1227" fg:w="2"/><text x="98.7251%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.5554%" y="597" width="0.0803%" height="15" fill="rgb(229,8,25)" fg:x="1228" fg:w="1"/><text x="98.8054%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (88 samples, 7.06%)</title><rect x="91.6533%" y="837" width="7.0626%" height="15" fill="rgb(247,155,23)" fg:x="1142" fg:w="88"/><text x="91.9033%" y="847.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (88 samples, 7.06%)</title><rect x="91.6533%" y="821" width="7.0626%" height="15" fill="rgb(207,26,7)" fg:x="1142" fg:w="88"/><text x="91.9033%" y="831.50">kernel::p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (88 samples, 7.06%)</title><rect x="91.6533%" y="805" width="7.0626%" height="15" fill="rgb(215,179,12)" fg:x="1142" fg:w="88"/><text x="91.9033%" y="815.50">kernel::p..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (88 samples, 7.06%)</title><rect x="91.6533%" y="789" width="7.0626%" height="15" fill="rgb(238,208,11)" fg:x="1142" fg:w="88"/><text x="91.9033%" y="799.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (79 samples, 6.34%)</title><rect x="92.3756%" y="773" width="6.3403%" height="15" fill="rgb(238,102,42)" fg:x="1151" fg:w="79"/><text x="92.6256%" y="783.50">kernel::..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (79 samples, 6.34%)</title><rect x="92.3756%" y="757" width="6.3403%" height="15" fill="rgb(239,35,9)" fg:x="1151" fg:w="79"/><text x="92.6256%" y="767.50">&lt;plugins..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (79 samples, 6.34%)</title><rect x="92.3756%" y="741" width="6.3403%" height="15" fill="rgb(244,182,30)" fg:x="1151" fg:w="79"/><text x="92.6256%" y="751.50">kernel::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (79 samples, 6.34%)</title><rect x="92.3756%" y="725" width="6.3403%" height="15" fill="rgb(232,181,23)" fg:x="1151" fg:w="79"/><text x="92.6256%" y="735.50">core::op..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (79 samples, 6.34%)</title><rect x="92.3756%" y="709" width="6.3403%" height="15" fill="rgb(242,154,29)" fg:x="1151" fg:w="79"/><text x="92.6256%" y="719.50">kernel::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (79 samples, 6.34%)</title><rect x="92.3756%" y="693" width="6.3403%" height="15" fill="rgb(219,23,2)" fg:x="1151" fg:w="79"/><text x="92.6256%" y="703.50">core::op..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (79 samples, 6.34%)</title><rect x="92.3756%" y="677" width="6.3403%" height="15" fill="rgb(234,94,43)" fg:x="1151" fg:w="79"/><text x="92.6256%" y="687.50">&lt;alloc::..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (79 samples, 6.34%)</title><rect x="92.3756%" y="661" width="6.3403%" height="15" fill="rgb(223,55,45)" fg:x="1151" fg:w="79"/><text x="92.6256%" y="671.50">&lt;engine:..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (1 samples, 0.08%)</title><rect x="98.6356%" y="645" width="0.0803%" height="15" fill="rgb(241,215,54)" fg:x="1229" fg:w="1"/><text x="98.8856%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (1 samples, 0.08%)</title><rect x="98.6356%" y="629" width="0.0803%" height="15" fill="rgb(247,63,53)" fg:x="1229" fg:w="1"/><text x="98.8856%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.7159%" y="773" width="0.0803%" height="15" fill="rgb(220,166,7)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.7159%" y="757" width="0.0803%" height="15" fill="rgb(248,53,45)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.7159%" y="741" width="0.0803%" height="15" fill="rgb(224,207,20)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7159%" y="725" width="0.0803%" height="15" fill="rgb(244,185,11)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7159%" y="709" width="0.0803%" height="15" fill="rgb(230,13,42)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7159%" y="693" width="0.0803%" height="15" fill="rgb(243,191,18)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7159%" y="677" width="0.0803%" height="15" fill="rgb(249,135,15)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.7159%" y="661" width="0.0803%" height="15" fill="rgb(229,26,35)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7159%" y="645" width="0.0803%" height="15" fill="rgb(216,191,16)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7159%" y="629" width="0.0803%" height="15" fill="rgb(242,18,7)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7159%" y="613" width="0.0803%" height="15" fill="rgb(205,128,17)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7159%" y="597" width="0.0803%" height="15" fill="rgb(229,199,44)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7159%" y="581" width="0.0803%" height="15" fill="rgb(234,222,3)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="98.7159%" y="805" width="0.1605%" height="15" fill="rgb(220,170,20)" fg:x="1230" fg:w="2"/><text x="98.9659%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="98.7159%" y="789" width="0.1605%" height="15" fill="rgb(207,138,8)" fg:x="1230" fg:w="2"/><text x="98.9659%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.7961%" y="773" width="0.0803%" height="15" fill="rgb(244,130,36)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.7961%" y="757" width="0.0803%" height="15" fill="rgb(207,197,52)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.7961%" y="741" width="0.0803%" height="15" fill="rgb(206,9,21)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7961%" y="725" width="0.0803%" height="15" fill="rgb(250,15,47)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7961%" y="709" width="0.0803%" height="15" fill="rgb(235,202,14)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="719.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="98.8764%" y="789" width="0.0803%" height="15" fill="rgb(211,180,47)" fg:x="1232" fg:w="1"/><text x="99.1264%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8764%" y="773" width="0.0803%" height="15" fill="rgb(209,61,11)" fg:x="1232" fg:w="1"/><text x="99.1264%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8764%" y="757" width="0.0803%" height="15" fill="rgb(243,197,29)" fg:x="1232" fg:w="1"/><text x="99.1264%" y="767.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8764%" y="741" width="0.0803%" height="15" fill="rgb(216,185,16)" fg:x="1232" fg:w="1"/><text x="99.1264%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8764%" y="725" width="0.0803%" height="15" fill="rgb(248,5,15)" fg:x="1232" fg:w="1"/><text x="99.1264%" y="735.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9567%" y="709" width="0.0803%" height="15" fill="rgb(240,39,41)" fg:x="1233" fg:w="1"/><text x="99.2067%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9567%" y="693" width="0.0803%" height="15" fill="rgb(224,220,43)" fg:x="1233" fg:w="1"/><text x="99.2067%" y="703.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.9567%" y="677" width="0.0803%" height="15" fill="rgb(215,21,24)" fg:x="1233" fg:w="1"/><text x="99.2067%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9567%" y="661" width="0.0803%" height="15" fill="rgb(220,102,8)" fg:x="1233" fg:w="1"/><text x="99.2067%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9567%" y="645" width="0.0803%" height="15" fill="rgb(225,185,10)" fg:x="1233" fg:w="1"/><text x="99.2067%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9567%" y="629" width="0.0803%" height="15" fill="rgb(212,108,24)" fg:x="1233" fg:w="1"/><text x="99.2067%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="98.8764%" y="805" width="0.2408%" height="15" fill="rgb(237,27,0)" fg:x="1232" fg:w="3"/><text x="99.1264%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.9567%" y="789" width="0.1605%" height="15" fill="rgb(212,106,38)" fg:x="1233" fg:w="2"/><text x="99.2067%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.9567%" y="773" width="0.1605%" height="15" fill="rgb(210,125,30)" fg:x="1233" fg:w="2"/><text x="99.2067%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.9567%" y="757" width="0.1605%" height="15" fill="rgb(215,219,1)" fg:x="1233" fg:w="2"/><text x="99.2067%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.9567%" y="741" width="0.1605%" height="15" fill="rgb(223,10,12)" fg:x="1233" fg:w="2"/><text x="99.2067%" y="751.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.9567%" y="725" width="0.1605%" height="15" fill="rgb(245,40,34)" fg:x="1233" fg:w="2"/><text x="99.2067%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0369%" y="709" width="0.0803%" height="15" fill="rgb(211,185,19)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="719.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0369%" y="693" width="0.0803%" height="15" fill="rgb(243,190,43)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.0369%" y="677" width="0.0803%" height="15" fill="rgb(232,208,29)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0369%" y="661" width="0.0803%" height="15" fill="rgb(234,134,27)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0369%" y="645" width="0.0803%" height="15" fill="rgb(225,41,29)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="98.7159%" y="821" width="0.4815%" height="15" fill="rgb(241,214,44)" fg:x="1230" fg:w="6"/><text x="98.9659%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.1172%" y="805" width="0.0803%" height="15" fill="rgb(205,219,41)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1172%" y="789" width="0.0803%" height="15" fill="rgb(226,15,26)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="98.7159%" y="837" width="0.5618%" height="15" fill="rgb(210,83,41)" fg:x="1230" fg:w="7"/><text x="98.9659%" y="847.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.1974%" y="821" width="0.0803%" height="15" fill="rgb(247,9,39)" fg:x="1236" fg:w="1"/><text x="99.4474%" y="831.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1974%" y="805" width="0.0803%" height="15" fill="rgb(209,37,30)" fg:x="1236" fg:w="1"/><text x="99.4474%" y="815.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.3579%" y="661" width="0.0803%" height="15" fill="rgb(248,170,46)" fg:x="1238" fg:w="1"/><text x="99.6079%" y="671.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="99.2777%" y="773" width="0.2408%" height="15" fill="rgb(237,129,44)" fg:x="1237" fg:w="3"/><text x="99.5277%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2777%" y="757" width="0.2408%" height="15" fill="rgb(225,117,51)" fg:x="1237" fg:w="3"/><text x="99.5277%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2777%" y="741" width="0.2408%" height="15" fill="rgb(212,165,2)" fg:x="1237" fg:w="3"/><text x="99.5277%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.3579%" y="725" width="0.1605%" height="15" fill="rgb(213,53,45)" fg:x="1238" fg:w="2"/><text x="99.6079%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3579%" y="709" width="0.1605%" height="15" fill="rgb(220,148,3)" fg:x="1238" fg:w="2"/><text x="99.6079%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.3579%" y="693" width="0.1605%" height="15" fill="rgb(228,37,29)" fg:x="1238" fg:w="2"/><text x="99.6079%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.3579%" y="677" width="0.1605%" height="15" fill="rgb(209,76,29)" fg:x="1238" fg:w="2"/><text x="99.6079%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4382%" y="661" width="0.0803%" height="15" fill="rgb(215,90,5)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4382%" y="645" width="0.0803%" height="15" fill="rgb(227,207,32)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4382%" y="629" width="0.0803%" height="15" fill="rgb(251,218,44)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4382%" y="613" width="0.0803%" height="15" fill="rgb(211,44,16)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4382%" y="597" width="0.0803%" height="15" fill="rgb(242,170,37)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4382%" y="581" width="0.0803%" height="15" fill="rgb(205,181,22)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4382%" y="565" width="0.0803%" height="15" fill="rgb(228,130,19)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4382%" y="549" width="0.0803%" height="15" fill="rgb(228,9,15)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5185%" y="709" width="0.0803%" height="15" fill="rgb(219,66,48)" fg:x="1240" fg:w="1"/><text x="99.7685%" y="719.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5987%" y="693" width="0.0803%" height="15" fill="rgb(234,203,10)" fg:x="1241" fg:w="1"/><text x="99.8487%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5987%" y="677" width="0.0803%" height="15" fill="rgb(219,209,1)" fg:x="1241" fg:w="1"/><text x="99.8487%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5987%" y="661" width="0.0803%" height="15" fill="rgb(206,167,9)" fg:x="1241" fg:w="1"/><text x="99.8487%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5987%" y="645" width="0.0803%" height="15" fill="rgb(210,11,39)" fg:x="1241" fg:w="1"/><text x="99.8487%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="99.2777%" y="821" width="0.4815%" height="15" fill="rgb(251,90,47)" fg:x="1237" fg:w="6"/><text x="99.5277%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="99.2777%" y="805" width="0.4815%" height="15" fill="rgb(237,7,4)" fg:x="1237" fg:w="6"/><text x="99.5277%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="99.2777%" y="789" width="0.4815%" height="15" fill="rgb(232,205,47)" fg:x="1237" fg:w="6"/><text x="99.5277%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.5185%" y="773" width="0.2408%" height="15" fill="rgb(215,86,48)" fg:x="1240" fg:w="3"/><text x="99.7685%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.5185%" y="757" width="0.2408%" height="15" fill="rgb(232,14,47)" fg:x="1240" fg:w="3"/><text x="99.7685%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="99.5185%" y="741" width="0.2408%" height="15" fill="rgb(240,28,46)" fg:x="1240" fg:w="3"/><text x="99.7685%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.5185%" y="725" width="0.2408%" height="15" fill="rgb(224,85,5)" fg:x="1240" fg:w="3"/><text x="99.7685%" y="735.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.5987%" y="709" width="0.1605%" height="15" fill="rgb(219,34,25)" fg:x="1241" fg:w="2"/><text x="99.8487%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6790%" y="693" width="0.0803%" height="15" fill="rgb(247,137,45)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6790%" y="677" width="0.0803%" height="15" fill="rgb(237,121,47)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.6790%" y="661" width="0.0803%" height="15" fill="rgb(247,148,27)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6790%" y="645" width="0.0803%" height="15" fill="rgb(220,44,0)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.6790%" y="629" width="0.0803%" height="15" fill="rgb(236,61,29)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.6790%" y="613" width="0.0803%" height="15" fill="rgb(244,180,35)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (7 samples, 0.56%)</title><rect x="99.2777%" y="837" width="0.5618%" height="15" fill="rgb(242,14,54)" fg:x="1237" fg:w="7"/><text x="99.5277%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.7592%" y="821" width="0.0803%" height="15" fill="rgb(206,24,45)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="831.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.7592%" y="805" width="0.0803%" height="15" fill="rgb(215,211,6)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.7592%" y="789" width="0.0803%" height="15" fill="rgb(207,56,2)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7592%" y="773" width="0.0803%" height="15" fill="rgb(220,135,9)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7592%" y="757" width="0.0803%" height="15" fill="rgb(214,145,52)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7592%" y="741" width="0.0803%" height="15" fill="rgb(241,83,53)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7592%" y="725" width="0.0803%" height="15" fill="rgb(222,66,13)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7592%" y="709" width="0.0803%" height="15" fill="rgb(239,164,54)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7592%" y="693" width="0.0803%" height="15" fill="rgb(216,189,13)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7592%" y="677" width="0.0803%" height="15" fill="rgb(228,212,51)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7592%" y="661" width="0.0803%" height="15" fill="rgb(207,190,21)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7592%" y="645" width="0.0803%" height="15" fill="rgb(245,28,35)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7592%" y="629" width="0.0803%" height="15" fill="rgb(239,23,40)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="99.7592%" y="613" width="0.0803%" height="15" fill="rgb(242,10,51)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="623.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8395%" y="837" width="0.0803%" height="15" fill="rgb(207,186,5)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.8395%" y="821" width="0.0803%" height="15" fill="rgb(242,21,16)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="831.50"></text></g><g><title>all (1,246 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(237,0,53)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1215.50"></text></g><g><title>simple-484c7248 (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(215,8,52)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1199.50">simple-484c7248</text></g><g><title>_start (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(248,62,44)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1183.50">_start</text></g><g><title>__libc_start_main (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(224,83,15)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1167.50">__libc_start_main</text></g><g><title>main (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(249,100,46)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1151.50">main</text></g><g><title>std::rt::lang_start_internal (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(213,35,48)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1135.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(251,2,13)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1119.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(212,132,21)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1103.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(247,17,21)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1087.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(220,177,38)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1071.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(233,219,21)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(246,17,7)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(212,4,22)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1023.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,246 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(243,85,21)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1007.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,246 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(232,218,2)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="991.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,246 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(253,168,47)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="975.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,246 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(238,101,25)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="959.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,246 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(251,86,12)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="943.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,246 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(241,112,44)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="927.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (271 samples, 21.75%)</title><rect x="78.2504%" y="901" width="21.7496%" height="15" fill="rgb(224,28,25)" fg:x="975" fg:w="271"/><text x="78.5004%" y="911.50">&lt;criterion::routine::Function&lt;M,F,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (271 samples, 21.75%)</title><rect x="78.2504%" y="885" width="21.7496%" height="15" fill="rgb(209,201,1)" fg:x="975" fg:w="271"/><text x="78.5004%" y="895.50">criterion::bencher::Bencher&lt;M&gt;::it..</text></g><g><title>tests::evaluate_text_in_new_domain (271 samples, 21.75%)</title><rect x="78.2504%" y="869" width="21.7496%" height="15" fill="rgb(231,30,22)" fg:x="975" fg:w="271"/><text x="78.5004%" y="879.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (104 samples, 8.35%)</title><rect x="91.6533%" y="853" width="8.3467%" height="15" fill="rgb(247,96,31)" fg:x="1142" fg:w="104"/><text x="91.9033%" y="863.50">engine::sess..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.9197%" y="837" width="0.0803%" height="15" fill="rgb(251,100,12)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="847.50"></text></g></svg></svg>