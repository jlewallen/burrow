<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1205.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="1302"><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="0.0768%" y="821" width="0.0768%" height="15" fill="rgb(249,196,1)" fg:x="1" fg:w="1"/><text x="0.3268%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.15%)</title><rect x="0.1536%" y="805" width="0.1536%" height="15" fill="rgb(223,207,51)" fg:x="2" fg:w="2"/><text x="0.4036%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2304%" y="789" width="0.0768%" height="15" fill="rgb(210,14,40)" fg:x="3" fg:w="1"/><text x="0.4804%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5376%" y="709" width="0.0768%" height="15" fill="rgb(250,20,52)" fg:x="7" fg:w="1"/><text x="0.7876%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.46%)</title><rect x="0.6144%" y="709" width="0.4608%" height="15" fill="rgb(241,46,11)" fg:x="8" fg:w="6"/><text x="0.8644%" y="719.50"></text></g><g><title>__libc_free (6 samples, 0.46%)</title><rect x="0.6144%" y="693" width="0.4608%" height="15" fill="rgb(219,105,5)" fg:x="8" fg:w="6"/><text x="0.8644%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.0753%" y="693" width="0.0768%" height="15" fill="rgb(252,77,35)" fg:x="14" fg:w="1"/><text x="1.3253%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0753%" y="677" width="0.0768%" height="15" fill="rgb(243,119,2)" fg:x="14" fg:w="1"/><text x="1.3253%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0753%" y="661" width="0.0768%" height="15" fill="rgb(206,82,28)" fg:x="14" fg:w="1"/><text x="1.3253%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="1.1521%" y="693" width="0.1536%" height="15" fill="rgb(227,120,12)" fg:x="15" fg:w="2"/><text x="1.4021%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="1.3057%" y="693" width="0.2304%" height="15" fill="rgb(229,134,41)" fg:x="17" fg:w="3"/><text x="1.5557%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4593%" y="677" width="0.0768%" height="15" fill="rgb(239,96,32)" fg:x="19" fg:w="1"/><text x="1.7093%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="1.5361%" y="677" width="0.1536%" height="15" fill="rgb(225,46,27)" fg:x="20" fg:w="2"/><text x="1.7861%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="1.6897%" y="661" width="0.1536%" height="15" fill="rgb(215,168,2)" fg:x="22" fg:w="2"/><text x="1.9397%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="1.8433%" y="661" width="0.1536%" height="15" fill="rgb(207,170,52)" fg:x="24" fg:w="2"/><text x="2.0933%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9201%" y="645" width="0.0768%" height="15" fill="rgb(237,198,36)" fg:x="25" fg:w="1"/><text x="2.1701%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.00%)</title><rect x="1.0753%" y="709" width="0.9985%" height="15" fill="rgb(213,27,14)" fg:x="14" fg:w="13"/><text x="1.3253%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.54%)</title><rect x="1.5361%" y="693" width="0.5376%" height="15" fill="rgb(218,77,5)" fg:x="20" fg:w="7"/><text x="1.7861%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.38%)</title><rect x="1.6897%" y="677" width="0.3840%" height="15" fill="rgb(230,219,39)" fg:x="22" fg:w="5"/><text x="1.9397%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.9969%" y="661" width="0.0768%" height="15" fill="rgb(245,177,7)" fg:x="26" fg:w="1"/><text x="2.2469%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9969%" y="645" width="0.0768%" height="15" fill="rgb(246,44,46)" fg:x="26" fg:w="1"/><text x="2.2469%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.69%)</title><rect x="0.4608%" y="725" width="1.6897%" height="15" fill="rgb(207,173,15)" fg:x="6" fg:w="22"/><text x="0.7108%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Write::write_fmt::Adapter&lt;std::sys::unix::stdio::Stderr&gt;&gt; (1 samples, 0.08%)</title><rect x="2.0737%" y="709" width="0.0768%" height="15" fill="rgb(245,170,50)" fg:x="27" fg:w="1"/><text x="2.3237%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1505%" y="725" width="0.0768%" height="15" fill="rgb(233,156,21)" fg:x="28" fg:w="1"/><text x="2.4005%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 1.92%)</title><rect x="0.3840%" y="741" width="1.9201%" height="15" fill="rgb(253,146,27)" fg:x="5" fg:w="25"/><text x="0.6340%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="2.2273%" y="725" width="0.0768%" height="15" fill="rgb(247,66,29)" fg:x="29" fg:w="1"/><text x="2.4773%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.00%)</title><rect x="0.3840%" y="757" width="1.9969%" height="15" fill="rgb(218,207,26)" fg:x="5" fg:w="26"/><text x="0.6340%" y="767.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3041%" y="741" width="0.0768%" height="15" fill="rgb(234,93,26)" fg:x="30" fg:w="1"/><text x="2.5541%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.07%)</title><rect x="0.3840%" y="789" width="2.0737%" height="15" fill="rgb(214,75,48)" fg:x="5" fg:w="27"/><text x="0.6340%" y="799.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (27 samples, 2.07%)</title><rect x="0.3840%" y="773" width="2.0737%" height="15" fill="rgb(229,119,22)" fg:x="5" fg:w="27"/><text x="0.6340%" y="783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.3810%" y="757" width="0.0768%" height="15" fill="rgb(226,153,19)" fg:x="31" fg:w="1"/><text x="2.6310%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3810%" y="741" width="0.0768%" height="15" fill="rgb(220,204,36)" fg:x="31" fg:w="1"/><text x="2.6310%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.38%)</title><rect x="0.1536%" y="821" width="2.3810%" height="15" fill="rgb(253,181,43)" fg:x="2" fg:w="31"/><text x="0.4036%" y="831.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (29 samples, 2.23%)</title><rect x="0.3072%" y="805" width="2.2273%" height="15" fill="rgb(211,41,51)" fg:x="4" fg:w="29"/><text x="0.5572%" y="815.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4578%" y="789" width="0.0768%" height="15" fill="rgb(207,215,0)" fg:x="32" fg:w="1"/><text x="2.7078%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (2 samples, 0.15%)</title><rect x="2.5346%" y="789" width="0.1536%" height="15" fill="rgb(212,153,10)" fg:x="33" fg:w="2"/><text x="2.7846%" y="799.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="2.6114%" y="773" width="0.0768%" height="15" fill="rgb(251,171,36)" fg:x="34" fg:w="1"/><text x="2.8614%" y="783.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="2.7650%" y="757" width="0.0768%" height="15" fill="rgb(225,219,41)" fg:x="36" fg:w="1"/><text x="3.0150%" y="767.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="2.9954%" y="709" width="0.0768%" height="15" fill="rgb(208,200,1)" fg:x="39" fg:w="1"/><text x="3.2454%" y="719.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="2.9954%" y="693" width="0.0768%" height="15" fill="rgb(206,75,47)" fg:x="39" fg:w="1"/><text x="3.2454%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="2.9954%" y="677" width="0.0768%" height="15" fill="rgb(248,3,16)" fg:x="39" fg:w="1"/><text x="3.2454%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="2.9954%" y="661" width="0.0768%" height="15" fill="rgb(242,157,36)" fg:x="39" fg:w="1"/><text x="3.2454%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="2.9954%" y="645" width="0.0768%" height="15" fill="rgb(215,175,11)" fg:x="39" fg:w="1"/><text x="3.2454%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="2.9954%" y="629" width="0.0768%" height="15" fill="rgb(252,222,22)" fg:x="39" fg:w="1"/><text x="3.2454%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.9954%" y="613" width="0.0768%" height="15" fill="rgb(250,121,35)" fg:x="39" fg:w="1"/><text x="3.2454%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.9954%" y="597" width="0.0768%" height="15" fill="rgb(233,120,49)" fg:x="39" fg:w="1"/><text x="3.2454%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.9954%" y="581" width="0.0768%" height="15" fill="rgb(205,201,14)" fg:x="39" fg:w="1"/><text x="3.2454%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.9954%" y="565" width="0.0768%" height="15" fill="rgb(219,58,45)" fg:x="39" fg:w="1"/><text x="3.2454%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.9954%" y="549" width="0.0768%" height="15" fill="rgb(251,65,12)" fg:x="39" fg:w="1"/><text x="3.2454%" y="559.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="2.9954%" y="533" width="0.0768%" height="15" fill="rgb(224,47,31)" fg:x="39" fg:w="1"/><text x="3.2454%" y="543.50"></text></g><g><title>__asprintf (3 samples, 0.23%)</title><rect x="3.1490%" y="693" width="0.2304%" height="15" fill="rgb(233,74,26)" fg:x="41" fg:w="3"/><text x="3.3990%" y="703.50"></text></g><g><title>dlerror (5 samples, 0.38%)</title><rect x="3.0722%" y="709" width="0.3840%" height="15" fill="rgb(231,211,31)" fg:x="40" fg:w="5"/><text x="3.3222%" y="719.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="3.3794%" y="693" width="0.0768%" height="15" fill="rgb(239,167,5)" fg:x="44" fg:w="1"/><text x="3.6294%" y="703.50"></text></g><g><title>dlopen (8 samples, 0.61%)</title><rect x="3.4562%" y="709" width="0.6144%" height="15" fill="rgb(241,85,0)" fg:x="45" fg:w="8"/><text x="3.7062%" y="719.50"></text></g><g><title>_dl_catch_error (7 samples, 0.54%)</title><rect x="3.5330%" y="693" width="0.5376%" height="15" fill="rgb(229,130,21)" fg:x="46" fg:w="7"/><text x="3.7830%" y="703.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.54%)</title><rect x="3.5330%" y="677" width="0.5376%" height="15" fill="rgb(254,84,49)" fg:x="46" fg:w="7"/><text x="3.7830%" y="687.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.46%)</title><rect x="3.6098%" y="661" width="0.4608%" height="15" fill="rgb(235,85,21)" fg:x="47" fg:w="6"/><text x="3.8598%" y="671.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.46%)</title><rect x="3.6098%" y="645" width="0.4608%" height="15" fill="rgb(246,128,52)" fg:x="47" fg:w="6"/><text x="3.8598%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (15 samples, 1.15%)</title><rect x="2.9954%" y="741" width="1.1521%" height="15" fill="rgb(243,114,49)" fg:x="39" fg:w="15"/><text x="3.2454%" y="751.50"></text></g><g><title>libloading::safe::Library::new (15 samples, 1.15%)</title><rect x="2.9954%" y="725" width="1.1521%" height="15" fill="rgb(240,224,22)" fg:x="39" fg:w="15"/><text x="3.2454%" y="735.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="4.0707%" y="709" width="0.0768%" height="15" fill="rgb(247,201,52)" fg:x="53" fg:w="1"/><text x="4.3207%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (18 samples, 1.38%)</title><rect x="2.8418%" y="757" width="1.3825%" height="15" fill="rgb(231,70,45)" fg:x="37" fg:w="18"/><text x="3.0918%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="4.1475%" y="741" width="0.0768%" height="15" fill="rgb(217,215,20)" fg:x="54" fg:w="1"/><text x="4.3975%" y="751.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.1475%" y="725" width="0.0768%" height="15" fill="rgb(226,170,30)" fg:x="54" fg:w="1"/><text x="4.3975%" y="735.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="4.2243%" y="725" width="0.0768%" height="15" fill="rgb(220,190,43)" fg:x="55" fg:w="1"/><text x="4.4743%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.2243%" y="709" width="0.0768%" height="15" fill="rgb(218,20,18)" fg:x="55" fg:w="1"/><text x="4.4743%" y="719.50"></text></g><g><title>engine::session::Session::initialize (22 samples, 1.69%)</title><rect x="2.6882%" y="773" width="1.6897%" height="15" fill="rgb(245,37,26)" fg:x="35" fg:w="22"/><text x="2.9382%" y="783.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.15%)</title><rect x="4.2243%" y="757" width="0.1536%" height="15" fill="rgb(241,127,29)" fg:x="55" fg:w="2"/><text x="4.4743%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="4.2243%" y="741" width="0.1536%" height="15" fill="rgb(241,33,26)" fg:x="55" fg:w="2"/><text x="4.4743%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.3011%" y="725" width="0.0768%" height="15" fill="rgb(220,106,21)" fg:x="56" fg:w="1"/><text x="4.5511%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.3011%" y="709" width="0.0768%" height="15" fill="rgb(225,125,35)" fg:x="56" fg:w="1"/><text x="4.5511%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.3011%" y="693" width="0.0768%" height="15" fill="rgb(248,80,22)" fg:x="56" fg:w="1"/><text x="4.5511%" y="703.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (25 samples, 1.92%)</title><rect x="2.5346%" y="821" width="1.9201%" height="15" fill="rgb(231,117,39)" fg:x="33" fg:w="25"/><text x="2.7846%" y="831.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (25 samples, 1.92%)</title><rect x="2.5346%" y="805" width="1.9201%" height="15" fill="rgb(239,183,16)" fg:x="33" fg:w="25"/><text x="2.7846%" y="815.50">e..</text></g><g><title>engine::session::Session::new (23 samples, 1.77%)</title><rect x="2.6882%" y="789" width="1.7665%" height="15" fill="rgb(221,61,19)" fg:x="35" fg:w="23"/><text x="2.9382%" y="799.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="4.3779%" y="773" width="0.0768%" height="15" fill="rgb(239,196,44)" fg:x="57" fg:w="1"/><text x="4.6279%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.5315%" y="805" width="0.0768%" height="15" fill="rgb(206,113,19)" fg:x="59" fg:w="1"/><text x="4.7815%" y="815.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="4.6083%" y="789" width="0.0768%" height="15" fill="rgb(245,114,12)" fg:x="60" fg:w="1"/><text x="4.8583%" y="799.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="4.6083%" y="773" width="0.0768%" height="15" fill="rgb(247,89,39)" fg:x="60" fg:w="1"/><text x="4.8583%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.6083%" y="757" width="0.0768%" height="15" fill="rgb(213,85,14)" fg:x="60" fg:w="1"/><text x="4.8583%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.8387%" y="757" width="0.0768%" height="15" fill="rgb(249,206,33)" fg:x="63" fg:w="1"/><text x="5.0887%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.8387%" y="741" width="0.0768%" height="15" fill="rgb(235,167,47)" fg:x="63" fg:w="1"/><text x="5.0887%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.8387%" y="725" width="0.0768%" height="15" fill="rgb(217,177,16)" fg:x="63" fg:w="1"/><text x="5.0887%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.8387%" y="709" width="0.0768%" height="15" fill="rgb(250,228,29)" fg:x="63" fg:w="1"/><text x="5.0887%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="4.9155%" y="725" width="0.0768%" height="15" fill="rgb(216,195,42)" fg:x="64" fg:w="1"/><text x="5.1655%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.9155%" y="709" width="0.0768%" height="15" fill="rgb(232,192,32)" fg:x="64" fg:w="1"/><text x="5.1655%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.9155%" y="693" width="0.0768%" height="15" fill="rgb(211,8,47)" fg:x="64" fg:w="1"/><text x="5.1655%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.9155%" y="677" width="0.0768%" height="15" fill="rgb(251,201,9)" fg:x="64" fg:w="1"/><text x="5.1655%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.9155%" y="661" width="0.0768%" height="15" fill="rgb(206,185,47)" fg:x="64" fg:w="1"/><text x="5.1655%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.9155%" y="645" width="0.0768%" height="15" fill="rgb(245,54,32)" fg:x="64" fg:w="1"/><text x="5.1655%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="4.9155%" y="629" width="0.0768%" height="15" fill="rgb(208,1,8)" fg:x="64" fg:w="1"/><text x="5.1655%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.9155%" y="613" width="0.0768%" height="15" fill="rgb(228,57,24)" fg:x="64" fg:w="1"/><text x="5.1655%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="4.9155%" y="757" width="0.1536%" height="15" fill="rgb(251,24,8)" fg:x="64" fg:w="2"/><text x="5.1655%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.15%)</title><rect x="4.9155%" y="741" width="0.1536%" height="15" fill="rgb(236,196,50)" fg:x="64" fg:w="2"/><text x="5.1655%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.9923%" y="725" width="0.0768%" height="15" fill="rgb(246,222,29)" fg:x="65" fg:w="1"/><text x="5.2423%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.2995%" y="693" width="0.0768%" height="15" fill="rgb(211,34,40)" fg:x="69" fg:w="1"/><text x="5.5495%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.23%)</title><rect x="5.2995%" y="709" width="0.2304%" height="15" fill="rgb(210,66,51)" fg:x="69" fg:w="3"/><text x="5.5495%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="5.3763%" y="693" width="0.1536%" height="15" fill="rgb(250,56,43)" fg:x="70" fg:w="2"/><text x="5.6263%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.4531%" y="677" width="0.0768%" height="15" fill="rgb(240,111,50)" fg:x="71" fg:w="1"/><text x="5.7031%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.6068%" y="693" width="0.0768%" height="15" fill="rgb(209,117,13)" fg:x="73" fg:w="1"/><text x="5.8568%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="5.6836%" y="693" width="0.0768%" height="15" fill="rgb(232,164,45)" fg:x="74" fg:w="1"/><text x="5.9336%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.6836%" y="677" width="0.0768%" height="15" fill="rgb(205,69,32)" fg:x="74" fg:w="1"/><text x="5.9336%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.38%)</title><rect x="5.7604%" y="693" width="0.3840%" height="15" fill="rgb(240,147,45)" fg:x="75" fg:w="5"/><text x="6.0104%" y="703.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="5.8372%" y="677" width="0.3072%" height="15" fill="rgb(221,94,48)" fg:x="76" fg:w="4"/><text x="6.0872%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="5.9908%" y="661" width="0.1536%" height="15" fill="rgb(249,209,17)" fg:x="78" fg:w="2"/><text x="6.2408%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="5.9908%" y="645" width="0.1536%" height="15" fill="rgb(228,57,28)" fg:x="78" fg:w="2"/><text x="6.2408%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.0676%" y="629" width="0.0768%" height="15" fill="rgb(250,133,26)" fg:x="79" fg:w="1"/><text x="6.3176%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.0676%" y="613" width="0.0768%" height="15" fill="rgb(254,15,16)" fg:x="79" fg:w="1"/><text x="6.3176%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.0676%" y="597" width="0.0768%" height="15" fill="rgb(209,147,42)" fg:x="79" fg:w="1"/><text x="6.3176%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="6.1444%" y="677" width="0.1536%" height="15" fill="rgb(208,5,29)" fg:x="80" fg:w="2"/><text x="6.3944%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.2980%" y="677" width="0.0768%" height="15" fill="rgb(250,73,31)" fg:x="82" fg:w="1"/><text x="6.5480%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.2980%" y="661" width="0.0768%" height="15" fill="rgb(238,45,10)" fg:x="82" fg:w="1"/><text x="6.5480%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.2980%" y="645" width="0.0768%" height="15" fill="rgb(214,104,5)" fg:x="82" fg:w="1"/><text x="6.5480%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.2980%" y="629" width="0.0768%" height="15" fill="rgb(242,217,19)" fg:x="82" fg:w="1"/><text x="6.5480%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.3748%" y="677" width="0.0768%" height="15" fill="rgb(246,113,27)" fg:x="83" fg:w="1"/><text x="6.6248%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.3748%" y="661" width="0.0768%" height="15" fill="rgb(221,34,27)" fg:x="83" fg:w="1"/><text x="6.6248%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.4516%" y="661" width="0.0768%" height="15" fill="rgb(246,109,6)" fg:x="84" fg:w="1"/><text x="6.7016%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.7588%" y="645" width="0.0768%" height="15" fill="rgb(217,12,25)" fg:x="88" fg:w="1"/><text x="7.0088%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="6.8356%" y="645" width="0.3072%" height="15" fill="rgb(250,195,5)" fg:x="89" fg:w="4"/><text x="7.0856%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="6.9124%" y="629" width="0.2304%" height="15" fill="rgb(244,140,45)" fg:x="90" fg:w="3"/><text x="7.1624%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="6.9892%" y="613" width="0.1536%" height="15" fill="rgb(230,64,14)" fg:x="91" fg:w="2"/><text x="7.2392%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.1429%" y="629" width="0.0768%" height="15" fill="rgb(206,27,27)" fg:x="93" fg:w="1"/><text x="7.3929%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.1429%" y="613" width="0.0768%" height="15" fill="rgb(230,14,50)" fg:x="93" fg:w="1"/><text x="7.3929%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.1429%" y="597" width="0.0768%" height="15" fill="rgb(237,172,14)" fg:x="93" fg:w="1"/><text x="7.3929%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="7.2197%" y="613" width="0.2304%" height="15" fill="rgb(209,25,21)" fg:x="94" fg:w="3"/><text x="7.4697%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="7.2197%" y="597" width="0.2304%" height="15" fill="rgb(248,148,22)" fg:x="94" fg:w="3"/><text x="7.4697%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="7.2197%" y="581" width="0.2304%" height="15" fill="rgb(234,100,22)" fg:x="94" fg:w="3"/><text x="7.4697%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="7.2197%" y="565" width="0.2304%" height="15" fill="rgb(210,20,30)" fg:x="94" fg:w="3"/><text x="7.4697%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.23%)</title><rect x="7.2197%" y="549" width="0.2304%" height="15" fill="rgb(232,58,0)" fg:x="94" fg:w="3"/><text x="7.4697%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.23%)</title><rect x="7.2197%" y="533" width="0.2304%" height="15" fill="rgb(221,68,13)" fg:x="94" fg:w="3"/><text x="7.4697%" y="543.50"></text></g><g><title>realloc (3 samples, 0.23%)</title><rect x="7.2197%" y="517" width="0.2304%" height="15" fill="rgb(231,194,11)" fg:x="94" fg:w="3"/><text x="7.4697%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.08%)</title><rect x="6.4516%" y="677" width="1.0753%" height="15" fill="rgb(235,51,41)" fg:x="84" fg:w="14"/><text x="6.7016%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.00%)</title><rect x="6.5284%" y="661" width="0.9985%" height="15" fill="rgb(240,50,32)" fg:x="85" fg:w="13"/><text x="6.7784%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.38%)</title><rect x="7.1429%" y="645" width="0.3840%" height="15" fill="rgb(240,185,36)" fg:x="93" fg:w="5"/><text x="7.3929%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="7.2197%" y="629" width="0.3072%" height="15" fill="rgb(211,168,15)" fg:x="94" fg:w="4"/><text x="7.4697%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4501%" y="613" width="0.0768%" height="15" fill="rgb(221,70,0)" fg:x="97" fg:w="1"/><text x="7.7001%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.4501%" y="597" width="0.0768%" height="15" fill="rgb(205,21,33)" fg:x="97" fg:w="1"/><text x="7.7001%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.4501%" y="581" width="0.0768%" height="15" fill="rgb(225,106,10)" fg:x="97" fg:w="1"/><text x="7.7001%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.54%)</title><rect x="6.1444%" y="693" width="1.5361%" height="15" fill="rgb(236,200,50)" fg:x="80" fg:w="20"/><text x="6.3944%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="7.5269%" y="677" width="0.1536%" height="15" fill="rgb(249,93,23)" fg:x="98" fg:w="2"/><text x="7.7769%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="7.5269%" y="661" width="0.1536%" height="15" fill="rgb(244,115,35)" fg:x="98" fg:w="2"/><text x="7.7769%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="7.5269%" y="645" width="0.1536%" height="15" fill="rgb(231,129,47)" fg:x="98" fg:w="2"/><text x="7.7769%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.61%)</title><rect x="5.2995%" y="725" width="2.6114%" height="15" fill="rgb(225,160,50)" fg:x="69" fg:w="34"/><text x="5.5495%" y="735.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.38%)</title><rect x="5.5300%" y="709" width="2.3810%" height="15" fill="rgb(218,135,23)" fg:x="72" fg:w="31"/><text x="5.7800%" y="719.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="7.6805%" y="693" width="0.2304%" height="15" fill="rgb(227,119,14)" fg:x="100" fg:w="3"/><text x="7.9305%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="7.6805%" y="677" width="0.2304%" height="15" fill="rgb(242,138,13)" fg:x="100" fg:w="3"/><text x="7.9305%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="7.7573%" y="661" width="0.1536%" height="15" fill="rgb(215,11,16)" fg:x="101" fg:w="2"/><text x="8.0073%" y="671.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="7.9109%" y="725" width="0.0768%" height="15" fill="rgb(234,170,50)" fg:x="103" fg:w="1"/><text x="8.1609%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0645%" y="677" width="0.0768%" height="15" fill="rgb(233,34,20)" fg:x="105" fg:w="1"/><text x="8.3145%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.1413%" y="677" width="0.0768%" height="15" fill="rgb(237,100,45)" fg:x="106" fg:w="1"/><text x="8.3913%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="8.2949%" y="661" width="0.1536%" height="15" fill="rgb(231,184,36)" fg:x="108" fg:w="2"/><text x="8.5449%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.3717%" y="645" width="0.0768%" height="15" fill="rgb(252,93,2)" fg:x="109" fg:w="1"/><text x="8.6217%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.54%)</title><rect x="7.9877%" y="725" width="0.5376%" height="15" fill="rgb(248,176,47)" fg:x="104" fg:w="7"/><text x="8.2377%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.54%)</title><rect x="7.9877%" y="709" width="0.5376%" height="15" fill="rgb(249,125,23)" fg:x="104" fg:w="7"/><text x="8.2377%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.54%)</title><rect x="7.9877%" y="693" width="0.5376%" height="15" fill="rgb(239,67,42)" fg:x="104" fg:w="7"/><text x="8.2377%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="8.2181%" y="677" width="0.3072%" height="15" fill="rgb(244,162,4)" fg:x="107" fg:w="4"/><text x="8.4681%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.4485%" y="661" width="0.0768%" height="15" fill="rgb(214,150,38)" fg:x="110" fg:w="1"/><text x="8.6985%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.4485%" y="645" width="0.0768%" height="15" fill="rgb(228,211,28)" fg:x="110" fg:w="1"/><text x="8.6985%" y="655.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="8.6022%" y="709" width="0.0768%" height="15" fill="rgb(212,98,48)" fg:x="112" fg:w="1"/><text x="8.8522%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.6022%" y="693" width="0.0768%" height="15" fill="rgb(213,45,13)" fg:x="112" fg:w="1"/><text x="8.8522%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.6790%" y="677" width="0.0768%" height="15" fill="rgb(218,35,29)" fg:x="113" fg:w="1"/><text x="8.9290%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="8.7558%" y="677" width="0.3072%" height="15" fill="rgb(244,13,3)" fg:x="114" fg:w="4"/><text x="9.0058%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="8.7558%" y="661" width="0.3072%" height="15" fill="rgb(235,170,19)" fg:x="114" fg:w="4"/><text x="9.0058%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.15%)</title><rect x="8.9094%" y="645" width="0.1536%" height="15" fill="rgb(233,193,43)" fg:x="116" fg:w="2"/><text x="9.1594%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.15%)</title><rect x="9.0630%" y="677" width="0.1536%" height="15" fill="rgb(228,223,20)" fg:x="118" fg:w="2"/><text x="9.3130%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.1398%" y="661" width="0.0768%" height="15" fill="rgb(208,85,54)" fg:x="119" fg:w="1"/><text x="9.3898%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.3702%" y="597" width="0.0768%" height="15" fill="rgb(254,14,45)" fg:x="122" fg:w="1"/><text x="9.6202%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.4470%" y="597" width="0.0768%" height="15" fill="rgb(247,99,29)" fg:x="123" fg:w="1"/><text x="9.6970%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4470%" y="581" width="0.0768%" height="15" fill="rgb(225,180,54)" fg:x="123" fg:w="1"/><text x="9.6970%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4470%" y="565" width="0.0768%" height="15" fill="rgb(239,88,43)" fg:x="123" fg:w="1"/><text x="9.6970%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="9.3702%" y="629" width="0.2304%" height="15" fill="rgb(209,47,11)" fg:x="122" fg:w="3"/><text x="9.6202%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="9.3702%" y="613" width="0.2304%" height="15" fill="rgb(219,179,23)" fg:x="122" fg:w="3"/><text x="9.6202%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5238%" y="597" width="0.0768%" height="15" fill="rgb(213,183,19)" fg:x="124" fg:w="1"/><text x="9.7738%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.6774%" y="597" width="0.0768%" height="15" fill="rgb(210,11,9)" fg:x="126" fg:w="1"/><text x="9.9274%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.6774%" y="581" width="0.0768%" height="15" fill="rgb(239,194,16)" fg:x="126" fg:w="1"/><text x="9.9274%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.6774%" y="565" width="0.0768%" height="15" fill="rgb(246,23,50)" fg:x="126" fg:w="1"/><text x="9.9274%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.8310%" y="581" width="0.0768%" height="15" fill="rgb(245,10,41)" fg:x="128" fg:w="1"/><text x="10.0810%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.8310%" y="565" width="0.0768%" height="15" fill="rgb(228,43,24)" fg:x="128" fg:w="1"/><text x="10.0810%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.8310%" y="549" width="0.0768%" height="15" fill="rgb(220,151,0)" fg:x="128" fg:w="1"/><text x="10.0810%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.8310%" y="533" width="0.0768%" height="15" fill="rgb(232,219,10)" fg:x="128" fg:w="1"/><text x="10.0810%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="9.8310%" y="517" width="0.0768%" height="15" fill="rgb(227,217,48)" fg:x="128" fg:w="1"/><text x="10.0810%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.69%)</title><rect x="9.2934%" y="645" width="0.6912%" height="15" fill="rgb(210,66,35)" fg:x="121" fg:w="9"/><text x="9.5434%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.38%)</title><rect x="9.6006%" y="629" width="0.3840%" height="15" fill="rgb(254,6,7)" fg:x="125" fg:w="5"/><text x="9.8506%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.38%)</title><rect x="9.6006%" y="613" width="0.3840%" height="15" fill="rgb(235,222,42)" fg:x="125" fg:w="5"/><text x="9.8506%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="9.7542%" y="597" width="0.2304%" height="15" fill="rgb(245,126,5)" fg:x="127" fg:w="3"/><text x="10.0042%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.9078%" y="581" width="0.0768%" height="15" fill="rgb(215,73,17)" fg:x="129" fg:w="1"/><text x="10.1578%" y="591.50"></text></g><g><title>engine::session::Session::flush (72 samples, 5.53%)</title><rect x="4.6083%" y="805" width="5.5300%" height="15" fill="rgb(219,198,52)" fg:x="60" fg:w="72"/><text x="4.8583%" y="815.50">engine:..</text></g><g><title>engine::session::state::State::close (71 samples, 5.45%)</title><rect x="4.6851%" y="789" width="5.4531%" height="15" fill="rgb(217,159,18)" fg:x="61" fg:w="71"/><text x="4.9351%" y="799.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (69 samples, 5.30%)</title><rect x="4.8387%" y="773" width="5.2995%" height="15" fill="rgb(212,177,18)" fg:x="63" fg:w="69"/><text x="5.0887%" y="783.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (66 samples, 5.07%)</title><rect x="5.0691%" y="757" width="5.0691%" height="15" fill="rgb(241,10,11)" fg:x="66" fg:w="66"/><text x="5.3191%" y="767.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (65 samples, 4.99%)</title><rect x="5.1459%" y="741" width="4.9923%" height="15" fill="rgb(232,114,35)" fg:x="67" fg:w="65"/><text x="5.3959%" y="751.50">engine..</text></g><g><title>kernel::model::any_entity_changes (21 samples, 1.61%)</title><rect x="8.5253%" y="725" width="1.6129%" height="15" fill="rgb(238,222,8)" fg:x="111" fg:w="21"/><text x="8.7753%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.46%)</title><rect x="8.6790%" y="709" width="1.4593%" height="15" fill="rgb(251,153,44)" fg:x="113" fg:w="19"/><text x="8.9290%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.46%)</title><rect x="8.6790%" y="693" width="1.4593%" height="15" fill="rgb(210,140,51)" fg:x="113" fg:w="19"/><text x="8.9290%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.92%)</title><rect x="9.2166%" y="677" width="0.9217%" height="15" fill="rgb(222,63,0)" fg:x="120" fg:w="12"/><text x="9.4666%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.92%)</title><rect x="9.2166%" y="661" width="0.9217%" height="15" fill="rgb(240,18,40)" fg:x="120" fg:w="12"/><text x="9.4666%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.15%)</title><rect x="9.9846%" y="645" width="0.1536%" height="15" fill="rgb(237,88,16)" fg:x="130" fg:w="2"/><text x="10.2346%" y="655.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="9.9846%" y="629" width="0.1536%" height="15" fill="rgb(251,117,13)" fg:x="130" fg:w="2"/><text x="10.2346%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="10.2151%" y="773" width="0.0768%" height="15" fill="rgb(251,228,8)" fg:x="133" fg:w="1"/><text x="10.4651%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="10.2919%" y="773" width="0.0768%" height="15" fill="rgb(205,107,49)" fg:x="134" fg:w="1"/><text x="10.5419%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="10.2919%" y="757" width="0.0768%" height="15" fill="rgb(238,72,41)" fg:x="134" fg:w="1"/><text x="10.5419%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.2919%" y="741" width="0.0768%" height="15" fill="rgb(248,183,52)" fg:x="134" fg:w="1"/><text x="10.5419%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.2919%" y="725" width="0.0768%" height="15" fill="rgb(215,58,20)" fg:x="134" fg:w="1"/><text x="10.5419%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.2919%" y="709" width="0.0768%" height="15" fill="rgb(209,49,13)" fg:x="134" fg:w="1"/><text x="10.5419%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.15%)</title><rect x="10.3687%" y="757" width="0.1536%" height="15" fill="rgb(208,113,17)" fg:x="135" fg:w="2"/><text x="10.6187%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="10.3687%" y="741" width="0.1536%" height="15" fill="rgb(208,14,22)" fg:x="135" fg:w="2"/><text x="10.6187%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="10.4455%" y="725" width="0.0768%" height="15" fill="rgb(222,95,2)" fg:x="136" fg:w="1"/><text x="10.6955%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.4455%" y="709" width="0.0768%" height="15" fill="rgb(253,180,37)" fg:x="136" fg:w="1"/><text x="10.6955%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.4455%" y="693" width="0.0768%" height="15" fill="rgb(250,81,33)" fg:x="136" fg:w="1"/><text x="10.6955%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.4455%" y="677" width="0.0768%" height="15" fill="rgb(251,151,41)" fg:x="136" fg:w="1"/><text x="10.6955%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.4455%" y="661" width="0.0768%" height="15" fill="rgb(210,135,17)" fg:x="136" fg:w="1"/><text x="10.6955%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.5223%" y="741" width="0.0768%" height="15" fill="rgb(239,21,29)" fg:x="137" fg:w="1"/><text x="10.7723%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.5223%" y="725" width="0.0768%" height="15" fill="rgb(231,215,16)" fg:x="137" fg:w="1"/><text x="10.7723%" y="735.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.31%)</title><rect x="10.3687%" y="773" width="0.3072%" height="15" fill="rgb(239,151,54)" fg:x="135" fg:w="4"/><text x="10.6187%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.15%)</title><rect x="10.5223%" y="757" width="0.1536%" height="15" fill="rgb(222,122,38)" fg:x="137" fg:w="2"/><text x="10.7723%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="10.5991%" y="741" width="0.0768%" height="15" fill="rgb(243,128,1)" fg:x="138" fg:w="1"/><text x="10.8491%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.5991%" y="725" width="0.0768%" height="15" fill="rgb(225,74,21)" fg:x="138" fg:w="1"/><text x="10.8491%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.5991%" y="709" width="0.0768%" height="15" fill="rgb(216,210,10)" fg:x="138" fg:w="1"/><text x="10.8491%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="10.6759%" y="725" width="0.0768%" height="15" fill="rgb(228,76,19)" fg:x="139" fg:w="1"/><text x="10.9259%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.6759%" y="709" width="0.0768%" height="15" fill="rgb(236,80,34)" fg:x="139" fg:w="1"/><text x="10.9259%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.6759%" y="693" width="0.0768%" height="15" fill="rgb(225,173,23)" fg:x="139" fg:w="1"/><text x="10.9259%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.6759%" y="677" width="0.0768%" height="15" fill="rgb(253,38,1)" fg:x="139" fg:w="1"/><text x="10.9259%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.6759%" y="661" width="0.0768%" height="15" fill="rgb(206,155,35)" fg:x="139" fg:w="1"/><text x="10.9259%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.6759%" y="645" width="0.0768%" height="15" fill="rgb(254,27,53)" fg:x="139" fg:w="1"/><text x="10.9259%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.6759%" y="629" width="0.0768%" height="15" fill="rgb(225,52,41)" fg:x="139" fg:w="1"/><text x="10.9259%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.6759%" y="613" width="0.0768%" height="15" fill="rgb(244,53,18)" fg:x="139" fg:w="1"/><text x="10.9259%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.6759%" y="597" width="0.0768%" height="15" fill="rgb(254,206,48)" fg:x="139" fg:w="1"/><text x="10.9259%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.15%)</title><rect x="10.6759%" y="741" width="0.1536%" height="15" fill="rgb(236,182,23)" fg:x="139" fg:w="2"/><text x="10.9259%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="10.7527%" y="725" width="0.0768%" height="15" fill="rgb(236,191,37)" fg:x="140" fg:w="1"/><text x="11.0027%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.7527%" y="709" width="0.0768%" height="15" fill="rgb(245,53,8)" fg:x="140" fg:w="1"/><text x="11.0027%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.7527%" y="693" width="0.0768%" height="15" fill="rgb(245,147,9)" fg:x="140" fg:w="1"/><text x="11.0027%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.7527%" y="677" width="0.0768%" height="15" fill="rgb(218,24,48)" fg:x="140" fg:w="1"/><text x="11.0027%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.7527%" y="661" width="0.0768%" height="15" fill="rgb(254,23,9)" fg:x="140" fg:w="1"/><text x="11.0027%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.7527%" y="645" width="0.0768%" height="15" fill="rgb(244,105,9)" fg:x="140" fg:w="1"/><text x="11.0027%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.7527%" y="629" width="0.0768%" height="15" fill="rgb(212,142,22)" fg:x="140" fg:w="1"/><text x="11.0027%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.7527%" y="613" width="0.0768%" height="15" fill="rgb(221,114,49)" fg:x="140" fg:w="1"/><text x="11.0027%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.7527%" y="597" width="0.0768%" height="15" fill="rgb(223,210,25)" fg:x="140" fg:w="1"/><text x="11.0027%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="10.6759%" y="757" width="0.2304%" height="15" fill="rgb(235,162,44)" fg:x="139" fg:w="3"/><text x="10.9259%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="10.8295%" y="741" width="0.0768%" height="15" fill="rgb(237,65,45)" fg:x="141" fg:w="1"/><text x="11.0795%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9063%" y="693" width="0.0768%" height="15" fill="rgb(208,79,9)" fg:x="142" fg:w="1"/><text x="11.1563%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.46%)</title><rect x="10.2151%" y="789" width="1.4593%" height="15" fill="rgb(215,228,8)" fg:x="133" fg:w="19"/><text x="10.4651%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (13 samples, 1.00%)</title><rect x="10.6759%" y="773" width="0.9985%" height="15" fill="rgb(205,185,17)" fg:x="139" fg:w="13"/><text x="10.9259%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (10 samples, 0.77%)</title><rect x="10.9063%" y="757" width="0.7680%" height="15" fill="rgb(213,62,36)" fg:x="142" fg:w="10"/><text x="11.1563%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.77%)</title><rect x="10.9063%" y="741" width="0.7680%" height="15" fill="rgb(209,34,9)" fg:x="142" fg:w="10"/><text x="11.1563%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.77%)</title><rect x="10.9063%" y="725" width="0.7680%" height="15" fill="rgb(246,151,27)" fg:x="142" fg:w="10"/><text x="11.1563%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.77%)</title><rect x="10.9063%" y="709" width="0.7680%" height="15" fill="rgb(218,206,3)" fg:x="142" fg:w="10"/><text x="11.1563%" y="719.50"></text></g><g><title>__libc_malloc (9 samples, 0.69%)</title><rect x="10.9831%" y="693" width="0.6912%" height="15" fill="rgb(242,202,1)" fg:x="143" fg:w="9"/><text x="11.2331%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.6743%" y="613" width="0.0768%" height="15" fill="rgb(227,185,16)" fg:x="152" fg:w="1"/><text x="11.9243%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="11.6743%" y="645" width="0.1536%" height="15" fill="rgb(241,1,14)" fg:x="152" fg:w="2"/><text x="11.9243%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="11.6743%" y="629" width="0.1536%" height="15" fill="rgb(212,113,25)" fg:x="152" fg:w="2"/><text x="11.9243%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7512%" y="613" width="0.0768%" height="15" fill="rgb(247,37,43)" fg:x="153" fg:w="1"/><text x="12.0012%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="11.6743%" y="693" width="0.2304%" height="15" fill="rgb(226,54,8)" fg:x="152" fg:w="3"/><text x="11.9243%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="11.6743%" y="677" width="0.2304%" height="15" fill="rgb(251,205,25)" fg:x="152" fg:w="3"/><text x="11.9243%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="11.6743%" y="661" width="0.2304%" height="15" fill="rgb(246,87,35)" fg:x="152" fg:w="3"/><text x="11.9243%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.8280%" y="645" width="0.0768%" height="15" fill="rgb(251,145,46)" fg:x="154" fg:w="1"/><text x="12.0780%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.8280%" y="629" width="0.0768%" height="15" fill="rgb(210,210,33)" fg:x="154" fg:w="1"/><text x="12.0780%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.8280%" y="613" width="0.0768%" height="15" fill="rgb(221,151,11)" fg:x="154" fg:w="1"/><text x="12.0780%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.8280%" y="597" width="0.0768%" height="15" fill="rgb(208,160,28)" fg:x="154" fg:w="1"/><text x="12.0780%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.8280%" y="581" width="0.0768%" height="15" fill="rgb(243,69,29)" fg:x="154" fg:w="1"/><text x="12.0780%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.8280%" y="565" width="0.0768%" height="15" fill="rgb(224,144,4)" fg:x="154" fg:w="1"/><text x="12.0780%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.8280%" y="549" width="0.0768%" height="15" fill="rgb(211,140,38)" fg:x="154" fg:w="1"/><text x="12.0780%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.8280%" y="533" width="0.0768%" height="15" fill="rgb(252,189,15)" fg:x="154" fg:w="1"/><text x="12.0780%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.8280%" y="517" width="0.0768%" height="15" fill="rgb(251,175,23)" fg:x="154" fg:w="1"/><text x="12.0780%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.8280%" y="501" width="0.0768%" height="15" fill="rgb(212,184,11)" fg:x="154" fg:w="1"/><text x="12.0780%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.8280%" y="485" width="0.0768%" height="15" fill="rgb(217,205,6)" fg:x="154" fg:w="1"/><text x="12.0780%" y="495.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="11.8280%" y="469" width="0.0768%" height="15" fill="rgb(235,45,45)" fg:x="154" fg:w="1"/><text x="12.0780%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9048%" y="597" width="0.0768%" height="15" fill="rgb(211,157,53)" fg:x="155" fg:w="1"/><text x="12.1548%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.9048%" y="581" width="0.0768%" height="15" fill="rgb(212,13,8)" fg:x="155" fg:w="1"/><text x="12.1548%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.38%)</title><rect x="11.6743%" y="741" width="0.3840%" height="15" fill="rgb(218,80,36)" fg:x="152" fg:w="5"/><text x="11.9243%" y="751.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.38%)</title><rect x="11.6743%" y="725" width="0.3840%" height="15" fill="rgb(211,123,43)" fg:x="152" fg:w="5"/><text x="11.9243%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.38%)</title><rect x="11.6743%" y="709" width="0.3840%" height="15" fill="rgb(206,165,2)" fg:x="152" fg:w="5"/><text x="11.9243%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="11.9048%" y="693" width="0.1536%" height="15" fill="rgb(248,63,35)" fg:x="155" fg:w="2"/><text x="12.1548%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="11.9048%" y="677" width="0.1536%" height="15" fill="rgb(219,133,41)" fg:x="155" fg:w="2"/><text x="12.1548%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="11.9048%" y="661" width="0.1536%" height="15" fill="rgb(206,175,46)" fg:x="155" fg:w="2"/><text x="12.1548%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="11.9048%" y="645" width="0.1536%" height="15" fill="rgb(224,41,35)" fg:x="155" fg:w="2"/><text x="12.1548%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="11.9048%" y="629" width="0.1536%" height="15" fill="rgb(226,113,24)" fg:x="155" fg:w="2"/><text x="12.1548%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="11.9048%" y="613" width="0.1536%" height="15" fill="rgb(219,51,41)" fg:x="155" fg:w="2"/><text x="12.1548%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9816%" y="597" width="0.0768%" height="15" fill="rgb(220,145,47)" fg:x="156" fg:w="1"/><text x="12.2316%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9816%" y="581" width="0.0768%" height="15" fill="rgb(239,121,47)" fg:x="156" fg:w="1"/><text x="12.2316%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.0584%" y="629" width="0.0768%" height="15" fill="rgb(207,60,40)" fg:x="157" fg:w="1"/><text x="12.3084%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="12.0584%" y="677" width="0.1536%" height="15" fill="rgb(224,229,11)" fg:x="157" fg:w="2"/><text x="12.3084%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="12.0584%" y="661" width="0.1536%" height="15" fill="rgb(252,28,32)" fg:x="157" fg:w="2"/><text x="12.3084%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="12.0584%" y="645" width="0.1536%" height="15" fill="rgb(207,52,49)" fg:x="157" fg:w="2"/><text x="12.3084%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.1352%" y="629" width="0.0768%" height="15" fill="rgb(243,51,50)" fg:x="158" fg:w="1"/><text x="12.3852%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.61%)</title><rect x="11.6743%" y="773" width="0.6144%" height="15" fill="rgb(212,92,21)" fg:x="152" fg:w="8"/><text x="11.9243%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.61%)</title><rect x="11.6743%" y="757" width="0.6144%" height="15" fill="rgb(230,183,50)" fg:x="152" fg:w="8"/><text x="11.9243%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="12.0584%" y="741" width="0.2304%" height="15" fill="rgb(225,48,9)" fg:x="157" fg:w="3"/><text x="12.3084%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="12.0584%" y="725" width="0.2304%" height="15" fill="rgb(254,44,4)" fg:x="157" fg:w="3"/><text x="12.3084%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="12.0584%" y="709" width="0.2304%" height="15" fill="rgb(252,128,37)" fg:x="157" fg:w="3"/><text x="12.3084%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="12.0584%" y="693" width="0.2304%" height="15" fill="rgb(227,178,8)" fg:x="157" fg:w="3"/><text x="12.3084%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2120%" y="677" width="0.0768%" height="15" fill="rgb(205,206,32)" fg:x="159" fg:w="1"/><text x="12.4620%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2120%" y="661" width="0.0768%" height="15" fill="rgb(220,218,22)" fg:x="159" fg:w="1"/><text x="12.4620%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.2120%" y="645" width="0.0768%" height="15" fill="rgb(236,41,28)" fg:x="159" fg:w="1"/><text x="12.4620%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.2120%" y="629" width="0.0768%" height="15" fill="rgb(219,37,7)" fg:x="159" fg:w="1"/><text x="12.4620%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.2120%" y="613" width="0.0768%" height="15" fill="rgb(206,160,15)" fg:x="159" fg:w="1"/><text x="12.4620%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2120%" y="597" width="0.0768%" height="15" fill="rgb(208,82,21)" fg:x="159" fg:w="1"/><text x="12.4620%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2120%" y="581" width="0.0768%" height="15" fill="rgb(226,130,25)" fg:x="159" fg:w="1"/><text x="12.4620%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.2120%" y="565" width="0.0768%" height="15" fill="rgb(212,72,24)" fg:x="159" fg:w="1"/><text x="12.4620%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.2120%" y="549" width="0.0768%" height="15" fill="rgb(206,28,16)" fg:x="159" fg:w="1"/><text x="12.4620%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.2120%" y="533" width="0.0768%" height="15" fill="rgb(249,41,5)" fg:x="159" fg:w="1"/><text x="12.4620%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.2120%" y="517" width="0.0768%" height="15" fill="rgb(233,96,48)" fg:x="159" fg:w="1"/><text x="12.4620%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2120%" y="501" width="0.0768%" height="15" fill="rgb(240,198,11)" fg:x="159" fg:w="1"/><text x="12.4620%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.23%)</title><rect x="12.2888%" y="773" width="0.2304%" height="15" fill="rgb(209,175,35)" fg:x="160" fg:w="3"/><text x="12.5388%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="12.2888%" y="757" width="0.2304%" height="15" fill="rgb(214,40,51)" fg:x="160" fg:w="3"/><text x="12.5388%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.4424%" y="741" width="0.0768%" height="15" fill="rgb(252,56,4)" fg:x="162" fg:w="1"/><text x="12.6924%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="12.4424%" y="725" width="0.0768%" height="15" fill="rgb(219,131,5)" fg:x="162" fg:w="1"/><text x="12.6924%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.5192%" y="773" width="0.0768%" height="15" fill="rgb(223,67,53)" fg:x="163" fg:w="1"/><text x="12.7692%" y="783.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="12.5192%" y="757" width="0.0768%" height="15" fill="rgb(227,154,8)" fg:x="163" fg:w="1"/><text x="12.7692%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="12.5192%" y="741" width="0.0768%" height="15" fill="rgb(216,174,51)" fg:x="163" fg:w="1"/><text x="12.7692%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6728%" y="677" width="0.0768%" height="15" fill="rgb(239,60,34)" fg:x="165" fg:w="1"/><text x="12.9228%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6728%" y="661" width="0.0768%" height="15" fill="rgb(236,165,48)" fg:x="165" fg:w="1"/><text x="12.9228%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6728%" y="645" width="0.0768%" height="15" fill="rgb(210,37,26)" fg:x="165" fg:w="1"/><text x="12.9228%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6728%" y="629" width="0.0768%" height="15" fill="rgb(211,3,17)" fg:x="165" fg:w="1"/><text x="12.9228%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6728%" y="613" width="0.0768%" height="15" fill="rgb(234,88,49)" fg:x="165" fg:w="1"/><text x="12.9228%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6728%" y="597" width="0.0768%" height="15" fill="rgb(233,40,17)" fg:x="165" fg:w="1"/><text x="12.9228%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6728%" y="581" width="0.0768%" height="15" fill="rgb(235,127,31)" fg:x="165" fg:w="1"/><text x="12.9228%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.6728%" y="565" width="0.0768%" height="15" fill="rgb(248,167,17)" fg:x="165" fg:w="1"/><text x="12.9228%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.6728%" y="549" width="0.0768%" height="15" fill="rgb(218,179,8)" fg:x="165" fg:w="1"/><text x="12.9228%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.6728%" y="533" width="0.0768%" height="15" fill="rgb(216,92,14)" fg:x="165" fg:w="1"/><text x="12.9228%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6728%" y="517" width="0.0768%" height="15" fill="rgb(221,198,46)" fg:x="165" fg:w="1"/><text x="12.9228%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6728%" y="501" width="0.0768%" height="15" fill="rgb(244,7,25)" fg:x="165" fg:w="1"/><text x="12.9228%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.6728%" y="485" width="0.0768%" height="15" fill="rgb(233,75,6)" fg:x="165" fg:w="1"/><text x="12.9228%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.6728%" y="469" width="0.0768%" height="15" fill="rgb(240,189,41)" fg:x="165" fg:w="1"/><text x="12.9228%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.6728%" y="453" width="0.0768%" height="15" fill="rgb(237,157,21)" fg:x="165" fg:w="1"/><text x="12.9228%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.6728%" y="437" width="0.0768%" height="15" fill="rgb(210,136,49)" fg:x="165" fg:w="1"/><text x="12.9228%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6728%" y="421" width="0.0768%" height="15" fill="rgb(210,68,29)" fg:x="165" fg:w="1"/><text x="12.9228%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="12.6728%" y="725" width="0.2304%" height="15" fill="rgb(247,207,20)" fg:x="165" fg:w="3"/><text x="12.9228%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="12.6728%" y="709" width="0.2304%" height="15" fill="rgb(224,73,48)" fg:x="165" fg:w="3"/><text x="12.9228%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="12.6728%" y="693" width="0.2304%" height="15" fill="rgb(215,136,47)" fg:x="165" fg:w="3"/><text x="12.9228%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="12.7496%" y="677" width="0.1536%" height="15" fill="rgb(232,222,16)" fg:x="166" fg:w="2"/><text x="12.9996%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="12.7496%" y="661" width="0.1536%" height="15" fill="rgb(249,202,47)" fg:x="166" fg:w="2"/><text x="12.9996%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="12.7496%" y="645" width="0.1536%" height="15" fill="rgb(236,56,8)" fg:x="166" fg:w="2"/><text x="12.9996%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="12.7496%" y="629" width="0.1536%" height="15" fill="rgb(222,6,3)" fg:x="166" fg:w="2"/><text x="12.9996%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="12.7496%" y="613" width="0.1536%" height="15" fill="rgb(254,222,28)" fg:x="166" fg:w="2"/><text x="12.9996%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="12.7496%" y="597" width="0.1536%" height="15" fill="rgb(219,57,23)" fg:x="166" fg:w="2"/><text x="12.9996%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="12.7496%" y="581" width="0.1536%" height="15" fill="rgb(251,106,48)" fg:x="166" fg:w="2"/><text x="12.9996%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="12.7496%" y="565" width="0.1536%" height="15" fill="rgb(242,2,23)" fg:x="166" fg:w="2"/><text x="12.9996%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="12.7496%" y="549" width="0.1536%" height="15" fill="rgb(212,109,31)" fg:x="166" fg:w="2"/><text x="12.9996%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="12.9032%" y="661" width="0.1536%" height="15" fill="rgb(241,9,22)" fg:x="168" fg:w="2"/><text x="13.1532%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="12.9032%" y="645" width="0.1536%" height="15" fill="rgb(209,64,27)" fg:x="168" fg:w="2"/><text x="13.1532%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="12.9032%" y="629" width="0.1536%" height="15" fill="rgb(248,13,44)" fg:x="168" fg:w="2"/><text x="13.1532%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9800%" y="613" width="0.0768%" height="15" fill="rgb(213,86,6)" fg:x="169" fg:w="1"/><text x="13.2300%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9800%" y="597" width="0.0768%" height="15" fill="rgb(247,11,18)" fg:x="169" fg:w="1"/><text x="13.2300%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="12.9032%" y="677" width="0.2304%" height="15" fill="rgb(252,31,11)" fg:x="168" fg:w="3"/><text x="13.1532%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0568%" y="661" width="0.0768%" height="15" fill="rgb(215,63,51)" fg:x="170" fg:w="1"/><text x="13.3068%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.1336%" y="645" width="0.0768%" height="15" fill="rgb(222,180,4)" fg:x="171" fg:w="1"/><text x="13.3836%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.61%)</title><rect x="12.6728%" y="757" width="0.6144%" height="15" fill="rgb(233,4,23)" fg:x="165" fg:w="8"/><text x="12.9228%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.61%)</title><rect x="12.6728%" y="741" width="0.6144%" height="15" fill="rgb(230,116,22)" fg:x="165" fg:w="8"/><text x="12.9228%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.38%)</title><rect x="12.9032%" y="725" width="0.3840%" height="15" fill="rgb(222,20,14)" fg:x="168" fg:w="5"/><text x="13.1532%" y="735.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.38%)</title><rect x="12.9032%" y="709" width="0.3840%" height="15" fill="rgb(210,176,43)" fg:x="168" fg:w="5"/><text x="13.1532%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.38%)</title><rect x="12.9032%" y="693" width="0.3840%" height="15" fill="rgb(219,67,32)" fg:x="168" fg:w="5"/><text x="13.1532%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="13.1336%" y="677" width="0.1536%" height="15" fill="rgb(228,91,39)" fg:x="171" fg:w="2"/><text x="13.3836%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="13.1336%" y="661" width="0.1536%" height="15" fill="rgb(254,63,14)" fg:x="171" fg:w="2"/><text x="13.3836%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2104%" y="645" width="0.0768%" height="15" fill="rgb(216,171,39)" fg:x="172" fg:w="1"/><text x="13.4604%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2104%" y="629" width="0.0768%" height="15" fill="rgb(248,68,25)" fg:x="172" fg:w="1"/><text x="13.4604%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.2104%" y="613" width="0.0768%" height="15" fill="rgb(239,63,16)" fg:x="172" fg:w="1"/><text x="13.4604%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2104%" y="597" width="0.0768%" height="15" fill="rgb(225,111,43)" fg:x="172" fg:w="1"/><text x="13.4604%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2104%" y="581" width="0.0768%" height="15" fill="rgb(246,165,17)" fg:x="172" fg:w="1"/><text x="13.4604%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2104%" y="565" width="0.0768%" height="15" fill="rgb(208,124,1)" fg:x="172" fg:w="1"/><text x="13.4604%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.2873%" y="725" width="0.0768%" height="15" fill="rgb(234,147,33)" fg:x="173" fg:w="1"/><text x="13.5373%" y="735.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="13.3641%" y="709" width="0.0768%" height="15" fill="rgb(240,86,30)" fg:x="174" fg:w="1"/><text x="13.6141%" y="719.50"></text></g><g><title>plugins_core::build::Build::holding (44 samples, 3.38%)</title><rect x="10.1382%" y="805" width="3.3794%" height="15" fill="rgb(237,34,51)" fg:x="132" fg:w="44"/><text x="10.3882%" y="815.50">plu..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.84%)</title><rect x="11.6743%" y="789" width="1.8433%" height="15" fill="rgb(232,131,41)" fg:x="152" fg:w="24"/><text x="11.9243%" y="799.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (12 samples, 0.92%)</title><rect x="12.5960%" y="773" width="0.9217%" height="15" fill="rgb(227,129,53)" fg:x="164" fg:w="12"/><text x="12.8460%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.23%)</title><rect x="13.2873%" y="757" width="0.2304%" height="15" fill="rgb(230,90,35)" fg:x="173" fg:w="3"/><text x="13.5373%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="13.2873%" y="741" width="0.2304%" height="15" fill="rgb(248,88,27)" fg:x="173" fg:w="3"/><text x="13.5373%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.15%)</title><rect x="13.3641%" y="725" width="0.1536%" height="15" fill="rgb(223,18,17)" fg:x="174" fg:w="2"/><text x="13.6141%" y="735.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="13.4409%" y="709" width="0.0768%" height="15" fill="rgb(241,11,10)" fg:x="175" fg:w="1"/><text x="13.6909%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.4409%" y="693" width="0.0768%" height="15" fill="rgb(232,111,52)" fg:x="175" fg:w="1"/><text x="13.6909%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.4409%" y="677" width="0.0768%" height="15" fill="rgb(228,67,8)" fg:x="175" fg:w="1"/><text x="13.6909%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.4409%" y="661" width="0.0768%" height="15" fill="rgb(251,168,31)" fg:x="175" fg:w="1"/><text x="13.6909%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.4409%" y="645" width="0.0768%" height="15" fill="rgb(249,164,11)" fg:x="175" fg:w="1"/><text x="13.6909%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.4409%" y="629" width="0.0768%" height="15" fill="rgb(239,81,9)" fg:x="175" fg:w="1"/><text x="13.6909%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.4409%" y="613" width="0.0768%" height="15" fill="rgb(222,145,38)" fg:x="175" fg:w="1"/><text x="13.6909%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.4409%" y="597" width="0.0768%" height="15" fill="rgb(238,80,54)" fg:x="175" fg:w="1"/><text x="13.6909%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.4409%" y="581" width="0.0768%" height="15" fill="rgb(237,116,16)" fg:x="175" fg:w="1"/><text x="13.6909%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.4409%" y="565" width="0.0768%" height="15" fill="rgb(218,135,19)" fg:x="175" fg:w="1"/><text x="13.6909%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.4409%" y="549" width="0.0768%" height="15" fill="rgb(216,207,44)" fg:x="175" fg:w="1"/><text x="13.6909%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.23%)</title><rect x="13.5945%" y="773" width="0.2304%" height="15" fill="rgb(226,152,40)" fg:x="177" fg:w="3"/><text x="13.8445%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.15%)</title><rect x="13.6713%" y="757" width="0.1536%" height="15" fill="rgb(219,98,35)" fg:x="178" fg:w="2"/><text x="13.9213%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.15%)</title><rect x="13.6713%" y="741" width="0.1536%" height="15" fill="rgb(222,136,46)" fg:x="178" fg:w="2"/><text x="13.9213%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="725" width="0.1536%" height="15" fill="rgb(222,71,8)" fg:x="178" fg:w="2"/><text x="13.9213%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="13.6713%" y="709" width="0.1536%" height="15" fill="rgb(209,89,53)" fg:x="178" fg:w="2"/><text x="13.9213%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="693" width="0.1536%" height="15" fill="rgb(210,97,51)" fg:x="178" fg:w="2"/><text x="13.9213%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="677" width="0.1536%" height="15" fill="rgb(248,65,21)" fg:x="178" fg:w="2"/><text x="13.9213%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="661" width="0.1536%" height="15" fill="rgb(222,5,31)" fg:x="178" fg:w="2"/><text x="13.9213%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="13.6713%" y="645" width="0.1536%" height="15" fill="rgb(241,16,30)" fg:x="178" fg:w="2"/><text x="13.9213%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="629" width="0.1536%" height="15" fill="rgb(215,86,30)" fg:x="178" fg:w="2"/><text x="13.9213%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="613" width="0.1536%" height="15" fill="rgb(235,26,44)" fg:x="178" fg:w="2"/><text x="13.9213%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="597" width="0.1536%" height="15" fill="rgb(228,147,14)" fg:x="178" fg:w="2"/><text x="13.9213%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="13.6713%" y="581" width="0.1536%" height="15" fill="rgb(253,38,50)" fg:x="178" fg:w="2"/><text x="13.9213%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="565" width="0.1536%" height="15" fill="rgb(251,151,16)" fg:x="178" fg:w="2"/><text x="13.9213%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="549" width="0.1536%" height="15" fill="rgb(224,64,19)" fg:x="178" fg:w="2"/><text x="13.9213%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="533" width="0.1536%" height="15" fill="rgb(235,214,47)" fg:x="178" fg:w="2"/><text x="13.9213%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="13.6713%" y="517" width="0.1536%" height="15" fill="rgb(218,15,19)" fg:x="178" fg:w="2"/><text x="13.9213%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="13.6713%" y="501" width="0.1536%" height="15" fill="rgb(247,209,3)" fg:x="178" fg:w="2"/><text x="13.9213%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="13.6713%" y="485" width="0.1536%" height="15" fill="rgb(217,29,2)" fg:x="178" fg:w="2"/><text x="13.9213%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="13.6713%" y="469" width="0.1536%" height="15" fill="rgb(234,9,9)" fg:x="178" fg:w="2"/><text x="13.9213%" y="479.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.15%)</title><rect x="13.6713%" y="453" width="0.1536%" height="15" fill="rgb(207,43,14)" fg:x="178" fg:w="2"/><text x="13.9213%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="13.6713%" y="437" width="0.1536%" height="15" fill="rgb(216,219,36)" fg:x="178" fg:w="2"/><text x="13.9213%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.15%)</title><rect x="13.6713%" y="421" width="0.1536%" height="15" fill="rgb(238,12,26)" fg:x="178" fg:w="2"/><text x="13.9213%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.15%)</title><rect x="13.6713%" y="405" width="0.1536%" height="15" fill="rgb(226,67,30)" fg:x="178" fg:w="2"/><text x="13.9213%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="13.6713%" y="389" width="0.1536%" height="15" fill="rgb(229,154,7)" fg:x="178" fg:w="2"/><text x="13.9213%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="13.6713%" y="373" width="0.1536%" height="15" fill="rgb(249,90,18)" fg:x="178" fg:w="2"/><text x="13.9213%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="13.6713%" y="357" width="0.1536%" height="15" fill="rgb(223,53,15)" fg:x="178" fg:w="2"/><text x="13.9213%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.15%)</title><rect x="13.6713%" y="341" width="0.1536%" height="15" fill="rgb(253,86,38)" fg:x="178" fg:w="2"/><text x="13.9213%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (2 samples, 0.15%)</title><rect x="13.6713%" y="325" width="0.1536%" height="15" fill="rgb(222,198,9)" fg:x="178" fg:w="2"/><text x="13.9213%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="13.8249%" y="757" width="0.0768%" height="15" fill="rgb(240,146,25)" fg:x="180" fg:w="1"/><text x="14.0749%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.8249%" y="741" width="0.0768%" height="15" fill="rgb(225,38,10)" fg:x="180" fg:w="1"/><text x="14.0749%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="13.9017%" y="725" width="0.1536%" height="15" fill="rgb(246,93,4)" fg:x="181" fg:w="2"/><text x="14.1517%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9785%" y="709" width="0.0768%" height="15" fill="rgb(222,55,18)" fg:x="182" fg:w="1"/><text x="14.2285%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9785%" y="693" width="0.0768%" height="15" fill="rgb(233,137,48)" fg:x="182" fg:w="1"/><text x="14.2285%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9785%" y="677" width="0.0768%" height="15" fill="rgb(214,8,54)" fg:x="182" fg:w="1"/><text x="14.2285%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9785%" y="661" width="0.0768%" height="15" fill="rgb(206,75,4)" fg:x="182" fg:w="1"/><text x="14.2285%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9785%" y="645" width="0.0768%" height="15" fill="rgb(238,171,14)" fg:x="182" fg:w="1"/><text x="14.2285%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9785%" y="629" width="0.0768%" height="15" fill="rgb(233,70,41)" fg:x="182" fg:w="1"/><text x="14.2285%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9785%" y="613" width="0.0768%" height="15" fill="rgb(214,68,36)" fg:x="182" fg:w="1"/><text x="14.2285%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9785%" y="597" width="0.0768%" height="15" fill="rgb(223,29,5)" fg:x="182" fg:w="1"/><text x="14.2285%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9785%" y="581" width="0.0768%" height="15" fill="rgb(251,22,40)" fg:x="182" fg:w="1"/><text x="14.2285%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.9785%" y="565" width="0.0768%" height="15" fill="rgb(210,67,41)" fg:x="182" fg:w="1"/><text x="14.2285%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.9785%" y="549" width="0.0768%" height="15" fill="rgb(225,177,31)" fg:x="182" fg:w="1"/><text x="14.2285%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.9785%" y="533" width="0.0768%" height="15" fill="rgb(221,229,11)" fg:x="182" fg:w="1"/><text x="14.2285%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.9785%" y="517" width="0.0768%" height="15" fill="rgb(247,172,52)" fg:x="182" fg:w="1"/><text x="14.2285%" y="527.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="13.9785%" y="501" width="0.0768%" height="15" fill="rgb(212,73,19)" fg:x="182" fg:w="1"/><text x="14.2285%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.9785%" y="485" width="0.0768%" height="15" fill="rgb(244,7,46)" fg:x="182" fg:w="1"/><text x="14.2285%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.38%)</title><rect x="13.8249%" y="773" width="0.3840%" height="15" fill="rgb(230,113,20)" fg:x="180" fg:w="5"/><text x="14.0749%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="13.9017%" y="757" width="0.3072%" height="15" fill="rgb(209,97,30)" fg:x="181" fg:w="4"/><text x="14.1517%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="13.9017%" y="741" width="0.3072%" height="15" fill="rgb(243,89,12)" fg:x="181" fg:w="4"/><text x="14.1517%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="14.0553%" y="725" width="0.1536%" height="15" fill="rgb(228,32,19)" fg:x="183" fg:w="2"/><text x="14.3053%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="14.0553%" y="709" width="0.1536%" height="15" fill="rgb(248,25,17)" fg:x="183" fg:w="2"/><text x="14.3053%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="14.0553%" y="693" width="0.1536%" height="15" fill="rgb(232,161,29)" fg:x="183" fg:w="2"/><text x="14.3053%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="14.0553%" y="677" width="0.1536%" height="15" fill="rgb(251,192,11)" fg:x="183" fg:w="2"/><text x="14.3053%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.1321%" y="661" width="0.0768%" height="15" fill="rgb(240,47,32)" fg:x="184" fg:w="1"/><text x="14.3821%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1321%" y="645" width="0.0768%" height="15" fill="rgb(250,16,45)" fg:x="184" fg:w="1"/><text x="14.3821%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1321%" y="629" width="0.0768%" height="15" fill="rgb(227,217,42)" fg:x="184" fg:w="1"/><text x="14.3821%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1321%" y="613" width="0.0768%" height="15" fill="rgb(206,82,54)" fg:x="184" fg:w="1"/><text x="14.3821%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1321%" y="597" width="0.0768%" height="15" fill="rgb(243,145,25)" fg:x="184" fg:w="1"/><text x="14.3821%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.2089%" y="757" width="0.0768%" height="15" fill="rgb(207,166,24)" fg:x="185" fg:w="1"/><text x="14.4589%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.2089%" y="741" width="0.0768%" height="15" fill="rgb(215,191,44)" fg:x="185" fg:w="1"/><text x="14.4589%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.15%)</title><rect x="14.2089%" y="773" width="0.1536%" height="15" fill="rgb(234,218,51)" fg:x="185" fg:w="2"/><text x="14.4589%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.2857%" y="757" width="0.0768%" height="15" fill="rgb(245,133,21)" fg:x="186" fg:w="1"/><text x="14.5357%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3625%" y="757" width="0.0768%" height="15" fill="rgb(230,136,45)" fg:x="187" fg:w="1"/><text x="14.6125%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3625%" y="741" width="0.0768%" height="15" fill="rgb(247,63,43)" fg:x="187" fg:w="1"/><text x="14.6125%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3625%" y="725" width="0.0768%" height="15" fill="rgb(254,223,31)" fg:x="187" fg:w="1"/><text x="14.6125%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.3625%" y="709" width="0.0768%" height="15" fill="rgb(236,185,0)" fg:x="187" fg:w="1"/><text x="14.6125%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.3625%" y="693" width="0.0768%" height="15" fill="rgb(231,139,46)" fg:x="187" fg:w="1"/><text x="14.6125%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.3625%" y="677" width="0.0768%" height="15" fill="rgb(236,147,31)" fg:x="187" fg:w="1"/><text x="14.6125%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3625%" y="661" width="0.0768%" height="15" fill="rgb(225,222,22)" fg:x="187" fg:w="1"/><text x="14.6125%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.3625%" y="645" width="0.0768%" height="15" fill="rgb(225,193,14)" fg:x="187" fg:w="1"/><text x="14.6125%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.3625%" y="629" width="0.0768%" height="15" fill="rgb(253,193,46)" fg:x="187" fg:w="1"/><text x="14.6125%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.3625%" y="613" width="0.0768%" height="15" fill="rgb(218,187,39)" fg:x="187" fg:w="1"/><text x="14.6125%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.3625%" y="597" width="0.0768%" height="15" fill="rgb(227,162,48)" fg:x="187" fg:w="1"/><text x="14.6125%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.3625%" y="581" width="0.0768%" height="15" fill="rgb(222,25,5)" fg:x="187" fg:w="1"/><text x="14.6125%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3625%" y="565" width="0.0768%" height="15" fill="rgb(211,205,16)" fg:x="187" fg:w="1"/><text x="14.6125%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4393%" y="677" width="0.0768%" height="15" fill="rgb(244,191,2)" fg:x="188" fg:w="1"/><text x="14.6893%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4393%" y="661" width="0.0768%" height="15" fill="rgb(248,159,12)" fg:x="188" fg:w="1"/><text x="14.6893%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4393%" y="645" width="0.0768%" height="15" fill="rgb(235,204,17)" fg:x="188" fg:w="1"/><text x="14.6893%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4393%" y="629" width="0.0768%" height="15" fill="rgb(240,21,27)" fg:x="188" fg:w="1"/><text x="14.6893%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.4393%" y="613" width="0.0768%" height="15" fill="rgb(224,170,31)" fg:x="188" fg:w="1"/><text x="14.6893%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.4393%" y="597" width="0.0768%" height="15" fill="rgb(223,145,32)" fg:x="188" fg:w="1"/><text x="14.6893%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.4393%" y="581" width="0.0768%" height="15" fill="rgb(243,100,5)" fg:x="188" fg:w="1"/><text x="14.6893%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.4393%" y="565" width="0.0768%" height="15" fill="rgb(242,131,51)" fg:x="188" fg:w="1"/><text x="14.6893%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.4393%" y="549" width="0.0768%" height="15" fill="rgb(223,156,46)" fg:x="188" fg:w="1"/><text x="14.6893%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="14.4393%" y="693" width="0.1536%" height="15" fill="rgb(215,10,40)" fg:x="188" fg:w="2"/><text x="14.6893%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5161%" y="677" width="0.0768%" height="15" fill="rgb(233,155,0)" fg:x="189" fg:w="1"/><text x="14.7661%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="14.4393%" y="725" width="0.2304%" height="15" fill="rgb(247,78,6)" fg:x="188" fg:w="3"/><text x="14.6893%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="14.4393%" y="709" width="0.2304%" height="15" fill="rgb(237,217,21)" fg:x="188" fg:w="3"/><text x="14.6893%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.5929%" y="693" width="0.0768%" height="15" fill="rgb(212,1,21)" fg:x="190" fg:w="1"/><text x="14.8429%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.5929%" y="677" width="0.0768%" height="15" fill="rgb(213,7,14)" fg:x="190" fg:w="1"/><text x="14.8429%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.5929%" y="661" width="0.0768%" height="15" fill="rgb(225,84,14)" fg:x="190" fg:w="1"/><text x="14.8429%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5929%" y="645" width="0.0768%" height="15" fill="rgb(239,216,39)" fg:x="190" fg:w="1"/><text x="14.8429%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7465%" y="629" width="0.0768%" height="15" fill="rgb(253,29,23)" fg:x="192" fg:w="1"/><text x="14.9965%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7465%" y="613" width="0.0768%" height="15" fill="rgb(220,167,50)" fg:x="192" fg:w="1"/><text x="14.9965%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="14.6697%" y="693" width="0.2304%" height="15" fill="rgb(232,141,1)" fg:x="191" fg:w="3"/><text x="14.9197%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="14.6697%" y="677" width="0.2304%" height="15" fill="rgb(222,210,1)" fg:x="191" fg:w="3"/><text x="14.9197%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="14.7465%" y="661" width="0.1536%" height="15" fill="rgb(219,84,10)" fg:x="192" fg:w="2"/><text x="14.9965%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="14.7465%" y="645" width="0.1536%" height="15" fill="rgb(245,188,6)" fg:x="192" fg:w="2"/><text x="14.9965%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.8233%" y="629" width="0.0768%" height="15" fill="rgb(252,139,39)" fg:x="193" fg:w="1"/><text x="15.0733%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.8233%" y="613" width="0.0768%" height="15" fill="rgb(218,42,26)" fg:x="193" fg:w="1"/><text x="15.0733%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.8233%" y="597" width="0.0768%" height="15" fill="rgb(237,226,51)" fg:x="193" fg:w="1"/><text x="15.0733%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.8233%" y="581" width="0.0768%" height="15" fill="rgb(246,15,17)" fg:x="193" fg:w="1"/><text x="15.0733%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.8233%" y="565" width="0.0768%" height="15" fill="rgb(228,170,42)" fg:x="193" fg:w="1"/><text x="15.0733%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.8233%" y="549" width="0.0768%" height="15" fill="rgb(248,118,53)" fg:x="193" fg:w="1"/><text x="15.0733%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.8233%" y="533" width="0.0768%" height="15" fill="rgb(207,30,10)" fg:x="193" fg:w="1"/><text x="15.0733%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.8233%" y="517" width="0.0768%" height="15" fill="rgb(217,104,38)" fg:x="193" fg:w="1"/><text x="15.0733%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.8233%" y="501" width="0.0768%" height="15" fill="rgb(211,165,26)" fg:x="193" fg:w="1"/><text x="15.0733%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.8233%" y="485" width="0.0768%" height="15" fill="rgb(247,38,9)" fg:x="193" fg:w="1"/><text x="15.0733%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.8233%" y="469" width="0.0768%" height="15" fill="rgb(218,187,8)" fg:x="193" fg:w="1"/><text x="15.0733%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8233%" y="453" width="0.0768%" height="15" fill="rgb(247,94,28)" fg:x="193" fg:w="1"/><text x="15.0733%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9002%" y="613" width="0.0768%" height="15" fill="rgb(218,173,30)" fg:x="194" fg:w="1"/><text x="15.1502%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="14.9002%" y="693" width="0.1536%" height="15" fill="rgb(245,45,36)" fg:x="194" fg:w="2"/><text x="15.1502%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.15%)</title><rect x="14.9002%" y="677" width="0.1536%" height="15" fill="rgb(221,172,44)" fg:x="194" fg:w="2"/><text x="15.1502%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="14.9002%" y="661" width="0.1536%" height="15" fill="rgb(222,45,12)" fg:x="194" fg:w="2"/><text x="15.1502%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="14.9002%" y="645" width="0.1536%" height="15" fill="rgb(250,10,22)" fg:x="194" fg:w="2"/><text x="15.1502%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="14.9002%" y="629" width="0.1536%" height="15" fill="rgb(239,27,0)" fg:x="194" fg:w="2"/><text x="15.1502%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9770%" y="613" width="0.0768%" height="15" fill="rgb(223,118,22)" fg:x="195" fg:w="1"/><text x="15.2270%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9770%" y="597" width="0.0768%" height="15" fill="rgb(251,81,25)" fg:x="195" fg:w="1"/><text x="15.2270%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0538%" y="629" width="0.0768%" height="15" fill="rgb(237,225,53)" fg:x="196" fg:w="1"/><text x="15.3038%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0538%" y="613" width="0.0768%" height="15" fill="rgb(237,186,51)" fg:x="196" fg:w="1"/><text x="15.3038%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0538%" y="597" width="0.0768%" height="15" fill="rgb(247,209,11)" fg:x="196" fg:w="1"/><text x="15.3038%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (22 samples, 1.69%)</title><rect x="13.5177%" y="805" width="1.6897%" height="15" fill="rgb(223,109,27)" fg:x="176" fg:w="22"/><text x="13.7677%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (22 samples, 1.69%)</title><rect x="13.5177%" y="789" width="1.6897%" height="15" fill="rgb(246,181,13)" fg:x="176" fg:w="22"/><text x="13.7677%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.84%)</title><rect x="14.3625%" y="773" width="0.8449%" height="15" fill="rgb(234,57,44)" fg:x="187" fg:w="11"/><text x="14.6125%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (10 samples, 0.77%)</title><rect x="14.4393%" y="757" width="0.7680%" height="15" fill="rgb(211,227,50)" fg:x="188" fg:w="10"/><text x="14.6893%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (10 samples, 0.77%)</title><rect x="14.4393%" y="741" width="0.7680%" height="15" fill="rgb(254,57,34)" fg:x="188" fg:w="10"/><text x="14.6893%" y="751.50"></text></g><g><title>kernel::model::props::save_props (7 samples, 0.54%)</title><rect x="14.6697%" y="725" width="0.5376%" height="15" fill="rgb(227,212,26)" fg:x="191" fg:w="7"/><text x="14.9197%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.54%)</title><rect x="14.6697%" y="709" width="0.5376%" height="15" fill="rgb(244,169,44)" fg:x="191" fg:w="7"/><text x="14.9197%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.15%)</title><rect x="15.0538%" y="693" width="0.1536%" height="15" fill="rgb(236,135,50)" fg:x="196" fg:w="2"/><text x="15.3038%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="15.0538%" y="677" width="0.1536%" height="15" fill="rgb(241,89,30)" fg:x="196" fg:w="2"/><text x="15.3038%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.15%)</title><rect x="15.0538%" y="661" width="0.1536%" height="15" fill="rgb(206,113,34)" fg:x="196" fg:w="2"/><text x="15.3038%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="15.0538%" y="645" width="0.1536%" height="15" fill="rgb(218,104,52)" fg:x="196" fg:w="2"/><text x="15.3038%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.1306%" y="629" width="0.0768%" height="15" fill="rgb(223,82,32)" fg:x="197" fg:w="1"/><text x="15.3806%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.1306%" y="613" width="0.0768%" height="15" fill="rgb(249,219,30)" fg:x="197" fg:w="1"/><text x="15.3806%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.1306%" y="597" width="0.0768%" height="15" fill="rgb(233,141,21)" fg:x="197" fg:w="1"/><text x="15.3806%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="15.1306%" y="581" width="0.0768%" height="15" fill="rgb(252,87,44)" fg:x="197" fg:w="1"/><text x="15.3806%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.1306%" y="565" width="0.0768%" height="15" fill="rgb(229,48,33)" fg:x="197" fg:w="1"/><text x="15.3806%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.1306%" y="549" width="0.0768%" height="15" fill="rgb(229,23,22)" fg:x="197" fg:w="1"/><text x="15.3806%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="15.2074%" y="805" width="0.0768%" height="15" fill="rgb(244,116,16)" fg:x="198" fg:w="1"/><text x="15.4574%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="15.2074%" y="789" width="0.0768%" height="15" fill="rgb(247,45,10)" fg:x="198" fg:w="1"/><text x="15.4574%" y="799.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.2074%" y="773" width="0.0768%" height="15" fill="rgb(228,60,29)" fg:x="198" fg:w="1"/><text x="15.4574%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.2074%" y="757" width="0.0768%" height="15" fill="rgb(205,129,15)" fg:x="198" fg:w="1"/><text x="15.4574%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.5146%" y="757" width="0.0768%" height="15" fill="rgb(206,229,4)" fg:x="202" fg:w="1"/><text x="15.7646%" y="767.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.15%)</title><rect x="15.5146%" y="789" width="0.1536%" height="15" fill="rgb(249,191,30)" fg:x="202" fg:w="2"/><text x="15.7646%" y="799.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.15%)</title><rect x="15.5146%" y="773" width="0.1536%" height="15" fill="rgb(250,84,54)" fg:x="202" fg:w="2"/><text x="15.7646%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.5914%" y="757" width="0.0768%" height="15" fill="rgb(207,25,53)" fg:x="203" fg:w="1"/><text x="15.8414%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="15.7450%" y="741" width="0.0768%" height="15" fill="rgb(235,40,8)" fg:x="205" fg:w="1"/><text x="15.9950%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="15.7450%" y="725" width="0.0768%" height="15" fill="rgb(226,169,33)" fg:x="205" fg:w="1"/><text x="15.9950%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.7450%" y="709" width="0.0768%" height="15" fill="rgb(238,110,8)" fg:x="205" fg:w="1"/><text x="15.9950%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="15.8986%" y="709" width="0.0768%" height="15" fill="rgb(251,206,12)" fg:x="207" fg:w="1"/><text x="16.1486%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.8986%" y="693" width="0.0768%" height="15" fill="rgb(248,171,18)" fg:x="207" fg:w="1"/><text x="16.1486%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.8986%" y="677" width="0.0768%" height="15" fill="rgb(213,65,46)" fg:x="207" fg:w="1"/><text x="16.1486%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.8986%" y="661" width="0.0768%" height="15" fill="rgb(211,154,15)" fg:x="207" fg:w="1"/><text x="16.1486%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.8986%" y="645" width="0.0768%" height="15" fill="rgb(217,75,43)" fg:x="207" fg:w="1"/><text x="16.1486%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.8986%" y="629" width="0.0768%" height="15" fill="rgb(230,32,33)" fg:x="207" fg:w="1"/><text x="16.1486%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.8986%" y="613" width="0.0768%" height="15" fill="rgb(221,100,16)" fg:x="207" fg:w="1"/><text x="16.1486%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.8986%" y="597" width="0.0768%" height="15" fill="rgb(212,129,47)" fg:x="207" fg:w="1"/><text x="16.1486%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="15.9754%" y="661" width="0.1536%" height="15" fill="rgb(239,217,47)" fg:x="208" fg:w="2"/><text x="16.2254%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="15.9754%" y="645" width="0.1536%" height="15" fill="rgb(230,84,24)" fg:x="208" fg:w="2"/><text x="16.2254%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="15.9754%" y="629" width="0.1536%" height="15" fill="rgb(214,153,51)" fg:x="208" fg:w="2"/><text x="16.2254%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0522%" y="613" width="0.0768%" height="15" fill="rgb(231,6,35)" fg:x="209" fg:w="1"/><text x="16.3022%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.38%)</title><rect x="15.8218%" y="741" width="0.3840%" height="15" fill="rgb(229,122,30)" fg:x="206" fg:w="5"/><text x="16.0718%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="15.8986%" y="725" width="0.3072%" height="15" fill="rgb(234,71,10)" fg:x="207" fg:w="4"/><text x="16.1486%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="15.9754%" y="709" width="0.2304%" height="15" fill="rgb(215,173,26)" fg:x="208" fg:w="3"/><text x="16.2254%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="15.9754%" y="693" width="0.2304%" height="15" fill="rgb(248,118,52)" fg:x="208" fg:w="3"/><text x="16.2254%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="15.9754%" y="677" width="0.2304%" height="15" fill="rgb(237,55,46)" fg:x="208" fg:w="3"/><text x="16.2254%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1290%" y="661" width="0.0768%" height="15" fill="rgb(243,214,43)" fg:x="210" fg:w="1"/><text x="16.3790%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.1290%" y="645" width="0.0768%" height="15" fill="rgb(252,123,30)" fg:x="210" fg:w="1"/><text x="16.3790%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1290%" y="629" width="0.0768%" height="15" fill="rgb(215,73,39)" fg:x="210" fg:w="1"/><text x="16.3790%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1290%" y="613" width="0.0768%" height="15" fill="rgb(251,194,29)" fg:x="210" fg:w="1"/><text x="16.3790%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1290%" y="597" width="0.0768%" height="15" fill="rgb(224,58,52)" fg:x="210" fg:w="1"/><text x="16.3790%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1290%" y="581" width="0.0768%" height="15" fill="rgb(248,106,46)" fg:x="210" fg:w="1"/><text x="16.3790%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.15%)</title><rect x="16.2058%" y="693" width="0.1536%" height="15" fill="rgb(223,80,29)" fg:x="211" fg:w="2"/><text x="16.4558%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="16.2058%" y="677" width="0.1536%" height="15" fill="rgb(243,137,9)" fg:x="211" fg:w="2"/><text x="16.4558%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.2826%" y="661" width="0.0768%" height="15" fill="rgb(235,121,28)" fg:x="212" fg:w="1"/><text x="16.5326%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.2826%" y="645" width="0.0768%" height="15" fill="rgb(219,121,41)" fg:x="212" fg:w="1"/><text x="16.5326%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.2826%" y="629" width="0.0768%" height="15" fill="rgb(251,60,6)" fg:x="212" fg:w="1"/><text x="16.5326%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.2826%" y="613" width="0.0768%" height="15" fill="rgb(208,12,30)" fg:x="212" fg:w="1"/><text x="16.5326%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.2826%" y="597" width="0.0768%" height="15" fill="rgb(207,176,36)" fg:x="212" fg:w="1"/><text x="16.5326%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.23%)</title><rect x="16.2058%" y="709" width="0.2304%" height="15" fill="rgb(211,188,29)" fg:x="211" fg:w="3"/><text x="16.4558%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.3594%" y="693" width="0.0768%" height="15" fill="rgb(220,184,37)" fg:x="213" fg:w="1"/><text x="16.6094%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="16.3594%" y="677" width="0.0768%" height="15" fill="rgb(239,87,37)" fg:x="213" fg:w="1"/><text x="16.6094%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.3594%" y="661" width="0.0768%" height="15" fill="rgb(232,113,44)" fg:x="213" fg:w="1"/><text x="16.6094%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.3594%" y="645" width="0.0768%" height="15" fill="rgb(246,25,39)" fg:x="213" fg:w="1"/><text x="16.6094%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.4363%" y="661" width="0.0768%" height="15" fill="rgb(247,30,13)" fg:x="214" fg:w="1"/><text x="16.6863%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.4363%" y="645" width="0.0768%" height="15" fill="rgb(230,176,35)" fg:x="214" fg:w="1"/><text x="16.6863%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4363%" y="629" width="0.0768%" height="15" fill="rgb(222,23,18)" fg:x="214" fg:w="1"/><text x="16.6863%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4363%" y="613" width="0.0768%" height="15" fill="rgb(234,86,8)" fg:x="214" fg:w="1"/><text x="16.6863%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4363%" y="597" width="0.0768%" height="15" fill="rgb(206,218,47)" fg:x="214" fg:w="1"/><text x="16.6863%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4363%" y="581" width="0.0768%" height="15" fill="rgb(229,35,31)" fg:x="214" fg:w="1"/><text x="16.6863%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="16.5131%" y="629" width="0.1536%" height="15" fill="rgb(242,81,7)" fg:x="215" fg:w="2"/><text x="16.7631%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.54%)</title><rect x="16.2058%" y="725" width="0.5376%" height="15" fill="rgb(231,11,35)" fg:x="211" fg:w="7"/><text x="16.4558%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="16.4363%" y="709" width="0.3072%" height="15" fill="rgb(219,218,17)" fg:x="214" fg:w="4"/><text x="16.6863%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.31%)</title><rect x="16.4363%" y="693" width="0.3072%" height="15" fill="rgb(221,83,32)" fg:x="214" fg:w="4"/><text x="16.6863%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.31%)</title><rect x="16.4363%" y="677" width="0.3072%" height="15" fill="rgb(233,49,54)" fg:x="214" fg:w="4"/><text x="16.6863%" y="687.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.23%)</title><rect x="16.5131%" y="661" width="0.2304%" height="15" fill="rgb(206,18,51)" fg:x="215" fg:w="3"/><text x="16.7631%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.23%)</title><rect x="16.5131%" y="645" width="0.2304%" height="15" fill="rgb(249,193,15)" fg:x="215" fg:w="3"/><text x="16.7631%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.6667%" y="629" width="0.0768%" height="15" fill="rgb(245,186,19)" fg:x="217" fg:w="1"/><text x="16.9167%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.6667%" y="613" width="0.0768%" height="15" fill="rgb(230,4,24)" fg:x="217" fg:w="1"/><text x="16.9167%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="16.6667%" y="597" width="0.0768%" height="15" fill="rgb(234,75,27)" fg:x="217" fg:w="1"/><text x="16.9167%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.6667%" y="581" width="0.0768%" height="15" fill="rgb(244,187,35)" fg:x="217" fg:w="1"/><text x="16.9167%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.6667%" y="565" width="0.0768%" height="15" fill="rgb(241,97,43)" fg:x="217" fg:w="1"/><text x="16.9167%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7435%" y="677" width="0.0768%" height="15" fill="rgb(236,94,2)" fg:x="218" fg:w="1"/><text x="16.9935%" y="687.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.69%)</title><rect x="16.2058%" y="741" width="0.6912%" height="15" fill="rgb(231,175,7)" fg:x="211" fg:w="9"/><text x="16.4558%" y="751.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.15%)</title><rect x="16.7435%" y="725" width="0.1536%" height="15" fill="rgb(236,89,47)" fg:x="218" fg:w="2"/><text x="16.9935%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.15%)</title><rect x="16.7435%" y="709" width="0.1536%" height="15" fill="rgb(213,191,37)" fg:x="218" fg:w="2"/><text x="16.9935%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.15%)</title><rect x="16.7435%" y="693" width="0.1536%" height="15" fill="rgb(252,0,34)" fg:x="218" fg:w="2"/><text x="16.9935%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="16.8203%" y="677" width="0.0768%" height="15" fill="rgb(208,145,44)" fg:x="219" fg:w="1"/><text x="17.0703%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.8203%" y="661" width="0.0768%" height="15" fill="rgb(227,95,50)" fg:x="219" fg:w="1"/><text x="17.0703%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.8203%" y="645" width="0.0768%" height="15" fill="rgb(222,136,24)" fg:x="219" fg:w="1"/><text x="17.0703%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.8203%" y="629" width="0.0768%" height="15" fill="rgb(218,105,10)" fg:x="219" fg:w="1"/><text x="17.0703%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.8203%" y="613" width="0.0768%" height="15" fill="rgb(216,65,28)" fg:x="219" fg:w="1"/><text x="17.0703%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.8203%" y="597" width="0.0768%" height="15" fill="rgb(229,6,28)" fg:x="219" fg:w="1"/><text x="17.0703%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.8203%" y="581" width="0.0768%" height="15" fill="rgb(222,160,42)" fg:x="219" fg:w="1"/><text x="17.0703%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.8203%" y="565" width="0.0768%" height="15" fill="rgb(235,83,49)" fg:x="219" fg:w="1"/><text x="17.0703%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.8203%" y="549" width="0.0768%" height="15" fill="rgb(236,86,36)" fg:x="219" fg:w="1"/><text x="17.0703%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.8203%" y="533" width="0.0768%" height="15" fill="rgb(236,19,41)" fg:x="219" fg:w="1"/><text x="17.0703%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.8203%" y="517" width="0.0768%" height="15" fill="rgb(217,71,31)" fg:x="219" fg:w="1"/><text x="17.0703%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.8203%" y="501" width="0.0768%" height="15" fill="rgb(236,209,25)" fg:x="219" fg:w="1"/><text x="17.0703%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.8203%" y="485" width="0.0768%" height="15" fill="rgb(247,104,21)" fg:x="219" fg:w="1"/><text x="17.0703%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="16.8203%" y="469" width="0.0768%" height="15" fill="rgb(243,80,38)" fg:x="219" fg:w="1"/><text x="17.0703%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="16.8203%" y="453" width="0.0768%" height="15" fill="rgb(232,109,38)" fg:x="219" fg:w="1"/><text x="17.0703%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="16.8203%" y="437" width="0.0768%" height="15" fill="rgb(212,177,53)" fg:x="219" fg:w="1"/><text x="17.0703%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="16.8971%" y="661" width="0.0768%" height="15" fill="rgb(227,30,34)" fg:x="220" fg:w="1"/><text x="17.1471%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (18 samples, 1.38%)</title><rect x="15.6682%" y="789" width="1.3825%" height="15" fill="rgb(205,175,25)" fg:x="204" fg:w="18"/><text x="15.9182%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.31%)</title><rect x="15.7450%" y="773" width="1.3057%" height="15" fill="rgb(249,39,54)" fg:x="205" fg:w="17"/><text x="15.9950%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.31%)</title><rect x="15.7450%" y="757" width="1.3057%" height="15" fill="rgb(215,54,37)" fg:x="205" fg:w="17"/><text x="15.9950%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.15%)</title><rect x="16.8971%" y="741" width="0.1536%" height="15" fill="rgb(205,60,46)" fg:x="220" fg:w="2"/><text x="17.1471%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.15%)</title><rect x="16.8971%" y="725" width="0.1536%" height="15" fill="rgb(238,89,29)" fg:x="220" fg:w="2"/><text x="17.1471%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.15%)</title><rect x="16.8971%" y="709" width="0.1536%" height="15" fill="rgb(212,48,10)" fg:x="220" fg:w="2"/><text x="17.1471%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.15%)</title><rect x="16.8971%" y="693" width="0.1536%" height="15" fill="rgb(237,186,28)" fg:x="220" fg:w="2"/><text x="17.1471%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.15%)</title><rect x="16.8971%" y="677" width="0.1536%" height="15" fill="rgb(237,204,4)" fg:x="220" fg:w="2"/><text x="17.1471%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.9739%" y="661" width="0.0768%" height="15" fill="rgb(237,15,47)" fg:x="221" fg:w="1"/><text x="17.2239%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="16.9739%" y="645" width="0.0768%" height="15" fill="rgb(244,110,25)" fg:x="221" fg:w="1"/><text x="17.2239%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.9739%" y="629" width="0.0768%" height="15" fill="rgb(241,12,16)" fg:x="221" fg:w="1"/><text x="17.2239%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.9739%" y="613" width="0.0768%" height="15" fill="rgb(235,25,9)" fg:x="221" fg:w="1"/><text x="17.2239%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.9739%" y="597" width="0.0768%" height="15" fill="rgb(245,159,19)" fg:x="221" fg:w="1"/><text x="17.2239%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="16.9739%" y="581" width="0.0768%" height="15" fill="rgb(236,63,32)" fg:x="221" fg:w="1"/><text x="17.2239%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9739%" y="565" width="0.0768%" height="15" fill="rgb(235,32,52)" fg:x="221" fg:w="1"/><text x="17.2239%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="17.0507%" y="789" width="0.0768%" height="15" fill="rgb(209,176,21)" fg:x="222" fg:w="1"/><text x="17.3007%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="17.1275%" y="773" width="0.0768%" height="15" fill="rgb(205,90,42)" fg:x="223" fg:w="1"/><text x="17.3775%" y="783.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.15%)</title><rect x="17.2043%" y="757" width="0.1536%" height="15" fill="rgb(213,132,16)" fg:x="224" fg:w="2"/><text x="17.4543%" y="767.50"></text></g><g><title>std::env::_var (2 samples, 0.15%)</title><rect x="17.2043%" y="741" width="0.1536%" height="15" fill="rgb(232,11,22)" fg:x="224" fg:w="2"/><text x="17.4543%" y="751.50"></text></g><g><title>std::env::var_os (2 samples, 0.15%)</title><rect x="17.2043%" y="725" width="0.1536%" height="15" fill="rgb(248,167,41)" fg:x="224" fg:w="2"/><text x="17.4543%" y="735.50"></text></g><g><title>std::env::_var_os (2 samples, 0.15%)</title><rect x="17.2043%" y="709" width="0.1536%" height="15" fill="rgb(209,127,6)" fg:x="224" fg:w="2"/><text x="17.4543%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.15%)</title><rect x="17.2043%" y="693" width="0.1536%" height="15" fill="rgb(246,210,34)" fg:x="224" fg:w="2"/><text x="17.4543%" y="703.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.15%)</title><rect x="17.2043%" y="677" width="0.1536%" height="15" fill="rgb(238,165,13)" fg:x="224" fg:w="2"/><text x="17.4543%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.15%)</title><rect x="17.2043%" y="661" width="0.1536%" height="15" fill="rgb(233,98,15)" fg:x="224" fg:w="2"/><text x="17.4543%" y="671.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="17.2811%" y="645" width="0.0768%" height="15" fill="rgb(215,215,51)" fg:x="225" fg:w="1"/><text x="17.5311%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.3579%" y="725" width="0.0768%" height="15" fill="rgb(217,161,25)" fg:x="226" fg:w="1"/><text x="17.6079%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.5115%" y="661" width="0.0768%" height="15" fill="rgb(217,167,48)" fg:x="228" fg:w="1"/><text x="17.7615%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.5115%" y="645" width="0.0768%" height="15" fill="rgb(205,163,34)" fg:x="228" fg:w="1"/><text x="17.7615%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.5115%" y="629" width="0.0768%" height="15" fill="rgb(241,197,31)" fg:x="228" fg:w="1"/><text x="17.7615%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.5115%" y="613" width="0.0768%" height="15" fill="rgb(225,123,11)" fg:x="228" fg:w="1"/><text x="17.7615%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.31%)</title><rect x="17.5115%" y="677" width="0.3072%" height="15" fill="rgb(217,4,20)" fg:x="228" fg:w="4"/><text x="17.7615%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="17.5883%" y="661" width="0.2304%" height="15" fill="rgb(215,55,9)" fg:x="229" fg:w="3"/><text x="17.8383%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="17.6651%" y="645" width="0.1536%" height="15" fill="rgb(218,165,5)" fg:x="230" fg:w="2"/><text x="17.9151%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.7419%" y="629" width="0.0768%" height="15" fill="rgb(222,175,15)" fg:x="231" fg:w="1"/><text x="17.9919%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.8187%" y="613" width="0.0768%" height="15" fill="rgb(223,85,34)" fg:x="232" fg:w="1"/><text x="18.0687%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="17.8187%" y="661" width="0.1536%" height="15" fill="rgb(234,228,29)" fg:x="232" fg:w="2"/><text x="18.0687%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="17.8187%" y="645" width="0.1536%" height="15" fill="rgb(239,7,28)" fg:x="232" fg:w="2"/><text x="18.0687%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="17.8187%" y="629" width="0.1536%" height="15" fill="rgb(252,222,53)" fg:x="232" fg:w="2"/><text x="18.0687%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.8955%" y="613" width="0.0768%" height="15" fill="rgb(232,146,44)" fg:x="233" fg:w="1"/><text x="18.1455%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.0492%" y="645" width="0.0768%" height="15" fill="rgb(243,223,53)" fg:x="235" fg:w="1"/><text x="18.2992%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="18.0492%" y="629" width="0.0768%" height="15" fill="rgb(219,128,25)" fg:x="235" fg:w="1"/><text x="18.2992%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.0492%" y="613" width="0.0768%" height="15" fill="rgb(223,56,32)" fg:x="235" fg:w="1"/><text x="18.2992%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.0492%" y="597" width="0.0768%" height="15" fill="rgb(237,41,3)" fg:x="235" fg:w="1"/><text x="18.2992%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.0492%" y="581" width="0.0768%" height="15" fill="rgb(235,138,9)" fg:x="235" fg:w="1"/><text x="18.2992%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.0492%" y="565" width="0.0768%" height="15" fill="rgb(214,131,10)" fg:x="235" fg:w="1"/><text x="18.2992%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.0492%" y="549" width="0.0768%" height="15" fill="rgb(229,89,7)" fg:x="235" fg:w="1"/><text x="18.2992%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.0492%" y="533" width="0.0768%" height="15" fill="rgb(240,24,42)" fg:x="235" fg:w="1"/><text x="18.2992%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.0492%" y="517" width="0.0768%" height="15" fill="rgb(243,188,54)" fg:x="235" fg:w="1"/><text x="18.2992%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="18.1260%" y="645" width="0.1536%" height="15" fill="rgb(246,92,22)" fg:x="236" fg:w="2"/><text x="18.3760%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="18.1260%" y="629" width="0.1536%" height="15" fill="rgb(211,176,51)" fg:x="236" fg:w="2"/><text x="18.3760%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.2028%" y="613" width="0.0768%" height="15" fill="rgb(246,207,34)" fg:x="237" fg:w="1"/><text x="18.4528%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.2028%" y="597" width="0.0768%" height="15" fill="rgb(239,95,2)" fg:x="237" fg:w="1"/><text x="18.4528%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.2028%" y="581" width="0.0768%" height="15" fill="rgb(211,124,25)" fg:x="237" fg:w="1"/><text x="18.4528%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.2028%" y="565" width="0.0768%" height="15" fill="rgb(231,221,19)" fg:x="237" fg:w="1"/><text x="18.4528%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.2028%" y="549" width="0.0768%" height="15" fill="rgb(239,183,19)" fg:x="237" fg:w="1"/><text x="18.4528%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="18.3564%" y="629" width="0.3072%" height="15" fill="rgb(221,130,29)" fg:x="239" fg:w="4"/><text x="18.6064%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="18.5100%" y="613" width="0.1536%" height="15" fill="rgb(206,130,36)" fg:x="241" fg:w="2"/><text x="18.7600%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.5868%" y="597" width="0.0768%" height="15" fill="rgb(215,70,19)" fg:x="242" fg:w="1"/><text x="18.8368%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="18.7404%" y="613" width="0.2304%" height="15" fill="rgb(244,16,43)" fg:x="244" fg:w="3"/><text x="18.9904%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.8940%" y="597" width="0.0768%" height="15" fill="rgb(222,115,32)" fg:x="246" fg:w="1"/><text x="19.1440%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.8940%" y="581" width="0.0768%" height="15" fill="rgb(247,48,25)" fg:x="246" fg:w="1"/><text x="19.1440%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.9708%" y="597" width="0.0768%" height="15" fill="rgb(226,180,51)" fg:x="247" fg:w="1"/><text x="19.2208%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.9708%" y="581" width="0.0768%" height="15" fill="rgb(217,142,42)" fg:x="247" fg:w="1"/><text x="19.2208%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.9708%" y="565" width="0.0768%" height="15" fill="rgb(220,178,3)" fg:x="247" fg:w="1"/><text x="19.2208%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.0476%" y="581" width="0.0768%" height="15" fill="rgb(217,221,4)" fg:x="248" fg:w="1"/><text x="19.2976%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.0476%" y="565" width="0.0768%" height="15" fill="rgb(237,63,43)" fg:x="248" fg:w="1"/><text x="19.2976%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="19.1244%" y="581" width="0.2304%" height="15" fill="rgb(220,57,8)" fg:x="249" fg:w="3"/><text x="19.3744%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="19.1244%" y="565" width="0.2304%" height="15" fill="rgb(254,186,27)" fg:x="249" fg:w="3"/><text x="19.3744%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.2780%" y="549" width="0.0768%" height="15" fill="rgb(251,57,28)" fg:x="251" fg:w="1"/><text x="19.5280%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.2780%" y="533" width="0.0768%" height="15" fill="rgb(215,228,0)" fg:x="251" fg:w="1"/><text x="19.5280%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.2780%" y="517" width="0.0768%" height="15" fill="rgb(237,218,39)" fg:x="251" fg:w="1"/><text x="19.5280%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.2780%" y="501" width="0.0768%" height="15" fill="rgb(207,2,54)" fg:x="251" fg:w="1"/><text x="19.5280%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.2780%" y="485" width="0.0768%" height="15" fill="rgb(232,76,50)" fg:x="251" fg:w="1"/><text x="19.5280%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.84%)</title><rect x="18.6636%" y="629" width="0.8449%" height="15" fill="rgb(211,85,31)" fg:x="243" fg:w="11"/><text x="18.9136%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.54%)</title><rect x="18.9708%" y="613" width="0.5376%" height="15" fill="rgb(223,210,27)" fg:x="247" fg:w="7"/><text x="19.2208%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.46%)</title><rect x="19.0476%" y="597" width="0.4608%" height="15" fill="rgb(254,36,8)" fg:x="248" fg:w="6"/><text x="19.2976%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="19.3548%" y="581" width="0.1536%" height="15" fill="rgb(213,4,25)" fg:x="252" fg:w="2"/><text x="19.6048%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.4316%" y="565" width="0.0768%" height="15" fill="rgb(224,2,39)" fg:x="253" fg:w="1"/><text x="19.6816%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.4316%" y="549" width="0.0768%" height="15" fill="rgb(208,8,39)" fg:x="253" fg:w="1"/><text x="19.6816%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.84%)</title><rect x="17.9724%" y="661" width="1.8433%" height="15" fill="rgb(216,226,3)" fg:x="234" fg:w="24"/><text x="18.2224%" y="671.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.54%)</title><rect x="18.2796%" y="645" width="1.5361%" height="15" fill="rgb(249,139,31)" fg:x="238" fg:w="20"/><text x="18.5296%" y="655.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="19.5084%" y="629" width="0.3072%" height="15" fill="rgb(242,170,35)" fg:x="254" fg:w="4"/><text x="19.7584%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="19.5853%" y="613" width="0.2304%" height="15" fill="rgb(238,14,9)" fg:x="255" fg:w="3"/><text x="19.8353%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7389%" y="597" width="0.0768%" height="15" fill="rgb(251,81,46)" fg:x="257" fg:w="1"/><text x="19.9889%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.07%)</title><rect x="17.8187%" y="677" width="2.0737%" height="15" fill="rgb(230,23,4)" fg:x="232" fg:w="27"/><text x="18.0687%" y="687.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8157%" y="661" width="0.0768%" height="15" fill="rgb(211,85,25)" fg:x="258" fg:w="1"/><text x="20.0657%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.46%)</title><rect x="17.5115%" y="693" width="2.4578%" height="15" fill="rgb(252,23,31)" fg:x="228" fg:w="32"/><text x="17.7615%" y="703.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8925%" y="677" width="0.0768%" height="15" fill="rgb(234,163,38)" fg:x="259" fg:w="1"/><text x="20.1425%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9693%" y="661" width="0.0768%" height="15" fill="rgb(210,190,50)" fg:x="260" fg:w="1"/><text x="20.2193%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="20.1229%" y="645" width="0.2304%" height="15" fill="rgb(228,158,3)" fg:x="262" fg:w="3"/><text x="20.3729%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="20.1997%" y="629" width="0.1536%" height="15" fill="rgb(216,130,0)" fg:x="263" fg:w="2"/><text x="20.4497%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="20.4301%" y="613" width="0.0768%" height="15" fill="rgb(224,184,10)" fg:x="266" fg:w="1"/><text x="20.6801%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.4301%" y="597" width="0.0768%" height="15" fill="rgb(214,202,18)" fg:x="266" fg:w="1"/><text x="20.6801%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.4301%" y="581" width="0.0768%" height="15" fill="rgb(213,229,54)" fg:x="266" fg:w="1"/><text x="20.6801%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.69%)</title><rect x="19.9693%" y="693" width="0.6912%" height="15" fill="rgb(246,120,0)" fg:x="260" fg:w="9"/><text x="20.2193%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.69%)</title><rect x="19.9693%" y="677" width="0.6912%" height="15" fill="rgb(237,6,15)" fg:x="260" fg:w="9"/><text x="20.2193%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.61%)</title><rect x="20.0461%" y="661" width="0.6144%" height="15" fill="rgb(252,156,15)" fg:x="261" fg:w="8"/><text x="20.2961%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="20.3533%" y="645" width="0.3072%" height="15" fill="rgb(249,78,18)" fg:x="265" fg:w="4"/><text x="20.6033%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="20.4301%" y="629" width="0.2304%" height="15" fill="rgb(230,223,44)" fg:x="266" fg:w="3"/><text x="20.6801%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="20.5069%" y="613" width="0.1536%" height="15" fill="rgb(230,222,32)" fg:x="267" fg:w="2"/><text x="20.7569%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="20.5069%" y="597" width="0.1536%" height="15" fill="rgb(247,54,6)" fg:x="267" fg:w="2"/><text x="20.7569%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="20.7373%" y="677" width="0.0768%" height="15" fill="rgb(247,115,45)" fg:x="270" fg:w="1"/><text x="20.9873%" y="687.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="20.7373%" y="661" width="0.0768%" height="15" fill="rgb(213,203,37)" fg:x="270" fg:w="1"/><text x="20.9873%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.15%)</title><rect x="20.8141%" y="677" width="0.1536%" height="15" fill="rgb(248,188,18)" fg:x="271" fg:w="2"/><text x="21.0641%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="20.8141%" y="661" width="0.1536%" height="15" fill="rgb(206,80,8)" fg:x="271" fg:w="2"/><text x="21.0641%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.0445%" y="645" width="0.0768%" height="15" fill="rgb(245,217,31)" fg:x="274" fg:w="1"/><text x="21.2945%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1214%" y="645" width="0.0768%" height="15" fill="rgb(220,193,15)" fg:x="275" fg:w="1"/><text x="21.3714%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.23%)</title><rect x="21.1982%" y="645" width="0.2304%" height="15" fill="rgb(226,7,19)" fg:x="276" fg:w="3"/><text x="21.4482%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="21.2750%" y="629" width="0.1536%" height="15" fill="rgb(222,145,31)" fg:x="277" fg:w="2"/><text x="21.5250%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.15%)</title><rect x="21.2750%" y="613" width="0.1536%" height="15" fill="rgb(241,193,36)" fg:x="277" fg:w="2"/><text x="21.5250%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="21.3518%" y="597" width="0.0768%" height="15" fill="rgb(225,123,33)" fg:x="278" fg:w="1"/><text x="21.6018%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.38%)</title><rect x="21.4286%" y="645" width="0.3840%" height="15" fill="rgb(246,136,38)" fg:x="279" fg:w="5"/><text x="21.6786%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.31%)</title><rect x="21.5054%" y="629" width="0.3072%" height="15" fill="rgb(243,56,24)" fg:x="280" fg:w="4"/><text x="21.7554%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="21.6590%" y="613" width="0.1536%" height="15" fill="rgb(215,147,2)" fg:x="282" fg:w="2"/><text x="21.9090%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7358%" y="597" width="0.0768%" height="15" fill="rgb(209,155,27)" fg:x="283" fg:w="1"/><text x="21.9858%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7358%" y="581" width="0.0768%" height="15" fill="rgb(222,177,11)" fg:x="283" fg:w="1"/><text x="21.9858%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="21.8894%" y="613" width="0.0768%" height="15" fill="rgb(212,227,15)" fg:x="285" fg:w="1"/><text x="22.1394%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.15%)</title><rect x="22.0430%" y="597" width="0.1536%" height="15" fill="rgb(214,138,20)" fg:x="287" fg:w="2"/><text x="22.2930%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="22.0430%" y="581" width="0.1536%" height="15" fill="rgb(221,170,31)" fg:x="287" fg:w="2"/><text x="22.2930%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.1198%" y="565" width="0.0768%" height="15" fill="rgb(253,207,5)" fg:x="288" fg:w="1"/><text x="22.3698%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5038%" y="565" width="0.0768%" height="15" fill="rgb(212,64,37)" fg:x="293" fg:w="1"/><text x="22.7538%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5038%" y="549" width="0.0768%" height="15" fill="rgb(208,113,51)" fg:x="293" fg:w="1"/><text x="22.7538%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5038%" y="533" width="0.0768%" height="15" fill="rgb(237,15,5)" fg:x="293" fg:w="1"/><text x="22.7538%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="22.7343%" y="549" width="0.0768%" height="15" fill="rgb(238,33,18)" fg:x="296" fg:w="1"/><text x="22.9843%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.00%)</title><rect x="21.9662%" y="613" width="0.9985%" height="15" fill="rgb(253,206,50)" fg:x="286" fg:w="13"/><text x="22.2162%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.77%)</title><rect x="22.1966%" y="597" width="0.7680%" height="15" fill="rgb(242,158,43)" fg:x="289" fg:w="10"/><text x="22.4466%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.61%)</title><rect x="22.3502%" y="581" width="0.6144%" height="15" fill="rgb(213,125,27)" fg:x="291" fg:w="8"/><text x="22.6002%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.38%)</title><rect x="22.5806%" y="565" width="0.3840%" height="15" fill="rgb(233,161,31)" fg:x="294" fg:w="5"/><text x="22.8306%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="22.8111%" y="549" width="0.1536%" height="15" fill="rgb(218,135,6)" fg:x="297" fg:w="2"/><text x="23.0611%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="22.8111%" y="533" width="0.1536%" height="15" fill="rgb(222,73,53)" fg:x="297" fg:w="2"/><text x="23.0611%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.8879%" y="517" width="0.0768%" height="15" fill="rgb(229,66,53)" fg:x="298" fg:w="1"/><text x="23.1379%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8879%" y="501" width="0.0768%" height="15" fill="rgb(208,128,19)" fg:x="298" fg:w="1"/><text x="23.1379%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.8879%" y="485" width="0.0768%" height="15" fill="rgb(235,70,27)" fg:x="298" fg:w="1"/><text x="23.1379%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8879%" y="469" width="0.0768%" height="15" fill="rgb(241,130,30)" fg:x="298" fg:w="1"/><text x="23.1379%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8879%" y="453" width="0.0768%" height="15" fill="rgb(222,57,48)" fg:x="298" fg:w="1"/><text x="23.1379%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8879%" y="437" width="0.0768%" height="15" fill="rgb(225,204,29)" fg:x="298" fg:w="1"/><text x="23.1379%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (15 samples, 1.15%)</title><rect x="21.8894%" y="629" width="1.1521%" height="15" fill="rgb(240,196,35)" fg:x="285" fg:w="15"/><text x="22.1394%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="22.9647%" y="613" width="0.0768%" height="15" fill="rgb(215,150,16)" fg:x="299" fg:w="1"/><text x="23.2147%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9647%" y="597" width="0.0768%" height="15" fill="rgb(209,170,13)" fg:x="299" fg:w="1"/><text x="23.2147%" y="607.50"></text></g><g><title>engine::session::Session::flush (79 samples, 6.07%)</title><rect x="17.1275%" y="789" width="6.0676%" height="15" fill="rgb(235,75,31)" fg:x="223" fg:w="79"/><text x="17.3775%" y="799.50">engine::..</text></g><g><title>engine::session::Session::save_changes (78 samples, 5.99%)</title><rect x="17.2043%" y="773" width="5.9908%" height="15" fill="rgb(252,1,47)" fg:x="224" fg:w="78"/><text x="17.4543%" y="783.50">engine::..</text></g><g><title>engine::session::state::State::close (76 samples, 5.84%)</title><rect x="17.3579%" y="757" width="5.8372%" height="15" fill="rgb(241,2,36)" fg:x="226" fg:w="76"/><text x="17.6079%" y="767.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (76 samples, 5.84%)</title><rect x="17.3579%" y="741" width="5.8372%" height="15" fill="rgb(236,191,4)" fg:x="226" fg:w="76"/><text x="17.6079%" y="751.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (75 samples, 5.76%)</title><rect x="17.4347%" y="725" width="5.7604%" height="15" fill="rgb(212,65,35)" fg:x="227" fg:w="75"/><text x="17.6847%" y="735.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (75 samples, 5.76%)</title><rect x="17.4347%" y="709" width="5.7604%" height="15" fill="rgb(209,49,33)" fg:x="227" fg:w="75"/><text x="17.6847%" y="719.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (33 samples, 2.53%)</title><rect x="20.6605%" y="693" width="2.5346%" height="15" fill="rgb(208,36,46)" fg:x="269" fg:w="33"/><text x="20.9105%" y="703.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (29 samples, 2.23%)</title><rect x="20.9677%" y="677" width="2.2273%" height="15" fill="rgb(210,125,2)" fg:x="273" fg:w="29"/><text x="21.2177%" y="687.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.23%)</title><rect x="20.9677%" y="661" width="2.2273%" height="15" fill="rgb(225,62,6)" fg:x="273" fg:w="29"/><text x="21.2177%" y="671.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.38%)</title><rect x="21.8126%" y="645" width="1.3825%" height="15" fill="rgb(210,54,27)" fg:x="284" fg:w="18"/><text x="22.0626%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="23.0415%" y="629" width="0.1536%" height="15" fill="rgb(249,189,52)" fg:x="300" fg:w="2"/><text x="23.2915%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.1183%" y="613" width="0.0768%" height="15" fill="rgb(225,134,40)" fg:x="301" fg:w="1"/><text x="23.3683%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="23.1183%" y="597" width="0.0768%" height="15" fill="rgb(206,13,37)" fg:x="301" fg:w="1"/><text x="23.3683%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.23%)</title><rect x="23.1951%" y="773" width="0.2304%" height="15" fill="rgb(232,114,28)" fg:x="302" fg:w="3"/><text x="23.4451%" y="783.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="23.3487%" y="757" width="0.0768%" height="15" fill="rgb(253,215,8)" fg:x="304" fg:w="1"/><text x="23.5987%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.3487%" y="741" width="0.0768%" height="15" fill="rgb(254,64,19)" fg:x="304" fg:w="1"/><text x="23.5987%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.3487%" y="725" width="0.0768%" height="15" fill="rgb(242,18,46)" fg:x="304" fg:w="1"/><text x="23.5987%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.3487%" y="709" width="0.0768%" height="15" fill="rgb(239,192,30)" fg:x="304" fg:w="1"/><text x="23.5987%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.31%)</title><rect x="23.1951%" y="789" width="0.3072%" height="15" fill="rgb(232,73,14)" fg:x="302" fg:w="4"/><text x="23.4451%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="23.4255%" y="773" width="0.0768%" height="15" fill="rgb(225,51,9)" fg:x="305" fg:w="1"/><text x="23.6755%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.4255%" y="757" width="0.0768%" height="15" fill="rgb(242,217,54)" fg:x="305" fg:w="1"/><text x="23.6755%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.4255%" y="741" width="0.0768%" height="15" fill="rgb(216,93,3)" fg:x="305" fg:w="1"/><text x="23.6755%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.4255%" y="725" width="0.0768%" height="15" fill="rgb(230,119,33)" fg:x="305" fg:w="1"/><text x="23.6755%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.4255%" y="709" width="0.0768%" height="15" fill="rgb(238,170,27)" fg:x="305" fg:w="1"/><text x="23.6755%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4255%" y="693" width="0.0768%" height="15" fill="rgb(229,8,2)" fg:x="305" fg:w="1"/><text x="23.6755%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.4255%" y="677" width="0.0768%" height="15" fill="rgb(205,214,42)" fg:x="305" fg:w="1"/><text x="23.6755%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.4255%" y="661" width="0.0768%" height="15" fill="rgb(245,113,1)" fg:x="305" fg:w="1"/><text x="23.6755%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.15%)</title><rect x="23.6559%" y="757" width="0.1536%" height="15" fill="rgb(252,50,2)" fg:x="308" fg:w="2"/><text x="23.9059%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.7327%" y="741" width="0.0768%" height="15" fill="rgb(225,122,24)" fg:x="309" fg:w="1"/><text x="23.9827%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.7327%" y="725" width="0.0768%" height="15" fill="rgb(234,129,31)" fg:x="309" fg:w="1"/><text x="23.9827%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.7327%" y="709" width="0.0768%" height="15" fill="rgb(219,177,4)" fg:x="309" fg:w="1"/><text x="23.9827%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.7327%" y="693" width="0.0768%" height="15" fill="rgb(225,142,27)" fg:x="309" fg:w="1"/><text x="23.9827%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.7327%" y="677" width="0.0768%" height="15" fill="rgb(205,107,51)" fg:x="309" fg:w="1"/><text x="23.9827%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.7327%" y="661" width="0.0768%" height="15" fill="rgb(236,223,15)" fg:x="309" fg:w="1"/><text x="23.9827%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.7327%" y="645" width="0.0768%" height="15" fill="rgb(235,133,11)" fg:x="309" fg:w="1"/><text x="23.9827%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.7327%" y="629" width="0.0768%" height="15" fill="rgb(247,172,13)" fg:x="309" fg:w="1"/><text x="23.9827%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.7327%" y="613" width="0.0768%" height="15" fill="rgb(233,191,41)" fg:x="309" fg:w="1"/><text x="23.9827%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.7327%" y="597" width="0.0768%" height="15" fill="rgb(250,65,16)" fg:x="309" fg:w="1"/><text x="23.9827%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7327%" y="581" width="0.0768%" height="15" fill="rgb(206,10,27)" fg:x="309" fg:w="1"/><text x="23.9827%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.8863%" y="709" width="0.0768%" height="15" fill="rgb(212,96,22)" fg:x="311" fg:w="1"/><text x="24.1363%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.8863%" y="693" width="0.0768%" height="15" fill="rgb(206,50,0)" fg:x="311" fg:w="1"/><text x="24.1363%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.8863%" y="677" width="0.0768%" height="15" fill="rgb(249,105,52)" fg:x="311" fg:w="1"/><text x="24.1363%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.8863%" y="661" width="0.0768%" height="15" fill="rgb(216,93,51)" fg:x="311" fg:w="1"/><text x="24.1363%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="23.8095%" y="757" width="0.2304%" height="15" fill="rgb(217,172,13)" fg:x="310" fg:w="3"/><text x="24.0595%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="23.8095%" y="741" width="0.2304%" height="15" fill="rgb(235,199,38)" fg:x="310" fg:w="3"/><text x="24.0595%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="23.8095%" y="725" width="0.2304%" height="15" fill="rgb(221,97,33)" fg:x="310" fg:w="3"/><text x="24.0595%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9631%" y="709" width="0.0768%" height="15" fill="rgb(205,156,50)" fg:x="312" fg:w="1"/><text x="24.2131%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9631%" y="693" width="0.0768%" height="15" fill="rgb(215,142,19)" fg:x="312" fg:w="1"/><text x="24.2131%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9631%" y="677" width="0.0768%" height="15" fill="rgb(232,170,7)" fg:x="312" fg:w="1"/><text x="24.2131%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9631%" y="661" width="0.0768%" height="15" fill="rgb(223,50,17)" fg:x="312" fg:w="1"/><text x="24.2131%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.9631%" y="645" width="0.0768%" height="15" fill="rgb(230,103,46)" fg:x="312" fg:w="1"/><text x="24.2131%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9631%" y="629" width="0.0768%" height="15" fill="rgb(254,30,34)" fg:x="312" fg:w="1"/><text x="24.2131%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9631%" y="613" width="0.0768%" height="15" fill="rgb(235,198,1)" fg:x="312" fg:w="1"/><text x="24.2131%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9631%" y="597" width="0.0768%" height="15" fill="rgb(217,105,47)" fg:x="312" fg:w="1"/><text x="24.2131%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9631%" y="581" width="0.0768%" height="15" fill="rgb(231,18,12)" fg:x="312" fg:w="1"/><text x="24.2131%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0399%" y="757" width="0.0768%" height="15" fill="rgb(218,196,1)" fg:x="313" fg:w="1"/><text x="24.2899%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="24.1167%" y="741" width="0.0768%" height="15" fill="rgb(210,32,3)" fg:x="314" fg:w="1"/><text x="24.3667%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="24.1167%" y="725" width="0.0768%" height="15" fill="rgb(227,178,30)" fg:x="314" fg:w="1"/><text x="24.3667%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.1167%" y="709" width="0.0768%" height="15" fill="rgb(231,140,27)" fg:x="314" fg:w="1"/><text x="24.3667%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="24.1935%" y="741" width="0.0768%" height="15" fill="rgb(206,66,35)" fg:x="315" fg:w="1"/><text x="24.4435%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.1935%" y="725" width="0.0768%" height="15" fill="rgb(212,34,2)" fg:x="315" fg:w="1"/><text x="24.4435%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1935%" y="709" width="0.0768%" height="15" fill="rgb(207,201,33)" fg:x="315" fg:w="1"/><text x="24.4435%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1935%" y="693" width="0.0768%" height="15" fill="rgb(221,135,32)" fg:x="315" fg:w="1"/><text x="24.4435%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.1935%" y="677" width="0.0768%" height="15" fill="rgb(206,77,31)" fg:x="315" fg:w="1"/><text x="24.4435%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1935%" y="661" width="0.0768%" height="15" fill="rgb(252,198,50)" fg:x="315" fg:w="1"/><text x="24.4435%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.23%)</title><rect x="24.1167%" y="757" width="0.2304%" height="15" fill="rgb(206,79,27)" fg:x="314" fg:w="3"/><text x="24.3667%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.2704%" y="741" width="0.0768%" height="15" fill="rgb(228,108,9)" fg:x="316" fg:w="1"/><text x="24.5204%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="24.2704%" y="725" width="0.0768%" height="15" fill="rgb(213,9,39)" fg:x="316" fg:w="1"/><text x="24.5204%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.2704%" y="709" width="0.0768%" height="15" fill="rgb(252,51,13)" fg:x="316" fg:w="1"/><text x="24.5204%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.2704%" y="693" width="0.0768%" height="15" fill="rgb(218,202,39)" fg:x="316" fg:w="1"/><text x="24.5204%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.92%)</title><rect x="23.5023%" y="773" width="0.9217%" height="15" fill="rgb(214,122,21)" fg:x="306" fg:w="12"/><text x="23.7523%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="24.3472%" y="757" width="0.0768%" height="15" fill="rgb(217,205,48)" fg:x="317" fg:w="1"/><text x="24.5972%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="24.3472%" y="741" width="0.0768%" height="15" fill="rgb(230,216,13)" fg:x="317" fg:w="1"/><text x="24.5972%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="24.3472%" y="725" width="0.0768%" height="15" fill="rgb(249,118,4)" fg:x="317" fg:w="1"/><text x="24.5972%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="24.3472%" y="709" width="0.0768%" height="15" fill="rgb(212,207,40)" fg:x="317" fg:w="1"/><text x="24.5972%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.3472%" y="693" width="0.0768%" height="15" fill="rgb(217,156,26)" fg:x="317" fg:w="1"/><text x="24.5972%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3472%" y="677" width="0.0768%" height="15" fill="rgb(226,86,34)" fg:x="317" fg:w="1"/><text x="24.5972%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3472%" y="661" width="0.0768%" height="15" fill="rgb(217,111,30)" fg:x="317" fg:w="1"/><text x="24.5972%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3472%" y="645" width="0.0768%" height="15" fill="rgb(228,64,18)" fg:x="317" fg:w="1"/><text x="24.5972%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3472%" y="629" width="0.0768%" height="15" fill="rgb(254,217,48)" fg:x="317" fg:w="1"/><text x="24.5972%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3472%" y="613" width="0.0768%" height="15" fill="rgb(226,156,48)" fg:x="317" fg:w="1"/><text x="24.5972%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3472%" y="597" width="0.0768%" height="15" fill="rgb(236,168,20)" fg:x="317" fg:w="1"/><text x="24.5972%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="24.4240%" y="757" width="0.0768%" height="15" fill="rgb(239,210,33)" fg:x="318" fg:w="1"/><text x="24.6740%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.4240%" y="741" width="0.0768%" height="15" fill="rgb(242,85,17)" fg:x="318" fg:w="1"/><text x="24.6740%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.4240%" y="725" width="0.0768%" height="15" fill="rgb(221,196,15)" fg:x="318" fg:w="1"/><text x="24.6740%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="24.5008%" y="757" width="0.0768%" height="15" fill="rgb(249,76,21)" fg:x="319" fg:w="1"/><text x="24.7508%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.5008%" y="741" width="0.0768%" height="15" fill="rgb(243,67,29)" fg:x="319" fg:w="1"/><text x="24.7508%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5008%" y="725" width="0.0768%" height="15" fill="rgb(240,159,2)" fg:x="319" fg:w="1"/><text x="24.7508%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5776%" y="677" width="0.0768%" height="15" fill="rgb(244,64,3)" fg:x="320" fg:w="1"/><text x="24.8276%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5776%" y="661" width="0.0768%" height="15" fill="rgb(220,86,40)" fg:x="320" fg:w="1"/><text x="24.8276%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5776%" y="645" width="0.0768%" height="15" fill="rgb(222,194,51)" fg:x="320" fg:w="1"/><text x="24.8276%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5776%" y="629" width="0.0768%" height="15" fill="rgb(207,154,19)" fg:x="320" fg:w="1"/><text x="24.8276%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5776%" y="613" width="0.0768%" height="15" fill="rgb(206,178,36)" fg:x="320" fg:w="1"/><text x="24.8276%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5776%" y="597" width="0.0768%" height="15" fill="rgb(218,8,24)" fg:x="320" fg:w="1"/><text x="24.8276%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.6544%" y="677" width="0.0768%" height="15" fill="rgb(226,83,41)" fg:x="321" fg:w="1"/><text x="24.9044%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.6544%" y="661" width="0.0768%" height="15" fill="rgb(224,23,22)" fg:x="321" fg:w="1"/><text x="24.9044%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.6544%" y="645" width="0.0768%" height="15" fill="rgb(218,198,45)" fg:x="321" fg:w="1"/><text x="24.9044%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.6544%" y="629" width="0.0768%" height="15" fill="rgb(249,147,41)" fg:x="321" fg:w="1"/><text x="24.9044%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="24.5776%" y="725" width="0.2304%" height="15" fill="rgb(244,224,13)" fg:x="320" fg:w="3"/><text x="24.8276%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="24.5776%" y="709" width="0.2304%" height="15" fill="rgb(225,97,27)" fg:x="320" fg:w="3"/><text x="24.8276%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="24.5776%" y="693" width="0.2304%" height="15" fill="rgb(254,64,0)" fg:x="320" fg:w="3"/><text x="24.8276%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7312%" y="677" width="0.0768%" height="15" fill="rgb(208,130,43)" fg:x="322" fg:w="1"/><text x="24.9812%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7312%" y="661" width="0.0768%" height="15" fill="rgb(247,91,25)" fg:x="322" fg:w="1"/><text x="24.9812%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7312%" y="645" width="0.0768%" height="15" fill="rgb(215,218,42)" fg:x="322" fg:w="1"/><text x="24.9812%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7312%" y="629" width="0.0768%" height="15" fill="rgb(233,9,24)" fg:x="322" fg:w="1"/><text x="24.9812%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.7312%" y="613" width="0.0768%" height="15" fill="rgb(252,105,38)" fg:x="322" fg:w="1"/><text x="24.9812%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7312%" y="597" width="0.0768%" height="15" fill="rgb(225,40,49)" fg:x="322" fg:w="1"/><text x="24.9812%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7312%" y="581" width="0.0768%" height="15" fill="rgb(232,196,19)" fg:x="322" fg:w="1"/><text x="24.9812%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7312%" y="565" width="0.0768%" height="15" fill="rgb(207,35,15)" fg:x="322" fg:w="1"/><text x="24.9812%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7312%" y="549" width="0.0768%" height="15" fill="rgb(238,68,36)" fg:x="322" fg:w="1"/><text x="24.9812%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7312%" y="533" width="0.0768%" height="15" fill="rgb(205,158,20)" fg:x="322" fg:w="1"/><text x="24.9812%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="24.7312%" y="517" width="0.0768%" height="15" fill="rgb(232,32,22)" fg:x="322" fg:w="1"/><text x="24.9812%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="24.7312%" y="501" width="0.0768%" height="15" fill="rgb(210,169,6)" fg:x="322" fg:w="1"/><text x="24.9812%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.38%)</title><rect x="24.5776%" y="757" width="0.3840%" height="15" fill="rgb(229,28,12)" fg:x="320" fg:w="5"/><text x="24.8276%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.38%)</title><rect x="24.5776%" y="741" width="0.3840%" height="15" fill="rgb(229,78,10)" fg:x="320" fg:w="5"/><text x="24.8276%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="24.8080%" y="725" width="0.1536%" height="15" fill="rgb(223,139,54)" fg:x="323" fg:w="2"/><text x="25.0580%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="24.8080%" y="709" width="0.1536%" height="15" fill="rgb(207,110,4)" fg:x="323" fg:w="2"/><text x="25.0580%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="24.8080%" y="693" width="0.1536%" height="15" fill="rgb(248,30,41)" fg:x="323" fg:w="2"/><text x="25.0580%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.8848%" y="677" width="0.0768%" height="15" fill="rgb(235,54,25)" fg:x="324" fg:w="1"/><text x="25.1348%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8848%" y="661" width="0.0768%" height="15" fill="rgb(213,107,41)" fg:x="324" fg:w="1"/><text x="25.1348%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.8848%" y="645" width="0.0768%" height="15" fill="rgb(237,102,9)" fg:x="324" fg:w="1"/><text x="25.1348%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8848%" y="629" width="0.0768%" height="15" fill="rgb(252,137,49)" fg:x="324" fg:w="1"/><text x="25.1348%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.8848%" y="613" width="0.0768%" height="15" fill="rgb(233,202,33)" fg:x="324" fg:w="1"/><text x="25.1348%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8848%" y="597" width="0.0768%" height="15" fill="rgb(223,14,51)" fg:x="324" fg:w="1"/><text x="25.1348%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.8848%" y="581" width="0.0768%" height="15" fill="rgb(248,70,23)" fg:x="324" fg:w="1"/><text x="25.1348%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8848%" y="565" width="0.0768%" height="15" fill="rgb(209,207,47)" fg:x="324" fg:w="1"/><text x="25.1348%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.8848%" y="549" width="0.0768%" height="15" fill="rgb(245,124,2)" fg:x="324" fg:w="1"/><text x="25.1348%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8848%" y="533" width="0.0768%" height="15" fill="rgb(249,208,11)" fg:x="324" fg:w="1"/><text x="25.1348%" y="543.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="24.8848%" y="517" width="0.0768%" height="15" fill="rgb(247,112,7)" fg:x="324" fg:w="1"/><text x="25.1348%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0384%" y="709" width="0.0768%" height="15" fill="rgb(209,192,31)" fg:x="326" fg:w="1"/><text x="25.2884%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0384%" y="693" width="0.0768%" height="15" fill="rgb(236,55,19)" fg:x="326" fg:w="1"/><text x="25.2884%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.0384%" y="677" width="0.0768%" height="15" fill="rgb(252,89,41)" fg:x="326" fg:w="1"/><text x="25.2884%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.23%)</title><rect x="24.9616%" y="741" width="0.2304%" height="15" fill="rgb(220,172,14)" fg:x="325" fg:w="3"/><text x="25.2116%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="25.0384%" y="725" width="0.1536%" height="15" fill="rgb(252,65,2)" fg:x="326" fg:w="2"/><text x="25.2884%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.1152%" y="709" width="0.0768%" height="15" fill="rgb(250,20,8)" fg:x="327" fg:w="1"/><text x="25.3652%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1152%" y="693" width="0.0768%" height="15" fill="rgb(234,149,13)" fg:x="327" fg:w="1"/><text x="25.3652%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1152%" y="677" width="0.0768%" height="15" fill="rgb(223,219,12)" fg:x="327" fg:w="1"/><text x="25.3652%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1152%" y="661" width="0.0768%" height="15" fill="rgb(234,13,49)" fg:x="327" fg:w="1"/><text x="25.3652%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.31%)</title><rect x="24.9616%" y="757" width="0.3072%" height="15" fill="rgb(214,41,25)" fg:x="325" fg:w="4"/><text x="25.2116%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1920%" y="741" width="0.0768%" height="15" fill="rgb(232,198,52)" fg:x="328" fg:w="1"/><text x="25.4420%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1920%" y="725" width="0.0768%" height="15" fill="rgb(236,111,46)" fg:x="328" fg:w="1"/><text x="25.4420%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1920%" y="709" width="0.0768%" height="15" fill="rgb(253,30,20)" fg:x="328" fg:w="1"/><text x="25.4420%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1920%" y="693" width="0.0768%" height="15" fill="rgb(247,141,17)" fg:x="328" fg:w="1"/><text x="25.4420%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1920%" y="677" width="0.0768%" height="15" fill="rgb(214,195,21)" fg:x="328" fg:w="1"/><text x="25.4420%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="25.2688%" y="741" width="0.0768%" height="15" fill="rgb(214,98,12)" fg:x="329" fg:w="1"/><text x="25.5188%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="25.2688%" y="725" width="0.0768%" height="15" fill="rgb(239,4,26)" fg:x="329" fg:w="1"/><text x="25.5188%" y="735.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="25.3456%" y="693" width="0.0768%" height="15" fill="rgb(234,210,35)" fg:x="330" fg:w="1"/><text x="25.5956%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.4224%" y="661" width="0.0768%" height="15" fill="rgb(252,178,27)" fg:x="331" fg:w="1"/><text x="25.6724%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.4224%" y="645" width="0.0768%" height="15" fill="rgb(217,50,1)" fg:x="331" fg:w="1"/><text x="25.6724%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.4224%" y="629" width="0.0768%" height="15" fill="rgb(233,137,5)" fg:x="331" fg:w="1"/><text x="25.6724%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.4224%" y="613" width="0.0768%" height="15" fill="rgb(217,227,25)" fg:x="331" fg:w="1"/><text x="25.6724%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.4224%" y="597" width="0.0768%" height="15" fill="rgb(242,89,38)" fg:x="331" fg:w="1"/><text x="25.6724%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.4992%" y="661" width="0.0768%" height="15" fill="rgb(212,190,30)" fg:x="332" fg:w="1"/><text x="25.7492%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.4992%" y="645" width="0.0768%" height="15" fill="rgb(222,120,8)" fg:x="332" fg:w="1"/><text x="25.7492%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.4992%" y="629" width="0.0768%" height="15" fill="rgb(227,181,9)" fg:x="332" fg:w="1"/><text x="25.7492%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.4992%" y="613" width="0.0768%" height="15" fill="rgb(222,125,29)" fg:x="332" fg:w="1"/><text x="25.7492%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.4992%" y="597" width="0.0768%" height="15" fill="rgb(215,153,31)" fg:x="332" fg:w="1"/><text x="25.7492%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.4992%" y="581" width="0.0768%" height="15" fill="rgb(228,77,30)" fg:x="332" fg:w="1"/><text x="25.7492%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.4992%" y="565" width="0.0768%" height="15" fill="rgb(226,110,9)" fg:x="332" fg:w="1"/><text x="25.7492%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.5760%" y="629" width="0.0768%" height="15" fill="rgb(219,111,7)" fg:x="333" fg:w="1"/><text x="25.8260%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.46%)</title><rect x="25.3456%" y="709" width="0.4608%" height="15" fill="rgb(229,167,25)" fg:x="330" fg:w="6"/><text x="25.5956%" y="719.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.38%)</title><rect x="25.4224%" y="693" width="0.3840%" height="15" fill="rgb(209,77,43)" fg:x="331" fg:w="5"/><text x="25.6724%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.38%)</title><rect x="25.4224%" y="677" width="0.3840%" height="15" fill="rgb(233,70,39)" fg:x="331" fg:w="5"/><text x="25.6724%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="25.5760%" y="661" width="0.2304%" height="15" fill="rgb(207,171,44)" fg:x="333" fg:w="3"/><text x="25.8260%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="25.5760%" y="645" width="0.2304%" height="15" fill="rgb(244,91,6)" fg:x="333" fg:w="3"/><text x="25.8260%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="25.6528%" y="629" width="0.1536%" height="15" fill="rgb(234,136,12)" fg:x="334" fg:w="2"/><text x="25.9028%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="25.6528%" y="613" width="0.1536%" height="15" fill="rgb(216,210,38)" fg:x="334" fg:w="2"/><text x="25.9028%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="25.6528%" y="597" width="0.1536%" height="15" fill="rgb(241,227,7)" fg:x="334" fg:w="2"/><text x="25.9028%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="25.6528%" y="581" width="0.1536%" height="15" fill="rgb(241,222,11)" fg:x="334" fg:w="2"/><text x="25.9028%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.15%)</title><rect x="25.6528%" y="565" width="0.1536%" height="15" fill="rgb(246,86,18)" fg:x="334" fg:w="2"/><text x="25.9028%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.15%)</title><rect x="25.6528%" y="549" width="0.1536%" height="15" fill="rgb(224,151,49)" fg:x="334" fg:w="2"/><text x="25.9028%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="25.7296%" y="533" width="0.0768%" height="15" fill="rgb(235,4,41)" fg:x="335" fg:w="1"/><text x="25.9796%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="25.8065%" y="693" width="0.0768%" height="15" fill="rgb(218,30,52)" fg:x="336" fg:w="1"/><text x="26.0565%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.8065%" y="677" width="0.0768%" height="15" fill="rgb(205,124,51)" fg:x="336" fg:w="1"/><text x="26.0565%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.8833%" y="645" width="0.0768%" height="15" fill="rgb(237,126,51)" fg:x="337" fg:w="1"/><text x="26.1333%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.8833%" y="629" width="0.0768%" height="15" fill="rgb(225,32,46)" fg:x="337" fg:w="1"/><text x="26.1333%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.8833%" y="613" width="0.0768%" height="15" fill="rgb(251,60,49)" fg:x="337" fg:w="1"/><text x="26.1333%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.8833%" y="597" width="0.0768%" height="15" fill="rgb(234,18,23)" fg:x="337" fg:w="1"/><text x="26.1333%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.8833%" y="581" width="0.0768%" height="15" fill="rgb(234,25,23)" fg:x="337" fg:w="1"/><text x="26.1333%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.8833%" y="565" width="0.0768%" height="15" fill="rgb(210,43,52)" fg:x="337" fg:w="1"/><text x="26.1333%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.8833%" y="549" width="0.0768%" height="15" fill="rgb(237,198,21)" fg:x="337" fg:w="1"/><text x="26.1333%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.8833%" y="533" width="0.0768%" height="15" fill="rgb(211,20,34)" fg:x="337" fg:w="1"/><text x="26.1333%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.8833%" y="517" width="0.0768%" height="15" fill="rgb(221,155,50)" fg:x="337" fg:w="1"/><text x="26.1333%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.8833%" y="501" width="0.0768%" height="15" fill="rgb(213,214,53)" fg:x="337" fg:w="1"/><text x="26.1333%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.8833%" y="485" width="0.0768%" height="15" fill="rgb(215,229,48)" fg:x="337" fg:w="1"/><text x="26.1333%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.8833%" y="469" width="0.0768%" height="15" fill="rgb(243,88,5)" fg:x="337" fg:w="1"/><text x="26.1333%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="25.8833%" y="661" width="0.1536%" height="15" fill="rgb(216,199,8)" fg:x="337" fg:w="2"/><text x="26.1333%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.9601%" y="645" width="0.0768%" height="15" fill="rgb(241,22,4)" fg:x="338" fg:w="1"/><text x="26.2101%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.00%)</title><rect x="25.3456%" y="741" width="0.9985%" height="15" fill="rgb(209,190,22)" fg:x="330" fg:w="13"/><text x="25.5956%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.00%)</title><rect x="25.3456%" y="725" width="0.9985%" height="15" fill="rgb(251,138,45)" fg:x="330" fg:w="13"/><text x="25.5956%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.54%)</title><rect x="25.8065%" y="709" width="0.5376%" height="15" fill="rgb(219,111,22)" fg:x="336" fg:w="7"/><text x="26.0565%" y="719.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.46%)</title><rect x="25.8833%" y="693" width="0.4608%" height="15" fill="rgb(253,29,49)" fg:x="337" fg:w="6"/><text x="26.1333%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.46%)</title><rect x="25.8833%" y="677" width="0.4608%" height="15" fill="rgb(238,129,49)" fg:x="337" fg:w="6"/><text x="26.1333%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="26.0369%" y="661" width="0.3072%" height="15" fill="rgb(240,26,41)" fg:x="339" fg:w="4"/><text x="26.2869%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="26.0369%" y="645" width="0.3072%" height="15" fill="rgb(221,47,33)" fg:x="339" fg:w="4"/><text x="26.2869%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="26.0369%" y="629" width="0.3072%" height="15" fill="rgb(216,200,17)" fg:x="339" fg:w="4"/><text x="26.2869%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="26.0369%" y="613" width="0.3072%" height="15" fill="rgb(230,151,26)" fg:x="339" fg:w="4"/><text x="26.2869%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.2673%" y="597" width="0.0768%" height="15" fill="rgb(242,182,16)" fg:x="342" fg:w="1"/><text x="26.5173%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.2673%" y="581" width="0.0768%" height="15" fill="rgb(236,35,53)" fg:x="342" fg:w="1"/><text x="26.5173%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="26.3441%" y="709" width="0.0768%" height="15" fill="rgb(214,180,28)" fg:x="343" fg:w="1"/><text x="26.5941%" y="719.50"></text></g><g><title>plugins_core::build::Build::holding (39 samples, 3.00%)</title><rect x="23.5023%" y="789" width="2.9954%" height="15" fill="rgb(208,173,36)" fg:x="306" fg:w="39"/><text x="23.7523%" y="799.50">plu..</text></g><g><title>plugins_core::tools::set_container (27 samples, 2.07%)</title><rect x="24.4240%" y="773" width="2.0737%" height="15" fill="rgb(218,39,15)" fg:x="318" fg:w="27"/><text x="24.6740%" y="783.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (16 samples, 1.23%)</title><rect x="25.2688%" y="757" width="1.2289%" height="15" fill="rgb(213,145,15)" fg:x="329" fg:w="16"/><text x="25.5188%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.15%)</title><rect x="26.3441%" y="741" width="0.1536%" height="15" fill="rgb(242,110,37)" fg:x="343" fg:w="2"/><text x="26.5941%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="26.3441%" y="725" width="0.1536%" height="15" fill="rgb(247,146,22)" fg:x="343" fg:w="2"/><text x="26.5941%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="26.4209%" y="709" width="0.0768%" height="15" fill="rgb(215,191,7)" fg:x="344" fg:w="1"/><text x="26.6709%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="26.4209%" y="693" width="0.0768%" height="15" fill="rgb(240,158,1)" fg:x="344" fg:w="1"/><text x="26.6709%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.4209%" y="677" width="0.0768%" height="15" fill="rgb(241,78,32)" fg:x="344" fg:w="1"/><text x="26.6709%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.4209%" y="661" width="0.0768%" height="15" fill="rgb(248,83,10)" fg:x="344" fg:w="1"/><text x="26.6709%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.4209%" y="645" width="0.0768%" height="15" fill="rgb(241,52,0)" fg:x="344" fg:w="1"/><text x="26.6709%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.4209%" y="629" width="0.0768%" height="15" fill="rgb(238,37,13)" fg:x="344" fg:w="1"/><text x="26.6709%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="26.4209%" y="613" width="0.0768%" height="15" fill="rgb(242,194,17)" fg:x="344" fg:w="1"/><text x="26.6709%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="26.4209%" y="597" width="0.0768%" height="15" fill="rgb(236,96,3)" fg:x="344" fg:w="1"/><text x="26.6709%" y="607.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="26.4209%" y="581" width="0.0768%" height="15" fill="rgb(235,148,34)" fg:x="344" fg:w="1"/><text x="26.6709%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4977%" y="709" width="0.0768%" height="15" fill="rgb(254,12,11)" fg:x="345" fg:w="1"/><text x="26.7477%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4977%" y="693" width="0.0768%" height="15" fill="rgb(207,31,54)" fg:x="345" fg:w="1"/><text x="26.7477%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4977%" y="677" width="0.0768%" height="15" fill="rgb(252,14,28)" fg:x="345" fg:w="1"/><text x="26.7477%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4977%" y="661" width="0.0768%" height="15" fill="rgb(252,108,36)" fg:x="345" fg:w="1"/><text x="26.7477%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4977%" y="645" width="0.0768%" height="15" fill="rgb(214,149,7)" fg:x="345" fg:w="1"/><text x="26.7477%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4977%" y="629" width="0.0768%" height="15" fill="rgb(243,94,12)" fg:x="345" fg:w="1"/><text x="26.7477%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.4977%" y="613" width="0.0768%" height="15" fill="rgb(208,36,10)" fg:x="345" fg:w="1"/><text x="26.7477%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.4977%" y="597" width="0.0768%" height="15" fill="rgb(233,185,52)" fg:x="345" fg:w="1"/><text x="26.7477%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.4977%" y="581" width="0.0768%" height="15" fill="rgb(234,50,45)" fg:x="345" fg:w="1"/><text x="26.7477%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4977%" y="565" width="0.0768%" height="15" fill="rgb(228,92,54)" fg:x="345" fg:w="1"/><text x="26.7477%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4977%" y="549" width="0.0768%" height="15" fill="rgb(224,85,25)" fg:x="345" fg:w="1"/><text x="26.7477%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.4977%" y="533" width="0.0768%" height="15" fill="rgb(246,1,45)" fg:x="345" fg:w="1"/><text x="26.7477%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.4977%" y="517" width="0.0768%" height="15" fill="rgb(240,66,23)" fg:x="345" fg:w="1"/><text x="26.7477%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.4977%" y="501" width="0.0768%" height="15" fill="rgb(222,96,27)" fg:x="345" fg:w="1"/><text x="26.7477%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.4977%" y="485" width="0.0768%" height="15" fill="rgb(212,136,10)" fg:x="345" fg:w="1"/><text x="26.7477%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4977%" y="469" width="0.0768%" height="15" fill="rgb(226,192,50)" fg:x="345" fg:w="1"/><text x="26.7477%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.5745%" y="645" width="0.0768%" height="15" fill="rgb(241,182,31)" fg:x="346" fg:w="1"/><text x="26.8245%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.5745%" y="629" width="0.0768%" height="15" fill="rgb(219,205,47)" fg:x="346" fg:w="1"/><text x="26.8245%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.5745%" y="613" width="0.0768%" height="15" fill="rgb(207,96,14)" fg:x="346" fg:w="1"/><text x="26.8245%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.5745%" y="597" width="0.0768%" height="15" fill="rgb(216,119,9)" fg:x="346" fg:w="1"/><text x="26.8245%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.5745%" y="581" width="0.0768%" height="15" fill="rgb(235,62,36)" fg:x="346" fg:w="1"/><text x="26.8245%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.5745%" y="565" width="0.0768%" height="15" fill="rgb(214,41,27)" fg:x="346" fg:w="1"/><text x="26.8245%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.23%)</title><rect x="26.4977%" y="789" width="0.2304%" height="15" fill="rgb(214,174,37)" fg:x="345" fg:w="3"/><text x="26.7477%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="26.4977%" y="773" width="0.2304%" height="15" fill="rgb(212,11,25)" fg:x="345" fg:w="3"/><text x="26.7477%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="26.4977%" y="757" width="0.2304%" height="15" fill="rgb(217,71,35)" fg:x="345" fg:w="3"/><text x="26.7477%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="26.4977%" y="741" width="0.2304%" height="15" fill="rgb(234,152,9)" fg:x="345" fg:w="3"/><text x="26.7477%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="26.4977%" y="725" width="0.2304%" height="15" fill="rgb(228,32,51)" fg:x="345" fg:w="3"/><text x="26.7477%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="26.5745%" y="709" width="0.1536%" height="15" fill="rgb(209,14,47)" fg:x="346" fg:w="2"/><text x="26.8245%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="26.5745%" y="693" width="0.1536%" height="15" fill="rgb(218,201,17)" fg:x="346" fg:w="2"/><text x="26.8245%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="26.5745%" y="677" width="0.1536%" height="15" fill="rgb(218,98,15)" fg:x="346" fg:w="2"/><text x="26.8245%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="26.5745%" y="661" width="0.1536%" height="15" fill="rgb(233,202,29)" fg:x="346" fg:w="2"/><text x="26.8245%" y="671.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="26.6513%" y="645" width="0.0768%" height="15" fill="rgb(207,196,44)" fg:x="347" fg:w="1"/><text x="26.9013%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.7281%" y="757" width="0.0768%" height="15" fill="rgb(218,63,34)" fg:x="348" fg:w="1"/><text x="26.9781%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.7281%" y="741" width="0.0768%" height="15" fill="rgb(209,10,5)" fg:x="348" fg:w="1"/><text x="26.9781%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.7281%" y="725" width="0.0768%" height="15" fill="rgb(224,36,28)" fg:x="348" fg:w="1"/><text x="26.9781%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.7281%" y="709" width="0.0768%" height="15" fill="rgb(249,178,7)" fg:x="348" fg:w="1"/><text x="26.9781%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.8817%" y="709" width="0.0768%" height="15" fill="rgb(253,163,10)" fg:x="350" fg:w="1"/><text x="27.1317%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.8817%" y="693" width="0.0768%" height="15" fill="rgb(245,67,46)" fg:x="350" fg:w="1"/><text x="27.1317%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="26.8817%" y="725" width="0.1536%" height="15" fill="rgb(225,14,18)" fg:x="350" fg:w="2"/><text x="27.1317%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9585%" y="709" width="0.0768%" height="15" fill="rgb(217,41,54)" fg:x="351" fg:w="1"/><text x="27.2085%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0353%" y="725" width="0.0768%" height="15" fill="rgb(222,111,11)" fg:x="352" fg:w="1"/><text x="27.2853%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.0353%" y="709" width="0.0768%" height="15" fill="rgb(211,85,31)" fg:x="352" fg:w="1"/><text x="27.2853%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0353%" y="693" width="0.0768%" height="15" fill="rgb(223,29,26)" fg:x="352" fg:w="1"/><text x="27.2853%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (7 samples, 0.54%)</title><rect x="26.7281%" y="789" width="0.5376%" height="15" fill="rgb(236,124,50)" fg:x="348" fg:w="7"/><text x="26.9781%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (7 samples, 0.54%)</title><rect x="26.7281%" y="773" width="0.5376%" height="15" fill="rgb(219,148,15)" fg:x="348" fg:w="7"/><text x="26.9781%" y="783.50"></text></g><g><title>kernel::model::props::save_props (6 samples, 0.46%)</title><rect x="26.8049%" y="757" width="0.4608%" height="15" fill="rgb(248,159,33)" fg:x="349" fg:w="6"/><text x="27.0549%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.46%)</title><rect x="26.8049%" y="741" width="0.4608%" height="15" fill="rgb(252,65,8)" fg:x="349" fg:w="6"/><text x="27.0549%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.15%)</title><rect x="27.1121%" y="725" width="0.1536%" height="15" fill="rgb(236,45,7)" fg:x="353" fg:w="2"/><text x="27.3621%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="27.1121%" y="709" width="0.1536%" height="15" fill="rgb(244,3,48)" fg:x="353" fg:w="2"/><text x="27.3621%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.15%)</title><rect x="27.1121%" y="693" width="0.1536%" height="15" fill="rgb(224,123,53)" fg:x="353" fg:w="2"/><text x="27.3621%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="27.1121%" y="677" width="0.1536%" height="15" fill="rgb(223,173,15)" fg:x="353" fg:w="2"/><text x="27.3621%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.15%)</title><rect x="27.1121%" y="661" width="0.1536%" height="15" fill="rgb(254,181,5)" fg:x="353" fg:w="2"/><text x="27.3621%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="27.1889%" y="645" width="0.0768%" height="15" fill="rgb(243,124,33)" fg:x="354" fg:w="1"/><text x="27.4389%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.1889%" y="629" width="0.0768%" height="15" fill="rgb(253,220,11)" fg:x="354" fg:w="1"/><text x="27.4389%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.1889%" y="613" width="0.0768%" height="15" fill="rgb(217,14,4)" fg:x="354" fg:w="1"/><text x="27.4389%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.3425%" y="517" width="0.0768%" height="15" fill="rgb(209,196,12)" fg:x="356" fg:w="1"/><text x="27.5925%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.3425%" y="501" width="0.0768%" height="15" fill="rgb(237,108,29)" fg:x="356" fg:w="1"/><text x="27.5925%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.3425%" y="485" width="0.0768%" height="15" fill="rgb(216,173,20)" fg:x="356" fg:w="1"/><text x="27.5925%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.3425%" y="469" width="0.0768%" height="15" fill="rgb(245,27,6)" fg:x="356" fg:w="1"/><text x="27.5925%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="27.2657%" y="693" width="0.2304%" height="15" fill="rgb(210,181,20)" fg:x="355" fg:w="3"/><text x="27.5157%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="27.3425%" y="677" width="0.1536%" height="15" fill="rgb(235,213,1)" fg:x="356" fg:w="2"/><text x="27.5925%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="27.3425%" y="661" width="0.1536%" height="15" fill="rgb(239,68,43)" fg:x="356" fg:w="2"/><text x="27.5925%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="27.3425%" y="645" width="0.1536%" height="15" fill="rgb(254,137,43)" fg:x="356" fg:w="2"/><text x="27.5925%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="27.3425%" y="629" width="0.1536%" height="15" fill="rgb(252,170,38)" fg:x="356" fg:w="2"/><text x="27.5925%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="27.3425%" y="613" width="0.1536%" height="15" fill="rgb(234,21,42)" fg:x="356" fg:w="2"/><text x="27.5925%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="27.3425%" y="597" width="0.1536%" height="15" fill="rgb(216,145,40)" fg:x="356" fg:w="2"/><text x="27.5925%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="27.3425%" y="581" width="0.1536%" height="15" fill="rgb(251,73,9)" fg:x="356" fg:w="2"/><text x="27.5925%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="27.3425%" y="565" width="0.1536%" height="15" fill="rgb(242,54,6)" fg:x="356" fg:w="2"/><text x="27.5925%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="27.3425%" y="549" width="0.1536%" height="15" fill="rgb(239,70,7)" fg:x="356" fg:w="2"/><text x="27.5925%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="27.3425%" y="533" width="0.1536%" height="15" fill="rgb(216,159,35)" fg:x="356" fg:w="2"/><text x="27.5925%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="27.4194%" y="517" width="0.0768%" height="15" fill="rgb(224,50,39)" fg:x="357" fg:w="1"/><text x="27.6694%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="27.4194%" y="501" width="0.0768%" height="15" fill="rgb(235,9,35)" fg:x="357" fg:w="1"/><text x="27.6694%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="27.2657%" y="709" width="0.3072%" height="15" fill="rgb(239,34,21)" fg:x="355" fg:w="4"/><text x="27.5157%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4962%" y="693" width="0.0768%" height="15" fill="rgb(218,162,43)" fg:x="358" fg:w="1"/><text x="27.7462%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5730%" y="709" width="0.0768%" height="15" fill="rgb(219,89,33)" fg:x="359" fg:w="1"/><text x="27.8230%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.5730%" y="693" width="0.0768%" height="15" fill="rgb(226,125,37)" fg:x="359" fg:w="1"/><text x="27.8230%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5730%" y="677" width="0.0768%" height="15" fill="rgb(233,149,30)" fg:x="359" fg:w="1"/><text x="27.8230%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.5730%" y="661" width="0.0768%" height="15" fill="rgb(236,8,18)" fg:x="359" fg:w="1"/><text x="27.8230%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.6498%" y="613" width="0.0768%" height="15" fill="rgb(205,176,9)" fg:x="360" fg:w="1"/><text x="27.8998%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.54%)</title><rect x="27.2657%" y="757" width="0.5376%" height="15" fill="rgb(252,103,44)" fg:x="355" fg:w="7"/><text x="27.5157%" y="767.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.54%)</title><rect x="27.2657%" y="741" width="0.5376%" height="15" fill="rgb(207,68,53)" fg:x="355" fg:w="7"/><text x="27.5157%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.54%)</title><rect x="27.2657%" y="725" width="0.5376%" height="15" fill="rgb(218,193,48)" fg:x="355" fg:w="7"/><text x="27.5157%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="27.6498%" y="709" width="0.1536%" height="15" fill="rgb(234,121,52)" fg:x="360" fg:w="2"/><text x="27.8998%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="27.6498%" y="693" width="0.1536%" height="15" fill="rgb(227,218,49)" fg:x="360" fg:w="2"/><text x="27.8998%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="27.6498%" y="677" width="0.1536%" height="15" fill="rgb(221,8,7)" fg:x="360" fg:w="2"/><text x="27.8998%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="27.6498%" y="661" width="0.1536%" height="15" fill="rgb(217,151,36)" fg:x="360" fg:w="2"/><text x="27.8998%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="27.6498%" y="645" width="0.1536%" height="15" fill="rgb(213,71,5)" fg:x="360" fg:w="2"/><text x="27.8998%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="27.6498%" y="629" width="0.1536%" height="15" fill="rgb(225,145,43)" fg:x="360" fg:w="2"/><text x="27.8998%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.7266%" y="613" width="0.0768%" height="15" fill="rgb(235,118,19)" fg:x="361" fg:w="1"/><text x="27.9766%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.7266%" y="597" width="0.0768%" height="15" fill="rgb(214,102,36)" fg:x="361" fg:w="1"/><text x="27.9766%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.7266%" y="581" width="0.0768%" height="15" fill="rgb(220,56,43)" fg:x="361" fg:w="1"/><text x="27.9766%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.7266%" y="565" width="0.0768%" height="15" fill="rgb(246,136,46)" fg:x="361" fg:w="1"/><text x="27.9766%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8034%" y="709" width="0.0768%" height="15" fill="rgb(249,99,12)" fg:x="362" fg:w="1"/><text x="28.0534%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8034%" y="693" width="0.0768%" height="15" fill="rgb(224,31,42)" fg:x="362" fg:w="1"/><text x="28.0534%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8034%" y="677" width="0.0768%" height="15" fill="rgb(208,96,21)" fg:x="362" fg:w="1"/><text x="28.0534%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.15%)</title><rect x="27.8034%" y="741" width="0.1536%" height="15" fill="rgb(237,229,7)" fg:x="362" fg:w="2"/><text x="28.0534%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="27.8034%" y="725" width="0.1536%" height="15" fill="rgb(210,12,6)" fg:x="362" fg:w="2"/><text x="28.0534%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.8802%" y="709" width="0.0768%" height="15" fill="rgb(240,9,34)" fg:x="363" fg:w="1"/><text x="28.1302%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8802%" y="693" width="0.0768%" height="15" fill="rgb(211,68,37)" fg:x="363" fg:w="1"/><text x="28.1302%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.8802%" y="677" width="0.0768%" height="15" fill="rgb(249,138,50)" fg:x="363" fg:w="1"/><text x="28.1302%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8802%" y="661" width="0.0768%" height="15" fill="rgb(243,185,40)" fg:x="363" fg:w="1"/><text x="28.1302%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="27.8802%" y="645" width="0.0768%" height="15" fill="rgb(242,92,35)" fg:x="363" fg:w="1"/><text x="28.1302%" y="655.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="27.8802%" y="629" width="0.0768%" height="15" fill="rgb(244,98,5)" fg:x="363" fg:w="1"/><text x="28.1302%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.23%)</title><rect x="27.8034%" y="757" width="0.2304%" height="15" fill="rgb(228,186,29)" fg:x="362" fg:w="3"/><text x="28.0534%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="27.9570%" y="741" width="0.0768%" height="15" fill="rgb(253,7,44)" fg:x="364" fg:w="1"/><text x="28.2070%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="27.9570%" y="725" width="0.0768%" height="15" fill="rgb(216,11,45)" fg:x="364" fg:w="1"/><text x="28.2070%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.9570%" y="709" width="0.0768%" height="15" fill="rgb(205,67,3)" fg:x="364" fg:w="1"/><text x="28.2070%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.9570%" y="693" width="0.0768%" height="15" fill="rgb(250,18,3)" fg:x="364" fg:w="1"/><text x="28.2070%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.0338%" y="677" width="0.0768%" height="15" fill="rgb(241,222,43)" fg:x="365" fg:w="1"/><text x="28.2838%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.0338%" y="661" width="0.0768%" height="15" fill="rgb(233,115,3)" fg:x="365" fg:w="1"/><text x="28.2838%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.0338%" y="645" width="0.0768%" height="15" fill="rgb(215,165,25)" fg:x="365" fg:w="1"/><text x="28.2838%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.0338%" y="629" width="0.0768%" height="15" fill="rgb(234,179,6)" fg:x="365" fg:w="1"/><text x="28.2838%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="28.0338%" y="709" width="0.1536%" height="15" fill="rgb(215,82,23)" fg:x="365" fg:w="2"/><text x="28.2838%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="28.0338%" y="693" width="0.1536%" height="15" fill="rgb(211,47,18)" fg:x="365" fg:w="2"/><text x="28.2838%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.1106%" y="677" width="0.0768%" height="15" fill="rgb(248,17,9)" fg:x="366" fg:w="1"/><text x="28.3606%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.1106%" y="661" width="0.0768%" height="15" fill="rgb(210,212,12)" fg:x="366" fg:w="1"/><text x="28.3606%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.1106%" y="645" width="0.0768%" height="15" fill="rgb(230,135,45)" fg:x="366" fg:w="1"/><text x="28.3606%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1106%" y="629" width="0.0768%" height="15" fill="rgb(214,121,41)" fg:x="366" fg:w="1"/><text x="28.3606%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1874%" y="693" width="0.0768%" height="15" fill="rgb(239,165,45)" fg:x="367" fg:w="1"/><text x="28.4374%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2642%" y="677" width="0.0768%" height="15" fill="rgb(214,85,51)" fg:x="368" fg:w="1"/><text x="28.5142%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2642%" y="661" width="0.0768%" height="15" fill="rgb(223,90,27)" fg:x="368" fg:w="1"/><text x="28.5142%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2642%" y="645" width="0.0768%" height="15" fill="rgb(244,84,11)" fg:x="368" fg:w="1"/><text x="28.5142%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2642%" y="629" width="0.0768%" height="15" fill="rgb(253,41,47)" fg:x="368" fg:w="1"/><text x="28.5142%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.3410%" y="677" width="0.0768%" height="15" fill="rgb(232,39,5)" fg:x="369" fg:w="1"/><text x="28.5910%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.3410%" y="661" width="0.0768%" height="15" fill="rgb(211,93,4)" fg:x="369" fg:w="1"/><text x="28.5910%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.3410%" y="645" width="0.0768%" height="15" fill="rgb(219,50,49)" fg:x="369" fg:w="1"/><text x="28.5910%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="28.4178%" y="629" width="0.0768%" height="15" fill="rgb(232,80,19)" fg:x="370" fg:w="1"/><text x="28.6678%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.31%)</title><rect x="27.2657%" y="773" width="1.3057%" height="15" fill="rgb(215,227,39)" fg:x="355" fg:w="17"/><text x="27.5157%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.54%)</title><rect x="28.0338%" y="757" width="0.5376%" height="15" fill="rgb(211,99,12)" fg:x="365" fg:w="7"/><text x="28.2838%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.54%)</title><rect x="28.0338%" y="741" width="0.5376%" height="15" fill="rgb(214,158,5)" fg:x="365" fg:w="7"/><text x="28.2838%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.54%)</title><rect x="28.0338%" y="725" width="0.5376%" height="15" fill="rgb(242,19,53)" fg:x="365" fg:w="7"/><text x="28.2838%" y="735.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.38%)</title><rect x="28.1874%" y="709" width="0.3840%" height="15" fill="rgb(208,18,20)" fg:x="367" fg:w="5"/><text x="28.4374%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.31%)</title><rect x="28.2642%" y="693" width="0.3072%" height="15" fill="rgb(250,44,11)" fg:x="368" fg:w="4"/><text x="28.5142%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.15%)</title><rect x="28.4178%" y="677" width="0.1536%" height="15" fill="rgb(238,159,13)" fg:x="370" fg:w="2"/><text x="28.6678%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="28.4178%" y="661" width="0.1536%" height="15" fill="rgb(231,74,18)" fg:x="370" fg:w="2"/><text x="28.6678%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.15%)</title><rect x="28.4178%" y="645" width="0.1536%" height="15" fill="rgb(229,219,45)" fg:x="370" fg:w="2"/><text x="28.6678%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.4946%" y="629" width="0.0768%" height="15" fill="rgb(210,221,1)" fg:x="371" fg:w="1"/><text x="28.7446%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="28.4946%" y="613" width="0.0768%" height="15" fill="rgb(209,60,51)" fg:x="371" fg:w="1"/><text x="28.7446%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4946%" y="597" width="0.0768%" height="15" fill="rgb(252,97,34)" fg:x="371" fg:w="1"/><text x="28.7446%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4946%" y="581" width="0.0768%" height="15" fill="rgb(243,211,37)" fg:x="371" fg:w="1"/><text x="28.7446%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.5714%" y="757" width="0.0768%" height="15" fill="rgb(210,229,37)" fg:x="372" fg:w="1"/><text x="28.8214%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="28.6482%" y="757" width="0.0768%" height="15" fill="rgb(220,208,43)" fg:x="373" fg:w="1"/><text x="28.8982%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.6482%" y="741" width="0.0768%" height="15" fill="rgb(218,118,50)" fg:x="373" fg:w="1"/><text x="28.8982%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.15%)</title><rect x="28.7250%" y="725" width="0.1536%" height="15" fill="rgb(254,169,52)" fg:x="374" fg:w="2"/><text x="28.9750%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="28.7250%" y="709" width="0.1536%" height="15" fill="rgb(221,214,37)" fg:x="374" fg:w="2"/><text x="28.9750%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="28.7250%" y="693" width="0.1536%" height="15" fill="rgb(254,186,32)" fg:x="374" fg:w="2"/><text x="28.9750%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="28.7250%" y="677" width="0.1536%" height="15" fill="rgb(215,144,43)" fg:x="374" fg:w="2"/><text x="28.9750%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="28.7250%" y="661" width="0.1536%" height="15" fill="rgb(252,21,46)" fg:x="374" fg:w="2"/><text x="28.9750%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="28.7250%" y="645" width="0.1536%" height="15" fill="rgb(207,166,46)" fg:x="374" fg:w="2"/><text x="28.9750%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="28.7250%" y="629" width="0.1536%" height="15" fill="rgb(253,37,49)" fg:x="374" fg:w="2"/><text x="28.9750%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="28.7250%" y="613" width="0.1536%" height="15" fill="rgb(222,97,20)" fg:x="374" fg:w="2"/><text x="28.9750%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="28.7250%" y="597" width="0.1536%" height="15" fill="rgb(244,181,26)" fg:x="374" fg:w="2"/><text x="28.9750%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8018%" y="581" width="0.0768%" height="15" fill="rgb(241,22,29)" fg:x="375" fg:w="1"/><text x="29.0518%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.8018%" y="565" width="0.0768%" height="15" fill="rgb(206,200,43)" fg:x="375" fg:w="1"/><text x="29.0518%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.8018%" y="549" width="0.0768%" height="15" fill="rgb(226,224,43)" fg:x="375" fg:w="1"/><text x="29.0518%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.8018%" y="533" width="0.0768%" height="15" fill="rgb(253,129,28)" fg:x="375" fg:w="1"/><text x="29.0518%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8018%" y="517" width="0.0768%" height="15" fill="rgb(252,99,33)" fg:x="375" fg:w="1"/><text x="29.0518%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8018%" y="501" width="0.0768%" height="15" fill="rgb(208,123,45)" fg:x="375" fg:w="1"/><text x="29.0518%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.8018%" y="485" width="0.0768%" height="15" fill="rgb(251,106,12)" fg:x="375" fg:w="1"/><text x="29.0518%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.8018%" y="469" width="0.0768%" height="15" fill="rgb(240,209,35)" fg:x="375" fg:w="1"/><text x="29.0518%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.8018%" y="453" width="0.0768%" height="15" fill="rgb(214,52,50)" fg:x="375" fg:w="1"/><text x="29.0518%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.8018%" y="437" width="0.0768%" height="15" fill="rgb(234,119,4)" fg:x="375" fg:w="1"/><text x="29.0518%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.8018%" y="421" width="0.0768%" height="15" fill="rgb(228,181,36)" fg:x="375" fg:w="1"/><text x="29.0518%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.8786%" y="645" width="0.0768%" height="15" fill="rgb(213,171,42)" fg:x="376" fg:w="1"/><text x="29.1286%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="28.7250%" y="757" width="0.3072%" height="15" fill="rgb(239,14,41)" fg:x="374" fg:w="4"/><text x="28.9750%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="28.7250%" y="741" width="0.3072%" height="15" fill="rgb(239,111,46)" fg:x="374" fg:w="4"/><text x="28.9750%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="28.8786%" y="725" width="0.1536%" height="15" fill="rgb(214,72,7)" fg:x="376" fg:w="2"/><text x="29.1286%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="28.8786%" y="709" width="0.1536%" height="15" fill="rgb(221,114,1)" fg:x="376" fg:w="2"/><text x="29.1286%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="28.8786%" y="693" width="0.1536%" height="15" fill="rgb(213,143,14)" fg:x="376" fg:w="2"/><text x="29.1286%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="28.8786%" y="677" width="0.1536%" height="15" fill="rgb(220,221,53)" fg:x="376" fg:w="2"/><text x="29.1286%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="28.8786%" y="661" width="0.1536%" height="15" fill="rgb(236,189,27)" fg:x="376" fg:w="2"/><text x="29.1286%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.9555%" y="645" width="0.0768%" height="15" fill="rgb(252,139,49)" fg:x="377" fg:w="1"/><text x="29.2055%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.9555%" y="629" width="0.0768%" height="15" fill="rgb(231,158,33)" fg:x="377" fg:w="1"/><text x="29.2055%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.9555%" y="613" width="0.0768%" height="15" fill="rgb(207,201,15)" fg:x="377" fg:w="1"/><text x="29.2055%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.9555%" y="597" width="0.0768%" height="15" fill="rgb(218,43,48)" fg:x="377" fg:w="1"/><text x="29.2055%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.9555%" y="581" width="0.0768%" height="15" fill="rgb(244,63,52)" fg:x="377" fg:w="1"/><text x="29.2055%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.9555%" y="565" width="0.0768%" height="15" fill="rgb(236,60,17)" fg:x="377" fg:w="1"/><text x="29.2055%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.0323%" y="741" width="0.0768%" height="15" fill="rgb(205,206,29)" fg:x="378" fg:w="1"/><text x="29.2823%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.1091%" y="725" width="0.0768%" height="15" fill="rgb(205,209,35)" fg:x="379" fg:w="1"/><text x="29.3591%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.23%)</title><rect x="29.0323%" y="757" width="0.2304%" height="15" fill="rgb(227,112,14)" fg:x="378" fg:w="3"/><text x="29.2823%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="29.1091%" y="741" width="0.1536%" height="15" fill="rgb(248,151,9)" fg:x="379" fg:w="2"/><text x="29.3591%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.1859%" y="725" width="0.0768%" height="15" fill="rgb(247,45,40)" fg:x="380" fg:w="1"/><text x="29.4359%" y="735.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.15%)</title><rect x="29.2627%" y="741" width="0.1536%" height="15" fill="rgb(232,185,16)" fg:x="381" fg:w="2"/><text x="29.5127%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="29.2627%" y="725" width="0.1536%" height="15" fill="rgb(215,45,44)" fg:x="381" fg:w="2"/><text x="29.5127%" y="735.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.3395%" y="709" width="0.0768%" height="15" fill="rgb(206,69,32)" fg:x="382" fg:w="1"/><text x="29.5895%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.23%)</title><rect x="29.2627%" y="757" width="0.2304%" height="15" fill="rgb(233,98,50)" fg:x="381" fg:w="3"/><text x="29.5127%" y="767.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="29.4163%" y="741" width="0.0768%" height="15" fill="rgb(232,217,52)" fg:x="383" fg:w="1"/><text x="29.6663%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5699%" y="629" width="0.0768%" height="15" fill="rgb(250,42,51)" fg:x="385" fg:w="1"/><text x="29.8199%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5699%" y="613" width="0.0768%" height="15" fill="rgb(241,200,26)" fg:x="385" fg:w="1"/><text x="29.8199%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="29.5699%" y="661" width="0.1536%" height="15" fill="rgb(207,10,32)" fg:x="385" fg:w="2"/><text x="29.8199%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="29.5699%" y="645" width="0.1536%" height="15" fill="rgb(214,63,15)" fg:x="385" fg:w="2"/><text x="29.8199%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6467%" y="629" width="0.0768%" height="15" fill="rgb(234,176,14)" fg:x="386" fg:w="1"/><text x="29.8967%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="29.5699%" y="709" width="0.2304%" height="15" fill="rgb(226,104,52)" fg:x="385" fg:w="3"/><text x="29.8199%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="29.5699%" y="693" width="0.2304%" height="15" fill="rgb(211,222,1)" fg:x="385" fg:w="3"/><text x="29.8199%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="29.5699%" y="677" width="0.2304%" height="15" fill="rgb(237,7,3)" fg:x="385" fg:w="3"/><text x="29.8199%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.7235%" y="661" width="0.0768%" height="15" fill="rgb(218,143,7)" fg:x="387" fg:w="1"/><text x="29.9735%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.7235%" y="645" width="0.0768%" height="15" fill="rgb(208,25,22)" fg:x="387" fg:w="1"/><text x="29.9735%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.7235%" y="629" width="0.0768%" height="15" fill="rgb(228,127,16)" fg:x="387" fg:w="1"/><text x="29.9735%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.7235%" y="613" width="0.0768%" height="15" fill="rgb(237,86,27)" fg:x="387" fg:w="1"/><text x="29.9735%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.7235%" y="597" width="0.0768%" height="15" fill="rgb(207,125,19)" fg:x="387" fg:w="1"/><text x="29.9735%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.7235%" y="581" width="0.0768%" height="15" fill="rgb(243,195,0)" fg:x="387" fg:w="1"/><text x="29.9735%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (192 samples, 14.75%)</title><rect x="15.2842%" y="805" width="14.7465%" height="15" fill="rgb(230,95,18)" fg:x="199" fg:w="192"/><text x="15.5342%" y="815.50">plugins_core::build::B..</text></g><g><title>plugins_core::build::Build::occupying (36 samples, 2.76%)</title><rect x="27.2657%" y="789" width="2.7650%" height="15" fill="rgb(232,157,21)" fg:x="355" fg:w="36"/><text x="27.5157%" y="799.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (19 samples, 1.46%)</title><rect x="28.5714%" y="773" width="1.4593%" height="15" fill="rgb(212,120,50)" fg:x="372" fg:w="19"/><text x="28.8214%" y="783.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.54%)</title><rect x="29.4931%" y="757" width="0.5376%" height="15" fill="rgb(222,204,44)" fg:x="384" fg:w="7"/><text x="29.7431%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.46%)</title><rect x="29.5699%" y="741" width="0.4608%" height="15" fill="rgb(236,6,33)" fg:x="385" fg:w="6"/><text x="29.8199%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.46%)</title><rect x="29.5699%" y="725" width="0.4608%" height="15" fill="rgb(247,11,38)" fg:x="385" fg:w="6"/><text x="29.8199%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="29.8003%" y="709" width="0.2304%" height="15" fill="rgb(215,111,0)" fg:x="388" fg:w="3"/><text x="30.0503%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="29.8003%" y="693" width="0.2304%" height="15" fill="rgb(211,65,46)" fg:x="388" fg:w="3"/><text x="30.0503%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="29.8003%" y="677" width="0.2304%" height="15" fill="rgb(216,5,12)" fg:x="388" fg:w="3"/><text x="30.0503%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="29.8003%" y="661" width="0.2304%" height="15" fill="rgb(226,7,2)" fg:x="388" fg:w="3"/><text x="30.0503%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="29.8003%" y="645" width="0.2304%" height="15" fill="rgb(242,116,12)" fg:x="388" fg:w="3"/><text x="30.0503%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="29.8003%" y="629" width="0.2304%" height="15" fill="rgb(249,209,7)" fg:x="388" fg:w="3"/><text x="30.0503%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="29.8003%" y="613" width="0.2304%" height="15" fill="rgb(232,73,17)" fg:x="388" fg:w="3"/><text x="30.0503%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9539%" y="597" width="0.0768%" height="15" fill="rgb(214,13,32)" fg:x="390" fg:w="1"/><text x="30.2039%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9539%" y="581" width="0.0768%" height="15" fill="rgb(221,125,10)" fg:x="390" fg:w="1"/><text x="30.2039%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.9539%" y="565" width="0.0768%" height="15" fill="rgb(246,7,44)" fg:x="390" fg:w="1"/><text x="30.2039%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.9539%" y="549" width="0.0768%" height="15" fill="rgb(239,18,35)" fg:x="390" fg:w="1"/><text x="30.2039%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.9539%" y="533" width="0.0768%" height="15" fill="rgb(250,222,16)" fg:x="390" fg:w="1"/><text x="30.2039%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9539%" y="517" width="0.0768%" height="15" fill="rgb(219,100,8)" fg:x="390" fg:w="1"/><text x="30.2039%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9539%" y="501" width="0.0768%" height="15" fill="rgb(240,62,13)" fg:x="390" fg:w="1"/><text x="30.2039%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.9539%" y="485" width="0.0768%" height="15" fill="rgb(253,194,2)" fg:x="390" fg:w="1"/><text x="30.2039%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.9539%" y="469" width="0.0768%" height="15" fill="rgb(235,58,31)" fg:x="390" fg:w="1"/><text x="30.2039%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.9539%" y="453" width="0.0768%" height="15" fill="rgb(231,37,11)" fg:x="390" fg:w="1"/><text x="30.2039%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.9539%" y="437" width="0.0768%" height="15" fill="rgb(235,133,0)" fg:x="390" fg:w="1"/><text x="30.2039%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9539%" y="421" width="0.0768%" height="15" fill="rgb(212,185,40)" fg:x="390" fg:w="1"/><text x="30.2039%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="30.0307%" y="773" width="0.0768%" height="15" fill="rgb(216,68,42)" fg:x="391" fg:w="1"/><text x="30.2807%" y="783.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="30.0307%" y="757" width="0.0768%" height="15" fill="rgb(239,81,4)" fg:x="391" fg:w="1"/><text x="30.2807%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.0307%" y="741" width="0.0768%" height="15" fill="rgb(206,86,6)" fg:x="391" fg:w="1"/><text x="30.2807%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.0307%" y="725" width="0.0768%" height="15" fill="rgb(249,95,27)" fg:x="391" fg:w="1"/><text x="30.2807%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.0307%" y="709" width="0.0768%" height="15" fill="rgb(205,155,45)" fg:x="391" fg:w="1"/><text x="30.2807%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.0307%" y="693" width="0.0768%" height="15" fill="rgb(213,55,42)" fg:x="391" fg:w="1"/><text x="30.2807%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="30.0307%" y="677" width="0.0768%" height="15" fill="rgb(249,197,4)" fg:x="391" fg:w="1"/><text x="30.2807%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="30.0307%" y="661" width="0.0768%" height="15" fill="rgb(212,128,32)" fg:x="391" fg:w="1"/><text x="30.2807%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.0307%" y="645" width="0.0768%" height="15" fill="rgb(252,47,30)" fg:x="391" fg:w="1"/><text x="30.2807%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.0307%" y="629" width="0.0768%" height="15" fill="rgb(209,79,18)" fg:x="391" fg:w="1"/><text x="30.2807%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="30.0307%" y="613" width="0.0768%" height="15" fill="rgb(225,81,38)" fg:x="391" fg:w="1"/><text x="30.2807%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="30.0307%" y="597" width="0.0768%" height="15" fill="rgb(205,95,16)" fg:x="391" fg:w="1"/><text x="30.2807%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="30.0307%" y="581" width="0.0768%" height="15" fill="rgb(214,30,4)" fg:x="391" fg:w="1"/><text x="30.2807%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="30.0307%" y="565" width="0.0768%" height="15" fill="rgb(232,137,22)" fg:x="391" fg:w="1"/><text x="30.2807%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.0307%" y="549" width="0.0768%" height="15" fill="rgb(232,156,19)" fg:x="391" fg:w="1"/><text x="30.2807%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.23%)</title><rect x="30.0307%" y="805" width="0.2304%" height="15" fill="rgb(248,157,26)" fg:x="391" fg:w="3"/><text x="30.2807%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.23%)</title><rect x="30.0307%" y="789" width="0.2304%" height="15" fill="rgb(242,24,3)" fg:x="391" fg:w="3"/><text x="30.2807%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.15%)</title><rect x="30.1075%" y="773" width="0.1536%" height="15" fill="rgb(218,195,48)" fg:x="392" fg:w="2"/><text x="30.3575%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="30.1075%" y="757" width="0.1536%" height="15" fill="rgb(214,193,36)" fg:x="392" fg:w="2"/><text x="30.3575%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="30.1075%" y="741" width="0.1536%" height="15" fill="rgb(242,110,40)" fg:x="392" fg:w="2"/><text x="30.3575%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="30.1075%" y="725" width="0.1536%" height="15" fill="rgb(233,150,26)" fg:x="392" fg:w="2"/><text x="30.3575%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.1843%" y="709" width="0.0768%" height="15" fill="rgb(239,200,30)" fg:x="393" fg:w="1"/><text x="30.4343%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="30.2611%" y="757" width="0.0768%" height="15" fill="rgb(226,28,11)" fg:x="394" fg:w="1"/><text x="30.5111%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="30.2611%" y="741" width="0.0768%" height="15" fill="rgb(220,26,48)" fg:x="394" fg:w="1"/><text x="30.5111%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.2611%" y="725" width="0.0768%" height="15" fill="rgb(232,10,11)" fg:x="394" fg:w="1"/><text x="30.5111%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="709" width="0.0768%" height="15" fill="rgb(252,143,50)" fg:x="394" fg:w="1"/><text x="30.5111%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.2611%" y="693" width="0.0768%" height="15" fill="rgb(206,58,22)" fg:x="394" fg:w="1"/><text x="30.5111%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="677" width="0.0768%" height="15" fill="rgb(250,9,45)" fg:x="394" fg:w="1"/><text x="30.5111%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="661" width="0.0768%" height="15" fill="rgb(225,148,14)" fg:x="394" fg:w="1"/><text x="30.5111%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="645" width="0.0768%" height="15" fill="rgb(205,178,40)" fg:x="394" fg:w="1"/><text x="30.5111%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.2611%" y="629" width="0.0768%" height="15" fill="rgb(215,201,4)" fg:x="394" fg:w="1"/><text x="30.5111%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="613" width="0.0768%" height="15" fill="rgb(219,223,24)" fg:x="394" fg:w="1"/><text x="30.5111%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="597" width="0.0768%" height="15" fill="rgb(217,19,31)" fg:x="394" fg:w="1"/><text x="30.5111%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="581" width="0.0768%" height="15" fill="rgb(235,33,3)" fg:x="394" fg:w="1"/><text x="30.5111%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.2611%" y="565" width="0.0768%" height="15" fill="rgb(221,39,18)" fg:x="394" fg:w="1"/><text x="30.5111%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="549" width="0.0768%" height="15" fill="rgb(242,162,33)" fg:x="394" fg:w="1"/><text x="30.5111%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="533" width="0.0768%" height="15" fill="rgb(233,215,28)" fg:x="394" fg:w="1"/><text x="30.5111%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.2611%" y="517" width="0.0768%" height="15" fill="rgb(212,117,9)" fg:x="394" fg:w="1"/><text x="30.5111%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.2611%" y="501" width="0.0768%" height="15" fill="rgb(237,70,47)" fg:x="394" fg:w="1"/><text x="30.5111%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.3379%" y="757" width="0.0768%" height="15" fill="rgb(206,177,13)" fg:x="395" fg:w="1"/><text x="30.5879%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.3379%" y="741" width="0.0768%" height="15" fill="rgb(209,174,33)" fg:x="395" fg:w="1"/><text x="30.5879%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.3379%" y="725" width="0.0768%" height="15" fill="rgb(226,6,11)" fg:x="395" fg:w="1"/><text x="30.5879%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.3379%" y="709" width="0.0768%" height="15" fill="rgb(240,214,6)" fg:x="395" fg:w="1"/><text x="30.5879%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.3379%" y="693" width="0.0768%" height="15" fill="rgb(254,214,40)" fg:x="395" fg:w="1"/><text x="30.5879%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.3379%" y="677" width="0.0768%" height="15" fill="rgb(230,187,15)" fg:x="395" fg:w="1"/><text x="30.5879%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.3379%" y="661" width="0.0768%" height="15" fill="rgb(250,11,27)" fg:x="395" fg:w="1"/><text x="30.5879%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.15%)</title><rect x="30.4147%" y="757" width="0.1536%" height="15" fill="rgb(243,107,19)" fg:x="396" fg:w="2"/><text x="30.6647%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.15%)</title><rect x="30.4147%" y="741" width="0.1536%" height="15" fill="rgb(253,66,26)" fg:x="396" fg:w="2"/><text x="30.6647%" y="751.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.15%)</title><rect x="30.4147%" y="725" width="0.1536%" height="15" fill="rgb(228,43,8)" fg:x="396" fg:w="2"/><text x="30.6647%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.4916%" y="709" width="0.0768%" height="15" fill="rgb(232,197,36)" fg:x="397" fg:w="1"/><text x="30.7416%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.4916%" y="693" width="0.0768%" height="15" fill="rgb(221,182,31)" fg:x="397" fg:w="1"/><text x="30.7416%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.4916%" y="677" width="0.0768%" height="15" fill="rgb(244,25,36)" fg:x="397" fg:w="1"/><text x="30.7416%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.5684%" y="709" width="0.0768%" height="15" fill="rgb(247,101,19)" fg:x="398" fg:w="1"/><text x="30.8184%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.5684%" y="693" width="0.0768%" height="15" fill="rgb(223,117,19)" fg:x="398" fg:w="1"/><text x="30.8184%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5684%" y="677" width="0.0768%" height="15" fill="rgb(249,63,38)" fg:x="398" fg:w="1"/><text x="30.8184%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5684%" y="661" width="0.0768%" height="15" fill="rgb(220,143,23)" fg:x="398" fg:w="1"/><text x="30.8184%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5684%" y="645" width="0.0768%" height="15" fill="rgb(252,183,22)" fg:x="398" fg:w="1"/><text x="30.8184%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5684%" y="629" width="0.0768%" height="15" fill="rgb(243,176,15)" fg:x="398" fg:w="1"/><text x="30.8184%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.5684%" y="613" width="0.0768%" height="15" fill="rgb(244,204,46)" fg:x="398" fg:w="1"/><text x="30.8184%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5684%" y="597" width="0.0768%" height="15" fill="rgb(227,28,54)" fg:x="398" fg:w="1"/><text x="30.8184%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5684%" y="581" width="0.0768%" height="15" fill="rgb(231,10,15)" fg:x="398" fg:w="1"/><text x="30.8184%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5684%" y="565" width="0.0768%" height="15" fill="rgb(210,200,17)" fg:x="398" fg:w="1"/><text x="30.8184%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.5684%" y="549" width="0.0768%" height="15" fill="rgb(251,106,46)" fg:x="398" fg:w="1"/><text x="30.8184%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.46%)</title><rect x="30.2611%" y="773" width="0.4608%" height="15" fill="rgb(218,211,15)" fg:x="394" fg:w="6"/><text x="30.5111%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.15%)</title><rect x="30.5684%" y="757" width="0.1536%" height="15" fill="rgb(239,62,10)" fg:x="398" fg:w="2"/><text x="30.8184%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.15%)</title><rect x="30.5684%" y="741" width="0.1536%" height="15" fill="rgb(225,53,53)" fg:x="398" fg:w="2"/><text x="30.8184%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.15%)</title><rect x="30.5684%" y="725" width="0.1536%" height="15" fill="rgb(207,16,24)" fg:x="398" fg:w="2"/><text x="30.8184%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="30.6452%" y="709" width="0.0768%" height="15" fill="rgb(217,52,28)" fg:x="399" fg:w="1"/><text x="30.8952%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.6452%" y="693" width="0.0768%" height="15" fill="rgb(246,1,5)" fg:x="399" fg:w="1"/><text x="30.8952%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="30.6452%" y="677" width="0.0768%" height="15" fill="rgb(221,29,26)" fg:x="399" fg:w="1"/><text x="30.8952%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.6452%" y="661" width="0.0768%" height="15" fill="rgb(250,133,32)" fg:x="399" fg:w="1"/><text x="30.8952%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.15%)</title><rect x="30.7220%" y="773" width="0.1536%" height="15" fill="rgb(236,63,16)" fg:x="400" fg:w="2"/><text x="30.9720%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="30.7988%" y="757" width="0.0768%" height="15" fill="rgb(231,159,14)" fg:x="401" fg:w="1"/><text x="31.0488%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="30.7988%" y="741" width="0.0768%" height="15" fill="rgb(207,102,36)" fg:x="401" fg:w="1"/><text x="31.0488%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7988%" y="725" width="0.0768%" height="15" fill="rgb(230,224,31)" fg:x="401" fg:w="1"/><text x="31.0488%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.8756%" y="709" width="0.0768%" height="15" fill="rgb(215,182,16)" fg:x="402" fg:w="1"/><text x="31.1256%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.8756%" y="693" width="0.0768%" height="15" fill="rgb(226,113,2)" fg:x="402" fg:w="1"/><text x="31.1256%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.8756%" y="677" width="0.0768%" height="15" fill="rgb(241,18,35)" fg:x="402" fg:w="1"/><text x="31.1256%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.9524%" y="677" width="0.0768%" height="15" fill="rgb(240,165,44)" fg:x="403" fg:w="1"/><text x="31.2024%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.9524%" y="661" width="0.0768%" height="15" fill="rgb(229,130,47)" fg:x="403" fg:w="1"/><text x="31.2024%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9524%" y="645" width="0.0768%" height="15" fill="rgb(223,93,7)" fg:x="403" fg:w="1"/><text x="31.2024%" y="655.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (11 samples, 0.84%)</title><rect x="30.2611%" y="805" width="0.8449%" height="15" fill="rgb(205,180,36)" fg:x="394" fg:w="11"/><text x="30.5111%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.84%)</title><rect x="30.2611%" y="789" width="0.8449%" height="15" fill="rgb(221,103,28)" fg:x="394" fg:w="11"/><text x="30.5111%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.23%)</title><rect x="30.8756%" y="773" width="0.2304%" height="15" fill="rgb(212,4,3)" fg:x="402" fg:w="3"/><text x="31.1256%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.23%)</title><rect x="30.8756%" y="757" width="0.2304%" height="15" fill="rgb(209,221,53)" fg:x="402" fg:w="3"/><text x="31.1256%" y="767.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.23%)</title><rect x="30.8756%" y="741" width="0.2304%" height="15" fill="rgb(233,229,52)" fg:x="402" fg:w="3"/><text x="31.1256%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.23%)</title><rect x="30.8756%" y="725" width="0.2304%" height="15" fill="rgb(254,127,37)" fg:x="402" fg:w="3"/><text x="31.1256%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.15%)</title><rect x="30.9524%" y="709" width="0.1536%" height="15" fill="rgb(207,161,26)" fg:x="403" fg:w="2"/><text x="31.2024%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="30.9524%" y="693" width="0.1536%" height="15" fill="rgb(223,75,5)" fg:x="403" fg:w="2"/><text x="31.2024%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="31.0292%" y="677" width="0.0768%" height="15" fill="rgb(235,115,52)" fg:x="404" fg:w="1"/><text x="31.2792%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.0292%" y="661" width="0.0768%" height="15" fill="rgb(240,91,46)" fg:x="404" fg:w="1"/><text x="31.2792%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.0292%" y="645" width="0.0768%" height="15" fill="rgb(251,144,21)" fg:x="404" fg:w="1"/><text x="31.2792%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.0292%" y="629" width="0.0768%" height="15" fill="rgb(247,220,47)" fg:x="404" fg:w="1"/><text x="31.2792%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.0292%" y="613" width="0.0768%" height="15" fill="rgb(253,122,1)" fg:x="404" fg:w="1"/><text x="31.2792%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="31.0292%" y="597" width="0.0768%" height="15" fill="rgb(221,0,24)" fg:x="404" fg:w="1"/><text x="31.2792%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.0292%" y="581" width="0.0768%" height="15" fill="rgb(220,204,54)" fg:x="404" fg:w="1"/><text x="31.2792%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.0292%" y="565" width="0.0768%" height="15" fill="rgb(205,96,25)" fg:x="404" fg:w="1"/><text x="31.2792%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.0292%" y="549" width="0.0768%" height="15" fill="rgb(247,77,20)" fg:x="404" fg:w="1"/><text x="31.2792%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="31.1060%" y="773" width="0.0768%" height="15" fill="rgb(245,151,8)" fg:x="405" fg:w="1"/><text x="31.3560%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="31.1060%" y="757" width="0.0768%" height="15" fill="rgb(242,158,39)" fg:x="405" fg:w="1"/><text x="31.3560%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.1060%" y="741" width="0.0768%" height="15" fill="rgb(222,214,50)" fg:x="405" fg:w="1"/><text x="31.3560%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.1060%" y="725" width="0.0768%" height="15" fill="rgb(229,60,39)" fg:x="405" fg:w="1"/><text x="31.3560%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.1060%" y="709" width="0.0768%" height="15" fill="rgb(240,148,18)" fg:x="405" fg:w="1"/><text x="31.3560%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.1060%" y="693" width="0.0768%" height="15" fill="rgb(215,96,11)" fg:x="405" fg:w="1"/><text x="31.3560%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.1060%" y="677" width="0.0768%" height="15" fill="rgb(238,162,53)" fg:x="405" fg:w="1"/><text x="31.3560%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.1060%" y="661" width="0.0768%" height="15" fill="rgb(214,83,18)" fg:x="405" fg:w="1"/><text x="31.3560%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.1060%" y="645" width="0.0768%" height="15" fill="rgb(248,117,24)" fg:x="405" fg:w="1"/><text x="31.3560%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.1060%" y="629" width="0.0768%" height="15" fill="rgb(238,190,6)" fg:x="405" fg:w="1"/><text x="31.3560%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.1060%" y="613" width="0.0768%" height="15" fill="rgb(213,51,6)" fg:x="405" fg:w="1"/><text x="31.3560%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.1060%" y="597" width="0.0768%" height="15" fill="rgb(212,136,1)" fg:x="405" fg:w="1"/><text x="31.3560%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.1060%" y="581" width="0.0768%" height="15" fill="rgb(221,192,14)" fg:x="405" fg:w="1"/><text x="31.3560%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="31.2596%" y="725" width="0.1536%" height="15" fill="rgb(244,38,54)" fg:x="407" fg:w="2"/><text x="31.5096%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="31.2596%" y="709" width="0.1536%" height="15" fill="rgb(240,45,28)" fg:x="407" fg:w="2"/><text x="31.5096%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="31.2596%" y="693" width="0.1536%" height="15" fill="rgb(240,123,12)" fg:x="407" fg:w="2"/><text x="31.5096%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="31.2596%" y="677" width="0.1536%" height="15" fill="rgb(216,14,30)" fg:x="407" fg:w="2"/><text x="31.5096%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="31.2596%" y="661" width="0.1536%" height="15" fill="rgb(212,50,24)" fg:x="407" fg:w="2"/><text x="31.5096%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="31.2596%" y="645" width="0.1536%" height="15" fill="rgb(253,229,47)" fg:x="407" fg:w="2"/><text x="31.5096%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="31.2596%" y="629" width="0.1536%" height="15" fill="rgb(214,26,17)" fg:x="407" fg:w="2"/><text x="31.5096%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3364%" y="613" width="0.0768%" height="15" fill="rgb(252,60,11)" fg:x="408" fg:w="1"/><text x="31.5864%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.4132%" y="693" width="0.0768%" height="15" fill="rgb(209,59,37)" fg:x="409" fg:w="1"/><text x="31.6632%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.4132%" y="677" width="0.0768%" height="15" fill="rgb(228,126,53)" fg:x="409" fg:w="1"/><text x="31.6632%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.4900%" y="661" width="0.0768%" height="15" fill="rgb(233,99,2)" fg:x="410" fg:w="1"/><text x="31.7400%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4900%" y="645" width="0.0768%" height="15" fill="rgb(217,106,34)" fg:x="410" fg:w="1"/><text x="31.7400%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.46%)</title><rect x="31.2596%" y="757" width="0.4608%" height="15" fill="rgb(222,46,19)" fg:x="407" fg:w="6"/><text x="31.5096%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.46%)</title><rect x="31.2596%" y="741" width="0.4608%" height="15" fill="rgb(251,87,31)" fg:x="407" fg:w="6"/><text x="31.5096%" y="751.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.31%)</title><rect x="31.4132%" y="725" width="0.3072%" height="15" fill="rgb(213,70,51)" fg:x="409" fg:w="4"/><text x="31.6632%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.31%)</title><rect x="31.4132%" y="709" width="0.3072%" height="15" fill="rgb(229,144,18)" fg:x="409" fg:w="4"/><text x="31.6632%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="31.4900%" y="693" width="0.2304%" height="15" fill="rgb(254,60,26)" fg:x="410" fg:w="3"/><text x="31.7400%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="31.4900%" y="677" width="0.2304%" height="15" fill="rgb(243,127,51)" fg:x="410" fg:w="3"/><text x="31.7400%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="31.5668%" y="661" width="0.1536%" height="15" fill="rgb(221,51,25)" fg:x="411" fg:w="2"/><text x="31.8168%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="31.5668%" y="645" width="0.1536%" height="15" fill="rgb(205,42,7)" fg:x="411" fg:w="2"/><text x="31.8168%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="31.5668%" y="629" width="0.1536%" height="15" fill="rgb(236,177,48)" fg:x="411" fg:w="2"/><text x="31.8168%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="31.5668%" y="613" width="0.1536%" height="15" fill="rgb(226,79,31)" fg:x="411" fg:w="2"/><text x="31.8168%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.69%)</title><rect x="31.1060%" y="789" width="0.6912%" height="15" fill="rgb(216,170,12)" fg:x="405" fg:w="9"/><text x="31.3560%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.61%)</title><rect x="31.1828%" y="773" width="0.6144%" height="15" fill="rgb(208,62,51)" fg:x="406" fg:w="8"/><text x="31.4328%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="31.7204%" y="757" width="0.0768%" height="15" fill="rgb(254,129,9)" fg:x="413" fg:w="1"/><text x="31.9704%" y="767.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="31.7972%" y="789" width="0.0768%" height="15" fill="rgb(243,209,31)" fg:x="414" fg:w="1"/><text x="32.0472%" y="799.50"></text></g><g><title>kernel::session::SetSession::new (1 samples, 0.08%)</title><rect x="31.7972%" y="773" width="0.0768%" height="15" fill="rgb(213,159,23)" fg:x="414" fg:w="1"/><text x="32.0472%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.8740%" y="757" width="0.0768%" height="15" fill="rgb(249,77,39)" fg:x="415" fg:w="1"/><text x="32.1240%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.8740%" y="741" width="0.0768%" height="15" fill="rgb(230,13,33)" fg:x="415" fg:w="1"/><text x="32.1240%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.8740%" y="725" width="0.0768%" height="15" fill="rgb(215,215,7)" fg:x="415" fg:w="1"/><text x="32.1240%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="31.8740%" y="709" width="0.0768%" height="15" fill="rgb(222,92,25)" fg:x="415" fg:w="1"/><text x="32.1240%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="31.9508%" y="757" width="0.0768%" height="15" fill="rgb(215,173,22)" fg:x="416" fg:w="1"/><text x="32.2008%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.23%)</title><rect x="31.8740%" y="789" width="0.2304%" height="15" fill="rgb(247,205,52)" fg:x="415" fg:w="3"/><text x="32.1240%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.23%)</title><rect x="31.8740%" y="773" width="0.2304%" height="15" fill="rgb(240,210,37)" fg:x="415" fg:w="3"/><text x="32.1240%" y="783.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="32.0276%" y="757" width="0.0768%" height="15" fill="rgb(224,13,10)" fg:x="417" fg:w="1"/><text x="32.2776%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0276%" y="741" width="0.0768%" height="15" fill="rgb(209,48,33)" fg:x="417" fg:w="1"/><text x="32.2776%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="32.1045%" y="773" width="0.0768%" height="15" fill="rgb(228,219,23)" fg:x="418" fg:w="1"/><text x="32.3545%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="32.1045%" y="757" width="0.0768%" height="15" fill="rgb(239,46,49)" fg:x="418" fg:w="1"/><text x="32.3545%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1813%" y="725" width="0.0768%" height="15" fill="rgb(206,172,51)" fg:x="419" fg:w="1"/><text x="32.4313%" y="735.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (363 samples, 27.88%)</title><rect x="4.4547%" y="821" width="27.8802%" height="15" fill="rgb(213,212,35)" fg:x="58" fg:w="363"/><text x="4.7047%" y="831.50">&lt;tests::HoldingKeyInVessel as tests::WorldFix..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (16 samples, 1.23%)</title><rect x="31.1060%" y="805" width="1.2289%" height="15" fill="rgb(252,40,27)" fg:x="405" fg:w="16"/><text x="31.3560%" y="815.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.23%)</title><rect x="32.1045%" y="789" width="0.2304%" height="15" fill="rgb(212,33,41)" fg:x="418" fg:w="3"/><text x="32.3545%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.15%)</title><rect x="32.1813%" y="773" width="0.1536%" height="15" fill="rgb(232,160,27)" fg:x="419" fg:w="2"/><text x="32.4313%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.15%)</title><rect x="32.1813%" y="757" width="0.1536%" height="15" fill="rgb(244,160,20)" fg:x="419" fg:w="2"/><text x="32.4313%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.15%)</title><rect x="32.1813%" y="741" width="0.1536%" height="15" fill="rgb(205,66,20)" fg:x="419" fg:w="2"/><text x="32.4313%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="32.2581%" y="725" width="0.0768%" height="15" fill="rgb(236,158,6)" fg:x="420" fg:w="1"/><text x="32.5081%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.2581%" y="709" width="0.0768%" height="15" fill="rgb(232,25,36)" fg:x="420" fg:w="1"/><text x="32.5081%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.2581%" y="693" width="0.0768%" height="15" fill="rgb(220,153,35)" fg:x="420" fg:w="1"/><text x="32.5081%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.2581%" y="677" width="0.0768%" height="15" fill="rgb(216,5,8)" fg:x="420" fg:w="1"/><text x="32.5081%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (3 samples, 0.23%)</title><rect x="32.3349%" y="821" width="0.2304%" height="15" fill="rgb(240,97,3)" fg:x="421" fg:w="3"/><text x="32.5849%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.15%)</title><rect x="32.4117%" y="805" width="0.1536%" height="15" fill="rgb(220,99,26)" fg:x="422" fg:w="2"/><text x="32.6617%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.15%)</title><rect x="32.4117%" y="789" width="0.1536%" height="15" fill="rgb(237,96,2)" fg:x="422" fg:w="2"/><text x="32.6617%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.4885%" y="773" width="0.0768%" height="15" fill="rgb(217,197,47)" fg:x="423" fg:w="1"/><text x="32.7385%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.4885%" y="757" width="0.0768%" height="15" fill="rgb(252,133,54)" fg:x="423" fg:w="1"/><text x="32.7385%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6421%" y="789" width="0.0768%" height="15" fill="rgb(233,37,30)" fg:x="425" fg:w="1"/><text x="32.8921%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6421%" y="773" width="0.0768%" height="15" fill="rgb(239,182,12)" fg:x="425" fg:w="1"/><text x="32.8921%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.6421%" y="757" width="0.0768%" height="15" fill="rgb(245,83,39)" fg:x="425" fg:w="1"/><text x="32.8921%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.6421%" y="741" width="0.0768%" height="15" fill="rgb(222,109,36)" fg:x="425" fg:w="1"/><text x="32.8921%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.6421%" y="725" width="0.0768%" height="15" fill="rgb(237,95,44)" fg:x="425" fg:w="1"/><text x="32.8921%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.6421%" y="709" width="0.0768%" height="15" fill="rgb(216,36,54)" fg:x="425" fg:w="1"/><text x="32.8921%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.6421%" y="693" width="0.0768%" height="15" fill="rgb(236,164,3)" fg:x="425" fg:w="1"/><text x="32.8921%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.6421%" y="677" width="0.0768%" height="15" fill="rgb(223,15,21)" fg:x="425" fg:w="1"/><text x="32.8921%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.6421%" y="661" width="0.0768%" height="15" fill="rgb(239,191,12)" fg:x="425" fg:w="1"/><text x="32.8921%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.6421%" y="645" width="0.0768%" height="15" fill="rgb(231,191,37)" fg:x="425" fg:w="1"/><text x="32.8921%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.6421%" y="629" width="0.0768%" height="15" fill="rgb(209,155,36)" fg:x="425" fg:w="1"/><text x="32.8921%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.6421%" y="613" width="0.0768%" height="15" fill="rgb(216,222,49)" fg:x="425" fg:w="1"/><text x="32.8921%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.23%)</title><rect x="32.5653%" y="805" width="0.2304%" height="15" fill="rgb(218,181,2)" fg:x="424" fg:w="3"/><text x="32.8153%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7189%" y="789" width="0.0768%" height="15" fill="rgb(239,125,9)" fg:x="426" fg:w="1"/><text x="32.9689%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.7189%" y="773" width="0.0768%" height="15" fill="rgb(233,103,7)" fg:x="426" fg:w="1"/><text x="32.9689%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.7957%" y="805" width="0.0768%" height="15" fill="rgb(209,223,5)" fg:x="427" fg:w="1"/><text x="33.0457%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="32.7957%" y="789" width="0.0768%" height="15" fill="rgb(234,71,27)" fg:x="427" fg:w="1"/><text x="33.0457%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.7957%" y="773" width="0.0768%" height="15" fill="rgb(251,202,16)" fg:x="427" fg:w="1"/><text x="33.0457%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.7957%" y="757" width="0.0768%" height="15" fill="rgb(231,180,0)" fg:x="427" fg:w="1"/><text x="33.0457%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="32.7957%" y="741" width="0.0768%" height="15" fill="rgb(223,58,28)" fg:x="427" fg:w="1"/><text x="33.0457%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="32.7957%" y="725" width="0.0768%" height="15" fill="rgb(250,34,24)" fg:x="427" fg:w="1"/><text x="33.0457%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="32.7957%" y="709" width="0.0768%" height="15" fill="rgb(235,24,16)" fg:x="427" fg:w="1"/><text x="33.0457%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="32.7957%" y="693" width="0.0768%" height="15" fill="rgb(219,28,33)" fg:x="427" fg:w="1"/><text x="33.0457%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.7957%" y="677" width="0.0768%" height="15" fill="rgb(228,150,43)" fg:x="427" fg:w="1"/><text x="33.0457%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.7957%" y="661" width="0.0768%" height="15" fill="rgb(221,228,36)" fg:x="427" fg:w="1"/><text x="33.0457%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.7957%" y="645" width="0.0768%" height="15" fill="rgb(232,116,17)" fg:x="427" fg:w="1"/><text x="33.0457%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="32.7957%" y="629" width="0.0768%" height="15" fill="rgb(220,110,51)" fg:x="427" fg:w="1"/><text x="33.0457%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="32.7957%" y="613" width="0.0768%" height="15" fill="rgb(207,26,25)" fg:x="427" fg:w="1"/><text x="33.0457%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="32.7957%" y="597" width="0.0768%" height="15" fill="rgb(223,58,19)" fg:x="427" fg:w="1"/><text x="33.0457%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="32.7957%" y="581" width="0.0768%" height="15" fill="rgb(234,125,39)" fg:x="427" fg:w="1"/><text x="33.0457%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.7957%" y="565" width="0.0768%" height="15" fill="rgb(241,48,36)" fg:x="427" fg:w="1"/><text x="33.0457%" y="575.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="32.8725%" y="805" width="0.0768%" height="15" fill="rgb(217,148,51)" fg:x="428" fg:w="1"/><text x="33.1225%" y="815.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="32.8725%" y="789" width="0.0768%" height="15" fill="rgb(247,17,25)" fg:x="428" fg:w="1"/><text x="33.1225%" y="799.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="32.8725%" y="773" width="0.0768%" height="15" fill="rgb(219,89,38)" fg:x="428" fg:w="1"/><text x="33.1225%" y="783.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="32.8725%" y="757" width="0.0768%" height="15" fill="rgb(220,145,2)" fg:x="428" fg:w="1"/><text x="33.1225%" y="767.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="32.8725%" y="741" width="0.0768%" height="15" fill="rgb(244,66,47)" fg:x="428" fg:w="1"/><text x="33.1225%" y="751.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="32.8725%" y="725" width="0.0768%" height="15" fill="rgb(226,182,5)" fg:x="428" fg:w="1"/><text x="33.1225%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="32.8725%" y="709" width="0.0768%" height="15" fill="rgb(211,98,20)" fg:x="428" fg:w="1"/><text x="33.1225%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;()&gt;&gt; (1 samples, 0.08%)</title><rect x="32.8725%" y="693" width="0.0768%" height="15" fill="rgb(217,103,52)" fg:x="428" fg:w="1"/><text x="33.1225%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.8725%" y="677" width="0.0768%" height="15" fill="rgb(208,125,52)" fg:x="428" fg:w="1"/><text x="33.1225%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.08%)</title><rect x="32.8725%" y="661" width="0.0768%" height="15" fill="rgb(244,70,13)" fg:x="428" fg:w="1"/><text x="33.1225%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.08%)</title><rect x="32.8725%" y="645" width="0.0768%" height="15" fill="rgb(253,124,3)" fg:x="428" fg:w="1"/><text x="33.1225%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.08%)</title><rect x="32.8725%" y="629" width="0.0768%" height="15" fill="rgb(222,145,32)" fg:x="428" fg:w="1"/><text x="33.1225%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0261%" y="741" width="0.0768%" height="15" fill="rgb(232,183,47)" fg:x="430" fg:w="1"/><text x="33.2761%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.0261%" y="725" width="0.0768%" height="15" fill="rgb(246,226,4)" fg:x="430" fg:w="1"/><text x="33.2761%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.0261%" y="709" width="0.0768%" height="15" fill="rgb(228,185,46)" fg:x="430" fg:w="1"/><text x="33.2761%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.0261%" y="693" width="0.0768%" height="15" fill="rgb(213,196,4)" fg:x="430" fg:w="1"/><text x="33.2761%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.0261%" y="677" width="0.0768%" height="15" fill="rgb(212,2,45)" fg:x="430" fg:w="1"/><text x="33.2761%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.0261%" y="661" width="0.0768%" height="15" fill="rgb(217,145,50)" fg:x="430" fg:w="1"/><text x="33.2761%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.0261%" y="645" width="0.0768%" height="15" fill="rgb(242,10,46)" fg:x="430" fg:w="1"/><text x="33.2761%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.0261%" y="629" width="0.0768%" height="15" fill="rgb(252,91,48)" fg:x="430" fg:w="1"/><text x="33.2761%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.0261%" y="613" width="0.0768%" height="15" fill="rgb(216,72,13)" fg:x="430" fg:w="1"/><text x="33.2761%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.0261%" y="597" width="0.0768%" height="15" fill="rgb(219,6,37)" fg:x="430" fg:w="1"/><text x="33.2761%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.0261%" y="581" width="0.0768%" height="15" fill="rgb(236,185,40)" fg:x="430" fg:w="1"/><text x="33.2761%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.15%)</title><rect x="33.0261%" y="773" width="0.1536%" height="15" fill="rgb(208,81,48)" fg:x="430" fg:w="2"/><text x="33.2761%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.15%)</title><rect x="33.0261%" y="757" width="0.1536%" height="15" fill="rgb(211,42,33)" fg:x="430" fg:w="2"/><text x="33.2761%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="33.1029%" y="741" width="0.0768%" height="15" fill="rgb(211,90,39)" fg:x="431" fg:w="1"/><text x="33.3529%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="725" width="0.0768%" height="15" fill="rgb(218,136,12)" fg:x="431" fg:w="1"/><text x="33.3529%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.1029%" y="709" width="0.0768%" height="15" fill="rgb(234,12,32)" fg:x="431" fg:w="1"/><text x="33.3529%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="693" width="0.0768%" height="15" fill="rgb(221,164,18)" fg:x="431" fg:w="1"/><text x="33.3529%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="677" width="0.0768%" height="15" fill="rgb(239,135,14)" fg:x="431" fg:w="1"/><text x="33.3529%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="661" width="0.0768%" height="15" fill="rgb(226,198,47)" fg:x="431" fg:w="1"/><text x="33.3529%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.1029%" y="645" width="0.0768%" height="15" fill="rgb(244,121,47)" fg:x="431" fg:w="1"/><text x="33.3529%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="629" width="0.0768%" height="15" fill="rgb(226,21,48)" fg:x="431" fg:w="1"/><text x="33.3529%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="613" width="0.0768%" height="15" fill="rgb(215,178,47)" fg:x="431" fg:w="1"/><text x="33.3529%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="597" width="0.0768%" height="15" fill="rgb(206,212,19)" fg:x="431" fg:w="1"/><text x="33.3529%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.1029%" y="581" width="0.0768%" height="15" fill="rgb(230,104,34)" fg:x="431" fg:w="1"/><text x="33.3529%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="565" width="0.0768%" height="15" fill="rgb(210,96,51)" fg:x="431" fg:w="1"/><text x="33.3529%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="549" width="0.0768%" height="15" fill="rgb(229,111,47)" fg:x="431" fg:w="1"/><text x="33.3529%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="533" width="0.0768%" height="15" fill="rgb(218,174,45)" fg:x="431" fg:w="1"/><text x="33.3529%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.1029%" y="517" width="0.0768%" height="15" fill="rgb(215,21,32)" fg:x="431" fg:w="1"/><text x="33.3529%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.1029%" y="501" width="0.0768%" height="15" fill="rgb(235,72,21)" fg:x="431" fg:w="1"/><text x="33.3529%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.1029%" y="485" width="0.0768%" height="15" fill="rgb(250,113,30)" fg:x="431" fg:w="1"/><text x="33.3529%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.1029%" y="469" width="0.0768%" height="15" fill="rgb(244,136,34)" fg:x="431" fg:w="1"/><text x="33.3529%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="33.1029%" y="453" width="0.0768%" height="15" fill="rgb(213,226,47)" fg:x="431" fg:w="1"/><text x="33.3529%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="33.1029%" y="437" width="0.0768%" height="15" fill="rgb(224,136,40)" fg:x="431" fg:w="1"/><text x="33.3529%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="33.1029%" y="421" width="0.0768%" height="15" fill="rgb(253,124,12)" fg:x="431" fg:w="1"/><text x="33.3529%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="33.1029%" y="405" width="0.0768%" height="15" fill="rgb(210,67,8)" fg:x="431" fg:w="1"/><text x="33.3529%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.1029%" y="389" width="0.0768%" height="15" fill="rgb(210,204,0)" fg:x="431" fg:w="1"/><text x="33.3529%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.1029%" y="373" width="0.0768%" height="15" fill="rgb(217,179,22)" fg:x="431" fg:w="1"/><text x="33.3529%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.1029%" y="357" width="0.0768%" height="15" fill="rgb(237,192,33)" fg:x="431" fg:w="1"/><text x="33.3529%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="33.1029%" y="341" width="0.0768%" height="15" fill="rgb(211,104,28)" fg:x="431" fg:w="1"/><text x="33.3529%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.1029%" y="325" width="0.0768%" height="15" fill="rgb(214,75,30)" fg:x="431" fg:w="1"/><text x="33.3529%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="33.1029%" y="309" width="0.0768%" height="15" fill="rgb(220,227,12)" fg:x="431" fg:w="1"/><text x="33.3529%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="33.1029%" y="293" width="0.0768%" height="15" fill="rgb(233,134,28)" fg:x="431" fg:w="1"/><text x="33.3529%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="33.1029%" y="277" width="0.0768%" height="15" fill="rgb(215,146,24)" fg:x="431" fg:w="1"/><text x="33.3529%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.1029%" y="261" width="0.0768%" height="15" fill="rgb(248,227,20)" fg:x="431" fg:w="1"/><text x="33.3529%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1797%" y="773" width="0.0768%" height="15" fill="rgb(250,44,42)" fg:x="432" fg:w="1"/><text x="33.4297%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="33.2565%" y="773" width="0.0768%" height="15" fill="rgb(219,5,35)" fg:x="433" fg:w="1"/><text x="33.5065%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.3333%" y="757" width="0.0768%" height="15" fill="rgb(241,132,32)" fg:x="434" fg:w="1"/><text x="33.5833%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="33.3333%" y="741" width="0.0768%" height="15" fill="rgb(234,212,51)" fg:x="434" fg:w="1"/><text x="33.5833%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="33.3333%" y="725" width="0.0768%" height="15" fill="rgb(242,173,29)" fg:x="434" fg:w="1"/><text x="33.5833%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4869%" y="725" width="0.0768%" height="15" fill="rgb(212,159,2)" fg:x="436" fg:w="1"/><text x="33.7369%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4869%" y="709" width="0.0768%" height="15" fill="rgb(238,165,31)" fg:x="436" fg:w="1"/><text x="33.7369%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4869%" y="693" width="0.0768%" height="15" fill="rgb(241,57,36)" fg:x="436" fg:w="1"/><text x="33.7369%" y="703.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="33.5637%" y="725" width="0.0768%" height="15" fill="rgb(249,7,4)" fg:x="437" fg:w="1"/><text x="33.8137%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.5637%" y="709" width="0.0768%" height="15" fill="rgb(250,137,44)" fg:x="437" fg:w="1"/><text x="33.8137%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="33.5637%" y="693" width="0.0768%" height="15" fill="rgb(244,185,1)" fg:x="437" fg:w="1"/><text x="33.8137%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="33.5637%" y="677" width="0.0768%" height="15" fill="rgb(216,5,53)" fg:x="437" fg:w="1"/><text x="33.8137%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="33.5637%" y="661" width="0.0768%" height="15" fill="rgb(234,89,21)" fg:x="437" fg:w="1"/><text x="33.8137%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7942%" y="613" width="0.0768%" height="15" fill="rgb(250,81,43)" fg:x="440" fg:w="1"/><text x="34.0442%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.15%)</title><rect x="33.7942%" y="693" width="0.1536%" height="15" fill="rgb(243,132,11)" fg:x="440" fg:w="2"/><text x="34.0442%" y="703.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.15%)</title><rect x="33.7942%" y="677" width="0.1536%" height="15" fill="rgb(253,159,28)" fg:x="440" fg:w="2"/><text x="34.0442%" y="687.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.15%)</title><rect x="33.7942%" y="661" width="0.1536%" height="15" fill="rgb(237,167,34)" fg:x="440" fg:w="2"/><text x="34.0442%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="33.7942%" y="645" width="0.1536%" height="15" fill="rgb(237,16,50)" fg:x="440" fg:w="2"/><text x="34.0442%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="33.7942%" y="629" width="0.1536%" height="15" fill="rgb(247,125,2)" fg:x="440" fg:w="2"/><text x="34.0442%" y="639.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="33.8710%" y="613" width="0.0768%" height="15" fill="rgb(254,35,3)" fg:x="441" fg:w="1"/><text x="34.1210%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.9478%" y="661" width="0.0768%" height="15" fill="rgb(237,209,21)" fg:x="442" fg:w="1"/><text x="34.1978%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (15 samples, 1.15%)</title><rect x="32.9493%" y="789" width="1.1521%" height="15" fill="rgb(224,122,20)" fg:x="429" fg:w="15"/><text x="33.1993%" y="799.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (10 samples, 0.77%)</title><rect x="33.3333%" y="773" width="0.7680%" height="15" fill="rgb(224,11,46)" fg:x="434" fg:w="10"/><text x="33.5833%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.69%)</title><rect x="33.4101%" y="757" width="0.6912%" height="15" fill="rgb(248,21,33)" fg:x="435" fg:w="9"/><text x="33.6601%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.69%)</title><rect x="33.4101%" y="741" width="0.6912%" height="15" fill="rgb(222,144,7)" fg:x="435" fg:w="9"/><text x="33.6601%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.46%)</title><rect x="33.6406%" y="725" width="0.4608%" height="15" fill="rgb(205,141,37)" fg:x="438" fg:w="6"/><text x="33.8906%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.46%)</title><rect x="33.6406%" y="709" width="0.4608%" height="15" fill="rgb(237,130,8)" fg:x="438" fg:w="6"/><text x="33.8906%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="33.9478%" y="693" width="0.1536%" height="15" fill="rgb(209,179,39)" fg:x="442" fg:w="2"/><text x="34.1978%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="33.9478%" y="677" width="0.1536%" height="15" fill="rgb(207,52,17)" fg:x="442" fg:w="2"/><text x="34.1978%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.0246%" y="661" width="0.0768%" height="15" fill="rgb(253,158,17)" fg:x="443" fg:w="1"/><text x="34.2746%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="34.1014%" y="773" width="0.0768%" height="15" fill="rgb(208,19,53)" fg:x="444" fg:w="1"/><text x="34.3514%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (2 samples, 0.15%)</title><rect x="34.1014%" y="789" width="0.1536%" height="15" fill="rgb(233,152,13)" fg:x="444" fg:w="2"/><text x="34.3514%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (1 samples, 0.08%)</title><rect x="34.1782%" y="773" width="0.0768%" height="15" fill="rgb(231,84,1)" fg:x="445" fg:w="1"/><text x="34.4282%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="34.1782%" y="757" width="0.0768%" height="15" fill="rgb(229,142,48)" fg:x="445" fg:w="1"/><text x="34.4282%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.2550%" y="757" width="0.0768%" height="15" fill="rgb(248,70,29)" fg:x="446" fg:w="1"/><text x="34.5050%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.2550%" y="741" width="0.0768%" height="15" fill="rgb(250,85,7)" fg:x="446" fg:w="1"/><text x="34.5050%" y="751.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.2550%" y="725" width="0.0768%" height="15" fill="rgb(235,140,43)" fg:x="446" fg:w="1"/><text x="34.5050%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="34.2550%" y="773" width="0.1536%" height="15" fill="rgb(216,0,5)" fg:x="446" fg:w="2"/><text x="34.5050%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::array::iter::IntoIter&lt;alloc::rc::Rc&lt;dyn kernel::plugins::mw::Middleware&gt;,1_usize&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="34.3318%" y="757" width="0.0768%" height="15" fill="rgb(223,167,29)" fg:x="447" fg:w="1"/><text x="34.5818%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="34.4086%" y="773" width="0.2304%" height="15" fill="rgb(229,150,33)" fg:x="448" fg:w="3"/><text x="34.6586%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="34.4086%" y="757" width="0.2304%" height="15" fill="rgb(227,26,52)" fg:x="448" fg:w="3"/><text x="34.6586%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.23%)</title><rect x="34.4086%" y="741" width="0.2304%" height="15" fill="rgb(250,60,52)" fg:x="448" fg:w="3"/><text x="34.6586%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="34.5622%" y="725" width="0.0768%" height="15" fill="rgb(228,81,46)" fg:x="450" fg:w="1"/><text x="34.8122%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="34.7926%" y="757" width="0.0768%" height="15" fill="rgb(225,218,31)" fg:x="453" fg:w="1"/><text x="35.0426%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.7926%" y="741" width="0.0768%" height="15" fill="rgb(230,35,16)" fg:x="453" fg:w="1"/><text x="35.0426%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7926%" y="725" width="0.0768%" height="15" fill="rgb(247,100,0)" fg:x="453" fg:w="1"/><text x="35.0426%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9462%" y="741" width="0.0768%" height="15" fill="rgb(223,135,11)" fg:x="455" fg:w="1"/><text x="35.1962%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9462%" y="725" width="0.0768%" height="15" fill="rgb(207,136,0)" fg:x="455" fg:w="1"/><text x="35.1962%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.9462%" y="709" width="0.0768%" height="15" fill="rgb(246,131,25)" fg:x="455" fg:w="1"/><text x="35.1962%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.9462%" y="693" width="0.0768%" height="15" fill="rgb(209,47,12)" fg:x="455" fg:w="1"/><text x="35.1962%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.9462%" y="677" width="0.0768%" height="15" fill="rgb(221,25,16)" fg:x="455" fg:w="1"/><text x="35.1962%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9462%" y="661" width="0.0768%" height="15" fill="rgb(223,164,33)" fg:x="455" fg:w="1"/><text x="35.1962%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9462%" y="645" width="0.0768%" height="15" fill="rgb(220,26,23)" fg:x="455" fg:w="1"/><text x="35.1962%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.9462%" y="629" width="0.0768%" height="15" fill="rgb(231,224,1)" fg:x="455" fg:w="1"/><text x="35.1962%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.9462%" y="613" width="0.0768%" height="15" fill="rgb(229,221,24)" fg:x="455" fg:w="1"/><text x="35.1962%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.9462%" y="597" width="0.0768%" height="15" fill="rgb(213,34,10)" fg:x="455" fg:w="1"/><text x="35.1962%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.9462%" y="581" width="0.0768%" height="15" fill="rgb(215,33,11)" fg:x="455" fg:w="1"/><text x="35.1962%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9462%" y="565" width="0.0768%" height="15" fill="rgb(216,20,41)" fg:x="455" fg:w="1"/><text x="35.1962%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="35.0230%" y="741" width="0.0768%" height="15" fill="rgb(228,43,31)" fg:x="456" fg:w="1"/><text x="35.2730%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.0230%" y="725" width="0.0768%" height="15" fill="rgb(227,83,26)" fg:x="456" fg:w="1"/><text x="35.2730%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="35.1767%" y="709" width="0.3072%" height="15" fill="rgb(217,168,19)" fg:x="458" fg:w="4"/><text x="35.4267%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="35.2535%" y="693" width="0.2304%" height="15" fill="rgb(231,34,33)" fg:x="459" fg:w="3"/><text x="35.5035%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="35.2535%" y="677" width="0.2304%" height="15" fill="rgb(230,120,51)" fg:x="459" fg:w="3"/><text x="35.5035%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="35.2535%" y="661" width="0.2304%" height="15" fill="rgb(215,138,27)" fg:x="459" fg:w="3"/><text x="35.5035%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.4839%" y="677" width="0.0768%" height="15" fill="rgb(246,80,47)" fg:x="462" fg:w="1"/><text x="35.7339%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.46%)</title><rect x="35.1767%" y="725" width="0.4608%" height="15" fill="rgb(215,57,53)" fg:x="458" fg:w="6"/><text x="35.4267%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="35.4839%" y="709" width="0.1536%" height="15" fill="rgb(229,137,5)" fg:x="462" fg:w="2"/><text x="35.7339%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="35.4839%" y="693" width="0.1536%" height="15" fill="rgb(210,86,2)" fg:x="462" fg:w="2"/><text x="35.7339%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="35.5607%" y="677" width="0.0768%" height="15" fill="rgb(231,226,51)" fg:x="463" fg:w="1"/><text x="35.8107%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.38%)</title><rect x="35.7143%" y="709" width="0.3840%" height="15" fill="rgb(216,62,29)" fg:x="465" fg:w="5"/><text x="35.9643%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.0215%" y="693" width="0.0768%" height="15" fill="rgb(248,202,3)" fg:x="469" fg:w="1"/><text x="36.2715%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.0215%" y="677" width="0.0768%" height="15" fill="rgb(225,181,7)" fg:x="469" fg:w="1"/><text x="36.2715%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.0215%" y="661" width="0.0768%" height="15" fill="rgb(247,170,54)" fg:x="469" fg:w="1"/><text x="36.2715%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="36.1751%" y="661" width="0.1536%" height="15" fill="rgb(236,204,33)" fg:x="471" fg:w="2"/><text x="36.4251%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="36.1751%" y="645" width="0.1536%" height="15" fill="rgb(216,45,30)" fg:x="471" fg:w="2"/><text x="36.4251%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="36.1751%" y="629" width="0.1536%" height="15" fill="rgb(213,203,16)" fg:x="471" fg:w="2"/><text x="36.4251%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.2519%" y="613" width="0.0768%" height="15" fill="rgb(215,46,16)" fg:x="472" fg:w="1"/><text x="36.5019%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.2519%" y="597" width="0.0768%" height="15" fill="rgb(217,162,46)" fg:x="472" fg:w="1"/><text x="36.5019%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.2519%" y="581" width="0.0768%" height="15" fill="rgb(224,189,20)" fg:x="472" fg:w="1"/><text x="36.5019%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="36.2519%" y="565" width="0.0768%" height="15" fill="rgb(232,35,51)" fg:x="472" fg:w="1"/><text x="36.5019%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="36.3287%" y="661" width="0.0768%" height="15" fill="rgb(243,221,46)" fg:x="473" fg:w="1"/><text x="36.5787%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="36.3287%" y="645" width="0.0768%" height="15" fill="rgb(248,16,16)" fg:x="473" fg:w="1"/><text x="36.5787%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="36.1751%" y="693" width="0.3072%" height="15" fill="rgb(220,168,13)" fg:x="471" fg:w="4"/><text x="36.4251%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="36.1751%" y="677" width="0.3072%" height="15" fill="rgb(243,102,39)" fg:x="471" fg:w="4"/><text x="36.4251%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.4055%" y="661" width="0.0768%" height="15" fill="rgb(245,82,32)" fg:x="474" fg:w="1"/><text x="36.6555%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.4055%" y="645" width="0.0768%" height="15" fill="rgb(230,164,19)" fg:x="474" fg:w="1"/><text x="36.6555%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.4055%" y="629" width="0.0768%" height="15" fill="rgb(221,9,41)" fg:x="474" fg:w="1"/><text x="36.6555%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="36.4823%" y="693" width="0.1536%" height="15" fill="rgb(216,93,0)" fg:x="475" fg:w="2"/><text x="36.7323%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.5591%" y="677" width="0.0768%" height="15" fill="rgb(235,113,9)" fg:x="476" fg:w="1"/><text x="36.8091%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.6359%" y="677" width="0.0768%" height="15" fill="rgb(209,224,10)" fg:x="477" fg:w="1"/><text x="36.8859%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.38%)</title><rect x="36.7127%" y="677" width="0.3840%" height="15" fill="rgb(226,54,34)" fg:x="478" fg:w="5"/><text x="36.9627%" y="687.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="36.7896%" y="661" width="0.3072%" height="15" fill="rgb(222,60,8)" fg:x="479" fg:w="4"/><text x="37.0396%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.0200%" y="645" width="0.0768%" height="15" fill="rgb(248,228,41)" fg:x="482" fg:w="1"/><text x="37.2700%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.0200%" y="629" width="0.0768%" height="15" fill="rgb(226,31,32)" fg:x="482" fg:w="1"/><text x="37.2700%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="37.0968%" y="661" width="0.0768%" height="15" fill="rgb(242,132,49)" fg:x="483" fg:w="1"/><text x="37.3468%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="37.1736%" y="661" width="0.1536%" height="15" fill="rgb(224,194,19)" fg:x="484" fg:w="2"/><text x="37.4236%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.2504%" y="645" width="0.0768%" height="15" fill="rgb(232,200,51)" fg:x="485" fg:w="1"/><text x="37.5004%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="37.4040%" y="645" width="0.0768%" height="15" fill="rgb(235,60,46)" fg:x="487" fg:w="1"/><text x="37.6540%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.15%)</title><rect x="37.4808%" y="629" width="0.1536%" height="15" fill="rgb(240,109,52)" fg:x="488" fg:w="2"/><text x="37.7308%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="37.4808%" y="613" width="0.1536%" height="15" fill="rgb(215,78,37)" fg:x="488" fg:w="2"/><text x="37.7308%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="37.4808%" y="597" width="0.1536%" height="15" fill="rgb(225,141,7)" fg:x="488" fg:w="2"/><text x="37.7308%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.5576%" y="581" width="0.0768%" height="15" fill="rgb(216,102,54)" fg:x="489" fg:w="1"/><text x="37.8076%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="37.6344%" y="629" width="0.2304%" height="15" fill="rgb(238,143,13)" fg:x="490" fg:w="3"/><text x="37.8844%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="37.6344%" y="613" width="0.2304%" height="15" fill="rgb(219,45,51)" fg:x="490" fg:w="3"/><text x="37.8844%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="37.6344%" y="597" width="0.2304%" height="15" fill="rgb(242,105,46)" fg:x="490" fg:w="3"/><text x="37.8844%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="37.6344%" y="581" width="0.2304%" height="15" fill="rgb(206,154,49)" fg:x="490" fg:w="3"/><text x="37.8844%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="37.7112%" y="565" width="0.1536%" height="15" fill="rgb(239,215,4)" fg:x="491" fg:w="2"/><text x="37.9612%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="37.7112%" y="549" width="0.1536%" height="15" fill="rgb(238,82,17)" fg:x="491" fg:w="2"/><text x="37.9612%" y="559.50"></text></g><g><title>realloc (2 samples, 0.15%)</title><rect x="37.7112%" y="533" width="0.1536%" height="15" fill="rgb(242,49,30)" fg:x="491" fg:w="2"/><text x="37.9612%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="37.8648%" y="629" width="0.0768%" height="15" fill="rgb(248,5,16)" fg:x="493" fg:w="1"/><text x="38.1148%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.54%)</title><rect x="37.4808%" y="645" width="0.5376%" height="15" fill="rgb(237,138,32)" fg:x="488" fg:w="7"/><text x="37.7308%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.9416%" y="629" width="0.0768%" height="15" fill="rgb(235,79,45)" fg:x="494" fg:w="1"/><text x="38.1916%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.9416%" y="613" width="0.0768%" height="15" fill="rgb(213,105,25)" fg:x="494" fg:w="1"/><text x="38.1916%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.9416%" y="597" width="0.0768%" height="15" fill="rgb(251,131,7)" fg:x="494" fg:w="1"/><text x="38.1916%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.00%)</title><rect x="37.0968%" y="677" width="0.9985%" height="15" fill="rgb(211,155,7)" fg:x="483" fg:w="13"/><text x="37.3468%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.77%)</title><rect x="37.3272%" y="661" width="0.7680%" height="15" fill="rgb(243,70,15)" fg:x="486" fg:w="10"/><text x="37.5772%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.0184%" y="645" width="0.0768%" height="15" fill="rgb(215,171,2)" fg:x="495" fg:w="1"/><text x="38.2684%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.0184%" y="629" width="0.0768%" height="15" fill="rgb(244,121,35)" fg:x="495" fg:w="1"/><text x="38.2684%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.0184%" y="613" width="0.0768%" height="15" fill="rgb(249,147,17)" fg:x="495" fg:w="1"/><text x="38.2684%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.0184%" y="597" width="0.0768%" height="15" fill="rgb(241,193,52)" fg:x="495" fg:w="1"/><text x="38.2684%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.0184%" y="581" width="0.0768%" height="15" fill="rgb(217,159,39)" fg:x="495" fg:w="1"/><text x="38.2684%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="38.0184%" y="565" width="0.0768%" height="15" fill="rgb(248,110,0)" fg:x="495" fg:w="1"/><text x="38.2684%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.61%)</title><rect x="36.6359%" y="693" width="1.6129%" height="15" fill="rgb(233,227,0)" fg:x="477" fg:w="21"/><text x="36.8859%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="38.0952%" y="677" width="0.1536%" height="15" fill="rgb(252,55,2)" fg:x="496" fg:w="2"/><text x="38.3452%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.1720%" y="661" width="0.0768%" height="15" fill="rgb(224,194,24)" fg:x="497" fg:w="1"/><text x="38.4220%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.30%)</title><rect x="36.0983%" y="709" width="2.3041%" height="15" fill="rgb(247,5,33)" fg:x="470" fg:w="30"/><text x="36.3483%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="38.2488%" y="693" width="0.1536%" height="15" fill="rgb(242,66,47)" fg:x="498" fg:w="2"/><text x="38.4988%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (41 samples, 3.15%)</title><rect x="35.6375%" y="725" width="3.1490%" height="15" fill="rgb(213,107,12)" fg:x="464" fg:w="41"/><text x="35.8875%" y="735.50">ser..</text></g><g><title>std::io::Write::write_all (5 samples, 0.38%)</title><rect x="38.4025%" y="709" width="0.3840%" height="15" fill="rgb(206,131,1)" fg:x="500" fg:w="5"/><text x="38.6525%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="38.5561%" y="693" width="0.2304%" height="15" fill="rgb(214,9,36)" fg:x="502" fg:w="3"/><text x="38.8061%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="38.6329%" y="677" width="0.1536%" height="15" fill="rgb(251,215,18)" fg:x="503" fg:w="2"/><text x="38.8829%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="38.6329%" y="661" width="0.1536%" height="15" fill="rgb(251,64,9)" fg:x="503" fg:w="2"/><text x="38.8829%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="38.6329%" y="645" width="0.1536%" height="15" fill="rgb(235,68,21)" fg:x="503" fg:w="2"/><text x="38.8829%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="38.7097%" y="629" width="0.0768%" height="15" fill="rgb(240,69,38)" fg:x="504" fg:w="1"/><text x="38.9597%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (49 samples, 3.76%)</title><rect x="35.0998%" y="741" width="3.7634%" height="15" fill="rgb(231,18,27)" fg:x="457" fg:w="49"/><text x="35.3498%" y="751.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.7865%" y="725" width="0.0768%" height="15" fill="rgb(215,154,25)" fg:x="505" fg:w="1"/><text x="39.0365%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.7865%" y="709" width="0.0768%" height="15" fill="rgb(224,33,46)" fg:x="505" fg:w="1"/><text x="39.0365%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.7865%" y="693" width="0.0768%" height="15" fill="rgb(248,191,53)" fg:x="505" fg:w="1"/><text x="39.0365%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.8633%" y="709" width="0.0768%" height="15" fill="rgb(231,3,37)" fg:x="506" fg:w="1"/><text x="39.1133%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.9401%" y="709" width="0.0768%" height="15" fill="rgb(209,152,2)" fg:x="507" fg:w="1"/><text x="39.1901%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.9401%" y="693" width="0.0768%" height="15" fill="rgb(212,208,43)" fg:x="507" fg:w="1"/><text x="39.1901%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="39.0169%" y="693" width="0.1536%" height="15" fill="rgb(208,60,49)" fg:x="508" fg:w="2"/><text x="39.2669%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="39.0169%" y="677" width="0.1536%" height="15" fill="rgb(245,135,6)" fg:x="508" fg:w="2"/><text x="39.2669%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="39.4009%" y="677" width="0.1536%" height="15" fill="rgb(243,86,23)" fg:x="513" fg:w="2"/><text x="39.6509%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="39.5545%" y="677" width="0.2304%" height="15" fill="rgb(223,7,20)" fg:x="515" fg:w="3"/><text x="39.8045%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="39.6313%" y="661" width="0.1536%" height="15" fill="rgb(212,182,17)" fg:x="516" fg:w="2"/><text x="39.8813%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="39.7849%" y="661" width="0.0768%" height="15" fill="rgb(237,94,50)" fg:x="518" fg:w="1"/><text x="40.0349%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.7849%" y="645" width="0.0768%" height="15" fill="rgb(232,185,44)" fg:x="518" fg:w="1"/><text x="40.0349%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.7849%" y="629" width="0.0768%" height="15" fill="rgb(205,50,36)" fg:x="518" fg:w="1"/><text x="40.0349%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.15%)</title><rect x="38.8633%" y="741" width="1.1521%" height="15" fill="rgb(252,32,32)" fg:x="506" fg:w="15"/><text x="39.1133%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.15%)</title><rect x="38.8633%" y="725" width="1.1521%" height="15" fill="rgb(241,123,33)" fg:x="506" fg:w="15"/><text x="39.1133%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.00%)</title><rect x="39.0169%" y="709" width="0.9985%" height="15" fill="rgb(212,140,16)" fg:x="508" fg:w="13"/><text x="39.2669%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.84%)</title><rect x="39.1705%" y="693" width="0.8449%" height="15" fill="rgb(247,132,5)" fg:x="510" fg:w="11"/><text x="39.4205%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="39.7849%" y="677" width="0.2304%" height="15" fill="rgb(209,137,38)" fg:x="518" fg:w="3"/><text x="40.0349%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="39.8618%" y="661" width="0.1536%" height="15" fill="rgb(248,32,42)" fg:x="519" fg:w="2"/><text x="40.1118%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="39.8618%" y="645" width="0.1536%" height="15" fill="rgb(216,188,40)" fg:x="519" fg:w="2"/><text x="40.1118%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="39.8618%" y="629" width="0.1536%" height="15" fill="rgb(209,127,53)" fg:x="519" fg:w="2"/><text x="40.1118%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="39.8618%" y="613" width="0.1536%" height="15" fill="rgb(254,162,9)" fg:x="519" fg:w="2"/><text x="40.1118%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9386%" y="597" width="0.0768%" height="15" fill="rgb(219,183,10)" fg:x="520" fg:w="1"/><text x="40.1886%" y="607.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="40.1690%" y="709" width="0.2304%" height="15" fill="rgb(217,192,21)" fg:x="523" fg:w="3"/><text x="40.4190%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="40.4762%" y="677" width="0.1536%" height="15" fill="rgb(251,89,27)" fg:x="527" fg:w="2"/><text x="40.7262%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.6298%" y="677" width="0.0768%" height="15" fill="rgb(253,55,28)" fg:x="529" fg:w="1"/><text x="40.8798%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.7834%" y="661" width="0.0768%" height="15" fill="rgb(216,159,8)" fg:x="531" fg:w="1"/><text x="41.0334%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="40.8602%" y="661" width="0.1536%" height="15" fill="rgb(231,228,44)" fg:x="532" fg:w="2"/><text x="41.1102%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="40.8602%" y="645" width="0.1536%" height="15" fill="rgb(247,34,48)" fg:x="532" fg:w="2"/><text x="41.1102%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0138%" y="645" width="0.0768%" height="15" fill="rgb(247,222,18)" fg:x="534" fg:w="1"/><text x="41.2638%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.0906%" y="645" width="0.0768%" height="15" fill="rgb(227,49,4)" fg:x="535" fg:w="1"/><text x="41.3406%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0906%" y="629" width="0.0768%" height="15" fill="rgb(219,189,53)" fg:x="535" fg:w="1"/><text x="41.3406%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="41.1674%" y="645" width="0.0768%" height="15" fill="rgb(241,160,53)" fg:x="536" fg:w="1"/><text x="41.4174%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.3210%" y="629" width="0.0768%" height="15" fill="rgb(227,115,4)" fg:x="538" fg:w="1"/><text x="41.5710%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.3978%" y="597" width="0.0768%" height="15" fill="rgb(215,28,28)" fg:x="539" fg:w="1"/><text x="41.6478%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.15%)</title><rect x="40.3994%" y="709" width="1.1521%" height="15" fill="rgb(237,143,40)" fg:x="526" fg:w="15"/><text x="40.6494%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.15%)</title><rect x="40.3994%" y="693" width="1.1521%" height="15" fill="rgb(205,107,24)" fg:x="526" fg:w="15"/><text x="40.6494%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.84%)</title><rect x="40.7066%" y="677" width="0.8449%" height="15" fill="rgb(209,112,35)" fg:x="530" fg:w="11"/><text x="40.9566%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.54%)</title><rect x="41.0138%" y="661" width="0.5376%" height="15" fill="rgb(206,135,5)" fg:x="534" fg:w="7"/><text x="41.2638%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="41.2442%" y="645" width="0.3072%" height="15" fill="rgb(227,217,38)" fg:x="537" fg:w="4"/><text x="41.4942%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="41.3978%" y="629" width="0.1536%" height="15" fill="rgb(205,0,41)" fg:x="539" fg:w="2"/><text x="41.6478%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="41.3978%" y="613" width="0.1536%" height="15" fill="rgb(220,20,40)" fg:x="539" fg:w="2"/><text x="41.6478%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.4747%" y="597" width="0.0768%" height="15" fill="rgb(216,145,3)" fg:x="540" fg:w="1"/><text x="41.7247%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.4747%" y="581" width="0.0768%" height="15" fill="rgb(207,130,51)" fg:x="540" fg:w="1"/><text x="41.7247%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4747%" y="565" width="0.0768%" height="15" fill="rgb(252,93,13)" fg:x="540" fg:w="1"/><text x="41.7247%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.5515%" y="709" width="0.0768%" height="15" fill="rgb(210,105,15)" fg:x="541" fg:w="1"/><text x="41.8015%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5515%" y="693" width="0.0768%" height="15" fill="rgb(212,126,31)" fg:x="541" fg:w="1"/><text x="41.8015%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="41.6283%" y="693" width="0.2304%" height="15" fill="rgb(241,167,46)" fg:x="542" fg:w="3"/><text x="41.8783%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="41.6283%" y="677" width="0.2304%" height="15" fill="rgb(217,143,19)" fg:x="542" fg:w="3"/><text x="41.8783%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="41.6283%" y="661" width="0.2304%" height="15" fill="rgb(235,117,33)" fg:x="542" fg:w="3"/><text x="41.8783%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.15%)</title><rect x="41.7051%" y="645" width="0.1536%" height="15" fill="rgb(247,95,6)" fg:x="543" fg:w="2"/><text x="41.9551%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.7819%" y="629" width="0.0768%" height="15" fill="rgb(243,206,43)" fg:x="544" fg:w="1"/><text x="42.0319%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.7819%" y="613" width="0.0768%" height="15" fill="rgb(229,65,54)" fg:x="544" fg:w="1"/><text x="42.0319%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.7819%" y="597" width="0.0768%" height="15" fill="rgb(247,137,34)" fg:x="544" fg:w="1"/><text x="42.0319%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.8587%" y="693" width="0.0768%" height="15" fill="rgb(245,174,44)" fg:x="545" fg:w="1"/><text x="42.1087%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9355%" y="693" width="0.0768%" height="15" fill="rgb(223,64,15)" fg:x="546" fg:w="1"/><text x="42.1855%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="42.0123%" y="693" width="0.0768%" height="15" fill="rgb(243,153,36)" fg:x="547" fg:w="1"/><text x="42.2623%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.0123%" y="677" width="0.0768%" height="15" fill="rgb(252,23,4)" fg:x="547" fg:w="1"/><text x="42.2623%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0123%" y="661" width="0.0768%" height="15" fill="rgb(209,132,13)" fg:x="547" fg:w="1"/><text x="42.2623%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0891%" y="677" width="0.0768%" height="15" fill="rgb(209,196,21)" fg:x="548" fg:w="1"/><text x="42.3391%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0891%" y="661" width="0.0768%" height="15" fill="rgb(252,197,1)" fg:x="548" fg:w="1"/><text x="42.3391%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0891%" y="645" width="0.0768%" height="15" fill="rgb(229,42,46)" fg:x="548" fg:w="1"/><text x="42.3391%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.0891%" y="629" width="0.0768%" height="15" fill="rgb(219,85,8)" fg:x="548" fg:w="1"/><text x="42.3391%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.0891%" y="613" width="0.0768%" height="15" fill="rgb(223,185,14)" fg:x="548" fg:w="1"/><text x="42.3391%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.0891%" y="597" width="0.0768%" height="15" fill="rgb(217,196,18)" fg:x="548" fg:w="1"/><text x="42.3391%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0891%" y="581" width="0.0768%" height="15" fill="rgb(220,122,37)" fg:x="548" fg:w="1"/><text x="42.3391%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0891%" y="565" width="0.0768%" height="15" fill="rgb(236,135,33)" fg:x="548" fg:w="1"/><text x="42.3391%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.0891%" y="549" width="0.0768%" height="15" fill="rgb(222,86,54)" fg:x="548" fg:w="1"/><text x="42.3391%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.0891%" y="533" width="0.0768%" height="15" fill="rgb(227,42,22)" fg:x="548" fg:w="1"/><text x="42.3391%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.0891%" y="517" width="0.0768%" height="15" fill="rgb(243,101,27)" fg:x="548" fg:w="1"/><text x="42.3391%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.0891%" y="501" width="0.0768%" height="15" fill="rgb(229,100,8)" fg:x="548" fg:w="1"/><text x="42.3391%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0891%" y="485" width="0.0768%" height="15" fill="rgb(252,68,10)" fg:x="548" fg:w="1"/><text x="42.3391%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.1659%" y="661" width="0.0768%" height="15" fill="rgb(219,19,31)" fg:x="549" fg:w="1"/><text x="42.4159%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2427%" y="661" width="0.0768%" height="15" fill="rgb(246,150,44)" fg:x="550" fg:w="1"/><text x="42.4927%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2427%" y="645" width="0.0768%" height="15" fill="rgb(211,14,39)" fg:x="550" fg:w="1"/><text x="42.4927%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2427%" y="629" width="0.0768%" height="15" fill="rgb(221,98,29)" fg:x="550" fg:w="1"/><text x="42.4927%" y="639.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::intersection (1 samples, 0.08%)</title><rect x="42.3195%" y="645" width="0.0768%" height="15" fill="rgb(221,70,26)" fg:x="551" fg:w="1"/><text x="42.5695%" y="655.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="42.4731%" y="629" width="0.0768%" height="15" fill="rgb(236,146,30)" fg:x="553" fg:w="1"/><text x="42.7231%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="42.5499%" y="629" width="0.0768%" height="15" fill="rgb(226,94,34)" fg:x="554" fg:w="1"/><text x="42.7999%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.5499%" y="613" width="0.0768%" height="15" fill="rgb(248,132,21)" fg:x="554" fg:w="1"/><text x="42.7999%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="42.5499%" y="597" width="0.0768%" height="15" fill="rgb(245,43,50)" fg:x="554" fg:w="1"/><text x="42.7999%" y="607.50"></text></g><g><title>treediff::diff::diff (8 samples, 0.61%)</title><rect x="42.0891%" y="693" width="0.6144%" height="15" fill="rgb(245,132,31)" fg:x="548" fg:w="8"/><text x="42.3391%" y="703.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.54%)</title><rect x="42.1659%" y="677" width="0.5376%" height="15" fill="rgb(230,171,4)" fg:x="549" fg:w="7"/><text x="42.4159%" y="687.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.38%)</title><rect x="42.3195%" y="661" width="0.3840%" height="15" fill="rgb(235,6,45)" fg:x="551" fg:w="5"/><text x="42.5695%" y="671.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.31%)</title><rect x="42.3963%" y="645" width="0.3072%" height="15" fill="rgb(220,80,28)" fg:x="552" fg:w="4"/><text x="42.6463%" y="655.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="42.6267%" y="629" width="0.0768%" height="15" fill="rgb(242,171,9)" fg:x="555" fg:w="1"/><text x="42.8767%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (35 samples, 2.69%)</title><rect x="40.0922%" y="725" width="2.6882%" height="15" fill="rgb(214,135,29)" fg:x="522" fg:w="35"/><text x="40.3422%" y="735.50">&lt;k..</text></g><g><title>treediff::diff::diff (15 samples, 1.15%)</title><rect x="41.6283%" y="709" width="1.1521%" height="15" fill="rgb(221,229,16)" fg:x="542" fg:w="15"/><text x="41.8783%" y="719.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="42.7035%" y="693" width="0.0768%" height="15" fill="rgb(253,59,46)" fg:x="556" fg:w="1"/><text x="42.9535%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7035%" y="677" width="0.0768%" height="15" fill="rgb(250,147,20)" fg:x="556" fg:w="1"/><text x="42.9535%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.15%)</title><rect x="42.7803%" y="725" width="0.1536%" height="15" fill="rgb(236,64,48)" fg:x="557" fg:w="2"/><text x="43.0303%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="42.7803%" y="709" width="0.1536%" height="15" fill="rgb(240,37,42)" fg:x="557" fg:w="2"/><text x="43.0303%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9339%" y="693" width="0.0768%" height="15" fill="rgb(220,41,50)" fg:x="559" fg:w="1"/><text x="43.1839%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2412%" y="661" width="0.0768%" height="15" fill="rgb(216,51,14)" fg:x="563" fg:w="1"/><text x="43.4912%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.38%)</title><rect x="43.0108%" y="693" width="0.3840%" height="15" fill="rgb(215,83,10)" fg:x="560" fg:w="5"/><text x="43.2608%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="43.1644%" y="677" width="0.2304%" height="15" fill="rgb(206,144,17)" fg:x="562" fg:w="3"/><text x="43.4144%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.3180%" y="661" width="0.0768%" height="15" fill="rgb(219,196,37)" fg:x="564" fg:w="1"/><text x="43.5680%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="43.3948%" y="693" width="0.0768%" height="15" fill="rgb(226,135,26)" fg:x="565" fg:w="1"/><text x="43.6448%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.7020%" y="661" width="0.0768%" height="15" fill="rgb(237,195,40)" fg:x="569" fg:w="1"/><text x="43.9520%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (7 samples, 0.54%)</title><rect x="43.4716%" y="693" width="0.5376%" height="15" fill="rgb(228,182,42)" fg:x="566" fg:w="7"/><text x="43.7216%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.46%)</title><rect x="43.5484%" y="677" width="0.4608%" height="15" fill="rgb(224,135,50)" fg:x="567" fg:w="6"/><text x="43.7984%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="43.7788%" y="661" width="0.2304%" height="15" fill="rgb(236,215,34)" fg:x="570" fg:w="3"/><text x="44.0288%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="43.8556%" y="645" width="0.1536%" height="15" fill="rgb(244,213,27)" fg:x="571" fg:w="2"/><text x="44.1056%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.9324%" y="629" width="0.0768%" height="15" fill="rgb(233,37,53)" fg:x="572" fg:w="1"/><text x="44.1824%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="44.3164%" y="661" width="0.0768%" height="15" fill="rgb(222,132,14)" fg:x="577" fg:w="1"/><text x="44.5664%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="44.6237%" y="645" width="0.1536%" height="15" fill="rgb(219,202,29)" fg:x="581" fg:w="2"/><text x="44.8737%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.0077%" y="597" width="0.0768%" height="15" fill="rgb(226,157,39)" fg:x="586" fg:w="1"/><text x="45.2577%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.0077%" y="581" width="0.0768%" height="15" fill="rgb(235,213,2)" fg:x="586" fg:w="1"/><text x="45.2577%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.54%)</title><rect x="44.7773%" y="645" width="0.5376%" height="15" fill="rgb(250,121,2)" fg:x="583" fg:w="7"/><text x="45.0273%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.46%)</title><rect x="44.8541%" y="629" width="0.4608%" height="15" fill="rgb(206,192,33)" fg:x="584" fg:w="6"/><text x="45.1041%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="45.0077%" y="613" width="0.3072%" height="15" fill="rgb(240,161,6)" fg:x="586" fg:w="4"/><text x="45.2577%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="45.0845%" y="597" width="0.2304%" height="15" fill="rgb(246,53,30)" fg:x="587" fg:w="3"/><text x="45.3345%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="45.1613%" y="581" width="0.1536%" height="15" fill="rgb(219,123,43)" fg:x="588" fg:w="2"/><text x="45.4113%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3917%" y="613" width="0.0768%" height="15" fill="rgb(236,53,49)" fg:x="591" fg:w="1"/><text x="45.6417%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3917%" y="597" width="0.0768%" height="15" fill="rgb(241,156,1)" fg:x="591" fg:w="1"/><text x="45.6417%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3917%" y="581" width="0.0768%" height="15" fill="rgb(209,73,26)" fg:x="591" fg:w="1"/><text x="45.6417%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.8525%" y="549" width="0.0768%" height="15" fill="rgb(206,114,3)" fg:x="597" fg:w="1"/><text x="46.1025%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.8525%" y="533" width="0.0768%" height="15" fill="rgb(230,214,9)" fg:x="597" fg:w="1"/><text x="46.1025%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.8525%" y="517" width="0.0768%" height="15" fill="rgb(240,184,46)" fg:x="597" fg:w="1"/><text x="46.1025%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.9293%" y="533" width="0.0768%" height="15" fill="rgb(242,169,54)" fg:x="598" fg:w="1"/><text x="46.1793%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="46.0061%" y="533" width="0.0768%" height="15" fill="rgb(207,168,50)" fg:x="599" fg:w="1"/><text x="46.2561%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.84%)</title><rect x="45.4685%" y="597" width="0.8449%" height="15" fill="rgb(240,114,2)" fg:x="592" fg:w="11"/><text x="45.7185%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.84%)</title><rect x="45.4685%" y="581" width="0.8449%" height="15" fill="rgb(211,17,40)" fg:x="592" fg:w="11"/><text x="45.7185%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.54%)</title><rect x="45.7757%" y="565" width="0.5376%" height="15" fill="rgb(235,97,36)" fg:x="596" fg:w="7"/><text x="46.0257%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.38%)</title><rect x="45.9293%" y="549" width="0.3840%" height="15" fill="rgb(208,164,11)" fg:x="598" fg:w="5"/><text x="46.1793%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="46.0829%" y="533" width="0.2304%" height="15" fill="rgb(242,11,17)" fg:x="600" fg:w="3"/><text x="46.3329%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="46.1598%" y="517" width="0.1536%" height="15" fill="rgb(215,86,33)" fg:x="601" fg:w="2"/><text x="46.4098%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="46.1598%" y="501" width="0.1536%" height="15" fill="rgb(245,185,28)" fg:x="601" fg:w="2"/><text x="46.4098%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="46.1598%" y="485" width="0.1536%" height="15" fill="rgb(231,89,42)" fg:x="601" fg:w="2"/><text x="46.4098%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.3134%" y="597" width="0.0768%" height="15" fill="rgb(210,18,47)" fg:x="603" fg:w="1"/><text x="46.5634%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.08%)</title><rect x="45.3917%" y="629" width="1.0753%" height="15" fill="rgb(214,84,8)" fg:x="591" fg:w="14"/><text x="45.6417%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.00%)</title><rect x="45.4685%" y="613" width="0.9985%" height="15" fill="rgb(214,222,23)" fg:x="592" fg:w="13"/><text x="45.7185%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="46.3902%" y="597" width="0.0768%" height="15" fill="rgb(213,104,21)" fg:x="604" fg:w="1"/><text x="46.6402%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="46.3902%" y="581" width="0.0768%" height="15" fill="rgb(238,138,6)" fg:x="604" fg:w="1"/><text x="46.6402%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (28 samples, 2.15%)</title><rect x="44.3932%" y="661" width="2.1505%" height="15" fill="rgb(205,167,50)" fg:x="578" fg:w="28"/><text x="44.6432%" y="671.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.23%)</title><rect x="45.3149%" y="645" width="1.2289%" height="15" fill="rgb(230,105,27)" fg:x="590" fg:w="16"/><text x="45.5649%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.4670%" y="629" width="0.0768%" height="15" fill="rgb(222,97,48)" fg:x="605" fg:w="1"/><text x="46.7170%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (33 samples, 2.53%)</title><rect x="44.1628%" y="677" width="2.5346%" height="15" fill="rgb(222,197,14)" fg:x="575" fg:w="33"/><text x="44.4128%" y="687.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.15%)</title><rect x="46.5438%" y="661" width="0.1536%" height="15" fill="rgb(210,105,47)" fg:x="606" fg:w="2"/><text x="46.7938%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (50 samples, 3.84%)</title><rect x="42.9339%" y="725" width="3.8402%" height="15" fill="rgb(238,158,19)" fg:x="559" fg:w="50"/><text x="43.1839%" y="735.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (50 samples, 3.84%)</title><rect x="42.9339%" y="709" width="3.8402%" height="15" fill="rgb(226,176,23)" fg:x="559" fg:w="50"/><text x="43.1839%" y="719.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.76%)</title><rect x="44.0092%" y="693" width="2.7650%" height="15" fill="rgb(208,79,31)" fg:x="573" fg:w="36"/><text x="44.2592%" y="703.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.6974%" y="677" width="0.0768%" height="15" fill="rgb(221,154,21)" fg:x="608" fg:w="1"/><text x="46.9474%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="47.3886%" y="581" width="0.0768%" height="15" fill="rgb(213,61,41)" fg:x="617" fg:w="1"/><text x="47.6386%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.3886%" y="565" width="0.0768%" height="15" fill="rgb(215,28,33)" fg:x="617" fg:w="1"/><text x="47.6386%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3886%" y="549" width="0.0768%" height="15" fill="rgb(231,139,26)" fg:x="617" fg:w="1"/><text x="47.6386%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3886%" y="533" width="0.0768%" height="15" fill="rgb(232,159,16)" fg:x="617" fg:w="1"/><text x="47.6386%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.3886%" y="517" width="0.0768%" height="15" fill="rgb(233,80,10)" fg:x="617" fg:w="1"/><text x="47.6386%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.7727%" y="453" width="0.0768%" height="15" fill="rgb(208,147,29)" fg:x="622" fg:w="1"/><text x="48.0227%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="47.7727%" y="469" width="0.1536%" height="15" fill="rgb(213,10,12)" fg:x="622" fg:w="2"/><text x="48.0227%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.8495%" y="453" width="0.0768%" height="15" fill="rgb(231,218,13)" fg:x="623" fg:w="1"/><text x="48.0995%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.38%)</title><rect x="47.6190%" y="501" width="0.3840%" height="15" fill="rgb(244,199,44)" fg:x="620" fg:w="5"/><text x="47.8690%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.38%)</title><rect x="47.6190%" y="485" width="0.3840%" height="15" fill="rgb(240,144,53)" fg:x="620" fg:w="5"/><text x="47.8690%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.9263%" y="469" width="0.0768%" height="15" fill="rgb(223,57,28)" fg:x="624" fg:w="1"/><text x="48.1763%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.9263%" y="453" width="0.0768%" height="15" fill="rgb(213,134,38)" fg:x="624" fg:w="1"/><text x="48.1763%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.9263%" y="437" width="0.0768%" height="15" fill="rgb(251,182,42)" fg:x="624" fg:w="1"/><text x="48.1763%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.61%)</title><rect x="47.5422%" y="533" width="0.6144%" height="15" fill="rgb(229,93,13)" fg:x="619" fg:w="8"/><text x="47.7922%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.61%)</title><rect x="47.5422%" y="517" width="0.6144%" height="15" fill="rgb(234,171,3)" fg:x="619" fg:w="8"/><text x="47.7922%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="48.0031%" y="501" width="0.1536%" height="15" fill="rgb(241,105,32)" fg:x="625" fg:w="2"/><text x="48.2531%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="48.0031%" y="485" width="0.1536%" height="15" fill="rgb(221,66,3)" fg:x="625" fg:w="2"/><text x="48.2531%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.69%)</title><rect x="47.5422%" y="565" width="0.6912%" height="15" fill="rgb(248,155,29)" fg:x="619" fg:w="9"/><text x="47.7922%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.69%)</title><rect x="47.5422%" y="549" width="0.6912%" height="15" fill="rgb(231,31,5)" fg:x="619" fg:w="9"/><text x="47.7922%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.1567%" y="533" width="0.0768%" height="15" fill="rgb(213,188,31)" fg:x="627" fg:w="1"/><text x="48.4067%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.1567%" y="517" width="0.0768%" height="15" fill="rgb(212,104,33)" fg:x="627" fg:w="1"/><text x="48.4067%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.08%)</title><rect x="47.3886%" y="597" width="1.0753%" height="15" fill="rgb(254,77,51)" fg:x="617" fg:w="14"/><text x="47.6386%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.00%)</title><rect x="47.4654%" y="581" width="0.9985%" height="15" fill="rgb(234,39,26)" fg:x="618" fg:w="13"/><text x="47.7154%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="48.2335%" y="565" width="0.2304%" height="15" fill="rgb(208,88,36)" fg:x="628" fg:w="3"/><text x="48.4835%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.23%)</title><rect x="48.2335%" y="549" width="0.2304%" height="15" fill="rgb(243,222,10)" fg:x="628" fg:w="3"/><text x="48.4835%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="48.4639%" y="597" width="0.1536%" height="15" fill="rgb(218,133,52)" fg:x="631" fg:w="2"/><text x="48.7139%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="48.4639%" y="581" width="0.1536%" height="15" fill="rgb(222,25,26)" fg:x="631" fg:w="2"/><text x="48.7139%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.69%)</title><rect x="47.0814%" y="629" width="1.6897%" height="15" fill="rgb(243,174,24)" fg:x="613" fg:w="22"/><text x="47.3314%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.54%)</title><rect x="47.2350%" y="613" width="1.5361%" height="15" fill="rgb(233,188,52)" fg:x="615" fg:w="20"/><text x="47.4850%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="48.6175%" y="597" width="0.1536%" height="15" fill="rgb(208,89,14)" fg:x="633" fg:w="2"/><text x="48.8675%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6943%" y="581" width="0.0768%" height="15" fill="rgb(205,204,21)" fg:x="634" fg:w="1"/><text x="48.9443%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6943%" y="565" width="0.0768%" height="15" fill="rgb(246,39,28)" fg:x="634" fg:w="1"/><text x="48.9443%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.8479%" y="613" width="0.0768%" height="15" fill="rgb(235,71,19)" fg:x="636" fg:w="1"/><text x="49.0979%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="48.7711%" y="629" width="0.2304%" height="15" fill="rgb(211,62,39)" fg:x="635" fg:w="3"/><text x="49.0211%" y="639.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="48.9247%" y="613" width="0.0768%" height="15" fill="rgb(246,118,20)" fg:x="637" fg:w="1"/><text x="49.1747%" y="623.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="48.9247%" y="597" width="0.0768%" height="15" fill="rgb(230,82,12)" fg:x="637" fg:w="1"/><text x="49.1747%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (31 samples, 2.38%)</title><rect x="46.8510%" y="661" width="2.3810%" height="15" fill="rgb(205,212,34)" fg:x="610" fg:w="31"/><text x="47.1010%" y="671.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (30 samples, 2.30%)</title><rect x="46.9278%" y="645" width="2.3041%" height="15" fill="rgb(239,90,1)" fg:x="611" fg:w="30"/><text x="47.1778%" y="655.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="49.0015%" y="629" width="0.2304%" height="15" fill="rgb(225,198,50)" fg:x="638" fg:w="3"/><text x="49.2515%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="49.0015%" y="613" width="0.2304%" height="15" fill="rgb(227,208,48)" fg:x="638" fg:w="3"/><text x="49.2515%" y="623.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="49.0015%" y="597" width="0.2304%" height="15" fill="rgb(238,134,41)" fg:x="638" fg:w="3"/><text x="49.2515%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="49.2320%" y="661" width="0.1536%" height="15" fill="rgb(241,58,39)" fg:x="641" fg:w="2"/><text x="49.4820%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3088%" y="645" width="0.0768%" height="15" fill="rgb(214,126,4)" fg:x="642" fg:w="1"/><text x="49.5588%" y="655.50"></text></g><g><title>engine::session::state::State::flush_entities (205 samples, 15.75%)</title><rect x="34.2550%" y="789" width="15.7450%" height="15" fill="rgb(235,149,4)" fg:x="446" fg:w="205"/><text x="34.5050%" y="799.50">engine::session::state::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (200 samples, 15.36%)</title><rect x="34.6390%" y="773" width="15.3610%" height="15" fill="rgb(236,59,29)" fg:x="451" fg:w="200"/><text x="34.8890%" y="783.50">engine::session::interna..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (197 samples, 15.13%)</title><rect x="34.8694%" y="757" width="15.1306%" height="15" fill="rgb(246,11,33)" fg:x="454" fg:w="197"/><text x="35.1194%" y="767.50">engine::session::state:..</text></g><g><title>kernel::model::any_entity_changes (130 samples, 9.98%)</title><rect x="40.0154%" y="741" width="9.9846%" height="15" fill="rgb(232,180,35)" fg:x="521" fg:w="130"/><text x="40.2654%" y="751.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (42 samples, 3.23%)</title><rect x="46.7742%" y="725" width="3.2258%" height="15" fill="rgb(220,35,37)" fg:x="609" fg:w="42"/><text x="47.0242%" y="735.50">ser..</text></g><g><title>serde_json::de::from_trait (42 samples, 3.23%)</title><rect x="46.7742%" y="709" width="3.2258%" height="15" fill="rgb(238,107,48)" fg:x="609" fg:w="42"/><text x="47.0242%" y="719.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (42 samples, 3.23%)</title><rect x="46.7742%" y="693" width="3.2258%" height="15" fill="rgb(205,65,21)" fg:x="609" fg:w="42"/><text x="47.0242%" y="703.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (41 samples, 3.15%)</title><rect x="46.8510%" y="677" width="3.1490%" height="15" fill="rgb(246,138,48)" fg:x="610" fg:w="41"/><text x="47.1010%" y="687.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.61%)</title><rect x="49.3856%" y="661" width="0.6144%" height="15" fill="rgb(209,220,47)" fg:x="643" fg:w="8"/><text x="49.6356%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="49.8464%" y="645" width="0.1536%" height="15" fill="rgb(222,162,49)" fg:x="649" fg:w="2"/><text x="50.0964%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9232%" y="629" width="0.0768%" height="15" fill="rgb(243,123,11)" fg:x="650" fg:w="1"/><text x="50.1732%" y="639.50"></text></g><g><title>engine::session::state::State::close (223 samples, 17.13%)</title><rect x="32.9493%" y="805" width="17.1275%" height="15" fill="rgb(221,229,41)" fg:x="429" fg:w="223"/><text x="33.1993%" y="815.50">engine::session::state::Sta..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="50.0000%" y="789" width="0.0768%" height="15" fill="rgb(216,68,4)" fg:x="651" fg:w="1"/><text x="50.2500%" y="799.50"></text></g><g><title>engine::session::Session::close (229 samples, 17.59%)</title><rect x="32.5653%" y="821" width="17.5883%" height="15" fill="rgb(207,88,35)" fg:x="424" fg:w="229"/><text x="32.8153%" y="831.50">engine::session::Session::c..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="50.0768%" y="805" width="0.0768%" height="15" fill="rgb(252,2,5)" fg:x="652" fg:w="1"/><text x="50.3268%" y="815.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="50.0768%" y="789" width="0.0768%" height="15" fill="rgb(209,173,7)" fg:x="652" fg:w="1"/><text x="50.3268%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="50.0768%" y="773" width="0.0768%" height="15" fill="rgb(210,198,52)" fg:x="652" fg:w="1"/><text x="50.3268%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="50.0768%" y="757" width="0.0768%" height="15" fill="rgb(228,152,32)" fg:x="652" fg:w="1"/><text x="50.3268%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.3840%" y="805" width="0.0768%" height="15" fill="rgb(249,98,29)" fg:x="656" fg:w="1"/><text x="50.6340%" y="815.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.6912%" y="725" width="0.0768%" height="15" fill="rgb(205,148,48)" fg:x="660" fg:w="1"/><text x="50.9412%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.6912%" y="709" width="0.0768%" height="15" fill="rgb(236,69,34)" fg:x="660" fg:w="1"/><text x="50.9412%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.6912%" y="693" width="0.0768%" height="15" fill="rgb(220,151,41)" fg:x="660" fg:w="1"/><text x="50.9412%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.6912%" y="677" width="0.0768%" height="15" fill="rgb(254,106,24)" fg:x="660" fg:w="1"/><text x="50.9412%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.6912%" y="661" width="0.0768%" height="15" fill="rgb(210,37,48)" fg:x="660" fg:w="1"/><text x="50.9412%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.6912%" y="645" width="0.0768%" height="15" fill="rgb(254,131,5)" fg:x="660" fg:w="1"/><text x="50.9412%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.6912%" y="629" width="0.0768%" height="15" fill="rgb(216,55,41)" fg:x="660" fg:w="1"/><text x="50.9412%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.6912%" y="613" width="0.0768%" height="15" fill="rgb(250,35,31)" fg:x="660" fg:w="1"/><text x="50.9412%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.6912%" y="597" width="0.0768%" height="15" fill="rgb(207,124,33)" fg:x="660" fg:w="1"/><text x="50.9412%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.15%)</title><rect x="50.7680%" y="709" width="0.1536%" height="15" fill="rgb(249,175,17)" fg:x="661" fg:w="2"/><text x="51.0180%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="50.8449%" y="693" width="0.0768%" height="15" fill="rgb(224,175,39)" fg:x="662" fg:w="1"/><text x="51.0949%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="50.8449%" y="677" width="0.0768%" height="15" fill="rgb(208,67,49)" fg:x="662" fg:w="1"/><text x="51.0949%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="51.2289%" y="597" width="0.0768%" height="15" fill="rgb(222,188,41)" fg:x="667" fg:w="1"/><text x="51.4789%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="51.2289%" y="581" width="0.0768%" height="15" fill="rgb(243,213,30)" fg:x="667" fg:w="1"/><text x="51.4789%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="51.2289%" y="565" width="0.0768%" height="15" fill="rgb(253,100,45)" fg:x="667" fg:w="1"/><text x="51.4789%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.2289%" y="549" width="0.0768%" height="15" fill="rgb(226,24,44)" fg:x="667" fg:w="1"/><text x="51.4789%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2289%" y="533" width="0.0768%" height="15" fill="rgb(215,41,24)" fg:x="667" fg:w="1"/><text x="51.4789%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.2289%" y="517" width="0.0768%" height="15" fill="rgb(254,53,33)" fg:x="667" fg:w="1"/><text x="51.4789%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2289%" y="501" width="0.0768%" height="15" fill="rgb(242,103,10)" fg:x="667" fg:w="1"/><text x="51.4789%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.2289%" y="485" width="0.0768%" height="15" fill="rgb(246,29,21)" fg:x="667" fg:w="1"/><text x="51.4789%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2289%" y="469" width="0.0768%" height="15" fill="rgb(251,154,1)" fg:x="667" fg:w="1"/><text x="51.4789%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.2289%" y="453" width="0.0768%" height="15" fill="rgb(254,212,26)" fg:x="667" fg:w="1"/><text x="51.4789%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2289%" y="437" width="0.0768%" height="15" fill="rgb(251,187,46)" fg:x="667" fg:w="1"/><text x="51.4789%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.2289%" y="421" width="0.0768%" height="15" fill="rgb(224,208,14)" fg:x="667" fg:w="1"/><text x="51.4789%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2289%" y="405" width="0.0768%" height="15" fill="rgb(222,176,26)" fg:x="667" fg:w="1"/><text x="51.4789%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="51.2289%" y="389" width="0.0768%" height="15" fill="rgb(241,219,52)" fg:x="667" fg:w="1"/><text x="51.4789%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.15%)</title><rect x="51.2289%" y="629" width="0.1536%" height="15" fill="rgb(252,198,21)" fg:x="667" fg:w="2"/><text x="51.4789%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.15%)</title><rect x="51.2289%" y="613" width="0.1536%" height="15" fill="rgb(244,196,23)" fg:x="667" fg:w="2"/><text x="51.4789%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="51.3057%" y="597" width="0.0768%" height="15" fill="rgb(239,121,44)" fg:x="668" fg:w="1"/><text x="51.5557%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="51.3057%" y="581" width="0.0768%" height="15" fill="rgb(249,203,23)" fg:x="668" fg:w="1"/><text x="51.5557%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="51.3057%" y="565" width="0.0768%" height="15" fill="rgb(238,219,10)" fg:x="668" fg:w="1"/><text x="51.5557%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.3057%" y="549" width="0.0768%" height="15" fill="rgb(241,35,46)" fg:x="668" fg:w="1"/><text x="51.5557%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3057%" y="533" width="0.0768%" height="15" fill="rgb(218,28,6)" fg:x="668" fg:w="1"/><text x="51.5557%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.3057%" y="517" width="0.0768%" height="15" fill="rgb(233,151,50)" fg:x="668" fg:w="1"/><text x="51.5557%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3057%" y="501" width="0.0768%" height="15" fill="rgb(208,57,8)" fg:x="668" fg:w="1"/><text x="51.5557%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.3057%" y="485" width="0.0768%" height="15" fill="rgb(253,99,10)" fg:x="668" fg:w="1"/><text x="51.5557%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3057%" y="469" width="0.0768%" height="15" fill="rgb(237,196,49)" fg:x="668" fg:w="1"/><text x="51.5557%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.3057%" y="453" width="0.0768%" height="15" fill="rgb(209,51,3)" fg:x="668" fg:w="1"/><text x="51.5557%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.3057%" y="437" width="0.0768%" height="15" fill="rgb(238,129,10)" fg:x="668" fg:w="1"/><text x="51.5557%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.3057%" y="421" width="0.0768%" height="15" fill="rgb(246,201,16)" fg:x="668" fg:w="1"/><text x="51.5557%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.4593%" y="533" width="0.0768%" height="15" fill="rgb(250,160,20)" fg:x="670" fg:w="1"/><text x="51.7093%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.4593%" y="517" width="0.0768%" height="15" fill="rgb(251,107,25)" fg:x="670" fg:w="1"/><text x="51.7093%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.5361%" y="485" width="0.0768%" height="15" fill="rgb(212,103,39)" fg:x="671" fg:w="1"/><text x="51.7861%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.5361%" y="469" width="0.0768%" height="15" fill="rgb(207,9,29)" fg:x="671" fg:w="1"/><text x="51.7861%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.5361%" y="453" width="0.0768%" height="15" fill="rgb(227,84,3)" fg:x="671" fg:w="1"/><text x="51.7861%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.5361%" y="437" width="0.0768%" height="15" fill="rgb(242,194,7)" fg:x="671" fg:w="1"/><text x="51.7861%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.5361%" y="421" width="0.0768%" height="15" fill="rgb(230,40,4)" fg:x="671" fg:w="1"/><text x="51.7861%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.5361%" y="405" width="0.0768%" height="15" fill="rgb(243,229,33)" fg:x="671" fg:w="1"/><text x="51.7861%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.5361%" y="389" width="0.0768%" height="15" fill="rgb(240,65,24)" fg:x="671" fg:w="1"/><text x="51.7861%" y="399.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.46%)</title><rect x="51.3825%" y="613" width="0.4608%" height="15" fill="rgb(212,28,20)" fg:x="669" fg:w="6"/><text x="51.6325%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.46%)</title><rect x="51.3825%" y="597" width="0.4608%" height="15" fill="rgb(209,72,3)" fg:x="669" fg:w="6"/><text x="51.6325%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.46%)</title><rect x="51.3825%" y="581" width="0.4608%" height="15" fill="rgb(238,170,36)" fg:x="669" fg:w="6"/><text x="51.6325%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.46%)</title><rect x="51.3825%" y="565" width="0.4608%" height="15" fill="rgb(236,19,38)" fg:x="669" fg:w="6"/><text x="51.6325%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.38%)</title><rect x="51.4593%" y="549" width="0.3840%" height="15" fill="rgb(230,67,43)" fg:x="670" fg:w="5"/><text x="51.7093%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="51.5361%" y="533" width="0.3072%" height="15" fill="rgb(227,14,36)" fg:x="671" fg:w="4"/><text x="51.7861%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="51.5361%" y="517" width="0.3072%" height="15" fill="rgb(247,171,49)" fg:x="671" fg:w="4"/><text x="51.7861%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="51.5361%" y="501" width="0.3072%" height="15" fill="rgb(235,164,51)" fg:x="671" fg:w="4"/><text x="51.7861%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="51.6129%" y="485" width="0.2304%" height="15" fill="rgb(246,107,20)" fg:x="672" fg:w="3"/><text x="51.8629%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="51.6129%" y="469" width="0.2304%" height="15" fill="rgb(226,88,18)" fg:x="672" fg:w="3"/><text x="51.8629%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="51.6129%" y="453" width="0.2304%" height="15" fill="rgb(235,136,9)" fg:x="672" fg:w="3"/><text x="51.8629%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.8433%" y="501" width="0.0768%" height="15" fill="rgb(209,3,34)" fg:x="675" fg:w="1"/><text x="52.0933%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.8433%" y="485" width="0.0768%" height="15" fill="rgb(213,38,19)" fg:x="675" fg:w="1"/><text x="52.0933%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.8433%" y="469" width="0.0768%" height="15" fill="rgb(254,24,24)" fg:x="675" fg:w="1"/><text x="52.0933%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.8433%" y="453" width="0.0768%" height="15" fill="rgb(219,122,42)" fg:x="675" fg:w="1"/><text x="52.0933%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="51.8433%" y="437" width="0.0768%" height="15" fill="rgb(205,128,31)" fg:x="675" fg:w="1"/><text x="52.0933%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.8433%" y="421" width="0.0768%" height="15" fill="rgb(212,142,0)" fg:x="675" fg:w="1"/><text x="52.0933%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="51.8433%" y="533" width="0.1536%" height="15" fill="rgb(211,25,35)" fg:x="675" fg:w="2"/><text x="52.0933%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="51.8433%" y="517" width="0.1536%" height="15" fill="rgb(220,150,53)" fg:x="675" fg:w="2"/><text x="52.0933%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="51.9201%" y="501" width="0.0768%" height="15" fill="rgb(220,30,24)" fg:x="676" fg:w="1"/><text x="52.1701%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.9201%" y="485" width="0.0768%" height="15" fill="rgb(218,86,23)" fg:x="676" fg:w="1"/><text x="52.1701%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.9201%" y="469" width="0.0768%" height="15" fill="rgb(206,62,27)" fg:x="676" fg:w="1"/><text x="52.1701%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.9969%" y="469" width="0.0768%" height="15" fill="rgb(249,174,0)" fg:x="677" fg:w="1"/><text x="52.2469%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="51.9969%" y="533" width="0.1536%" height="15" fill="rgb(246,67,27)" fg:x="677" fg:w="2"/><text x="52.2469%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="51.9969%" y="517" width="0.1536%" height="15" fill="rgb(250,195,30)" fg:x="677" fg:w="2"/><text x="52.2469%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="51.9969%" y="501" width="0.1536%" height="15" fill="rgb(251,171,50)" fg:x="677" fg:w="2"/><text x="52.2469%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="51.9969%" y="485" width="0.1536%" height="15" fill="rgb(236,196,10)" fg:x="677" fg:w="2"/><text x="52.2469%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="52.0737%" y="469" width="0.0768%" height="15" fill="rgb(249,228,52)" fg:x="678" fg:w="1"/><text x="52.3237%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0737%" y="453" width="0.0768%" height="15" fill="rgb(219,60,51)" fg:x="678" fg:w="1"/><text x="52.3237%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="52.1505%" y="485" width="0.0768%" height="15" fill="rgb(240,198,24)" fg:x="679" fg:w="1"/><text x="52.4005%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="52.1505%" y="469" width="0.0768%" height="15" fill="rgb(240,192,40)" fg:x="679" fg:w="1"/><text x="52.4005%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.1505%" y="453" width="0.0768%" height="15" fill="rgb(219,118,5)" fg:x="679" fg:w="1"/><text x="52.4005%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.1505%" y="437" width="0.0768%" height="15" fill="rgb(205,202,34)" fg:x="679" fg:w="1"/><text x="52.4005%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.1505%" y="421" width="0.0768%" height="15" fill="rgb(234,153,26)" fg:x="679" fg:w="1"/><text x="52.4005%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.1505%" y="405" width="0.0768%" height="15" fill="rgb(229,26,29)" fg:x="679" fg:w="1"/><text x="52.4005%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.92%)</title><rect x="51.3825%" y="629" width="0.9217%" height="15" fill="rgb(237,115,21)" fg:x="669" fg:w="12"/><text x="51.6325%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.46%)</title><rect x="51.8433%" y="613" width="0.4608%" height="15" fill="rgb(252,144,15)" fg:x="675" fg:w="6"/><text x="52.0933%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.46%)</title><rect x="51.8433%" y="597" width="0.4608%" height="15" fill="rgb(232,26,13)" fg:x="675" fg:w="6"/><text x="52.0933%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.46%)</title><rect x="51.8433%" y="581" width="0.4608%" height="15" fill="rgb(206,44,19)" fg:x="675" fg:w="6"/><text x="52.0933%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.46%)</title><rect x="51.8433%" y="565" width="0.4608%" height="15" fill="rgb(249,159,2)" fg:x="675" fg:w="6"/><text x="52.0933%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.46%)</title><rect x="51.8433%" y="549" width="0.4608%" height="15" fill="rgb(231,5,32)" fg:x="675" fg:w="6"/><text x="52.0933%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="52.1505%" y="533" width="0.1536%" height="15" fill="rgb(249,210,18)" fg:x="679" fg:w="2"/><text x="52.4005%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="52.1505%" y="517" width="0.1536%" height="15" fill="rgb(215,223,36)" fg:x="679" fg:w="2"/><text x="52.4005%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.15%)</title><rect x="52.1505%" y="501" width="0.1536%" height="15" fill="rgb(245,185,20)" fg:x="679" fg:w="2"/><text x="52.4005%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.2273%" y="485" width="0.0768%" height="15" fill="rgb(206,224,11)" fg:x="680" fg:w="1"/><text x="52.4773%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.2273%" y="469" width="0.0768%" height="15" fill="rgb(248,73,42)" fg:x="680" fg:w="1"/><text x="52.4773%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="52.2273%" y="453" width="0.0768%" height="15" fill="rgb(219,149,31)" fg:x="680" fg:w="1"/><text x="52.4773%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.2273%" y="437" width="0.0768%" height="15" fill="rgb(243,104,17)" fg:x="680" fg:w="1"/><text x="52.4773%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.2273%" y="421" width="0.0768%" height="15" fill="rgb(244,117,33)" fg:x="680" fg:w="1"/><text x="52.4773%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="52.2273%" y="405" width="0.0768%" height="15" fill="rgb(251,25,47)" fg:x="680" fg:w="1"/><text x="52.4773%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.2273%" y="389" width="0.0768%" height="15" fill="rgb(249,70,13)" fg:x="680" fg:w="1"/><text x="52.4773%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.2273%" y="373" width="0.0768%" height="15" fill="rgb(217,133,18)" fg:x="680" fg:w="1"/><text x="52.4773%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.2273%" y="357" width="0.0768%" height="15" fill="rgb(248,97,28)" fg:x="680" fg:w="1"/><text x="52.4773%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.3041%" y="581" width="0.0768%" height="15" fill="rgb(237,193,4)" fg:x="681" fg:w="1"/><text x="52.5541%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.3041%" y="565" width="0.0768%" height="15" fill="rgb(247,198,45)" fg:x="681" fg:w="1"/><text x="52.5541%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.3041%" y="549" width="0.0768%" height="15" fill="rgb(245,2,20)" fg:x="681" fg:w="1"/><text x="52.5541%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.3041%" y="533" width="0.0768%" height="15" fill="rgb(210,71,36)" fg:x="681" fg:w="1"/><text x="52.5541%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3041%" y="517" width="0.0768%" height="15" fill="rgb(238,114,30)" fg:x="681" fg:w="1"/><text x="52.5541%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3041%" y="501" width="0.0768%" height="15" fill="rgb(241,200,2)" fg:x="681" fg:w="1"/><text x="52.5541%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.3041%" y="485" width="0.0768%" height="15" fill="rgb(232,106,18)" fg:x="681" fg:w="1"/><text x="52.5541%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.3041%" y="469" width="0.0768%" height="15" fill="rgb(211,141,18)" fg:x="681" fg:w="1"/><text x="52.5541%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.3041%" y="453" width="0.0768%" height="15" fill="rgb(224,9,9)" fg:x="681" fg:w="1"/><text x="52.5541%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.31%)</title><rect x="51.2289%" y="661" width="1.3057%" height="15" fill="rgb(249,137,46)" fg:x="667" fg:w="17"/><text x="51.4789%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.31%)</title><rect x="51.2289%" y="645" width="1.3057%" height="15" fill="rgb(236,44,45)" fg:x="667" fg:w="17"/><text x="51.4789%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="52.3041%" y="629" width="0.2304%" height="15" fill="rgb(205,68,40)" fg:x="681" fg:w="3"/><text x="52.5541%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="52.3041%" y="613" width="0.2304%" height="15" fill="rgb(214,198,49)" fg:x="681" fg:w="3"/><text x="52.5541%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="52.3041%" y="597" width="0.2304%" height="15" fill="rgb(226,140,45)" fg:x="681" fg:w="3"/><text x="52.5541%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="52.3810%" y="581" width="0.1536%" height="15" fill="rgb(209,109,20)" fg:x="682" fg:w="2"/><text x="52.6310%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="52.3810%" y="565" width="0.1536%" height="15" fill="rgb(217,33,46)" fg:x="682" fg:w="2"/><text x="52.6310%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="52.3810%" y="549" width="0.1536%" height="15" fill="rgb(232,150,33)" fg:x="682" fg:w="2"/><text x="52.6310%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="52.3810%" y="533" width="0.1536%" height="15" fill="rgb(233,76,25)" fg:x="682" fg:w="2"/><text x="52.6310%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="52.3810%" y="517" width="0.1536%" height="15" fill="rgb(254,219,23)" fg:x="682" fg:w="2"/><text x="52.6310%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="52.3810%" y="501" width="0.1536%" height="15" fill="rgb(233,108,4)" fg:x="682" fg:w="2"/><text x="52.6310%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="52.3810%" y="485" width="0.1536%" height="15" fill="rgb(229,98,6)" fg:x="682" fg:w="2"/><text x="52.6310%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="52.3810%" y="469" width="0.1536%" height="15" fill="rgb(217,40,27)" fg:x="682" fg:w="2"/><text x="52.6310%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (19 samples, 1.46%)</title><rect x="51.2289%" y="677" width="1.4593%" height="15" fill="rgb(221,35,43)" fg:x="667" fg:w="19"/><text x="51.4789%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="52.5346%" y="661" width="0.1536%" height="15" fill="rgb(212,107,11)" fg:x="684" fg:w="2"/><text x="52.7846%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6882%" y="677" width="0.0768%" height="15" fill="rgb(245,42,44)" fg:x="686" fg:w="1"/><text x="52.9382%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.6882%" y="661" width="0.0768%" height="15" fill="rgb(209,31,12)" fg:x="686" fg:w="1"/><text x="52.9382%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.6882%" y="645" width="0.0768%" height="15" fill="rgb(210,228,54)" fg:x="686" fg:w="1"/><text x="52.9382%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.7650%" y="677" width="0.0768%" height="15" fill="rgb(241,19,33)" fg:x="687" fg:w="1"/><text x="53.0150%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="52.7650%" y="661" width="0.0768%" height="15" fill="rgb(229,51,27)" fg:x="687" fg:w="1"/><text x="53.0150%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.2258%" y="613" width="0.0768%" height="15" fill="rgb(214,167,49)" fg:x="693" fg:w="1"/><text x="53.4758%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (35 samples, 2.69%)</title><rect x="50.7680%" y="725" width="2.6882%" height="15" fill="rgb(248,140,47)" fg:x="661" fg:w="35"/><text x="51.0180%" y="735.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (33 samples, 2.53%)</title><rect x="50.9217%" y="709" width="2.5346%" height="15" fill="rgb(228,6,51)" fg:x="663" fg:w="33"/><text x="51.1717%" y="719.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (33 samples, 2.53%)</title><rect x="50.9217%" y="693" width="2.5346%" height="15" fill="rgb(242,44,53)" fg:x="663" fg:w="33"/><text x="51.1717%" y="703.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.61%)</title><rect x="52.8418%" y="677" width="0.6144%" height="15" fill="rgb(249,90,50)" fg:x="688" fg:w="8"/><text x="53.0918%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.61%)</title><rect x="52.8418%" y="661" width="0.6144%" height="15" fill="rgb(222,84,19)" fg:x="688" fg:w="8"/><text x="53.0918%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.46%)</title><rect x="52.9954%" y="645" width="0.4608%" height="15" fill="rgb(214,140,12)" fg:x="690" fg:w="6"/><text x="53.2454%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.46%)</title><rect x="52.9954%" y="629" width="0.4608%" height="15" fill="rgb(210,20,43)" fg:x="690" fg:w="6"/><text x="53.2454%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="53.3026%" y="613" width="0.1536%" height="15" fill="rgb(243,1,40)" fg:x="694" fg:w="2"/><text x="53.5526%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="53.4562%" y="725" width="0.0768%" height="15" fill="rgb(224,102,26)" fg:x="696" fg:w="1"/><text x="53.7062%" y="735.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="53.4562%" y="709" width="0.0768%" height="15" fill="rgb(221,179,1)" fg:x="696" fg:w="1"/><text x="53.7062%" y="719.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="53.4562%" y="693" width="0.0768%" height="15" fill="rgb(216,209,47)" fg:x="696" fg:w="1"/><text x="53.7062%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.4562%" y="677" width="0.0768%" height="15" fill="rgb(251,135,9)" fg:x="696" fg:w="1"/><text x="53.7062%" y="687.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (39 samples, 3.00%)</title><rect x="50.6144%" y="741" width="2.9954%" height="15" fill="rgb(242,9,36)" fg:x="659" fg:w="39"/><text x="50.8644%" y="751.50">&lt;en..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="53.5330%" y="725" width="0.0768%" height="15" fill="rgb(249,60,37)" fg:x="697" fg:w="1"/><text x="53.7830%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6866%" y="661" width="0.0768%" height="15" fill="rgb(230,66,45)" fg:x="699" fg:w="1"/><text x="53.9366%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="54.1475%" y="565" width="0.0768%" height="15" fill="rgb(216,1,47)" fg:x="705" fg:w="1"/><text x="54.3975%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="54.1475%" y="549" width="0.0768%" height="15" fill="rgb(235,8,23)" fg:x="705" fg:w="1"/><text x="54.3975%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.1475%" y="533" width="0.0768%" height="15" fill="rgb(225,136,11)" fg:x="705" fg:w="1"/><text x="54.3975%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="54.2243%" y="549" width="0.1536%" height="15" fill="rgb(228,63,44)" fg:x="706" fg:w="2"/><text x="54.4743%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3011%" y="533" width="0.0768%" height="15" fill="rgb(240,43,52)" fg:x="707" fg:w="1"/><text x="54.5511%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3011%" y="517" width="0.0768%" height="15" fill="rgb(217,167,36)" fg:x="707" fg:w="1"/><text x="54.5511%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3011%" y="501" width="0.0768%" height="15" fill="rgb(250,19,6)" fg:x="707" fg:w="1"/><text x="54.5511%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.3011%" y="485" width="0.0768%" height="15" fill="rgb(236,60,51)" fg:x="707" fg:w="1"/><text x="54.5511%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.3011%" y="469" width="0.0768%" height="15" fill="rgb(222,217,20)" fg:x="707" fg:w="1"/><text x="54.5511%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.3011%" y="453" width="0.0768%" height="15" fill="rgb(242,65,52)" fg:x="707" fg:w="1"/><text x="54.5511%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3011%" y="437" width="0.0768%" height="15" fill="rgb(217,5,41)" fg:x="707" fg:w="1"/><text x="54.5511%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3011%" y="421" width="0.0768%" height="15" fill="rgb(223,208,53)" fg:x="707" fg:w="1"/><text x="54.5511%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.3011%" y="405" width="0.0768%" height="15" fill="rgb(221,104,30)" fg:x="707" fg:w="1"/><text x="54.5511%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.3011%" y="389" width="0.0768%" height="15" fill="rgb(230,210,42)" fg:x="707" fg:w="1"/><text x="54.5511%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.3011%" y="373" width="0.0768%" height="15" fill="rgb(206,205,27)" fg:x="707" fg:w="1"/><text x="54.5511%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.3011%" y="357" width="0.0768%" height="15" fill="rgb(233,114,38)" fg:x="707" fg:w="1"/><text x="54.5511%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.3011%" y="341" width="0.0768%" height="15" fill="rgb(216,174,36)" fg:x="707" fg:w="1"/><text x="54.5511%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="54.3779%" y="549" width="0.1536%" height="15" fill="rgb(211,30,9)" fg:x="708" fg:w="2"/><text x="54.6279%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="54.3779%" y="533" width="0.1536%" height="15" fill="rgb(216,8,21)" fg:x="708" fg:w="2"/><text x="54.6279%" y="543.50"></text></g><g><title>realloc (2 samples, 0.15%)</title><rect x="54.3779%" y="517" width="0.1536%" height="15" fill="rgb(237,209,39)" fg:x="708" fg:w="2"/><text x="54.6279%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="54.6083%" y="533" width="0.0768%" height="15" fill="rgb(235,111,47)" fg:x="711" fg:w="1"/><text x="54.8583%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="54.6083%" y="517" width="0.0768%" height="15" fill="rgb(216,139,9)" fg:x="711" fg:w="1"/><text x="54.8583%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="54.6083%" y="501" width="0.0768%" height="15" fill="rgb(248,185,4)" fg:x="711" fg:w="1"/><text x="54.8583%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="54.6083%" y="485" width="0.0768%" height="15" fill="rgb(239,185,25)" fg:x="711" fg:w="1"/><text x="54.8583%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="54.6083%" y="469" width="0.0768%" height="15" fill="rgb(233,207,8)" fg:x="711" fg:w="1"/><text x="54.8583%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="54.6083%" y="453" width="0.0768%" height="15" fill="rgb(249,220,24)" fg:x="711" fg:w="1"/><text x="54.8583%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="54.6083%" y="437" width="0.0768%" height="15" fill="rgb(221,50,14)" fg:x="711" fg:w="1"/><text x="54.8583%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="54.6083%" y="421" width="0.0768%" height="15" fill="rgb(227,79,42)" fg:x="711" fg:w="1"/><text x="54.8583%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="54.6083%" y="405" width="0.0768%" height="15" fill="rgb(228,218,49)" fg:x="711" fg:w="1"/><text x="54.8583%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="54.6083%" y="389" width="0.0768%" height="15" fill="rgb(249,18,15)" fg:x="711" fg:w="1"/><text x="54.8583%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="54.6083%" y="373" width="0.0768%" height="15" fill="rgb(212,84,27)" fg:x="711" fg:w="1"/><text x="54.8583%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="54.6083%" y="357" width="0.0768%" height="15" fill="rgb(207,83,24)" fg:x="711" fg:w="1"/><text x="54.8583%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="54.6083%" y="341" width="0.0768%" height="15" fill="rgb(219,61,7)" fg:x="711" fg:w="1"/><text x="54.8583%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="54.6083%" y="325" width="0.0768%" height="15" fill="rgb(211,43,29)" fg:x="711" fg:w="1"/><text x="54.8583%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="54.6083%" y="309" width="0.0768%" height="15" fill="rgb(243,15,23)" fg:x="711" fg:w="1"/><text x="54.8583%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="54.6083%" y="293" width="0.0768%" height="15" fill="rgb(217,52,28)" fg:x="711" fg:w="1"/><text x="54.8583%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="54.7619%" y="501" width="0.1536%" height="15" fill="rgb(210,35,6)" fg:x="713" fg:w="2"/><text x="55.0119%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="54.7619%" y="485" width="0.1536%" height="15" fill="rgb(237,187,28)" fg:x="713" fg:w="2"/><text x="55.0119%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="54.7619%" y="469" width="0.1536%" height="15" fill="rgb(231,136,24)" fg:x="713" fg:w="2"/><text x="55.0119%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="54.7619%" y="453" width="0.1536%" height="15" fill="rgb(205,176,52)" fg:x="713" fg:w="2"/><text x="55.0119%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="54.7619%" y="437" width="0.1536%" height="15" fill="rgb(218,65,12)" fg:x="713" fg:w="2"/><text x="55.0119%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="54.7619%" y="421" width="0.1536%" height="15" fill="rgb(234,101,21)" fg:x="713" fg:w="2"/><text x="55.0119%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="54.7619%" y="405" width="0.1536%" height="15" fill="rgb(206,13,20)" fg:x="713" fg:w="2"/><text x="55.0119%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="54.7619%" y="389" width="0.1536%" height="15" fill="rgb(236,89,44)" fg:x="713" fg:w="2"/><text x="55.0119%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="54.7619%" y="373" width="0.1536%" height="15" fill="rgb(225,52,17)" fg:x="713" fg:w="2"/><text x="55.0119%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="54.7619%" y="357" width="0.1536%" height="15" fill="rgb(214,27,25)" fg:x="713" fg:w="2"/><text x="55.0119%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="54.7619%" y="341" width="0.1536%" height="15" fill="rgb(240,141,35)" fg:x="713" fg:w="2"/><text x="55.0119%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="54.7619%" y="325" width="0.1536%" height="15" fill="rgb(216,126,3)" fg:x="713" fg:w="2"/><text x="55.0119%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="54.7619%" y="309" width="0.1536%" height="15" fill="rgb(249,196,23)" fg:x="713" fg:w="2"/><text x="55.0119%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="54.7619%" y="293" width="0.1536%" height="15" fill="rgb(215,185,43)" fg:x="713" fg:w="2"/><text x="55.0119%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="54.7619%" y="277" width="0.1536%" height="15" fill="rgb(208,194,36)" fg:x="713" fg:w="2"/><text x="55.0119%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="54.7619%" y="261" width="0.1536%" height="15" fill="rgb(245,182,12)" fg:x="713" fg:w="2"/><text x="55.0119%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9923%" y="373" width="0.0768%" height="15" fill="rgb(244,222,52)" fg:x="716" fg:w="1"/><text x="55.2423%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.0691%" y="309" width="0.0768%" height="15" fill="rgb(236,222,51)" fg:x="717" fg:w="1"/><text x="55.3191%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.0691%" y="293" width="0.0768%" height="15" fill="rgb(254,71,22)" fg:x="717" fg:w="1"/><text x="55.3191%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.0691%" y="277" width="0.0768%" height="15" fill="rgb(250,104,15)" fg:x="717" fg:w="1"/><text x="55.3191%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.1459%" y="213" width="0.0768%" height="15" fill="rgb(229,223,46)" fg:x="718" fg:w="1"/><text x="55.3959%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.1459%" y="197" width="0.0768%" height="15" fill="rgb(209,129,18)" fg:x="718" fg:w="1"/><text x="55.3959%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.2227%" y="213" width="0.0768%" height="15" fill="rgb(224,160,1)" fg:x="719" fg:w="1"/><text x="55.4727%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2227%" y="197" width="0.0768%" height="15" fill="rgb(237,112,21)" fg:x="719" fg:w="1"/><text x="55.4727%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.2995%" y="181" width="0.0768%" height="15" fill="rgb(215,198,53)" fg:x="720" fg:w="1"/><text x="55.5495%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.38%)</title><rect x="55.0691%" y="357" width="0.3840%" height="15" fill="rgb(218,227,35)" fg:x="717" fg:w="5"/><text x="55.3191%" y="367.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.38%)</title><rect x="55.0691%" y="341" width="0.3840%" height="15" fill="rgb(232,121,22)" fg:x="717" fg:w="5"/><text x="55.3191%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.38%)</title><rect x="55.0691%" y="325" width="0.3840%" height="15" fill="rgb(235,52,54)" fg:x="717" fg:w="5"/><text x="55.3191%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="55.1459%" y="309" width="0.3072%" height="15" fill="rgb(219,21,44)" fg:x="718" fg:w="4"/><text x="55.3959%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="55.1459%" y="293" width="0.3072%" height="15" fill="rgb(221,51,43)" fg:x="718" fg:w="4"/><text x="55.3959%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="55.1459%" y="277" width="0.3072%" height="15" fill="rgb(225,77,42)" fg:x="718" fg:w="4"/><text x="55.3959%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="55.1459%" y="261" width="0.3072%" height="15" fill="rgb(214,117,53)" fg:x="718" fg:w="4"/><text x="55.3959%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.31%)</title><rect x="55.1459%" y="245" width="0.3072%" height="15" fill="rgb(218,227,27)" fg:x="718" fg:w="4"/><text x="55.3959%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="55.1459%" y="229" width="0.3072%" height="15" fill="rgb(223,214,36)" fg:x="718" fg:w="4"/><text x="55.3959%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="55.2995%" y="213" width="0.1536%" height="15" fill="rgb(235,21,7)" fg:x="720" fg:w="2"/><text x="55.5495%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="55.2995%" y="197" width="0.1536%" height="15" fill="rgb(244,216,4)" fg:x="720" fg:w="2"/><text x="55.5495%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.3763%" y="181" width="0.0768%" height="15" fill="rgb(249,197,24)" fg:x="721" fg:w="1"/><text x="55.6263%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.3763%" y="165" width="0.0768%" height="15" fill="rgb(222,169,49)" fg:x="721" fg:w="1"/><text x="55.6263%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.3763%" y="149" width="0.0768%" height="15" fill="rgb(207,137,33)" fg:x="721" fg:w="1"/><text x="55.6263%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.4531%" y="341" width="0.0768%" height="15" fill="rgb(219,180,40)" fg:x="722" fg:w="1"/><text x="55.7031%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (8 samples, 0.61%)</title><rect x="54.9923%" y="389" width="0.6144%" height="15" fill="rgb(250,163,42)" fg:x="716" fg:w="8"/><text x="55.2423%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.54%)</title><rect x="55.0691%" y="373" width="0.5376%" height="15" fill="rgb(239,163,0)" fg:x="717" fg:w="7"/><text x="55.3191%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="55.4531%" y="357" width="0.1536%" height="15" fill="rgb(252,38,28)" fg:x="722" fg:w="2"/><text x="55.7031%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="55.5300%" y="341" width="0.0768%" height="15" fill="rgb(254,203,26)" fg:x="723" fg:w="1"/><text x="55.7800%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.5300%" y="325" width="0.0768%" height="15" fill="rgb(209,129,32)" fg:x="723" fg:w="1"/><text x="55.7800%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="55.6068%" y="325" width="0.1536%" height="15" fill="rgb(207,177,52)" fg:x="724" fg:w="2"/><text x="55.8568%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.15%)</title><rect x="55.6068%" y="309" width="0.1536%" height="15" fill="rgb(230,209,36)" fg:x="724" fg:w="2"/><text x="55.8568%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7604%" y="325" width="0.0768%" height="15" fill="rgb(238,131,0)" fg:x="726" fg:w="1"/><text x="56.0104%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7604%" y="309" width="0.0768%" height="15" fill="rgb(218,61,31)" fg:x="726" fg:w="1"/><text x="56.0104%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="55.8372%" y="309" width="0.0768%" height="15" fill="rgb(232,6,53)" fg:x="727" fg:w="1"/><text x="56.0872%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.9140%" y="293" width="0.0768%" height="15" fill="rgb(254,100,32)" fg:x="728" fg:w="1"/><text x="56.1640%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.9140%" y="277" width="0.0768%" height="15" fill="rgb(229,194,49)" fg:x="728" fg:w="1"/><text x="56.1640%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.9140%" y="261" width="0.0768%" height="15" fill="rgb(206,208,39)" fg:x="728" fg:w="1"/><text x="56.1640%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="55.9908%" y="245" width="0.1536%" height="15" fill="rgb(246,226,14)" fg:x="729" fg:w="2"/><text x="56.2408%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="55.9908%" y="229" width="0.1536%" height="15" fill="rgb(226,48,32)" fg:x="729" fg:w="2"/><text x="56.2408%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.0676%" y="213" width="0.0768%" height="15" fill="rgb(252,43,54)" fg:x="730" fg:w="1"/><text x="56.3176%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.0676%" y="197" width="0.0768%" height="15" fill="rgb(207,124,0)" fg:x="730" fg:w="1"/><text x="56.3176%" y="207.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.69%)</title><rect x="55.6068%" y="373" width="0.6912%" height="15" fill="rgb(248,188,30)" fg:x="724" fg:w="9"/><text x="55.8568%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.69%)</title><rect x="55.6068%" y="357" width="0.6912%" height="15" fill="rgb(232,14,43)" fg:x="724" fg:w="9"/><text x="55.8568%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.69%)</title><rect x="55.6068%" y="341" width="0.6912%" height="15" fill="rgb(218,52,29)" fg:x="724" fg:w="9"/><text x="55.8568%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.46%)</title><rect x="55.8372%" y="325" width="0.4608%" height="15" fill="rgb(218,176,50)" fg:x="727" fg:w="6"/><text x="56.0872%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.38%)</title><rect x="55.9140%" y="309" width="0.3840%" height="15" fill="rgb(213,112,0)" fg:x="728" fg:w="5"/><text x="56.1640%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="55.9908%" y="293" width="0.3072%" height="15" fill="rgb(244,216,8)" fg:x="729" fg:w="4"/><text x="56.2408%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="55.9908%" y="277" width="0.3072%" height="15" fill="rgb(224,148,53)" fg:x="729" fg:w="4"/><text x="56.2408%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="55.9908%" y="261" width="0.3072%" height="15" fill="rgb(241,133,40)" fg:x="729" fg:w="4"/><text x="56.2408%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="56.1444%" y="245" width="0.1536%" height="15" fill="rgb(232,17,44)" fg:x="731" fg:w="2"/><text x="56.3944%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="56.1444%" y="229" width="0.1536%" height="15" fill="rgb(213,32,25)" fg:x="731" fg:w="2"/><text x="56.3944%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.2212%" y="213" width="0.0768%" height="15" fill="rgb(249,115,27)" fg:x="732" fg:w="1"/><text x="56.4712%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.2212%" y="197" width="0.0768%" height="15" fill="rgb(241,50,1)" fg:x="732" fg:w="1"/><text x="56.4712%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.4516%" y="309" width="0.0768%" height="15" fill="rgb(244,175,40)" fg:x="735" fg:w="1"/><text x="56.7016%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.4516%" y="293" width="0.0768%" height="15" fill="rgb(230,94,34)" fg:x="735" fg:w="1"/><text x="56.7016%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.4516%" y="277" width="0.0768%" height="15" fill="rgb(223,185,29)" fg:x="735" fg:w="1"/><text x="56.7016%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.5284%" y="261" width="0.0768%" height="15" fill="rgb(225,193,15)" fg:x="736" fg:w="1"/><text x="56.7784%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.5284%" y="245" width="0.0768%" height="15" fill="rgb(252,121,38)" fg:x="736" fg:w="1"/><text x="56.7784%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.5284%" y="229" width="0.0768%" height="15" fill="rgb(232,44,12)" fg:x="736" fg:w="1"/><text x="56.7784%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.5284%" y="213" width="0.0768%" height="15" fill="rgb(226,45,54)" fg:x="736" fg:w="1"/><text x="56.7784%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="56.5284%" y="197" width="0.0768%" height="15" fill="rgb(209,67,17)" fg:x="736" fg:w="1"/><text x="56.7784%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.5284%" y="181" width="0.0768%" height="15" fill="rgb(219,108,52)" fg:x="736" fg:w="1"/><text x="56.7784%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.5284%" y="165" width="0.0768%" height="15" fill="rgb(216,118,19)" fg:x="736" fg:w="1"/><text x="56.7784%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="56.5284%" y="149" width="0.0768%" height="15" fill="rgb(228,120,40)" fg:x="736" fg:w="1"/><text x="56.7784%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="56.5284%" y="133" width="0.0768%" height="15" fill="rgb(221,218,34)" fg:x="736" fg:w="1"/><text x="56.7784%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="56.5284%" y="293" width="0.1536%" height="15" fill="rgb(235,89,14)" fg:x="736" fg:w="2"/><text x="56.7784%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="56.5284%" y="277" width="0.1536%" height="15" fill="rgb(248,89,7)" fg:x="736" fg:w="2"/><text x="56.7784%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="56.6052%" y="261" width="0.0768%" height="15" fill="rgb(212,114,34)" fg:x="737" fg:w="1"/><text x="56.8552%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.6052%" y="245" width="0.0768%" height="15" fill="rgb(246,88,32)" fg:x="737" fg:w="1"/><text x="56.8552%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.6052%" y="229" width="0.0768%" height="15" fill="rgb(237,135,0)" fg:x="737" fg:w="1"/><text x="56.8552%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.6052%" y="213" width="0.0768%" height="15" fill="rgb(220,201,54)" fg:x="737" fg:w="1"/><text x="56.8552%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="56.6052%" y="197" width="0.0768%" height="15" fill="rgb(210,142,36)" fg:x="737" fg:w="1"/><text x="56.8552%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="56.6052%" y="181" width="0.0768%" height="15" fill="rgb(247,189,26)" fg:x="737" fg:w="1"/><text x="56.8552%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6052%" y="165" width="0.0768%" height="15" fill="rgb(223,89,24)" fg:x="737" fg:w="1"/><text x="56.8552%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.6820%" y="245" width="0.0768%" height="15" fill="rgb(205,90,19)" fg:x="738" fg:w="1"/><text x="56.9320%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="56.6820%" y="293" width="0.1536%" height="15" fill="rgb(234,57,40)" fg:x="738" fg:w="2"/><text x="56.9320%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="56.6820%" y="277" width="0.1536%" height="15" fill="rgb(213,109,10)" fg:x="738" fg:w="2"/><text x="56.9320%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="56.6820%" y="261" width="0.1536%" height="15" fill="rgb(214,189,23)" fg:x="738" fg:w="2"/><text x="56.9320%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.7588%" y="245" width="0.0768%" height="15" fill="rgb(234,200,10)" fg:x="739" fg:w="1"/><text x="57.0088%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.7588%" y="229" width="0.0768%" height="15" fill="rgb(221,148,16)" fg:x="739" fg:w="1"/><text x="57.0088%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.7588%" y="213" width="0.0768%" height="15" fill="rgb(230,115,10)" fg:x="739" fg:w="1"/><text x="57.0088%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.8356%" y="117" width="0.0768%" height="15" fill="rgb(220,106,42)" fg:x="740" fg:w="1"/><text x="57.0856%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (19 samples, 1.46%)</title><rect x="55.6068%" y="389" width="1.4593%" height="15" fill="rgb(225,105,39)" fg:x="724" fg:w="19"/><text x="55.8568%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.77%)</title><rect x="56.2980%" y="373" width="0.7680%" height="15" fill="rgb(211,161,38)" fg:x="733" fg:w="10"/><text x="56.5480%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.77%)</title><rect x="56.2980%" y="357" width="0.7680%" height="15" fill="rgb(213,23,19)" fg:x="733" fg:w="10"/><text x="56.5480%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.61%)</title><rect x="56.4516%" y="341" width="0.6144%" height="15" fill="rgb(240,2,33)" fg:x="735" fg:w="8"/><text x="56.7016%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.61%)</title><rect x="56.4516%" y="325" width="0.6144%" height="15" fill="rgb(221,29,45)" fg:x="735" fg:w="8"/><text x="56.7016%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.54%)</title><rect x="56.5284%" y="309" width="0.5376%" height="15" fill="rgb(242,10,19)" fg:x="736" fg:w="7"/><text x="56.7784%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="56.8356%" y="293" width="0.2304%" height="15" fill="rgb(250,84,37)" fg:x="740" fg:w="3"/><text x="57.0856%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="56.8356%" y="277" width="0.2304%" height="15" fill="rgb(214,136,7)" fg:x="740" fg:w="3"/><text x="57.0856%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.23%)</title><rect x="56.8356%" y="261" width="0.2304%" height="15" fill="rgb(231,189,12)" fg:x="740" fg:w="3"/><text x="57.0856%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="56.8356%" y="245" width="0.2304%" height="15" fill="rgb(244,40,16)" fg:x="740" fg:w="3"/><text x="57.0856%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="56.8356%" y="229" width="0.2304%" height="15" fill="rgb(217,29,15)" fg:x="740" fg:w="3"/><text x="57.0856%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.23%)</title><rect x="56.8356%" y="213" width="0.2304%" height="15" fill="rgb(235,172,33)" fg:x="740" fg:w="3"/><text x="57.0856%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="56.8356%" y="197" width="0.2304%" height="15" fill="rgb(206,148,28)" fg:x="740" fg:w="3"/><text x="57.0856%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="56.8356%" y="181" width="0.2304%" height="15" fill="rgb(251,167,37)" fg:x="740" fg:w="3"/><text x="57.0856%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.23%)</title><rect x="56.8356%" y="165" width="0.2304%" height="15" fill="rgb(229,94,52)" fg:x="740" fg:w="3"/><text x="57.0856%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="56.8356%" y="149" width="0.2304%" height="15" fill="rgb(216,132,9)" fg:x="740" fg:w="3"/><text x="57.0856%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="56.8356%" y="133" width="0.2304%" height="15" fill="rgb(208,110,29)" fg:x="740" fg:w="3"/><text x="57.0856%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.15%)</title><rect x="56.9124%" y="117" width="0.1536%" height="15" fill="rgb(241,23,8)" fg:x="741" fg:w="2"/><text x="57.1624%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="56.9124%" y="101" width="0.1536%" height="15" fill="rgb(208,26,35)" fg:x="741" fg:w="2"/><text x="57.1624%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="56.9124%" y="85" width="0.1536%" height="15" fill="rgb(242,165,34)" fg:x="741" fg:w="2"/><text x="57.1624%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="56.9124%" y="69" width="0.1536%" height="15" fill="rgb(222,222,33)" fg:x="741" fg:w="2"/><text x="57.1624%" y="79.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.9892%" y="53" width="0.0768%" height="15" fill="rgb(227,16,52)" fg:x="742" fg:w="1"/><text x="57.2392%" y="63.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.9892%" y="37" width="0.0768%" height="15" fill="rgb(213,93,12)" fg:x="742" fg:w="1"/><text x="57.2392%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.0661%" y="341" width="0.0768%" height="15" fill="rgb(238,41,5)" fg:x="743" fg:w="1"/><text x="57.3161%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.0661%" y="325" width="0.0768%" height="15" fill="rgb(211,60,15)" fg:x="743" fg:w="1"/><text x="57.3161%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.0661%" y="309" width="0.0768%" height="15" fill="rgb(209,11,34)" fg:x="743" fg:w="1"/><text x="57.3161%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.0661%" y="293" width="0.0768%" height="15" fill="rgb(254,155,53)" fg:x="743" fg:w="1"/><text x="57.3161%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.0661%" y="277" width="0.0768%" height="15" fill="rgb(236,174,8)" fg:x="743" fg:w="1"/><text x="57.3161%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="57.0661%" y="389" width="0.2304%" height="15" fill="rgb(229,31,27)" fg:x="743" fg:w="3"/><text x="57.3161%" y="399.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="57.0661%" y="373" width="0.2304%" height="15" fill="rgb(242,226,26)" fg:x="743" fg:w="3"/><text x="57.3161%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="57.0661%" y="357" width="0.2304%" height="15" fill="rgb(234,32,40)" fg:x="743" fg:w="3"/><text x="57.3161%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="57.1429%" y="341" width="0.1536%" height="15" fill="rgb(249,226,47)" fg:x="744" fg:w="2"/><text x="57.3929%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="57.1429%" y="325" width="0.1536%" height="15" fill="rgb(212,6,26)" fg:x="744" fg:w="2"/><text x="57.3929%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="57.1429%" y="309" width="0.1536%" height="15" fill="rgb(249,202,29)" fg:x="744" fg:w="2"/><text x="57.3929%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="57.1429%" y="293" width="0.1536%" height="15" fill="rgb(226,106,4)" fg:x="744" fg:w="2"/><text x="57.3929%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="57.1429%" y="277" width="0.1536%" height="15" fill="rgb(251,2,27)" fg:x="744" fg:w="2"/><text x="57.3929%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="57.1429%" y="261" width="0.1536%" height="15" fill="rgb(236,208,0)" fg:x="744" fg:w="2"/><text x="57.3929%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.2197%" y="245" width="0.0768%" height="15" fill="rgb(211,66,17)" fg:x="745" fg:w="1"/><text x="57.4697%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.2197%" y="229" width="0.0768%" height="15" fill="rgb(216,129,9)" fg:x="745" fg:w="1"/><text x="57.4697%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.2197%" y="213" width="0.0768%" height="15" fill="rgb(215,130,23)" fg:x="745" fg:w="1"/><text x="57.4697%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.2197%" y="197" width="0.0768%" height="15" fill="rgb(253,157,11)" fg:x="745" fg:w="1"/><text x="57.4697%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="57.2197%" y="181" width="0.0768%" height="15" fill="rgb(224,25,14)" fg:x="745" fg:w="1"/><text x="57.4697%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="57.2197%" y="165" width="0.0768%" height="15" fill="rgb(238,16,7)" fg:x="745" fg:w="1"/><text x="57.4697%" y="175.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="57.2197%" y="149" width="0.0768%" height="15" fill="rgb(228,74,11)" fg:x="745" fg:w="1"/><text x="57.4697%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.2965%" y="357" width="0.0768%" height="15" fill="rgb(239,221,27)" fg:x="746" fg:w="1"/><text x="57.5465%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.38%)</title><rect x="57.2965%" y="373" width="0.3840%" height="15" fill="rgb(229,166,18)" fg:x="746" fg:w="5"/><text x="57.5465%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.31%)</title><rect x="57.3733%" y="357" width="0.3072%" height="15" fill="rgb(254,94,46)" fg:x="747" fg:w="4"/><text x="57.6233%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.23%)</title><rect x="57.4501%" y="341" width="0.2304%" height="15" fill="rgb(241,79,19)" fg:x="748" fg:w="3"/><text x="57.7001%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="57.4501%" y="325" width="0.2304%" height="15" fill="rgb(228,99,51)" fg:x="748" fg:w="3"/><text x="57.7001%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (36 samples, 2.76%)</title><rect x="54.9923%" y="405" width="2.7650%" height="15" fill="rgb(211,15,6)" fg:x="716" fg:w="36"/><text x="55.2423%" y="415.50">en..</text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.46%)</title><rect x="57.2965%" y="389" width="0.4608%" height="15" fill="rgb(245,107,54)" fg:x="746" fg:w="6"/><text x="57.5465%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.6805%" y="373" width="0.0768%" height="15" fill="rgb(243,3,2)" fg:x="751" fg:w="1"/><text x="57.9305%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="57.6805%" y="357" width="0.0768%" height="15" fill="rgb(206,122,10)" fg:x="751" fg:w="1"/><text x="57.9305%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6805%" y="341" width="0.0768%" height="15" fill="rgb(224,88,4)" fg:x="751" fg:w="1"/><text x="57.9305%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (37 samples, 2.84%)</title><rect x="54.9923%" y="421" width="2.8418%" height="15" fill="rgb(230,1,41)" fg:x="716" fg:w="37"/><text x="55.2423%" y="431.50">&lt;e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="57.7573%" y="405" width="0.0768%" height="15" fill="rgb(230,1,31)" fg:x="752" fg:w="1"/><text x="58.0073%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (39 samples, 3.00%)</title><rect x="54.9155%" y="485" width="2.9954%" height="15" fill="rgb(232,67,19)" fg:x="715" fg:w="39"/><text x="55.1655%" y="495.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 2.92%)</title><rect x="54.9923%" y="469" width="2.9186%" height="15" fill="rgb(222,206,20)" fg:x="716" fg:w="38"/><text x="55.2423%" y="479.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 2.92%)</title><rect x="54.9923%" y="453" width="2.9186%" height="15" fill="rgb(217,225,19)" fg:x="716" fg:w="38"/><text x="55.2423%" y="463.50">&lt;c..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (38 samples, 2.92%)</title><rect x="54.9923%" y="437" width="2.9186%" height="15" fill="rgb(234,13,33)" fg:x="716" fg:w="38"/><text x="55.2423%" y="447.50">&lt;e..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="57.8341%" y="421" width="0.0768%" height="15" fill="rgb(254,5,1)" fg:x="753" fg:w="1"/><text x="58.0841%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8341%" y="405" width="0.0768%" height="15" fill="rgb(211,121,41)" fg:x="753" fg:w="1"/><text x="58.0841%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8341%" y="389" width="0.0768%" height="15" fill="rgb(213,199,35)" fg:x="753" fg:w="1"/><text x="58.0841%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.8341%" y="373" width="0.0768%" height="15" fill="rgb(240,118,22)" fg:x="753" fg:w="1"/><text x="58.0841%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.8341%" y="357" width="0.0768%" height="15" fill="rgb(238,184,25)" fg:x="753" fg:w="1"/><text x="58.0841%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.8341%" y="341" width="0.0768%" height="15" fill="rgb(210,165,6)" fg:x="753" fg:w="1"/><text x="58.0841%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.8341%" y="325" width="0.0768%" height="15" fill="rgb(235,149,5)" fg:x="753" fg:w="1"/><text x="58.0841%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.8341%" y="309" width="0.0768%" height="15" fill="rgb(221,63,5)" fg:x="753" fg:w="1"/><text x="58.0841%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (40 samples, 3.07%)</title><rect x="54.9155%" y="501" width="3.0722%" height="15" fill="rgb(250,44,41)" fg:x="715" fg:w="40"/><text x="55.1655%" y="511.50">&lt;pl..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.9109%" y="485" width="0.0768%" height="15" fill="rgb(235,112,47)" fg:x="754" fg:w="1"/><text x="58.1609%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1413%" y="469" width="0.0768%" height="15" fill="rgb(252,176,34)" fg:x="757" fg:w="1"/><text x="58.3913%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.2181%" y="469" width="0.0768%" height="15" fill="rgb(234,50,19)" fg:x="758" fg:w="1"/><text x="58.4681%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.2181%" y="453" width="0.0768%" height="15" fill="rgb(241,195,31)" fg:x="758" fg:w="1"/><text x="58.4681%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.2181%" y="437" width="0.0768%" height="15" fill="rgb(212,93,11)" fg:x="758" fg:w="1"/><text x="58.4681%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (54 samples, 4.15%)</title><rect x="54.2243%" y="565" width="4.1475%" height="15" fill="rgb(254,98,51)" fg:x="706" fg:w="54"/><text x="54.4743%" y="575.50">plugi..</text></g><g><title>plugins_core::tools::contained_by (50 samples, 3.84%)</title><rect x="54.5315%" y="549" width="3.8402%" height="15" fill="rgb(246,18,45)" fg:x="710" fg:w="50"/><text x="54.7815%" y="559.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (48 samples, 3.69%)</title><rect x="54.6851%" y="533" width="3.6866%" height="15" fill="rgb(215,148,23)" fg:x="712" fg:w="48"/><text x="54.9351%" y="543.50">kern..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (48 samples, 3.69%)</title><rect x="54.6851%" y="517" width="3.6866%" height="15" fill="rgb(227,22,7)" fg:x="712" fg:w="48"/><text x="54.9351%" y="527.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.38%)</title><rect x="57.9877%" y="501" width="0.3840%" height="15" fill="rgb(207,210,37)" fg:x="755" fg:w="5"/><text x="58.2377%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="57.9877%" y="485" width="0.3840%" height="15" fill="rgb(247,147,42)" fg:x="755" fg:w="5"/><text x="58.2377%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="58.2949%" y="469" width="0.0768%" height="15" fill="rgb(226,213,14)" fg:x="759" fg:w="1"/><text x="58.5449%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="58.2949%" y="453" width="0.0768%" height="15" fill="rgb(223,18,10)" fg:x="759" fg:w="1"/><text x="58.5449%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="58.2949%" y="437" width="0.0768%" height="15" fill="rgb(253,34,22)" fg:x="759" fg:w="1"/><text x="58.5449%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.2949%" y="421" width="0.0768%" height="15" fill="rgb(222,90,31)" fg:x="759" fg:w="1"/><text x="58.5449%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.2949%" y="405" width="0.0768%" height="15" fill="rgb(220,182,30)" fg:x="759" fg:w="1"/><text x="58.5449%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.4485%" y="549" width="0.0768%" height="15" fill="rgb(229,170,12)" fg:x="761" fg:w="1"/><text x="58.6985%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.6022%" y="421" width="0.0768%" height="15" fill="rgb(210,101,21)" fg:x="763" fg:w="1"/><text x="58.8522%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="58.6022%" y="437" width="0.1536%" height="15" fill="rgb(237,177,31)" fg:x="763" fg:w="2"/><text x="58.8522%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6790%" y="421" width="0.0768%" height="15" fill="rgb(215,91,34)" fg:x="764" fg:w="1"/><text x="58.9290%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6790%" y="405" width="0.0768%" height="15" fill="rgb(229,206,16)" fg:x="764" fg:w="1"/><text x="58.9290%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.6790%" y="389" width="0.0768%" height="15" fill="rgb(235,207,10)" fg:x="764" fg:w="1"/><text x="58.9290%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.6790%" y="373" width="0.0768%" height="15" fill="rgb(247,18,10)" fg:x="764" fg:w="1"/><text x="58.9290%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.6790%" y="357" width="0.0768%" height="15" fill="rgb(232,4,6)" fg:x="764" fg:w="1"/><text x="58.9290%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="58.6790%" y="341" width="0.0768%" height="15" fill="rgb(247,93,45)" fg:x="764" fg:w="1"/><text x="58.9290%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.6790%" y="325" width="0.0768%" height="15" fill="rgb(240,181,18)" fg:x="764" fg:w="1"/><text x="58.9290%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="58.6022%" y="453" width="0.2304%" height="15" fill="rgb(208,224,0)" fg:x="763" fg:w="3"/><text x="58.8522%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7558%" y="437" width="0.0768%" height="15" fill="rgb(224,207,54)" fg:x="765" fg:w="1"/><text x="59.0058%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8326%" y="373" width="0.0768%" height="15" fill="rgb(217,152,29)" fg:x="766" fg:w="1"/><text x="59.0826%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="58.8326%" y="453" width="0.1536%" height="15" fill="rgb(243,78,27)" fg:x="766" fg:w="2"/><text x="59.0826%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.15%)</title><rect x="58.8326%" y="437" width="0.1536%" height="15" fill="rgb(228,111,9)" fg:x="766" fg:w="2"/><text x="59.0826%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="58.8326%" y="421" width="0.1536%" height="15" fill="rgb(230,213,21)" fg:x="766" fg:w="2"/><text x="59.0826%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="58.8326%" y="405" width="0.1536%" height="15" fill="rgb(248,50,36)" fg:x="766" fg:w="2"/><text x="59.0826%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="58.8326%" y="389" width="0.1536%" height="15" fill="rgb(226,19,31)" fg:x="766" fg:w="2"/><text x="59.0826%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.9094%" y="373" width="0.0768%" height="15" fill="rgb(205,132,21)" fg:x="767" fg:w="1"/><text x="59.1594%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.9094%" y="357" width="0.0768%" height="15" fill="rgb(207,42,19)" fg:x="767" fg:w="1"/><text x="59.1594%" y="367.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (10 samples, 0.77%)</title><rect x="58.3717%" y="565" width="0.7680%" height="15" fill="rgb(229,69,35)" fg:x="760" fg:w="10"/><text x="58.6217%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (8 samples, 0.61%)</title><rect x="58.5253%" y="549" width="0.6144%" height="15" fill="rgb(226,96,11)" fg:x="762" fg:w="8"/><text x="58.7753%" y="559.50"></text></g><g><title>plugins_core::finding::matches_description (8 samples, 0.61%)</title><rect x="58.5253%" y="533" width="0.6144%" height="15" fill="rgb(236,133,54)" fg:x="762" fg:w="8"/><text x="58.7753%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::name (8 samples, 0.61%)</title><rect x="58.5253%" y="517" width="0.6144%" height="15" fill="rgb(247,166,21)" fg:x="762" fg:w="8"/><text x="58.7753%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.54%)</title><rect x="58.6022%" y="501" width="0.5376%" height="15" fill="rgb(220,132,12)" fg:x="763" fg:w="7"/><text x="58.8522%" y="511.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.54%)</title><rect x="58.6022%" y="485" width="0.5376%" height="15" fill="rgb(233,27,30)" fg:x="763" fg:w="7"/><text x="58.8522%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.54%)</title><rect x="58.6022%" y="469" width="0.5376%" height="15" fill="rgb(246,161,27)" fg:x="763" fg:w="7"/><text x="58.8522%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="58.9862%" y="453" width="0.1536%" height="15" fill="rgb(240,56,3)" fg:x="768" fg:w="2"/><text x="59.2362%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="58.9862%" y="437" width="0.1536%" height="15" fill="rgb(242,190,9)" fg:x="768" fg:w="2"/><text x="59.2362%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="58.9862%" y="421" width="0.1536%" height="15" fill="rgb(234,3,52)" fg:x="768" fg:w="2"/><text x="59.2362%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="58.9862%" y="405" width="0.1536%" height="15" fill="rgb(220,221,19)" fg:x="768" fg:w="2"/><text x="59.2362%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="59.0630%" y="389" width="0.0768%" height="15" fill="rgb(247,178,30)" fg:x="769" fg:w="1"/><text x="59.3130%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0630%" y="373" width="0.0768%" height="15" fill="rgb(234,212,27)" fg:x="769" fg:w="1"/><text x="59.3130%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.0630%" y="357" width="0.0768%" height="15" fill="rgb(226,199,38)" fg:x="769" fg:w="1"/><text x="59.3130%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0630%" y="341" width="0.0768%" height="15" fill="rgb(248,114,22)" fg:x="769" fg:w="1"/><text x="59.3130%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.0630%" y="325" width="0.0768%" height="15" fill="rgb(221,180,4)" fg:x="769" fg:w="1"/><text x="59.3130%" y="335.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2166%" y="549" width="0.0768%" height="15" fill="rgb(220,229,24)" fg:x="771" fg:w="1"/><text x="59.4666%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2166%" y="533" width="0.0768%" height="15" fill="rgb(226,184,27)" fg:x="771" fg:w="1"/><text x="59.4666%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2166%" y="517" width="0.0768%" height="15" fill="rgb(232,99,15)" fg:x="771" fg:w="1"/><text x="59.4666%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2166%" y="501" width="0.0768%" height="15" fill="rgb(250,167,16)" fg:x="771" fg:w="1"/><text x="59.4666%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2166%" y="485" width="0.0768%" height="15" fill="rgb(243,113,6)" fg:x="771" fg:w="1"/><text x="59.4666%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2166%" y="469" width="0.0768%" height="15" fill="rgb(244,147,52)" fg:x="771" fg:w="1"/><text x="59.4666%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2166%" y="453" width="0.0768%" height="15" fill="rgb(235,59,50)" fg:x="771" fg:w="1"/><text x="59.4666%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2166%" y="437" width="0.0768%" height="15" fill="rgb(250,188,6)" fg:x="771" fg:w="1"/><text x="59.4666%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.2166%" y="421" width="0.0768%" height="15" fill="rgb(236,173,11)" fg:x="771" fg:w="1"/><text x="59.4666%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.2166%" y="405" width="0.0768%" height="15" fill="rgb(233,64,3)" fg:x="771" fg:w="1"/><text x="59.4666%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.2166%" y="389" width="0.0768%" height="15" fill="rgb(207,92,7)" fg:x="771" fg:w="1"/><text x="59.4666%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.2166%" y="373" width="0.0768%" height="15" fill="rgb(221,30,19)" fg:x="771" fg:w="1"/><text x="59.4666%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2166%" y="357" width="0.0768%" height="15" fill="rgb(245,22,49)" fg:x="771" fg:w="1"/><text x="59.4666%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (69 samples, 5.30%)</title><rect x="54.0707%" y="597" width="5.2995%" height="15" fill="rgb(218,39,20)" fg:x="704" fg:w="69"/><text x="54.3207%" y="607.50">&lt;engin..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (69 samples, 5.30%)</title><rect x="54.0707%" y="581" width="5.2995%" height="15" fill="rgb(222,144,21)" fg:x="704" fg:w="69"/><text x="54.3207%" y="591.50">&lt;plugi..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (3 samples, 0.23%)</title><rect x="59.1398%" y="565" width="0.2304%" height="15" fill="rgb(222,78,51)" fg:x="770" fg:w="3"/><text x="59.3898%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2934%" y="549" width="0.0768%" height="15" fill="rgb(248,213,53)" fg:x="772" fg:w="1"/><text x="59.5434%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.3702%" y="597" width="0.0768%" height="15" fill="rgb(245,28,34)" fg:x="773" fg:w="1"/><text x="59.6202%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.4470%" y="549" width="0.0768%" height="15" fill="rgb(229,186,26)" fg:x="774" fg:w="1"/><text x="59.6970%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="59.5238%" y="549" width="0.0768%" height="15" fill="rgb(224,0,41)" fg:x="775" fg:w="1"/><text x="59.7738%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.5238%" y="533" width="0.0768%" height="15" fill="rgb(223,136,51)" fg:x="775" fg:w="1"/><text x="59.7738%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="59.6006%" y="469" width="0.2304%" height="15" fill="rgb(234,50,9)" fg:x="776" fg:w="3"/><text x="59.8506%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7542%" y="453" width="0.0768%" height="15" fill="rgb(242,164,20)" fg:x="778" fg:w="1"/><text x="60.0042%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="59.6006%" y="517" width="0.3072%" height="15" fill="rgb(230,169,22)" fg:x="776" fg:w="4"/><text x="59.8506%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="59.6006%" y="501" width="0.3072%" height="15" fill="rgb(228,82,26)" fg:x="776" fg:w="4"/><text x="59.8506%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="59.6006%" y="485" width="0.3072%" height="15" fill="rgb(244,220,31)" fg:x="776" fg:w="4"/><text x="59.8506%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.8310%" y="469" width="0.0768%" height="15" fill="rgb(214,35,25)" fg:x="779" fg:w="1"/><text x="60.0810%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.8310%" y="453" width="0.0768%" height="15" fill="rgb(245,162,54)" fg:x="779" fg:w="1"/><text x="60.0810%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.8310%" y="437" width="0.0768%" height="15" fill="rgb(210,43,24)" fg:x="779" fg:w="1"/><text x="60.0810%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.8310%" y="421" width="0.0768%" height="15" fill="rgb(226,145,51)" fg:x="779" fg:w="1"/><text x="60.0810%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.8310%" y="405" width="0.0768%" height="15" fill="rgb(237,52,53)" fg:x="779" fg:w="1"/><text x="60.0810%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.8310%" y="389" width="0.0768%" height="15" fill="rgb(216,226,7)" fg:x="779" fg:w="1"/><text x="60.0810%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.8310%" y="373" width="0.0768%" height="15" fill="rgb(206,223,18)" fg:x="779" fg:w="1"/><text x="60.0810%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.8310%" y="357" width="0.0768%" height="15" fill="rgb(221,1,10)" fg:x="779" fg:w="1"/><text x="60.0810%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.8310%" y="341" width="0.0768%" height="15" fill="rgb(221,151,42)" fg:x="779" fg:w="1"/><text x="60.0810%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.8310%" y="325" width="0.0768%" height="15" fill="rgb(205,183,46)" fg:x="779" fg:w="1"/><text x="60.0810%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.8310%" y="309" width="0.0768%" height="15" fill="rgb(239,229,1)" fg:x="779" fg:w="1"/><text x="60.0810%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.8310%" y="293" width="0.0768%" height="15" fill="rgb(236,192,23)" fg:x="779" fg:w="1"/><text x="60.0810%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.9078%" y="517" width="0.0768%" height="15" fill="rgb(215,146,3)" fg:x="780" fg:w="1"/><text x="60.1578%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.9078%" y="501" width="0.0768%" height="15" fill="rgb(235,52,27)" fg:x="780" fg:w="1"/><text x="60.1578%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.9078%" y="485" width="0.0768%" height="15" fill="rgb(236,45,20)" fg:x="780" fg:w="1"/><text x="60.1578%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.9078%" y="469" width="0.0768%" height="15" fill="rgb(235,86,41)" fg:x="780" fg:w="1"/><text x="60.1578%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.9078%" y="453" width="0.0768%" height="15" fill="rgb(235,27,27)" fg:x="780" fg:w="1"/><text x="60.1578%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.2151%" y="389" width="0.0768%" height="15" fill="rgb(232,4,34)" fg:x="784" fg:w="1"/><text x="60.4651%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (12 samples, 0.92%)</title><rect x="59.4470%" y="565" width="0.9217%" height="15" fill="rgb(215,22,10)" fg:x="774" fg:w="12"/><text x="59.6970%" y="575.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.77%)</title><rect x="59.6006%" y="549" width="0.7680%" height="15" fill="rgb(230,228,27)" fg:x="776" fg:w="10"/><text x="59.8506%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.77%)</title><rect x="59.6006%" y="533" width="0.7680%" height="15" fill="rgb(216,26,51)" fg:x="776" fg:w="10"/><text x="59.8506%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.38%)</title><rect x="59.9846%" y="517" width="0.3840%" height="15" fill="rgb(225,180,50)" fg:x="781" fg:w="5"/><text x="60.2346%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="60.0614%" y="501" width="0.3072%" height="15" fill="rgb(236,211,2)" fg:x="782" fg:w="4"/><text x="60.3114%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="60.0614%" y="485" width="0.3072%" height="15" fill="rgb(250,51,20)" fg:x="782" fg:w="4"/><text x="60.3114%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="60.0614%" y="469" width="0.3072%" height="15" fill="rgb(232,70,37)" fg:x="782" fg:w="4"/><text x="60.3114%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.31%)</title><rect x="60.0614%" y="453" width="0.3072%" height="15" fill="rgb(226,183,39)" fg:x="782" fg:w="4"/><text x="60.3114%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="60.0614%" y="437" width="0.3072%" height="15" fill="rgb(232,228,21)" fg:x="782" fg:w="4"/><text x="60.3114%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="60.0614%" y="421" width="0.3072%" height="15" fill="rgb(251,118,32)" fg:x="782" fg:w="4"/><text x="60.3114%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="60.1382%" y="405" width="0.2304%" height="15" fill="rgb(235,172,38)" fg:x="783" fg:w="3"/><text x="60.3882%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2919%" y="389" width="0.0768%" height="15" fill="rgb(235,63,18)" fg:x="785" fg:w="1"/><text x="60.5419%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2919%" y="373" width="0.0768%" height="15" fill="rgb(225,4,7)" fg:x="785" fg:w="1"/><text x="60.5419%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.2919%" y="357" width="0.0768%" height="15" fill="rgb(231,61,1)" fg:x="785" fg:w="1"/><text x="60.5419%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="60.3687%" y="549" width="0.0768%" height="15" fill="rgb(241,155,22)" fg:x="786" fg:w="1"/><text x="60.6187%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.5223%" y="453" width="0.0768%" height="15" fill="rgb(209,100,26)" fg:x="788" fg:w="1"/><text x="60.7723%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5223%" y="437" width="0.0768%" height="15" fill="rgb(248,181,15)" fg:x="788" fg:w="1"/><text x="60.7723%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5223%" y="421" width="0.0768%" height="15" fill="rgb(214,94,31)" fg:x="788" fg:w="1"/><text x="60.7723%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.5223%" y="405" width="0.0768%" height="15" fill="rgb(207,16,42)" fg:x="788" fg:w="1"/><text x="60.7723%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.5223%" y="389" width="0.0768%" height="15" fill="rgb(208,127,13)" fg:x="788" fg:w="1"/><text x="60.7723%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.5223%" y="373" width="0.0768%" height="15" fill="rgb(220,211,18)" fg:x="788" fg:w="1"/><text x="60.7723%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5223%" y="357" width="0.0768%" height="15" fill="rgb(221,55,38)" fg:x="788" fg:w="1"/><text x="60.7723%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5223%" y="341" width="0.0768%" height="15" fill="rgb(252,219,45)" fg:x="788" fg:w="1"/><text x="60.7723%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.5223%" y="325" width="0.0768%" height="15" fill="rgb(248,53,35)" fg:x="788" fg:w="1"/><text x="60.7723%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="60.4455%" y="517" width="0.2304%" height="15" fill="rgb(210,87,2)" fg:x="787" fg:w="3"/><text x="60.6955%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="60.4455%" y="501" width="0.2304%" height="15" fill="rgb(239,133,9)" fg:x="787" fg:w="3"/><text x="60.6955%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="60.4455%" y="485" width="0.2304%" height="15" fill="rgb(214,114,5)" fg:x="787" fg:w="3"/><text x="60.6955%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="60.4455%" y="469" width="0.2304%" height="15" fill="rgb(206,124,24)" fg:x="787" fg:w="3"/><text x="60.6955%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5991%" y="453" width="0.0768%" height="15" fill="rgb(212,57,33)" fg:x="789" fg:w="1"/><text x="60.8491%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5991%" y="437" width="0.0768%" height="15" fill="rgb(246,21,20)" fg:x="789" fg:w="1"/><text x="60.8491%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.5991%" y="421" width="0.0768%" height="15" fill="rgb(253,210,39)" fg:x="789" fg:w="1"/><text x="60.8491%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.5991%" y="405" width="0.0768%" height="15" fill="rgb(209,187,24)" fg:x="789" fg:w="1"/><text x="60.8491%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.5991%" y="389" width="0.0768%" height="15" fill="rgb(246,136,17)" fg:x="789" fg:w="1"/><text x="60.8491%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5991%" y="373" width="0.0768%" height="15" fill="rgb(211,0,30)" fg:x="789" fg:w="1"/><text x="60.8491%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5991%" y="357" width="0.0768%" height="15" fill="rgb(216,199,7)" fg:x="789" fg:w="1"/><text x="60.8491%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.5991%" y="341" width="0.0768%" height="15" fill="rgb(207,210,19)" fg:x="789" fg:w="1"/><text x="60.8491%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.5991%" y="325" width="0.0768%" height="15" fill="rgb(237,187,39)" fg:x="789" fg:w="1"/><text x="60.8491%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.5991%" y="309" width="0.0768%" height="15" fill="rgb(243,194,42)" fg:x="789" fg:w="1"/><text x="60.8491%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.5991%" y="293" width="0.0768%" height="15" fill="rgb(225,194,19)" fg:x="789" fg:w="1"/><text x="60.8491%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5991%" y="277" width="0.0768%" height="15" fill="rgb(224,192,14)" fg:x="789" fg:w="1"/><text x="60.8491%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6759%" y="517" width="0.0768%" height="15" fill="rgb(252,21,18)" fg:x="790" fg:w="1"/><text x="60.9259%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="60.6759%" y="501" width="0.0768%" height="15" fill="rgb(229,69,19)" fg:x="790" fg:w="1"/><text x="60.9259%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6759%" y="485" width="0.0768%" height="15" fill="rgb(251,31,53)" fg:x="790" fg:w="1"/><text x="60.9259%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6759%" y="469" width="0.0768%" height="15" fill="rgb(218,39,50)" fg:x="790" fg:w="1"/><text x="60.9259%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6759%" y="453" width="0.0768%" height="15" fill="rgb(231,50,17)" fg:x="790" fg:w="1"/><text x="60.9259%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.31%)</title><rect x="60.9831%" y="453" width="0.3072%" height="15" fill="rgb(223,217,31)" fg:x="794" fg:w="4"/><text x="61.2331%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="60.9831%" y="437" width="0.3072%" height="15" fill="rgb(225,91,12)" fg:x="794" fg:w="4"/><text x="61.2331%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.2135%" y="421" width="0.0768%" height="15" fill="rgb(242,58,43)" fg:x="797" fg:w="1"/><text x="61.4635%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (25 samples, 1.92%)</title><rect x="59.4470%" y="597" width="1.9201%" height="15" fill="rgb(242,32,21)" fg:x="774" fg:w="25"/><text x="59.6970%" y="607.50">k..</text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (25 samples, 1.92%)</title><rect x="59.4470%" y="581" width="1.9201%" height="15" fill="rgb(211,127,1)" fg:x="774" fg:w="25"/><text x="59.6970%" y="591.50">k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (13 samples, 1.00%)</title><rect x="60.3687%" y="565" width="0.9985%" height="15" fill="rgb(231,93,13)" fg:x="786" fg:w="13"/><text x="60.6187%" y="575.50"></text></g><g><title>kernel::model::props::load_props (12 samples, 0.92%)</title><rect x="60.4455%" y="549" width="0.9217%" height="15" fill="rgb(218,83,4)" fg:x="787" fg:w="12"/><text x="60.6955%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.92%)</title><rect x="60.4455%" y="533" width="0.9217%" height="15" fill="rgb(230,218,10)" fg:x="787" fg:w="12"/><text x="60.6955%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.61%)</title><rect x="60.7527%" y="517" width="0.6144%" height="15" fill="rgb(235,127,18)" fg:x="791" fg:w="8"/><text x="61.0027%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.61%)</title><rect x="60.7527%" y="501" width="0.6144%" height="15" fill="rgb(213,137,46)" fg:x="791" fg:w="8"/><text x="61.0027%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.46%)</title><rect x="60.9063%" y="485" width="0.4608%" height="15" fill="rgb(235,179,24)" fg:x="793" fg:w="6"/><text x="61.1563%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.46%)</title><rect x="60.9063%" y="469" width="0.4608%" height="15" fill="rgb(247,58,49)" fg:x="793" fg:w="6"/><text x="61.1563%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="61.2903%" y="453" width="0.0768%" height="15" fill="rgb(242,222,5)" fg:x="798" fg:w="1"/><text x="61.5403%" y="463.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.15%)</title><rect x="61.3671%" y="597" width="0.1536%" height="15" fill="rgb(230,16,48)" fg:x="799" fg:w="2"/><text x="61.6171%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4439%" y="581" width="0.0768%" height="15" fill="rgb(241,192,16)" fg:x="800" fg:w="1"/><text x="61.6939%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4439%" y="565" width="0.0768%" height="15" fill="rgb(209,25,37)" fg:x="800" fg:w="1"/><text x="61.6939%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4439%" y="549" width="0.0768%" height="15" fill="rgb(229,215,13)" fg:x="800" fg:w="1"/><text x="61.6939%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.4439%" y="533" width="0.0768%" height="15" fill="rgb(213,199,8)" fg:x="800" fg:w="1"/><text x="61.6939%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.4439%" y="517" width="0.0768%" height="15" fill="rgb(226,151,19)" fg:x="800" fg:w="1"/><text x="61.6939%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4439%" y="501" width="0.0768%" height="15" fill="rgb(254,183,12)" fg:x="800" fg:w="1"/><text x="61.6939%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4439%" y="485" width="0.0768%" height="15" fill="rgb(245,8,3)" fg:x="800" fg:w="1"/><text x="61.6939%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4439%" y="469" width="0.0768%" height="15" fill="rgb(229,159,35)" fg:x="800" fg:w="1"/><text x="61.6939%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.4439%" y="453" width="0.0768%" height="15" fill="rgb(209,145,1)" fg:x="800" fg:w="1"/><text x="61.6939%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.4439%" y="437" width="0.0768%" height="15" fill="rgb(228,183,16)" fg:x="800" fg:w="1"/><text x="61.6939%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.4439%" y="421" width="0.0768%" height="15" fill="rgb(222,68,0)" fg:x="800" fg:w="1"/><text x="61.6939%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.4439%" y="405" width="0.0768%" height="15" fill="rgb(209,130,50)" fg:x="800" fg:w="1"/><text x="61.6939%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4439%" y="389" width="0.0768%" height="15" fill="rgb(228,176,44)" fg:x="800" fg:w="1"/><text x="61.6939%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (2 samples, 0.15%)</title><rect x="61.5207%" y="565" width="0.1536%" height="15" fill="rgb(221,164,2)" fg:x="801" fg:w="2"/><text x="61.7707%" y="575.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (2 samples, 0.15%)</title><rect x="61.5207%" y="549" width="0.1536%" height="15" fill="rgb(249,199,49)" fg:x="801" fg:w="2"/><text x="61.7707%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.15%)</title><rect x="61.5207%" y="533" width="0.1536%" height="15" fill="rgb(228,205,53)" fg:x="801" fg:w="2"/><text x="61.7707%" y="543.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.15%)</title><rect x="61.5207%" y="517" width="0.1536%" height="15" fill="rgb(235,77,20)" fg:x="801" fg:w="2"/><text x="61.7707%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="61.5975%" y="501" width="0.0768%" height="15" fill="rgb(227,147,34)" fg:x="802" fg:w="1"/><text x="61.8475%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="61.5975%" y="485" width="0.0768%" height="15" fill="rgb(226,203,52)" fg:x="802" fg:w="1"/><text x="61.8475%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="61.5975%" y="469" width="0.0768%" height="15" fill="rgb(226,186,23)" fg:x="802" fg:w="1"/><text x="61.8475%" y="479.50"></text></g><g><title>plugins_core::library::actions::reply_done (3 samples, 0.23%)</title><rect x="61.5207%" y="597" width="0.2304%" height="15" fill="rgb(236,13,30)" fg:x="801" fg:w="3"/><text x="61.7707%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (3 samples, 0.23%)</title><rect x="61.5207%" y="581" width="0.2304%" height="15" fill="rgb(228,121,22)" fg:x="801" fg:w="3"/><text x="61.7707%" y="591.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="61.6743%" y="565" width="0.0768%" height="15" fill="rgb(248,222,26)" fg:x="803" fg:w="1"/><text x="61.9243%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7512%" y="549" width="0.0768%" height="15" fill="rgb(251,72,25)" fg:x="804" fg:w="1"/><text x="62.0012%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.8280%" y="533" width="0.0768%" height="15" fill="rgb(223,114,24)" fg:x="805" fg:w="1"/><text x="62.0780%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.8280%" y="517" width="0.0768%" height="15" fill="rgb(232,190,43)" fg:x="805" fg:w="1"/><text x="62.0780%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.9048%" y="405" width="0.0768%" height="15" fill="rgb(208,90,0)" fg:x="806" fg:w="1"/><text x="62.1548%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.9816%" y="373" width="0.0768%" height="15" fill="rgb(234,149,31)" fg:x="807" fg:w="1"/><text x="62.2316%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.9816%" y="357" width="0.0768%" height="15" fill="rgb(235,188,36)" fg:x="807" fg:w="1"/><text x="62.2316%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="61.8280%" y="549" width="0.3072%" height="15" fill="rgb(219,59,51)" fg:x="805" fg:w="4"/><text x="62.0780%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="61.9048%" y="533" width="0.2304%" height="15" fill="rgb(236,101,40)" fg:x="806" fg:w="3"/><text x="62.1548%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="61.9048%" y="517" width="0.2304%" height="15" fill="rgb(235,33,7)" fg:x="806" fg:w="3"/><text x="62.1548%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="61.9048%" y="501" width="0.2304%" height="15" fill="rgb(213,169,26)" fg:x="806" fg:w="3"/><text x="62.1548%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="61.9048%" y="485" width="0.2304%" height="15" fill="rgb(218,99,34)" fg:x="806" fg:w="3"/><text x="62.1548%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="61.9048%" y="469" width="0.2304%" height="15" fill="rgb(210,57,24)" fg:x="806" fg:w="3"/><text x="62.1548%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="61.9048%" y="453" width="0.2304%" height="15" fill="rgb(231,181,54)" fg:x="806" fg:w="3"/><text x="62.1548%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.23%)</title><rect x="61.9048%" y="437" width="0.2304%" height="15" fill="rgb(251,188,48)" fg:x="806" fg:w="3"/><text x="62.1548%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="61.9048%" y="421" width="0.2304%" height="15" fill="rgb(243,12,45)" fg:x="806" fg:w="3"/><text x="62.1548%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="61.9816%" y="405" width="0.1536%" height="15" fill="rgb(250,197,9)" fg:x="807" fg:w="2"/><text x="62.2316%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="61.9816%" y="389" width="0.1536%" height="15" fill="rgb(235,149,35)" fg:x="807" fg:w="2"/><text x="62.2316%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.0584%" y="373" width="0.0768%" height="15" fill="rgb(219,27,19)" fg:x="808" fg:w="1"/><text x="62.3084%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0584%" y="357" width="0.0768%" height="15" fill="rgb(244,78,31)" fg:x="808" fg:w="1"/><text x="62.3084%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="62.0584%" y="341" width="0.0768%" height="15" fill="rgb(241,13,4)" fg:x="808" fg:w="1"/><text x="62.3084%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="62.0584%" y="325" width="0.0768%" height="15" fill="rgb(212,194,26)" fg:x="808" fg:w="1"/><text x="62.3084%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.15%)</title><rect x="62.1352%" y="533" width="0.1536%" height="15" fill="rgb(236,80,11)" fg:x="809" fg:w="2"/><text x="62.3852%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.2888%" y="501" width="0.0768%" height="15" fill="rgb(206,1,24)" fg:x="811" fg:w="1"/><text x="62.5388%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2888%" y="485" width="0.0768%" height="15" fill="rgb(238,215,50)" fg:x="811" fg:w="1"/><text x="62.5388%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.3656%" y="437" width="0.0768%" height="15" fill="rgb(254,126,32)" fg:x="812" fg:w="1"/><text x="62.6156%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.4424%" y="405" width="0.0768%" height="15" fill="rgb(206,111,53)" fg:x="813" fg:w="1"/><text x="62.6924%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.84%)</title><rect x="61.7512%" y="581" width="0.8449%" height="15" fill="rgb(218,72,44)" fg:x="804" fg:w="11"/><text x="62.0012%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.84%)</title><rect x="61.7512%" y="565" width="0.8449%" height="15" fill="rgb(238,25,3)" fg:x="804" fg:w="11"/><text x="62.0012%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.46%)</title><rect x="62.1352%" y="549" width="0.4608%" height="15" fill="rgb(250,191,7)" fg:x="809" fg:w="6"/><text x="62.3852%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="62.2888%" y="533" width="0.3072%" height="15" fill="rgb(238,56,30)" fg:x="811" fg:w="4"/><text x="62.5388%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="62.2888%" y="517" width="0.3072%" height="15" fill="rgb(210,27,45)" fg:x="811" fg:w="4"/><text x="62.5388%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="62.3656%" y="501" width="0.2304%" height="15" fill="rgb(207,10,50)" fg:x="812" fg:w="3"/><text x="62.6156%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="62.3656%" y="485" width="0.2304%" height="15" fill="rgb(249,30,23)" fg:x="812" fg:w="3"/><text x="62.6156%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="62.3656%" y="469" width="0.2304%" height="15" fill="rgb(250,80,12)" fg:x="812" fg:w="3"/><text x="62.6156%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="62.3656%" y="453" width="0.2304%" height="15" fill="rgb(210,221,37)" fg:x="812" fg:w="3"/><text x="62.6156%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="62.4424%" y="437" width="0.1536%" height="15" fill="rgb(205,96,24)" fg:x="813" fg:w="2"/><text x="62.6924%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="62.4424%" y="421" width="0.1536%" height="15" fill="rgb(247,104,22)" fg:x="813" fg:w="2"/><text x="62.6924%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.5192%" y="405" width="0.0768%" height="15" fill="rgb(222,61,53)" fg:x="814" fg:w="1"/><text x="62.7692%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5192%" y="389" width="0.0768%" height="15" fill="rgb(241,11,53)" fg:x="814" fg:w="1"/><text x="62.7692%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5960%" y="565" width="0.0768%" height="15" fill="rgb(230,111,47)" fg:x="815" fg:w="1"/><text x="62.8460%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.7496%" y="517" width="0.0768%" height="15" fill="rgb(218,187,29)" fg:x="817" fg:w="1"/><text x="62.9996%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="62.7496%" y="549" width="0.1536%" height="15" fill="rgb(210,121,46)" fg:x="817" fg:w="2"/><text x="62.9996%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="62.7496%" y="533" width="0.1536%" height="15" fill="rgb(250,43,19)" fg:x="817" fg:w="2"/><text x="62.9996%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8264%" y="517" width="0.0768%" height="15" fill="rgb(238,61,12)" fg:x="818" fg:w="1"/><text x="63.0764%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8264%" y="501" width="0.0768%" height="15" fill="rgb(251,198,9)" fg:x="818" fg:w="1"/><text x="63.0764%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.8264%" y="485" width="0.0768%" height="15" fill="rgb(214,192,38)" fg:x="818" fg:w="1"/><text x="63.0764%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.8264%" y="469" width="0.0768%" height="15" fill="rgb(214,73,19)" fg:x="818" fg:w="1"/><text x="63.0764%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.8264%" y="453" width="0.0768%" height="15" fill="rgb(249,222,49)" fg:x="818" fg:w="1"/><text x="63.0764%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8264%" y="437" width="0.0768%" height="15" fill="rgb(231,181,54)" fg:x="818" fg:w="1"/><text x="63.0764%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8264%" y="421" width="0.0768%" height="15" fill="rgb(240,1,13)" fg:x="818" fg:w="1"/><text x="63.0764%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.8264%" y="405" width="0.0768%" height="15" fill="rgb(225,21,16)" fg:x="818" fg:w="1"/><text x="63.0764%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.8264%" y="389" width="0.0768%" height="15" fill="rgb(246,176,50)" fg:x="818" fg:w="1"/><text x="63.0764%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.8264%" y="373" width="0.0768%" height="15" fill="rgb(208,96,50)" fg:x="818" fg:w="1"/><text x="63.0764%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.8264%" y="357" width="0.0768%" height="15" fill="rgb(240,219,19)" fg:x="818" fg:w="1"/><text x="63.0764%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8264%" y="341" width="0.0768%" height="15" fill="rgb(234,73,5)" fg:x="818" fg:w="1"/><text x="63.0764%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="62.9032%" y="549" width="0.0768%" height="15" fill="rgb(225,52,53)" fg:x="819" fg:w="1"/><text x="63.1532%" y="559.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="62.9800%" y="549" width="0.0768%" height="15" fill="rgb(250,12,14)" fg:x="820" fg:w="1"/><text x="63.2300%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="62.9800%" y="533" width="0.0768%" height="15" fill="rgb(242,185,54)" fg:x="820" fg:w="1"/><text x="63.2300%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="62.9800%" y="517" width="0.0768%" height="15" fill="rgb(211,206,31)" fg:x="820" fg:w="1"/><text x="63.2300%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="62.9800%" y="501" width="0.0768%" height="15" fill="rgb(252,10,33)" fg:x="820" fg:w="1"/><text x="63.2300%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (10 samples, 0.77%)</title><rect x="62.5960%" y="581" width="0.7680%" height="15" fill="rgb(216,26,7)" fg:x="815" fg:w="10"/><text x="62.8460%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.69%)</title><rect x="62.6728%" y="565" width="0.6912%" height="15" fill="rgb(228,112,40)" fg:x="816" fg:w="9"/><text x="62.9228%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="63.0568%" y="549" width="0.3072%" height="15" fill="rgb(212,21,16)" fg:x="821" fg:w="4"/><text x="63.3068%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="63.0568%" y="533" width="0.3072%" height="15" fill="rgb(249,3,29)" fg:x="821" fg:w="4"/><text x="63.3068%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="63.2104%" y="517" width="0.1536%" height="15" fill="rgb(221,42,51)" fg:x="823" fg:w="2"/><text x="63.4604%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2873%" y="501" width="0.0768%" height="15" fill="rgb(225,90,21)" fg:x="824" fg:w="1"/><text x="63.5373%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.5945%" y="533" width="0.0768%" height="15" fill="rgb(242,131,5)" fg:x="828" fg:w="1"/><text x="63.8445%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.5945%" y="517" width="0.0768%" height="15" fill="rgb(220,187,28)" fg:x="828" fg:w="1"/><text x="63.8445%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.5945%" y="501" width="0.0768%" height="15" fill="rgb(210,75,48)" fg:x="828" fg:w="1"/><text x="63.8445%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.5945%" y="485" width="0.0768%" height="15" fill="rgb(211,91,40)" fg:x="828" fg:w="1"/><text x="63.8445%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.5945%" y="469" width="0.0768%" height="15" fill="rgb(205,43,18)" fg:x="828" fg:w="1"/><text x="63.8445%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.5945%" y="453" width="0.0768%" height="15" fill="rgb(207,123,11)" fg:x="828" fg:w="1"/><text x="63.8445%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.5945%" y="437" width="0.0768%" height="15" fill="rgb(235,89,39)" fg:x="828" fg:w="1"/><text x="63.8445%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.5945%" y="421" width="0.0768%" height="15" fill="rgb(245,217,27)" fg:x="828" fg:w="1"/><text x="63.8445%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.5945%" y="405" width="0.0768%" height="15" fill="rgb(216,55,17)" fg:x="828" fg:w="1"/><text x="63.8445%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.5945%" y="389" width="0.0768%" height="15" fill="rgb(252,116,44)" fg:x="828" fg:w="1"/><text x="63.8445%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.5945%" y="373" width="0.0768%" height="15" fill="rgb(229,153,4)" fg:x="828" fg:w="1"/><text x="63.8445%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.5945%" y="357" width="0.0768%" height="15" fill="rgb(222,24,35)" fg:x="828" fg:w="1"/><text x="63.8445%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5945%" y="341" width="0.0768%" height="15" fill="rgb(214,26,20)" fg:x="828" fg:w="1"/><text x="63.8445%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.61%)</title><rect x="63.3641%" y="549" width="0.6144%" height="15" fill="rgb(215,14,45)" fg:x="825" fg:w="8"/><text x="63.6141%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="63.6713%" y="533" width="0.3072%" height="15" fill="rgb(217,212,50)" fg:x="829" fg:w="4"/><text x="63.9213%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="63.7481%" y="517" width="0.2304%" height="15" fill="rgb(230,172,52)" fg:x="830" fg:w="3"/><text x="63.9981%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9017%" y="501" width="0.0768%" height="15" fill="rgb(210,48,36)" fg:x="832" fg:w="1"/><text x="64.1517%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9785%" y="469" width="0.0768%" height="15" fill="rgb(216,213,32)" fg:x="833" fg:w="1"/><text x="64.2285%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.15%)</title><rect x="63.9785%" y="501" width="0.1536%" height="15" fill="rgb(237,202,41)" fg:x="833" fg:w="2"/><text x="64.2285%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.15%)</title><rect x="63.9785%" y="485" width="0.1536%" height="15" fill="rgb(209,14,29)" fg:x="833" fg:w="2"/><text x="64.2285%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.0553%" y="469" width="0.0768%" height="15" fill="rgb(219,29,3)" fg:x="834" fg:w="1"/><text x="64.3053%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.23%)</title><rect x="63.9785%" y="549" width="0.2304%" height="15" fill="rgb(229,13,49)" fg:x="833" fg:w="3"/><text x="64.2285%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="63.9785%" y="533" width="0.2304%" height="15" fill="rgb(210,206,2)" fg:x="833" fg:w="3"/><text x="64.2285%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="63.9785%" y="517" width="0.2304%" height="15" fill="rgb(216,154,46)" fg:x="833" fg:w="3"/><text x="64.2285%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.1321%" y="501" width="0.0768%" height="15" fill="rgb(211,170,52)" fg:x="835" fg:w="1"/><text x="64.3821%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="64.2857%" y="517" width="0.1536%" height="15" fill="rgb(233,109,47)" fg:x="837" fg:w="2"/><text x="64.5357%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="64.2857%" y="501" width="0.1536%" height="15" fill="rgb(208,212,30)" fg:x="837" fg:w="2"/><text x="64.5357%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.31%)</title><rect x="64.2089%" y="549" width="0.3072%" height="15" fill="rgb(215,190,19)" fg:x="836" fg:w="4"/><text x="64.4589%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.31%)</title><rect x="64.2089%" y="533" width="0.3072%" height="15" fill="rgb(207,164,53)" fg:x="836" fg:w="4"/><text x="64.4589%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="64.4393%" y="517" width="0.0768%" height="15" fill="rgb(213,87,49)" fg:x="839" fg:w="1"/><text x="64.6893%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="64.4393%" y="501" width="0.0768%" height="15" fill="rgb(241,216,24)" fg:x="839" fg:w="1"/><text x="64.6893%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (16 samples, 1.23%)</title><rect x="63.3641%" y="581" width="1.2289%" height="15" fill="rgb(241,123,45)" fg:x="825" fg:w="16"/><text x="63.6141%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (16 samples, 1.23%)</title><rect x="63.3641%" y="565" width="1.2289%" height="15" fill="rgb(220,36,15)" fg:x="825" fg:w="16"/><text x="63.6141%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="64.5161%" y="549" width="0.0768%" height="15" fill="rgb(215,202,9)" fg:x="840" fg:w="1"/><text x="64.7661%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="64.5161%" y="533" width="0.0768%" height="15" fill="rgb(252,71,26)" fg:x="840" fg:w="1"/><text x="64.7661%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="64.5161%" y="517" width="0.0768%" height="15" fill="rgb(243,195,19)" fg:x="840" fg:w="1"/><text x="64.7661%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="64.5161%" y="501" width="0.0768%" height="15" fill="rgb(207,167,27)" fg:x="840" fg:w="1"/><text x="64.7661%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5161%" y="485" width="0.0768%" height="15" fill="rgb(250,146,54)" fg:x="840" fg:w="1"/><text x="64.7661%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="64.6697%" y="565" width="0.0768%" height="15" fill="rgb(245,79,9)" fg:x="842" fg:w="1"/><text x="64.9197%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="64.6697%" y="549" width="0.0768%" height="15" fill="rgb(234,197,22)" fg:x="842" fg:w="1"/><text x="64.9197%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="64.6697%" y="533" width="0.0768%" height="15" fill="rgb(221,52,48)" fg:x="842" fg:w="1"/><text x="64.9197%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="64.6697%" y="517" width="0.0768%" height="15" fill="rgb(235,80,0)" fg:x="842" fg:w="1"/><text x="64.9197%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="64.6697%" y="501" width="0.0768%" height="15" fill="rgb(221,117,53)" fg:x="842" fg:w="1"/><text x="64.9197%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8233%" y="389" width="0.0768%" height="15" fill="rgb(239,48,47)" fg:x="844" fg:w="1"/><text x="65.0733%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.8233%" y="373" width="0.0768%" height="15" fill="rgb(227,191,52)" fg:x="844" fg:w="1"/><text x="65.0733%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.9002%" y="357" width="0.0768%" height="15" fill="rgb(241,118,1)" fg:x="845" fg:w="1"/><text x="65.1502%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.38%)</title><rect x="64.7465%" y="533" width="0.3840%" height="15" fill="rgb(240,85,3)" fg:x="843" fg:w="5"/><text x="64.9965%" y="543.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.38%)</title><rect x="64.7465%" y="517" width="0.3840%" height="15" fill="rgb(237,68,37)" fg:x="843" fg:w="5"/><text x="64.9965%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.38%)</title><rect x="64.7465%" y="501" width="0.3840%" height="15" fill="rgb(212,9,20)" fg:x="843" fg:w="5"/><text x="64.9965%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.38%)</title><rect x="64.7465%" y="485" width="0.3840%" height="15" fill="rgb(218,84,17)" fg:x="843" fg:w="5"/><text x="64.9965%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="64.7465%" y="469" width="0.3840%" height="15" fill="rgb(235,147,20)" fg:x="843" fg:w="5"/><text x="64.9965%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.38%)</title><rect x="64.7465%" y="453" width="0.3840%" height="15" fill="rgb(208,224,1)" fg:x="843" fg:w="5"/><text x="64.9965%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="64.7465%" y="437" width="0.3840%" height="15" fill="rgb(232,97,50)" fg:x="843" fg:w="5"/><text x="64.9965%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.31%)</title><rect x="64.8233%" y="421" width="0.3072%" height="15" fill="rgb(238,15,45)" fg:x="844" fg:w="4"/><text x="65.0733%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="64.8233%" y="405" width="0.3072%" height="15" fill="rgb(231,46,18)" fg:x="844" fg:w="4"/><text x="65.0733%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="64.9002%" y="389" width="0.2304%" height="15" fill="rgb(254,169,10)" fg:x="845" fg:w="3"/><text x="65.1502%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="64.9002%" y="373" width="0.2304%" height="15" fill="rgb(243,169,30)" fg:x="845" fg:w="3"/><text x="65.1502%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="64.9770%" y="357" width="0.1536%" height="15" fill="rgb(236,90,49)" fg:x="846" fg:w="2"/><text x="65.2270%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="64.9770%" y="341" width="0.1536%" height="15" fill="rgb(218,80,15)" fg:x="846" fg:w="2"/><text x="65.2270%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="65.0538%" y="325" width="0.0768%" height="15" fill="rgb(222,115,37)" fg:x="847" fg:w="1"/><text x="65.3038%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="65.0538%" y="309" width="0.0768%" height="15" fill="rgb(227,0,6)" fg:x="847" fg:w="1"/><text x="65.3038%" y="319.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="65.0538%" y="293" width="0.0768%" height="15" fill="rgb(217,189,13)" fg:x="847" fg:w="1"/><text x="65.3038%" y="303.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="65.1306%" y="517" width="0.0768%" height="15" fill="rgb(220,74,19)" fg:x="848" fg:w="1"/><text x="65.3806%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.1306%" y="501" width="0.0768%" height="15" fill="rgb(224,81,18)" fg:x="848" fg:w="1"/><text x="65.3806%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.2074%" y="485" width="0.0768%" height="15" fill="rgb(245,178,48)" fg:x="849" fg:w="1"/><text x="65.4574%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.2074%" y="469" width="0.0768%" height="15" fill="rgb(207,78,24)" fg:x="849" fg:w="1"/><text x="65.4574%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.2074%" y="453" width="0.0768%" height="15" fill="rgb(223,222,30)" fg:x="849" fg:w="1"/><text x="65.4574%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.2074%" y="437" width="0.0768%" height="15" fill="rgb(234,101,12)" fg:x="849" fg:w="1"/><text x="65.4574%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="65.2074%" y="421" width="0.0768%" height="15" fill="rgb(209,80,46)" fg:x="849" fg:w="1"/><text x="65.4574%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="65.2074%" y="405" width="0.0768%" height="15" fill="rgb(228,79,14)" fg:x="849" fg:w="1"/><text x="65.4574%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.69%)</title><rect x="64.7465%" y="565" width="0.6912%" height="15" fill="rgb(220,219,34)" fg:x="843" fg:w="9"/><text x="64.9965%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.69%)</title><rect x="64.7465%" y="549" width="0.6912%" height="15" fill="rgb(207,80,21)" fg:x="843" fg:w="9"/><text x="64.9965%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="65.1306%" y="533" width="0.3072%" height="15" fill="rgb(210,154,44)" fg:x="848" fg:w="4"/><text x="65.3806%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="65.2074%" y="517" width="0.2304%" height="15" fill="rgb(246,44,39)" fg:x="849" fg:w="3"/><text x="65.4574%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="65.2074%" y="501" width="0.2304%" height="15" fill="rgb(252,175,13)" fg:x="849" fg:w="3"/><text x="65.4574%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="65.2842%" y="485" width="0.1536%" height="15" fill="rgb(211,50,39)" fg:x="850" fg:w="2"/><text x="65.5342%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="65.2842%" y="469" width="0.1536%" height="15" fill="rgb(231,204,27)" fg:x="850" fg:w="2"/><text x="65.5342%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.3610%" y="453" width="0.0768%" height="15" fill="rgb(253,26,34)" fg:x="851" fg:w="1"/><text x="65.6110%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3610%" y="437" width="0.0768%" height="15" fill="rgb(207,139,38)" fg:x="851" fg:w="1"/><text x="65.6110%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.3610%" y="421" width="0.0768%" height="15" fill="rgb(248,54,27)" fg:x="851" fg:w="1"/><text x="65.6110%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3610%" y="405" width="0.0768%" height="15" fill="rgb(234,25,33)" fg:x="851" fg:w="1"/><text x="65.6110%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.3610%" y="389" width="0.0768%" height="15" fill="rgb(249,107,47)" fg:x="851" fg:w="1"/><text x="65.6110%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (12 samples, 0.92%)</title><rect x="64.5929%" y="581" width="0.9217%" height="15" fill="rgb(230,190,31)" fg:x="841" fg:w="12"/><text x="64.8429%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="65.4378%" y="565" width="0.0768%" height="15" fill="rgb(238,173,45)" fg:x="852" fg:w="1"/><text x="65.6878%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.4378%" y="549" width="0.0768%" height="15" fill="rgb(222,16,50)" fg:x="852" fg:w="1"/><text x="65.6878%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="65.4378%" y="533" width="0.0768%" height="15" fill="rgb(251,204,47)" fg:x="852" fg:w="1"/><text x="65.6878%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="65.4378%" y="517" width="0.0768%" height="15" fill="rgb(225,12,3)" fg:x="852" fg:w="1"/><text x="65.6878%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (155 samples, 11.90%)</title><rect x="53.7634%" y="613" width="11.9048%" height="15" fill="rgb(214,208,22)" fg:x="700" fg:w="155"/><text x="54.0134%" y="623.50">&lt;plugins_core::car..</text></g><g><title>plugins_core::tools::move_between (51 samples, 3.92%)</title><rect x="61.7512%" y="597" width="3.9171%" height="15" fill="rgb(240,57,32)" fg:x="804" fg:w="51"/><text x="62.0012%" y="607.50">plug..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.15%)</title><rect x="65.5146%" y="581" width="0.1536%" height="15" fill="rgb(243,113,48)" fg:x="853" fg:w="2"/><text x="65.7646%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.15%)</title><rect x="65.5146%" y="565" width="0.1536%" height="15" fill="rgb(225,135,30)" fg:x="853" fg:w="2"/><text x="65.7646%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="65.5146%" y="549" width="0.1536%" height="15" fill="rgb(222,3,53)" fg:x="853" fg:w="2"/><text x="65.7646%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.15%)</title><rect x="65.5146%" y="533" width="0.1536%" height="15" fill="rgb(243,142,2)" fg:x="853" fg:w="2"/><text x="65.7646%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.15%)</title><rect x="65.5146%" y="517" width="0.1536%" height="15" fill="rgb(233,67,14)" fg:x="853" fg:w="2"/><text x="65.7646%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="65.5914%" y="501" width="0.0768%" height="15" fill="rgb(245,125,36)" fg:x="854" fg:w="1"/><text x="65.8414%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="65.5914%" y="485" width="0.0768%" height="15" fill="rgb(225,199,6)" fg:x="854" fg:w="1"/><text x="65.8414%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.5914%" y="469" width="0.0768%" height="15" fill="rgb(244,71,6)" fg:x="854" fg:w="1"/><text x="65.8414%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.5914%" y="453" width="0.0768%" height="15" fill="rgb(225,62,9)" fg:x="854" fg:w="1"/><text x="65.8414%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.5914%" y="437" width="0.0768%" height="15" fill="rgb(246,139,53)" fg:x="854" fg:w="1"/><text x="65.8414%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="65.5914%" y="421" width="0.0768%" height="15" fill="rgb(243,161,46)" fg:x="854" fg:w="1"/><text x="65.8414%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="65.5914%" y="405" width="0.0768%" height="15" fill="rgb(236,153,7)" fg:x="854" fg:w="1"/><text x="65.8414%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="65.5914%" y="389" width="0.0768%" height="15" fill="rgb(248,42,35)" fg:x="854" fg:w="1"/><text x="65.8414%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="65.5914%" y="373" width="0.0768%" height="15" fill="rgb(250,17,31)" fg:x="854" fg:w="1"/><text x="65.8414%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.5914%" y="357" width="0.0768%" height="15" fill="rgb(248,138,14)" fg:x="854" fg:w="1"/><text x="65.8414%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.6682%" y="549" width="0.0768%" height="15" fill="rgb(228,161,3)" fg:x="855" fg:w="1"/><text x="65.9182%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.23%)</title><rect x="65.6682%" y="565" width="0.2304%" height="15" fill="rgb(248,116,17)" fg:x="855" fg:w="3"/><text x="65.9182%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.15%)</title><rect x="65.7450%" y="549" width="0.1536%" height="15" fill="rgb(207,78,24)" fg:x="856" fg:w="2"/><text x="65.9950%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="65.7450%" y="533" width="0.1536%" height="15" fill="rgb(234,99,48)" fg:x="856" fg:w="2"/><text x="65.9950%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="65.9754%" y="549" width="0.1536%" height="15" fill="rgb(242,22,26)" fg:x="859" fg:w="2"/><text x="66.2254%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="65.9754%" y="533" width="0.1536%" height="15" fill="rgb(227,78,32)" fg:x="859" fg:w="2"/><text x="66.2254%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0522%" y="517" width="0.0768%" height="15" fill="rgb(226,189,43)" fg:x="860" fg:w="1"/><text x="66.3022%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0522%" y="501" width="0.0768%" height="15" fill="rgb(227,218,35)" fg:x="860" fg:w="1"/><text x="66.3022%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.0522%" y="485" width="0.0768%" height="15" fill="rgb(206,111,40)" fg:x="860" fg:w="1"/><text x="66.3022%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.0522%" y="469" width="0.0768%" height="15" fill="rgb(208,217,22)" fg:x="860" fg:w="1"/><text x="66.3022%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.0522%" y="453" width="0.0768%" height="15" fill="rgb(248,20,20)" fg:x="860" fg:w="1"/><text x="66.3022%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0522%" y="437" width="0.0768%" height="15" fill="rgb(239,155,16)" fg:x="860" fg:w="1"/><text x="66.3022%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0522%" y="421" width="0.0768%" height="15" fill="rgb(238,171,46)" fg:x="860" fg:w="1"/><text x="66.3022%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.0522%" y="405" width="0.0768%" height="15" fill="rgb(248,11,36)" fg:x="860" fg:w="1"/><text x="66.3022%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.0522%" y="389" width="0.0768%" height="15" fill="rgb(220,148,37)" fg:x="860" fg:w="1"/><text x="66.3022%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.0522%" y="373" width="0.0768%" height="15" fill="rgb(218,144,42)" fg:x="860" fg:w="1"/><text x="66.3022%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.0522%" y="357" width="0.0768%" height="15" fill="rgb(245,20,20)" fg:x="860" fg:w="1"/><text x="66.3022%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.0522%" y="341" width="0.0768%" height="15" fill="rgb(240,111,48)" fg:x="860" fg:w="1"/><text x="66.3022%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.23%)</title><rect x="66.1290%" y="549" width="0.2304%" height="15" fill="rgb(237,225,32)" fg:x="861" fg:w="3"/><text x="66.3790%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.23%)</title><rect x="66.1290%" y="533" width="0.2304%" height="15" fill="rgb(228,161,46)" fg:x="861" fg:w="3"/><text x="66.3790%" y="543.50"></text></g><g><title>realloc (3 samples, 0.23%)</title><rect x="66.1290%" y="517" width="0.2304%" height="15" fill="rgb(235,196,21)" fg:x="861" fg:w="3"/><text x="66.3790%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.3594%" y="549" width="0.0768%" height="15" fill="rgb(250,133,21)" fg:x="864" fg:w="1"/><text x="66.6094%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="66.4363%" y="501" width="0.0768%" height="15" fill="rgb(236,94,32)" fg:x="865" fg:w="1"/><text x="66.6863%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.4363%" y="485" width="0.0768%" height="15" fill="rgb(219,176,25)" fg:x="865" fg:w="1"/><text x="66.6863%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4363%" y="469" width="0.0768%" height="15" fill="rgb(211,17,43)" fg:x="865" fg:w="1"/><text x="66.6863%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.23%)</title><rect x="66.4363%" y="533" width="0.2304%" height="15" fill="rgb(220,75,23)" fg:x="865" fg:w="3"/><text x="66.6863%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.23%)</title><rect x="66.4363%" y="517" width="0.2304%" height="15" fill="rgb(215,122,32)" fg:x="865" fg:w="3"/><text x="66.6863%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.15%)</title><rect x="66.5131%" y="501" width="0.1536%" height="15" fill="rgb(218,57,38)" fg:x="866" fg:w="2"/><text x="66.7631%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.15%)</title><rect x="66.5131%" y="485" width="0.1536%" height="15" fill="rgb(233,208,46)" fg:x="866" fg:w="2"/><text x="66.7631%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.15%)</title><rect x="66.5131%" y="469" width="0.1536%" height="15" fill="rgb(221,35,50)" fg:x="866" fg:w="2"/><text x="66.7631%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="66.5131%" y="453" width="0.1536%" height="15" fill="rgb(229,213,29)" fg:x="866" fg:w="2"/><text x="66.7631%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="66.5131%" y="437" width="0.1536%" height="15" fill="rgb(229,110,40)" fg:x="866" fg:w="2"/><text x="66.7631%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="66.5131%" y="421" width="0.1536%" height="15" fill="rgb(247,206,19)" fg:x="866" fg:w="2"/><text x="66.7631%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.5899%" y="405" width="0.0768%" height="15" fill="rgb(216,229,45)" fg:x="867" fg:w="1"/><text x="66.8399%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.5899%" y="389" width="0.0768%" height="15" fill="rgb(205,184,31)" fg:x="867" fg:w="1"/><text x="66.8399%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.5899%" y="373" width="0.0768%" height="15" fill="rgb(213,91,10)" fg:x="867" fg:w="1"/><text x="66.8399%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="66.5899%" y="357" width="0.0768%" height="15" fill="rgb(250,49,8)" fg:x="867" fg:w="1"/><text x="66.8399%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.5899%" y="341" width="0.0768%" height="15" fill="rgb(207,26,8)" fg:x="867" fg:w="1"/><text x="66.8399%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.5899%" y="325" width="0.0768%" height="15" fill="rgb(224,2,13)" fg:x="867" fg:w="1"/><text x="66.8399%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.5899%" y="309" width="0.0768%" height="15" fill="rgb(219,108,27)" fg:x="867" fg:w="1"/><text x="66.8399%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="66.5899%" y="293" width="0.0768%" height="15" fill="rgb(240,89,32)" fg:x="867" fg:w="1"/><text x="66.8399%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.5899%" y="277" width="0.0768%" height="15" fill="rgb(248,205,3)" fg:x="867" fg:w="1"/><text x="66.8399%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.7435%" y="469" width="0.0768%" height="15" fill="rgb(236,197,47)" fg:x="869" fg:w="1"/><text x="66.9935%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.7435%" y="453" width="0.0768%" height="15" fill="rgb(244,185,52)" fg:x="869" fg:w="1"/><text x="66.9935%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.7435%" y="437" width="0.0768%" height="15" fill="rgb(210,206,23)" fg:x="869" fg:w="1"/><text x="66.9935%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.7435%" y="421" width="0.0768%" height="15" fill="rgb(251,177,30)" fg:x="869" fg:w="1"/><text x="66.9935%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.7435%" y="405" width="0.0768%" height="15" fill="rgb(243,27,45)" fg:x="869" fg:w="1"/><text x="66.9935%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.7435%" y="389" width="0.0768%" height="15" fill="rgb(248,141,51)" fg:x="869" fg:w="1"/><text x="66.9935%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.7435%" y="373" width="0.0768%" height="15" fill="rgb(235,102,15)" fg:x="869" fg:w="1"/><text x="66.9935%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.7435%" y="357" width="0.0768%" height="15" fill="rgb(214,164,53)" fg:x="869" fg:w="1"/><text x="66.9935%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.7435%" y="341" width="0.0768%" height="15" fill="rgb(228,18,51)" fg:x="869" fg:w="1"/><text x="66.9935%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.7435%" y="325" width="0.0768%" height="15" fill="rgb(205,211,11)" fg:x="869" fg:w="1"/><text x="66.9935%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.7435%" y="309" width="0.0768%" height="15" fill="rgb(208,63,6)" fg:x="869" fg:w="1"/><text x="66.9935%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.7435%" y="293" width="0.0768%" height="15" fill="rgb(245,76,14)" fg:x="869" fg:w="1"/><text x="66.9935%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="66.7435%" y="501" width="0.2304%" height="15" fill="rgb(234,176,34)" fg:x="869" fg:w="3"/><text x="66.9935%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="66.7435%" y="485" width="0.2304%" height="15" fill="rgb(243,156,42)" fg:x="869" fg:w="3"/><text x="66.9935%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="66.8203%" y="469" width="0.1536%" height="15" fill="rgb(237,182,10)" fg:x="870" fg:w="2"/><text x="67.0703%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="66.8203%" y="453" width="0.1536%" height="15" fill="rgb(244,117,0)" fg:x="870" fg:w="2"/><text x="67.0703%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="66.8203%" y="437" width="0.1536%" height="15" fill="rgb(239,91,50)" fg:x="870" fg:w="2"/><text x="67.0703%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="66.8203%" y="421" width="0.1536%" height="15" fill="rgb(206,38,9)" fg:x="870" fg:w="2"/><text x="67.0703%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="66.8203%" y="405" width="0.1536%" height="15" fill="rgb(205,25,10)" fg:x="870" fg:w="2"/><text x="67.0703%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="66.8203%" y="389" width="0.1536%" height="15" fill="rgb(206,224,7)" fg:x="870" fg:w="2"/><text x="67.0703%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="66.8203%" y="373" width="0.1536%" height="15" fill="rgb(227,157,10)" fg:x="870" fg:w="2"/><text x="67.0703%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="66.8203%" y="357" width="0.1536%" height="15" fill="rgb(214,157,37)" fg:x="870" fg:w="2"/><text x="67.0703%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="66.8203%" y="341" width="0.1536%" height="15" fill="rgb(209,180,35)" fg:x="870" fg:w="2"/><text x="67.0703%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="66.8203%" y="325" width="0.1536%" height="15" fill="rgb(216,174,49)" fg:x="870" fg:w="2"/><text x="67.0703%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="66.8203%" y="309" width="0.1536%" height="15" fill="rgb(205,96,20)" fg:x="870" fg:w="2"/><text x="67.0703%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="66.8203%" y="293" width="0.1536%" height="15" fill="rgb(214,220,39)" fg:x="870" fg:w="2"/><text x="67.0703%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="66.8203%" y="277" width="0.1536%" height="15" fill="rgb(245,126,30)" fg:x="870" fg:w="2"/><text x="67.0703%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="66.8203%" y="261" width="0.1536%" height="15" fill="rgb(215,88,33)" fg:x="870" fg:w="2"/><text x="67.0703%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.15%)</title><rect x="66.9739%" y="501" width="0.1536%" height="15" fill="rgb(210,1,49)" fg:x="872" fg:w="2"/><text x="67.2239%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.15%)</title><rect x="66.9739%" y="485" width="0.1536%" height="15" fill="rgb(207,133,3)" fg:x="872" fg:w="2"/><text x="67.2239%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="66.9739%" y="469" width="0.1536%" height="15" fill="rgb(231,47,43)" fg:x="872" fg:w="2"/><text x="67.2239%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.15%)</title><rect x="66.9739%" y="453" width="0.1536%" height="15" fill="rgb(245,64,1)" fg:x="872" fg:w="2"/><text x="67.2239%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="67.0507%" y="437" width="0.0768%" height="15" fill="rgb(253,145,20)" fg:x="873" fg:w="1"/><text x="67.3007%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="67.0507%" y="421" width="0.0768%" height="15" fill="rgb(211,39,18)" fg:x="873" fg:w="1"/><text x="67.3007%" y="431.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="67.0507%" y="405" width="0.0768%" height="15" fill="rgb(223,225,18)" fg:x="873" fg:w="1"/><text x="67.3007%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.1275%" y="469" width="0.0768%" height="15" fill="rgb(210,202,44)" fg:x="874" fg:w="1"/><text x="67.3775%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.23%)</title><rect x="67.1275%" y="501" width="0.2304%" height="15" fill="rgb(231,138,36)" fg:x="874" fg:w="3"/><text x="67.3775%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="67.1275%" y="485" width="0.2304%" height="15" fill="rgb(237,115,25)" fg:x="874" fg:w="3"/><text x="67.3775%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="67.2043%" y="469" width="0.1536%" height="15" fill="rgb(215,53,48)" fg:x="875" fg:w="2"/><text x="67.4543%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.15%)</title><rect x="67.2043%" y="453" width="0.1536%" height="15" fill="rgb(243,193,24)" fg:x="875" fg:w="2"/><text x="67.4543%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.15%)</title><rect x="67.2043%" y="437" width="0.1536%" height="15" fill="rgb(210,106,28)" fg:x="875" fg:w="2"/><text x="67.4543%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="67.2043%" y="421" width="0.1536%" height="15" fill="rgb(249,192,0)" fg:x="875" fg:w="2"/><text x="67.4543%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.3579%" y="469" width="0.0768%" height="15" fill="rgb(224,96,21)" fg:x="877" fg:w="1"/><text x="67.6079%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.3579%" y="453" width="0.0768%" height="15" fill="rgb(243,160,19)" fg:x="877" fg:w="1"/><text x="67.6079%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.5115%" y="389" width="0.0768%" height="15" fill="rgb(219,205,50)" fg:x="879" fg:w="1"/><text x="67.7615%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (23 samples, 1.77%)</title><rect x="65.8986%" y="565" width="1.7665%" height="15" fill="rgb(218,175,44)" fg:x="858" fg:w="23"/><text x="66.1486%" y="575.50"></text></g><g><title>plugins_core::tools::contained_by (16 samples, 1.23%)</title><rect x="66.4363%" y="549" width="1.2289%" height="15" fill="rgb(251,84,47)" fg:x="865" fg:w="16"/><text x="66.6863%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.00%)</title><rect x="66.6667%" y="533" width="0.9985%" height="15" fill="rgb(241,14,16)" fg:x="868" fg:w="13"/><text x="66.9167%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.92%)</title><rect x="66.7435%" y="517" width="0.9217%" height="15" fill="rgb(207,142,28)" fg:x="869" fg:w="12"/><text x="66.9935%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="67.3579%" y="501" width="0.3072%" height="15" fill="rgb(208,116,22)" fg:x="877" fg:w="4"/><text x="67.6079%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="67.3579%" y="485" width="0.3072%" height="15" fill="rgb(210,0,43)" fg:x="877" fg:w="4"/><text x="67.6079%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.23%)</title><rect x="67.4347%" y="469" width="0.2304%" height="15" fill="rgb(246,33,21)" fg:x="878" fg:w="3"/><text x="67.6847%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.23%)</title><rect x="67.4347%" y="453" width="0.2304%" height="15" fill="rgb(208,158,54)" fg:x="878" fg:w="3"/><text x="67.6847%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.23%)</title><rect x="67.4347%" y="437" width="0.2304%" height="15" fill="rgb(218,99,29)" fg:x="878" fg:w="3"/><text x="67.6847%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="67.5115%" y="421" width="0.1536%" height="15" fill="rgb(226,29,7)" fg:x="879" fg:w="2"/><text x="67.7615%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="67.5115%" y="405" width="0.1536%" height="15" fill="rgb(206,178,46)" fg:x="879" fg:w="2"/><text x="67.7615%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="67.5883%" y="389" width="0.0768%" height="15" fill="rgb(205,169,32)" fg:x="880" fg:w="1"/><text x="67.8383%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="67.7419%" y="453" width="0.1536%" height="15" fill="rgb(217,4,13)" fg:x="882" fg:w="2"/><text x="67.9919%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="67.7419%" y="437" width="0.1536%" height="15" fill="rgb(210,140,37)" fg:x="882" fg:w="2"/><text x="67.9919%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8187%" y="421" width="0.0768%" height="15" fill="rgb(229,80,10)" fg:x="883" fg:w="1"/><text x="68.0687%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8187%" y="405" width="0.0768%" height="15" fill="rgb(212,175,34)" fg:x="883" fg:w="1"/><text x="68.0687%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8187%" y="389" width="0.0768%" height="15" fill="rgb(216,207,24)" fg:x="883" fg:w="1"/><text x="68.0687%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8187%" y="373" width="0.0768%" height="15" fill="rgb(234,163,3)" fg:x="883" fg:w="1"/><text x="68.0687%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8187%" y="357" width="0.0768%" height="15" fill="rgb(248,101,16)" fg:x="883" fg:w="1"/><text x="68.0687%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8187%" y="341" width="0.0768%" height="15" fill="rgb(209,152,54)" fg:x="883" fg:w="1"/><text x="68.0687%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8187%" y="325" width="0.0768%" height="15" fill="rgb(229,124,51)" fg:x="883" fg:w="1"/><text x="68.0687%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.8187%" y="309" width="0.0768%" height="15" fill="rgb(219,83,18)" fg:x="883" fg:w="1"/><text x="68.0687%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.8187%" y="293" width="0.0768%" height="15" fill="rgb(206,29,38)" fg:x="883" fg:w="1"/><text x="68.0687%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.8187%" y="277" width="0.0768%" height="15" fill="rgb(245,123,23)" fg:x="883" fg:w="1"/><text x="68.0687%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.8187%" y="261" width="0.0768%" height="15" fill="rgb(238,50,33)" fg:x="883" fg:w="1"/><text x="68.0687%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8187%" y="245" width="0.0768%" height="15" fill="rgb(234,165,23)" fg:x="883" fg:w="1"/><text x="68.0687%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="67.7419%" y="469" width="0.2304%" height="15" fill="rgb(211,82,31)" fg:x="882" fg:w="3"/><text x="67.9919%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8955%" y="453" width="0.0768%" height="15" fill="rgb(224,166,46)" fg:x="884" fg:w="1"/><text x="68.1455%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.9724%" y="469" width="0.0768%" height="15" fill="rgb(211,13,8)" fg:x="885" fg:w="1"/><text x="68.2224%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="67.9724%" y="453" width="0.0768%" height="15" fill="rgb(212,7,42)" fg:x="885" fg:w="1"/><text x="68.2224%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.46%)</title><rect x="67.6651%" y="565" width="0.4608%" height="15" fill="rgb(249,102,19)" fg:x="881" fg:w="6"/><text x="67.9151%" y="575.50"></text></g><g><title>plugins_core::finding::matches_description (5 samples, 0.38%)</title><rect x="67.7419%" y="549" width="0.3840%" height="15" fill="rgb(225,41,13)" fg:x="882" fg:w="5"/><text x="67.9919%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::name (5 samples, 0.38%)</title><rect x="67.7419%" y="533" width="0.3840%" height="15" fill="rgb(220,65,27)" fg:x="882" fg:w="5"/><text x="67.9919%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.38%)</title><rect x="67.7419%" y="517" width="0.3840%" height="15" fill="rgb(206,4,41)" fg:x="882" fg:w="5"/><text x="67.9919%" y="527.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.38%)</title><rect x="67.7419%" y="501" width="0.3840%" height="15" fill="rgb(219,60,39)" fg:x="882" fg:w="5"/><text x="67.9919%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.38%)</title><rect x="67.7419%" y="485" width="0.3840%" height="15" fill="rgb(226,4,38)" fg:x="882" fg:w="5"/><text x="67.9919%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.0492%" y="469" width="0.0768%" height="15" fill="rgb(250,52,3)" fg:x="886" fg:w="1"/><text x="68.2992%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0492%" y="453" width="0.0768%" height="15" fill="rgb(234,93,0)" fg:x="886" fg:w="1"/><text x="68.2992%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.0492%" y="437" width="0.0768%" height="15" fill="rgb(251,47,47)" fg:x="886" fg:w="1"/><text x="68.2992%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0492%" y="421" width="0.0768%" height="15" fill="rgb(205,166,47)" fg:x="886" fg:w="1"/><text x="68.2992%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.0492%" y="405" width="0.0768%" height="15" fill="rgb(231,148,8)" fg:x="886" fg:w="1"/><text x="68.2992%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0492%" y="389" width="0.0768%" height="15" fill="rgb(244,185,19)" fg:x="886" fg:w="1"/><text x="68.2992%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.0492%" y="373" width="0.0768%" height="15" fill="rgb(224,201,45)" fg:x="886" fg:w="1"/><text x="68.2992%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (33 samples, 2.53%)</title><rect x="65.6682%" y="597" width="2.5346%" height="15" fill="rgb(240,77,39)" fg:x="855" fg:w="33"/><text x="65.9182%" y="607.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (33 samples, 2.53%)</title><rect x="65.6682%" y="581" width="2.5346%" height="15" fill="rgb(248,211,29)" fg:x="855" fg:w="33"/><text x="65.9182%" y="591.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="68.1260%" y="565" width="0.0768%" height="15" fill="rgb(232,214,46)" fg:x="887" fg:w="1"/><text x="68.3760%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.1260%" y="549" width="0.0768%" height="15" fill="rgb(213,99,54)" fg:x="887" fg:w="1"/><text x="68.3760%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.1260%" y="533" width="0.0768%" height="15" fill="rgb(240,19,46)" fg:x="887" fg:w="1"/><text x="68.3760%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.1260%" y="517" width="0.0768%" height="15" fill="rgb(243,89,10)" fg:x="887" fg:w="1"/><text x="68.3760%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.1260%" y="501" width="0.0768%" height="15" fill="rgb(249,28,32)" fg:x="887" fg:w="1"/><text x="68.3760%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.1260%" y="485" width="0.0768%" height="15" fill="rgb(253,30,9)" fg:x="887" fg:w="1"/><text x="68.3760%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.1260%" y="469" width="0.0768%" height="15" fill="rgb(217,2,26)" fg:x="887" fg:w="1"/><text x="68.3760%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.1260%" y="453" width="0.0768%" height="15" fill="rgb(220,28,10)" fg:x="887" fg:w="1"/><text x="68.3760%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.1260%" y="437" width="0.0768%" height="15" fill="rgb(228,167,49)" fg:x="887" fg:w="1"/><text x="68.3760%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.1260%" y="421" width="0.0768%" height="15" fill="rgb(238,212,3)" fg:x="887" fg:w="1"/><text x="68.3760%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.1260%" y="405" width="0.0768%" height="15" fill="rgb(229,134,44)" fg:x="887" fg:w="1"/><text x="68.3760%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.1260%" y="389" width="0.0768%" height="15" fill="rgb(208,71,4)" fg:x="887" fg:w="1"/><text x="68.3760%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.1260%" y="373" width="0.0768%" height="15" fill="rgb(221,205,45)" fg:x="887" fg:w="1"/><text x="68.3760%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1260%" y="357" width="0.0768%" height="15" fill="rgb(215,132,38)" fg:x="887" fg:w="1"/><text x="68.3760%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.3564%" y="469" width="0.0768%" height="15" fill="rgb(227,158,6)" fg:x="890" fg:w="1"/><text x="68.6064%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3564%" y="453" width="0.0768%" height="15" fill="rgb(250,10,38)" fg:x="890" fg:w="1"/><text x="68.6064%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3564%" y="437" width="0.0768%" height="15" fill="rgb(225,171,40)" fg:x="890" fg:w="1"/><text x="68.6064%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.3564%" y="421" width="0.0768%" height="15" fill="rgb(238,17,43)" fg:x="890" fg:w="1"/><text x="68.6064%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.3564%" y="405" width="0.0768%" height="15" fill="rgb(208,145,4)" fg:x="890" fg:w="1"/><text x="68.6064%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.3564%" y="389" width="0.0768%" height="15" fill="rgb(232,82,7)" fg:x="890" fg:w="1"/><text x="68.6064%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3564%" y="373" width="0.0768%" height="15" fill="rgb(205,166,38)" fg:x="890" fg:w="1"/><text x="68.6064%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3564%" y="357" width="0.0768%" height="15" fill="rgb(240,228,4)" fg:x="890" fg:w="1"/><text x="68.6064%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.3564%" y="341" width="0.0768%" height="15" fill="rgb(233,121,40)" fg:x="890" fg:w="1"/><text x="68.6064%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.3564%" y="325" width="0.0768%" height="15" fill="rgb(243,84,30)" fg:x="890" fg:w="1"/><text x="68.6064%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.3564%" y="309" width="0.0768%" height="15" fill="rgb(235,81,48)" fg:x="890" fg:w="1"/><text x="68.6064%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.3564%" y="293" width="0.0768%" height="15" fill="rgb(218,137,0)" fg:x="890" fg:w="1"/><text x="68.6064%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="68.3564%" y="485" width="0.1536%" height="15" fill="rgb(223,151,48)" fg:x="890" fg:w="2"/><text x="68.6064%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4332%" y="469" width="0.0768%" height="15" fill="rgb(247,30,19)" fg:x="891" fg:w="1"/><text x="68.6832%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="68.2796%" y="517" width="0.3072%" height="15" fill="rgb(205,129,29)" fg:x="889" fg:w="4"/><text x="68.5296%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="68.3564%" y="501" width="0.2304%" height="15" fill="rgb(222,29,2)" fg:x="890" fg:w="3"/><text x="68.6064%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5100%" y="485" width="0.0768%" height="15" fill="rgb(232,145,33)" fg:x="892" fg:w="1"/><text x="68.7600%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.5868%" y="453" width="0.0768%" height="15" fill="rgb(217,30,31)" fg:x="893" fg:w="1"/><text x="68.8368%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5868%" y="437" width="0.0768%" height="15" fill="rgb(243,22,52)" fg:x="893" fg:w="1"/><text x="68.8368%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="68.7404%" y="389" width="0.1536%" height="15" fill="rgb(254,228,14)" fg:x="895" fg:w="2"/><text x="68.9904%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (11 samples, 0.84%)</title><rect x="68.2028%" y="565" width="0.8449%" height="15" fill="rgb(231,45,50)" fg:x="888" fg:w="11"/><text x="68.4528%" y="575.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.77%)</title><rect x="68.2796%" y="549" width="0.7680%" height="15" fill="rgb(248,125,3)" fg:x="889" fg:w="10"/><text x="68.5296%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.77%)</title><rect x="68.2796%" y="533" width="0.7680%" height="15" fill="rgb(213,76,9)" fg:x="889" fg:w="10"/><text x="68.5296%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.46%)</title><rect x="68.5868%" y="517" width="0.4608%" height="15" fill="rgb(238,108,21)" fg:x="893" fg:w="6"/><text x="68.8368%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.46%)</title><rect x="68.5868%" y="501" width="0.4608%" height="15" fill="rgb(229,214,19)" fg:x="893" fg:w="6"/><text x="68.8368%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.46%)</title><rect x="68.5868%" y="485" width="0.4608%" height="15" fill="rgb(252,201,5)" fg:x="893" fg:w="6"/><text x="68.8368%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.46%)</title><rect x="68.5868%" y="469" width="0.4608%" height="15" fill="rgb(233,165,49)" fg:x="893" fg:w="6"/><text x="68.8368%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.38%)</title><rect x="68.6636%" y="453" width="0.3840%" height="15" fill="rgb(208,165,19)" fg:x="894" fg:w="5"/><text x="68.9136%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="68.6636%" y="437" width="0.3840%" height="15" fill="rgb(216,220,31)" fg:x="894" fg:w="5"/><text x="68.9136%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.38%)</title><rect x="68.6636%" y="421" width="0.3840%" height="15" fill="rgb(214,8,31)" fg:x="894" fg:w="5"/><text x="68.9136%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="68.6636%" y="405" width="0.3840%" height="15" fill="rgb(220,32,32)" fg:x="894" fg:w="5"/><text x="68.9136%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="68.8940%" y="389" width="0.1536%" height="15" fill="rgb(237,172,34)" fg:x="897" fg:w="2"/><text x="69.1440%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.9708%" y="373" width="0.0768%" height="15" fill="rgb(240,209,5)" fg:x="898" fg:w="1"/><text x="69.2208%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="68.9708%" y="357" width="0.0768%" height="15" fill="rgb(221,219,1)" fg:x="898" fg:w="1"/><text x="69.2208%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="68.9708%" y="341" width="0.0768%" height="15" fill="rgb(237,90,36)" fg:x="898" fg:w="1"/><text x="69.2208%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="68.9708%" y="325" width="0.0768%" height="15" fill="rgb(245,14,51)" fg:x="898" fg:w="1"/><text x="69.2208%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0476%" y="549" width="0.0768%" height="15" fill="rgb(211,71,49)" fg:x="899" fg:w="1"/><text x="69.2976%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3548%" y="373" width="0.0768%" height="15" fill="rgb(230,223,9)" fg:x="903" fg:w="1"/><text x="69.6048%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3548%" y="357" width="0.0768%" height="15" fill="rgb(212,33,31)" fg:x="903" fg:w="1"/><text x="69.6048%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.3548%" y="341" width="0.0768%" height="15" fill="rgb(218,141,5)" fg:x="903" fg:w="1"/><text x="69.6048%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.3548%" y="325" width="0.0768%" height="15" fill="rgb(239,194,8)" fg:x="903" fg:w="1"/><text x="69.6048%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.3548%" y="309" width="0.0768%" height="15" fill="rgb(225,119,29)" fg:x="903" fg:w="1"/><text x="69.6048%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.3548%" y="293" width="0.0768%" height="15" fill="rgb(233,32,3)" fg:x="903" fg:w="1"/><text x="69.6048%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="69.3548%" y="453" width="0.2304%" height="15" fill="rgb(248,126,40)" fg:x="903" fg:w="3"/><text x="69.6048%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="69.3548%" y="437" width="0.2304%" height="15" fill="rgb(213,102,53)" fg:x="903" fg:w="3"/><text x="69.6048%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.23%)</title><rect x="69.3548%" y="421" width="0.2304%" height="15" fill="rgb(212,69,15)" fg:x="903" fg:w="3"/><text x="69.6048%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.23%)</title><rect x="69.3548%" y="405" width="0.2304%" height="15" fill="rgb(253,39,34)" fg:x="903" fg:w="3"/><text x="69.6048%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.23%)</title><rect x="69.3548%" y="389" width="0.2304%" height="15" fill="rgb(205,189,54)" fg:x="903" fg:w="3"/><text x="69.6048%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.15%)</title><rect x="69.4316%" y="373" width="0.1536%" height="15" fill="rgb(234,229,45)" fg:x="904" fg:w="2"/><text x="69.6816%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.15%)</title><rect x="69.4316%" y="357" width="0.1536%" height="15" fill="rgb(243,79,48)" fg:x="904" fg:w="2"/><text x="69.6816%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.54%)</title><rect x="69.1244%" y="517" width="0.5376%" height="15" fill="rgb(206,71,50)" fg:x="900" fg:w="7"/><text x="69.3744%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.54%)</title><rect x="69.1244%" y="501" width="0.5376%" height="15" fill="rgb(209,32,17)" fg:x="900" fg:w="7"/><text x="69.3744%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.54%)</title><rect x="69.1244%" y="485" width="0.5376%" height="15" fill="rgb(219,229,6)" fg:x="900" fg:w="7"/><text x="69.3744%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.46%)</title><rect x="69.2012%" y="469" width="0.4608%" height="15" fill="rgb(226,25,27)" fg:x="901" fg:w="6"/><text x="69.4512%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5853%" y="453" width="0.0768%" height="15" fill="rgb(218,185,23)" fg:x="906" fg:w="1"/><text x="69.8353%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.6621%" y="517" width="0.0768%" height="15" fill="rgb(242,123,5)" fg:x="907" fg:w="1"/><text x="69.9121%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.7389%" y="517" width="0.0768%" height="15" fill="rgb(215,53,19)" fg:x="908" fg:w="1"/><text x="69.9889%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.7389%" y="501" width="0.0768%" height="15" fill="rgb(233,20,30)" fg:x="908" fg:w="1"/><text x="69.9889%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.7389%" y="485" width="0.0768%" height="15" fill="rgb(209,67,20)" fg:x="908" fg:w="1"/><text x="69.9889%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.7389%" y="469" width="0.0768%" height="15" fill="rgb(227,181,50)" fg:x="908" fg:w="1"/><text x="69.9889%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.7389%" y="453" width="0.0768%" height="15" fill="rgb(252,75,38)" fg:x="908" fg:w="1"/><text x="69.9889%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.7389%" y="437" width="0.0768%" height="15" fill="rgb(235,9,33)" fg:x="908" fg:w="1"/><text x="69.9889%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8157%" y="421" width="0.0768%" height="15" fill="rgb(208,87,30)" fg:x="909" fg:w="1"/><text x="70.0657%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8157%" y="405" width="0.0768%" height="15" fill="rgb(215,199,39)" fg:x="909" fg:w="1"/><text x="70.0657%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.9693%" y="357" width="0.0768%" height="15" fill="rgb(246,208,12)" fg:x="911" fg:w="1"/><text x="70.2193%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (26 samples, 2.00%)</title><rect x="68.2028%" y="597" width="1.9969%" height="15" fill="rgb(206,195,10)" fg:x="888" fg:w="26"/><text x="68.4528%" y="607.50">k..</text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (26 samples, 2.00%)</title><rect x="68.2028%" y="581" width="1.9969%" height="15" fill="rgb(244,1,30)" fg:x="888" fg:w="26"/><text x="68.4528%" y="591.50">k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (15 samples, 1.15%)</title><rect x="69.0476%" y="565" width="1.1521%" height="15" fill="rgb(230,83,5)" fg:x="899" fg:w="15"/><text x="69.2976%" y="575.50"></text></g><g><title>kernel::model::props::load_props (14 samples, 1.08%)</title><rect x="69.1244%" y="549" width="1.0753%" height="15" fill="rgb(239,62,17)" fg:x="900" fg:w="14"/><text x="69.3744%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.08%)</title><rect x="69.1244%" y="533" width="1.0753%" height="15" fill="rgb(252,193,41)" fg:x="900" fg:w="14"/><text x="69.3744%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.38%)</title><rect x="69.8157%" y="517" width="0.3840%" height="15" fill="rgb(216,142,19)" fg:x="909" fg:w="5"/><text x="70.0657%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="69.8157%" y="501" width="0.3840%" height="15" fill="rgb(240,81,38)" fg:x="909" fg:w="5"/><text x="70.0657%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.38%)</title><rect x="69.8157%" y="485" width="0.3840%" height="15" fill="rgb(240,109,40)" fg:x="909" fg:w="5"/><text x="70.0657%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="69.8157%" y="469" width="0.3840%" height="15" fill="rgb(230,123,10)" fg:x="909" fg:w="5"/><text x="70.0657%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.38%)</title><rect x="69.8157%" y="453" width="0.3840%" height="15" fill="rgb(253,42,32)" fg:x="909" fg:w="5"/><text x="70.0657%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="69.8157%" y="437" width="0.3840%" height="15" fill="rgb(218,154,8)" fg:x="909" fg:w="5"/><text x="70.0657%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="69.8925%" y="421" width="0.3072%" height="15" fill="rgb(216,197,10)" fg:x="910" fg:w="4"/><text x="70.1425%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="69.8925%" y="405" width="0.3072%" height="15" fill="rgb(223,107,12)" fg:x="910" fg:w="4"/><text x="70.1425%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="69.8925%" y="389" width="0.3072%" height="15" fill="rgb(241,174,42)" fg:x="910" fg:w="4"/><text x="70.1425%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="69.8925%" y="373" width="0.3072%" height="15" fill="rgb(231,78,20)" fg:x="910" fg:w="4"/><text x="70.1425%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.15%)</title><rect x="70.0461%" y="357" width="0.1536%" height="15" fill="rgb(230,208,49)" fg:x="912" fg:w="2"/><text x="70.2961%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.15%)</title><rect x="70.0461%" y="341" width="0.1536%" height="15" fill="rgb(238,11,34)" fg:x="912" fg:w="2"/><text x="70.2961%" y="351.50"></text></g><g><title>kernel::surround::Surroundings::unpack (3 samples, 0.23%)</title><rect x="70.1997%" y="597" width="0.2304%" height="15" fill="rgb(210,130,26)" fg:x="914" fg:w="3"/><text x="70.4497%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3533%" y="581" width="0.0768%" height="15" fill="rgb(242,131,11)" fg:x="916" fg:w="1"/><text x="70.6033%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3533%" y="565" width="0.0768%" height="15" fill="rgb(237,38,28)" fg:x="916" fg:w="1"/><text x="70.6033%" y="575.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="70.4301%" y="597" width="0.0768%" height="15" fill="rgb(244,180,43)" fg:x="917" fg:w="1"/><text x="70.6801%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="70.4301%" y="581" width="0.0768%" height="15" fill="rgb(214,171,19)" fg:x="917" fg:w="1"/><text x="70.6801%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.5837%" y="437" width="0.0768%" height="15" fill="rgb(252,101,45)" fg:x="919" fg:w="1"/><text x="70.8337%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.5837%" y="421" width="0.0768%" height="15" fill="rgb(211,96,33)" fg:x="919" fg:w="1"/><text x="70.8337%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.5837%" y="405" width="0.0768%" height="15" fill="rgb(207,80,25)" fg:x="919" fg:w="1"/><text x="70.8337%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.5837%" y="389" width="0.0768%" height="15" fill="rgb(225,15,35)" fg:x="919" fg:w="1"/><text x="70.8337%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.5837%" y="373" width="0.0768%" height="15" fill="rgb(214,93,43)" fg:x="919" fg:w="1"/><text x="70.8337%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.5837%" y="357" width="0.0768%" height="15" fill="rgb(248,42,37)" fg:x="919" fg:w="1"/><text x="70.8337%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.5837%" y="341" width="0.0768%" height="15" fill="rgb(217,135,32)" fg:x="919" fg:w="1"/><text x="70.8337%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.5837%" y="325" width="0.0768%" height="15" fill="rgb(216,74,28)" fg:x="919" fg:w="1"/><text x="70.8337%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.5837%" y="309" width="0.0768%" height="15" fill="rgb(247,108,16)" fg:x="919" fg:w="1"/><text x="70.8337%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.5837%" y="293" width="0.0768%" height="15" fill="rgb(205,219,30)" fg:x="919" fg:w="1"/><text x="70.8337%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.5837%" y="277" width="0.0768%" height="15" fill="rgb(241,122,9)" fg:x="919" fg:w="1"/><text x="70.8337%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.5837%" y="261" width="0.0768%" height="15" fill="rgb(216,148,50)" fg:x="919" fg:w="1"/><text x="70.8337%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5837%" y="245" width="0.0768%" height="15" fill="rgb(226,154,2)" fg:x="919" fg:w="1"/><text x="70.8337%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="70.5837%" y="453" width="0.1536%" height="15" fill="rgb(220,128,1)" fg:x="919" fg:w="2"/><text x="70.8337%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6605%" y="437" width="0.0768%" height="15" fill="rgb(245,185,29)" fg:x="920" fg:w="1"/><text x="70.9105%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6605%" y="421" width="0.0768%" height="15" fill="rgb(243,161,2)" fg:x="920" fg:w="1"/><text x="70.9105%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.6605%" y="405" width="0.0768%" height="15" fill="rgb(249,215,17)" fg:x="920" fg:w="1"/><text x="70.9105%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.6605%" y="389" width="0.0768%" height="15" fill="rgb(237,67,11)" fg:x="920" fg:w="1"/><text x="70.9105%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.6605%" y="373" width="0.0768%" height="15" fill="rgb(239,17,24)" fg:x="920" fg:w="1"/><text x="70.9105%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.6605%" y="357" width="0.0768%" height="15" fill="rgb(215,97,29)" fg:x="920" fg:w="1"/><text x="70.9105%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.6605%" y="341" width="0.0768%" height="15" fill="rgb(253,228,42)" fg:x="920" fg:w="1"/><text x="70.9105%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.6605%" y="325" width="0.0768%" height="15" fill="rgb(240,85,2)" fg:x="920" fg:w="1"/><text x="70.9105%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.6605%" y="309" width="0.0768%" height="15" fill="rgb(214,155,4)" fg:x="920" fg:w="1"/><text x="70.9105%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.6605%" y="293" width="0.0768%" height="15" fill="rgb(247,120,22)" fg:x="920" fg:w="1"/><text x="70.9105%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.6605%" y="277" width="0.0768%" height="15" fill="rgb(211,208,6)" fg:x="920" fg:w="1"/><text x="70.9105%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.6605%" y="261" width="0.0768%" height="15" fill="rgb(235,99,41)" fg:x="920" fg:w="1"/><text x="70.9105%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="70.5837%" y="501" width="0.2304%" height="15" fill="rgb(223,28,8)" fg:x="919" fg:w="3"/><text x="70.8337%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="70.5837%" y="485" width="0.2304%" height="15" fill="rgb(212,71,20)" fg:x="919" fg:w="3"/><text x="70.8337%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="70.5837%" y="469" width="0.2304%" height="15" fill="rgb(206,85,3)" fg:x="919" fg:w="3"/><text x="70.8337%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7373%" y="453" width="0.0768%" height="15" fill="rgb(244,180,11)" fg:x="921" fg:w="1"/><text x="70.9873%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7373%" y="437" width="0.0768%" height="15" fill="rgb(223,16,21)" fg:x="921" fg:w="1"/><text x="70.9873%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7373%" y="421" width="0.0768%" height="15" fill="rgb(238,85,42)" fg:x="921" fg:w="1"/><text x="70.9873%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7373%" y="405" width="0.0768%" height="15" fill="rgb(205,85,8)" fg:x="921" fg:w="1"/><text x="70.9873%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7373%" y="389" width="0.0768%" height="15" fill="rgb(217,190,15)" fg:x="921" fg:w="1"/><text x="70.9873%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7373%" y="373" width="0.0768%" height="15" fill="rgb(243,192,23)" fg:x="921" fg:w="1"/><text x="70.9873%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7373%" y="357" width="0.0768%" height="15" fill="rgb(223,220,37)" fg:x="921" fg:w="1"/><text x="70.9873%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7373%" y="341" width="0.0768%" height="15" fill="rgb(208,41,17)" fg:x="921" fg:w="1"/><text x="70.9873%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7373%" y="325" width="0.0768%" height="15" fill="rgb(224,188,7)" fg:x="921" fg:w="1"/><text x="70.9873%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7373%" y="309" width="0.0768%" height="15" fill="rgb(236,16,50)" fg:x="921" fg:w="1"/><text x="70.9873%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7373%" y="293" width="0.0768%" height="15" fill="rgb(238,6,24)" fg:x="921" fg:w="1"/><text x="70.9873%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7373%" y="277" width="0.0768%" height="15" fill="rgb(253,67,45)" fg:x="921" fg:w="1"/><text x="70.9873%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8141%" y="469" width="0.0768%" height="15" fill="rgb(210,89,32)" fg:x="922" fg:w="1"/><text x="71.0641%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.8909%" y="437" width="0.0768%" height="15" fill="rgb(208,89,9)" fg:x="923" fg:w="1"/><text x="71.1409%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.15%)</title><rect x="70.9677%" y="405" width="0.1536%" height="15" fill="rgb(222,180,44)" fg:x="924" fg:w="2"/><text x="71.2177%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.15%)</title><rect x="70.9677%" y="389" width="0.1536%" height="15" fill="rgb(250,181,46)" fg:x="924" fg:w="2"/><text x="71.2177%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.69%)</title><rect x="70.5069%" y="549" width="0.6912%" height="15" fill="rgb(210,190,26)" fg:x="918" fg:w="9"/><text x="70.7569%" y="559.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.69%)</title><rect x="70.5069%" y="533" width="0.6912%" height="15" fill="rgb(253,49,13)" fg:x="918" fg:w="9"/><text x="70.7569%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.69%)</title><rect x="70.5069%" y="517" width="0.6912%" height="15" fill="rgb(240,184,42)" fg:x="918" fg:w="9"/><text x="70.7569%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.38%)</title><rect x="70.8141%" y="501" width="0.3840%" height="15" fill="rgb(246,59,37)" fg:x="922" fg:w="5"/><text x="71.0641%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="70.8141%" y="485" width="0.3840%" height="15" fill="rgb(207,134,54)" fg:x="922" fg:w="5"/><text x="71.0641%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="70.8909%" y="469" width="0.3072%" height="15" fill="rgb(250,122,24)" fg:x="923" fg:w="4"/><text x="71.1409%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="70.8909%" y="453" width="0.3072%" height="15" fill="rgb(239,206,3)" fg:x="923" fg:w="4"/><text x="71.1409%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.23%)</title><rect x="70.9677%" y="437" width="0.2304%" height="15" fill="rgb(253,220,32)" fg:x="924" fg:w="3"/><text x="71.2177%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="70.9677%" y="421" width="0.2304%" height="15" fill="rgb(209,217,48)" fg:x="924" fg:w="3"/><text x="71.2177%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.1214%" y="405" width="0.0768%" height="15" fill="rgb(242,91,39)" fg:x="926" fg:w="1"/><text x="71.3714%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.1214%" y="389" width="0.0768%" height="15" fill="rgb(228,4,13)" fg:x="926" fg:w="1"/><text x="71.3714%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.84%)</title><rect x="70.5069%" y="581" width="0.8449%" height="15" fill="rgb(223,133,4)" fg:x="918" fg:w="11"/><text x="70.7569%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.84%)</title><rect x="70.5069%" y="565" width="0.8449%" height="15" fill="rgb(215,105,30)" fg:x="918" fg:w="11"/><text x="70.7569%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="71.1982%" y="549" width="0.1536%" height="15" fill="rgb(230,9,4)" fg:x="927" fg:w="2"/><text x="71.4482%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="71.1982%" y="533" width="0.1536%" height="15" fill="rgb(248,15,2)" fg:x="927" fg:w="2"/><text x="71.4482%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="71.1982%" y="517" width="0.1536%" height="15" fill="rgb(208,210,22)" fg:x="927" fg:w="2"/><text x="71.4482%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2750%" y="501" width="0.0768%" height="15" fill="rgb(208,112,41)" fg:x="928" fg:w="1"/><text x="71.5250%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2750%" y="485" width="0.0768%" height="15" fill="rgb(232,83,14)" fg:x="928" fg:w="1"/><text x="71.5250%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2750%" y="469" width="0.0768%" height="15" fill="rgb(229,65,11)" fg:x="928" fg:w="1"/><text x="71.5250%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2750%" y="453" width="0.0768%" height="15" fill="rgb(228,126,24)" fg:x="928" fg:w="1"/><text x="71.5250%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2750%" y="437" width="0.0768%" height="15" fill="rgb(218,66,33)" fg:x="928" fg:w="1"/><text x="71.5250%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2750%" y="421" width="0.0768%" height="15" fill="rgb(251,49,52)" fg:x="928" fg:w="1"/><text x="71.5250%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.2750%" y="405" width="0.0768%" height="15" fill="rgb(219,46,37)" fg:x="928" fg:w="1"/><text x="71.5250%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.2750%" y="389" width="0.0768%" height="15" fill="rgb(213,53,49)" fg:x="928" fg:w="1"/><text x="71.5250%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.2750%" y="373" width="0.0768%" height="15" fill="rgb(214,134,1)" fg:x="928" fg:w="1"/><text x="71.5250%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.2750%" y="357" width="0.0768%" height="15" fill="rgb(208,139,43)" fg:x="928" fg:w="1"/><text x="71.5250%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.2750%" y="341" width="0.0768%" height="15" fill="rgb(231,105,35)" fg:x="928" fg:w="1"/><text x="71.5250%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.2750%" y="325" width="0.0768%" height="15" fill="rgb(247,189,9)" fg:x="928" fg:w="1"/><text x="71.5250%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.2750%" y="309" width="0.0768%" height="15" fill="rgb(252,48,51)" fg:x="928" fg:w="1"/><text x="71.5250%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.2750%" y="293" width="0.0768%" height="15" fill="rgb(209,121,1)" fg:x="928" fg:w="1"/><text x="71.5250%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.2750%" y="277" width="0.0768%" height="15" fill="rgb(231,40,26)" fg:x="928" fg:w="1"/><text x="71.5250%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.2750%" y="261" width="0.0768%" height="15" fill="rgb(251,8,13)" fg:x="928" fg:w="1"/><text x="71.5250%" y="271.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4286%" y="565" width="0.0768%" height="15" fill="rgb(231,110,2)" fg:x="930" fg:w="1"/><text x="71.6786%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4286%" y="549" width="0.0768%" height="15" fill="rgb(216,153,22)" fg:x="930" fg:w="1"/><text x="71.6786%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4286%" y="533" width="0.0768%" height="15" fill="rgb(249,116,49)" fg:x="930" fg:w="1"/><text x="71.6786%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.4286%" y="517" width="0.0768%" height="15" fill="rgb(230,89,2)" fg:x="930" fg:w="1"/><text x="71.6786%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.4286%" y="501" width="0.0768%" height="15" fill="rgb(231,125,23)" fg:x="930" fg:w="1"/><text x="71.6786%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.4286%" y="485" width="0.0768%" height="15" fill="rgb(212,217,18)" fg:x="930" fg:w="1"/><text x="71.6786%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.4286%" y="469" width="0.0768%" height="15" fill="rgb(210,21,33)" fg:x="930" fg:w="1"/><text x="71.6786%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.4286%" y="453" width="0.0768%" height="15" fill="rgb(241,97,9)" fg:x="930" fg:w="1"/><text x="71.6786%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.4286%" y="437" width="0.0768%" height="15" fill="rgb(221,35,31)" fg:x="930" fg:w="1"/><text x="71.6786%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.4286%" y="421" width="0.0768%" height="15" fill="rgb(251,23,23)" fg:x="930" fg:w="1"/><text x="71.6786%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.4286%" y="405" width="0.0768%" height="15" fill="rgb(227,165,2)" fg:x="930" fg:w="1"/><text x="71.6786%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.4286%" y="389" width="0.0768%" height="15" fill="rgb(242,24,2)" fg:x="930" fg:w="1"/><text x="71.6786%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4286%" y="373" width="0.0768%" height="15" fill="rgb(242,138,51)" fg:x="930" fg:w="1"/><text x="71.6786%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.6590%" y="517" width="0.0768%" height="15" fill="rgb(220,219,5)" fg:x="933" fg:w="1"/><text x="71.9090%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="71.5822%" y="549" width="0.2304%" height="15" fill="rgb(247,53,29)" fg:x="932" fg:w="3"/><text x="71.8322%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="71.5822%" y="533" width="0.2304%" height="15" fill="rgb(233,43,39)" fg:x="932" fg:w="3"/><text x="71.8322%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7358%" y="517" width="0.0768%" height="15" fill="rgb(230,128,54)" fg:x="934" fg:w="1"/><text x="71.9858%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7358%" y="501" width="0.0768%" height="15" fill="rgb(218,20,12)" fg:x="934" fg:w="1"/><text x="71.9858%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7358%" y="485" width="0.0768%" height="15" fill="rgb(206,51,14)" fg:x="934" fg:w="1"/><text x="71.9858%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7358%" y="469" width="0.0768%" height="15" fill="rgb(223,16,35)" fg:x="934" fg:w="1"/><text x="71.9858%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.7358%" y="453" width="0.0768%" height="15" fill="rgb(226,165,37)" fg:x="934" fg:w="1"/><text x="71.9858%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.7358%" y="437" width="0.0768%" height="15" fill="rgb(240,26,21)" fg:x="934" fg:w="1"/><text x="71.9858%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.7358%" y="421" width="0.0768%" height="15" fill="rgb(240,72,46)" fg:x="934" fg:w="1"/><text x="71.9858%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.7358%" y="405" width="0.0768%" height="15" fill="rgb(211,33,41)" fg:x="934" fg:w="1"/><text x="71.9858%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.7358%" y="389" width="0.0768%" height="15" fill="rgb(224,157,46)" fg:x="934" fg:w="1"/><text x="71.9858%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.7358%" y="373" width="0.0768%" height="15" fill="rgb(223,59,19)" fg:x="934" fg:w="1"/><text x="71.9858%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.7358%" y="357" width="0.0768%" height="15" fill="rgb(239,187,1)" fg:x="934" fg:w="1"/><text x="71.9858%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.7358%" y="341" width="0.0768%" height="15" fill="rgb(226,95,9)" fg:x="934" fg:w="1"/><text x="71.9858%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.7358%" y="325" width="0.0768%" height="15" fill="rgb(234,61,54)" fg:x="934" fg:w="1"/><text x="71.9858%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7358%" y="309" width="0.0768%" height="15" fill="rgb(205,209,47)" fg:x="934" fg:w="1"/><text x="71.9858%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="71.8126%" y="533" width="0.0768%" height="15" fill="rgb(228,7,43)" fg:x="935" fg:w="1"/><text x="72.0626%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.8126%" y="517" width="0.0768%" height="15" fill="rgb(240,217,52)" fg:x="935" fg:w="1"/><text x="72.0626%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="71.8126%" y="501" width="0.0768%" height="15" fill="rgb(211,178,21)" fg:x="935" fg:w="1"/><text x="72.0626%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="71.8126%" y="485" width="0.0768%" height="15" fill="rgb(205,25,34)" fg:x="935" fg:w="1"/><text x="72.0626%" y="495.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="71.8126%" y="469" width="0.0768%" height="15" fill="rgb(209,57,11)" fg:x="935" fg:w="1"/><text x="72.0626%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.15%)</title><rect x="71.8126%" y="549" width="0.1536%" height="15" fill="rgb(221,99,2)" fg:x="935" fg:w="2"/><text x="72.0626%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="71.8894%" y="533" width="0.0768%" height="15" fill="rgb(232,79,22)" fg:x="936" fg:w="1"/><text x="72.1394%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="71.9662%" y="549" width="0.0768%" height="15" fill="rgb(221,145,32)" fg:x="937" fg:w="1"/><text x="72.2162%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.9662%" y="533" width="0.0768%" height="15" fill="rgb(236,133,36)" fg:x="937" fg:w="1"/><text x="72.2162%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9662%" y="517" width="0.0768%" height="15" fill="rgb(208,224,44)" fg:x="937" fg:w="1"/><text x="72.2162%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="71.9662%" y="501" width="0.0768%" height="15" fill="rgb(235,143,15)" fg:x="937" fg:w="1"/><text x="72.2162%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.1198%" y="517" width="0.0768%" height="15" fill="rgb(249,83,27)" fg:x="939" fg:w="1"/><text x="72.3698%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1198%" y="501" width="0.0768%" height="15" fill="rgb(238,226,19)" fg:x="939" fg:w="1"/><text x="72.3698%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (12 samples, 0.92%)</title><rect x="71.3518%" y="581" width="0.9217%" height="15" fill="rgb(226,206,27)" fg:x="929" fg:w="12"/><text x="71.6018%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.77%)</title><rect x="71.5054%" y="565" width="0.7680%" height="15" fill="rgb(251,182,9)" fg:x="931" fg:w="10"/><text x="71.7554%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="72.0430%" y="549" width="0.2304%" height="15" fill="rgb(212,140,41)" fg:x="938" fg:w="3"/><text x="72.2930%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="72.0430%" y="533" width="0.2304%" height="15" fill="rgb(220,106,18)" fg:x="938" fg:w="3"/><text x="72.2930%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="72.1966%" y="517" width="0.0768%" height="15" fill="rgb(252,46,41)" fg:x="940" fg:w="1"/><text x="72.4466%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="72.1966%" y="501" width="0.0768%" height="15" fill="rgb(209,222,15)" fg:x="940" fg:w="1"/><text x="72.4466%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="72.1966%" y="485" width="0.0768%" height="15" fill="rgb(233,83,50)" fg:x="940" fg:w="1"/><text x="72.4466%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.3502%" y="533" width="0.0768%" height="15" fill="rgb(205,212,0)" fg:x="942" fg:w="1"/><text x="72.6002%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3502%" y="517" width="0.0768%" height="15" fill="rgb(235,117,51)" fg:x="942" fg:w="1"/><text x="72.6002%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3502%" y="501" width="0.0768%" height="15" fill="rgb(233,133,48)" fg:x="942" fg:w="1"/><text x="72.6002%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.3502%" y="485" width="0.0768%" height="15" fill="rgb(219,3,2)" fg:x="942" fg:w="1"/><text x="72.6002%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.3502%" y="469" width="0.0768%" height="15" fill="rgb(225,80,52)" fg:x="942" fg:w="1"/><text x="72.6002%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.3502%" y="453" width="0.0768%" height="15" fill="rgb(235,195,42)" fg:x="942" fg:w="1"/><text x="72.6002%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.3502%" y="437" width="0.0768%" height="15" fill="rgb(240,207,46)" fg:x="942" fg:w="1"/><text x="72.6002%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.3502%" y="421" width="0.0768%" height="15" fill="rgb(236,112,50)" fg:x="942" fg:w="1"/><text x="72.6002%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.46%)</title><rect x="72.2734%" y="549" width="0.4608%" height="15" fill="rgb(249,151,27)" fg:x="941" fg:w="6"/><text x="72.5234%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="72.4270%" y="533" width="0.3072%" height="15" fill="rgb(253,223,52)" fg:x="943" fg:w="4"/><text x="72.6770%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="72.5038%" y="517" width="0.2304%" height="15" fill="rgb(215,55,33)" fg:x="944" fg:w="3"/><text x="72.7538%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="72.5038%" y="501" width="0.2304%" height="15" fill="rgb(207,24,17)" fg:x="944" fg:w="3"/><text x="72.7538%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="72.5038%" y="485" width="0.2304%" height="15" fill="rgb(218,169,32)" fg:x="944" fg:w="3"/><text x="72.7538%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.23%)</title><rect x="72.5038%" y="469" width="0.2304%" height="15" fill="rgb(209,210,6)" fg:x="944" fg:w="3"/><text x="72.7538%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.23%)</title><rect x="72.5038%" y="453" width="0.2304%" height="15" fill="rgb(225,208,8)" fg:x="944" fg:w="3"/><text x="72.7538%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.23%)</title><rect x="72.5038%" y="437" width="0.2304%" height="15" fill="rgb(238,14,32)" fg:x="944" fg:w="3"/><text x="72.7538%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="72.5038%" y="421" width="0.2304%" height="15" fill="rgb(211,137,3)" fg:x="944" fg:w="3"/><text x="72.7538%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="72.5038%" y="405" width="0.2304%" height="15" fill="rgb(207,171,19)" fg:x="944" fg:w="3"/><text x="72.7538%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.23%)</title><rect x="72.5038%" y="389" width="0.2304%" height="15" fill="rgb(250,80,8)" fg:x="944" fg:w="3"/><text x="72.7538%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.23%)</title><rect x="72.5038%" y="373" width="0.2304%" height="15" fill="rgb(209,103,53)" fg:x="944" fg:w="3"/><text x="72.7538%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.23%)</title><rect x="72.5038%" y="357" width="0.2304%" height="15" fill="rgb(233,198,10)" fg:x="944" fg:w="3"/><text x="72.7538%" y="367.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.23%)</title><rect x="72.5038%" y="341" width="0.2304%" height="15" fill="rgb(236,125,25)" fg:x="944" fg:w="3"/><text x="72.7538%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="72.5038%" y="325" width="0.2304%" height="15" fill="rgb(254,182,48)" fg:x="944" fg:w="3"/><text x="72.7538%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.7343%" y="517" width="0.0768%" height="15" fill="rgb(216,108,44)" fg:x="947" fg:w="1"/><text x="72.9843%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.8111%" y="517" width="0.0768%" height="15" fill="rgb(222,72,39)" fg:x="948" fg:w="1"/><text x="73.0611%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.8879%" y="501" width="0.0768%" height="15" fill="rgb(252,70,39)" fg:x="949" fg:w="1"/><text x="73.1379%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="73.1183%" y="469" width="0.1536%" height="15" fill="rgb(243,99,34)" fg:x="952" fg:w="2"/><text x="73.3683%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (8 samples, 0.61%)</title><rect x="72.7343%" y="549" width="0.6144%" height="15" fill="rgb(252,109,12)" fg:x="947" fg:w="8"/><text x="72.9843%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.61%)</title><rect x="72.7343%" y="533" width="0.6144%" height="15" fill="rgb(211,186,10)" fg:x="947" fg:w="8"/><text x="72.9843%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.46%)</title><rect x="72.8879%" y="517" width="0.4608%" height="15" fill="rgb(246,90,8)" fg:x="949" fg:w="6"/><text x="73.1379%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5 samples, 0.38%)</title><rect x="72.9647%" y="501" width="0.3840%" height="15" fill="rgb(226,91,24)" fg:x="950" fg:w="5"/><text x="73.2147%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.38%)</title><rect x="72.9647%" y="485" width="0.3840%" height="15" fill="rgb(216,28,44)" fg:x="950" fg:w="5"/><text x="73.2147%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.2719%" y="469" width="0.0768%" height="15" fill="rgb(229,36,0)" fg:x="954" fg:w="1"/><text x="73.5219%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.15%)</title><rect x="73.3487%" y="549" width="0.1536%" height="15" fill="rgb(245,97,18)" fg:x="955" fg:w="2"/><text x="73.5987%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.4255%" y="533" width="0.0768%" height="15" fill="rgb(241,97,54)" fg:x="956" fg:w="1"/><text x="73.6755%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5023%" y="549" width="0.0768%" height="15" fill="rgb(234,125,17)" fg:x="957" fg:w="1"/><text x="73.7523%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.5023%" y="533" width="0.0768%" height="15" fill="rgb(228,172,39)" fg:x="957" fg:w="1"/><text x="73.7523%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (18 samples, 1.38%)</title><rect x="72.2734%" y="581" width="1.3825%" height="15" fill="rgb(227,169,1)" fg:x="941" fg:w="18"/><text x="72.5234%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (18 samples, 1.38%)</title><rect x="72.2734%" y="565" width="1.3825%" height="15" fill="rgb(206,13,35)" fg:x="941" fg:w="18"/><text x="72.5234%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5791%" y="549" width="0.0768%" height="15" fill="rgb(211,117,30)" fg:x="958" fg:w="1"/><text x="73.8291%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.5791%" y="533" width="0.0768%" height="15" fill="rgb(230,198,4)" fg:x="958" fg:w="1"/><text x="73.8291%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5791%" y="517" width="0.0768%" height="15" fill="rgb(213,87,54)" fg:x="958" fg:w="1"/><text x="73.8291%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.5791%" y="501" width="0.0768%" height="15" fill="rgb(248,43,22)" fg:x="958" fg:w="1"/><text x="73.8291%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.5791%" y="485" width="0.0768%" height="15" fill="rgb(213,175,48)" fg:x="958" fg:w="1"/><text x="73.8291%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.6559%" y="469" width="0.0768%" height="15" fill="rgb(252,55,9)" fg:x="959" fg:w="1"/><text x="73.9059%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.6559%" y="453" width="0.0768%" height="15" fill="rgb(231,72,33)" fg:x="959" fg:w="1"/><text x="73.9059%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.6559%" y="437" width="0.0768%" height="15" fill="rgb(213,2,54)" fg:x="959" fg:w="1"/><text x="73.9059%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.6559%" y="421" width="0.0768%" height="15" fill="rgb(208,88,25)" fg:x="959" fg:w="1"/><text x="73.9059%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.6559%" y="405" width="0.0768%" height="15" fill="rgb(215,117,13)" fg:x="959" fg:w="1"/><text x="73.9059%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.6559%" y="389" width="0.0768%" height="15" fill="rgb(243,147,21)" fg:x="959" fg:w="1"/><text x="73.9059%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.6559%" y="373" width="0.0768%" height="15" fill="rgb(208,215,36)" fg:x="959" fg:w="1"/><text x="73.9059%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.6559%" y="357" width="0.0768%" height="15" fill="rgb(238,187,24)" fg:x="959" fg:w="1"/><text x="73.9059%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.6559%" y="341" width="0.0768%" height="15" fill="rgb(214,173,11)" fg:x="959" fg:w="1"/><text x="73.9059%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.6559%" y="325" width="0.0768%" height="15" fill="rgb(222,71,20)" fg:x="959" fg:w="1"/><text x="73.9059%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.6559%" y="309" width="0.0768%" height="15" fill="rgb(242,125,4)" fg:x="959" fg:w="1"/><text x="73.9059%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.6559%" y="293" width="0.0768%" height="15" fill="rgb(217,101,52)" fg:x="959" fg:w="1"/><text x="73.9059%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.6559%" y="277" width="0.0768%" height="15" fill="rgb(223,2,50)" fg:x="959" fg:w="1"/><text x="73.9059%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6559%" y="261" width="0.0768%" height="15" fill="rgb(225,197,9)" fg:x="959" fg:w="1"/><text x="73.9059%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.7327%" y="389" width="0.0768%" height="15" fill="rgb(234,76,27)" fg:x="960" fg:w="1"/><text x="73.9827%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.7327%" y="373" width="0.0768%" height="15" fill="rgb(213,161,26)" fg:x="960" fg:w="1"/><text x="73.9827%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.7327%" y="357" width="0.0768%" height="15" fill="rgb(210,228,2)" fg:x="960" fg:w="1"/><text x="73.9827%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.7327%" y="341" width="0.0768%" height="15" fill="rgb(235,4,16)" fg:x="960" fg:w="1"/><text x="73.9827%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.7327%" y="325" width="0.0768%" height="15" fill="rgb(235,83,42)" fg:x="960" fg:w="1"/><text x="73.9827%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.7327%" y="309" width="0.0768%" height="15" fill="rgb(207,116,39)" fg:x="960" fg:w="1"/><text x="73.9827%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7327%" y="293" width="0.0768%" height="15" fill="rgb(253,206,9)" fg:x="960" fg:w="1"/><text x="73.9827%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="73.6559%" y="485" width="0.2304%" height="15" fill="rgb(234,32,47)" fg:x="959" fg:w="3"/><text x="73.9059%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="73.7327%" y="469" width="0.1536%" height="15" fill="rgb(247,40,39)" fg:x="960" fg:w="2"/><text x="73.9827%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="73.7327%" y="453" width="0.1536%" height="15" fill="rgb(236,199,13)" fg:x="960" fg:w="2"/><text x="73.9827%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="73.7327%" y="437" width="0.1536%" height="15" fill="rgb(240,127,44)" fg:x="960" fg:w="2"/><text x="73.9827%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="73.7327%" y="421" width="0.1536%" height="15" fill="rgb(248,220,47)" fg:x="960" fg:w="2"/><text x="73.9827%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="73.7327%" y="405" width="0.1536%" height="15" fill="rgb(240,78,9)" fg:x="960" fg:w="2"/><text x="73.9827%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="73.8095%" y="389" width="0.0768%" height="15" fill="rgb(245,119,5)" fg:x="961" fg:w="1"/><text x="74.0595%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.8095%" y="373" width="0.0768%" height="15" fill="rgb(238,175,31)" fg:x="961" fg:w="1"/><text x="74.0595%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.8863%" y="485" width="0.0768%" height="15" fill="rgb(232,140,42)" fg:x="962" fg:w="1"/><text x="74.1363%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="73.8863%" y="469" width="0.0768%" height="15" fill="rgb(218,179,7)" fg:x="962" fg:w="1"/><text x="74.1363%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.38%)</title><rect x="73.6559%" y="533" width="0.3840%" height="15" fill="rgb(232,79,27)" fg:x="959" fg:w="5"/><text x="73.9059%" y="543.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.38%)</title><rect x="73.6559%" y="517" width="0.3840%" height="15" fill="rgb(247,11,19)" fg:x="959" fg:w="5"/><text x="73.9059%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.38%)</title><rect x="73.6559%" y="501" width="0.3840%" height="15" fill="rgb(216,171,54)" fg:x="959" fg:w="5"/><text x="73.9059%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9631%" y="485" width="0.0768%" height="15" fill="rgb(233,158,36)" fg:x="963" fg:w="1"/><text x="74.2131%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.9631%" y="469" width="0.0768%" height="15" fill="rgb(215,48,47)" fg:x="963" fg:w="1"/><text x="74.2131%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9631%" y="453" width="0.0768%" height="15" fill="rgb(230,223,15)" fg:x="963" fg:w="1"/><text x="74.2131%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9631%" y="437" width="0.0768%" height="15" fill="rgb(234,49,19)" fg:x="963" fg:w="1"/><text x="74.2131%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9631%" y="421" width="0.0768%" height="15" fill="rgb(232,89,25)" fg:x="963" fg:w="1"/><text x="74.2131%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9631%" y="405" width="0.0768%" height="15" fill="rgb(237,206,28)" fg:x="963" fg:w="1"/><text x="74.2131%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9631%" y="389" width="0.0768%" height="15" fill="rgb(249,68,37)" fg:x="963" fg:w="1"/><text x="74.2131%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.0399%" y="437" width="0.0768%" height="15" fill="rgb(226,99,43)" fg:x="964" fg:w="1"/><text x="74.2899%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.0399%" y="421" width="0.0768%" height="15" fill="rgb(216,46,28)" fg:x="964" fg:w="1"/><text x="74.2899%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0399%" y="405" width="0.0768%" height="15" fill="rgb(216,33,9)" fg:x="964" fg:w="1"/><text x="74.2899%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.54%)</title><rect x="73.6559%" y="565" width="0.5376%" height="15" fill="rgb(216,129,4)" fg:x="959" fg:w="7"/><text x="73.9059%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.54%)</title><rect x="73.6559%" y="549" width="0.5376%" height="15" fill="rgb(216,106,3)" fg:x="959" fg:w="7"/><text x="73.9059%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="74.0399%" y="533" width="0.1536%" height="15" fill="rgb(217,79,45)" fg:x="964" fg:w="2"/><text x="74.2899%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="74.0399%" y="517" width="0.1536%" height="15" fill="rgb(239,98,13)" fg:x="964" fg:w="2"/><text x="74.2899%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="74.0399%" y="501" width="0.1536%" height="15" fill="rgb(221,115,4)" fg:x="964" fg:w="2"/><text x="74.2899%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="74.0399%" y="485" width="0.1536%" height="15" fill="rgb(215,85,0)" fg:x="964" fg:w="2"/><text x="74.2899%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="74.0399%" y="469" width="0.1536%" height="15" fill="rgb(230,62,15)" fg:x="964" fg:w="2"/><text x="74.2899%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="74.0399%" y="453" width="0.1536%" height="15" fill="rgb(247,162,2)" fg:x="964" fg:w="2"/><text x="74.2899%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.1167%" y="437" width="0.0768%" height="15" fill="rgb(212,112,32)" fg:x="965" fg:w="1"/><text x="74.3667%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.1167%" y="421" width="0.0768%" height="15" fill="rgb(216,137,9)" fg:x="965" fg:w="1"/><text x="74.3667%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.1167%" y="405" width="0.0768%" height="15" fill="rgb(250,149,33)" fg:x="965" fg:w="1"/><text x="74.3667%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.1167%" y="389" width="0.0768%" height="15" fill="rgb(246,124,31)" fg:x="965" fg:w="1"/><text x="74.3667%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.1167%" y="373" width="0.0768%" height="15" fill="rgb(216,210,22)" fg:x="965" fg:w="1"/><text x="74.3667%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.1167%" y="357" width="0.0768%" height="15" fill="rgb(228,128,36)" fg:x="965" fg:w="1"/><text x="74.3667%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.1167%" y="341" width="0.0768%" height="15" fill="rgb(231,41,0)" fg:x="965" fg:w="1"/><text x="74.3667%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.1167%" y="325" width="0.0768%" height="15" fill="rgb(232,61,26)" fg:x="965" fg:w="1"/><text x="74.3667%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.1167%" y="309" width="0.0768%" height="15" fill="rgb(217,60,9)" fg:x="965" fg:w="1"/><text x="74.3667%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.1167%" y="293" width="0.0768%" height="15" fill="rgb(233,41,35)" fg:x="965" fg:w="1"/><text x="74.3667%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.1167%" y="277" width="0.0768%" height="15" fill="rgb(253,139,43)" fg:x="965" fg:w="1"/><text x="74.3667%" y="287.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.61%)</title><rect x="73.6559%" y="581" width="0.6144%" height="15" fill="rgb(245,100,51)" fg:x="959" fg:w="8"/><text x="73.9059%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="74.1935%" y="565" width="0.0768%" height="15" fill="rgb(250,208,18)" fg:x="966" fg:w="1"/><text x="74.4435%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.1935%" y="549" width="0.0768%" height="15" fill="rgb(245,33,2)" fg:x="966" fg:w="1"/><text x="74.4435%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1935%" y="533" width="0.0768%" height="15" fill="rgb(244,171,31)" fg:x="966" fg:w="1"/><text x="74.4435%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3472%" y="565" width="0.0768%" height="15" fill="rgb(229,1,43)" fg:x="968" fg:w="1"/><text x="74.5972%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3472%" y="549" width="0.0768%" height="15" fill="rgb(223,153,28)" fg:x="968" fg:w="1"/><text x="74.5972%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.3472%" y="533" width="0.0768%" height="15" fill="rgb(241,4,46)" fg:x="968" fg:w="1"/><text x="74.5972%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.3472%" y="517" width="0.0768%" height="15" fill="rgb(230,81,11)" fg:x="968" fg:w="1"/><text x="74.5972%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.3472%" y="501" width="0.0768%" height="15" fill="rgb(253,204,39)" fg:x="968" fg:w="1"/><text x="74.5972%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.3472%" y="485" width="0.0768%" height="15" fill="rgb(250,96,8)" fg:x="968" fg:w="1"/><text x="74.5972%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.3472%" y="469" width="0.0768%" height="15" fill="rgb(219,89,54)" fg:x="968" fg:w="1"/><text x="74.5972%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.3472%" y="453" width="0.0768%" height="15" fill="rgb(235,136,39)" fg:x="968" fg:w="1"/><text x="74.5972%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.3472%" y="437" width="0.0768%" height="15" fill="rgb(230,155,37)" fg:x="968" fg:w="1"/><text x="74.5972%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.3472%" y="421" width="0.0768%" height="15" fill="rgb(235,199,50)" fg:x="968" fg:w="1"/><text x="74.5972%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.3472%" y="405" width="0.0768%" height="15" fill="rgb(227,81,32)" fg:x="968" fg:w="1"/><text x="74.5972%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3472%" y="389" width="0.0768%" height="15" fill="rgb(225,6,28)" fg:x="968" fg:w="1"/><text x="74.5972%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (115 samples, 8.83%)</title><rect x="65.6682%" y="613" width="8.8326%" height="15" fill="rgb(207,211,17)" fg:x="855" fg:w="115"/><text x="65.9182%" y="623.50">&lt;plugins_cor..</text></g><g><title>plugins_core::tools::move_between (52 samples, 3.99%)</title><rect x="70.5069%" y="597" width="3.9939%" height="15" fill="rgb(228,31,49)" fg:x="918" fg:w="52"/><text x="70.7569%" y="607.50">plug..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.23%)</title><rect x="74.2704%" y="581" width="0.2304%" height="15" fill="rgb(230,185,3)" fg:x="967" fg:w="3"/><text x="74.5204%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="74.4240%" y="565" width="0.0768%" height="15" fill="rgb(206,167,15)" fg:x="969" fg:w="1"/><text x="74.6740%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.4240%" y="549" width="0.0768%" height="15" fill="rgb(234,2,36)" fg:x="969" fg:w="1"/><text x="74.6740%" y="559.50"></text></g><g><title>kernel::model::base::Kind::new (1 samples, 0.08%)</title><rect x="74.4240%" y="533" width="0.0768%" height="15" fill="rgb(239,160,29)" fg:x="969" fg:w="1"/><text x="74.6740%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (315 samples, 24.19%)</title><rect x="50.4608%" y="805" width="24.1935%" height="15" fill="rgb(236,117,2)" fg:x="657" fg:w="315"/><text x="50.7108%" y="815.50">&lt;engine::session::Session as kernel::ac..</text></g><g><title>kernel::plugins::mw::apply_middleware (313 samples, 24.04%)</title><rect x="50.6144%" y="789" width="24.0399%" height="15" fill="rgb(215,117,37)" fg:x="659" fg:w="313"/><text x="50.8644%" y="799.50">kernel::plugins::mw::apply_middleware</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (313 samples, 24.04%)</title><rect x="50.6144%" y="773" width="24.0399%" height="15" fill="rgb(244,48,36)" fg:x="659" fg:w="313"/><text x="50.8644%" y="783.50">kernel::plugins::mw::MiddlewareNext::h..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (313 samples, 24.04%)</title><rect x="50.6144%" y="757" width="24.0399%" height="15" fill="rgb(223,101,37)" fg:x="659" fg:w="313"/><text x="50.8644%" y="767.50">&lt;engine::session::ExpandSurroundingsMi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (274 samples, 21.04%)</title><rect x="53.6098%" y="741" width="21.0445%" height="15" fill="rgb(205,200,1)" fg:x="698" fg:w="274"/><text x="53.8598%" y="751.50">kernel::plugins::mw::MiddlewareNe..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (274 samples, 21.04%)</title><rect x="53.6098%" y="725" width="21.0445%" height="15" fill="rgb(209,193,20)" fg:x="698" fg:w="274"/><text x="53.8598%" y="735.50">&lt;plugins_dynlib::DynamicMiddlewar..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (273 samples, 20.97%)</title><rect x="53.6866%" y="709" width="20.9677%" height="15" fill="rgb(214,63,13)" fg:x="699" fg:w="273"/><text x="53.9366%" y="719.50">kernel::plugins::mw::MiddlewareNe..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (273 samples, 20.97%)</title><rect x="53.6866%" y="693" width="20.9677%" height="15" fill="rgb(253,113,46)" fg:x="699" fg:w="273"/><text x="53.9366%" y="703.50">core::ops::function::FnOnce::call..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (273 samples, 20.97%)</title><rect x="53.6866%" y="677" width="20.9677%" height="15" fill="rgb(237,103,34)" fg:x="699" fg:w="273"/><text x="53.9366%" y="687.50">kernel::plugins::mw::MiddlewareNe..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (272 samples, 20.89%)</title><rect x="53.7634%" y="661" width="20.8909%" height="15" fill="rgb(223,38,25)" fg:x="700" fg:w="272"/><text x="54.0134%" y="671.50">core::ops::function::FnOnce::call..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (272 samples, 20.89%)</title><rect x="53.7634%" y="645" width="20.8909%" height="15" fill="rgb(251,32,32)" fg:x="700" fg:w="272"/><text x="54.0134%" y="655.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (272 samples, 20.89%)</title><rect x="53.7634%" y="629" width="20.8909%" height="15" fill="rgb(228,65,22)" fg:x="700" fg:w="272"/><text x="54.0134%" y="639.50">&lt;engine::session::state::State as..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.15%)</title><rect x="74.5008%" y="613" width="0.1536%" height="15" fill="rgb(205,11,46)" fg:x="970" fg:w="2"/><text x="74.7508%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.15%)</title><rect x="74.5008%" y="597" width="0.1536%" height="15" fill="rgb(220,35,2)" fg:x="970" fg:w="2"/><text x="74.7508%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.5776%" y="581" width="0.0768%" height="15" fill="rgb(217,151,17)" fg:x="971" fg:w="1"/><text x="74.8276%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.6544%" y="741" width="0.0768%" height="15" fill="rgb(243,227,35)" fg:x="972" fg:w="1"/><text x="74.9044%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.6544%" y="725" width="0.0768%" height="15" fill="rgb(214,0,34)" fg:x="972" fg:w="1"/><text x="74.9044%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.6544%" y="709" width="0.0768%" height="15" fill="rgb(209,42,37)" fg:x="972" fg:w="1"/><text x="74.9044%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6544%" y="693" width="0.0768%" height="15" fill="rgb(251,176,30)" fg:x="972" fg:w="1"/><text x="74.9044%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6544%" y="677" width="0.0768%" height="15" fill="rgb(223,64,40)" fg:x="972" fg:w="1"/><text x="74.9044%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6544%" y="661" width="0.0768%" height="15" fill="rgb(227,180,23)" fg:x="972" fg:w="1"/><text x="74.9044%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6544%" y="645" width="0.0768%" height="15" fill="rgb(220,137,31)" fg:x="972" fg:w="1"/><text x="74.9044%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.6544%" y="629" width="0.0768%" height="15" fill="rgb(245,124,25)" fg:x="972" fg:w="1"/><text x="74.9044%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6544%" y="613" width="0.0768%" height="15" fill="rgb(217,157,5)" fg:x="972" fg:w="1"/><text x="74.9044%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6544%" y="597" width="0.0768%" height="15" fill="rgb(225,59,2)" fg:x="972" fg:w="1"/><text x="74.9044%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6544%" y="581" width="0.0768%" height="15" fill="rgb(220,182,9)" fg:x="972" fg:w="1"/><text x="74.9044%" y="591.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="74.6544%" y="565" width="0.0768%" height="15" fill="rgb(249,54,24)" fg:x="972" fg:w="1"/><text x="74.9044%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.38%)</title><rect x="74.6544%" y="773" width="0.3840%" height="15" fill="rgb(216,89,17)" fg:x="972" fg:w="5"/><text x="74.9044%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.38%)</title><rect x="74.6544%" y="757" width="0.3840%" height="15" fill="rgb(245,20,45)" fg:x="972" fg:w="5"/><text x="74.9044%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="74.7312%" y="741" width="0.3072%" height="15" fill="rgb(230,83,14)" fg:x="973" fg:w="4"/><text x="74.9812%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="74.7312%" y="725" width="0.3072%" height="15" fill="rgb(246,109,11)" fg:x="973" fg:w="4"/><text x="74.9812%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="74.7312%" y="709" width="0.3072%" height="15" fill="rgb(235,85,23)" fg:x="973" fg:w="4"/><text x="74.9812%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="74.7312%" y="693" width="0.3072%" height="15" fill="rgb(215,101,36)" fg:x="973" fg:w="4"/><text x="74.9812%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="74.8080%" y="677" width="0.2304%" height="15" fill="rgb(228,140,31)" fg:x="974" fg:w="3"/><text x="75.0580%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="74.8080%" y="661" width="0.2304%" height="15" fill="rgb(234,162,37)" fg:x="974" fg:w="3"/><text x="75.0580%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="74.8080%" y="645" width="0.2304%" height="15" fill="rgb(221,0,24)" fg:x="974" fg:w="3"/><text x="75.0580%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.23%)</title><rect x="74.8080%" y="629" width="0.2304%" height="15" fill="rgb(230,161,41)" fg:x="974" fg:w="3"/><text x="75.0580%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="74.8080%" y="613" width="0.2304%" height="15" fill="rgb(224,46,24)" fg:x="974" fg:w="3"/><text x="75.0580%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="74.8848%" y="597" width="0.1536%" height="15" fill="rgb(205,59,32)" fg:x="975" fg:w="2"/><text x="75.1348%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.9616%" y="581" width="0.0768%" height="15" fill="rgb(239,31,20)" fg:x="976" fg:w="1"/><text x="75.2116%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0384%" y="709" width="0.0768%" height="15" fill="rgb(233,149,44)" fg:x="977" fg:w="1"/><text x="75.2884%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="75.1152%" y="677" width="0.1536%" height="15" fill="rgb(243,47,26)" fg:x="978" fg:w="2"/><text x="75.3652%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1920%" y="661" width="0.0768%" height="15" fill="rgb(233,107,5)" fg:x="979" fg:w="1"/><text x="75.4420%" y="671.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="75.1920%" y="645" width="0.0768%" height="15" fill="rgb(248,140,33)" fg:x="979" fg:w="1"/><text x="75.4420%" y="655.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="75.1920%" y="629" width="0.0768%" height="15" fill="rgb(228,178,19)" fg:x="979" fg:w="1"/><text x="75.4420%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2688%" y="645" width="0.0768%" height="15" fill="rgb(224,39,49)" fg:x="980" fg:w="1"/><text x="75.5188%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2688%" y="629" width="0.0768%" height="15" fill="rgb(246,56,47)" fg:x="980" fg:w="1"/><text x="75.5188%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2688%" y="613" width="0.0768%" height="15" fill="rgb(220,73,27)" fg:x="980" fg:w="1"/><text x="75.5188%" y="623.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.38%)</title><rect x="75.0384%" y="757" width="0.3840%" height="15" fill="rgb(239,112,21)" fg:x="977" fg:w="5"/><text x="75.2884%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.38%)</title><rect x="75.0384%" y="741" width="0.3840%" height="15" fill="rgb(253,14,51)" fg:x="977" fg:w="5"/><text x="75.2884%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.38%)</title><rect x="75.0384%" y="725" width="0.3840%" height="15" fill="rgb(215,58,12)" fg:x="977" fg:w="5"/><text x="75.2884%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="75.1152%" y="709" width="0.3072%" height="15" fill="rgb(207,181,19)" fg:x="978" fg:w="4"/><text x="75.3652%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="75.1152%" y="693" width="0.3072%" height="15" fill="rgb(211,214,34)" fg:x="978" fg:w="4"/><text x="75.3652%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="75.2688%" y="677" width="0.1536%" height="15" fill="rgb(243,124,39)" fg:x="980" fg:w="2"/><text x="75.5188%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="75.2688%" y="661" width="0.1536%" height="15" fill="rgb(248,135,21)" fg:x="980" fg:w="2"/><text x="75.5188%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3456%" y="645" width="0.0768%" height="15" fill="rgb(245,218,3)" fg:x="981" fg:w="1"/><text x="75.5956%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3456%" y="629" width="0.0768%" height="15" fill="rgb(225,144,22)" fg:x="981" fg:w="1"/><text x="75.5956%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3456%" y="613" width="0.0768%" height="15" fill="rgb(250,90,15)" fg:x="981" fg:w="1"/><text x="75.5956%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.3456%" y="597" width="0.0768%" height="15" fill="rgb(224,64,29)" fg:x="981" fg:w="1"/><text x="75.5956%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3456%" y="581" width="0.0768%" height="15" fill="rgb(217,50,47)" fg:x="981" fg:w="1"/><text x="75.5956%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="75.4992%" y="677" width="0.1536%" height="15" fill="rgb(231,159,47)" fg:x="983" fg:w="2"/><text x="75.7492%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="75.4992%" y="661" width="0.1536%" height="15" fill="rgb(213,89,29)" fg:x="983" fg:w="2"/><text x="75.7492%" y="671.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.5760%" y="645" width="0.0768%" height="15" fill="rgb(243,90,23)" fg:x="984" fg:w="1"/><text x="75.8260%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5760%" y="629" width="0.0768%" height="15" fill="rgb(213,21,6)" fg:x="984" fg:w="1"/><text x="75.8260%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5760%" y="613" width="0.0768%" height="15" fill="rgb(237,139,17)" fg:x="984" fg:w="1"/><text x="75.8260%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.5760%" y="597" width="0.0768%" height="15" fill="rgb(250,147,17)" fg:x="984" fg:w="1"/><text x="75.8260%" y="607.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.5760%" y="581" width="0.0768%" height="15" fill="rgb(212,208,42)" fg:x="984" fg:w="1"/><text x="75.8260%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="75.6528%" y="677" width="0.1536%" height="15" fill="rgb(215,229,40)" fg:x="985" fg:w="2"/><text x="75.9028%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="75.6528%" y="661" width="0.1536%" height="15" fill="rgb(206,204,1)" fg:x="985" fg:w="2"/><text x="75.9028%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.7296%" y="645" width="0.0768%" height="15" fill="rgb(230,62,32)" fg:x="986" fg:w="1"/><text x="75.9796%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.7296%" y="629" width="0.0768%" height="15" fill="rgb(223,22,42)" fg:x="986" fg:w="1"/><text x="75.9796%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.7296%" y="613" width="0.0768%" height="15" fill="rgb(244,6,23)" fg:x="986" fg:w="1"/><text x="75.9796%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="75.8065%" y="613" width="0.0768%" height="15" fill="rgb(240,221,42)" fg:x="987" fg:w="1"/><text x="76.0565%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8065%" y="597" width="0.0768%" height="15" fill="rgb(222,74,7)" fg:x="987" fg:w="1"/><text x="76.0565%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.8065%" y="581" width="0.0768%" height="15" fill="rgb(227,191,38)" fg:x="987" fg:w="1"/><text x="76.0565%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.8065%" y="565" width="0.0768%" height="15" fill="rgb(227,89,34)" fg:x="987" fg:w="1"/><text x="76.0565%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.15%)</title><rect x="75.8065%" y="629" width="0.1536%" height="15" fill="rgb(215,153,25)" fg:x="987" fg:w="2"/><text x="76.0565%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.8833%" y="613" width="0.0768%" height="15" fill="rgb(215,153,46)" fg:x="988" fg:w="1"/><text x="76.1333%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.69%)</title><rect x="75.4224%" y="725" width="0.6912%" height="15" fill="rgb(242,38,52)" fg:x="982" fg:w="9"/><text x="75.6724%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.69%)</title><rect x="75.4224%" y="709" width="0.6912%" height="15" fill="rgb(218,112,4)" fg:x="982" fg:w="9"/><text x="75.6724%" y="719.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.61%)</title><rect x="75.4992%" y="693" width="0.6144%" height="15" fill="rgb(231,210,31)" fg:x="983" fg:w="8"/><text x="75.7492%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="75.8065%" y="677" width="0.3072%" height="15" fill="rgb(245,223,36)" fg:x="987" fg:w="4"/><text x="76.0565%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="75.8065%" y="661" width="0.3072%" height="15" fill="rgb(246,41,2)" fg:x="987" fg:w="4"/><text x="76.0565%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.31%)</title><rect x="75.8065%" y="645" width="0.3072%" height="15" fill="rgb(227,51,31)" fg:x="987" fg:w="4"/><text x="76.0565%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="75.9601%" y="629" width="0.1536%" height="15" fill="rgb(222,95,26)" fg:x="989" fg:w="2"/><text x="76.2101%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="75.9601%" y="613" width="0.1536%" height="15" fill="rgb(224,190,1)" fg:x="989" fg:w="2"/><text x="76.2101%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.0369%" y="597" width="0.0768%" height="15" fill="rgb(209,90,42)" fg:x="990" fg:w="1"/><text x="76.2869%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (15 samples, 1.15%)</title><rect x="75.0384%" y="773" width="1.1521%" height="15" fill="rgb(232,225,50)" fg:x="977" fg:w="15"/><text x="75.2884%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.77%)</title><rect x="75.4224%" y="757" width="0.7680%" height="15" fill="rgb(239,89,47)" fg:x="982" fg:w="10"/><text x="75.6724%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.77%)</title><rect x="75.4224%" y="741" width="0.7680%" height="15" fill="rgb(230,212,50)" fg:x="982" fg:w="10"/><text x="75.6724%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.1137%" y="725" width="0.0768%" height="15" fill="rgb(252,1,27)" fg:x="991" fg:w="1"/><text x="76.3637%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.1137%" y="709" width="0.0768%" height="15" fill="rgb(237,179,41)" fg:x="991" fg:w="1"/><text x="76.3637%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="76.1905%" y="757" width="0.0768%" height="15" fill="rgb(214,151,37)" fg:x="992" fg:w="1"/><text x="76.4405%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.1905%" y="741" width="0.0768%" height="15" fill="rgb(211,74,11)" fg:x="992" fg:w="1"/><text x="76.4405%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (22 samples, 1.69%)</title><rect x="74.6544%" y="805" width="1.6897%" height="15" fill="rgb(242,21,21)" fg:x="972" fg:w="22"/><text x="74.9044%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (22 samples, 1.69%)</title><rect x="74.6544%" y="789" width="1.6897%" height="15" fill="rgb(226,106,43)" fg:x="972" fg:w="22"/><text x="74.9044%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.15%)</title><rect x="76.1905%" y="773" width="0.1536%" height="15" fill="rgb(229,162,39)" fg:x="992" fg:w="2"/><text x="76.4405%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.2673%" y="757" width="0.0768%" height="15" fill="rgb(228,159,25)" fg:x="993" fg:w="1"/><text x="76.5173%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.2673%" y="741" width="0.0768%" height="15" fill="rgb(237,32,23)" fg:x="993" fg:w="1"/><text x="76.5173%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2673%" y="725" width="0.0768%" height="15" fill="rgb(212,35,32)" fg:x="993" fg:w="1"/><text x="76.5173%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2673%" y="709" width="0.0768%" height="15" fill="rgb(215,199,1)" fg:x="993" fg:w="1"/><text x="76.5173%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2673%" y="693" width="0.0768%" height="15" fill="rgb(215,67,13)" fg:x="993" fg:w="1"/><text x="76.5173%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2673%" y="677" width="0.0768%" height="15" fill="rgb(216,20,47)" fg:x="993" fg:w="1"/><text x="76.5173%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.2673%" y="661" width="0.0768%" height="15" fill="rgb(249,183,48)" fg:x="993" fg:w="1"/><text x="76.5173%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.4209%" y="581" width="0.0768%" height="15" fill="rgb(208,86,37)" fg:x="995" fg:w="1"/><text x="76.6709%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.4209%" y="565" width="0.0768%" height="15" fill="rgb(251,192,7)" fg:x="995" fg:w="1"/><text x="76.6709%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.15%)</title><rect x="76.4209%" y="757" width="0.1536%" height="15" fill="rgb(234,196,3)" fg:x="995" fg:w="2"/><text x="76.6709%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.15%)</title><rect x="76.4209%" y="741" width="0.1536%" height="15" fill="rgb(229,150,39)" fg:x="995" fg:w="2"/><text x="76.6709%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="76.4209%" y="725" width="0.1536%" height="15" fill="rgb(226,19,29)" fg:x="995" fg:w="2"/><text x="76.6709%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="76.4209%" y="709" width="0.1536%" height="15" fill="rgb(226,222,2)" fg:x="995" fg:w="2"/><text x="76.6709%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="76.4209%" y="693" width="0.1536%" height="15" fill="rgb(235,85,29)" fg:x="995" fg:w="2"/><text x="76.6709%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="76.4209%" y="677" width="0.1536%" height="15" fill="rgb(237,194,43)" fg:x="995" fg:w="2"/><text x="76.6709%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="76.4209%" y="661" width="0.1536%" height="15" fill="rgb(211,4,42)" fg:x="995" fg:w="2"/><text x="76.6709%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="76.4209%" y="645" width="0.1536%" height="15" fill="rgb(221,80,37)" fg:x="995" fg:w="2"/><text x="76.6709%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="76.4209%" y="629" width="0.1536%" height="15" fill="rgb(222,47,31)" fg:x="995" fg:w="2"/><text x="76.6709%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="76.4209%" y="613" width="0.1536%" height="15" fill="rgb(249,82,52)" fg:x="995" fg:w="2"/><text x="76.6709%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="76.4209%" y="597" width="0.1536%" height="15" fill="rgb(218,203,2)" fg:x="995" fg:w="2"/><text x="76.6709%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4977%" y="581" width="0.0768%" height="15" fill="rgb(210,175,14)" fg:x="996" fg:w="1"/><text x="76.7477%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.4977%" y="565" width="0.0768%" height="15" fill="rgb(216,210,12)" fg:x="996" fg:w="1"/><text x="76.7477%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5745%" y="693" width="0.0768%" height="15" fill="rgb(229,120,18)" fg:x="997" fg:w="1"/><text x="76.8245%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.7281%" y="597" width="0.0768%" height="15" fill="rgb(231,174,12)" fg:x="999" fg:w="1"/><text x="76.9781%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.7281%" y="581" width="0.0768%" height="15" fill="rgb(214,101,53)" fg:x="999" fg:w="1"/><text x="76.9781%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8049%" y="533" width="0.0768%" height="15" fill="rgb(246,89,43)" fg:x="1000" fg:w="1"/><text x="77.0549%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8049%" y="517" width="0.0768%" height="15" fill="rgb(222,9,51)" fg:x="1000" fg:w="1"/><text x="77.0549%" y="527.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.38%)</title><rect x="76.5745%" y="741" width="0.3840%" height="15" fill="rgb(252,221,9)" fg:x="997" fg:w="5"/><text x="76.8245%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.38%)</title><rect x="76.5745%" y="725" width="0.3840%" height="15" fill="rgb(248,28,15)" fg:x="997" fg:w="5"/><text x="76.8245%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.38%)</title><rect x="76.5745%" y="709" width="0.3840%" height="15" fill="rgb(213,54,52)" fg:x="997" fg:w="5"/><text x="76.8245%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="76.6513%" y="693" width="0.3072%" height="15" fill="rgb(240,3,45)" fg:x="998" fg:w="4"/><text x="76.9013%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="76.6513%" y="677" width="0.3072%" height="15" fill="rgb(239,138,24)" fg:x="998" fg:w="4"/><text x="76.9013%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="76.7281%" y="661" width="0.2304%" height="15" fill="rgb(233,45,54)" fg:x="999" fg:w="3"/><text x="76.9781%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="76.7281%" y="645" width="0.2304%" height="15" fill="rgb(220,131,2)" fg:x="999" fg:w="3"/><text x="76.9781%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="76.7281%" y="629" width="0.2304%" height="15" fill="rgb(240,154,36)" fg:x="999" fg:w="3"/><text x="76.9781%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="76.7281%" y="613" width="0.2304%" height="15" fill="rgb(251,221,1)" fg:x="999" fg:w="3"/><text x="76.9781%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="76.8049%" y="597" width="0.1536%" height="15" fill="rgb(225,217,1)" fg:x="1000" fg:w="2"/><text x="77.0549%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="76.8049%" y="581" width="0.1536%" height="15" fill="rgb(241,105,49)" fg:x="1000" fg:w="2"/><text x="77.0549%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="76.8049%" y="565" width="0.1536%" height="15" fill="rgb(215,44,32)" fg:x="1000" fg:w="2"/><text x="77.0549%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="76.8049%" y="549" width="0.1536%" height="15" fill="rgb(213,222,14)" fg:x="1000" fg:w="2"/><text x="77.0549%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.8817%" y="533" width="0.0768%" height="15" fill="rgb(207,99,52)" fg:x="1001" fg:w="1"/><text x="77.1317%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.8817%" y="517" width="0.0768%" height="15" fill="rgb(214,208,52)" fg:x="1001" fg:w="1"/><text x="77.1317%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.8817%" y="501" width="0.0768%" height="15" fill="rgb(244,169,0)" fg:x="1001" fg:w="1"/><text x="77.1317%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.8817%" y="485" width="0.0768%" height="15" fill="rgb(216,193,37)" fg:x="1001" fg:w="1"/><text x="77.1317%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="77.1889%" y="629" width="0.0768%" height="15" fill="rgb(212,158,10)" fg:x="1005" fg:w="1"/><text x="77.4389%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.1889%" y="613" width="0.0768%" height="15" fill="rgb(213,110,20)" fg:x="1005" fg:w="1"/><text x="77.4389%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="77.1889%" y="661" width="0.1536%" height="15" fill="rgb(226,5,42)" fg:x="1005" fg:w="2"/><text x="77.4389%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="77.1889%" y="645" width="0.1536%" height="15" fill="rgb(211,93,8)" fg:x="1005" fg:w="2"/><text x="77.4389%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="77.2657%" y="629" width="0.0768%" height="15" fill="rgb(240,208,12)" fg:x="1006" fg:w="1"/><text x="77.5157%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.2657%" y="613" width="0.0768%" height="15" fill="rgb(233,127,50)" fg:x="1006" fg:w="1"/><text x="77.5157%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.3425%" y="661" width="0.0768%" height="15" fill="rgb(227,199,53)" fg:x="1007" fg:w="1"/><text x="77.5925%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.3425%" y="645" width="0.0768%" height="15" fill="rgb(235,199,10)" fg:x="1007" fg:w="1"/><text x="77.5925%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.3425%" y="629" width="0.0768%" height="15" fill="rgb(228,148,35)" fg:x="1007" fg:w="1"/><text x="77.5925%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.3425%" y="613" width="0.0768%" height="15" fill="rgb(217,87,19)" fg:x="1007" fg:w="1"/><text x="77.5925%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.3425%" y="597" width="0.0768%" height="15" fill="rgb(239,9,32)" fg:x="1007" fg:w="1"/><text x="77.5925%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3425%" y="581" width="0.0768%" height="15" fill="rgb(229,101,29)" fg:x="1007" fg:w="1"/><text x="77.5925%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.46%)</title><rect x="77.1121%" y="709" width="0.4608%" height="15" fill="rgb(208,143,26)" fg:x="1004" fg:w="6"/><text x="77.3621%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.46%)</title><rect x="77.1121%" y="693" width="0.4608%" height="15" fill="rgb(214,10,2)" fg:x="1004" fg:w="6"/><text x="77.3621%" y="703.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.38%)</title><rect x="77.1889%" y="677" width="0.3840%" height="15" fill="rgb(254,203,30)" fg:x="1005" fg:w="5"/><text x="77.4389%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="77.4194%" y="661" width="0.1536%" height="15" fill="rgb(242,45,3)" fg:x="1008" fg:w="2"/><text x="77.6694%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="77.4194%" y="645" width="0.1536%" height="15" fill="rgb(209,146,51)" fg:x="1008" fg:w="2"/><text x="77.6694%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="77.4962%" y="629" width="0.0768%" height="15" fill="rgb(222,80,5)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4962%" y="613" width="0.0768%" height="15" fill="rgb(252,80,35)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.4962%" y="597" width="0.0768%" height="15" fill="rgb(246,125,28)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="77.4962%" y="581" width="0.0768%" height="15" fill="rgb(224,143,51)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4962%" y="565" width="0.0768%" height="15" fill="rgb(205,24,17)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.4962%" y="549" width="0.0768%" height="15" fill="rgb(253,128,30)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="77.4962%" y="533" width="0.0768%" height="15" fill="rgb(214,153,25)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4962%" y="517" width="0.0768%" height="15" fill="rgb(214,4,28)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.4962%" y="501" width="0.0768%" height="15" fill="rgb(235,179,52)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="77.4962%" y="485" width="0.0768%" height="15" fill="rgb(233,27,42)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4962%" y="469" width="0.0768%" height="15" fill="rgb(238,35,25)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.4962%" y="453" width="0.0768%" height="15" fill="rgb(227,44,31)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.4962%" y="437" width="0.0768%" height="15" fill="rgb(232,201,13)" fg:x="1009" fg:w="1"/><text x="77.7462%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.08%)</title><rect x="76.5745%" y="757" width="1.0753%" height="15" fill="rgb(224,172,52)" fg:x="997" fg:w="14"/><text x="76.8245%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.69%)</title><rect x="76.9585%" y="741" width="0.6912%" height="15" fill="rgb(214,27,26)" fg:x="1002" fg:w="9"/><text x="77.2085%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.69%)</title><rect x="76.9585%" y="725" width="0.6912%" height="15" fill="rgb(210,185,52)" fg:x="1002" fg:w="9"/><text x="77.2085%" y="735.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="77.5730%" y="709" width="0.0768%" height="15" fill="rgb(249,59,32)" fg:x="1010" fg:w="1"/><text x="77.8230%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.38%)</title><rect x="76.3441%" y="789" width="1.3825%" height="15" fill="rgb(242,209,18)" fg:x="994" fg:w="18"/><text x="76.5941%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.38%)</title><rect x="76.3441%" y="773" width="1.3825%" height="15" fill="rgb(229,0,18)" fg:x="994" fg:w="18"/><text x="76.5941%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.6498%" y="757" width="0.0768%" height="15" fill="rgb(217,138,29)" fg:x="1011" fg:w="1"/><text x="77.8998%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6498%" y="741" width="0.0768%" height="15" fill="rgb(215,72,42)" fg:x="1011" fg:w="1"/><text x="77.8998%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (20 samples, 1.54%)</title><rect x="76.3441%" y="805" width="1.5361%" height="15" fill="rgb(254,115,11)" fg:x="994" fg:w="20"/><text x="76.5941%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.15%)</title><rect x="77.7266%" y="789" width="0.1536%" height="15" fill="rgb(205,133,39)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.15%)</title><rect x="77.7266%" y="773" width="0.1536%" height="15" fill="rgb(211,36,27)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="757" width="0.1536%" height="15" fill="rgb(221,48,10)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="77.7266%" y="741" width="0.1536%" height="15" fill="rgb(230,172,50)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="725" width="0.1536%" height="15" fill="rgb(249,72,18)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="709" width="0.1536%" height="15" fill="rgb(237,58,48)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="693" width="0.1536%" height="15" fill="rgb(242,123,3)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="77.7266%" y="677" width="0.1536%" height="15" fill="rgb(232,111,32)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="661" width="0.1536%" height="15" fill="rgb(229,108,3)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="645" width="0.1536%" height="15" fill="rgb(222,158,10)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="629" width="0.1536%" height="15" fill="rgb(205,34,49)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="77.7266%" y="613" width="0.1536%" height="15" fill="rgb(232,21,14)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="597" width="0.1536%" height="15" fill="rgb(229,127,44)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="581" width="0.1536%" height="15" fill="rgb(232,171,4)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="77.7266%" y="565" width="0.1536%" height="15" fill="rgb(250,92,16)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="77.7266%" y="549" width="0.1536%" height="15" fill="rgb(230,103,38)" fg:x="1012" fg:w="2"/><text x="77.9766%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.8034%" y="533" width="0.0768%" height="15" fill="rgb(253,167,9)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="77.8034%" y="517" width="0.0768%" height="15" fill="rgb(222,118,11)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="527.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="77.8034%" y="501" width="0.0768%" height="15" fill="rgb(240,202,0)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.8034%" y="485" width="0.0768%" height="15" fill="rgb(236,124,4)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.8034%" y="469" width="0.0768%" height="15" fill="rgb(244,128,18)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.8034%" y="453" width="0.0768%" height="15" fill="rgb(231,206,5)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.8034%" y="437" width="0.0768%" height="15" fill="rgb(237,111,8)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.8034%" y="421" width="0.0768%" height="15" fill="rgb(225,127,3)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.8034%" y="405" width="0.0768%" height="15" fill="rgb(222,85,48)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.8034%" y="389" width="0.0768%" height="15" fill="rgb(221,108,37)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.8034%" y="373" width="0.0768%" height="15" fill="rgb(226,169,36)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.8034%" y="357" width="0.0768%" height="15" fill="rgb(237,76,12)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.8034%" y="341" width="0.0768%" height="15" fill="rgb(210,227,32)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.8034%" y="325" width="0.0768%" height="15" fill="rgb(214,117,20)" fg:x="1013" fg:w="1"/><text x="78.0534%" y="335.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.23%)</title><rect x="77.8802%" y="805" width="0.2304%" height="15" fill="rgb(234,119,41)" fg:x="1014" fg:w="3"/><text x="78.1302%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="77.8802%" y="789" width="0.2304%" height="15" fill="rgb(230,130,47)" fg:x="1014" fg:w="3"/><text x="78.1302%" y="799.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.15%)</title><rect x="77.9570%" y="773" width="0.1536%" height="15" fill="rgb(215,21,41)" fg:x="1015" fg:w="2"/><text x="78.2070%" y="783.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.0338%" y="757" width="0.0768%" height="15" fill="rgb(226,26,53)" fg:x="1016" fg:w="1"/><text x="78.2838%" y="767.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="78.0338%" y="741" width="0.0768%" height="15" fill="rgb(221,92,23)" fg:x="1016" fg:w="1"/><text x="78.2838%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="78.0338%" y="725" width="0.0768%" height="15" fill="rgb(213,156,21)" fg:x="1016" fg:w="1"/><text x="78.2838%" y="735.50"></text></g><g><title>plugins_core::library::parser::word (1 samples, 0.08%)</title><rect x="78.0338%" y="709" width="0.0768%" height="15" fill="rgb(254,166,29)" fg:x="1016" fg:w="1"/><text x="78.2838%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1106%" y="789" width="0.0768%" height="15" fill="rgb(213,71,1)" fg:x="1017" fg:w="1"/><text x="78.3606%" y="799.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.23%)</title><rect x="78.1106%" y="805" width="0.2304%" height="15" fill="rgb(245,8,13)" fg:x="1017" fg:w="3"/><text x="78.3606%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.15%)</title><rect x="78.1874%" y="789" width="0.1536%" height="15" fill="rgb(213,32,32)" fg:x="1018" fg:w="2"/><text x="78.4374%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="78.1874%" y="773" width="0.1536%" height="15" fill="rgb(251,86,50)" fg:x="1018" fg:w="2"/><text x="78.4374%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="78.1874%" y="757" width="0.1536%" height="15" fill="rgb(252,92,41)" fg:x="1018" fg:w="2"/><text x="78.4374%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="78.1874%" y="741" width="0.1536%" height="15" fill="rgb(234,70,35)" fg:x="1018" fg:w="2"/><text x="78.4374%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.2642%" y="725" width="0.0768%" height="15" fill="rgb(210,157,19)" fg:x="1019" fg:w="1"/><text x="78.5142%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::key (3 samples, 0.23%)</title><rect x="78.3410%" y="805" width="0.2304%" height="15" fill="rgb(206,20,45)" fg:x="1020" fg:w="3"/><text x="78.5910%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4946%" y="789" width="0.0768%" height="15" fill="rgb(207,34,7)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4946%" y="773" width="0.0768%" height="15" fill="rgb(253,151,14)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.4946%" y="757" width="0.0768%" height="15" fill="rgb(252,1,18)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.4946%" y="741" width="0.0768%" height="15" fill="rgb(214,77,52)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.4946%" y="725" width="0.0768%" height="15" fill="rgb(254,106,35)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4946%" y="709" width="0.0768%" height="15" fill="rgb(212,67,40)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4946%" y="693" width="0.0768%" height="15" fill="rgb(228,76,23)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.4946%" y="677" width="0.0768%" height="15" fill="rgb(250,198,5)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.4946%" y="661" width="0.0768%" height="15" fill="rgb(209,20,25)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.4946%" y="645" width="0.0768%" height="15" fill="rgb(236,32,4)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.4946%" y="629" width="0.0768%" height="15" fill="rgb(215,31,6)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4946%" y="613" width="0.0768%" height="15" fill="rgb(207,186,49)" fg:x="1022" fg:w="1"/><text x="78.7446%" y="623.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="78.5714%" y="805" width="0.0768%" height="15" fill="rgb(211,212,49)" fg:x="1023" fg:w="1"/><text x="78.8214%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6482%" y="789" width="0.0768%" height="15" fill="rgb(229,51,41)" fg:x="1024" fg:w="1"/><text x="78.8982%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6482%" y="773" width="0.0768%" height="15" fill="rgb(205,225,36)" fg:x="1024" fg:w="1"/><text x="78.8982%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.6482%" y="757" width="0.0768%" height="15" fill="rgb(209,213,45)" fg:x="1024" fg:w="1"/><text x="78.8982%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.6482%" y="741" width="0.0768%" height="15" fill="rgb(219,35,49)" fg:x="1024" fg:w="1"/><text x="78.8982%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.6482%" y="725" width="0.0768%" height="15" fill="rgb(215,205,22)" fg:x="1024" fg:w="1"/><text x="78.8982%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="78.6482%" y="709" width="0.0768%" height="15" fill="rgb(248,204,34)" fg:x="1024" fg:w="1"/><text x="78.8982%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.6482%" y="693" width="0.0768%" height="15" fill="rgb(219,223,31)" fg:x="1024" fg:w="1"/><text x="78.8982%" y="703.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (376 samples, 28.88%)</title><rect x="50.1536%" y="821" width="28.8786%" height="15" fill="rgb(236,14,8)" fg:x="653" fg:w="376"/><text x="50.4036%" y="831.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.38%)</title><rect x="78.6482%" y="805" width="0.3840%" height="15" fill="rgb(243,129,23)" fg:x="1024" fg:w="5"/><text x="78.8982%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.31%)</title><rect x="78.7250%" y="789" width="0.3072%" height="15" fill="rgb(205,204,5)" fg:x="1025" fg:w="4"/><text x="78.9750%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.31%)</title><rect x="78.7250%" y="773" width="0.3072%" height="15" fill="rgb(244,115,32)" fg:x="1025" fg:w="4"/><text x="78.9750%" y="783.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="78.7250%" y="757" width="0.3072%" height="15" fill="rgb(229,123,14)" fg:x="1025" fg:w="4"/><text x="78.9750%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.31%)</title><rect x="78.7250%" y="741" width="0.3072%" height="15" fill="rgb(250,85,1)" fg:x="1025" fg:w="4"/><text x="78.9750%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.31%)</title><rect x="78.7250%" y="725" width="0.3072%" height="15" fill="rgb(209,141,54)" fg:x="1025" fg:w="4"/><text x="78.9750%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.31%)</title><rect x="78.7250%" y="709" width="0.3072%" height="15" fill="rgb(244,107,39)" fg:x="1025" fg:w="4"/><text x="78.9750%" y="719.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="78.7250%" y="693" width="0.3072%" height="15" fill="rgb(230,68,26)" fg:x="1025" fg:w="4"/><text x="78.9750%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="78.8018%" y="677" width="0.2304%" height="15" fill="rgb(220,178,33)" fg:x="1026" fg:w="3"/><text x="79.0518%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.23%)</title><rect x="78.8018%" y="661" width="0.2304%" height="15" fill="rgb(220,77,53)" fg:x="1026" fg:w="3"/><text x="79.0518%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.23%)</title><rect x="78.8018%" y="645" width="0.2304%" height="15" fill="rgb(224,108,19)" fg:x="1026" fg:w="3"/><text x="79.0518%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="78.8018%" y="629" width="0.2304%" height="15" fill="rgb(223,203,27)" fg:x="1026" fg:w="3"/><text x="79.0518%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="78.8018%" y="613" width="0.2304%" height="15" fill="rgb(211,32,46)" fg:x="1026" fg:w="3"/><text x="79.0518%" y="623.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.23%)</title><rect x="78.8018%" y="597" width="0.2304%" height="15" fill="rgb(240,101,27)" fg:x="1026" fg:w="3"/><text x="79.0518%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.23%)</title><rect x="78.8018%" y="581" width="0.2304%" height="15" fill="rgb(217,210,11)" fg:x="1026" fg:w="3"/><text x="79.0518%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="78.8018%" y="565" width="0.2304%" height="15" fill="rgb(236,130,21)" fg:x="1026" fg:w="3"/><text x="79.0518%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="78.8018%" y="549" width="0.2304%" height="15" fill="rgb(250,136,8)" fg:x="1026" fg:w="3"/><text x="79.0518%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="78.9555%" y="533" width="0.0768%" height="15" fill="rgb(243,223,36)" fg:x="1028" fg:w="1"/><text x="79.2055%" y="543.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (1 samples, 0.08%)</title><rect x="78.9555%" y="517" width="0.0768%" height="15" fill="rgb(246,184,8)" fg:x="1028" fg:w="1"/><text x="79.2055%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.0323%" y="805" width="0.0768%" height="15" fill="rgb(222,158,36)" fg:x="1029" fg:w="1"/><text x="79.2823%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,031 samples, 79.19%)</title><rect x="0.0000%" y="869" width="79.1859%" height="15" fill="rgb(210,220,19)" fg:x="0" fg:w="1031"/><text x="0.2500%" y="879.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (1,031 samples, 79.19%)</title><rect x="0.0000%" y="853" width="79.1859%" height="15" fill="rgb(246,44,38)" fg:x="0" fg:w="1031"/><text x="0.2500%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (1,031 samples, 79.19%)</title><rect x="0.0000%" y="837" width="79.1859%" height="15" fill="rgb(246,186,14)" fg:x="0" fg:w="1031"/><text x="0.2500%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.15%)</title><rect x="79.0323%" y="821" width="0.1536%" height="15" fill="rgb(233,193,20)" fg:x="1029" fg:w="2"/><text x="79.2823%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.1091%" y="805" width="0.0768%" height="15" fill="rgb(215,60,5)" fg:x="1030" fg:w="1"/><text x="79.3591%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.1091%" y="789" width="0.0768%" height="15" fill="rgb(207,128,10)" fg:x="1030" fg:w="1"/><text x="79.3591%" y="799.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="79.2627%" y="709" width="0.1536%" height="15" fill="rgb(238,84,54)" fg:x="1032" fg:w="2"/><text x="79.5127%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3395%" y="693" width="0.0768%" height="15" fill="rgb(213,130,11)" fg:x="1033" fg:w="1"/><text x="79.5895%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4163%" y="693" width="0.0768%" height="15" fill="rgb(235,62,9)" fg:x="1034" fg:w="1"/><text x="79.6663%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.38%)</title><rect x="79.1859%" y="757" width="0.3840%" height="15" fill="rgb(222,64,24)" fg:x="1031" fg:w="5"/><text x="79.4359%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.38%)</title><rect x="79.1859%" y="741" width="0.3840%" height="15" fill="rgb(238,193,42)" fg:x="1031" fg:w="5"/><text x="79.4359%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.38%)</title><rect x="79.1859%" y="725" width="0.3840%" height="15" fill="rgb(243,204,46)" fg:x="1031" fg:w="5"/><text x="79.4359%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="79.4163%" y="709" width="0.1536%" height="15" fill="rgb(243,196,11)" fg:x="1034" fg:w="2"/><text x="79.6663%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4931%" y="693" width="0.0768%" height="15" fill="rgb(232,77,22)" fg:x="1035" fg:w="1"/><text x="79.7431%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.46%)</title><rect x="79.1859%" y="789" width="0.4608%" height="15" fill="rgb(215,80,25)" fg:x="1031" fg:w="6"/><text x="79.4359%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (6 samples, 0.46%)</title><rect x="79.1859%" y="773" width="0.4608%" height="15" fill="rgb(210,173,7)" fg:x="1031" fg:w="6"/><text x="79.4359%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5699%" y="757" width="0.0768%" height="15" fill="rgb(207,101,10)" fg:x="1036" fg:w="1"/><text x="79.8199%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.54%)</title><rect x="79.1859%" y="821" width="0.5376%" height="15" fill="rgb(246,57,48)" fg:x="1031" fg:w="7"/><text x="79.4359%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (7 samples, 0.54%)</title><rect x="79.1859%" y="805" width="0.5376%" height="15" fill="rgb(236,184,40)" fg:x="1031" fg:w="7"/><text x="79.4359%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6467%" y="789" width="0.0768%" height="15" fill="rgb(210,205,13)" fg:x="1037" fg:w="1"/><text x="79.8967%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="79.7235%" y="773" width="0.0768%" height="15" fill="rgb(231,129,42)" fg:x="1038" fg:w="1"/><text x="79.9735%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.8003%" y="757" width="0.0768%" height="15" fill="rgb(220,229,54)" fg:x="1039" fg:w="1"/><text x="80.0503%" y="767.50"></text></g><g><title>dlopen (4 samples, 0.31%)</title><rect x="79.8771%" y="709" width="0.3072%" height="15" fill="rgb(230,192,26)" fg:x="1040" fg:w="4"/><text x="80.1271%" y="719.50"></text></g><g><title>_dl_catch_error (4 samples, 0.31%)</title><rect x="79.8771%" y="693" width="0.3072%" height="15" fill="rgb(253,18,30)" fg:x="1040" fg:w="4"/><text x="80.1271%" y="703.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.31%)</title><rect x="79.8771%" y="677" width="0.3072%" height="15" fill="rgb(216,62,53)" fg:x="1040" fg:w="4"/><text x="80.1271%" y="687.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.31%)</title><rect x="79.8771%" y="661" width="0.3072%" height="15" fill="rgb(230,79,29)" fg:x="1040" fg:w="4"/><text x="80.1271%" y="671.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.31%)</title><rect x="79.8771%" y="645" width="0.3072%" height="15" fill="rgb(242,26,26)" fg:x="1040" fg:w="4"/><text x="80.1271%" y="655.50"></text></g><g><title>libloading::safe::Library::new (5 samples, 0.38%)</title><rect x="79.8771%" y="725" width="0.3840%" height="15" fill="rgb(227,125,21)" fg:x="1040" fg:w="5"/><text x="80.1271%" y="735.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="80.1843%" y="709" width="0.0768%" height="15" fill="rgb(229,93,26)" fg:x="1044" fg:w="1"/><text x="80.4343%" y="719.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="80.1843%" y="693" width="0.0768%" height="15" fill="rgb(227,228,8)" fg:x="1044" fg:w="1"/><text x="80.4343%" y="703.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="80.1843%" y="677" width="0.0768%" height="15" fill="rgb(233,56,0)" fg:x="1044" fg:w="1"/><text x="80.4343%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.46%)</title><rect x="79.8771%" y="757" width="0.4608%" height="15" fill="rgb(225,185,17)" fg:x="1040" fg:w="6"/><text x="80.1271%" y="767.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.46%)</title><rect x="79.8771%" y="741" width="0.4608%" height="15" fill="rgb(238,202,30)" fg:x="1040" fg:w="6"/><text x="80.1271%" y="751.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="80.2611%" y="725" width="0.0768%" height="15" fill="rgb(236,60,13)" fg:x="1045" fg:w="1"/><text x="80.5111%" y="735.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (9 samples, 0.69%)</title><rect x="79.7235%" y="821" width="0.6912%" height="15" fill="rgb(244,92,0)" fg:x="1038" fg:w="9"/><text x="79.9735%" y="831.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (9 samples, 0.69%)</title><rect x="79.7235%" y="805" width="0.6912%" height="15" fill="rgb(225,57,15)" fg:x="1038" fg:w="9"/><text x="79.9735%" y="815.50"></text></g><g><title>engine::session::Session::new (9 samples, 0.69%)</title><rect x="79.7235%" y="789" width="0.6912%" height="15" fill="rgb(228,5,28)" fg:x="1038" fg:w="9"/><text x="79.9735%" y="799.50"></text></g><g><title>engine::session::Session::initialize (8 samples, 0.61%)</title><rect x="79.8003%" y="773" width="0.6144%" height="15" fill="rgb(252,34,51)" fg:x="1039" fg:w="8"/><text x="80.0503%" y="783.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="80.3379%" y="757" width="0.0768%" height="15" fill="rgb(235,58,7)" fg:x="1046" fg:w="1"/><text x="80.5879%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.3379%" y="741" width="0.0768%" height="15" fill="rgb(250,132,20)" fg:x="1046" fg:w="1"/><text x="80.5879%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.3379%" y="725" width="0.0768%" height="15" fill="rgb(217,164,0)" fg:x="1046" fg:w="1"/><text x="80.5879%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.3379%" y="709" width="0.0768%" height="15" fill="rgb(208,220,35)" fg:x="1046" fg:w="1"/><text x="80.5879%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.3379%" y="693" width="0.0768%" height="15" fill="rgb(227,42,51)" fg:x="1046" fg:w="1"/><text x="80.5879%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.4147%" y="805" width="0.0768%" height="15" fill="rgb(225,146,38)" fg:x="1047" fg:w="1"/><text x="80.6647%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.4916%" y="757" width="0.0768%" height="15" fill="rgb(252,108,37)" fg:x="1048" fg:w="1"/><text x="80.7416%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.4916%" y="741" width="0.0768%" height="15" fill="rgb(244,101,24)" fg:x="1048" fg:w="1"/><text x="80.7416%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.4916%" y="725" width="0.0768%" height="15" fill="rgb(213,161,50)" fg:x="1048" fg:w="1"/><text x="80.7416%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.4916%" y="709" width="0.0768%" height="15" fill="rgb(248,159,19)" fg:x="1048" fg:w="1"/><text x="80.7416%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="80.6452%" y="693" width="0.2304%" height="15" fill="rgb(233,179,15)" fg:x="1050" fg:w="3"/><text x="80.8952%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="80.6452%" y="677" width="0.2304%" height="15" fill="rgb(248,178,3)" fg:x="1050" fg:w="3"/><text x="80.8952%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="80.7220%" y="661" width="0.1536%" height="15" fill="rgb(245,190,41)" fg:x="1051" fg:w="2"/><text x="80.9720%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7988%" y="645" width="0.0768%" height="15" fill="rgb(218,151,19)" fg:x="1052" fg:w="1"/><text x="81.0488%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.7988%" y="629" width="0.0768%" height="15" fill="rgb(245,25,44)" fg:x="1052" fg:w="1"/><text x="81.0488%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.38%)</title><rect x="80.5684%" y="725" width="0.3840%" height="15" fill="rgb(235,172,47)" fg:x="1049" fg:w="5"/><text x="80.8184%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="80.6452%" y="709" width="0.3072%" height="15" fill="rgb(246,33,12)" fg:x="1050" fg:w="4"/><text x="80.8952%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8756%" y="693" width="0.0768%" height="15" fill="rgb(214,124,7)" fg:x="1053" fg:w="1"/><text x="81.1256%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8756%" y="677" width="0.0768%" height="15" fill="rgb(246,186,18)" fg:x="1053" fg:w="1"/><text x="81.1256%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8756%" y="661" width="0.0768%" height="15" fill="rgb(231,94,1)" fg:x="1053" fg:w="1"/><text x="81.1256%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8756%" y="645" width="0.0768%" height="15" fill="rgb(208,33,48)" fg:x="1053" fg:w="1"/><text x="81.1256%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.8756%" y="629" width="0.0768%" height="15" fill="rgb(208,195,44)" fg:x="1053" fg:w="1"/><text x="81.1256%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8756%" y="613" width="0.0768%" height="15" fill="rgb(226,13,52)" fg:x="1053" fg:w="1"/><text x="81.1256%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8756%" y="597" width="0.0768%" height="15" fill="rgb(217,219,45)" fg:x="1053" fg:w="1"/><text x="81.1256%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8756%" y="581" width="0.0768%" height="15" fill="rgb(223,45,25)" fg:x="1053" fg:w="1"/><text x="81.1256%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.1060%" y="597" width="0.0768%" height="15" fill="rgb(241,163,0)" fg:x="1056" fg:w="1"/><text x="81.3560%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.38%)</title><rect x="80.9524%" y="725" width="0.3840%" height="15" fill="rgb(216,68,47)" fg:x="1054" fg:w="5"/><text x="81.2024%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.31%)</title><rect x="81.0292%" y="709" width="0.3072%" height="15" fill="rgb(236,119,45)" fg:x="1055" fg:w="4"/><text x="81.2792%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="81.1060%" y="693" width="0.2304%" height="15" fill="rgb(209,188,24)" fg:x="1056" fg:w="3"/><text x="81.3560%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="81.1060%" y="677" width="0.2304%" height="15" fill="rgb(221,118,7)" fg:x="1056" fg:w="3"/><text x="81.3560%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="81.1060%" y="661" width="0.2304%" height="15" fill="rgb(213,148,43)" fg:x="1056" fg:w="3"/><text x="81.3560%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="81.1060%" y="645" width="0.2304%" height="15" fill="rgb(231,21,43)" fg:x="1056" fg:w="3"/><text x="81.3560%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="81.1060%" y="629" width="0.2304%" height="15" fill="rgb(232,213,43)" fg:x="1056" fg:w="3"/><text x="81.3560%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="81.1060%" y="613" width="0.2304%" height="15" fill="rgb(239,145,50)" fg:x="1056" fg:w="3"/><text x="81.3560%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="81.1828%" y="597" width="0.1536%" height="15" fill="rgb(222,131,18)" fg:x="1057" fg:w="2"/><text x="81.4328%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.2596%" y="581" width="0.0768%" height="15" fill="rgb(243,181,13)" fg:x="1058" fg:w="1"/><text x="81.5096%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.3364%" y="677" width="0.0768%" height="15" fill="rgb(212,74,41)" fg:x="1059" fg:w="1"/><text x="81.5864%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.3364%" y="661" width="0.0768%" height="15" fill="rgb(237,143,34)" fg:x="1059" fg:w="1"/><text x="81.5864%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.3364%" y="645" width="0.0768%" height="15" fill="rgb(228,139,0)" fg:x="1059" fg:w="1"/><text x="81.5864%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="81.4132%" y="581" width="0.0768%" height="15" fill="rgb(227,214,11)" fg:x="1060" fg:w="1"/><text x="81.6632%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4900%" y="565" width="0.0768%" height="15" fill="rgb(228,118,39)" fg:x="1061" fg:w="1"/><text x="81.7400%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4900%" y="549" width="0.0768%" height="15" fill="rgb(207,117,22)" fg:x="1061" fg:w="1"/><text x="81.7400%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.5668%" y="549" width="0.0768%" height="15" fill="rgb(225,91,8)" fg:x="1062" fg:w="1"/><text x="81.8168%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5668%" y="533" width="0.0768%" height="15" fill="rgb(230,219,48)" fg:x="1062" fg:w="1"/><text x="81.8168%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.5668%" y="517" width="0.0768%" height="15" fill="rgb(244,0,23)" fg:x="1062" fg:w="1"/><text x="81.8168%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5668%" y="501" width="0.0768%" height="15" fill="rgb(206,212,23)" fg:x="1062" fg:w="1"/><text x="81.8168%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5668%" y="485" width="0.0768%" height="15" fill="rgb(254,62,10)" fg:x="1062" fg:w="1"/><text x="81.8168%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5668%" y="469" width="0.0768%" height="15" fill="rgb(236,58,8)" fg:x="1062" fg:w="1"/><text x="81.8168%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="81.4900%" y="581" width="0.2304%" height="15" fill="rgb(232,212,17)" fg:x="1061" fg:w="3"/><text x="81.7400%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="81.5668%" y="565" width="0.1536%" height="15" fill="rgb(206,132,9)" fg:x="1062" fg:w="2"/><text x="81.8168%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6436%" y="549" width="0.0768%" height="15" fill="rgb(234,97,28)" fg:x="1063" fg:w="1"/><text x="81.8936%" y="559.50"></text></g><g><title>engine::session::Session::flush (17 samples, 1.31%)</title><rect x="80.4916%" y="805" width="1.3057%" height="15" fill="rgb(254,144,9)" fg:x="1048" fg:w="17"/><text x="80.7416%" y="815.50"></text></g><g><title>engine::session::state::State::close (17 samples, 1.31%)</title><rect x="80.4916%" y="789" width="1.3057%" height="15" fill="rgb(244,204,43)" fg:x="1048" fg:w="17"/><text x="80.7416%" y="799.50"></text></g><g><title>engine::session::state::State::flush_entities (17 samples, 1.31%)</title><rect x="80.4916%" y="773" width="1.3057%" height="15" fill="rgb(248,177,16)" fg:x="1048" fg:w="17"/><text x="80.7416%" y="783.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (16 samples, 1.23%)</title><rect x="80.5684%" y="757" width="1.2289%" height="15" fill="rgb(219,110,15)" fg:x="1049" fg:w="16"/><text x="80.8184%" y="767.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (16 samples, 1.23%)</title><rect x="80.5684%" y="741" width="1.2289%" height="15" fill="rgb(212,203,25)" fg:x="1049" fg:w="16"/><text x="80.8184%" y="751.50"></text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.46%)</title><rect x="81.3364%" y="725" width="0.4608%" height="15" fill="rgb(205,50,1)" fg:x="1059" fg:w="6"/><text x="81.5864%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.46%)</title><rect x="81.3364%" y="709" width="0.4608%" height="15" fill="rgb(222,152,41)" fg:x="1059" fg:w="6"/><text x="81.5864%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.46%)</title><rect x="81.3364%" y="693" width="0.4608%" height="15" fill="rgb(236,83,3)" fg:x="1059" fg:w="6"/><text x="81.5864%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.38%)</title><rect x="81.4132%" y="677" width="0.3840%" height="15" fill="rgb(214,30,54)" fg:x="1060" fg:w="5"/><text x="81.6632%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.38%)</title><rect x="81.4132%" y="661" width="0.3840%" height="15" fill="rgb(250,117,31)" fg:x="1060" fg:w="5"/><text x="81.6632%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.38%)</title><rect x="81.4132%" y="645" width="0.3840%" height="15" fill="rgb(228,77,14)" fg:x="1060" fg:w="5"/><text x="81.6632%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.38%)</title><rect x="81.4132%" y="629" width="0.3840%" height="15" fill="rgb(241,3,28)" fg:x="1060" fg:w="5"/><text x="81.6632%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.38%)</title><rect x="81.4132%" y="613" width="0.3840%" height="15" fill="rgb(221,175,52)" fg:x="1060" fg:w="5"/><text x="81.6632%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.38%)</title><rect x="81.4132%" y="597" width="0.3840%" height="15" fill="rgb(237,91,6)" fg:x="1060" fg:w="5"/><text x="81.6632%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7204%" y="581" width="0.0768%" height="15" fill="rgb(246,46,42)" fg:x="1064" fg:w="1"/><text x="81.9704%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.7972%" y="773" width="0.0768%" height="15" fill="rgb(235,199,0)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.7972%" y="757" width="0.0768%" height="15" fill="rgb(224,44,40)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.7972%" y="741" width="0.0768%" height="15" fill="rgb(209,24,35)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7972%" y="725" width="0.0768%" height="15" fill="rgb(244,46,22)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7972%" y="709" width="0.0768%" height="15" fill="rgb(235,99,8)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7972%" y="693" width="0.0768%" height="15" fill="rgb(218,127,36)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7972%" y="677" width="0.0768%" height="15" fill="rgb(238,47,46)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.7972%" y="661" width="0.0768%" height="15" fill="rgb(233,65,17)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7972%" y="645" width="0.0768%" height="15" fill="rgb(239,22,33)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.7972%" y="629" width="0.0768%" height="15" fill="rgb(243,66,43)" fg:x="1065" fg:w="1"/><text x="82.0472%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="81.8740%" y="773" width="0.0768%" height="15" fill="rgb(235,210,28)" fg:x="1066" fg:w="1"/><text x="82.1240%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.8740%" y="757" width="0.0768%" height="15" fill="rgb(205,191,50)" fg:x="1066" fg:w="1"/><text x="82.1240%" y="767.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8740%" y="741" width="0.0768%" height="15" fill="rgb(251,217,19)" fg:x="1066" fg:w="1"/><text x="82.1240%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.8740%" y="725" width="0.0768%" height="15" fill="rgb(205,174,37)" fg:x="1066" fg:w="1"/><text x="82.1240%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8740%" y="709" width="0.0768%" height="15" fill="rgb(212,158,42)" fg:x="1066" fg:w="1"/><text x="82.1240%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="81.7972%" y="789" width="0.2304%" height="15" fill="rgb(212,208,51)" fg:x="1065" fg:w="3"/><text x="82.0472%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.9508%" y="773" width="0.0768%" height="15" fill="rgb(225,198,20)" fg:x="1067" fg:w="1"/><text x="82.2008%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="81.9508%" y="757" width="0.0768%" height="15" fill="rgb(247,41,44)" fg:x="1067" fg:w="1"/><text x="82.2008%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9508%" y="741" width="0.0768%" height="15" fill="rgb(228,33,41)" fg:x="1067" fg:w="1"/><text x="82.2008%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9508%" y="725" width="0.0768%" height="15" fill="rgb(215,47,52)" fg:x="1067" fg:w="1"/><text x="82.2008%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="81.9508%" y="709" width="0.0768%" height="15" fill="rgb(248,106,37)" fg:x="1067" fg:w="1"/><text x="82.2008%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9508%" y="693" width="0.0768%" height="15" fill="rgb(238,91,29)" fg:x="1067" fg:w="1"/><text x="82.2008%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.0276%" y="773" width="0.0768%" height="15" fill="rgb(226,111,40)" fg:x="1068" fg:w="1"/><text x="82.2776%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.0276%" y="757" width="0.0768%" height="15" fill="rgb(229,159,36)" fg:x="1068" fg:w="1"/><text x="82.2776%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.0276%" y="741" width="0.0768%" height="15" fill="rgb(221,109,4)" fg:x="1068" fg:w="1"/><text x="82.2776%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.0276%" y="725" width="0.0768%" height="15" fill="rgb(236,56,25)" fg:x="1068" fg:w="1"/><text x="82.2776%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.0276%" y="709" width="0.0768%" height="15" fill="rgb(244,113,23)" fg:x="1068" fg:w="1"/><text x="82.2776%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0276%" y="693" width="0.0768%" height="15" fill="rgb(249,132,2)" fg:x="1068" fg:w="1"/><text x="82.2776%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0276%" y="677" width="0.0768%" height="15" fill="rgb(205,185,21)" fg:x="1068" fg:w="1"/><text x="82.2776%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0276%" y="661" width="0.0768%" height="15" fill="rgb(245,130,2)" fg:x="1068" fg:w="1"/><text x="82.2776%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0276%" y="645" width="0.0768%" height="15" fill="rgb(246,71,26)" fg:x="1068" fg:w="1"/><text x="82.2776%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1045%" y="693" width="0.0768%" height="15" fill="rgb(234,194,6)" fg:x="1069" fg:w="1"/><text x="82.3545%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.15%)</title><rect x="82.1045%" y="773" width="0.1536%" height="15" fill="rgb(206,24,32)" fg:x="1069" fg:w="2"/><text x="82.3545%" y="783.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.15%)</title><rect x="82.1045%" y="757" width="0.1536%" height="15" fill="rgb(233,7,54)" fg:x="1069" fg:w="2"/><text x="82.3545%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="82.1045%" y="741" width="0.1536%" height="15" fill="rgb(252,46,1)" fg:x="1069" fg:w="2"/><text x="82.3545%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.15%)</title><rect x="82.1045%" y="725" width="0.1536%" height="15" fill="rgb(216,113,53)" fg:x="1069" fg:w="2"/><text x="82.3545%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="82.1045%" y="709" width="0.1536%" height="15" fill="rgb(215,40,24)" fg:x="1069" fg:w="2"/><text x="82.3545%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1813%" y="693" width="0.0768%" height="15" fill="rgb(233,222,8)" fg:x="1070" fg:w="1"/><text x="82.4313%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1813%" y="677" width="0.0768%" height="15" fill="rgb(248,73,28)" fg:x="1070" fg:w="1"/><text x="82.4313%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.1813%" y="661" width="0.0768%" height="15" fill="rgb(247,126,28)" fg:x="1070" fg:w="1"/><text x="82.4313%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.2581%" y="757" width="0.0768%" height="15" fill="rgb(242,173,54)" fg:x="1071" fg:w="1"/><text x="82.5081%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.2581%" y="741" width="0.0768%" height="15" fill="rgb(244,186,22)" fg:x="1071" fg:w="1"/><text x="82.5081%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.2581%" y="725" width="0.0768%" height="15" fill="rgb(231,187,4)" fg:x="1071" fg:w="1"/><text x="82.5081%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.2581%" y="709" width="0.0768%" height="15" fill="rgb(252,66,47)" fg:x="1071" fg:w="1"/><text x="82.5081%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.2581%" y="693" width="0.0768%" height="15" fill="rgb(240,228,28)" fg:x="1071" fg:w="1"/><text x="82.5081%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.2581%" y="677" width="0.0768%" height="15" fill="rgb(237,63,43)" fg:x="1071" fg:w="1"/><text x="82.5081%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2581%" y="661" width="0.0768%" height="15" fill="rgb(214,1,44)" fg:x="1071" fg:w="1"/><text x="82.5081%" y="671.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.61%)</title><rect x="81.7972%" y="805" width="0.6144%" height="15" fill="rgb(212,2,46)" fg:x="1065" fg:w="8"/><text x="82.0472%" y="815.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.38%)</title><rect x="82.0276%" y="789" width="0.3840%" height="15" fill="rgb(213,142,5)" fg:x="1068" fg:w="5"/><text x="82.2776%" y="799.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.15%)</title><rect x="82.2581%" y="773" width="0.1536%" height="15" fill="rgb(229,135,1)" fg:x="1071" fg:w="2"/><text x="82.5081%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="82.3349%" y="757" width="0.0768%" height="15" fill="rgb(252,98,38)" fg:x="1072" fg:w="1"/><text x="82.5849%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3349%" y="741" width="0.0768%" height="15" fill="rgb(206,89,40)" fg:x="1072" fg:w="1"/><text x="82.5849%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="82.3349%" y="725" width="0.0768%" height="15" fill="rgb(219,73,36)" fg:x="1072" fg:w="1"/><text x="82.5849%" y="735.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="82.3349%" y="709" width="0.0768%" height="15" fill="rgb(207,168,32)" fg:x="1072" fg:w="1"/><text x="82.5849%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="82.4117%" y="773" width="0.0768%" height="15" fill="rgb(215,113,21)" fg:x="1073" fg:w="1"/><text x="82.6617%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="82.4117%" y="757" width="0.0768%" height="15" fill="rgb(217,144,43)" fg:x="1073" fg:w="1"/><text x="82.6617%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4117%" y="741" width="0.0768%" height="15" fill="rgb(249,48,50)" fg:x="1073" fg:w="1"/><text x="82.6617%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4117%" y="725" width="0.0768%" height="15" fill="rgb(242,1,26)" fg:x="1073" fg:w="1"/><text x="82.6617%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4117%" y="709" width="0.0768%" height="15" fill="rgb(231,167,42)" fg:x="1073" fg:w="1"/><text x="82.6617%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.4885%" y="661" width="0.0768%" height="15" fill="rgb(242,177,45)" fg:x="1074" fg:w="1"/><text x="82.7385%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4885%" y="645" width="0.0768%" height="15" fill="rgb(232,121,42)" fg:x="1074" fg:w="1"/><text x="82.7385%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.23%)</title><rect x="82.4117%" y="805" width="0.2304%" height="15" fill="rgb(205,8,42)" fg:x="1073" fg:w="3"/><text x="82.6617%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="82.4117%" y="789" width="0.2304%" height="15" fill="rgb(238,199,24)" fg:x="1073" fg:w="3"/><text x="82.6617%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.15%)</title><rect x="82.4885%" y="773" width="0.1536%" height="15" fill="rgb(228,112,2)" fg:x="1074" fg:w="2"/><text x="82.7385%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.15%)</title><rect x="82.4885%" y="757" width="0.1536%" height="15" fill="rgb(215,115,33)" fg:x="1074" fg:w="2"/><text x="82.7385%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.15%)</title><rect x="82.4885%" y="741" width="0.1536%" height="15" fill="rgb(230,209,34)" fg:x="1074" fg:w="2"/><text x="82.7385%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="82.4885%" y="725" width="0.1536%" height="15" fill="rgb(246,76,12)" fg:x="1074" fg:w="2"/><text x="82.7385%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="82.4885%" y="709" width="0.1536%" height="15" fill="rgb(240,110,9)" fg:x="1074" fg:w="2"/><text x="82.7385%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="82.4885%" y="693" width="0.1536%" height="15" fill="rgb(224,94,46)" fg:x="1074" fg:w="2"/><text x="82.7385%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="82.4885%" y="677" width="0.1536%" height="15" fill="rgb(247,150,22)" fg:x="1074" fg:w="2"/><text x="82.7385%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.5653%" y="661" width="0.0768%" height="15" fill="rgb(249,85,13)" fg:x="1075" fg:w="1"/><text x="82.8153%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5653%" y="645" width="0.0768%" height="15" fill="rgb(208,77,41)" fg:x="1075" fg:w="1"/><text x="82.8153%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.5653%" y="629" width="0.0768%" height="15" fill="rgb(240,42,44)" fg:x="1075" fg:w="1"/><text x="82.8153%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5653%" y="613" width="0.0768%" height="15" fill="rgb(222,10,51)" fg:x="1075" fg:w="1"/><text x="82.8153%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5653%" y="597" width="0.0768%" height="15" fill="rgb(208,146,53)" fg:x="1075" fg:w="1"/><text x="82.8153%" y="607.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="82.6421%" y="773" width="0.0768%" height="15" fill="rgb(236,162,23)" fg:x="1076" fg:w="1"/><text x="82.8921%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6421%" y="757" width="0.0768%" height="15" fill="rgb(218,66,21)" fg:x="1076" fg:w="1"/><text x="82.8921%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6421%" y="741" width="0.0768%" height="15" fill="rgb(233,6,47)" fg:x="1076" fg:w="1"/><text x="82.8921%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.7189%" y="757" width="0.0768%" height="15" fill="rgb(236,59,51)" fg:x="1077" fg:w="1"/><text x="82.9689%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.23%)</title><rect x="82.6421%" y="805" width="0.2304%" height="15" fill="rgb(242,12,46)" fg:x="1076" fg:w="3"/><text x="82.8921%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.23%)</title><rect x="82.6421%" y="789" width="0.2304%" height="15" fill="rgb(243,142,19)" fg:x="1076" fg:w="3"/><text x="82.8921%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.15%)</title><rect x="82.7189%" y="773" width="0.1536%" height="15" fill="rgb(217,28,17)" fg:x="1077" fg:w="2"/><text x="82.9689%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.7957%" y="757" width="0.0768%" height="15" fill="rgb(228,2,27)" fg:x="1078" fg:w="1"/><text x="83.0457%" y="767.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8725%" y="789" width="0.0768%" height="15" fill="rgb(214,221,4)" fg:x="1079" fg:w="1"/><text x="83.1225%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8725%" y="773" width="0.0768%" height="15" fill="rgb(224,69,26)" fg:x="1079" fg:w="1"/><text x="83.1225%" y="783.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="82.9493%" y="741" width="0.0768%" height="15" fill="rgb(219,70,4)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.9493%" y="725" width="0.0768%" height="15" fill="rgb(218,157,39)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.9493%" y="709" width="0.0768%" height="15" fill="rgb(238,36,28)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.9493%" y="693" width="0.0768%" height="15" fill="rgb(232,29,0)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.9493%" y="677" width="0.0768%" height="15" fill="rgb(243,138,46)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9493%" y="661" width="0.0768%" height="15" fill="rgb(232,186,41)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9493%" y="645" width="0.0768%" height="15" fill="rgb(252,166,17)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9493%" y="629" width="0.0768%" height="15" fill="rgb(228,179,12)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9493%" y="613" width="0.0768%" height="15" fill="rgb(254,205,53)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9493%" y="597" width="0.0768%" height="15" fill="rgb(224,163,47)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9493%" y="581" width="0.0768%" height="15" fill="rgb(208,43,47)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9493%" y="565" width="0.0768%" height="15" fill="rgb(224,198,38)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.9493%" y="549" width="0.0768%" height="15" fill="rgb(234,12,40)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.9493%" y="533" width="0.0768%" height="15" fill="rgb(237,212,39)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.9493%" y="517" width="0.0768%" height="15" fill="rgb(253,2,33)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.9493%" y="501" width="0.0768%" height="15" fill="rgb(251,29,16)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.9493%" y="485" width="0.0768%" height="15" fill="rgb(214,38,29)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.9493%" y="469" width="0.0768%" height="15" fill="rgb(226,226,29)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.9493%" y="453" width="0.0768%" height="15" fill="rgb(236,79,42)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.9493%" y="437" width="0.0768%" height="15" fill="rgb(222,12,36)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.9493%" y="421" width="0.0768%" height="15" fill="rgb(232,123,44)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9493%" y="405" width="0.0768%" height="15" fill="rgb(234,93,50)" fg:x="1080" fg:w="1"/><text x="83.1993%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.0261%" y="725" width="0.0768%" height="15" fill="rgb(210,86,49)" fg:x="1081" fg:w="1"/><text x="83.2761%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.0261%" y="709" width="0.0768%" height="15" fill="rgb(224,91,54)" fg:x="1081" fg:w="1"/><text x="83.2761%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.0261%" y="693" width="0.0768%" height="15" fill="rgb(239,169,9)" fg:x="1081" fg:w="1"/><text x="83.2761%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.0261%" y="677" width="0.0768%" height="15" fill="rgb(238,29,17)" fg:x="1081" fg:w="1"/><text x="83.2761%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0261%" y="661" width="0.0768%" height="15" fill="rgb(227,160,22)" fg:x="1081" fg:w="1"/><text x="83.2761%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0261%" y="645" width="0.0768%" height="15" fill="rgb(231,129,52)" fg:x="1081" fg:w="1"/><text x="83.2761%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0261%" y="629" width="0.0768%" height="15" fill="rgb(241,184,9)" fg:x="1081" fg:w="1"/><text x="83.2761%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0261%" y="613" width="0.0768%" height="15" fill="rgb(217,43,48)" fg:x="1081" fg:w="1"/><text x="83.2761%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0261%" y="597" width="0.0768%" height="15" fill="rgb(213,49,1)" fg:x="1081" fg:w="1"/><text x="83.2761%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="83.1029%" y="629" width="0.1536%" height="15" fill="rgb(223,79,39)" fg:x="1082" fg:w="2"/><text x="83.3529%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1797%" y="613" width="0.0768%" height="15" fill="rgb(228,227,46)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1797%" y="597" width="0.0768%" height="15" fill="rgb(245,89,41)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1797%" y="581" width="0.0768%" height="15" fill="rgb(253,83,21)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1797%" y="565" width="0.0768%" height="15" fill="rgb(229,116,51)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.1797%" y="549" width="0.0768%" height="15" fill="rgb(246,67,26)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.1797%" y="533" width="0.0768%" height="15" fill="rgb(250,117,20)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.1797%" y="517" width="0.0768%" height="15" fill="rgb(207,88,17)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.1797%" y="501" width="0.0768%" height="15" fill="rgb(212,98,36)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.1797%" y="485" width="0.0768%" height="15" fill="rgb(221,72,6)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.1797%" y="469" width="0.0768%" height="15" fill="rgb(235,129,19)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.1797%" y="453" width="0.0768%" height="15" fill="rgb(237,200,6)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.1797%" y="437" width="0.0768%" height="15" fill="rgb(239,69,54)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.1797%" y="421" width="0.0768%" height="15" fill="rgb(214,68,45)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.1797%" y="405" width="0.0768%" height="15" fill="rgb(254,160,8)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.1797%" y="389" width="0.0768%" height="15" fill="rgb(215,226,31)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1797%" y="373" width="0.0768%" height="15" fill="rgb(253,6,35)" fg:x="1083" fg:w="1"/><text x="83.4297%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="83.1029%" y="677" width="0.2304%" height="15" fill="rgb(219,96,42)" fg:x="1082" fg:w="3"/><text x="83.3529%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="83.1029%" y="661" width="0.2304%" height="15" fill="rgb(207,170,13)" fg:x="1082" fg:w="3"/><text x="83.3529%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="83.1029%" y="645" width="0.2304%" height="15" fill="rgb(239,101,5)" fg:x="1082" fg:w="3"/><text x="83.3529%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.2565%" y="629" width="0.0768%" height="15" fill="rgb(228,183,34)" fg:x="1084" fg:w="1"/><text x="83.5065%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2565%" y="613" width="0.0768%" height="15" fill="rgb(205,28,31)" fg:x="1084" fg:w="1"/><text x="83.5065%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.2565%" y="597" width="0.0768%" height="15" fill="rgb(214,118,50)" fg:x="1084" fg:w="1"/><text x="83.5065%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2565%" y="581" width="0.0768%" height="15" fill="rgb(213,108,51)" fg:x="1084" fg:w="1"/><text x="83.5065%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.2565%" y="565" width="0.0768%" height="15" fill="rgb(238,56,37)" fg:x="1084" fg:w="1"/><text x="83.5065%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2565%" y="549" width="0.0768%" height="15" fill="rgb(214,136,28)" fg:x="1084" fg:w="1"/><text x="83.5065%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.2565%" y="533" width="0.0768%" height="15" fill="rgb(221,201,54)" fg:x="1084" fg:w="1"/><text x="83.5065%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2565%" y="517" width="0.0768%" height="15" fill="rgb(228,216,39)" fg:x="1084" fg:w="1"/><text x="83.5065%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.2565%" y="501" width="0.0768%" height="15" fill="rgb(207,229,49)" fg:x="1084" fg:w="1"/><text x="83.5065%" y="511.50"></text></g><g><title>plugins_core::build::Build::leads_to (5 samples, 0.38%)</title><rect x="83.0261%" y="741" width="0.3840%" height="15" fill="rgb(224,23,43)" fg:x="1081" fg:w="5"/><text x="83.2761%" y="751.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.31%)</title><rect x="83.1029%" y="725" width="0.3072%" height="15" fill="rgb(247,97,18)" fg:x="1082" fg:w="4"/><text x="83.3529%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="83.1029%" y="709" width="0.3072%" height="15" fill="rgb(232,53,32)" fg:x="1082" fg:w="4"/><text x="83.3529%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="83.1029%" y="693" width="0.3072%" height="15" fill="rgb(247,38,23)" fg:x="1082" fg:w="4"/><text x="83.3529%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.3333%" y="677" width="0.0768%" height="15" fill="rgb(228,101,52)" fg:x="1085" fg:w="1"/><text x="83.5833%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.3333%" y="661" width="0.0768%" height="15" fill="rgb(231,45,36)" fg:x="1085" fg:w="1"/><text x="83.5833%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.3333%" y="645" width="0.0768%" height="15" fill="rgb(221,183,50)" fg:x="1085" fg:w="1"/><text x="83.5833%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3333%" y="629" width="0.0768%" height="15" fill="rgb(251,132,12)" fg:x="1085" fg:w="1"/><text x="83.5833%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3333%" y="613" width="0.0768%" height="15" fill="rgb(252,50,16)" fg:x="1085" fg:w="1"/><text x="83.5833%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3333%" y="597" width="0.0768%" height="15" fill="rgb(224,60,15)" fg:x="1085" fg:w="1"/><text x="83.5833%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3333%" y="581" width="0.0768%" height="15" fill="rgb(254,2,34)" fg:x="1085" fg:w="1"/><text x="83.5833%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3333%" y="565" width="0.0768%" height="15" fill="rgb(232,154,8)" fg:x="1085" fg:w="1"/><text x="83.5833%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.4101%" y="677" width="0.0768%" height="15" fill="rgb(235,190,52)" fg:x="1086" fg:w="1"/><text x="83.6601%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.4101%" y="661" width="0.0768%" height="15" fill="rgb(213,218,38)" fg:x="1086" fg:w="1"/><text x="83.6601%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.61%)</title><rect x="82.9493%" y="789" width="0.6144%" height="15" fill="rgb(237,50,37)" fg:x="1080" fg:w="8"/><text x="83.1993%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.61%)</title><rect x="82.9493%" y="773" width="0.6144%" height="15" fill="rgb(235,51,35)" fg:x="1080" fg:w="8"/><text x="83.1993%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.61%)</title><rect x="82.9493%" y="757" width="0.6144%" height="15" fill="rgb(244,40,52)" fg:x="1080" fg:w="8"/><text x="83.1993%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.15%)</title><rect x="83.4101%" y="741" width="0.1536%" height="15" fill="rgb(217,225,45)" fg:x="1086" fg:w="2"/><text x="83.6601%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.15%)</title><rect x="83.4101%" y="725" width="0.1536%" height="15" fill="rgb(247,191,36)" fg:x="1086" fg:w="2"/><text x="83.6601%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.15%)</title><rect x="83.4101%" y="709" width="0.1536%" height="15" fill="rgb(251,144,31)" fg:x="1086" fg:w="2"/><text x="83.6601%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.15%)</title><rect x="83.4101%" y="693" width="0.1536%" height="15" fill="rgb(227,155,41)" fg:x="1086" fg:w="2"/><text x="83.6601%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4869%" y="677" width="0.0768%" height="15" fill="rgb(236,121,36)" fg:x="1087" fg:w="1"/><text x="83.7369%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.4869%" y="661" width="0.0768%" height="15" fill="rgb(221,128,28)" fg:x="1087" fg:w="1"/><text x="83.7369%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.4869%" y="645" width="0.0768%" height="15" fill="rgb(249,67,50)" fg:x="1087" fg:w="1"/><text x="83.7369%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="83.5637%" y="773" width="0.0768%" height="15" fill="rgb(241,126,38)" fg:x="1088" fg:w="1"/><text x="83.8137%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5637%" y="757" width="0.0768%" height="15" fill="rgb(239,33,14)" fg:x="1088" fg:w="1"/><text x="83.8137%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.6406%" y="725" width="0.0768%" height="15" fill="rgb(207,221,54)" fg:x="1089" fg:w="1"/><text x="83.8906%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="83.6406%" y="709" width="0.0768%" height="15" fill="rgb(242,138,43)" fg:x="1089" fg:w="1"/><text x="83.8906%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="83.6406%" y="693" width="0.0768%" height="15" fill="rgb(231,118,19)" fg:x="1089" fg:w="1"/><text x="83.8906%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="83.6406%" y="677" width="0.0768%" height="15" fill="rgb(214,128,54)" fg:x="1089" fg:w="1"/><text x="83.8906%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.6406%" y="661" width="0.0768%" height="15" fill="rgb(236,136,6)" fg:x="1089" fg:w="1"/><text x="83.8906%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.6406%" y="645" width="0.0768%" height="15" fill="rgb(247,30,38)" fg:x="1089" fg:w="1"/><text x="83.8906%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.7174%" y="661" width="0.0768%" height="15" fill="rgb(249,189,40)" fg:x="1090" fg:w="1"/><text x="83.9674%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.7174%" y="645" width="0.0768%" height="15" fill="rgb(247,179,7)" fg:x="1090" fg:w="1"/><text x="83.9674%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.15%)</title><rect x="83.7174%" y="677" width="0.1536%" height="15" fill="rgb(239,46,52)" fg:x="1090" fg:w="2"/><text x="83.9674%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.7942%" y="661" width="0.0768%" height="15" fill="rgb(225,28,52)" fg:x="1091" fg:w="1"/><text x="84.0442%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.8710%" y="661" width="0.0768%" height="15" fill="rgb(217,208,44)" fg:x="1092" fg:w="1"/><text x="84.1210%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.8710%" y="645" width="0.0768%" height="15" fill="rgb(224,11,34)" fg:x="1092" fg:w="1"/><text x="84.1210%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="83.9478%" y="645" width="0.1536%" height="15" fill="rgb(205,134,17)" fg:x="1093" fg:w="2"/><text x="84.1978%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="83.9478%" y="629" width="0.1536%" height="15" fill="rgb(237,125,9)" fg:x="1093" fg:w="2"/><text x="84.1978%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="83.9478%" y="613" width="0.1536%" height="15" fill="rgb(208,139,47)" fg:x="1093" fg:w="2"/><text x="84.1978%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.0246%" y="597" width="0.0768%" height="15" fill="rgb(242,5,5)" fg:x="1094" fg:w="1"/><text x="84.2746%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.1014%" y="613" width="0.0768%" height="15" fill="rgb(218,78,2)" fg:x="1095" fg:w="1"/><text x="84.3514%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="84.1014%" y="629" width="0.2304%" height="15" fill="rgb(217,75,16)" fg:x="1095" fg:w="3"/><text x="84.3514%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.15%)</title><rect x="84.1782%" y="613" width="0.1536%" height="15" fill="rgb(212,56,17)" fg:x="1096" fg:w="2"/><text x="84.4282%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.15%)</title><rect x="84.1782%" y="597" width="0.1536%" height="15" fill="rgb(228,61,29)" fg:x="1096" fg:w="2"/><text x="84.4282%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.2550%" y="581" width="0.0768%" height="15" fill="rgb(247,202,38)" fg:x="1097" fg:w="1"/><text x="84.5050%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.2550%" y="565" width="0.0768%" height="15" fill="rgb(211,216,43)" fg:x="1097" fg:w="1"/><text x="84.5050%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.2550%" y="549" width="0.0768%" height="15" fill="rgb(220,7,49)" fg:x="1097" fg:w="1"/><text x="84.5050%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.84%)</title><rect x="83.7174%" y="693" width="0.8449%" height="15" fill="rgb(219,158,7)" fg:x="1090" fg:w="11"/><text x="83.9674%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.69%)</title><rect x="83.8710%" y="677" width="0.6912%" height="15" fill="rgb(206,127,9)" fg:x="1092" fg:w="9"/><text x="84.1210%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.61%)</title><rect x="83.9478%" y="661" width="0.6144%" height="15" fill="rgb(206,103,43)" fg:x="1093" fg:w="8"/><text x="84.1978%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.46%)</title><rect x="84.1014%" y="645" width="0.4608%" height="15" fill="rgb(240,108,41)" fg:x="1095" fg:w="6"/><text x="84.3514%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="84.3318%" y="629" width="0.2304%" height="15" fill="rgb(252,212,6)" fg:x="1098" fg:w="3"/><text x="84.5818%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="84.4086%" y="613" width="0.1536%" height="15" fill="rgb(248,105,31)" fg:x="1099" fg:w="2"/><text x="84.6586%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.4854%" y="597" width="0.0768%" height="15" fill="rgb(241,123,4)" fg:x="1100" fg:w="1"/><text x="84.7354%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5622%" y="693" width="0.0768%" height="15" fill="rgb(223,74,37)" fg:x="1101" fg:w="1"/><text x="84.8122%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.5622%" y="677" width="0.0768%" height="15" fill="rgb(251,219,28)" fg:x="1101" fg:w="1"/><text x="84.8122%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5622%" y="661" width="0.0768%" height="15" fill="rgb(218,36,31)" fg:x="1101" fg:w="1"/><text x="84.8122%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5622%" y="645" width="0.0768%" height="15" fill="rgb(229,40,15)" fg:x="1101" fg:w="1"/><text x="84.8122%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5622%" y="629" width="0.0768%" height="15" fill="rgb(208,138,37)" fg:x="1101" fg:w="1"/><text x="84.8122%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5622%" y="613" width="0.0768%" height="15" fill="rgb(208,40,52)" fg:x="1101" fg:w="1"/><text x="84.8122%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.5622%" y="597" width="0.0768%" height="15" fill="rgb(246,181,48)" fg:x="1101" fg:w="1"/><text x="84.8122%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5622%" y="581" width="0.0768%" height="15" fill="rgb(253,178,36)" fg:x="1101" fg:w="1"/><text x="84.8122%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.7926%" y="565" width="0.0768%" height="15" fill="rgb(210,170,6)" fg:x="1104" fg:w="1"/><text x="85.0426%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.7926%" y="549" width="0.0768%" height="15" fill="rgb(243,62,22)" fg:x="1104" fg:w="1"/><text x="85.0426%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.9462%" y="485" width="0.0768%" height="15" fill="rgb(213,145,26)" fg:x="1106" fg:w="1"/><text x="85.1962%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9462%" y="469" width="0.0768%" height="15" fill="rgb(237,177,23)" fg:x="1106" fg:w="1"/><text x="85.1962%" y="479.50"></text></g><g><title>engine::session::Session::flush (20 samples, 1.54%)</title><rect x="83.5637%" y="789" width="1.5361%" height="15" fill="rgb(252,5,24)" fg:x="1088" fg:w="20"/><text x="83.8137%" y="799.50"></text></g><g><title>engine::session::Session::save_changes (19 samples, 1.46%)</title><rect x="83.6406%" y="773" width="1.4593%" height="15" fill="rgb(230,108,54)" fg:x="1089" fg:w="19"/><text x="83.8906%" y="783.50"></text></g><g><title>engine::session::state::State::close (19 samples, 1.46%)</title><rect x="83.6406%" y="757" width="1.4593%" height="15" fill="rgb(252,192,41)" fg:x="1089" fg:w="19"/><text x="83.8906%" y="767.50"></text></g><g><title>engine::session::state::State::flush_entities (19 samples, 1.46%)</title><rect x="83.6406%" y="741" width="1.4593%" height="15" fill="rgb(218,125,20)" fg:x="1089" fg:w="19"/><text x="83.8906%" y="751.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (18 samples, 1.38%)</title><rect x="83.7174%" y="725" width="1.3825%" height="15" fill="rgb(230,223,15)" fg:x="1090" fg:w="18"/><text x="83.9674%" y="735.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (18 samples, 1.38%)</title><rect x="83.7174%" y="709" width="1.3825%" height="15" fill="rgb(239,99,47)" fg:x="1090" fg:w="18"/><text x="83.9674%" y="719.50"></text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.46%)</title><rect x="84.6390%" y="693" width="0.4608%" height="15" fill="rgb(222,214,23)" fg:x="1102" fg:w="6"/><text x="84.8890%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.46%)</title><rect x="84.6390%" y="677" width="0.4608%" height="15" fill="rgb(250,98,43)" fg:x="1102" fg:w="6"/><text x="84.8890%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.46%)</title><rect x="84.6390%" y="661" width="0.4608%" height="15" fill="rgb(226,140,11)" fg:x="1102" fg:w="6"/><text x="84.8890%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.38%)</title><rect x="84.7158%" y="645" width="0.3840%" height="15" fill="rgb(239,2,22)" fg:x="1103" fg:w="5"/><text x="84.9658%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.31%)</title><rect x="84.7926%" y="629" width="0.3072%" height="15" fill="rgb(209,106,26)" fg:x="1104" fg:w="4"/><text x="85.0426%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="84.7926%" y="613" width="0.3072%" height="15" fill="rgb(209,135,11)" fg:x="1104" fg:w="4"/><text x="85.0426%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="84.7926%" y="597" width="0.3072%" height="15" fill="rgb(241,58,6)" fg:x="1104" fg:w="4"/><text x="85.0426%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="84.7926%" y="581" width="0.3072%" height="15" fill="rgb(214,78,1)" fg:x="1104" fg:w="4"/><text x="85.0426%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="84.8694%" y="565" width="0.2304%" height="15" fill="rgb(229,135,33)" fg:x="1105" fg:w="3"/><text x="85.1194%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="84.9462%" y="549" width="0.1536%" height="15" fill="rgb(245,87,50)" fg:x="1106" fg:w="2"/><text x="85.1962%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="84.9462%" y="533" width="0.1536%" height="15" fill="rgb(222,222,8)" fg:x="1106" fg:w="2"/><text x="85.1962%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="84.9462%" y="517" width="0.1536%" height="15" fill="rgb(214,97,50)" fg:x="1106" fg:w="2"/><text x="85.1962%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="84.9462%" y="501" width="0.1536%" height="15" fill="rgb(244,161,51)" fg:x="1106" fg:w="2"/><text x="85.1962%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0230%" y="485" width="0.0768%" height="15" fill="rgb(225,17,4)" fg:x="1107" fg:w="1"/><text x="85.2730%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.0998%" y="757" width="0.0768%" height="15" fill="rgb(238,10,13)" fg:x="1108" fg:w="1"/><text x="85.3498%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.0998%" y="741" width="0.0768%" height="15" fill="rgb(239,169,14)" fg:x="1108" fg:w="1"/><text x="85.3498%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.0998%" y="725" width="0.0768%" height="15" fill="rgb(213,105,25)" fg:x="1108" fg:w="1"/><text x="85.3498%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0998%" y="709" width="0.0768%" height="15" fill="rgb(233,4,17)" fg:x="1108" fg:w="1"/><text x="85.3498%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0998%" y="693" width="0.0768%" height="15" fill="rgb(212,5,35)" fg:x="1108" fg:w="1"/><text x="85.3498%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0998%" y="677" width="0.0768%" height="15" fill="rgb(216,3,14)" fg:x="1108" fg:w="1"/><text x="85.3498%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0998%" y="661" width="0.0768%" height="15" fill="rgb(240,105,33)" fg:x="1108" fg:w="1"/><text x="85.3498%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.1767%" y="709" width="0.0768%" height="15" fill="rgb(216,73,0)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.1767%" y="693" width="0.0768%" height="15" fill="rgb(217,153,48)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1767%" y="677" width="0.0768%" height="15" fill="rgb(218,180,8)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1767%" y="661" width="0.0768%" height="15" fill="rgb(252,168,2)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1767%" y="645" width="0.0768%" height="15" fill="rgb(224,116,33)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1767%" y="629" width="0.0768%" height="15" fill="rgb(229,205,17)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1767%" y="613" width="0.0768%" height="15" fill="rgb(234,1,41)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.1767%" y="597" width="0.0768%" height="15" fill="rgb(244,185,8)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.1767%" y="581" width="0.0768%" height="15" fill="rgb(248,51,21)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.1767%" y="565" width="0.0768%" height="15" fill="rgb(248,157,31)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.1767%" y="549" width="0.0768%" height="15" fill="rgb(210,34,47)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.1767%" y="533" width="0.0768%" height="15" fill="rgb(227,139,53)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.1767%" y="517" width="0.0768%" height="15" fill="rgb(232,211,37)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.1767%" y="501" width="0.0768%" height="15" fill="rgb(236,133,10)" fg:x="1109" fg:w="1"/><text x="85.4267%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="85.0998%" y="773" width="0.2304%" height="15" fill="rgb(243,202,25)" fg:x="1108" fg:w="3"/><text x="85.3498%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.15%)</title><rect x="85.1767%" y="757" width="0.1536%" height="15" fill="rgb(224,59,9)" fg:x="1109" fg:w="2"/><text x="85.4267%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.15%)</title><rect x="85.1767%" y="741" width="0.1536%" height="15" fill="rgb(206,146,16)" fg:x="1109" fg:w="2"/><text x="85.4267%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.15%)</title><rect x="85.1767%" y="725" width="0.1536%" height="15" fill="rgb(220,47,2)" fg:x="1109" fg:w="2"/><text x="85.4267%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.2535%" y="709" width="0.0768%" height="15" fill="rgb(225,124,51)" fg:x="1110" fg:w="1"/><text x="85.5035%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.2535%" y="693" width="0.0768%" height="15" fill="rgb(241,220,50)" fg:x="1110" fg:w="1"/><text x="85.5035%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2535%" y="677" width="0.0768%" height="15" fill="rgb(232,168,5)" fg:x="1110" fg:w="1"/><text x="85.5035%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2535%" y="661" width="0.0768%" height="15" fill="rgb(243,90,22)" fg:x="1110" fg:w="1"/><text x="85.5035%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2535%" y="645" width="0.0768%" height="15" fill="rgb(223,153,32)" fg:x="1110" fg:w="1"/><text x="85.5035%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2535%" y="629" width="0.0768%" height="15" fill="rgb(243,124,20)" fg:x="1110" fg:w="1"/><text x="85.5035%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2535%" y="613" width="0.0768%" height="15" fill="rgb(246,168,39)" fg:x="1110" fg:w="1"/><text x="85.5035%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2535%" y="597" width="0.0768%" height="15" fill="rgb(222,165,54)" fg:x="1110" fg:w="1"/><text x="85.5035%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.3303%" y="725" width="0.0768%" height="15" fill="rgb(251,142,27)" fg:x="1111" fg:w="1"/><text x="85.5803%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.3303%" y="709" width="0.0768%" height="15" fill="rgb(207,168,50)" fg:x="1111" fg:w="1"/><text x="85.5803%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3303%" y="693" width="0.0768%" height="15" fill="rgb(250,139,25)" fg:x="1111" fg:w="1"/><text x="85.5803%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3303%" y="677" width="0.0768%" height="15" fill="rgb(214,194,48)" fg:x="1111" fg:w="1"/><text x="85.5803%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3303%" y="661" width="0.0768%" height="15" fill="rgb(227,138,47)" fg:x="1111" fg:w="1"/><text x="85.5803%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4071%" y="677" width="0.0768%" height="15" fill="rgb(250,162,5)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4071%" y="661" width="0.0768%" height="15" fill="rgb(229,74,25)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4071%" y="645" width="0.0768%" height="15" fill="rgb(221,124,34)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4071%" y="629" width="0.0768%" height="15" fill="rgb(225,94,25)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4071%" y="613" width="0.0768%" height="15" fill="rgb(210,100,12)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4071%" y="597" width="0.0768%" height="15" fill="rgb(206,62,48)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.4071%" y="581" width="0.0768%" height="15" fill="rgb(222,181,9)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.4071%" y="565" width="0.0768%" height="15" fill="rgb(248,42,38)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.4071%" y="549" width="0.0768%" height="15" fill="rgb(213,40,6)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4071%" y="533" width="0.0768%" height="15" fill="rgb(211,108,15)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4071%" y="517" width="0.0768%" height="15" fill="rgb(249,62,9)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.4071%" y="501" width="0.0768%" height="15" fill="rgb(233,26,54)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.4071%" y="485" width="0.0768%" height="15" fill="rgb(210,175,26)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.4071%" y="469" width="0.0768%" height="15" fill="rgb(210,43,33)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.4071%" y="453" width="0.0768%" height="15" fill="rgb(224,46,17)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4071%" y="437" width="0.0768%" height="15" fill="rgb(254,24,38)" fg:x="1112" fg:w="1"/><text x="85.6571%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4839%" y="677" width="0.0768%" height="15" fill="rgb(248,32,0)" fg:x="1113" fg:w="1"/><text x="85.7339%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="85.3303%" y="757" width="0.3072%" height="15" fill="rgb(224,37,41)" fg:x="1111" fg:w="4"/><text x="85.5803%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="85.3303%" y="741" width="0.3072%" height="15" fill="rgb(252,70,22)" fg:x="1111" fg:w="4"/><text x="85.5803%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="85.4071%" y="725" width="0.2304%" height="15" fill="rgb(241,123,50)" fg:x="1112" fg:w="3"/><text x="85.6571%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="85.4071%" y="709" width="0.2304%" height="15" fill="rgb(246,138,33)" fg:x="1112" fg:w="3"/><text x="85.6571%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="85.4071%" y="693" width="0.2304%" height="15" fill="rgb(218,39,32)" fg:x="1112" fg:w="3"/><text x="85.6571%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5607%" y="677" width="0.0768%" height="15" fill="rgb(241,229,10)" fg:x="1114" fg:w="1"/><text x="85.8107%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.5607%" y="661" width="0.0768%" height="15" fill="rgb(212,160,10)" fg:x="1114" fg:w="1"/><text x="85.8107%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5607%" y="645" width="0.0768%" height="15" fill="rgb(227,48,51)" fg:x="1114" fg:w="1"/><text x="85.8107%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5607%" y="629" width="0.0768%" height="15" fill="rgb(238,159,21)" fg:x="1114" fg:w="1"/><text x="85.8107%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5607%" y="613" width="0.0768%" height="15" fill="rgb(216,1,10)" fg:x="1114" fg:w="1"/><text x="85.8107%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5607%" y="597" width="0.0768%" height="15" fill="rgb(209,228,25)" fg:x="1114" fg:w="1"/><text x="85.8107%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.15%)</title><rect x="85.6375%" y="757" width="0.1536%" height="15" fill="rgb(234,160,10)" fg:x="1115" fg:w="2"/><text x="85.8875%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="85.6375%" y="741" width="0.1536%" height="15" fill="rgb(212,66,25)" fg:x="1115" fg:w="2"/><text x="85.8875%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.7143%" y="725" width="0.0768%" height="15" fill="rgb(254,121,18)" fg:x="1116" fg:w="1"/><text x="85.9643%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.7143%" y="709" width="0.0768%" height="15" fill="rgb(219,127,1)" fg:x="1116" fg:w="1"/><text x="85.9643%" y="719.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7911%" y="741" width="0.0768%" height="15" fill="rgb(219,224,42)" fg:x="1117" fg:w="1"/><text x="86.0411%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.7911%" y="725" width="0.0768%" height="15" fill="rgb(253,130,22)" fg:x="1117" fg:w="1"/><text x="86.0411%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7911%" y="709" width="0.0768%" height="15" fill="rgb(253,39,28)" fg:x="1117" fg:w="1"/><text x="86.0411%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7911%" y="693" width="0.0768%" height="15" fill="rgb(231,126,37)" fg:x="1117" fg:w="1"/><text x="86.0411%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.7911%" y="677" width="0.0768%" height="15" fill="rgb(251,145,14)" fg:x="1117" fg:w="1"/><text x="86.0411%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.15%)</title><rect x="85.7911%" y="757" width="0.1536%" height="15" fill="rgb(229,164,30)" fg:x="1117" fg:w="2"/><text x="86.0411%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="85.8679%" y="741" width="0.0768%" height="15" fill="rgb(233,227,54)" fg:x="1118" fg:w="1"/><text x="86.1179%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.8679%" y="725" width="0.0768%" height="15" fill="rgb(240,94,22)" fg:x="1118" fg:w="1"/><text x="86.1179%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.8679%" y="709" width="0.0768%" height="15" fill="rgb(217,56,16)" fg:x="1118" fg:w="1"/><text x="86.1179%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.8679%" y="693" width="0.0768%" height="15" fill="rgb(229,133,38)" fg:x="1118" fg:w="1"/><text x="86.1179%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8679%" y="677" width="0.0768%" height="15" fill="rgb(225,139,35)" fg:x="1118" fg:w="1"/><text x="86.1179%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.15%)</title><rect x="85.9447%" y="709" width="0.1536%" height="15" fill="rgb(223,100,16)" fg:x="1119" fg:w="2"/><text x="86.1947%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="85.9447%" y="693" width="0.1536%" height="15" fill="rgb(207,43,50)" fg:x="1119" fg:w="2"/><text x="86.1947%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="85.9447%" y="677" width="0.1536%" height="15" fill="rgb(237,221,9)" fg:x="1119" fg:w="2"/><text x="86.1947%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="85.9447%" y="661" width="0.1536%" height="15" fill="rgb(236,134,24)" fg:x="1119" fg:w="2"/><text x="86.1947%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="85.9447%" y="645" width="0.1536%" height="15" fill="rgb(222,173,4)" fg:x="1119" fg:w="2"/><text x="86.1947%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="85.9447%" y="629" width="0.1536%" height="15" fill="rgb(234,144,52)" fg:x="1119" fg:w="2"/><text x="86.1947%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="85.9447%" y="613" width="0.1536%" height="15" fill="rgb(223,41,7)" fg:x="1119" fg:w="2"/><text x="86.1947%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0215%" y="597" width="0.0768%" height="15" fill="rgb(226,143,9)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0215%" y="581" width="0.0768%" height="15" fill="rgb(234,43,37)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0215%" y="565" width="0.0768%" height="15" fill="rgb(224,188,11)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.0215%" y="549" width="0.0768%" height="15" fill="rgb(233,113,28)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.0215%" y="533" width="0.0768%" height="15" fill="rgb(215,16,1)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.0215%" y="517" width="0.0768%" height="15" fill="rgb(238,74,38)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0215%" y="501" width="0.0768%" height="15" fill="rgb(221,66,35)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0215%" y="485" width="0.0768%" height="15" fill="rgb(251,225,2)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.0215%" y="469" width="0.0768%" height="15" fill="rgb(240,169,18)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.0215%" y="453" width="0.0768%" height="15" fill="rgb(243,130,50)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.0215%" y="437" width="0.0768%" height="15" fill="rgb(228,75,13)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.0215%" y="421" width="0.0768%" height="15" fill="rgb(252,95,35)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0215%" y="405" width="0.0768%" height="15" fill="rgb(222,180,54)" fg:x="1120" fg:w="1"/><text x="86.2715%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0983%" y="661" width="0.0768%" height="15" fill="rgb(250,110,34)" fg:x="1121" fg:w="1"/><text x="86.3483%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0983%" y="645" width="0.0768%" height="15" fill="rgb(208,100,21)" fg:x="1121" fg:w="1"/><text x="86.3483%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.23%)</title><rect x="85.0998%" y="789" width="1.2289%" height="15" fill="rgb(209,123,47)" fg:x="1108" fg:w="16"/><text x="85.3498%" y="799.50"></text></g><g><title>plugins_core::tools::set_container (13 samples, 1.00%)</title><rect x="85.3303%" y="773" width="0.9985%" height="15" fill="rgb(237,147,9)" fg:x="1111" fg:w="13"/><text x="85.5803%" y="783.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.38%)</title><rect x="85.9447%" y="757" width="0.3840%" height="15" fill="rgb(228,206,23)" fg:x="1119" fg:w="5"/><text x="86.1947%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.38%)</title><rect x="85.9447%" y="741" width="0.3840%" height="15" fill="rgb(217,174,46)" fg:x="1119" fg:w="5"/><text x="86.1947%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.38%)</title><rect x="85.9447%" y="725" width="0.3840%" height="15" fill="rgb(231,126,21)" fg:x="1119" fg:w="5"/><text x="86.1947%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="86.0983%" y="709" width="0.2304%" height="15" fill="rgb(245,26,1)" fg:x="1121" fg:w="3"/><text x="86.3483%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="86.0983%" y="693" width="0.2304%" height="15" fill="rgb(224,138,39)" fg:x="1121" fg:w="3"/><text x="86.3483%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="86.0983%" y="677" width="0.2304%" height="15" fill="rgb(208,97,3)" fg:x="1121" fg:w="3"/><text x="86.3483%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="86.1751%" y="661" width="0.1536%" height="15" fill="rgb(222,77,29)" fg:x="1122" fg:w="2"/><text x="86.4251%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="86.1751%" y="645" width="0.1536%" height="15" fill="rgb(243,188,36)" fg:x="1122" fg:w="2"/><text x="86.4251%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="86.1751%" y="629" width="0.1536%" height="15" fill="rgb(218,214,3)" fg:x="1122" fg:w="2"/><text x="86.4251%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="86.1751%" y="613" width="0.1536%" height="15" fill="rgb(211,183,45)" fg:x="1122" fg:w="2"/><text x="86.4251%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="86.1751%" y="597" width="0.1536%" height="15" fill="rgb(230,218,25)" fg:x="1122" fg:w="2"/><text x="86.4251%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="86.1751%" y="581" width="0.1536%" height="15" fill="rgb(233,86,6)" fg:x="1122" fg:w="2"/><text x="86.4251%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="86.1751%" y="565" width="0.1536%" height="15" fill="rgb(220,59,24)" fg:x="1122" fg:w="2"/><text x="86.4251%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="86.1751%" y="549" width="0.1536%" height="15" fill="rgb(227,60,1)" fg:x="1122" fg:w="2"/><text x="86.4251%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2519%" y="533" width="0.0768%" height="15" fill="rgb(216,212,54)" fg:x="1123" fg:w="1"/><text x="86.5019%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2519%" y="517" width="0.0768%" height="15" fill="rgb(227,81,54)" fg:x="1123" fg:w="1"/><text x="86.5019%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2519%" y="501" width="0.0768%" height="15" fill="rgb(206,204,43)" fg:x="1123" fg:w="1"/><text x="86.5019%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="86.3287%" y="789" width="0.0768%" height="15" fill="rgb(219,29,26)" fg:x="1124" fg:w="1"/><text x="86.5787%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="86.3287%" y="773" width="0.0768%" height="15" fill="rgb(252,40,36)" fg:x="1124" fg:w="1"/><text x="86.5787%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.3287%" y="757" width="0.0768%" height="15" fill="rgb(224,205,39)" fg:x="1124" fg:w="1"/><text x="86.5787%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.3287%" y="741" width="0.0768%" height="15" fill="rgb(222,13,21)" fg:x="1124" fg:w="1"/><text x="86.5787%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.3287%" y="725" width="0.0768%" height="15" fill="rgb(243,139,6)" fg:x="1124" fg:w="1"/><text x="86.5787%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3287%" y="709" width="0.0768%" height="15" fill="rgb(237,101,11)" fg:x="1124" fg:w="1"/><text x="86.5787%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3287%" y="693" width="0.0768%" height="15" fill="rgb(254,49,28)" fg:x="1124" fg:w="1"/><text x="86.5787%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3287%" y="677" width="0.0768%" height="15" fill="rgb(223,41,21)" fg:x="1124" fg:w="1"/><text x="86.5787%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3287%" y="661" width="0.0768%" height="15" fill="rgb(225,103,29)" fg:x="1124" fg:w="1"/><text x="86.5787%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.15%)</title><rect x="86.4055%" y="789" width="0.1536%" height="15" fill="rgb(244,82,43)" fg:x="1125" fg:w="2"/><text x="86.6555%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.15%)</title><rect x="86.4055%" y="773" width="0.1536%" height="15" fill="rgb(217,39,3)" fg:x="1125" fg:w="2"/><text x="86.6555%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="86.4055%" y="757" width="0.1536%" height="15" fill="rgb(239,128,25)" fg:x="1125" fg:w="2"/><text x="86.6555%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="86.4055%" y="741" width="0.1536%" height="15" fill="rgb(210,192,37)" fg:x="1125" fg:w="2"/><text x="86.6555%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="86.4055%" y="725" width="0.1536%" height="15" fill="rgb(219,98,18)" fg:x="1125" fg:w="2"/><text x="86.6555%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="86.4055%" y="709" width="0.1536%" height="15" fill="rgb(224,228,38)" fg:x="1125" fg:w="2"/><text x="86.6555%" y="719.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="86.4055%" y="693" width="0.1536%" height="15" fill="rgb(241,129,43)" fg:x="1125" fg:w="2"/><text x="86.6555%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="86.5591%" y="773" width="0.0768%" height="15" fill="rgb(223,8,51)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="86.5591%" y="757" width="0.0768%" height="15" fill="rgb(233,76,24)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.5591%" y="741" width="0.0768%" height="15" fill="rgb(219,115,10)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.5591%" y="725" width="0.0768%" height="15" fill="rgb(222,137,12)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.5591%" y="709" width="0.0768%" height="15" fill="rgb(216,192,16)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.5591%" y="693" width="0.0768%" height="15" fill="rgb(247,6,27)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5591%" y="677" width="0.0768%" height="15" fill="rgb(254,39,44)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5591%" y="661" width="0.0768%" height="15" fill="rgb(251,116,35)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5591%" y="645" width="0.0768%" height="15" fill="rgb(208,61,44)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5591%" y="629" width="0.0768%" height="15" fill="rgb(250,34,5)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.5591%" y="613" width="0.0768%" height="15" fill="rgb(241,40,15)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.5591%" y="597" width="0.0768%" height="15" fill="rgb(229,182,2)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.5591%" y="581" width="0.0768%" height="15" fill="rgb(244,148,52)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5591%" y="565" width="0.0768%" height="15" fill="rgb(225,211,4)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5591%" y="549" width="0.0768%" height="15" fill="rgb(208,222,47)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.5591%" y="533" width="0.0768%" height="15" fill="rgb(233,162,0)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.5591%" y="517" width="0.0768%" height="15" fill="rgb(241,54,13)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.5591%" y="501" width="0.0768%" height="15" fill="rgb(213,89,18)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.5591%" y="485" width="0.0768%" height="15" fill="rgb(215,170,37)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.5591%" y="469" width="0.0768%" height="15" fill="rgb(216,133,15)" fg:x="1127" fg:w="1"/><text x="86.8091%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6359%" y="613" width="0.0768%" height="15" fill="rgb(230,42,19)" fg:x="1128" fg:w="1"/><text x="86.8859%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6359%" y="597" width="0.0768%" height="15" fill="rgb(221,103,41)" fg:x="1128" fg:w="1"/><text x="86.8859%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7127%" y="613" width="0.0768%" height="15" fill="rgb(220,142,31)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7127%" y="597" width="0.0768%" height="15" fill="rgb(239,218,4)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.7127%" y="581" width="0.0768%" height="15" fill="rgb(232,16,4)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.7127%" y="565" width="0.0768%" height="15" fill="rgb(226,213,25)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.7127%" y="549" width="0.0768%" height="15" fill="rgb(235,135,19)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7127%" y="533" width="0.0768%" height="15" fill="rgb(240,107,29)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7127%" y="517" width="0.0768%" height="15" fill="rgb(206,164,44)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.7127%" y="501" width="0.0768%" height="15" fill="rgb(210,23,48)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.7127%" y="485" width="0.0768%" height="15" fill="rgb(212,138,25)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.7127%" y="469" width="0.0768%" height="15" fill="rgb(224,152,3)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.7127%" y="453" width="0.0768%" height="15" fill="rgb(214,38,23)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7127%" y="437" width="0.0768%" height="15" fill="rgb(215,161,10)" fg:x="1129" fg:w="1"/><text x="86.9627%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.23%)</title><rect x="86.6359%" y="757" width="0.2304%" height="15" fill="rgb(240,185,7)" fg:x="1128" fg:w="3"/><text x="86.8859%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.23%)</title><rect x="86.6359%" y="741" width="0.2304%" height="15" fill="rgb(244,104,25)" fg:x="1128" fg:w="3"/><text x="86.8859%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="86.6359%" y="725" width="0.2304%" height="15" fill="rgb(242,140,44)" fg:x="1128" fg:w="3"/><text x="86.8859%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="86.6359%" y="709" width="0.2304%" height="15" fill="rgb(245,30,19)" fg:x="1128" fg:w="3"/><text x="86.8859%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="86.6359%" y="693" width="0.2304%" height="15" fill="rgb(219,208,35)" fg:x="1128" fg:w="3"/><text x="86.8859%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="86.6359%" y="677" width="0.2304%" height="15" fill="rgb(235,200,7)" fg:x="1128" fg:w="3"/><text x="86.8859%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="86.6359%" y="661" width="0.2304%" height="15" fill="rgb(220,193,10)" fg:x="1128" fg:w="3"/><text x="86.8859%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="86.6359%" y="645" width="0.2304%" height="15" fill="rgb(212,216,39)" fg:x="1128" fg:w="3"/><text x="86.8859%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="86.6359%" y="629" width="0.2304%" height="15" fill="rgb(212,134,19)" fg:x="1128" fg:w="3"/><text x="86.8859%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7896%" y="613" width="0.0768%" height="15" fill="rgb(230,57,24)" fg:x="1130" fg:w="1"/><text x="87.0396%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (53 samples, 4.07%)</title><rect x="82.8725%" y="805" width="4.0707%" height="15" fill="rgb(238,209,37)" fg:x="1079" fg:w="53"/><text x="83.1225%" y="815.50">plug..</text></g><g><title>plugins_core::build::Build::occupying (5 samples, 0.38%)</title><rect x="86.5591%" y="789" width="0.3840%" height="15" fill="rgb(247,11,45)" fg:x="1127" fg:w="5"/><text x="86.8091%" y="799.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.31%)</title><rect x="86.6359%" y="773" width="0.3072%" height="15" fill="rgb(222,126,6)" fg:x="1128" fg:w="4"/><text x="86.8859%" y="783.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="86.8664%" y="757" width="0.0768%" height="15" fill="rgb(245,77,24)" fg:x="1131" fg:w="1"/><text x="87.1164%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="86.8664%" y="741" width="0.0768%" height="15" fill="rgb(227,14,24)" fg:x="1131" fg:w="1"/><text x="87.1164%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.8664%" y="725" width="0.0768%" height="15" fill="rgb(211,112,42)" fg:x="1131" fg:w="1"/><text x="87.1164%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.8664%" y="709" width="0.0768%" height="15" fill="rgb(230,103,42)" fg:x="1131" fg:w="1"/><text x="87.1164%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.8664%" y="693" width="0.0768%" height="15" fill="rgb(228,125,42)" fg:x="1131" fg:w="1"/><text x="87.1164%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.8664%" y="677" width="0.0768%" height="15" fill="rgb(243,33,6)" fg:x="1131" fg:w="1"/><text x="87.1164%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8664%" y="661" width="0.0768%" height="15" fill="rgb(231,2,40)" fg:x="1131" fg:w="1"/><text x="87.1164%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.9432%" y="757" width="0.0768%" height="15" fill="rgb(224,200,53)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.9432%" y="741" width="0.0768%" height="15" fill="rgb(215,116,36)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.9432%" y="725" width="0.0768%" height="15" fill="rgb(240,23,51)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.9432%" y="709" width="0.0768%" height="15" fill="rgb(221,72,5)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9432%" y="693" width="0.0768%" height="15" fill="rgb(245,142,9)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.9432%" y="677" width="0.0768%" height="15" fill="rgb(207,34,16)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9432%" y="661" width="0.0768%" height="15" fill="rgb(252,101,12)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.9432%" y="645" width="0.0768%" height="15" fill="rgb(239,89,37)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9432%" y="629" width="0.0768%" height="15" fill="rgb(252,227,37)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.9432%" y="613" width="0.0768%" height="15" fill="rgb(212,164,17)" fg:x="1132" fg:w="1"/><text x="87.1932%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.0200%" y="709" width="0.0768%" height="15" fill="rgb(240,86,13)" fg:x="1133" fg:w="1"/><text x="87.2700%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.0200%" y="693" width="0.0768%" height="15" fill="rgb(233,183,32)" fg:x="1133" fg:w="1"/><text x="87.2700%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0200%" y="677" width="0.0768%" height="15" fill="rgb(205,201,38)" fg:x="1133" fg:w="1"/><text x="87.2700%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0200%" y="661" width="0.0768%" height="15" fill="rgb(210,122,38)" fg:x="1133" fg:w="1"/><text x="87.2700%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="86.9432%" y="773" width="0.2304%" height="15" fill="rgb(241,174,26)" fg:x="1132" fg:w="3"/><text x="87.1932%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.15%)</title><rect x="87.0200%" y="757" width="0.1536%" height="15" fill="rgb(219,89,7)" fg:x="1133" fg:w="2"/><text x="87.2700%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.15%)</title><rect x="87.0200%" y="741" width="0.1536%" height="15" fill="rgb(246,9,24)" fg:x="1133" fg:w="2"/><text x="87.2700%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.15%)</title><rect x="87.0200%" y="725" width="0.1536%" height="15" fill="rgb(205,132,21)" fg:x="1133" fg:w="2"/><text x="87.2700%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.0968%" y="709" width="0.0768%" height="15" fill="rgb(210,11,17)" fg:x="1134" fg:w="1"/><text x="87.3468%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.0968%" y="693" width="0.0768%" height="15" fill="rgb(226,138,14)" fg:x="1134" fg:w="1"/><text x="87.3468%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0968%" y="677" width="0.0768%" height="15" fill="rgb(224,108,44)" fg:x="1134" fg:w="1"/><text x="87.3468%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0968%" y="661" width="0.0768%" height="15" fill="rgb(247,114,36)" fg:x="1134" fg:w="1"/><text x="87.3468%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0968%" y="645" width="0.0768%" height="15" fill="rgb(231,183,14)" fg:x="1134" fg:w="1"/><text x="87.3468%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0968%" y="629" width="0.0768%" height="15" fill="rgb(218,168,4)" fg:x="1134" fg:w="1"/><text x="87.3468%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="87.1736%" y="773" width="0.0768%" height="15" fill="rgb(210,8,3)" fg:x="1135" fg:w="1"/><text x="87.4236%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="87.1736%" y="757" width="0.0768%" height="15" fill="rgb(216,165,0)" fg:x="1135" fg:w="1"/><text x="87.4236%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="87.1736%" y="741" width="0.0768%" height="15" fill="rgb(245,120,5)" fg:x="1135" fg:w="1"/><text x="87.4236%" y="751.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.38%)</title><rect x="86.9432%" y="805" width="0.3840%" height="15" fill="rgb(249,121,32)" fg:x="1132" fg:w="5"/><text x="87.1932%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.38%)</title><rect x="86.9432%" y="789" width="0.3840%" height="15" fill="rgb(211,55,33)" fg:x="1132" fg:w="5"/><text x="87.1932%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="87.2504%" y="773" width="0.0768%" height="15" fill="rgb(254,46,35)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="87.2504%" y="757" width="0.0768%" height="15" fill="rgb(213,213,19)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.2504%" y="741" width="0.0768%" height="15" fill="rgb(207,152,44)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.2504%" y="725" width="0.0768%" height="15" fill="rgb(227,195,36)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2504%" y="709" width="0.0768%" height="15" fill="rgb(210,137,36)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.2504%" y="693" width="0.0768%" height="15" fill="rgb(253,47,47)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2504%" y="677" width="0.0768%" height="15" fill="rgb(230,147,18)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.2504%" y="661" width="0.0768%" height="15" fill="rgb(247,33,49)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.2504%" y="645" width="0.0768%" height="15" fill="rgb(239,26,29)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2504%" y="629" width="0.0768%" height="15" fill="rgb(245,145,52)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2504%" y="613" width="0.0768%" height="15" fill="rgb(224,139,32)" fg:x="1136" fg:w="1"/><text x="87.5004%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.5576%" y="773" width="0.0768%" height="15" fill="rgb(238,202,19)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.5576%" y="757" width="0.0768%" height="15" fill="rgb(249,211,53)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.5576%" y="741" width="0.0768%" height="15" fill="rgb(237,229,33)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.5576%" y="725" width="0.0768%" height="15" fill="rgb(208,97,40)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5576%" y="709" width="0.0768%" height="15" fill="rgb(254,36,16)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5576%" y="693" width="0.0768%" height="15" fill="rgb(221,7,12)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.5576%" y="677" width="0.0768%" height="15" fill="rgb(205,11,12)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.5576%" y="661" width="0.0768%" height="15" fill="rgb(227,72,28)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5576%" y="645" width="0.0768%" height="15" fill="rgb(228,7,34)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5576%" y="629" width="0.0768%" height="15" fill="rgb(230,52,42)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.5576%" y="613" width="0.0768%" height="15" fill="rgb(219,177,53)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.5576%" y="597" width="0.0768%" height="15" fill="rgb(243,196,34)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5576%" y="581" width="0.0768%" height="15" fill="rgb(213,66,49)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5576%" y="565" width="0.0768%" height="15" fill="rgb(233,11,50)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.5576%" y="549" width="0.0768%" height="15" fill="rgb(235,190,6)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.5576%" y="533" width="0.0768%" height="15" fill="rgb(212,64,44)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.5576%" y="517" width="0.0768%" height="15" fill="rgb(206,95,44)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.5576%" y="501" width="0.0768%" height="15" fill="rgb(227,136,25)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.5576%" y="485" width="0.0768%" height="15" fill="rgb(206,178,17)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.5576%" y="469" width="0.0768%" height="15" fill="rgb(208,168,35)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.5576%" y="453" width="0.0768%" height="15" fill="rgb(213,210,40)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.5576%" y="437" width="0.0768%" height="15" fill="rgb(236,60,6)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.5576%" y="421" width="0.0768%" height="15" fill="rgb(220,186,36)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="87.5576%" y="405" width="0.0768%" height="15" fill="rgb(225,120,49)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.5576%" y="389" width="0.0768%" height="15" fill="rgb(250,115,20)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="87.5576%" y="373" width="0.0768%" height="15" fill="rgb(207,214,23)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="87.5576%" y="357" width="0.0768%" height="15" fill="rgb(240,9,18)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="87.5576%" y="341" width="0.0768%" height="15" fill="rgb(232,170,48)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.5576%" y="325" width="0.0768%" height="15" fill="rgb(236,149,23)" fg:x="1140" fg:w="1"/><text x="87.8076%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="87.4808%" y="789" width="0.2304%" height="15" fill="rgb(210,125,42)" fg:x="1139" fg:w="3"/><text x="87.7308%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="87.6344%" y="773" width="0.0768%" height="15" fill="rgb(207,201,52)" fg:x="1141" fg:w="1"/><text x="87.8844%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="87.6344%" y="757" width="0.0768%" height="15" fill="rgb(250,187,37)" fg:x="1141" fg:w="1"/><text x="87.8844%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="87.6344%" y="741" width="0.0768%" height="15" fill="rgb(214,186,2)" fg:x="1141" fg:w="1"/><text x="87.8844%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="87.7112%" y="789" width="0.0768%" height="15" fill="rgb(207,189,15)" fg:x="1142" fg:w="1"/><text x="87.9612%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="87.7112%" y="773" width="0.0768%" height="15" fill="rgb(221,99,21)" fg:x="1142" fg:w="1"/><text x="87.9612%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.7112%" y="757" width="0.0768%" height="15" fill="rgb(212,67,18)" fg:x="1142" fg:w="1"/><text x="87.9612%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.7112%" y="741" width="0.0768%" height="15" fill="rgb(226,24,24)" fg:x="1142" fg:w="1"/><text x="87.9612%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7112%" y="725" width="0.0768%" height="15" fill="rgb(252,123,31)" fg:x="1142" fg:w="1"/><text x="87.9612%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.7112%" y="709" width="0.0768%" height="15" fill="rgb(251,227,47)" fg:x="1142" fg:w="1"/><text x="87.9612%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7112%" y="693" width="0.0768%" height="15" fill="rgb(233,84,53)" fg:x="1142" fg:w="1"/><text x="87.9612%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7112%" y="677" width="0.0768%" height="15" fill="rgb(228,57,19)" fg:x="1142" fg:w="1"/><text x="87.9612%" y="687.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (98 samples, 7.53%)</title><rect x="80.4147%" y="821" width="7.5269%" height="15" fill="rgb(251,81,5)" fg:x="1047" fg:w="98"/><text x="80.6647%" y="831.50">&lt;tests::Ho..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.61%)</title><rect x="87.3272%" y="805" width="0.6144%" height="15" fill="rgb(236,211,27)" fg:x="1137" fg:w="8"/><text x="87.5772%" y="815.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.15%)</title><rect x="87.7880%" y="789" width="0.1536%" height="15" fill="rgb(218,21,6)" fg:x="1143" fg:w="2"/><text x="88.0380%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.15%)</title><rect x="87.7880%" y="773" width="0.1536%" height="15" fill="rgb(239,104,19)" fg:x="1143" fg:w="2"/><text x="88.0380%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.15%)</title><rect x="87.7880%" y="757" width="0.1536%" height="15" fill="rgb(234,179,27)" fg:x="1143" fg:w="2"/><text x="88.0380%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="87.7880%" y="741" width="0.1536%" height="15" fill="rgb(221,154,39)" fg:x="1143" fg:w="2"/><text x="88.0380%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="87.7880%" y="725" width="0.1536%" height="15" fill="rgb(228,190,1)" fg:x="1143" fg:w="2"/><text x="88.0380%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="87.7880%" y="709" width="0.1536%" height="15" fill="rgb(244,122,33)" fg:x="1143" fg:w="2"/><text x="88.0380%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="87.7880%" y="693" width="0.1536%" height="15" fill="rgb(227,56,37)" fg:x="1143" fg:w="2"/><text x="88.0380%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="87.9416%" y="821" width="0.0768%" height="15" fill="rgb(207,158,16)" fg:x="1145" fg:w="1"/><text x="88.1916%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="87.9416%" y="805" width="0.0768%" height="15" fill="rgb(251,222,30)" fg:x="1145" fg:w="1"/><text x="88.1916%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="87.9416%" y="789" width="0.0768%" height="15" fill="rgb(240,22,49)" fg:x="1145" fg:w="1"/><text x="88.1916%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.9416%" y="773" width="0.0768%" height="15" fill="rgb(224,207,37)" fg:x="1145" fg:w="1"/><text x="88.1916%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9416%" y="757" width="0.0768%" height="15" fill="rgb(249,188,40)" fg:x="1145" fg:w="1"/><text x="88.1916%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="88.0184%" y="757" width="0.0768%" height="15" fill="rgb(254,141,11)" fg:x="1146" fg:w="1"/><text x="88.2684%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0184%" y="741" width="0.0768%" height="15" fill="rgb(231,177,6)" fg:x="1146" fg:w="1"/><text x="88.2684%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1720%" y="693" width="0.0768%" height="15" fill="rgb(241,6,16)" fg:x="1148" fg:w="1"/><text x="88.4220%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1720%" y="677" width="0.0768%" height="15" fill="rgb(230,50,14)" fg:x="1148" fg:w="1"/><text x="88.4220%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.2488%" y="693" width="0.0768%" height="15" fill="rgb(254,36,3)" fg:x="1149" fg:w="1"/><text x="88.4988%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.2488%" y="677" width="0.0768%" height="15" fill="rgb(226,149,37)" fg:x="1149" fg:w="1"/><text x="88.4988%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.2488%" y="661" width="0.0768%" height="15" fill="rgb(253,49,27)" fg:x="1149" fg:w="1"/><text x="88.4988%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.2488%" y="645" width="0.0768%" height="15" fill="rgb(249,182,52)" fg:x="1149" fg:w="1"/><text x="88.4988%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.2488%" y="629" width="0.0768%" height="15" fill="rgb(223,42,15)" fg:x="1149" fg:w="1"/><text x="88.4988%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="88.2488%" y="613" width="0.0768%" height="15" fill="rgb(232,31,42)" fg:x="1149" fg:w="1"/><text x="88.4988%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.2488%" y="597" width="0.0768%" height="15" fill="rgb(233,56,46)" fg:x="1149" fg:w="1"/><text x="88.4988%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (5 samples, 0.38%)</title><rect x="88.0184%" y="789" width="0.3840%" height="15" fill="rgb(241,143,21)" fg:x="1146" fg:w="5"/><text x="88.2684%" y="799.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (5 samples, 0.38%)</title><rect x="88.0184%" y="773" width="0.3840%" height="15" fill="rgb(251,222,15)" fg:x="1146" fg:w="5"/><text x="88.2684%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.31%)</title><rect x="88.0952%" y="757" width="0.3072%" height="15" fill="rgb(242,101,40)" fg:x="1147" fg:w="4"/><text x="88.3452%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="88.0952%" y="741" width="0.3072%" height="15" fill="rgb(247,60,44)" fg:x="1147" fg:w="4"/><text x="88.3452%" y="751.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="88.1720%" y="725" width="0.2304%" height="15" fill="rgb(254,48,47)" fg:x="1148" fg:w="3"/><text x="88.4220%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="88.1720%" y="709" width="0.2304%" height="15" fill="rgb(253,30,33)" fg:x="1148" fg:w="3"/><text x="88.4220%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.3257%" y="693" width="0.0768%" height="15" fill="rgb(253,214,47)" fg:x="1150" fg:w="1"/><text x="88.5757%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.4025%" y="773" width="0.0768%" height="15" fill="rgb(241,108,29)" fg:x="1151" fg:w="1"/><text x="88.6525%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="88.4025%" y="757" width="0.0768%" height="15" fill="rgb(240,36,2)" fg:x="1151" fg:w="1"/><text x="88.6525%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.5561%" y="709" width="0.0768%" height="15" fill="rgb(243,198,24)" fg:x="1153" fg:w="1"/><text x="88.8061%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="88.6329%" y="677" width="0.1536%" height="15" fill="rgb(225,98,27)" fg:x="1154" fg:w="2"/><text x="88.8829%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="88.6329%" y="661" width="0.1536%" height="15" fill="rgb(208,86,30)" fg:x="1154" fg:w="2"/><text x="88.8829%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.7097%" y="645" width="0.0768%" height="15" fill="rgb(242,157,11)" fg:x="1155" fg:w="1"/><text x="88.9597%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7097%" y="629" width="0.0768%" height="15" fill="rgb(244,84,16)" fg:x="1155" fg:w="1"/><text x="88.9597%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.7865%" y="661" width="0.0768%" height="15" fill="rgb(247,20,46)" fg:x="1156" fg:w="1"/><text x="89.0365%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.7865%" y="645" width="0.0768%" height="15" fill="rgb(240,157,20)" fg:x="1156" fg:w="1"/><text x="89.0365%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.7865%" y="629" width="0.0768%" height="15" fill="rgb(212,151,38)" fg:x="1156" fg:w="1"/><text x="89.0365%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="88.7865%" y="613" width="0.0768%" height="15" fill="rgb(233,197,14)" fg:x="1156" fg:w="1"/><text x="89.0365%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="88.8633%" y="645" width="0.1536%" height="15" fill="rgb(226,148,28)" fg:x="1157" fg:w="2"/><text x="89.1133%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="88.8633%" y="629" width="0.1536%" height="15" fill="rgb(244,141,30)" fg:x="1157" fg:w="2"/><text x="89.1133%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.15%)</title><rect x="89.0169%" y="645" width="0.1536%" height="15" fill="rgb(215,73,38)" fg:x="1159" fg:w="2"/><text x="89.2669%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="89.0169%" y="629" width="0.1536%" height="15" fill="rgb(230,148,29)" fg:x="1159" fg:w="2"/><text x="89.2669%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="89.0169%" y="613" width="0.1536%" height="15" fill="rgb(250,41,52)" fg:x="1159" fg:w="2"/><text x="89.2669%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.0937%" y="597" width="0.0768%" height="15" fill="rgb(215,48,1)" fg:x="1160" fg:w="1"/><text x="89.3437%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.0937%" y="581" width="0.0768%" height="15" fill="rgb(205,223,38)" fg:x="1160" fg:w="1"/><text x="89.3437%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.61%)</title><rect x="88.6329%" y="693" width="0.6144%" height="15" fill="rgb(213,51,8)" fg:x="1154" fg:w="8"/><text x="88.8829%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.46%)</title><rect x="88.7865%" y="677" width="0.4608%" height="15" fill="rgb(248,53,11)" fg:x="1156" fg:w="6"/><text x="89.0365%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.38%)</title><rect x="88.8633%" y="661" width="0.3840%" height="15" fill="rgb(218,140,4)" fg:x="1157" fg:w="5"/><text x="89.1133%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.1705%" y="645" width="0.0768%" height="15" fill="rgb(248,161,31)" fg:x="1161" fg:w="1"/><text x="89.4205%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.1705%" y="629" width="0.0768%" height="15" fill="rgb(239,88,32)" fg:x="1161" fg:w="1"/><text x="89.4205%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.1705%" y="613" width="0.0768%" height="15" fill="rgb(234,14,28)" fg:x="1161" fg:w="1"/><text x="89.4205%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.1705%" y="597" width="0.0768%" height="15" fill="rgb(235,173,11)" fg:x="1161" fg:w="1"/><text x="89.4205%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.1705%" y="581" width="0.0768%" height="15" fill="rgb(222,70,2)" fg:x="1161" fg:w="1"/><text x="89.4205%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.1705%" y="565" width="0.0768%" height="15" fill="rgb(228,196,41)" fg:x="1161" fg:w="1"/><text x="89.4205%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.77%)</title><rect x="88.5561%" y="725" width="0.7680%" height="15" fill="rgb(249,19,9)" fg:x="1153" fg:w="10"/><text x="88.8061%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.69%)</title><rect x="88.6329%" y="709" width="0.6912%" height="15" fill="rgb(221,16,43)" fg:x="1154" fg:w="9"/><text x="88.8829%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.2473%" y="693" width="0.0768%" height="15" fill="rgb(225,207,6)" fg:x="1162" fg:w="1"/><text x="89.4973%" y="703.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.92%)</title><rect x="88.4793%" y="741" width="0.9217%" height="15" fill="rgb(249,32,32)" fg:x="1152" fg:w="12"/><text x="88.7293%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.3241%" y="725" width="0.0768%" height="15" fill="rgb(232,163,43)" fg:x="1163" fg:w="1"/><text x="89.5741%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4009%" y="677" width="0.0768%" height="15" fill="rgb(236,158,54)" fg:x="1164" fg:w="1"/><text x="89.6509%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="89.4009%" y="741" width="0.1536%" height="15" fill="rgb(205,126,44)" fg:x="1164" fg:w="2"/><text x="89.6509%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.15%)</title><rect x="89.4009%" y="725" width="0.1536%" height="15" fill="rgb(210,162,12)" fg:x="1164" fg:w="2"/><text x="89.6509%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="89.4009%" y="709" width="0.1536%" height="15" fill="rgb(218,156,48)" fg:x="1164" fg:w="2"/><text x="89.6509%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="89.4009%" y="693" width="0.1536%" height="15" fill="rgb(248,210,3)" fg:x="1164" fg:w="2"/><text x="89.6509%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4777%" y="677" width="0.0768%" height="15" fill="rgb(212,43,27)" fg:x="1165" fg:w="1"/><text x="89.7277%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4777%" y="661" width="0.0768%" height="15" fill="rgb(241,52,6)" fg:x="1165" fg:w="1"/><text x="89.7277%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6313%" y="709" width="0.0768%" height="15" fill="rgb(222,178,35)" fg:x="1167" fg:w="1"/><text x="89.8813%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7849%" y="629" width="0.0768%" height="15" fill="rgb(205,121,46)" fg:x="1169" fg:w="1"/><text x="90.0349%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="89.7081%" y="709" width="0.2304%" height="15" fill="rgb(249,67,1)" fg:x="1168" fg:w="3"/><text x="89.9581%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="89.7081%" y="693" width="0.2304%" height="15" fill="rgb(238,168,42)" fg:x="1168" fg:w="3"/><text x="89.9581%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="89.7081%" y="677" width="0.2304%" height="15" fill="rgb(205,36,48)" fg:x="1168" fg:w="3"/><text x="89.9581%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="89.7081%" y="661" width="0.2304%" height="15" fill="rgb(240,85,12)" fg:x="1168" fg:w="3"/><text x="89.9581%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="89.7081%" y="645" width="0.2304%" height="15" fill="rgb(245,27,39)" fg:x="1168" fg:w="3"/><text x="89.9581%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8618%" y="629" width="0.0768%" height="15" fill="rgb(218,129,34)" fg:x="1170" fg:w="1"/><text x="90.1118%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.8618%" y="613" width="0.0768%" height="15" fill="rgb(221,157,12)" fg:x="1170" fg:w="1"/><text x="90.1118%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8618%" y="597" width="0.0768%" height="15" fill="rgb(213,206,20)" fg:x="1170" fg:w="1"/><text x="90.1118%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.9386%" y="693" width="0.0768%" height="15" fill="rgb(227,115,30)" fg:x="1171" fg:w="1"/><text x="90.1886%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.9386%" y="677" width="0.0768%" height="15" fill="rgb(221,40,47)" fg:x="1171" fg:w="1"/><text x="90.1886%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.9386%" y="661" width="0.0768%" height="15" fill="rgb(239,96,49)" fg:x="1171" fg:w="1"/><text x="90.1886%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.9386%" y="645" width="0.0768%" height="15" fill="rgb(223,24,38)" fg:x="1171" fg:w="1"/><text x="90.1886%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="90.0154%" y="693" width="0.0768%" height="15" fill="rgb(242,35,45)" fg:x="1172" fg:w="1"/><text x="90.2654%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.0922%" y="677" width="0.0768%" height="15" fill="rgb(236,20,9)" fg:x="1173" fg:w="1"/><text x="90.3422%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1690%" y="629" width="0.0768%" height="15" fill="rgb(239,124,8)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1690%" y="613" width="0.0768%" height="15" fill="rgb(228,92,29)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.1690%" y="597" width="0.0768%" height="15" fill="rgb(251,53,39)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.1690%" y="581" width="0.0768%" height="15" fill="rgb(224,44,10)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.1690%" y="565" width="0.0768%" height="15" fill="rgb(254,10,15)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.1690%" y="549" width="0.0768%" height="15" fill="rgb(245,173,6)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.1690%" y="533" width="0.0768%" height="15" fill="rgb(228,74,0)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.1690%" y="517" width="0.0768%" height="15" fill="rgb(206,138,29)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.1690%" y="501" width="0.0768%" height="15" fill="rgb(253,27,43)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.1690%" y="485" width="0.0768%" height="15" fill="rgb(231,73,0)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.1690%" y="469" width="0.0768%" height="15" fill="rgb(218,9,23)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1690%" y="453" width="0.0768%" height="15" fill="rgb(251,55,29)" fg:x="1174" fg:w="1"/><text x="90.4190%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.69%)</title><rect x="89.6313%" y="725" width="0.6912%" height="15" fill="rgb(223,180,22)" fg:x="1167" fg:w="9"/><text x="89.8813%" y="735.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.38%)</title><rect x="89.9386%" y="709" width="0.3840%" height="15" fill="rgb(223,29,21)" fg:x="1171" fg:w="5"/><text x="90.1886%" y="719.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.23%)</title><rect x="90.0922%" y="693" width="0.2304%" height="15" fill="rgb(251,103,37)" fg:x="1173" fg:w="3"/><text x="90.3422%" y="703.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.15%)</title><rect x="90.1690%" y="677" width="0.1536%" height="15" fill="rgb(214,11,21)" fg:x="1174" fg:w="2"/><text x="90.4190%" y="687.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.15%)</title><rect x="90.1690%" y="661" width="0.1536%" height="15" fill="rgb(205,137,13)" fg:x="1174" fg:w="2"/><text x="90.4190%" y="671.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.15%)</title><rect x="90.1690%" y="645" width="0.1536%" height="15" fill="rgb(225,58,47)" fg:x="1174" fg:w="2"/><text x="90.4190%" y="655.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="90.2458%" y="629" width="0.0768%" height="15" fill="rgb(222,197,14)" fg:x="1175" fg:w="1"/><text x="90.4958%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2458%" y="613" width="0.0768%" height="15" fill="rgb(215,210,33)" fg:x="1175" fg:w="1"/><text x="90.4958%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2458%" y="597" width="0.0768%" height="15" fill="rgb(242,13,9)" fg:x="1175" fg:w="1"/><text x="90.4958%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="90.4762%" y="693" width="0.0768%" height="15" fill="rgb(218,31,39)" fg:x="1178" fg:w="1"/><text x="90.7262%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.5530%" y="693" width="0.0768%" height="15" fill="rgb(211,214,23)" fg:x="1179" fg:w="1"/><text x="90.8030%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.5530%" y="677" width="0.0768%" height="15" fill="rgb(237,92,14)" fg:x="1179" fg:w="1"/><text x="90.8030%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5530%" y="661" width="0.0768%" height="15" fill="rgb(220,78,5)" fg:x="1179" fg:w="1"/><text x="90.8030%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7834%" y="645" width="0.0768%" height="15" fill="rgb(237,23,21)" fg:x="1182" fg:w="1"/><text x="91.0334%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7834%" y="629" width="0.0768%" height="15" fill="rgb(251,207,51)" fg:x="1182" fg:w="1"/><text x="91.0334%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7834%" y="613" width="0.0768%" height="15" fill="rgb(249,206,18)" fg:x="1182" fg:w="1"/><text x="91.0334%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.8602%" y="645" width="0.0768%" height="15" fill="rgb(236,20,19)" fg:x="1183" fg:w="1"/><text x="91.1102%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.8602%" y="629" width="0.0768%" height="15" fill="rgb(214,227,29)" fg:x="1183" fg:w="1"/><text x="91.1102%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8602%" y="613" width="0.0768%" height="15" fill="rgb(209,183,4)" fg:x="1183" fg:w="1"/><text x="91.1102%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.69%)</title><rect x="90.3226%" y="725" width="0.6912%" height="15" fill="rgb(233,111,23)" fg:x="1176" fg:w="9"/><text x="90.5726%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.61%)</title><rect x="90.3994%" y="709" width="0.6144%" height="15" fill="rgb(238,121,27)" fg:x="1177" fg:w="8"/><text x="90.6494%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.38%)</title><rect x="90.6298%" y="693" width="0.3840%" height="15" fill="rgb(236,120,41)" fg:x="1180" fg:w="5"/><text x="90.8798%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.38%)</title><rect x="90.6298%" y="677" width="0.3840%" height="15" fill="rgb(241,143,10)" fg:x="1180" fg:w="5"/><text x="90.8798%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="90.7834%" y="661" width="0.2304%" height="15" fill="rgb(224,86,31)" fg:x="1182" fg:w="3"/><text x="91.0334%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.9370%" y="645" width="0.0768%" height="15" fill="rgb(236,212,27)" fg:x="1184" fg:w="1"/><text x="91.1870%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.9370%" y="629" width="0.0768%" height="15" fill="rgb(219,43,51)" fg:x="1184" fg:w="1"/><text x="91.1870%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.9370%" y="613" width="0.0768%" height="15" fill="rgb(232,216,8)" fg:x="1184" fg:w="1"/><text x="91.1870%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.9370%" y="597" width="0.0768%" height="15" fill="rgb(206,222,39)" fg:x="1184" fg:w="1"/><text x="91.1870%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.9370%" y="581" width="0.0768%" height="15" fill="rgb(209,149,48)" fg:x="1184" fg:w="1"/><text x="91.1870%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.9370%" y="565" width="0.0768%" height="15" fill="rgb(229,155,21)" fg:x="1184" fg:w="1"/><text x="91.1870%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.0138%" y="629" width="0.0768%" height="15" fill="rgb(246,152,26)" fg:x="1185" fg:w="1"/><text x="91.2638%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0138%" y="613" width="0.0768%" height="15" fill="rgb(206,70,42)" fg:x="1185" fg:w="1"/><text x="91.2638%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.0138%" y="597" width="0.0768%" height="15" fill="rgb(236,9,11)" fg:x="1185" fg:w="1"/><text x="91.2638%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0138%" y="581" width="0.0768%" height="15" fill="rgb(238,145,47)" fg:x="1185" fg:w="1"/><text x="91.2638%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.0138%" y="565" width="0.0768%" height="15" fill="rgb(252,189,7)" fg:x="1185" fg:w="1"/><text x="91.2638%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0138%" y="549" width="0.0768%" height="15" fill="rgb(254,168,51)" fg:x="1185" fg:w="1"/><text x="91.2638%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.0138%" y="533" width="0.0768%" height="15" fill="rgb(227,105,46)" fg:x="1185" fg:w="1"/><text x="91.2638%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="91.0138%" y="645" width="0.3072%" height="15" fill="rgb(227,74,30)" fg:x="1185" fg:w="4"/><text x="91.2638%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="91.0906%" y="629" width="0.2304%" height="15" fill="rgb(206,212,44)" fg:x="1186" fg:w="3"/><text x="91.3406%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.15%)</title><rect x="91.1674%" y="613" width="0.1536%" height="15" fill="rgb(252,69,11)" fg:x="1187" fg:w="2"/><text x="91.4174%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.38%)</title><rect x="91.0138%" y="661" width="0.3840%" height="15" fill="rgb(239,116,0)" fg:x="1185" fg:w="5"/><text x="91.2638%" y="671.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="91.3210%" y="645" width="0.0768%" height="15" fill="rgb(246,189,23)" fg:x="1189" fg:w="1"/><text x="91.5710%" y="655.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.3210%" y="629" width="0.0768%" height="15" fill="rgb(229,50,41)" fg:x="1189" fg:w="1"/><text x="91.5710%" y="639.50"></text></g><g><title>engine::session::state::State::close (46 samples, 3.53%)</title><rect x="88.0184%" y="805" width="3.5330%" height="15" fill="rgb(214,66,37)" fg:x="1146" fg:w="46"/><text x="88.2684%" y="815.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (41 samples, 3.15%)</title><rect x="88.4025%" y="789" width="3.1490%" height="15" fill="rgb(226,28,6)" fg:x="1151" fg:w="41"/><text x="88.6525%" y="799.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (40 samples, 3.07%)</title><rect x="88.4793%" y="773" width="3.0722%" height="15" fill="rgb(239,154,0)" fg:x="1152" fg:w="40"/><text x="88.7293%" y="783.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (40 samples, 3.07%)</title><rect x="88.4793%" y="757" width="3.0722%" height="15" fill="rgb(233,97,11)" fg:x="1152" fg:w="40"/><text x="88.7293%" y="767.50">eng..</text></g><g><title>kernel::model::any_entity_changes (26 samples, 2.00%)</title><rect x="89.5545%" y="741" width="1.9969%" height="15" fill="rgb(236,215,16)" fg:x="1166" fg:w="26"/><text x="89.8045%" y="751.50">k..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.54%)</title><rect x="91.0138%" y="725" width="0.5376%" height="15" fill="rgb(246,188,29)" fg:x="1185" fg:w="7"/><text x="91.2638%" y="735.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.54%)</title><rect x="91.0138%" y="709" width="0.5376%" height="15" fill="rgb(207,7,29)" fg:x="1185" fg:w="7"/><text x="91.2638%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.54%)</title><rect x="91.0138%" y="693" width="0.5376%" height="15" fill="rgb(238,112,43)" fg:x="1185" fg:w="7"/><text x="91.2638%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.54%)</title><rect x="91.0138%" y="677" width="0.5376%" height="15" fill="rgb(230,110,32)" fg:x="1185" fg:w="7"/><text x="91.2638%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="91.3978%" y="661" width="0.1536%" height="15" fill="rgb(218,197,32)" fg:x="1190" fg:w="2"/><text x="91.6478%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="91.3978%" y="645" width="0.1536%" height="15" fill="rgb(252,61,9)" fg:x="1190" fg:w="2"/><text x="91.6478%" y="655.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="91.5515%" y="741" width="0.0768%" height="15" fill="rgb(244,140,14)" fg:x="1192" fg:w="1"/><text x="91.8015%" y="751.50"></text></g><g><title>engine::session::Session::close (48 samples, 3.69%)</title><rect x="88.0184%" y="821" width="3.6866%" height="15" fill="rgb(216,14,47)" fg:x="1146" fg:w="48"/><text x="88.2684%" y="831.50">engi..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.15%)</title><rect x="91.5515%" y="805" width="0.1536%" height="15" fill="rgb(224,130,52)" fg:x="1192" fg:w="2"/><text x="91.8015%" y="815.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.15%)</title><rect x="91.5515%" y="789" width="0.1536%" height="15" fill="rgb(210,229,51)" fg:x="1192" fg:w="2"/><text x="91.8015%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.15%)</title><rect x="91.5515%" y="773" width="0.1536%" height="15" fill="rgb(242,13,9)" fg:x="1192" fg:w="2"/><text x="91.8015%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.15%)</title><rect x="91.5515%" y="757" width="0.1536%" height="15" fill="rgb(252,71,50)" fg:x="1192" fg:w="2"/><text x="91.8015%" y="767.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="91.6283%" y="741" width="0.0768%" height="15" fill="rgb(218,225,6)" fg:x="1193" fg:w="1"/><text x="91.8783%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="91.7819%" y="629" width="0.0768%" height="15" fill="rgb(219,27,35)" fg:x="1195" fg:w="1"/><text x="92.0319%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="91.7819%" y="613" width="0.0768%" height="15" fill="rgb(226,30,1)" fg:x="1195" fg:w="1"/><text x="92.0319%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.7819%" y="597" width="0.0768%" height="15" fill="rgb(227,164,34)" fg:x="1195" fg:w="1"/><text x="92.0319%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.7819%" y="581" width="0.0768%" height="15" fill="rgb(206,103,4)" fg:x="1195" fg:w="1"/><text x="92.0319%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.7819%" y="565" width="0.0768%" height="15" fill="rgb(214,166,19)" fg:x="1195" fg:w="1"/><text x="92.0319%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.7819%" y="549" width="0.0768%" height="15" fill="rgb(240,56,20)" fg:x="1195" fg:w="1"/><text x="92.0319%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7819%" y="533" width="0.0768%" height="15" fill="rgb(224,25,3)" fg:x="1195" fg:w="1"/><text x="92.0319%" y="543.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="91.8587%" y="613" width="0.0768%" height="15" fill="rgb(216,206,54)" fg:x="1196" fg:w="1"/><text x="92.1087%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.8587%" y="597" width="0.0768%" height="15" fill="rgb(225,142,10)" fg:x="1196" fg:w="1"/><text x="92.1087%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8587%" y="581" width="0.0768%" height="15" fill="rgb(246,9,18)" fg:x="1196" fg:w="1"/><text x="92.1087%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.8587%" y="565" width="0.0768%" height="15" fill="rgb(247,140,18)" fg:x="1196" fg:w="1"/><text x="92.1087%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8587%" y="549" width="0.0768%" height="15" fill="rgb(239,184,22)" fg:x="1196" fg:w="1"/><text x="92.1087%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.8587%" y="533" width="0.0768%" height="15" fill="rgb(227,94,44)" fg:x="1196" fg:w="1"/><text x="92.1087%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8587%" y="517" width="0.0768%" height="15" fill="rgb(219,43,3)" fg:x="1196" fg:w="1"/><text x="92.1087%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (2 samples, 0.15%)</title><rect x="91.8587%" y="629" width="0.1536%" height="15" fill="rgb(210,76,31)" fg:x="1196" fg:w="2"/><text x="92.1087%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9355%" y="613" width="0.0768%" height="15" fill="rgb(225,85,12)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9355%" y="597" width="0.0768%" height="15" fill="rgb(214,191,28)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.9355%" y="581" width="0.0768%" height="15" fill="rgb(214,43,14)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9355%" y="565" width="0.0768%" height="15" fill="rgb(253,117,5)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.9355%" y="549" width="0.0768%" height="15" fill="rgb(208,124,26)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9355%" y="533" width="0.0768%" height="15" fill="rgb(228,208,39)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.9355%" y="517" width="0.0768%" height="15" fill="rgb(206,180,39)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.9355%" y="501" width="0.0768%" height="15" fill="rgb(205,111,37)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.9355%" y="485" width="0.0768%" height="15" fill="rgb(208,121,24)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.9355%" y="469" width="0.0768%" height="15" fill="rgb(218,215,32)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9355%" y="453" width="0.0768%" height="15" fill="rgb(244,168,53)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.9355%" y="437" width="0.0768%" height="15" fill="rgb(214,9,36)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.9355%" y="421" width="0.0768%" height="15" fill="rgb(231,4,34)" fg:x="1197" fg:w="1"/><text x="92.1855%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.31%)</title><rect x="91.7819%" y="677" width="0.3072%" height="15" fill="rgb(210,83,51)" fg:x="1195" fg:w="4"/><text x="92.0319%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.31%)</title><rect x="91.7819%" y="661" width="0.3072%" height="15" fill="rgb(224,112,1)" fg:x="1195" fg:w="4"/><text x="92.0319%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.31%)</title><rect x="91.7819%" y="645" width="0.3072%" height="15" fill="rgb(216,33,41)" fg:x="1195" fg:w="4"/><text x="92.0319%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.0123%" y="629" width="0.0768%" height="15" fill="rgb(215,179,42)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.0123%" y="613" width="0.0768%" height="15" fill="rgb(205,81,48)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.0123%" y="597" width="0.0768%" height="15" fill="rgb(246,17,30)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.0123%" y="581" width="0.0768%" height="15" fill="rgb(226,19,16)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0123%" y="565" width="0.0768%" height="15" fill="rgb(207,3,14)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.0123%" y="549" width="0.0768%" height="15" fill="rgb(226,77,12)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0123%" y="533" width="0.0768%" height="15" fill="rgb(226,76,25)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.0123%" y="517" width="0.0768%" height="15" fill="rgb(217,216,25)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0123%" y="501" width="0.0768%" height="15" fill="rgb(247,127,42)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0123%" y="485" width="0.0768%" height="15" fill="rgb(226,10,34)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.0123%" y="469" width="0.0768%" height="15" fill="rgb(249,78,0)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="92.0123%" y="453" width="0.0768%" height="15" fill="rgb(226,218,38)" fg:x="1198" fg:w="1"/><text x="92.2623%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="92.0891%" y="645" width="0.0768%" height="15" fill="rgb(240,92,1)" fg:x="1199" fg:w="1"/><text x="92.3391%" y="655.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (6 samples, 0.46%)</title><rect x="91.7819%" y="741" width="0.4608%" height="15" fill="rgb(237,224,33)" fg:x="1195" fg:w="6"/><text x="92.0319%" y="751.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (6 samples, 0.46%)</title><rect x="91.7819%" y="725" width="0.4608%" height="15" fill="rgb(211,46,1)" fg:x="1195" fg:w="6"/><text x="92.0319%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.46%)</title><rect x="91.7819%" y="709" width="0.4608%" height="15" fill="rgb(239,190,4)" fg:x="1195" fg:w="6"/><text x="92.0319%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.46%)</title><rect x="91.7819%" y="693" width="0.4608%" height="15" fill="rgb(221,50,22)" fg:x="1195" fg:w="6"/><text x="92.0319%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="92.0891%" y="677" width="0.1536%" height="15" fill="rgb(207,176,8)" fg:x="1199" fg:w="2"/><text x="92.3391%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="92.0891%" y="661" width="0.1536%" height="15" fill="rgb(244,114,50)" fg:x="1199" fg:w="2"/><text x="92.3391%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.1659%" y="645" width="0.0768%" height="15" fill="rgb(226,206,19)" fg:x="1200" fg:w="1"/><text x="92.4159%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1659%" y="629" width="0.0768%" height="15" fill="rgb(208,199,16)" fg:x="1200" fg:w="1"/><text x="92.4159%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.1659%" y="613" width="0.0768%" height="15" fill="rgb(208,38,14)" fg:x="1200" fg:w="1"/><text x="92.4159%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="92.2427%" y="741" width="0.0768%" height="15" fill="rgb(221,211,49)" fg:x="1201" fg:w="1"/><text x="92.4927%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.2427%" y="725" width="0.0768%" height="15" fill="rgb(227,214,34)" fg:x="1201" fg:w="1"/><text x="92.4927%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="92.3195%" y="565" width="0.0768%" height="15" fill="rgb(234,5,54)" fg:x="1202" fg:w="1"/><text x="92.5695%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="92.3963%" y="549" width="0.1536%" height="15" fill="rgb(236,215,22)" fg:x="1203" fg:w="2"/><text x="92.6463%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="92.3963%" y="533" width="0.1536%" height="15" fill="rgb(244,0,11)" fg:x="1203" fg:w="2"/><text x="92.6463%" y="543.50"></text></g><g><title>realloc (2 samples, 0.15%)</title><rect x="92.3963%" y="517" width="0.1536%" height="15" fill="rgb(212,140,16)" fg:x="1203" fg:w="2"/><text x="92.6463%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="92.5499%" y="533" width="0.0768%" height="15" fill="rgb(238,101,37)" fg:x="1205" fg:w="1"/><text x="92.7999%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="92.5499%" y="517" width="0.0768%" height="15" fill="rgb(247,46,3)" fg:x="1205" fg:w="1"/><text x="92.7999%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="92.5499%" y="501" width="0.0768%" height="15" fill="rgb(208,106,19)" fg:x="1205" fg:w="1"/><text x="92.7999%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7035%" y="469" width="0.0768%" height="15" fill="rgb(240,227,15)" fg:x="1207" fg:w="1"/><text x="92.9535%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="92.7035%" y="501" width="0.1536%" height="15" fill="rgb(226,173,6)" fg:x="1207" fg:w="2"/><text x="92.9535%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="92.7035%" y="485" width="0.1536%" height="15" fill="rgb(213,191,1)" fg:x="1207" fg:w="2"/><text x="92.9535%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7803%" y="469" width="0.0768%" height="15" fill="rgb(246,51,36)" fg:x="1208" fg:w="1"/><text x="93.0303%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.7803%" y="453" width="0.0768%" height="15" fill="rgb(238,40,32)" fg:x="1208" fg:w="1"/><text x="93.0303%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7803%" y="437" width="0.0768%" height="15" fill="rgb(208,126,27)" fg:x="1208" fg:w="1"/><text x="93.0303%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="92.8571%" y="389" width="0.0768%" height="15" fill="rgb(227,117,38)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="92.8571%" y="373" width="0.0768%" height="15" fill="rgb(232,16,1)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.8571%" y="357" width="0.0768%" height="15" fill="rgb(212,111,31)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.8571%" y="341" width="0.0768%" height="15" fill="rgb(253,227,2)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.8571%" y="325" width="0.0768%" height="15" fill="rgb(216,122,17)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.8571%" y="309" width="0.0768%" height="15" fill="rgb(227,37,2)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.8571%" y="293" width="0.0768%" height="15" fill="rgb(244,113,40)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.8571%" y="277" width="0.0768%" height="15" fill="rgb(217,193,34)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.8571%" y="261" width="0.0768%" height="15" fill="rgb(212,223,15)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8571%" y="245" width="0.0768%" height="15" fill="rgb(238,143,18)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8571%" y="229" width="0.0768%" height="15" fill="rgb(231,18,49)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.8571%" y="213" width="0.0768%" height="15" fill="rgb(249,122,4)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.8571%" y="197" width="0.0768%" height="15" fill="rgb(245,138,54)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.8571%" y="181" width="0.0768%" height="15" fill="rgb(218,130,18)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8571%" y="165" width="0.0768%" height="15" fill="rgb(235,94,13)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8571%" y="149" width="0.0768%" height="15" fill="rgb(247,143,5)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.8571%" y="133" width="0.0768%" height="15" fill="rgb(212,59,54)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.8571%" y="117" width="0.0768%" height="15" fill="rgb(206,121,24)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.8571%" y="101" width="0.0768%" height="15" fill="rgb(235,38,8)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.8571%" y="85" width="0.0768%" height="15" fill="rgb(227,102,26)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="95.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="92.8571%" y="69" width="0.0768%" height="15" fill="rgb(240,183,46)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="79.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="92.8571%" y="53" width="0.0768%" height="15" fill="rgb(208,177,23)" fg:x="1209" fg:w="1"/><text x="93.1071%" y="63.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="92.9339%" y="373" width="0.0768%" height="15" fill="rgb(216,152,5)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.9339%" y="357" width="0.0768%" height="15" fill="rgb(238,199,2)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.9339%" y="341" width="0.0768%" height="15" fill="rgb(235,142,28)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.9339%" y="325" width="0.0768%" height="15" fill="rgb(225,97,25)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.9339%" y="309" width="0.0768%" height="15" fill="rgb(208,75,46)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.9339%" y="293" width="0.0768%" height="15" fill="rgb(240,136,15)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.9339%" y="277" width="0.0768%" height="15" fill="rgb(235,36,27)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.9339%" y="261" width="0.0768%" height="15" fill="rgb(231,132,23)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.9339%" y="245" width="0.0768%" height="15" fill="rgb(205,208,20)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.9339%" y="229" width="0.0768%" height="15" fill="rgb(215,26,40)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.9339%" y="213" width="0.0768%" height="15" fill="rgb(238,183,34)" fg:x="1210" fg:w="1"/><text x="93.1839%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.0108%" y="261" width="0.0768%" height="15" fill="rgb(207,96,10)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0108%" y="245" width="0.0768%" height="15" fill="rgb(218,88,6)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.0108%" y="229" width="0.0768%" height="15" fill="rgb(217,22,49)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0108%" y="213" width="0.0768%" height="15" fill="rgb(240,195,14)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.0108%" y="197" width="0.0768%" height="15" fill="rgb(229,48,27)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.0108%" y="181" width="0.0768%" height="15" fill="rgb(220,194,45)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0108%" y="165" width="0.0768%" height="15" fill="rgb(252,60,20)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.0108%" y="149" width="0.0768%" height="15" fill="rgb(244,169,33)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.0108%" y="133" width="0.0768%" height="15" fill="rgb(234,141,34)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0108%" y="117" width="0.0768%" height="15" fill="rgb(241,141,9)" fg:x="1211" fg:w="1"/><text x="93.2608%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="93.0108%" y="293" width="0.1536%" height="15" fill="rgb(246,27,36)" fg:x="1211" fg:w="2"/><text x="93.2608%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="93.0108%" y="277" width="0.1536%" height="15" fill="rgb(216,188,42)" fg:x="1211" fg:w="2"/><text x="93.2608%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.0876%" y="261" width="0.0768%" height="15" fill="rgb(234,205,22)" fg:x="1212" fg:w="1"/><text x="93.3376%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.0876%" y="245" width="0.0768%" height="15" fill="rgb(210,202,32)" fg:x="1212" fg:w="1"/><text x="93.3376%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.0876%" y="229" width="0.0768%" height="15" fill="rgb(217,0,48)" fg:x="1212" fg:w="1"/><text x="93.3376%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0876%" y="213" width="0.0768%" height="15" fill="rgb(207,115,37)" fg:x="1212" fg:w="1"/><text x="93.3376%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0876%" y="197" width="0.0768%" height="15" fill="rgb(237,221,44)" fg:x="1212" fg:w="1"/><text x="93.3376%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0876%" y="181" width="0.0768%" height="15" fill="rgb(249,78,2)" fg:x="1212" fg:w="1"/><text x="93.3376%" y="191.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="93.0876%" y="165" width="0.0768%" height="15" fill="rgb(211,169,23)" fg:x="1212" fg:w="1"/><text x="93.3376%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.31%)</title><rect x="92.9339%" y="389" width="0.3072%" height="15" fill="rgb(207,116,29)" fg:x="1210" fg:w="4"/><text x="93.1839%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="93.0108%" y="373" width="0.2304%" height="15" fill="rgb(240,84,33)" fg:x="1211" fg:w="3"/><text x="93.2608%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="93.0108%" y="357" width="0.2304%" height="15" fill="rgb(229,224,31)" fg:x="1211" fg:w="3"/><text x="93.2608%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.23%)</title><rect x="93.0108%" y="341" width="0.2304%" height="15" fill="rgb(227,90,31)" fg:x="1211" fg:w="3"/><text x="93.2608%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="93.0108%" y="325" width="0.2304%" height="15" fill="rgb(249,22,41)" fg:x="1211" fg:w="3"/><text x="93.2608%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.23%)</title><rect x="93.0108%" y="309" width="0.2304%" height="15" fill="rgb(239,65,11)" fg:x="1211" fg:w="3"/><text x="93.2608%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.1644%" y="293" width="0.0768%" height="15" fill="rgb(205,5,23)" fg:x="1213" fg:w="1"/><text x="93.4144%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.1644%" y="277" width="0.0768%" height="15" fill="rgb(254,78,52)" fg:x="1213" fg:w="1"/><text x="93.4144%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.1644%" y="261" width="0.0768%" height="15" fill="rgb(214,156,33)" fg:x="1213" fg:w="1"/><text x="93.4144%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.1644%" y="245" width="0.0768%" height="15" fill="rgb(208,20,30)" fg:x="1213" fg:w="1"/><text x="93.4144%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.3180%" y="277" width="0.0768%" height="15" fill="rgb(223,133,18)" fg:x="1215" fg:w="1"/><text x="93.5680%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.3948%" y="213" width="0.0768%" height="15" fill="rgb(222,91,41)" fg:x="1216" fg:w="1"/><text x="93.6448%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="93.2412%" y="389" width="0.3072%" height="15" fill="rgb(247,137,48)" fg:x="1214" fg:w="4"/><text x="93.4912%" y="399.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="93.2412%" y="373" width="0.3072%" height="15" fill="rgb(239,156,11)" fg:x="1214" fg:w="4"/><text x="93.4912%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="93.2412%" y="357" width="0.3072%" height="15" fill="rgb(244,56,26)" fg:x="1214" fg:w="4"/><text x="93.4912%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="93.3180%" y="341" width="0.2304%" height="15" fill="rgb(205,131,49)" fg:x="1215" fg:w="3"/><text x="93.5680%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="93.3180%" y="325" width="0.2304%" height="15" fill="rgb(224,0,2)" fg:x="1215" fg:w="3"/><text x="93.5680%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="93.3180%" y="309" width="0.2304%" height="15" fill="rgb(247,59,36)" fg:x="1215" fg:w="3"/><text x="93.5680%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="93.3180%" y="293" width="0.2304%" height="15" fill="rgb(215,4,47)" fg:x="1215" fg:w="3"/><text x="93.5680%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="93.3948%" y="277" width="0.1536%" height="15" fill="rgb(242,72,42)" fg:x="1216" fg:w="2"/><text x="93.6448%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="93.3948%" y="261" width="0.1536%" height="15" fill="rgb(232,145,44)" fg:x="1216" fg:w="2"/><text x="93.6448%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="93.3948%" y="245" width="0.1536%" height="15" fill="rgb(205,108,43)" fg:x="1216" fg:w="2"/><text x="93.6448%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="93.3948%" y="229" width="0.1536%" height="15" fill="rgb(215,190,17)" fg:x="1216" fg:w="2"/><text x="93.6448%" y="239.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="93.4716%" y="213" width="0.0768%" height="15" fill="rgb(223,90,34)" fg:x="1217" fg:w="1"/><text x="93.7216%" y="223.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (19 samples, 1.46%)</title><rect x="92.3963%" y="565" width="1.4593%" height="15" fill="rgb(216,25,0)" fg:x="1203" fg:w="19"/><text x="92.6463%" y="575.50"></text></g><g><title>plugins_core::tools::contained_by (17 samples, 1.31%)</title><rect x="92.5499%" y="549" width="1.3057%" height="15" fill="rgb(223,51,28)" fg:x="1205" fg:w="17"/><text x="92.7999%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.23%)</title><rect x="92.6267%" y="533" width="1.2289%" height="15" fill="rgb(227,131,7)" fg:x="1206" fg:w="16"/><text x="92.8767%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.23%)</title><rect x="92.6267%" y="517" width="1.2289%" height="15" fill="rgb(216,72,36)" fg:x="1206" fg:w="16"/><text x="92.8767%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (13 samples, 1.00%)</title><rect x="92.8571%" y="501" width="0.9985%" height="15" fill="rgb(243,158,40)" fg:x="1209" fg:w="13"/><text x="93.1071%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (13 samples, 1.00%)</title><rect x="92.8571%" y="485" width="0.9985%" height="15" fill="rgb(218,60,54)" fg:x="1209" fg:w="13"/><text x="93.1071%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.00%)</title><rect x="92.8571%" y="469" width="0.9985%" height="15" fill="rgb(230,15,46)" fg:x="1209" fg:w="13"/><text x="93.1071%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 1.00%)</title><rect x="92.8571%" y="453" width="0.9985%" height="15" fill="rgb(250,22,26)" fg:x="1209" fg:w="13"/><text x="93.1071%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.00%)</title><rect x="92.8571%" y="437" width="0.9985%" height="15" fill="rgb(239,194,40)" fg:x="1209" fg:w="13"/><text x="93.1071%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.00%)</title><rect x="92.8571%" y="421" width="0.9985%" height="15" fill="rgb(219,62,9)" fg:x="1209" fg:w="13"/><text x="93.1071%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.00%)</title><rect x="92.8571%" y="405" width="0.9985%" height="15" fill="rgb(228,45,21)" fg:x="1209" fg:w="13"/><text x="93.1071%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (4 samples, 0.31%)</title><rect x="93.5484%" y="389" width="0.3072%" height="15" fill="rgb(242,56,44)" fg:x="1218" fg:w="4"/><text x="93.7984%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.31%)</title><rect x="93.5484%" y="373" width="0.3072%" height="15" fill="rgb(239,170,14)" fg:x="1218" fg:w="4"/><text x="93.7984%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.31%)</title><rect x="93.5484%" y="357" width="0.3072%" height="15" fill="rgb(236,150,13)" fg:x="1218" fg:w="4"/><text x="93.7984%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.31%)</title><rect x="93.5484%" y="341" width="0.3072%" height="15" fill="rgb(228,15,30)" fg:x="1218" fg:w="4"/><text x="93.7984%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="93.6252%" y="325" width="0.2304%" height="15" fill="rgb(217,43,28)" fg:x="1219" fg:w="3"/><text x="93.8752%" y="335.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.9324%" y="533" width="0.0768%" height="15" fill="rgb(246,223,1)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.9324%" y="517" width="0.0768%" height="15" fill="rgb(247,103,7)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.9324%" y="501" width="0.0768%" height="15" fill="rgb(205,105,39)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.9324%" y="485" width="0.0768%" height="15" fill="rgb(216,134,18)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.9324%" y="469" width="0.0768%" height="15" fill="rgb(226,139,50)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.9324%" y="453" width="0.0768%" height="15" fill="rgb(251,152,38)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.9324%" y="437" width="0.0768%" height="15" fill="rgb(222,63,15)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.9324%" y="421" width="0.0768%" height="15" fill="rgb(212,198,28)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.9324%" y="405" width="0.0768%" height="15" fill="rgb(216,93,38)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.9324%" y="389" width="0.0768%" height="15" fill="rgb(247,202,44)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.9324%" y="373" width="0.0768%" height="15" fill="rgb(237,204,46)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.9324%" y="357" width="0.0768%" height="15" fill="rgb(224,98,48)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9324%" y="341" width="0.0768%" height="15" fill="rgb(247,105,21)" fg:x="1223" fg:w="1"/><text x="94.1824%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0092%" y="453" width="0.0768%" height="15" fill="rgb(212,137,52)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0092%" y="437" width="0.0768%" height="15" fill="rgb(223,76,33)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0092%" y="421" width="0.0768%" height="15" fill="rgb(209,156,27)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.0092%" y="405" width="0.0768%" height="15" fill="rgb(249,81,54)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.0092%" y="389" width="0.0768%" height="15" fill="rgb(241,46,29)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.0092%" y="373" width="0.0768%" height="15" fill="rgb(213,193,39)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0092%" y="357" width="0.0768%" height="15" fill="rgb(214,85,16)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0092%" y="341" width="0.0768%" height="15" fill="rgb(216,184,17)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.0092%" y="325" width="0.0768%" height="15" fill="rgb(254,219,29)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.0092%" y="309" width="0.0768%" height="15" fill="rgb(209,148,34)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.0092%" y="293" width="0.0768%" height="15" fill="rgb(253,215,11)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.0092%" y="277" width="0.0768%" height="15" fill="rgb(232,126,20)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0092%" y="261" width="0.0768%" height="15" fill="rgb(248,118,51)" fg:x="1224" fg:w="1"/><text x="94.2592%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (24 samples, 1.84%)</title><rect x="92.3195%" y="597" width="1.8433%" height="15" fill="rgb(226,121,21)" fg:x="1202" fg:w="24"/><text x="92.5695%" y="607.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (24 samples, 1.84%)</title><rect x="92.3195%" y="581" width="1.8433%" height="15" fill="rgb(216,128,16)" fg:x="1202" fg:w="24"/><text x="92.5695%" y="591.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.31%)</title><rect x="93.8556%" y="565" width="0.3072%" height="15" fill="rgb(205,17,9)" fg:x="1222" fg:w="4"/><text x="94.1056%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.31%)</title><rect x="93.8556%" y="549" width="0.3072%" height="15" fill="rgb(206,197,21)" fg:x="1222" fg:w="4"/><text x="94.1056%" y="559.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.15%)</title><rect x="94.0092%" y="533" width="0.1536%" height="15" fill="rgb(212,202,9)" fg:x="1224" fg:w="2"/><text x="94.2592%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.15%)</title><rect x="94.0092%" y="517" width="0.1536%" height="15" fill="rgb(241,131,50)" fg:x="1224" fg:w="2"/><text x="94.2592%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="94.0092%" y="501" width="0.1536%" height="15" fill="rgb(228,115,51)" fg:x="1224" fg:w="2"/><text x="94.2592%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="94.0092%" y="485" width="0.1536%" height="15" fill="rgb(237,209,8)" fg:x="1224" fg:w="2"/><text x="94.2592%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="94.0092%" y="469" width="0.1536%" height="15" fill="rgb(241,121,28)" fg:x="1224" fg:w="2"/><text x="94.2592%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0860%" y="453" width="0.0768%" height="15" fill="rgb(238,194,51)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0860%" y="437" width="0.0768%" height="15" fill="rgb(208,41,39)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0860%" y="421" width="0.0768%" height="15" fill="rgb(223,95,44)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0860%" y="405" width="0.0768%" height="15" fill="rgb(253,98,40)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.0860%" y="389" width="0.0768%" height="15" fill="rgb(210,5,12)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0860%" y="373" width="0.0768%" height="15" fill="rgb(233,201,23)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0860%" y="357" width="0.0768%" height="15" fill="rgb(251,68,15)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0860%" y="341" width="0.0768%" height="15" fill="rgb(243,10,46)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0860%" y="325" width="0.0768%" height="15" fill="rgb(253,130,44)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0860%" y="309" width="0.0768%" height="15" fill="rgb(244,5,26)" fg:x="1225" fg:w="1"/><text x="94.3360%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="94.1628%" y="565" width="0.2304%" height="15" fill="rgb(220,126,20)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="94.1628%" y="549" width="0.2304%" height="15" fill="rgb(212,188,29)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="94.1628%" y="533" width="0.2304%" height="15" fill="rgb(227,194,48)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="94.1628%" y="517" width="0.2304%" height="15" fill="rgb(245,64,28)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="94.1628%" y="501" width="0.2304%" height="15" fill="rgb(205,44,7)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="94.1628%" y="485" width="0.2304%" height="15" fill="rgb(213,193,11)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="94.1628%" y="469" width="0.2304%" height="15" fill="rgb(238,157,6)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.23%)</title><rect x="94.1628%" y="453" width="0.2304%" height="15" fill="rgb(222,73,7)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="94.1628%" y="437" width="0.2304%" height="15" fill="rgb(224,78,15)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="94.1628%" y="421" width="0.2304%" height="15" fill="rgb(218,149,46)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="94.1628%" y="405" width="0.2304%" height="15" fill="rgb(218,175,44)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="94.1628%" y="389" width="0.2304%" height="15" fill="rgb(215,183,45)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="94.1628%" y="373" width="0.2304%" height="15" fill="rgb(226,116,37)" fg:x="1226" fg:w="3"/><text x="94.4128%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.15%)</title><rect x="94.2396%" y="357" width="0.1536%" height="15" fill="rgb(252,224,12)" fg:x="1227" fg:w="2"/><text x="94.4896%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.3164%" y="341" width="0.0768%" height="15" fill="rgb(232,212,21)" fg:x="1228" fg:w="1"/><text x="94.5664%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.3932%" y="485" width="0.0768%" height="15" fill="rgb(226,191,16)" fg:x="1229" fg:w="1"/><text x="94.6432%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.3932%" y="469" width="0.0768%" height="15" fill="rgb(231,156,11)" fg:x="1229" fg:w="1"/><text x="94.6432%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3932%" y="453" width="0.0768%" height="15" fill="rgb(225,134,49)" fg:x="1229" fg:w="1"/><text x="94.6432%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (5 samples, 0.38%)</title><rect x="94.1628%" y="597" width="0.3840%" height="15" fill="rgb(254,55,32)" fg:x="1226" fg:w="5"/><text x="94.4128%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.38%)</title><rect x="94.1628%" y="581" width="0.3840%" height="15" fill="rgb(242,195,29)" fg:x="1226" fg:w="5"/><text x="94.4128%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="94.3932%" y="565" width="0.1536%" height="15" fill="rgb(210,155,20)" fg:x="1229" fg:w="2"/><text x="94.6432%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="94.3932%" y="549" width="0.1536%" height="15" fill="rgb(243,170,23)" fg:x="1229" fg:w="2"/><text x="94.6432%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="94.3932%" y="533" width="0.1536%" height="15" fill="rgb(242,197,51)" fg:x="1229" fg:w="2"/><text x="94.6432%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="94.3932%" y="517" width="0.1536%" height="15" fill="rgb(248,48,13)" fg:x="1229" fg:w="2"/><text x="94.6432%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="94.3932%" y="501" width="0.1536%" height="15" fill="rgb(221,185,15)" fg:x="1229" fg:w="2"/><text x="94.6432%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="94.4700%" y="485" width="0.0768%" height="15" fill="rgb(244,49,7)" fg:x="1230" fg:w="1"/><text x="94.7200%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="94.4700%" y="469" width="0.0768%" height="15" fill="rgb(213,182,52)" fg:x="1230" fg:w="1"/><text x="94.7200%" y="479.50"></text></g><g><title>plugins_core::library::actions::reply_done (3 samples, 0.23%)</title><rect x="94.5469%" y="597" width="0.2304%" height="15" fill="rgb(209,15,45)" fg:x="1231" fg:w="3"/><text x="94.7969%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (3 samples, 0.23%)</title><rect x="94.5469%" y="581" width="0.2304%" height="15" fill="rgb(233,23,44)" fg:x="1231" fg:w="3"/><text x="94.7969%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (3 samples, 0.23%)</title><rect x="94.5469%" y="565" width="0.2304%" height="15" fill="rgb(220,182,30)" fg:x="1231" fg:w="3"/><text x="94.7969%" y="575.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (3 samples, 0.23%)</title><rect x="94.5469%" y="549" width="0.2304%" height="15" fill="rgb(219,116,33)" fg:x="1231" fg:w="3"/><text x="94.7969%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.23%)</title><rect x="94.5469%" y="533" width="0.2304%" height="15" fill="rgb(231,15,21)" fg:x="1231" fg:w="3"/><text x="94.7969%" y="543.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.23%)</title><rect x="94.5469%" y="517" width="0.2304%" height="15" fill="rgb(238,119,25)" fg:x="1231" fg:w="3"/><text x="94.7969%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.23%)</title><rect x="94.5469%" y="501" width="0.2304%" height="15" fill="rgb(232,30,39)" fg:x="1231" fg:w="3"/><text x="94.7969%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.23%)</title><rect x="94.5469%" y="485" width="0.2304%" height="15" fill="rgb(241,26,30)" fg:x="1231" fg:w="3"/><text x="94.7969%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.7005%" y="469" width="0.0768%" height="15" fill="rgb(234,154,4)" fg:x="1233" fg:w="1"/><text x="94.9505%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="94.7005%" y="453" width="0.0768%" height="15" fill="rgb(229,199,39)" fg:x="1233" fg:w="1"/><text x="94.9505%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.7005%" y="437" width="0.0768%" height="15" fill="rgb(236,213,10)" fg:x="1233" fg:w="1"/><text x="94.9505%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="94.7005%" y="421" width="0.0768%" height="15" fill="rgb(247,28,19)" fg:x="1233" fg:w="1"/><text x="94.9505%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.7773%" y="549" width="0.0768%" height="15" fill="rgb(239,199,24)" fg:x="1234" fg:w="1"/><text x="95.0273%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="94.8541%" y="501" width="0.1536%" height="15" fill="rgb(246,122,13)" fg:x="1235" fg:w="2"/><text x="95.1041%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="94.8541%" y="485" width="0.1536%" height="15" fill="rgb(210,203,29)" fg:x="1235" fg:w="2"/><text x="95.1041%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9309%" y="469" width="0.0768%" height="15" fill="rgb(218,4,50)" fg:x="1236" fg:w="1"/><text x="95.1809%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9309%" y="453" width="0.0768%" height="15" fill="rgb(236,142,48)" fg:x="1236" fg:w="1"/><text x="95.1809%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9309%" y="437" width="0.0768%" height="15" fill="rgb(245,173,2)" fg:x="1236" fg:w="1"/><text x="95.1809%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.0077%" y="501" width="0.0768%" height="15" fill="rgb(244,196,18)" fg:x="1237" fg:w="1"/><text x="95.2577%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.0077%" y="485" width="0.0768%" height="15" fill="rgb(221,27,33)" fg:x="1237" fg:w="1"/><text x="95.2577%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.0077%" y="469" width="0.0768%" height="15" fill="rgb(210,206,16)" fg:x="1237" fg:w="1"/><text x="95.2577%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0077%" y="453" width="0.0768%" height="15" fill="rgb(238,161,34)" fg:x="1237" fg:w="1"/><text x="95.2577%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.0845%" y="405" width="0.0768%" height="15" fill="rgb(243,118,39)" fg:x="1238" fg:w="1"/><text x="95.3345%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.0845%" y="389" width="0.0768%" height="15" fill="rgb(234,126,9)" fg:x="1238" fg:w="1"/><text x="95.3345%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.46%)</title><rect x="94.7773%" y="581" width="0.4608%" height="15" fill="rgb(234,167,42)" fg:x="1234" fg:w="6"/><text x="95.0273%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.46%)</title><rect x="94.7773%" y="565" width="0.4608%" height="15" fill="rgb(238,54,48)" fg:x="1234" fg:w="6"/><text x="95.0273%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.38%)</title><rect x="94.8541%" y="549" width="0.3840%" height="15" fill="rgb(226,105,2)" fg:x="1235" fg:w="5"/><text x="95.1041%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.38%)</title><rect x="94.8541%" y="533" width="0.3840%" height="15" fill="rgb(223,95,23)" fg:x="1235" fg:w="5"/><text x="95.1041%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.38%)</title><rect x="94.8541%" y="517" width="0.3840%" height="15" fill="rgb(249,212,19)" fg:x="1235" fg:w="5"/><text x="95.1041%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="95.0845%" y="501" width="0.1536%" height="15" fill="rgb(234,158,54)" fg:x="1238" fg:w="2"/><text x="95.3345%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="95.0845%" y="485" width="0.1536%" height="15" fill="rgb(247,114,32)" fg:x="1238" fg:w="2"/><text x="95.3345%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="95.0845%" y="469" width="0.1536%" height="15" fill="rgb(250,68,44)" fg:x="1238" fg:w="2"/><text x="95.3345%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="95.0845%" y="453" width="0.1536%" height="15" fill="rgb(242,3,15)" fg:x="1238" fg:w="2"/><text x="95.3345%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.15%)</title><rect x="95.0845%" y="437" width="0.1536%" height="15" fill="rgb(223,110,32)" fg:x="1238" fg:w="2"/><text x="95.3345%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="95.0845%" y="421" width="0.1536%" height="15" fill="rgb(216,26,54)" fg:x="1238" fg:w="2"/><text x="95.3345%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1613%" y="405" width="0.0768%" height="15" fill="rgb(209,145,42)" fg:x="1239" fg:w="1"/><text x="95.4113%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1613%" y="389" width="0.0768%" height="15" fill="rgb(240,111,53)" fg:x="1239" fg:w="1"/><text x="95.4113%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="95.2381%" y="581" width="0.0768%" height="15" fill="rgb(209,101,4)" fg:x="1240" fg:w="1"/><text x="95.4881%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.2381%" y="565" width="0.0768%" height="15" fill="rgb(231,74,29)" fg:x="1240" fg:w="1"/><text x="95.4881%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.2381%" y="549" width="0.0768%" height="15" fill="rgb(223,12,12)" fg:x="1240" fg:w="1"/><text x="95.4881%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.2381%" y="533" width="0.0768%" height="15" fill="rgb(207,162,2)" fg:x="1240" fg:w="1"/><text x="95.4881%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3149%" y="533" width="0.0768%" height="15" fill="rgb(230,152,0)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3149%" y="517" width="0.0768%" height="15" fill="rgb(254,156,19)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3149%" y="501" width="0.0768%" height="15" fill="rgb(250,28,0)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.3149%" y="485" width="0.0768%" height="15" fill="rgb(253,27,5)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.3149%" y="469" width="0.0768%" height="15" fill="rgb(244,154,7)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.3149%" y="453" width="0.0768%" height="15" fill="rgb(242,108,21)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3149%" y="437" width="0.0768%" height="15" fill="rgb(254,200,38)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3149%" y="421" width="0.0768%" height="15" fill="rgb(250,145,41)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.3149%" y="405" width="0.0768%" height="15" fill="rgb(235,136,31)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.3149%" y="389" width="0.0768%" height="15" fill="rgb(215,13,18)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.3149%" y="373" width="0.0768%" height="15" fill="rgb(238,199,12)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.3149%" y="357" width="0.0768%" height="15" fill="rgb(242,179,49)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3149%" y="341" width="0.0768%" height="15" fill="rgb(214,10,44)" fg:x="1241" fg:w="1"/><text x="95.5649%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="95.3149%" y="549" width="0.1536%" height="15" fill="rgb(229,181,11)" fg:x="1241" fg:w="2"/><text x="95.5649%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3917%" y="533" width="0.0768%" height="15" fill="rgb(244,155,10)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3917%" y="517" width="0.0768%" height="15" fill="rgb(254,13,48)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3917%" y="501" width="0.0768%" height="15" fill="rgb(210,164,6)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3917%" y="485" width="0.0768%" height="15" fill="rgb(216,187,40)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.3917%" y="469" width="0.0768%" height="15" fill="rgb(208,143,21)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.3917%" y="453" width="0.0768%" height="15" fill="rgb(211,73,41)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.3917%" y="437" width="0.0768%" height="15" fill="rgb(244,69,21)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3917%" y="421" width="0.0768%" height="15" fill="rgb(230,152,32)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3917%" y="405" width="0.0768%" height="15" fill="rgb(208,110,18)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.3917%" y="389" width="0.0768%" height="15" fill="rgb(214,201,49)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.3917%" y="373" width="0.0768%" height="15" fill="rgb(253,153,27)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.3917%" y="357" width="0.0768%" height="15" fill="rgb(238,61,11)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.3917%" y="341" width="0.0768%" height="15" fill="rgb(227,84,2)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3917%" y="325" width="0.0768%" height="15" fill="rgb(233,52,8)" fg:x="1242" fg:w="1"/><text x="95.6417%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="95.4685%" y="549" width="0.0768%" height="15" fill="rgb(209,136,13)" fg:x="1243" fg:w="1"/><text x="95.7185%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.4685%" y="533" width="0.0768%" height="15" fill="rgb(229,86,25)" fg:x="1243" fg:w="1"/><text x="95.7185%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.4685%" y="517" width="0.0768%" height="15" fill="rgb(235,47,16)" fg:x="1243" fg:w="1"/><text x="95.7185%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="95.4685%" y="501" width="0.0768%" height="15" fill="rgb(231,186,4)" fg:x="1243" fg:w="1"/><text x="95.7185%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5453%" y="549" width="0.0768%" height="15" fill="rgb(209,213,23)" fg:x="1244" fg:w="1"/><text x="95.7953%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.5453%" y="533" width="0.0768%" height="15" fill="rgb(212,142,47)" fg:x="1244" fg:w="1"/><text x="95.7953%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6221%" y="517" width="0.0768%" height="15" fill="rgb(251,86,24)" fg:x="1245" fg:w="1"/><text x="95.8721%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6221%" y="501" width="0.0768%" height="15" fill="rgb(206,217,17)" fg:x="1245" fg:w="1"/><text x="95.8721%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.6221%" y="485" width="0.0768%" height="15" fill="rgb(248,92,38)" fg:x="1245" fg:w="1"/><text x="95.8721%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.46%)</title><rect x="95.3149%" y="581" width="0.4608%" height="15" fill="rgb(214,25,29)" fg:x="1241" fg:w="6"/><text x="95.5649%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.46%)</title><rect x="95.3149%" y="565" width="0.4608%" height="15" fill="rgb(245,117,13)" fg:x="1241" fg:w="6"/><text x="95.5649%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.15%)</title><rect x="95.6221%" y="549" width="0.1536%" height="15" fill="rgb(205,169,9)" fg:x="1245" fg:w="2"/><text x="95.8721%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="95.6221%" y="533" width="0.1536%" height="15" fill="rgb(223,134,38)" fg:x="1245" fg:w="2"/><text x="95.8721%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="95.6989%" y="517" width="0.0768%" height="15" fill="rgb(249,129,49)" fg:x="1246" fg:w="1"/><text x="95.9489%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="95.6989%" y="501" width="0.0768%" height="15" fill="rgb(229,157,45)" fg:x="1246" fg:w="1"/><text x="95.9489%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.6989%" y="485" width="0.0768%" height="15" fill="rgb(232,159,11)" fg:x="1246" fg:w="1"/><text x="95.9489%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="95.7757%" y="565" width="0.0768%" height="15" fill="rgb(230,134,26)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.7757%" y="549" width="0.0768%" height="15" fill="rgb(234,149,40)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="95.7757%" y="533" width="0.0768%" height="15" fill="rgb(221,122,15)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="95.7757%" y="517" width="0.0768%" height="15" fill="rgb(228,127,0)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.7757%" y="501" width="0.0768%" height="15" fill="rgb(248,37,7)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="95.7757%" y="485" width="0.0768%" height="15" fill="rgb(215,140,49)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="95.7757%" y="469" width="0.0768%" height="15" fill="rgb(236,65,39)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7757%" y="453" width="0.0768%" height="15" fill="rgb(253,102,38)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7757%" y="437" width="0.0768%" height="15" fill="rgb(244,100,34)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7757%" y="421" width="0.0768%" height="15" fill="rgb(210,179,47)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.7757%" y="405" width="0.0768%" height="15" fill="rgb(231,41,37)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.7757%" y="389" width="0.0768%" height="15" fill="rgb(226,209,17)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.7757%" y="373" width="0.0768%" height="15" fill="rgb(231,154,20)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.7757%" y="357" width="0.0768%" height="15" fill="rgb(216,134,24)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.7757%" y="341" width="0.0768%" height="15" fill="rgb(224,71,42)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.7757%" y="325" width="0.0768%" height="15" fill="rgb(250,65,23)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.7757%" y="309" width="0.0768%" height="15" fill="rgb(209,160,35)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.7757%" y="293" width="0.0768%" height="15" fill="rgb(215,8,11)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.7757%" y="277" width="0.0768%" height="15" fill="rgb(227,27,12)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7757%" y="261" width="0.0768%" height="15" fill="rgb(226,111,41)" fg:x="1247" fg:w="1"/><text x="96.0257%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8525%" y="485" width="0.0768%" height="15" fill="rgb(212,195,15)" fg:x="1248" fg:w="1"/><text x="96.1025%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8525%" y="469" width="0.0768%" height="15" fill="rgb(216,191,17)" fg:x="1248" fg:w="1"/><text x="96.1025%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8525%" y="453" width="0.0768%" height="15" fill="rgb(215,57,44)" fg:x="1248" fg:w="1"/><text x="96.1025%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8525%" y="437" width="0.0768%" height="15" fill="rgb(209,38,4)" fg:x="1248" fg:w="1"/><text x="96.1025%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.9293%" y="453" width="0.0768%" height="15" fill="rgb(238,49,31)" fg:x="1249" fg:w="1"/><text x="96.1793%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (49 samples, 3.76%)</title><rect x="92.3195%" y="613" width="3.7634%" height="15" fill="rgb(219,48,39)" fg:x="1202" fg:w="49"/><text x="92.5695%" y="623.50">&lt;plu..</text></g><g><title>plugins_core::tools::move_between (17 samples, 1.31%)</title><rect x="94.7773%" y="597" width="1.3057%" height="15" fill="rgb(252,223,43)" fg:x="1234" fg:w="17"/><text x="95.0273%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.31%)</title><rect x="95.7757%" y="581" width="0.3072%" height="15" fill="rgb(247,205,46)" fg:x="1247" fg:w="4"/><text x="96.0257%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.23%)</title><rect x="95.8525%" y="565" width="0.2304%" height="15" fill="rgb(231,16,40)" fg:x="1248" fg:w="3"/><text x="96.1025%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.23%)</title><rect x="95.8525%" y="549" width="0.2304%" height="15" fill="rgb(231,115,5)" fg:x="1248" fg:w="3"/><text x="96.1025%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="95.8525%" y="533" width="0.2304%" height="15" fill="rgb(206,127,43)" fg:x="1248" fg:w="3"/><text x="96.1025%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="95.8525%" y="517" width="0.2304%" height="15" fill="rgb(218,101,9)" fg:x="1248" fg:w="3"/><text x="96.1025%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="95.8525%" y="501" width="0.2304%" height="15" fill="rgb(235,138,50)" fg:x="1248" fg:w="3"/><text x="96.1025%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="95.9293%" y="485" width="0.1536%" height="15" fill="rgb(214,197,52)" fg:x="1249" fg:w="2"/><text x="96.1793%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="95.9293%" y="469" width="0.1536%" height="15" fill="rgb(230,80,19)" fg:x="1249" fg:w="2"/><text x="96.1793%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0061%" y="453" width="0.0768%" height="15" fill="rgb(224,77,16)" fg:x="1250" fg:w="1"/><text x="96.2561%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0061%" y="437" width="0.0768%" height="15" fill="rgb(246,4,13)" fg:x="1250" fg:w="1"/><text x="96.2561%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.0061%" y="421" width="0.0768%" height="15" fill="rgb(220,177,26)" fg:x="1250" fg:w="1"/><text x="96.2561%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0061%" y="405" width="0.0768%" height="15" fill="rgb(215,114,45)" fg:x="1250" fg:w="1"/><text x="96.2561%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.0061%" y="389" width="0.0768%" height="15" fill="rgb(215,71,54)" fg:x="1250" fg:w="1"/><text x="96.2561%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="96.1598%" y="549" width="0.1536%" height="15" fill="rgb(211,155,22)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="96.1598%" y="533" width="0.1536%" height="15" fill="rgb(245,206,18)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="96.1598%" y="517" width="0.1536%" height="15" fill="rgb(248,216,48)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="96.1598%" y="501" width="0.1536%" height="15" fill="rgb(244,84,45)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="96.1598%" y="485" width="0.1536%" height="15" fill="rgb(245,13,45)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="96.1598%" y="469" width="0.1536%" height="15" fill="rgb(247,163,2)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="96.1598%" y="453" width="0.1536%" height="15" fill="rgb(211,175,10)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="96.1598%" y="437" width="0.1536%" height="15" fill="rgb(215,186,31)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="96.1598%" y="421" width="0.1536%" height="15" fill="rgb(207,42,11)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="96.1598%" y="405" width="0.1536%" height="15" fill="rgb(224,197,20)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="96.1598%" y="389" width="0.1536%" height="15" fill="rgb(244,119,36)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="96.1598%" y="373" width="0.1536%" height="15" fill="rgb(250,60,27)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="96.1598%" y="357" width="0.1536%" height="15" fill="rgb(252,202,1)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="96.1598%" y="341" width="0.1536%" height="15" fill="rgb(206,53,25)" fg:x="1252" fg:w="2"/><text x="96.4098%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="96.3134%" y="549" width="0.0768%" height="15" fill="rgb(210,88,4)" fg:x="1254" fg:w="1"/><text x="96.5634%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.3134%" y="533" width="0.0768%" height="15" fill="rgb(211,144,28)" fg:x="1254" fg:w="1"/><text x="96.5634%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="96.3134%" y="517" width="0.0768%" height="15" fill="rgb(247,81,32)" fg:x="1254" fg:w="1"/><text x="96.5634%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="96.3902%" y="501" width="0.0768%" height="15" fill="rgb(225,192,11)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="96.3902%" y="485" width="0.0768%" height="15" fill="rgb(232,212,27)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3902%" y="469" width="0.0768%" height="15" fill="rgb(239,3,29)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3902%" y="453" width="0.0768%" height="15" fill="rgb(252,225,29)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3902%" y="437" width="0.0768%" height="15" fill="rgb(205,151,9)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.3902%" y="421" width="0.0768%" height="15" fill="rgb(216,171,47)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.3902%" y="405" width="0.0768%" height="15" fill="rgb(206,181,1)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.3902%" y="389" width="0.0768%" height="15" fill="rgb(232,218,10)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3902%" y="373" width="0.0768%" height="15" fill="rgb(244,222,51)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3902%" y="357" width="0.0768%" height="15" fill="rgb(252,215,16)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.3902%" y="341" width="0.0768%" height="15" fill="rgb(212,130,13)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="96.3902%" y="325" width="0.0768%" height="15" fill="rgb(227,103,37)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="96.3902%" y="309" width="0.0768%" height="15" fill="rgb(249,48,15)" fg:x="1255" fg:w="1"/><text x="96.6402%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.15%)</title><rect x="96.3902%" y="533" width="0.1536%" height="15" fill="rgb(225,96,9)" fg:x="1255" fg:w="2"/><text x="96.6402%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.15%)</title><rect x="96.3902%" y="517" width="0.1536%" height="15" fill="rgb(213,81,41)" fg:x="1255" fg:w="2"/><text x="96.6402%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="96.4670%" y="501" width="0.0768%" height="15" fill="rgb(230,15,12)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.4670%" y="485" width="0.0768%" height="15" fill="rgb(218,106,37)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="96.4670%" y="469" width="0.0768%" height="15" fill="rgb(223,172,47)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.4670%" y="453" width="0.0768%" height="15" fill="rgb(246,180,49)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.4670%" y="437" width="0.0768%" height="15" fill="rgb(231,63,37)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="96.4670%" y="421" width="0.0768%" height="15" fill="rgb(235,70,40)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.4670%" y="405" width="0.0768%" height="15" fill="rgb(250,54,26)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.4670%" y="389" width="0.0768%" height="15" fill="rgb(214,190,1)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.4670%" y="373" width="0.0768%" height="15" fill="rgb(212,40,35)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="96.4670%" y="357" width="0.0768%" height="15" fill="rgb(239,183,47)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.4670%" y="341" width="0.0768%" height="15" fill="rgb(211,171,49)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.4670%" y="325" width="0.0768%" height="15" fill="rgb(249,186,27)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.4670%" y="309" width="0.0768%" height="15" fill="rgb(223,23,48)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.4670%" y="293" width="0.0768%" height="15" fill="rgb(209,203,21)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.4670%" y="277" width="0.0768%" height="15" fill="rgb(229,33,27)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="96.4670%" y="261" width="0.0768%" height="15" fill="rgb(207,8,53)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="96.4670%" y="245" width="0.0768%" height="15" fill="rgb(221,42,0)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="96.4670%" y="229" width="0.0768%" height="15" fill="rgb(223,115,3)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="96.4670%" y="213" width="0.0768%" height="15" fill="rgb(239,35,26)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="96.4670%" y="197" width="0.0768%" height="15" fill="rgb(233,22,9)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="96.4670%" y="181" width="0.0768%" height="15" fill="rgb(236,221,48)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="96.4670%" y="165" width="0.0768%" height="15" fill="rgb(235,52,30)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="96.4670%" y="149" width="0.0768%" height="15" fill="rgb(238,133,51)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.4670%" y="133" width="0.0768%" height="15" fill="rgb(213,122,23)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="96.4670%" y="117" width="0.0768%" height="15" fill="rgb(225,8,15)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="96.4670%" y="101" width="0.0768%" height="15" fill="rgb(219,126,35)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="96.4670%" y="85" width="0.0768%" height="15" fill="rgb(246,113,21)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="96.4670%" y="69" width="0.0768%" height="15" fill="rgb(241,193,32)" fg:x="1256" fg:w="1"/><text x="96.7170%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="96.5438%" y="533" width="0.0768%" height="15" fill="rgb(218,99,18)" fg:x="1257" fg:w="1"/><text x="96.7938%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.5438%" y="517" width="0.0768%" height="15" fill="rgb(225,114,4)" fg:x="1257" fg:w="1"/><text x="96.7938%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (7 samples, 0.54%)</title><rect x="96.1598%" y="565" width="0.5376%" height="15" fill="rgb(235,0,15)" fg:x="1252" fg:w="7"/><text x="96.4098%" y="575.50"></text></g><g><title>plugins_core::tools::contained_by (4 samples, 0.31%)</title><rect x="96.3902%" y="549" width="0.3072%" height="15" fill="rgb(247,45,27)" fg:x="1255" fg:w="4"/><text x="96.6402%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="96.6206%" y="533" width="0.0768%" height="15" fill="rgb(249,88,53)" fg:x="1258" fg:w="1"/><text x="96.8706%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.6206%" y="517" width="0.0768%" height="15" fill="rgb(207,58,45)" fg:x="1258" fg:w="1"/><text x="96.8706%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.6206%" y="501" width="0.0768%" height="15" fill="rgb(216,7,11)" fg:x="1258" fg:w="1"/><text x="96.8706%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6206%" y="485" width="0.0768%" height="15" fill="rgb(230,40,33)" fg:x="1258" fg:w="1"/><text x="96.8706%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.6206%" y="469" width="0.0768%" height="15" fill="rgb(232,24,46)" fg:x="1258" fg:w="1"/><text x="96.8706%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7742%" y="405" width="0.0768%" height="15" fill="rgb(219,222,45)" fg:x="1260" fg:w="1"/><text x="97.0242%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.23%)</title><rect x="96.6974%" y="565" width="0.2304%" height="15" fill="rgb(229,85,44)" fg:x="1259" fg:w="3"/><text x="96.9474%" y="575.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.23%)</title><rect x="96.6974%" y="549" width="0.2304%" height="15" fill="rgb(243,71,36)" fg:x="1259" fg:w="3"/><text x="96.9474%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.23%)</title><rect x="96.6974%" y="533" width="0.2304%" height="15" fill="rgb(230,203,45)" fg:x="1259" fg:w="3"/><text x="96.9474%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="96.6974%" y="517" width="0.2304%" height="15" fill="rgb(224,77,49)" fg:x="1259" fg:w="3"/><text x="96.9474%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="96.6974%" y="501" width="0.2304%" height="15" fill="rgb(210,186,47)" fg:x="1259" fg:w="3"/><text x="96.9474%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="96.6974%" y="485" width="0.2304%" height="15" fill="rgb(232,146,10)" fg:x="1259" fg:w="3"/><text x="96.9474%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="96.6974%" y="469" width="0.2304%" height="15" fill="rgb(236,185,51)" fg:x="1259" fg:w="3"/><text x="96.9474%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="96.7742%" y="453" width="0.1536%" height="15" fill="rgb(223,206,43)" fg:x="1260" fg:w="2"/><text x="97.0242%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="96.7742%" y="437" width="0.1536%" height="15" fill="rgb(227,212,9)" fg:x="1260" fg:w="2"/><text x="97.0242%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="96.7742%" y="421" width="0.1536%" height="15" fill="rgb(205,82,3)" fg:x="1260" fg:w="2"/><text x="97.0242%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8510%" y="405" width="0.0768%" height="15" fill="rgb(214,2,27)" fg:x="1261" fg:w="1"/><text x="97.1010%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8510%" y="389" width="0.0768%" height="15" fill="rgb(241,37,22)" fg:x="1261" fg:w="1"/><text x="97.1010%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.8510%" y="373" width="0.0768%" height="15" fill="rgb(219,182,1)" fg:x="1261" fg:w="1"/><text x="97.1010%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.8510%" y="357" width="0.0768%" height="15" fill="rgb(208,224,23)" fg:x="1261" fg:w="1"/><text x="97.1010%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.8510%" y="341" width="0.0768%" height="15" fill="rgb(219,121,32)" fg:x="1261" fg:w="1"/><text x="97.1010%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.8510%" y="325" width="0.0768%" height="15" fill="rgb(253,13,40)" fg:x="1261" fg:w="1"/><text x="97.1010%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.8510%" y="309" width="0.0768%" height="15" fill="rgb(233,6,28)" fg:x="1261" fg:w="1"/><text x="97.1010%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (11 samples, 0.84%)</title><rect x="96.1598%" y="597" width="0.8449%" height="15" fill="rgb(233,73,8)" fg:x="1252" fg:w="11"/><text x="96.4098%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (11 samples, 0.84%)</title><rect x="96.1598%" y="581" width="0.8449%" height="15" fill="rgb(223,48,27)" fg:x="1252" fg:w="11"/><text x="96.4098%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="96.9278%" y="565" width="0.0768%" height="15" fill="rgb(231,98,37)" fg:x="1262" fg:w="1"/><text x="97.1778%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9278%" y="549" width="0.0768%" height="15" fill="rgb(249,43,32)" fg:x="1262" fg:w="1"/><text x="97.1778%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9278%" y="533" width="0.0768%" height="15" fill="rgb(246,184,20)" fg:x="1262" fg:w="1"/><text x="97.1778%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9278%" y="517" width="0.0768%" height="15" fill="rgb(251,216,0)" fg:x="1262" fg:w="1"/><text x="97.1778%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.9278%" y="501" width="0.0768%" height="15" fill="rgb(238,41,42)" fg:x="1262" fg:w="1"/><text x="97.1778%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.9278%" y="485" width="0.0768%" height="15" fill="rgb(227,224,50)" fg:x="1262" fg:w="1"/><text x="97.1778%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.9278%" y="469" width="0.0768%" height="15" fill="rgb(237,189,18)" fg:x="1262" fg:w="1"/><text x="97.1778%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.9278%" y="453" width="0.0768%" height="15" fill="rgb(238,108,6)" fg:x="1262" fg:w="1"/><text x="97.1778%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.9278%" y="437" width="0.0768%" height="15" fill="rgb(214,197,53)" fg:x="1262" fg:w="1"/><text x="97.1778%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="97.0046%" y="549" width="0.0768%" height="15" fill="rgb(206,183,15)" fg:x="1263" fg:w="1"/><text x="97.2546%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.0046%" y="533" width="0.0768%" height="15" fill="rgb(208,130,32)" fg:x="1263" fg:w="1"/><text x="97.2546%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.0046%" y="517" width="0.0768%" height="15" fill="rgb(226,128,52)" fg:x="1263" fg:w="1"/><text x="97.2546%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="97.0814%" y="517" width="0.1536%" height="15" fill="rgb(231,183,21)" fg:x="1264" fg:w="2"/><text x="97.3314%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="97.0814%" y="501" width="0.1536%" height="15" fill="rgb(216,8,35)" fg:x="1264" fg:w="2"/><text x="97.3314%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="97.0814%" y="485" width="0.1536%" height="15" fill="rgb(224,221,8)" fg:x="1264" fg:w="2"/><text x="97.3314%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1582%" y="469" width="0.0768%" height="15" fill="rgb(210,111,33)" fg:x="1265" fg:w="1"/><text x="97.4082%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1582%" y="453" width="0.0768%" height="15" fill="rgb(232,211,38)" fg:x="1265" fg:w="1"/><text x="97.4082%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1582%" y="437" width="0.0768%" height="15" fill="rgb(216,190,27)" fg:x="1265" fg:w="1"/><text x="97.4082%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (4 samples, 0.31%)</title><rect x="97.0046%" y="597" width="0.3072%" height="15" fill="rgb(237,215,27)" fg:x="1263" fg:w="4"/><text x="97.2546%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="97.0046%" y="581" width="0.3072%" height="15" fill="rgb(251,121,39)" fg:x="1263" fg:w="4"/><text x="97.2546%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="97.0046%" y="565" width="0.3072%" height="15" fill="rgb(244,21,14)" fg:x="1263" fg:w="4"/><text x="97.2546%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.23%)</title><rect x="97.0814%" y="549" width="0.2304%" height="15" fill="rgb(221,192,22)" fg:x="1264" fg:w="3"/><text x="97.3314%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.23%)</title><rect x="97.0814%" y="533" width="0.2304%" height="15" fill="rgb(251,190,28)" fg:x="1264" fg:w="3"/><text x="97.3314%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2350%" y="517" width="0.0768%" height="15" fill="rgb(217,4,51)" fg:x="1266" fg:w="1"/><text x="97.4850%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2350%" y="501" width="0.0768%" height="15" fill="rgb(215,183,49)" fg:x="1266" fg:w="1"/><text x="97.4850%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2350%" y="485" width="0.0768%" height="15" fill="rgb(249,28,49)" fg:x="1266" fg:w="1"/><text x="97.4850%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2350%" y="469" width="0.0768%" height="15" fill="rgb(214,42,20)" fg:x="1266" fg:w="1"/><text x="97.4850%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.2350%" y="453" width="0.0768%" height="15" fill="rgb(222,77,27)" fg:x="1266" fg:w="1"/><text x="97.4850%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2350%" y="437" width="0.0768%" height="15" fill="rgb(252,198,32)" fg:x="1266" fg:w="1"/><text x="97.4850%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2350%" y="421" width="0.0768%" height="15" fill="rgb(207,140,50)" fg:x="1266" fg:w="1"/><text x="97.4850%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2350%" y="405" width="0.0768%" height="15" fill="rgb(251,170,16)" fg:x="1266" fg:w="1"/><text x="97.4850%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.2350%" y="389" width="0.0768%" height="15" fill="rgb(249,111,45)" fg:x="1266" fg:w="1"/><text x="97.4850%" y="399.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="97.3118%" y="597" width="0.0768%" height="15" fill="rgb(241,99,35)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3118%" y="581" width="0.0768%" height="15" fill="rgb(216,188,17)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3118%" y="565" width="0.0768%" height="15" fill="rgb(254,209,53)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3118%" y="549" width="0.0768%" height="15" fill="rgb(231,105,41)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.3118%" y="533" width="0.0768%" height="15" fill="rgb(242,93,23)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.3118%" y="517" width="0.0768%" height="15" fill="rgb(218,159,11)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.3118%" y="501" width="0.0768%" height="15" fill="rgb(209,90,32)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3118%" y="485" width="0.0768%" height="15" fill="rgb(253,118,46)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3118%" y="469" width="0.0768%" height="15" fill="rgb(219,121,2)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.3118%" y="453" width="0.0768%" height="15" fill="rgb(207,57,47)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.3118%" y="437" width="0.0768%" height="15" fill="rgb(235,113,43)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.3118%" y="421" width="0.0768%" height="15" fill="rgb(238,30,50)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.3118%" y="405" width="0.0768%" height="15" fill="rgb(237,47,29)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3118%" y="389" width="0.0768%" height="15" fill="rgb(245,102,24)" fg:x="1267" fg:w="1"/><text x="97.5618%" y="399.50"></text></g><g><title>plugins_core::library::actions::reply_done (2 samples, 0.15%)</title><rect x="97.3886%" y="597" width="0.1536%" height="15" fill="rgb(245,152,9)" fg:x="1268" fg:w="2"/><text x="97.6386%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (2 samples, 0.15%)</title><rect x="97.3886%" y="581" width="0.1536%" height="15" fill="rgb(223,213,17)" fg:x="1268" fg:w="2"/><text x="97.6386%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (2 samples, 0.15%)</title><rect x="97.3886%" y="565" width="0.1536%" height="15" fill="rgb(241,164,4)" fg:x="1268" fg:w="2"/><text x="97.6386%" y="575.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (2 samples, 0.15%)</title><rect x="97.3886%" y="549" width="0.1536%" height="15" fill="rgb(205,209,31)" fg:x="1268" fg:w="2"/><text x="97.6386%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.15%)</title><rect x="97.3886%" y="533" width="0.1536%" height="15" fill="rgb(248,173,2)" fg:x="1268" fg:w="2"/><text x="97.6386%" y="543.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.15%)</title><rect x="97.3886%" y="517" width="0.1536%" height="15" fill="rgb(207,67,32)" fg:x="1268" fg:w="2"/><text x="97.6386%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.15%)</title><rect x="97.3886%" y="501" width="0.1536%" height="15" fill="rgb(239,109,13)" fg:x="1268" fg:w="2"/><text x="97.6386%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.15%)</title><rect x="97.3886%" y="485" width="0.1536%" height="15" fill="rgb(233,123,24)" fg:x="1268" fg:w="2"/><text x="97.6386%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="97.4654%" y="469" width="0.0768%" height="15" fill="rgb(232,120,19)" fg:x="1269" fg:w="1"/><text x="97.7154%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="97.4654%" y="453" width="0.0768%" height="15" fill="rgb(225,17,50)" fg:x="1269" fg:w="1"/><text x="97.7154%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="97.4654%" y="437" width="0.0768%" height="15" fill="rgb(239,216,13)" fg:x="1269" fg:w="1"/><text x="97.7154%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="97.4654%" y="421" width="0.0768%" height="15" fill="rgb(232,213,26)" fg:x="1269" fg:w="1"/><text x="97.7154%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5422%" y="501" width="0.0768%" height="15" fill="rgb(244,59,39)" fg:x="1270" fg:w="1"/><text x="97.7922%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5422%" y="485" width="0.0768%" height="15" fill="rgb(234,61,35)" fg:x="1270" fg:w="1"/><text x="97.7922%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5422%" y="469" width="0.0768%" height="15" fill="rgb(245,94,24)" fg:x="1270" fg:w="1"/><text x="97.7922%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5422%" y="453" width="0.0768%" height="15" fill="rgb(238,190,44)" fg:x="1270" fg:w="1"/><text x="97.7922%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5422%" y="437" width="0.0768%" height="15" fill="rgb(205,145,25)" fg:x="1270" fg:w="1"/><text x="97.7922%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.15%)</title><rect x="97.5422%" y="581" width="0.1536%" height="15" fill="rgb(229,158,41)" fg:x="1270" fg:w="2"/><text x="97.7922%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.15%)</title><rect x="97.5422%" y="565" width="0.1536%" height="15" fill="rgb(224,121,5)" fg:x="1270" fg:w="2"/><text x="97.7922%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.15%)</title><rect x="97.5422%" y="549" width="0.1536%" height="15" fill="rgb(238,168,35)" fg:x="1270" fg:w="2"/><text x="97.7922%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="97.5422%" y="533" width="0.1536%" height="15" fill="rgb(231,11,42)" fg:x="1270" fg:w="2"/><text x="97.7922%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="97.5422%" y="517" width="0.1536%" height="15" fill="rgb(241,105,19)" fg:x="1270" fg:w="2"/><text x="97.7922%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.6190%" y="501" width="0.0768%" height="15" fill="rgb(253,210,20)" fg:x="1271" fg:w="1"/><text x="97.8690%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.6190%" y="485" width="0.0768%" height="15" fill="rgb(215,72,52)" fg:x="1271" fg:w="1"/><text x="97.8690%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.6190%" y="469" width="0.0768%" height="15" fill="rgb(223,225,30)" fg:x="1271" fg:w="1"/><text x="97.8690%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.6190%" y="453" width="0.0768%" height="15" fill="rgb(220,138,44)" fg:x="1271" fg:w="1"/><text x="97.8690%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.6190%" y="437" width="0.0768%" height="15" fill="rgb(206,128,12)" fg:x="1271" fg:w="1"/><text x="97.8690%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6959%" y="565" width="0.0768%" height="15" fill="rgb(245,194,0)" fg:x="1272" fg:w="1"/><text x="97.9459%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6959%" y="549" width="0.0768%" height="15" fill="rgb(235,175,41)" fg:x="1272" fg:w="1"/><text x="97.9459%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6959%" y="533" width="0.0768%" height="15" fill="rgb(216,15,48)" fg:x="1272" fg:w="1"/><text x="97.9459%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6959%" y="517" width="0.0768%" height="15" fill="rgb(223,179,5)" fg:x="1272" fg:w="1"/><text x="97.9459%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6959%" y="501" width="0.0768%" height="15" fill="rgb(220,80,15)" fg:x="1272" fg:w="1"/><text x="97.9459%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6959%" y="485" width="0.0768%" height="15" fill="rgb(228,20,30)" fg:x="1272" fg:w="1"/><text x="97.9459%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6959%" y="469" width="0.0768%" height="15" fill="rgb(229,194,27)" fg:x="1272" fg:w="1"/><text x="97.9459%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6959%" y="453" width="0.0768%" height="15" fill="rgb(238,202,32)" fg:x="1272" fg:w="1"/><text x="97.9459%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="97.7727%" y="549" width="0.1536%" height="15" fill="rgb(207,82,27)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="97.7727%" y="533" width="0.1536%" height="15" fill="rgb(246,122,46)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="97.7727%" y="517" width="0.1536%" height="15" fill="rgb(220,101,26)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="97.7727%" y="501" width="0.1536%" height="15" fill="rgb(251,63,9)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="97.7727%" y="485" width="0.1536%" height="15" fill="rgb(235,186,5)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="97.7727%" y="469" width="0.1536%" height="15" fill="rgb(241,139,37)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="97.7727%" y="453" width="0.1536%" height="15" fill="rgb(252,177,51)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="97.7727%" y="437" width="0.1536%" height="15" fill="rgb(214,131,22)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="97.7727%" y="421" width="0.1536%" height="15" fill="rgb(246,53,19)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="97.7727%" y="405" width="0.1536%" height="15" fill="rgb(231,158,27)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="97.7727%" y="389" width="0.1536%" height="15" fill="rgb(226,166,46)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="97.7727%" y="373" width="0.1536%" height="15" fill="rgb(218,178,26)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="97.7727%" y="357" width="0.1536%" height="15" fill="rgb(206,25,39)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="97.7727%" y="341" width="0.1536%" height="15" fill="rgb(232,218,41)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="97.7727%" y="325" width="0.1536%" height="15" fill="rgb(212,151,15)" fg:x="1273" fg:w="2"/><text x="98.0227%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="98.0031%" y="517" width="0.0768%" height="15" fill="rgb(213,49,22)" fg:x="1276" fg:w="1"/><text x="98.2531%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.0031%" y="501" width="0.0768%" height="15" fill="rgb(247,116,21)" fg:x="1276" fg:w="1"/><text x="98.2531%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="98.0031%" y="485" width="0.0768%" height="15" fill="rgb(248,98,14)" fg:x="1276" fg:w="1"/><text x="98.2531%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0031%" y="469" width="0.0768%" height="15" fill="rgb(247,72,6)" fg:x="1276" fg:w="1"/><text x="98.2531%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0031%" y="453" width="0.0768%" height="15" fill="rgb(213,9,22)" fg:x="1276" fg:w="1"/><text x="98.2531%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0031%" y="437" width="0.0768%" height="15" fill="rgb(213,122,30)" fg:x="1276" fg:w="1"/><text x="98.2531%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (6 samples, 0.46%)</title><rect x="97.6959%" y="581" width="0.4608%" height="15" fill="rgb(244,11,30)" fg:x="1272" fg:w="6"/><text x="97.9459%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.38%)</title><rect x="97.7727%" y="565" width="0.3840%" height="15" fill="rgb(236,102,26)" fg:x="1273" fg:w="5"/><text x="98.0227%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="97.9263%" y="549" width="0.2304%" height="15" fill="rgb(231,166,37)" fg:x="1275" fg:w="3"/><text x="98.1763%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="97.9263%" y="533" width="0.2304%" height="15" fill="rgb(220,224,29)" fg:x="1275" fg:w="3"/><text x="98.1763%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0799%" y="517" width="0.0768%" height="15" fill="rgb(227,30,40)" fg:x="1277" fg:w="1"/><text x="98.3299%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0799%" y="501" width="0.0768%" height="15" fill="rgb(235,8,36)" fg:x="1277" fg:w="1"/><text x="98.3299%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1567%" y="549" width="0.0768%" height="15" fill="rgb(232,175,19)" fg:x="1278" fg:w="1"/><text x="98.4067%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1567%" y="533" width="0.0768%" height="15" fill="rgb(217,114,10)" fg:x="1278" fg:w="1"/><text x="98.4067%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="98.2335%" y="549" width="0.0768%" height="15" fill="rgb(214,112,41)" fg:x="1279" fg:w="1"/><text x="98.4835%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.2335%" y="533" width="0.0768%" height="15" fill="rgb(226,69,34)" fg:x="1279" fg:w="1"/><text x="98.4835%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="98.2335%" y="517" width="0.0768%" height="15" fill="rgb(219,23,46)" fg:x="1279" fg:w="1"/><text x="98.4835%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="98.2335%" y="501" width="0.0768%" height="15" fill="rgb(233,3,8)" fg:x="1279" fg:w="1"/><text x="98.4835%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.23%)</title><rect x="98.1567%" y="581" width="0.2304%" height="15" fill="rgb(251,34,42)" fg:x="1278" fg:w="3"/><text x="98.4067%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.23%)</title><rect x="98.1567%" y="565" width="0.2304%" height="15" fill="rgb(215,84,9)" fg:x="1278" fg:w="3"/><text x="98.4067%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="98.3103%" y="549" width="0.0768%" height="15" fill="rgb(231,75,52)" fg:x="1280" fg:w="1"/><text x="98.5603%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3871%" y="485" width="0.0768%" height="15" fill="rgb(247,201,31)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3871%" y="469" width="0.0768%" height="15" fill="rgb(215,171,37)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3871%" y="453" width="0.0768%" height="15" fill="rgb(208,208,44)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3871%" y="437" width="0.0768%" height="15" fill="rgb(247,146,54)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3871%" y="421" width="0.0768%" height="15" fill="rgb(209,0,40)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3871%" y="405" width="0.0768%" height="15" fill="rgb(221,59,4)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3871%" y="389" width="0.0768%" height="15" fill="rgb(227,153,47)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.3871%" y="373" width="0.0768%" height="15" fill="rgb(253,225,10)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.3871%" y="357" width="0.0768%" height="15" fill="rgb(237,201,24)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.3871%" y="341" width="0.0768%" height="15" fill="rgb(238,23,27)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="98.3871%" y="325" width="0.0768%" height="15" fill="rgb(236,54,50)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.3871%" y="309" width="0.0768%" height="15" fill="rgb(216,106,0)" fg:x="1281" fg:w="1"/><text x="98.6371%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.15%)</title><rect x="98.3871%" y="533" width="0.1536%" height="15" fill="rgb(234,179,35)" fg:x="1281" fg:w="2"/><text x="98.6371%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="98.3871%" y="517" width="0.1536%" height="15" fill="rgb(210,35,8)" fg:x="1281" fg:w="2"/><text x="98.6371%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="98.3871%" y="501" width="0.1536%" height="15" fill="rgb(238,144,16)" fg:x="1281" fg:w="2"/><text x="98.6371%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.4639%" y="485" width="0.0768%" height="15" fill="rgb(244,54,7)" fg:x="1282" fg:w="1"/><text x="98.7139%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4639%" y="469" width="0.0768%" height="15" fill="rgb(233,225,40)" fg:x="1282" fg:w="1"/><text x="98.7139%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.4639%" y="453" width="0.0768%" height="15" fill="rgb(249,227,23)" fg:x="1282" fg:w="1"/><text x="98.7139%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4639%" y="437" width="0.0768%" height="15" fill="rgb(215,42,44)" fg:x="1282" fg:w="1"/><text x="98.7139%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.4639%" y="421" width="0.0768%" height="15" fill="rgb(220,145,40)" fg:x="1282" fg:w="1"/><text x="98.7139%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4639%" y="405" width="0.0768%" height="15" fill="rgb(228,218,40)" fg:x="1282" fg:w="1"/><text x="98.7139%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.4639%" y="389" width="0.0768%" height="15" fill="rgb(217,52,54)" fg:x="1282" fg:w="1"/><text x="98.7139%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.4639%" y="373" width="0.0768%" height="15" fill="rgb(223,90,22)" fg:x="1282" fg:w="1"/><text x="98.7139%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4639%" y="357" width="0.0768%" height="15" fill="rgb(232,114,35)" fg:x="1282" fg:w="1"/><text x="98.7139%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.5407%" y="517" width="0.0768%" height="15" fill="rgb(227,223,50)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.5407%" y="501" width="0.0768%" height="15" fill="rgb(249,175,7)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.5407%" y="485" width="0.0768%" height="15" fill="rgb(249,173,15)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.5407%" y="469" width="0.0768%" height="15" fill="rgb(240,131,6)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.5407%" y="453" width="0.0768%" height="15" fill="rgb(246,117,16)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.5407%" y="437" width="0.0768%" height="15" fill="rgb(209,32,16)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.5407%" y="421" width="0.0768%" height="15" fill="rgb(207,45,44)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.5407%" y="405" width="0.0768%" height="15" fill="rgb(210,66,3)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.5407%" y="389" width="0.0768%" height="15" fill="rgb(246,133,30)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.5407%" y="373" width="0.0768%" height="15" fill="rgb(224,37,17)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.5407%" y="357" width="0.0768%" height="15" fill="rgb(237,218,18)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5407%" y="341" width="0.0768%" height="15" fill="rgb(240,57,8)" fg:x="1283" fg:w="1"/><text x="98.7907%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6175%" y="485" width="0.0768%" height="15" fill="rgb(231,51,38)" fg:x="1284" fg:w="1"/><text x="98.8675%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6175%" y="469" width="0.0768%" height="15" fill="rgb(230,89,50)" fg:x="1284" fg:w="1"/><text x="98.8675%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6175%" y="453" width="0.0768%" height="15" fill="rgb(234,103,34)" fg:x="1284" fg:w="1"/><text x="98.8675%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.38%)</title><rect x="98.3871%" y="581" width="0.3840%" height="15" fill="rgb(220,45,48)" fg:x="1281" fg:w="5"/><text x="98.6371%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.38%)</title><rect x="98.3871%" y="565" width="0.3840%" height="15" fill="rgb(250,210,3)" fg:x="1281" fg:w="5"/><text x="98.6371%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.38%)</title><rect x="98.3871%" y="549" width="0.3840%" height="15" fill="rgb(210,118,12)" fg:x="1281" fg:w="5"/><text x="98.6371%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="98.5407%" y="533" width="0.2304%" height="15" fill="rgb(238,154,21)" fg:x="1283" fg:w="3"/><text x="98.7907%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.15%)</title><rect x="98.6175%" y="517" width="0.1536%" height="15" fill="rgb(227,220,4)" fg:x="1284" fg:w="2"/><text x="98.8675%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.15%)</title><rect x="98.6175%" y="501" width="0.1536%" height="15" fill="rgb(207,179,27)" fg:x="1284" fg:w="2"/><text x="98.8675%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.6943%" y="485" width="0.0768%" height="15" fill="rgb(240,111,30)" fg:x="1285" fg:w="1"/><text x="98.9443%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.6943%" y="469" width="0.0768%" height="15" fill="rgb(251,29,1)" fg:x="1285" fg:w="1"/><text x="98.9443%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.6943%" y="453" width="0.0768%" height="15" fill="rgb(224,141,39)" fg:x="1285" fg:w="1"/><text x="98.9443%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.6943%" y="437" width="0.0768%" height="15" fill="rgb(207,98,26)" fg:x="1285" fg:w="1"/><text x="98.9443%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (36 samples, 2.76%)</title><rect x="96.0829%" y="613" width="2.7650%" height="15" fill="rgb(221,37,6)" fg:x="1251" fg:w="36"/><text x="96.3329%" y="623.50">&lt;p..</text></g><g><title>plugins_core::tools::move_between (17 samples, 1.31%)</title><rect x="97.5422%" y="597" width="1.3057%" height="15" fill="rgb(217,32,44)" fg:x="1270" fg:w="17"/><text x="97.7922%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="98.7711%" y="581" width="0.0768%" height="15" fill="rgb(253,149,2)" fg:x="1286" fg:w="1"/><text x="99.0211%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="98.7711%" y="565" width="0.0768%" height="15" fill="rgb(220,165,39)" fg:x="1286" fg:w="1"/><text x="99.0211%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.7711%" y="549" width="0.0768%" height="15" fill="rgb(235,33,48)" fg:x="1286" fg:w="1"/><text x="99.0211%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.7711%" y="533" width="0.0768%" height="15" fill="rgb(221,89,6)" fg:x="1286" fg:w="1"/><text x="99.0211%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (95 samples, 7.30%)</title><rect x="91.7051%" y="805" width="7.2965%" height="15" fill="rgb(215,214,6)" fg:x="1194" fg:w="95"/><text x="91.9551%" y="815.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::apply_middleware (94 samples, 7.22%)</title><rect x="91.7819%" y="789" width="7.2197%" height="15" fill="rgb(241,1,30)" fg:x="1195" fg:w="94"/><text x="92.0319%" y="799.50">kernel::pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (94 samples, 7.22%)</title><rect x="91.7819%" y="773" width="7.2197%" height="15" fill="rgb(211,140,32)" fg:x="1195" fg:w="94"/><text x="92.0319%" y="783.50">kernel::pl..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (94 samples, 7.22%)</title><rect x="91.7819%" y="757" width="7.2197%" height="15" fill="rgb(232,48,21)" fg:x="1195" fg:w="94"/><text x="92.0319%" y="767.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (87 samples, 6.68%)</title><rect x="92.3195%" y="741" width="6.6820%" height="15" fill="rgb(252,217,9)" fg:x="1202" fg:w="87"/><text x="92.5695%" y="751.50">kernel::p..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (87 samples, 6.68%)</title><rect x="92.3195%" y="725" width="6.6820%" height="15" fill="rgb(206,123,34)" fg:x="1202" fg:w="87"/><text x="92.5695%" y="735.50">&lt;plugins_..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (87 samples, 6.68%)</title><rect x="92.3195%" y="709" width="6.6820%" height="15" fill="rgb(245,161,38)" fg:x="1202" fg:w="87"/><text x="92.5695%" y="719.50">kernel::p..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (87 samples, 6.68%)</title><rect x="92.3195%" y="693" width="6.6820%" height="15" fill="rgb(233,205,7)" fg:x="1202" fg:w="87"/><text x="92.5695%" y="703.50">core::ops..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (87 samples, 6.68%)</title><rect x="92.3195%" y="677" width="6.6820%" height="15" fill="rgb(217,119,18)" fg:x="1202" fg:w="87"/><text x="92.5695%" y="687.50">kernel::p..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (87 samples, 6.68%)</title><rect x="92.3195%" y="661" width="6.6820%" height="15" fill="rgb(252,126,3)" fg:x="1202" fg:w="87"/><text x="92.5695%" y="671.50">core::ops..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (87 samples, 6.68%)</title><rect x="92.3195%" y="645" width="6.6820%" height="15" fill="rgb(252,188,15)" fg:x="1202" fg:w="87"/><text x="92.5695%" y="655.50">&lt;alloc::b..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (87 samples, 6.68%)</title><rect x="92.3195%" y="629" width="6.6820%" height="15" fill="rgb(228,1,48)" fg:x="1202" fg:w="87"/><text x="92.5695%" y="639.50">&lt;engine::..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.15%)</title><rect x="98.8479%" y="613" width="0.1536%" height="15" fill="rgb(205,187,8)" fg:x="1287" fg:w="2"/><text x="99.0979%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="98.9247%" y="597" width="0.0768%" height="15" fill="rgb(205,105,50)" fg:x="1288" fg:w="1"/><text x="99.1747%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.9247%" y="581" width="0.0768%" height="15" fill="rgb(211,31,46)" fg:x="1288" fg:w="1"/><text x="99.1747%" y="591.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.0015%" y="757" width="0.0768%" height="15" fill="rgb(213,126,5)" fg:x="1289" fg:w="1"/><text x="99.2515%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0015%" y="741" width="0.0768%" height="15" fill="rgb(231,87,9)" fg:x="1289" fg:w="1"/><text x="99.2515%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0015%" y="725" width="0.0768%" height="15" fill="rgb(219,224,20)" fg:x="1289" fg:w="1"/><text x="99.2515%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0015%" y="709" width="0.0768%" height="15" fill="rgb(230,84,21)" fg:x="1289" fg:w="1"/><text x="99.2515%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0015%" y="693" width="0.0768%" height="15" fill="rgb(224,169,42)" fg:x="1289" fg:w="1"/><text x="99.2515%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0015%" y="677" width="0.0768%" height="15" fill="rgb(227,182,13)" fg:x="1289" fg:w="1"/><text x="99.2515%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0015%" y="661" width="0.0768%" height="15" fill="rgb(249,57,41)" fg:x="1289" fg:w="1"/><text x="99.2515%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (2 samples, 0.15%)</title><rect x="99.0015%" y="773" width="0.1536%" height="15" fill="rgb(214,93,52)" fg:x="1289" fg:w="2"/><text x="99.2515%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0783%" y="757" width="0.0768%" height="15" fill="rgb(229,161,34)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0783%" y="741" width="0.0768%" height="15" fill="rgb(227,193,17)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.0783%" y="725" width="0.0768%" height="15" fill="rgb(242,164,46)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0783%" y="709" width="0.0768%" height="15" fill="rgb(242,142,47)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="719.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0783%" y="693" width="0.0768%" height="15" fill="rgb(208,23,18)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0783%" y="677" width="0.0768%" height="15" fill="rgb(219,54,38)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0783%" y="661" width="0.0768%" height="15" fill="rgb(206,97,35)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0783%" y="645" width="0.0768%" height="15" fill="rgb(208,76,8)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0783%" y="629" width="0.0768%" height="15" fill="rgb(220,92,28)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0783%" y="613" width="0.0768%" height="15" fill="rgb(209,158,39)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0783%" y="597" width="0.0768%" height="15" fill="rgb(238,175,9)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0783%" y="581" width="0.0768%" height="15" fill="rgb(240,116,17)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0783%" y="565" width="0.0768%" height="15" fill="rgb(208,7,2)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0783%" y="549" width="0.0768%" height="15" fill="rgb(252,52,4)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0783%" y="533" width="0.0768%" height="15" fill="rgb(222,68,34)" fg:x="1290" fg:w="1"/><text x="99.3283%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.23%)</title><rect x="99.0015%" y="805" width="0.2304%" height="15" fill="rgb(242,154,35)" fg:x="1289" fg:w="3"/><text x="99.2515%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (3 samples, 0.23%)</title><rect x="99.0015%" y="789" width="0.2304%" height="15" fill="rgb(210,125,54)" fg:x="1289" fg:w="3"/><text x="99.2515%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.1551%" y="773" width="0.0768%" height="15" fill="rgb(247,121,18)" fg:x="1291" fg:w="1"/><text x="99.4051%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.1551%" y="757" width="0.0768%" height="15" fill="rgb(223,48,51)" fg:x="1291" fg:w="1"/><text x="99.4051%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.1551%" y="741" width="0.0768%" height="15" fill="rgb(211,156,48)" fg:x="1291" fg:w="1"/><text x="99.4051%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1551%" y="725" width="0.0768%" height="15" fill="rgb(236,56,31)" fg:x="1291" fg:w="1"/><text x="99.4051%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1551%" y="709" width="0.0768%" height="15" fill="rgb(247,157,52)" fg:x="1291" fg:w="1"/><text x="99.4051%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.1551%" y="693" width="0.0768%" height="15" fill="rgb(244,121,39)" fg:x="1291" fg:w="1"/><text x="99.4051%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.3088%" y="677" width="0.0768%" height="15" fill="rgb(239,4,40)" fg:x="1293" fg:w="1"/><text x="99.5588%" y="687.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.23%)</title><rect x="99.2320%" y="741" width="0.2304%" height="15" fill="rgb(213,204,45)" fg:x="1292" fg:w="3"/><text x="99.4820%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="99.2320%" y="725" width="0.2304%" height="15" fill="rgb(242,107,0)" fg:x="1292" fg:w="3"/><text x="99.4820%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="99.2320%" y="709" width="0.2304%" height="15" fill="rgb(215,152,25)" fg:x="1292" fg:w="3"/><text x="99.4820%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="99.2320%" y="693" width="0.2304%" height="15" fill="rgb(233,151,6)" fg:x="1292" fg:w="3"/><text x="99.4820%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.3856%" y="677" width="0.0768%" height="15" fill="rgb(206,126,44)" fg:x="1294" fg:w="1"/><text x="99.6356%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.38%)</title><rect x="99.2320%" y="757" width="0.3840%" height="15" fill="rgb(209,145,15)" fg:x="1292" fg:w="5"/><text x="99.4820%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="99.4624%" y="741" width="0.1536%" height="15" fill="rgb(235,214,8)" fg:x="1295" fg:w="2"/><text x="99.7124%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="99.4624%" y="725" width="0.1536%" height="15" fill="rgb(216,140,51)" fg:x="1295" fg:w="2"/><text x="99.7124%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.6160%" y="757" width="0.0768%" height="15" fill="rgb(213,83,34)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.6160%" y="741" width="0.0768%" height="15" fill="rgb(218,186,44)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.6160%" y="725" width="0.0768%" height="15" fill="rgb(225,147,10)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6160%" y="709" width="0.0768%" height="15" fill="rgb(209,214,20)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6160%" y="693" width="0.0768%" height="15" fill="rgb(252,61,32)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6160%" y="677" width="0.0768%" height="15" fill="rgb(237,204,10)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6160%" y="661" width="0.0768%" height="15" fill="rgb(246,118,16)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.6160%" y="645" width="0.0768%" height="15" fill="rgb(214,50,9)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6160%" y="629" width="0.0768%" height="15" fill="rgb(212,41,1)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6160%" y="613" width="0.0768%" height="15" fill="rgb(228,172,32)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6160%" y="597" width="0.0768%" height="15" fill="rgb(231,85,38)" fg:x="1297" fg:w="1"/><text x="99.8660%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (7 samples, 0.54%)</title><rect x="99.2320%" y="805" width="0.5376%" height="15" fill="rgb(223,120,31)" fg:x="1292" fg:w="7"/><text x="99.4820%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.54%)</title><rect x="99.2320%" y="789" width="0.5376%" height="15" fill="rgb(254,174,9)" fg:x="1292" fg:w="7"/><text x="99.4820%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.54%)</title><rect x="99.2320%" y="773" width="0.5376%" height="15" fill="rgb(243,197,0)" fg:x="1292" fg:w="7"/><text x="99.4820%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.6928%" y="757" width="0.0768%" height="15" fill="rgb(226,186,17)" fg:x="1298" fg:w="1"/><text x="99.9428%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.6928%" y="741" width="0.0768%" height="15" fill="rgb(229,38,38)" fg:x="1298" fg:w="1"/><text x="99.9428%" y="751.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7696%" y="805" width="0.0768%" height="15" fill="rgb(238,82,14)" fg:x="1299" fg:w="1"/><text x="100.0196%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.7696%" y="789" width="0.0768%" height="15" fill="rgb(230,154,54)" fg:x="1299" fg:w="1"/><text x="100.0196%" y="799.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7696%" y="773" width="0.0768%" height="15" fill="rgb(243,84,17)" fg:x="1299" fg:w="1"/><text x="100.0196%" y="783.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7696%" y="757" width="0.0768%" height="15" fill="rgb(226,41,37)" fg:x="1299" fg:w="1"/><text x="100.0196%" y="767.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.7696%" y="741" width="0.0768%" height="15" fill="rgb(219,20,18)" fg:x="1299" fg:w="1"/><text x="100.0196%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.7696%" y="725" width="0.0768%" height="15" fill="rgb(243,173,39)" fg:x="1299" fg:w="1"/><text x="100.0196%" y="735.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (107 samples, 8.22%)</title><rect x="91.7051%" y="821" width="8.2181%" height="15" fill="rgb(245,79,20)" fg:x="1194" fg:w="107"/><text x="91.9551%" y="831.50">engine::ses..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.8464%" y="805" width="0.0768%" height="15" fill="rgb(229,101,45)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.8464%" y="789" width="0.0768%" height="15" fill="rgb(215,123,52)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.8464%" y="773" width="0.0768%" height="15" fill="rgb(215,11,33)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8464%" y="757" width="0.0768%" height="15" fill="rgb(245,105,20)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.8464%" y="741" width="0.0768%" height="15" fill="rgb(231,132,30)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.8464%" y="725" width="0.0768%" height="15" fill="rgb(224,62,21)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.8464%" y="709" width="0.0768%" height="15" fill="rgb(209,221,38)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8464%" y="693" width="0.0768%" height="15" fill="rgb(229,200,30)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.8464%" y="677" width="0.0768%" height="15" fill="rgb(237,142,41)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.8464%" y="661" width="0.0768%" height="15" fill="rgb(238,37,22)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.8464%" y="645" width="0.0768%" height="15" fill="rgb(234,182,17)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8464%" y="629" width="0.0768%" height="15" fill="rgb(237,58,48)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8464%" y="613" width="0.0768%" height="15" fill="rgb(226,112,37)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8464%" y="597" width="0.0768%" height="15" fill="rgb(230,201,20)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.8464%" y="581" width="0.0768%" height="15" fill="rgb(252,95,39)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.8464%" y="565" width="0.0768%" height="15" fill="rgb(240,150,33)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.8464%" y="549" width="0.0768%" height="15" fill="rgb(208,202,37)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.8464%" y="533" width="0.0768%" height="15" fill="rgb(251,37,12)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.8464%" y="517" width="0.0768%" height="15" fill="rgb(247,150,26)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.8464%" y="501" width="0.0768%" height="15" fill="rgb(232,28,8)" fg:x="1300" fg:w="1"/><text x="100.0964%" y="511.50"></text></g><g><title>all (1,302 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(226,121,34)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1183.50"></text></g><g><title>simple-b9ccdf7e (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(237,23,13)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1167.50">simple-b9ccdf7e</text></g><g><title>_start (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(214,42,29)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1151.50">_start</text></g><g><title>__libc_start_main (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(246,204,29)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1135.50">__libc_start_main</text></g><g><title>main (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(242,28,40)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1119.50">main</text></g><g><title>std::rt::lang_start_internal (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(243,64,49)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1103.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(226,93,13)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1087.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(241,113,26)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1071.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(209,209,0)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1055.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(251,183,50)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1039.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,302 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(248,24,43)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,302 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(218,102,9)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,302 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(249,209,39)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="991.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,302 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(210,37,6)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="975.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,302 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(212,99,4)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="959.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,302 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(253,59,46)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="943.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,302 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(229,96,9)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="927.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,302 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(207,103,49)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="911.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,302 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(250,226,20)" fg:x="0" fg:w="1302"/><text x="0.2500%" y="895.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (271 samples, 20.81%)</title><rect x="79.1859%" y="869" width="20.8141%" height="15" fill="rgb(238,220,11)" fg:x="1031" fg:w="271"/><text x="79.4359%" y="879.50">&lt;criterion::routine::Function&lt;M,F..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (271 samples, 20.81%)</title><rect x="79.1859%" y="853" width="20.8141%" height="15" fill="rgb(236,74,15)" fg:x="1031" fg:w="271"/><text x="79.4359%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::i..</text></g><g><title>tests::evaluate_text_in_new_domain (271 samples, 20.81%)</title><rect x="79.1859%" y="837" width="20.8141%" height="15" fill="rgb(218,43,40)" fg:x="1031" fg:w="271"/><text x="79.4359%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9232%" y="821" width="0.0768%" height="15" fill="rgb(245,206,37)" fg:x="1301" fg:w="1"/><text x="100.1732%" y="831.50"></text></g></svg></svg>