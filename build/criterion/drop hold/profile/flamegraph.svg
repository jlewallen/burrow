<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="1260"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0000%" y="581" width="0.0794%" height="15" fill="rgb(232,141,1)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3175%" y="533" width="0.0794%" height="15" fill="rgb(222,210,1)" fg:x="4" fg:w="1"/><text x="0.5675%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.3968%" y="533" width="0.0794%" height="15" fill="rgb(219,84,10)" fg:x="5" fg:w="1"/><text x="0.6468%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.5556%" y="517" width="0.1587%" height="15" fill="rgb(245,188,6)" fg:x="7" fg:w="2"/><text x="0.8056%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6349%" y="501" width="0.0794%" height="15" fill="rgb(252,139,39)" fg:x="8" fg:w="1"/><text x="0.8849%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7143%" y="501" width="0.0794%" height="15" fill="rgb(218,42,26)" fg:x="9" fg:w="1"/><text x="0.9643%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.87%)</title><rect x="0.0000%" y="597" width="0.8730%" height="15" fill="rgb(237,226,51)" fg:x="0" fg:w="11"/><text x="0.2500%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.79%)</title><rect x="0.0794%" y="581" width="0.7937%" height="15" fill="rgb(246,15,17)" fg:x="1" fg:w="10"/><text x="0.3294%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.71%)</title><rect x="0.1587%" y="565" width="0.7143%" height="15" fill="rgb(228,170,42)" fg:x="2" fg:w="9"/><text x="0.4087%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="0.1587%" y="549" width="0.7143%" height="15" fill="rgb(248,118,53)" fg:x="2" fg:w="9"/><text x="0.4087%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="0.4762%" y="533" width="0.3968%" height="15" fill="rgb(207,30,10)" fg:x="6" fg:w="5"/><text x="0.7262%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.7143%" y="517" width="0.1587%" height="15" fill="rgb(217,104,38)" fg:x="9" fg:w="2"/><text x="0.9643%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.7937%" y="501" width="0.0794%" height="15" fill="rgb(211,165,26)" fg:x="10" fg:w="1"/><text x="1.0437%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7937%" y="485" width="0.0794%" height="15" fill="rgb(247,38,9)" fg:x="10" fg:w="1"/><text x="1.0437%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7937%" y="469" width="0.0794%" height="15" fill="rgb(218,187,8)" fg:x="10" fg:w="1"/><text x="1.0437%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.95%)</title><rect x="0.0000%" y="661" width="0.9524%" height="15" fill="rgb(247,94,28)" fg:x="0" fg:w="12"/><text x="0.2500%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::state::State&gt;&gt; (12 samples, 0.95%)</title><rect x="0.0000%" y="645" width="0.9524%" height="15" fill="rgb(218,173,30)" fg:x="0" fg:w="12"/><text x="0.2500%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.95%)</title><rect x="0.0000%" y="629" width="0.9524%" height="15" fill="rgb(245,45,36)" fg:x="0" fg:w="12"/><text x="0.2500%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (12 samples, 0.95%)</title><rect x="0.0000%" y="613" width="0.9524%" height="15" fill="rgb(221,172,44)" fg:x="0" fg:w="12"/><text x="0.2500%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8730%" y="597" width="0.0794%" height="15" fill="rgb(222,45,12)" fg:x="11" fg:w="1"/><text x="1.1230%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="1.0317%" y="501" width="0.0794%" height="15" fill="rgb(250,10,22)" fg:x="13" fg:w="1"/><text x="1.2817%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="1.0317%" y="485" width="0.0794%" height="15" fill="rgb(239,27,0)" fg:x="13" fg:w="1"/><text x="1.2817%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="1.0317%" y="581" width="0.1587%" height="15" fill="rgb(223,118,22)" fg:x="13" fg:w="2"/><text x="1.2817%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="1.0317%" y="565" width="0.1587%" height="15" fill="rgb(251,81,25)" fg:x="13" fg:w="2"/><text x="1.2817%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="1.0317%" y="549" width="0.1587%" height="15" fill="rgb(237,225,53)" fg:x="13" fg:w="2"/><text x="1.2817%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="1.0317%" y="533" width="0.1587%" height="15" fill="rgb(237,186,51)" fg:x="13" fg:w="2"/><text x="1.2817%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="1.0317%" y="517" width="0.1587%" height="15" fill="rgb(247,209,11)" fg:x="13" fg:w="2"/><text x="1.2817%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.1111%" y="501" width="0.0794%" height="15" fill="rgb(223,109,27)" fg:x="14" fg:w="1"/><text x="1.3611%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.1111%" y="485" width="0.0794%" height="15" fill="rgb(246,181,13)" fg:x="14" fg:w="1"/><text x="1.3611%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.1111%" y="469" width="0.0794%" height="15" fill="rgb(234,57,44)" fg:x="14" fg:w="1"/><text x="1.3611%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.1111%" y="453" width="0.0794%" height="15" fill="rgb(211,227,50)" fg:x="14" fg:w="1"/><text x="1.3611%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="1.1111%" y="437" width="0.0794%" height="15" fill="rgb(254,57,34)" fg:x="14" fg:w="1"/><text x="1.3611%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.1111%" y="421" width="0.0794%" height="15" fill="rgb(227,212,26)" fg:x="14" fg:w="1"/><text x="1.3611%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.1905%" y="485" width="0.0794%" height="15" fill="rgb(244,169,44)" fg:x="15" fg:w="1"/><text x="1.4405%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="1.1905%" y="469" width="0.0794%" height="15" fill="rgb(236,135,50)" fg:x="15" fg:w="1"/><text x="1.4405%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="1.3492%" y="421" width="0.1587%" height="15" fill="rgb(241,89,30)" fg:x="17" fg:w="2"/><text x="1.5992%" y="431.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="1.1905%" y="565" width="0.3968%" height="15" fill="rgb(206,113,34)" fg:x="15" fg:w="5"/><text x="1.4405%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="1.1905%" y="549" width="0.3968%" height="15" fill="rgb(218,104,52)" fg:x="15" fg:w="5"/><text x="1.4405%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="1.1905%" y="533" width="0.3968%" height="15" fill="rgb(223,82,32)" fg:x="15" fg:w="5"/><text x="1.4405%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="1.1905%" y="517" width="0.3968%" height="15" fill="rgb(249,219,30)" fg:x="15" fg:w="5"/><text x="1.4405%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="1.1905%" y="501" width="0.3968%" height="15" fill="rgb(233,141,21)" fg:x="15" fg:w="5"/><text x="1.4405%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="1.2698%" y="485" width="0.3175%" height="15" fill="rgb(252,87,44)" fg:x="16" fg:w="4"/><text x="1.5198%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="1.2698%" y="469" width="0.3175%" height="15" fill="rgb(229,48,33)" fg:x="16" fg:w="4"/><text x="1.5198%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="1.3492%" y="453" width="0.2381%" height="15" fill="rgb(229,23,22)" fg:x="17" fg:w="3"/><text x="1.5992%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="1.3492%" y="437" width="0.2381%" height="15" fill="rgb(244,116,16)" fg:x="17" fg:w="3"/><text x="1.5992%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.5079%" y="421" width="0.0794%" height="15" fill="rgb(247,45,10)" fg:x="19" fg:w="1"/><text x="1.7579%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.5079%" y="405" width="0.0794%" height="15" fill="rgb(228,60,29)" fg:x="19" fg:w="1"/><text x="1.7579%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.5079%" y="389" width="0.0794%" height="15" fill="rgb(205,129,15)" fg:x="19" fg:w="1"/><text x="1.7579%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.5079%" y="373" width="0.0794%" height="15" fill="rgb(206,229,4)" fg:x="19" fg:w="1"/><text x="1.7579%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.5079%" y="357" width="0.0794%" height="15" fill="rgb(249,191,30)" fg:x="19" fg:w="1"/><text x="1.7579%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.5079%" y="341" width="0.0794%" height="15" fill="rgb(250,84,54)" fg:x="19" fg:w="1"/><text x="1.7579%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.5079%" y="325" width="0.0794%" height="15" fill="rgb(207,25,53)" fg:x="19" fg:w="1"/><text x="1.7579%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.5079%" y="309" width="0.0794%" height="15" fill="rgb(235,40,8)" fg:x="19" fg:w="1"/><text x="1.7579%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.5079%" y="293" width="0.0794%" height="15" fill="rgb(226,169,33)" fg:x="19" fg:w="1"/><text x="1.7579%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="1.6667%" y="533" width="0.0794%" height="15" fill="rgb(238,110,8)" fg:x="21" fg:w="1"/><text x="1.9167%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6667%" y="517" width="0.0794%" height="15" fill="rgb(251,206,12)" fg:x="21" fg:w="1"/><text x="1.9167%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.6667%" y="501" width="0.0794%" height="15" fill="rgb(248,171,18)" fg:x="21" fg:w="1"/><text x="1.9167%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6667%" y="485" width="0.0794%" height="15" fill="rgb(213,65,46)" fg:x="21" fg:w="1"/><text x="1.9167%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.6667%" y="469" width="0.0794%" height="15" fill="rgb(211,154,15)" fg:x="21" fg:w="1"/><text x="1.9167%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.6667%" y="453" width="0.0794%" height="15" fill="rgb(217,75,43)" fg:x="21" fg:w="1"/><text x="1.9167%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6667%" y="437" width="0.0794%" height="15" fill="rgb(230,32,33)" fg:x="21" fg:w="1"/><text x="1.9167%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.6667%" y="421" width="0.0794%" height="15" fill="rgb(221,100,16)" fg:x="21" fg:w="1"/><text x="1.9167%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.6667%" y="405" width="0.0794%" height="15" fill="rgb(212,129,47)" fg:x="21" fg:w="1"/><text x="1.9167%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="1.6667%" y="389" width="0.0794%" height="15" fill="rgb(239,217,47)" fg:x="21" fg:w="1"/><text x="1.9167%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.87%)</title><rect x="1.0317%" y="613" width="0.8730%" height="15" fill="rgb(230,84,24)" fg:x="13" fg:w="11"/><text x="1.2817%" y="623.50"></text></g><g><title>engine::internal::Entities::add_persisted (11 samples, 0.87%)</title><rect x="1.0317%" y="597" width="0.8730%" height="15" fill="rgb(214,153,51)" fg:x="13" fg:w="11"/><text x="1.2817%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::from_str (9 samples, 0.71%)</title><rect x="1.1905%" y="581" width="0.7143%" height="15" fill="rgb(231,6,35)" fg:x="15" fg:w="9"/><text x="1.4405%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="1.5873%" y="565" width="0.3175%" height="15" fill="rgb(229,122,30)" fg:x="20" fg:w="4"/><text x="1.8373%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="1.5873%" y="549" width="0.3175%" height="15" fill="rgb(234,71,10)" fg:x="20" fg:w="4"/><text x="1.8373%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="1.7460%" y="533" width="0.1587%" height="15" fill="rgb(215,173,26)" fg:x="22" fg:w="2"/><text x="1.9960%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.8254%" y="517" width="0.0794%" height="15" fill="rgb(248,118,52)" fg:x="23" fg:w="1"/><text x="2.0754%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.8254%" y="501" width="0.0794%" height="15" fill="rgb(237,55,46)" fg:x="23" fg:w="1"/><text x="2.0754%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (12 samples, 0.95%)</title><rect x="1.0317%" y="629" width="0.9524%" height="15" fill="rgb(243,214,43)" fg:x="13" fg:w="12"/><text x="1.2817%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="1.9048%" y="613" width="0.0794%" height="15" fill="rgb(252,123,30)" fg:x="24" fg:w="1"/><text x="2.1548%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="1.9048%" y="597" width="0.0794%" height="15" fill="rgb(215,73,39)" fg:x="24" fg:w="1"/><text x="2.1548%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="1.9048%" y="581" width="0.0794%" height="15" fill="rgb(251,194,29)" fg:x="24" fg:w="1"/><text x="2.1548%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="1.9048%" y="565" width="0.0794%" height="15" fill="rgb(224,58,52)" fg:x="24" fg:w="1"/><text x="2.1548%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="1.9048%" y="549" width="0.0794%" height="15" fill="rgb(248,106,46)" fg:x="24" fg:w="1"/><text x="2.1548%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="1.9048%" y="533" width="0.0794%" height="15" fill="rgb(223,80,29)" fg:x="24" fg:w="1"/><text x="2.1548%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="1.9048%" y="517" width="0.0794%" height="15" fill="rgb(243,137,9)" fg:x="24" fg:w="1"/><text x="2.1548%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="1.9048%" y="501" width="0.0794%" height="15" fill="rgb(235,121,28)" fg:x="24" fg:w="1"/><text x="2.1548%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="1.9048%" y="485" width="0.0794%" height="15" fill="rgb(219,121,41)" fg:x="24" fg:w="1"/><text x="2.1548%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="1.9048%" y="469" width="0.0794%" height="15" fill="rgb(251,60,6)" fg:x="24" fg:w="1"/><text x="2.1548%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="1.9048%" y="453" width="0.0794%" height="15" fill="rgb(208,12,30)" fg:x="24" fg:w="1"/><text x="2.1548%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="1.9048%" y="437" width="0.0794%" height="15" fill="rgb(207,176,36)" fg:x="24" fg:w="1"/><text x="2.1548%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="1.9048%" y="421" width="0.0794%" height="15" fill="rgb(211,188,29)" fg:x="24" fg:w="1"/><text x="2.1548%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="1.9048%" y="405" width="0.0794%" height="15" fill="rgb(220,184,37)" fg:x="24" fg:w="1"/><text x="2.1548%" y="415.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="1.9841%" y="629" width="0.0794%" height="15" fill="rgb(239,87,37)" fg:x="25" fg:w="1"/><text x="2.2341%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9841%" y="613" width="0.0794%" height="15" fill="rgb(232,113,44)" fg:x="25" fg:w="1"/><text x="2.2341%" y="623.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="2.0635%" y="629" width="0.0794%" height="15" fill="rgb(246,25,39)" fg:x="26" fg:w="1"/><text x="2.3135%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="2.0635%" y="613" width="0.0794%" height="15" fill="rgb(247,30,13)" fg:x="26" fg:w="1"/><text x="2.3135%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3016%" y="597" width="0.0794%" height="15" fill="rgb(230,176,35)" fg:x="29" fg:w="1"/><text x="2.5516%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.3810%" y="597" width="0.0794%" height="15" fill="rgb(222,23,18)" fg:x="30" fg:w="1"/><text x="2.6310%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.3810%" y="581" width="0.0794%" height="15" fill="rgb(234,86,8)" fg:x="30" fg:w="1"/><text x="2.6310%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.3810%" y="565" width="0.0794%" height="15" fill="rgb(206,218,47)" fg:x="30" fg:w="1"/><text x="2.6310%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.3810%" y="549" width="0.0794%" height="15" fill="rgb(229,35,31)" fg:x="30" fg:w="1"/><text x="2.6310%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.3810%" y="533" width="0.0794%" height="15" fill="rgb(242,81,7)" fg:x="30" fg:w="1"/><text x="2.6310%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.3810%" y="517" width="0.0794%" height="15" fill="rgb(231,11,35)" fg:x="30" fg:w="1"/><text x="2.6310%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.3810%" y="501" width="0.0794%" height="15" fill="rgb(219,218,17)" fg:x="30" fg:w="1"/><text x="2.6310%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.3810%" y="485" width="0.0794%" height="15" fill="rgb(221,83,32)" fg:x="30" fg:w="1"/><text x="2.6310%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.3810%" y="469" width="0.0794%" height="15" fill="rgb(233,49,54)" fg:x="30" fg:w="1"/><text x="2.6310%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.3810%" y="453" width="0.0794%" height="15" fill="rgb(206,18,51)" fg:x="30" fg:w="1"/><text x="2.6310%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.3810%" y="437" width="0.0794%" height="15" fill="rgb(249,193,15)" fg:x="30" fg:w="1"/><text x="2.6310%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.3810%" y="421" width="0.0794%" height="15" fill="rgb(245,186,19)" fg:x="30" fg:w="1"/><text x="2.6310%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.3810%" y="405" width="0.0794%" height="15" fill="rgb(230,4,24)" fg:x="30" fg:w="1"/><text x="2.6310%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.3810%" y="389" width="0.0794%" height="15" fill="rgb(234,75,27)" fg:x="30" fg:w="1"/><text x="2.6310%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.3810%" y="373" width="0.0794%" height="15" fill="rgb(244,187,35)" fg:x="30" fg:w="1"/><text x="2.6310%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="2.3810%" y="357" width="0.0794%" height="15" fill="rgb(241,97,43)" fg:x="30" fg:w="1"/><text x="2.6310%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="2.3810%" y="341" width="0.0794%" height="15" fill="rgb(236,94,2)" fg:x="30" fg:w="1"/><text x="2.6310%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="2.3810%" y="325" width="0.0794%" height="15" fill="rgb(231,175,7)" fg:x="30" fg:w="1"/><text x="2.6310%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.3810%" y="309" width="0.0794%" height="15" fill="rgb(236,89,47)" fg:x="30" fg:w="1"/><text x="2.6310%" y="319.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="2.4603%" y="597" width="0.0794%" height="15" fill="rgb(213,191,37)" fg:x="31" fg:w="1"/><text x="2.7103%" y="607.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="2.4603%" y="581" width="0.0794%" height="15" fill="rgb(252,0,34)" fg:x="31" fg:w="1"/><text x="2.7103%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.4603%" y="565" width="0.0794%" height="15" fill="rgb(208,145,44)" fg:x="31" fg:w="1"/><text x="2.7103%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.4603%" y="549" width="0.0794%" height="15" fill="rgb(227,95,50)" fg:x="31" fg:w="1"/><text x="2.7103%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.4603%" y="533" width="0.0794%" height="15" fill="rgb(222,136,24)" fg:x="31" fg:w="1"/><text x="2.7103%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="2.4603%" y="517" width="0.0794%" height="15" fill="rgb(218,105,10)" fg:x="31" fg:w="1"/><text x="2.7103%" y="527.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="2.6984%" y="565" width="0.0794%" height="15" fill="rgb(216,65,28)" fg:x="34" fg:w="1"/><text x="2.9484%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.6984%" y="549" width="0.0794%" height="15" fill="rgb(229,6,28)" fg:x="34" fg:w="1"/><text x="2.9484%" y="559.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="2.5397%" y="581" width="0.3175%" height="15" fill="rgb(222,160,42)" fg:x="32" fg:w="4"/><text x="2.7897%" y="591.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="2.7778%" y="565" width="0.0794%" height="15" fill="rgb(235,83,49)" fg:x="35" fg:w="1"/><text x="3.0278%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (17 samples, 1.35%)</title><rect x="2.1429%" y="629" width="1.3492%" height="15" fill="rgb(236,86,36)" fg:x="27" fg:w="17"/><text x="2.3929%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (16 samples, 1.27%)</title><rect x="2.2222%" y="613" width="1.2698%" height="15" fill="rgb(236,19,41)" fg:x="28" fg:w="16"/><text x="2.4722%" y="623.50"></text></g><g><title>libloading::os::unix::Library::open (12 samples, 0.95%)</title><rect x="2.5397%" y="597" width="0.9524%" height="15" fill="rgb(217,71,31)" fg:x="32" fg:w="12"/><text x="2.7897%" y="607.50"></text></g><g><title>dlopen (8 samples, 0.63%)</title><rect x="2.8571%" y="581" width="0.6349%" height="15" fill="rgb(236,209,25)" fg:x="36" fg:w="8"/><text x="3.1071%" y="591.50"></text></g><g><title>_dl_catch_error (8 samples, 0.63%)</title><rect x="2.8571%" y="565" width="0.6349%" height="15" fill="rgb(247,104,21)" fg:x="36" fg:w="8"/><text x="3.1071%" y="575.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.63%)</title><rect x="2.8571%" y="549" width="0.6349%" height="15" fill="rgb(243,80,38)" fg:x="36" fg:w="8"/><text x="3.1071%" y="559.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.63%)</title><rect x="2.8571%" y="533" width="0.6349%" height="15" fill="rgb(232,109,38)" fg:x="36" fg:w="8"/><text x="3.1071%" y="543.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.63%)</title><rect x="2.8571%" y="517" width="0.6349%" height="15" fill="rgb(212,177,53)" fg:x="36" fg:w="8"/><text x="3.1071%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.4921%" y="613" width="0.0794%" height="15" fill="rgb(227,30,34)" fg:x="44" fg:w="1"/><text x="3.7421%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.4921%" y="597" width="0.0794%" height="15" fill="rgb(205,175,25)" fg:x="44" fg:w="1"/><text x="3.7421%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.4921%" y="581" width="0.0794%" height="15" fill="rgb(249,39,54)" fg:x="44" fg:w="1"/><text x="3.7421%" y="591.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (34 samples, 2.70%)</title><rect x="0.9524%" y="661" width="2.6984%" height="15" fill="rgb(215,54,37)" fg:x="12" fg:w="34"/><text x="1.2024%" y="671.50">&lt;e..</text></g><g><title>engine::session::Session::new (33 samples, 2.62%)</title><rect x="1.0317%" y="645" width="2.6190%" height="15" fill="rgb(205,60,46)" fg:x="13" fg:w="33"/><text x="1.2817%" y="655.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="3.4921%" y="629" width="0.1587%" height="15" fill="rgb(238,89,29)" fg:x="44" fg:w="2"/><text x="3.7421%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="3.5714%" y="613" width="0.0794%" height="15" fill="rgb(212,48,10)" fg:x="45" fg:w="1"/><text x="3.8214%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.5714%" y="597" width="0.0794%" height="15" fill="rgb(237,186,28)" fg:x="45" fg:w="1"/><text x="3.8214%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="3.5714%" y="581" width="0.0794%" height="15" fill="rgb(237,204,4)" fg:x="45" fg:w="1"/><text x="3.8214%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="3.6508%" y="645" width="0.0794%" height="15" fill="rgb(237,15,47)" fg:x="46" fg:w="1"/><text x="3.9008%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="3.6508%" y="629" width="0.0794%" height="15" fill="rgb(244,110,25)" fg:x="46" fg:w="1"/><text x="3.9008%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.6508%" y="613" width="0.0794%" height="15" fill="rgb(241,12,16)" fg:x="46" fg:w="1"/><text x="3.9008%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.6508%" y="597" width="0.0794%" height="15" fill="rgb(235,25,9)" fg:x="46" fg:w="1"/><text x="3.9008%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6508%" y="581" width="0.0794%" height="15" fill="rgb(245,159,19)" fg:x="46" fg:w="1"/><text x="3.9008%" y="591.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="3.7302%" y="613" width="0.0794%" height="15" fill="rgb(236,63,32)" fg:x="47" fg:w="1"/><text x="3.9802%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="3.7302%" y="597" width="0.0794%" height="15" fill="rgb(235,32,52)" fg:x="47" fg:w="1"/><text x="3.9802%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="3.7302%" y="581" width="0.0794%" height="15" fill="rgb(209,176,21)" fg:x="47" fg:w="1"/><text x="3.9802%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.7302%" y="565" width="0.0794%" height="15" fill="rgb(205,90,42)" fg:x="47" fg:w="1"/><text x="3.9802%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.7302%" y="549" width="0.0794%" height="15" fill="rgb(213,132,16)" fg:x="47" fg:w="1"/><text x="3.9802%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.7302%" y="533" width="0.0794%" height="15" fill="rgb(232,11,22)" fg:x="47" fg:w="1"/><text x="3.9802%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.7302%" y="517" width="0.0794%" height="15" fill="rgb(248,167,41)" fg:x="47" fg:w="1"/><text x="3.9802%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.7302%" y="501" width="0.0794%" height="15" fill="rgb(209,127,6)" fg:x="47" fg:w="1"/><text x="3.9802%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.7302%" y="485" width="0.0794%" height="15" fill="rgb(246,210,34)" fg:x="47" fg:w="1"/><text x="3.9802%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.7302%" y="469" width="0.0794%" height="15" fill="rgb(238,165,13)" fg:x="47" fg:w="1"/><text x="3.9802%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.7302%" y="453" width="0.0794%" height="15" fill="rgb(233,98,15)" fg:x="47" fg:w="1"/><text x="3.9802%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.7302%" y="437" width="0.0794%" height="15" fill="rgb(215,215,51)" fg:x="47" fg:w="1"/><text x="3.9802%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.7302%" y="421" width="0.0794%" height="15" fill="rgb(217,161,25)" fg:x="47" fg:w="1"/><text x="3.9802%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.7302%" y="405" width="0.0794%" height="15" fill="rgb(217,167,48)" fg:x="47" fg:w="1"/><text x="3.9802%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.7302%" y="389" width="0.0794%" height="15" fill="rgb(205,163,34)" fg:x="47" fg:w="1"/><text x="3.9802%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.7302%" y="373" width="0.0794%" height="15" fill="rgb(241,197,31)" fg:x="47" fg:w="1"/><text x="3.9802%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.7302%" y="357" width="0.0794%" height="15" fill="rgb(225,123,11)" fg:x="47" fg:w="1"/><text x="3.9802%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="3.8095%" y="597" width="0.0794%" height="15" fill="rgb(217,4,20)" fg:x="48" fg:w="1"/><text x="4.0595%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.8095%" y="581" width="0.0794%" height="15" fill="rgb(215,55,9)" fg:x="48" fg:w="1"/><text x="4.0595%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.8095%" y="565" width="0.0794%" height="15" fill="rgb(218,165,5)" fg:x="48" fg:w="1"/><text x="4.0595%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="3.8889%" y="565" width="0.1587%" height="15" fill="rgb(222,175,15)" fg:x="49" fg:w="2"/><text x="4.1389%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="3.8889%" y="549" width="0.1587%" height="15" fill="rgb(223,85,34)" fg:x="49" fg:w="2"/><text x="4.1389%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="3.9683%" y="533" width="0.0794%" height="15" fill="rgb(234,228,29)" fg:x="50" fg:w="1"/><text x="4.2183%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="3.9683%" y="517" width="0.0794%" height="15" fill="rgb(239,7,28)" fg:x="50" fg:w="1"/><text x="4.2183%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.0476%" y="549" width="0.0794%" height="15" fill="rgb(252,222,53)" fg:x="51" fg:w="1"/><text x="4.2976%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.0476%" y="533" width="0.0794%" height="15" fill="rgb(232,146,44)" fg:x="51" fg:w="1"/><text x="4.2976%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.1270%" y="549" width="0.2381%" height="15" fill="rgb(243,223,53)" fg:x="52" fg:w="3"/><text x="4.3770%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="4.1270%" y="533" width="0.2381%" height="15" fill="rgb(219,128,25)" fg:x="52" fg:w="3"/><text x="4.3770%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.2063%" y="517" width="0.1587%" height="15" fill="rgb(223,56,32)" fg:x="53" fg:w="2"/><text x="4.4563%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.2063%" y="501" width="0.1587%" height="15" fill="rgb(237,41,3)" fg:x="53" fg:w="2"/><text x="4.4563%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.3651%" y="533" width="0.0794%" height="15" fill="rgb(235,138,9)" fg:x="55" fg:w="1"/><text x="4.6151%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.4444%" y="533" width="0.0794%" height="15" fill="rgb(214,131,10)" fg:x="56" fg:w="1"/><text x="4.6944%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.4444%" y="517" width="0.0794%" height="15" fill="rgb(229,89,7)" fg:x="56" fg:w="1"/><text x="4.6944%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.4444%" y="501" width="0.0794%" height="15" fill="rgb(240,24,42)" fg:x="56" fg:w="1"/><text x="4.6944%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.4444%" y="485" width="0.0794%" height="15" fill="rgb(243,188,54)" fg:x="56" fg:w="1"/><text x="4.6944%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.4444%" y="469" width="0.0794%" height="15" fill="rgb(246,92,22)" fg:x="56" fg:w="1"/><text x="4.6944%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.5238%" y="533" width="0.0794%" height="15" fill="rgb(211,176,51)" fg:x="57" fg:w="1"/><text x="4.7738%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.5238%" y="517" width="0.0794%" height="15" fill="rgb(246,207,34)" fg:x="57" fg:w="1"/><text x="4.7738%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.5238%" y="501" width="0.0794%" height="15" fill="rgb(239,95,2)" fg:x="57" fg:w="1"/><text x="4.7738%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.5238%" y="485" width="0.0794%" height="15" fill="rgb(211,124,25)" fg:x="57" fg:w="1"/><text x="4.7738%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.6825%" y="517" width="0.0794%" height="15" fill="rgb(231,221,19)" fg:x="59" fg:w="1"/><text x="4.9325%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.6825%" y="501" width="0.0794%" height="15" fill="rgb(239,183,19)" fg:x="59" fg:w="1"/><text x="4.9325%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.6825%" y="485" width="0.0794%" height="15" fill="rgb(221,130,29)" fg:x="59" fg:w="1"/><text x="4.9325%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.6825%" y="469" width="0.0794%" height="15" fill="rgb(206,130,36)" fg:x="59" fg:w="1"/><text x="4.9325%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.8413%" y="501" width="0.0794%" height="15" fill="rgb(215,70,19)" fg:x="61" fg:w="1"/><text x="5.0913%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.9206%" y="485" width="0.0794%" height="15" fill="rgb(244,16,43)" fg:x="62" fg:w="1"/><text x="5.1706%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="4.6032%" y="533" width="0.4762%" height="15" fill="rgb(222,115,32)" fg:x="58" fg:w="6"/><text x="4.8532%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="4.7619%" y="517" width="0.3175%" height="15" fill="rgb(247,48,25)" fg:x="60" fg:w="4"/><text x="5.0119%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="4.9206%" y="501" width="0.1587%" height="15" fill="rgb(226,180,51)" fg:x="62" fg:w="2"/><text x="5.1706%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.0000%" y="485" width="0.0794%" height="15" fill="rgb(217,142,42)" fg:x="63" fg:w="1"/><text x="5.2500%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.79%)</title><rect x="4.3651%" y="549" width="0.7937%" height="15" fill="rgb(220,178,3)" fg:x="55" fg:w="10"/><text x="4.6151%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.0794%" y="533" width="0.0794%" height="15" fill="rgb(217,221,4)" fg:x="64" fg:w="1"/><text x="5.3294%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.35%)</title><rect x="3.8889%" y="581" width="1.3492%" height="15" fill="rgb(237,63,43)" fg:x="49" fg:w="17"/><text x="4.1389%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="4.0476%" y="565" width="1.1905%" height="15" fill="rgb(220,57,8)" fg:x="51" fg:w="15"/><text x="4.2976%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.1587%" y="549" width="0.0794%" height="15" fill="rgb(254,186,27)" fg:x="65" fg:w="1"/><text x="5.4087%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.2381%" y="549" width="0.0794%" height="15" fill="rgb(251,57,28)" fg:x="66" fg:w="1"/><text x="5.4881%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.3175%" y="549" width="0.0794%" height="15" fill="rgb(215,228,0)" fg:x="67" fg:w="1"/><text x="5.5675%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.3175%" y="533" width="0.0794%" height="15" fill="rgb(237,218,39)" fg:x="67" fg:w="1"/><text x="5.5675%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="5.4762%" y="533" width="0.1587%" height="15" fill="rgb(207,2,54)" fg:x="69" fg:w="2"/><text x="5.7262%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="5.2381%" y="581" width="0.6349%" height="15" fill="rgb(232,76,50)" fg:x="66" fg:w="8"/><text x="5.4881%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.63%)</title><rect x="5.2381%" y="565" width="0.6349%" height="15" fill="rgb(211,85,31)" fg:x="66" fg:w="8"/><text x="5.4881%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="5.3968%" y="549" width="0.4762%" height="15" fill="rgb(223,210,27)" fg:x="68" fg:w="6"/><text x="5.6468%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="5.6349%" y="533" width="0.2381%" height="15" fill="rgb(254,36,8)" fg:x="71" fg:w="3"/><text x="5.8849%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="5.6349%" y="517" width="0.2381%" height="15" fill="rgb(213,4,25)" fg:x="71" fg:w="3"/><text x="5.8849%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="5.7143%" y="501" width="0.1587%" height="15" fill="rgb(224,2,39)" fg:x="72" fg:w="2"/><text x="5.9643%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.7937%" y="485" width="0.0794%" height="15" fill="rgb(208,8,39)" fg:x="73" fg:w="1"/><text x="6.0437%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="5.8730%" y="565" width="0.0794%" height="15" fill="rgb(216,226,3)" fg:x="74" fg:w="1"/><text x="6.1230%" y="575.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="5.8730%" y="549" width="0.0794%" height="15" fill="rgb(249,139,31)" fg:x="74" fg:w="1"/><text x="6.1230%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.8730%" y="533" width="0.0794%" height="15" fill="rgb(242,170,35)" fg:x="74" fg:w="1"/><text x="6.1230%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="6.0317%" y="533" width="0.0794%" height="15" fill="rgb(238,14,9)" fg:x="76" fg:w="1"/><text x="6.2817%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="6.0317%" y="517" width="0.0794%" height="15" fill="rgb(251,81,46)" fg:x="76" fg:w="1"/><text x="6.2817%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.0317%" y="501" width="0.0794%" height="15" fill="rgb(230,23,4)" fg:x="76" fg:w="1"/><text x="6.2817%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.0317%" y="485" width="0.0794%" height="15" fill="rgb(211,85,25)" fg:x="76" fg:w="1"/><text x="6.2817%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="6.0317%" y="469" width="0.0794%" height="15" fill="rgb(252,23,31)" fg:x="76" fg:w="1"/><text x="6.2817%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="6.1905%" y="453" width="0.1587%" height="15" fill="rgb(234,163,38)" fg:x="78" fg:w="2"/><text x="6.4405%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.2698%" y="437" width="0.0794%" height="15" fill="rgb(210,190,50)" fg:x="79" fg:w="1"/><text x="6.5198%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="6.4286%" y="405" width="0.0794%" height="15" fill="rgb(228,158,3)" fg:x="81" fg:w="1"/><text x="6.6786%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="6.1905%" y="469" width="0.3968%" height="15" fill="rgb(216,130,0)" fg:x="78" fg:w="5"/><text x="6.4405%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="6.3492%" y="453" width="0.2381%" height="15" fill="rgb(224,184,10)" fg:x="80" fg:w="3"/><text x="6.5992%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="6.3492%" y="437" width="0.2381%" height="15" fill="rgb(214,202,18)" fg:x="80" fg:w="3"/><text x="6.5992%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="6.4286%" y="421" width="0.1587%" height="15" fill="rgb(213,229,54)" fg:x="81" fg:w="2"/><text x="6.6786%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="6.5079%" y="405" width="0.0794%" height="15" fill="rgb(246,120,0)" fg:x="82" fg:w="1"/><text x="6.7579%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="6.5079%" y="389" width="0.0794%" height="15" fill="rgb(237,6,15)" fg:x="82" fg:w="1"/><text x="6.7579%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.5079%" y="373" width="0.0794%" height="15" fill="rgb(252,156,15)" fg:x="82" fg:w="1"/><text x="6.7579%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="6.1111%" y="517" width="0.5556%" height="15" fill="rgb(249,78,18)" fg:x="77" fg:w="7"/><text x="6.3611%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="6.1111%" y="501" width="0.5556%" height="15" fill="rgb(230,223,44)" fg:x="77" fg:w="7"/><text x="6.3611%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="6.1905%" y="485" width="0.4762%" height="15" fill="rgb(230,222,32)" fg:x="78" fg:w="6"/><text x="6.4405%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.5873%" y="469" width="0.0794%" height="15" fill="rgb(247,54,6)" fg:x="83" fg:w="1"/><text x="6.8373%" y="479.50"></text></g><g><title>engine::session::Session::flush (38 samples, 3.02%)</title><rect x="3.7302%" y="645" width="3.0159%" height="15" fill="rgb(247,115,45)" fg:x="47" fg:w="38"/><text x="3.9802%" y="655.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (38 samples, 3.02%)</title><rect x="3.7302%" y="629" width="3.0159%" height="15" fill="rgb(213,203,37)" fg:x="47" fg:w="38"/><text x="3.9802%" y="639.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (37 samples, 2.94%)</title><rect x="3.8095%" y="613" width="2.9365%" height="15" fill="rgb(248,188,18)" fg:x="48" fg:w="37"/><text x="4.0595%" y="623.50">en..</text></g><g><title>engine::session::SavesEntities::check_for_changes (36 samples, 2.86%)</title><rect x="3.8889%" y="597" width="2.8571%" height="15" fill="rgb(206,80,8)" fg:x="49" fg:w="36"/><text x="4.1389%" y="607.50">en..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.87%)</title><rect x="5.8730%" y="581" width="0.8730%" height="15" fill="rgb(245,217,31)" fg:x="74" fg:w="11"/><text x="6.1230%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.79%)</title><rect x="5.9524%" y="565" width="0.7937%" height="15" fill="rgb(220,193,15)" fg:x="75" fg:w="10"/><text x="6.2024%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.79%)</title><rect x="5.9524%" y="549" width="0.7937%" height="15" fill="rgb(226,7,19)" fg:x="75" fg:w="10"/><text x="6.2024%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.63%)</title><rect x="6.1111%" y="533" width="0.6349%" height="15" fill="rgb(222,145,31)" fg:x="77" fg:w="8"/><text x="6.3611%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.6667%" y="517" width="0.0794%" height="15" fill="rgb(241,193,36)" fg:x="84" fg:w="1"/><text x="6.9167%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.6667%" y="501" width="0.0794%" height="15" fill="rgb(225,123,33)" fg:x="84" fg:w="1"/><text x="6.9167%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="6.6667%" y="485" width="0.0794%" height="15" fill="rgb(246,136,38)" fg:x="84" fg:w="1"/><text x="6.9167%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.8254%" y="501" width="0.0794%" height="15" fill="rgb(243,56,24)" fg:x="86" fg:w="1"/><text x="7.0754%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.8254%" y="485" width="0.0794%" height="15" fill="rgb(215,147,2)" fg:x="86" fg:w="1"/><text x="7.0754%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="6.8254%" y="581" width="0.1587%" height="15" fill="rgb(209,155,27)" fg:x="86" fg:w="2"/><text x="7.0754%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="6.8254%" y="565" width="0.1587%" height="15" fill="rgb(222,177,11)" fg:x="86" fg:w="2"/><text x="7.0754%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="6.8254%" y="549" width="0.1587%" height="15" fill="rgb(212,227,15)" fg:x="86" fg:w="2"/><text x="7.0754%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="6.8254%" y="533" width="0.1587%" height="15" fill="rgb(214,138,20)" fg:x="86" fg:w="2"/><text x="7.0754%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="6.8254%" y="517" width="0.1587%" height="15" fill="rgb(221,170,31)" fg:x="86" fg:w="2"/><text x="7.0754%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="6.9048%" y="501" width="0.0794%" height="15" fill="rgb(253,207,5)" fg:x="87" fg:w="1"/><text x="7.1548%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.9048%" y="485" width="0.0794%" height="15" fill="rgb(212,64,37)" fg:x="87" fg:w="1"/><text x="7.1548%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="6.9048%" y="469" width="0.0794%" height="15" fill="rgb(208,113,51)" fg:x="87" fg:w="1"/><text x="7.1548%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="6.9048%" y="453" width="0.0794%" height="15" fill="rgb(237,15,5)" fg:x="87" fg:w="1"/><text x="7.1548%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="6.9048%" y="437" width="0.0794%" height="15" fill="rgb(238,33,18)" fg:x="87" fg:w="1"/><text x="7.1548%" y="447.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="6.9048%" y="421" width="0.0794%" height="15" fill="rgb(253,206,50)" fg:x="87" fg:w="1"/><text x="7.1548%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="6.8254%" y="629" width="0.2381%" height="15" fill="rgb(242,158,43)" fg:x="86" fg:w="3"/><text x="7.0754%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="6.8254%" y="613" width="0.2381%" height="15" fill="rgb(213,125,27)" fg:x="86" fg:w="3"/><text x="7.0754%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="6.8254%" y="597" width="0.2381%" height="15" fill="rgb(233,161,31)" fg:x="86" fg:w="3"/><text x="7.0754%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="6.9841%" y="581" width="0.0794%" height="15" fill="rgb(218,135,6)" fg:x="88" fg:w="1"/><text x="7.2341%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="6.9841%" y="565" width="0.0794%" height="15" fill="rgb(222,73,53)" fg:x="88" fg:w="1"/><text x="7.2341%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="6.9841%" y="549" width="0.0794%" height="15" fill="rgb(229,66,53)" fg:x="88" fg:w="1"/><text x="7.2341%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="6.9841%" y="533" width="0.0794%" height="15" fill="rgb(208,128,19)" fg:x="88" fg:w="1"/><text x="7.2341%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="6.9841%" y="517" width="0.0794%" height="15" fill="rgb(235,70,27)" fg:x="88" fg:w="1"/><text x="7.2341%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.9841%" y="501" width="0.0794%" height="15" fill="rgb(241,130,30)" fg:x="88" fg:w="1"/><text x="7.2341%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="7.0635%" y="533" width="0.0794%" height="15" fill="rgb(222,57,48)" fg:x="89" fg:w="1"/><text x="7.3135%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="7.0635%" y="517" width="0.0794%" height="15" fill="rgb(225,204,29)" fg:x="89" fg:w="1"/><text x="7.3135%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="7.0635%" y="613" width="0.1587%" height="15" fill="rgb(240,196,35)" fg:x="89" fg:w="2"/><text x="7.3135%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="7.0635%" y="597" width="0.1587%" height="15" fill="rgb(215,150,16)" fg:x="89" fg:w="2"/><text x="7.3135%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="7.0635%" y="581" width="0.1587%" height="15" fill="rgb(209,170,13)" fg:x="89" fg:w="2"/><text x="7.3135%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="7.0635%" y="565" width="0.1587%" height="15" fill="rgb(235,75,31)" fg:x="89" fg:w="2"/><text x="7.3135%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="7.0635%" y="549" width="0.1587%" height="15" fill="rgb(252,1,47)" fg:x="89" fg:w="2"/><text x="7.3135%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.1429%" y="533" width="0.0794%" height="15" fill="rgb(241,2,36)" fg:x="90" fg:w="1"/><text x="7.3929%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.1429%" y="517" width="0.0794%" height="15" fill="rgb(236,191,4)" fg:x="90" fg:w="1"/><text x="7.3929%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.1429%" y="501" width="0.0794%" height="15" fill="rgb(212,65,35)" fg:x="90" fg:w="1"/><text x="7.3929%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.1429%" y="485" width="0.0794%" height="15" fill="rgb(209,49,33)" fg:x="90" fg:w="1"/><text x="7.3929%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="7.1429%" y="469" width="0.0794%" height="15" fill="rgb(208,36,46)" fg:x="90" fg:w="1"/><text x="7.3929%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.1429%" y="453" width="0.0794%" height="15" fill="rgb(210,125,2)" fg:x="90" fg:w="1"/><text x="7.3929%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.1429%" y="437" width="0.0794%" height="15" fill="rgb(225,62,6)" fg:x="90" fg:w="1"/><text x="7.3929%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.1429%" y="421" width="0.0794%" height="15" fill="rgb(210,54,27)" fg:x="90" fg:w="1"/><text x="7.3929%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.1429%" y="405" width="0.0794%" height="15" fill="rgb(249,189,52)" fg:x="90" fg:w="1"/><text x="7.3929%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.1429%" y="389" width="0.0794%" height="15" fill="rgb(225,134,40)" fg:x="90" fg:w="1"/><text x="7.3929%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="7.1429%" y="373" width="0.0794%" height="15" fill="rgb(206,13,37)" fg:x="90" fg:w="1"/><text x="7.3929%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.1429%" y="357" width="0.0794%" height="15" fill="rgb(232,114,28)" fg:x="90" fg:w="1"/><text x="7.3929%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="6.7460%" y="645" width="0.5556%" height="15" fill="rgb(253,215,8)" fg:x="85" fg:w="7"/><text x="6.9960%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="7.0635%" y="629" width="0.2381%" height="15" fill="rgb(254,64,19)" fg:x="89" fg:w="3"/><text x="7.3135%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="7.2222%" y="613" width="0.0794%" height="15" fill="rgb(242,18,46)" fg:x="91" fg:w="1"/><text x="7.4722%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="7.2222%" y="597" width="0.0794%" height="15" fill="rgb(239,192,30)" fg:x="91" fg:w="1"/><text x="7.4722%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="7.2222%" y="581" width="0.0794%" height="15" fill="rgb(232,73,14)" fg:x="91" fg:w="1"/><text x="7.4722%" y="591.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="7.2222%" y="565" width="0.0794%" height="15" fill="rgb(225,51,9)" fg:x="91" fg:w="1"/><text x="7.4722%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="7.3016%" y="613" width="0.0794%" height="15" fill="rgb(242,217,54)" fg:x="92" fg:w="1"/><text x="7.5516%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="7.3016%" y="597" width="0.0794%" height="15" fill="rgb(216,93,3)" fg:x="92" fg:w="1"/><text x="7.5516%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="7.3016%" y="581" width="0.0794%" height="15" fill="rgb(230,119,33)" fg:x="92" fg:w="1"/><text x="7.5516%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="7.3016%" y="565" width="0.0794%" height="15" fill="rgb(238,170,27)" fg:x="92" fg:w="1"/><text x="7.5516%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.3016%" y="549" width="0.0794%" height="15" fill="rgb(229,8,2)" fg:x="92" fg:w="1"/><text x="7.5516%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.3016%" y="533" width="0.0794%" height="15" fill="rgb(205,214,42)" fg:x="92" fg:w="1"/><text x="7.5516%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="7.3016%" y="517" width="0.0794%" height="15" fill="rgb(245,113,1)" fg:x="92" fg:w="1"/><text x="7.5516%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="7.3016%" y="501" width="0.0794%" height="15" fill="rgb(252,50,2)" fg:x="92" fg:w="1"/><text x="7.5516%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.3016%" y="485" width="0.0794%" height="15" fill="rgb(225,122,24)" fg:x="92" fg:w="1"/><text x="7.5516%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.3016%" y="469" width="0.0794%" height="15" fill="rgb(234,129,31)" fg:x="92" fg:w="1"/><text x="7.5516%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3016%" y="453" width="0.0794%" height="15" fill="rgb(219,177,4)" fg:x="92" fg:w="1"/><text x="7.5516%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3016%" y="437" width="0.0794%" height="15" fill="rgb(225,142,27)" fg:x="92" fg:w="1"/><text x="7.5516%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="7.3016%" y="421" width="0.0794%" height="15" fill="rgb(205,107,51)" fg:x="92" fg:w="1"/><text x="7.5516%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="7.3016%" y="405" width="0.0794%" height="15" fill="rgb(236,223,15)" fg:x="92" fg:w="1"/><text x="7.5516%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="7.3016%" y="389" width="0.0794%" height="15" fill="rgb(235,133,11)" fg:x="92" fg:w="1"/><text x="7.5516%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="7.3016%" y="373" width="0.0794%" height="15" fill="rgb(247,172,13)" fg:x="92" fg:w="1"/><text x="7.5516%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.3016%" y="357" width="0.0794%" height="15" fill="rgb(233,191,41)" fg:x="92" fg:w="1"/><text x="7.5516%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.3016%" y="341" width="0.0794%" height="15" fill="rgb(250,65,16)" fg:x="92" fg:w="1"/><text x="7.5516%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.3016%" y="325" width="0.0794%" height="15" fill="rgb(206,10,27)" fg:x="92" fg:w="1"/><text x="7.5516%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="7.3016%" y="309" width="0.0794%" height="15" fill="rgb(212,96,22)" fg:x="92" fg:w="1"/><text x="7.5516%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.3016%" y="293" width="0.0794%" height="15" fill="rgb(206,50,0)" fg:x="92" fg:w="1"/><text x="7.5516%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="7.3016%" y="277" width="0.0794%" height="15" fill="rgb(249,105,52)" fg:x="92" fg:w="1"/><text x="7.5516%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="7.3016%" y="261" width="0.0794%" height="15" fill="rgb(216,93,51)" fg:x="92" fg:w="1"/><text x="7.5516%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="7.3016%" y="245" width="0.0794%" height="15" fill="rgb(217,172,13)" fg:x="92" fg:w="1"/><text x="7.5516%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.3016%" y="229" width="0.0794%" height="15" fill="rgb(235,199,38)" fg:x="92" fg:w="1"/><text x="7.5516%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="7.3810%" y="533" width="0.0794%" height="15" fill="rgb(221,97,33)" fg:x="93" fg:w="1"/><text x="7.6310%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="7.3810%" y="517" width="0.0794%" height="15" fill="rgb(205,156,50)" fg:x="93" fg:w="1"/><text x="7.6310%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="7.3016%" y="645" width="0.2381%" height="15" fill="rgb(215,142,19)" fg:x="92" fg:w="3"/><text x="7.5516%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="7.3016%" y="629" width="0.2381%" height="15" fill="rgb(232,170,7)" fg:x="92" fg:w="3"/><text x="7.5516%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="7.3810%" y="613" width="0.1587%" height="15" fill="rgb(223,50,17)" fg:x="93" fg:w="2"/><text x="7.6310%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="7.3810%" y="597" width="0.1587%" height="15" fill="rgb(230,103,46)" fg:x="93" fg:w="2"/><text x="7.6310%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="7.3810%" y="581" width="0.1587%" height="15" fill="rgb(254,30,34)" fg:x="93" fg:w="2"/><text x="7.6310%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="7.3810%" y="565" width="0.1587%" height="15" fill="rgb(235,198,1)" fg:x="93" fg:w="2"/><text x="7.6310%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="7.3810%" y="549" width="0.1587%" height="15" fill="rgb(217,105,47)" fg:x="93" fg:w="2"/><text x="7.6310%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.4603%" y="533" width="0.0794%" height="15" fill="rgb(231,18,12)" fg:x="94" fg:w="1"/><text x="7.7103%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.4603%" y="517" width="0.0794%" height="15" fill="rgb(218,196,1)" fg:x="94" fg:w="1"/><text x="7.7103%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.4603%" y="501" width="0.0794%" height="15" fill="rgb(210,32,3)" fg:x="94" fg:w="1"/><text x="7.7103%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.4603%" y="485" width="0.0794%" height="15" fill="rgb(227,178,30)" fg:x="94" fg:w="1"/><text x="7.7103%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="7.5397%" y="645" width="0.0794%" height="15" fill="rgb(231,140,27)" fg:x="95" fg:w="1"/><text x="7.7897%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="7.5397%" y="629" width="0.0794%" height="15" fill="rgb(206,66,35)" fg:x="95" fg:w="1"/><text x="7.7897%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="7.5397%" y="613" width="0.0794%" height="15" fill="rgb(212,34,2)" fg:x="95" fg:w="1"/><text x="7.7897%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="7.5397%" y="597" width="0.0794%" height="15" fill="rgb(207,201,33)" fg:x="95" fg:w="1"/><text x="7.7897%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="7.5397%" y="581" width="0.0794%" height="15" fill="rgb(221,135,32)" fg:x="95" fg:w="1"/><text x="7.7897%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.5397%" y="565" width="0.0794%" height="15" fill="rgb(206,77,31)" fg:x="95" fg:w="1"/><text x="7.7897%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="7.5397%" y="549" width="0.0794%" height="15" fill="rgb(252,198,50)" fg:x="95" fg:w="1"/><text x="7.7897%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.5397%" y="533" width="0.0794%" height="15" fill="rgb(206,79,27)" fg:x="95" fg:w="1"/><text x="7.7897%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="7.5397%" y="517" width="0.0794%" height="15" fill="rgb(228,108,9)" fg:x="95" fg:w="1"/><text x="7.7897%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="7.5397%" y="501" width="0.0794%" height="15" fill="rgb(213,9,39)" fg:x="95" fg:w="1"/><text x="7.7897%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.5397%" y="485" width="0.0794%" height="15" fill="rgb(252,51,13)" fg:x="95" fg:w="1"/><text x="7.7897%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="7.5397%" y="469" width="0.0794%" height="15" fill="rgb(218,202,39)" fg:x="95" fg:w="1"/><text x="7.7897%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.5397%" y="453" width="0.0794%" height="15" fill="rgb(214,122,21)" fg:x="95" fg:w="1"/><text x="7.7897%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="7.5397%" y="437" width="0.0794%" height="15" fill="rgb(217,205,48)" fg:x="95" fg:w="1"/><text x="7.7897%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="7.5397%" y="421" width="0.0794%" height="15" fill="rgb(230,216,13)" fg:x="95" fg:w="1"/><text x="7.7897%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="7.6984%" y="629" width="0.0794%" height="15" fill="rgb(249,118,4)" fg:x="97" fg:w="1"/><text x="7.9484%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="7.6984%" y="613" width="0.0794%" height="15" fill="rgb(212,207,40)" fg:x="97" fg:w="1"/><text x="7.9484%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="7.6984%" y="597" width="0.0794%" height="15" fill="rgb(217,156,26)" fg:x="97" fg:w="1"/><text x="7.9484%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="7.6984%" y="581" width="0.0794%" height="15" fill="rgb(226,86,34)" fg:x="97" fg:w="1"/><text x="7.9484%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="7.6984%" y="565" width="0.0794%" height="15" fill="rgb(217,111,30)" fg:x="97" fg:w="1"/><text x="7.9484%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.6984%" y="549" width="0.0794%" height="15" fill="rgb(228,64,18)" fg:x="97" fg:w="1"/><text x="7.9484%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.6984%" y="533" width="0.0794%" height="15" fill="rgb(254,217,48)" fg:x="97" fg:w="1"/><text x="7.9484%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="7.6984%" y="517" width="0.0794%" height="15" fill="rgb(226,156,48)" fg:x="97" fg:w="1"/><text x="7.9484%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="7.6984%" y="501" width="0.0794%" height="15" fill="rgb(236,168,20)" fg:x="97" fg:w="1"/><text x="7.9484%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.6984%" y="485" width="0.0794%" height="15" fill="rgb(239,210,33)" fg:x="97" fg:w="1"/><text x="7.9484%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.6984%" y="469" width="0.0794%" height="15" fill="rgb(242,85,17)" fg:x="97" fg:w="1"/><text x="7.9484%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="7.6984%" y="453" width="0.0794%" height="15" fill="rgb(221,196,15)" fg:x="97" fg:w="1"/><text x="7.9484%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="7.6984%" y="437" width="0.0794%" height="15" fill="rgb(249,76,21)" fg:x="97" fg:w="1"/><text x="7.9484%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.6984%" y="421" width="0.0794%" height="15" fill="rgb(243,67,29)" fg:x="97" fg:w="1"/><text x="7.9484%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.6984%" y="405" width="0.0794%" height="15" fill="rgb(240,159,2)" fg:x="97" fg:w="1"/><text x="7.9484%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.6984%" y="389" width="0.0794%" height="15" fill="rgb(244,64,3)" fg:x="97" fg:w="1"/><text x="7.9484%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.6984%" y="373" width="0.0794%" height="15" fill="rgb(220,86,40)" fg:x="97" fg:w="1"/><text x="7.9484%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="7.6984%" y="357" width="0.0794%" height="15" fill="rgb(222,194,51)" fg:x="97" fg:w="1"/><text x="7.9484%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="7.6984%" y="341" width="0.0794%" height="15" fill="rgb(207,154,19)" fg:x="97" fg:w="1"/><text x="7.9484%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="7.6984%" y="325" width="0.0794%" height="15" fill="rgb(206,178,36)" fg:x="97" fg:w="1"/><text x="7.9484%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="7.6984%" y="309" width="0.0794%" height="15" fill="rgb(218,8,24)" fg:x="97" fg:w="1"/><text x="7.9484%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.6984%" y="293" width="0.0794%" height="15" fill="rgb(226,83,41)" fg:x="97" fg:w="1"/><text x="7.9484%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.6984%" y="277" width="0.0794%" height="15" fill="rgb(224,23,22)" fg:x="97" fg:w="1"/><text x="7.9484%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.6984%" y="261" width="0.0794%" height="15" fill="rgb(218,198,45)" fg:x="97" fg:w="1"/><text x="7.9484%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="7.6984%" y="245" width="0.0794%" height="15" fill="rgb(249,147,41)" fg:x="97" fg:w="1"/><text x="7.9484%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.6984%" y="229" width="0.0794%" height="15" fill="rgb(244,224,13)" fg:x="97" fg:w="1"/><text x="7.9484%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="7.6984%" y="213" width="0.0794%" height="15" fill="rgb(225,97,27)" fg:x="97" fg:w="1"/><text x="7.9484%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="7.6984%" y="197" width="0.0794%" height="15" fill="rgb(254,64,0)" fg:x="97" fg:w="1"/><text x="7.9484%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="7.6984%" y="181" width="0.0794%" height="15" fill="rgb(208,130,43)" fg:x="97" fg:w="1"/><text x="7.9484%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.6984%" y="165" width="0.0794%" height="15" fill="rgb(247,91,25)" fg:x="97" fg:w="1"/><text x="7.9484%" y="175.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="7.9365%" y="581" width="0.0794%" height="15" fill="rgb(215,218,42)" fg:x="100" fg:w="1"/><text x="8.1865%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="7.9365%" y="565" width="0.0794%" height="15" fill="rgb(233,9,24)" fg:x="100" fg:w="1"/><text x="8.1865%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="7.9365%" y="549" width="0.0794%" height="15" fill="rgb(252,105,38)" fg:x="100" fg:w="1"/><text x="8.1865%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="7.9365%" y="533" width="0.0794%" height="15" fill="rgb(225,40,49)" fg:x="100" fg:w="1"/><text x="8.1865%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.9365%" y="517" width="0.0794%" height="15" fill="rgb(232,196,19)" fg:x="100" fg:w="1"/><text x="8.1865%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.9365%" y="501" width="0.0794%" height="15" fill="rgb(207,35,15)" fg:x="100" fg:w="1"/><text x="8.1865%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.9365%" y="485" width="0.0794%" height="15" fill="rgb(238,68,36)" fg:x="100" fg:w="1"/><text x="8.1865%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.9365%" y="469" width="0.0794%" height="15" fill="rgb(205,158,20)" fg:x="100" fg:w="1"/><text x="8.1865%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.9365%" y="453" width="0.0794%" height="15" fill="rgb(232,32,22)" fg:x="100" fg:w="1"/><text x="8.1865%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.9365%" y="437" width="0.0794%" height="15" fill="rgb(210,169,6)" fg:x="100" fg:w="1"/><text x="8.1865%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.9365%" y="421" width="0.0794%" height="15" fill="rgb(229,28,12)" fg:x="100" fg:w="1"/><text x="8.1865%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.9365%" y="405" width="0.0794%" height="15" fill="rgb(229,78,10)" fg:x="100" fg:w="1"/><text x="8.1865%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.9365%" y="389" width="0.0794%" height="15" fill="rgb(223,139,54)" fg:x="100" fg:w="1"/><text x="8.1865%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.9365%" y="373" width="0.0794%" height="15" fill="rgb(207,110,4)" fg:x="100" fg:w="1"/><text x="8.1865%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.9365%" y="357" width="0.0794%" height="15" fill="rgb(248,30,41)" fg:x="100" fg:w="1"/><text x="8.1865%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.9365%" y="341" width="0.0794%" height="15" fill="rgb(235,54,25)" fg:x="100" fg:w="1"/><text x="8.1865%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="8.0159%" y="549" width="0.0794%" height="15" fill="rgb(213,107,41)" fg:x="101" fg:w="1"/><text x="8.2659%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="8.0159%" y="533" width="0.0794%" height="15" fill="rgb(237,102,9)" fg:x="101" fg:w="1"/><text x="8.2659%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.0159%" y="517" width="0.0794%" height="15" fill="rgb(252,137,49)" fg:x="101" fg:w="1"/><text x="8.2659%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="8.0159%" y="501" width="0.0794%" height="15" fill="rgb(233,202,33)" fg:x="101" fg:w="1"/><text x="8.2659%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.0159%" y="485" width="0.0794%" height="15" fill="rgb(223,14,51)" fg:x="101" fg:w="1"/><text x="8.2659%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.0159%" y="469" width="0.0794%" height="15" fill="rgb(248,70,23)" fg:x="101" fg:w="1"/><text x="8.2659%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="8.0159%" y="453" width="0.0794%" height="15" fill="rgb(209,207,47)" fg:x="101" fg:w="1"/><text x="8.2659%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.0159%" y="437" width="0.0794%" height="15" fill="rgb(245,124,2)" fg:x="101" fg:w="1"/><text x="8.2659%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.0159%" y="421" width="0.0794%" height="15" fill="rgb(249,208,11)" fg:x="101" fg:w="1"/><text x="8.2659%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.0159%" y="405" width="0.0794%" height="15" fill="rgb(247,112,7)" fg:x="101" fg:w="1"/><text x="8.2659%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="8.0159%" y="389" width="0.0794%" height="15" fill="rgb(209,192,31)" fg:x="101" fg:w="1"/><text x="8.2659%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.0159%" y="373" width="0.0794%" height="15" fill="rgb(236,55,19)" fg:x="101" fg:w="1"/><text x="8.2659%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="8.0159%" y="565" width="0.1587%" height="15" fill="rgb(252,89,41)" fg:x="101" fg:w="2"/><text x="8.2659%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="8.0952%" y="549" width="0.0794%" height="15" fill="rgb(220,172,14)" fg:x="102" fg:w="1"/><text x="8.3452%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="8.0952%" y="533" width="0.0794%" height="15" fill="rgb(252,65,2)" fg:x="102" fg:w="1"/><text x="8.3452%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="8.0952%" y="517" width="0.0794%" height="15" fill="rgb(250,20,8)" fg:x="102" fg:w="1"/><text x="8.3452%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="8.0952%" y="501" width="0.0794%" height="15" fill="rgb(234,149,13)" fg:x="102" fg:w="1"/><text x="8.3452%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.0952%" y="485" width="0.0794%" height="15" fill="rgb(223,219,12)" fg:x="102" fg:w="1"/><text x="8.3452%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0952%" y="469" width="0.0794%" height="15" fill="rgb(234,13,49)" fg:x="102" fg:w="1"/><text x="8.3452%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0952%" y="453" width="0.0794%" height="15" fill="rgb(214,41,25)" fg:x="102" fg:w="1"/><text x="8.3452%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0952%" y="437" width="0.0794%" height="15" fill="rgb(232,198,52)" fg:x="102" fg:w="1"/><text x="8.3452%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0952%" y="421" width="0.0794%" height="15" fill="rgb(236,111,46)" fg:x="102" fg:w="1"/><text x="8.3452%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.0952%" y="405" width="0.0794%" height="15" fill="rgb(253,30,20)" fg:x="102" fg:w="1"/><text x="8.3452%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.0952%" y="389" width="0.0794%" height="15" fill="rgb(247,141,17)" fg:x="102" fg:w="1"/><text x="8.3452%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.0952%" y="373" width="0.0794%" height="15" fill="rgb(214,195,21)" fg:x="102" fg:w="1"/><text x="8.3452%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.0952%" y="357" width="0.0794%" height="15" fill="rgb(214,98,12)" fg:x="102" fg:w="1"/><text x="8.3452%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.0952%" y="341" width="0.0794%" height="15" fill="rgb(239,4,26)" fg:x="102" fg:w="1"/><text x="8.3452%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.0952%" y="325" width="0.0794%" height="15" fill="rgb(234,210,35)" fg:x="102" fg:w="1"/><text x="8.3452%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.0952%" y="309" width="0.0794%" height="15" fill="rgb(252,178,27)" fg:x="102" fg:w="1"/><text x="8.3452%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.0952%" y="293" width="0.0794%" height="15" fill="rgb(217,50,1)" fg:x="102" fg:w="1"/><text x="8.3452%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.0952%" y="277" width="0.0794%" height="15" fill="rgb(233,137,5)" fg:x="102" fg:w="1"/><text x="8.3452%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.0952%" y="261" width="0.0794%" height="15" fill="rgb(217,227,25)" fg:x="102" fg:w="1"/><text x="8.3452%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.0952%" y="245" width="0.0794%" height="15" fill="rgb(242,89,38)" fg:x="102" fg:w="1"/><text x="8.3452%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.0952%" y="229" width="0.0794%" height="15" fill="rgb(212,190,30)" fg:x="102" fg:w="1"/><text x="8.3452%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="8.1746%" y="565" width="0.0794%" height="15" fill="rgb(222,120,8)" fg:x="103" fg:w="1"/><text x="8.4246%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="8.2540%" y="517" width="0.0794%" height="15" fill="rgb(227,181,9)" fg:x="104" fg:w="1"/><text x="8.5040%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="8.2540%" y="501" width="0.0794%" height="15" fill="rgb(222,125,29)" fg:x="104" fg:w="1"/><text x="8.5040%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.2540%" y="485" width="0.0794%" height="15" fill="rgb(215,153,31)" fg:x="104" fg:w="1"/><text x="8.5040%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.2540%" y="469" width="0.0794%" height="15" fill="rgb(228,77,30)" fg:x="104" fg:w="1"/><text x="8.5040%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.2540%" y="453" width="0.0794%" height="15" fill="rgb(226,110,9)" fg:x="104" fg:w="1"/><text x="8.5040%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2540%" y="437" width="0.0794%" height="15" fill="rgb(219,111,7)" fg:x="104" fg:w="1"/><text x="8.5040%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="8.3333%" y="469" width="0.1587%" height="15" fill="rgb(229,167,25)" fg:x="105" fg:w="2"/><text x="8.5833%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="8.3333%" y="453" width="0.1587%" height="15" fill="rgb(209,77,43)" fg:x="105" fg:w="2"/><text x="8.5833%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="8.3333%" y="437" width="0.1587%" height="15" fill="rgb(233,70,39)" fg:x="105" fg:w="2"/><text x="8.5833%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="8.3333%" y="421" width="0.1587%" height="15" fill="rgb(207,171,44)" fg:x="105" fg:w="2"/><text x="8.5833%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="8.3333%" y="405" width="0.1587%" height="15" fill="rgb(244,91,6)" fg:x="105" fg:w="2"/><text x="8.5833%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.4127%" y="389" width="0.0794%" height="15" fill="rgb(234,136,12)" fg:x="106" fg:w="1"/><text x="8.6627%" y="399.50"></text></g><g><title>plugins_core::build::Build::leads_to (7 samples, 0.56%)</title><rect x="8.0159%" y="581" width="0.5556%" height="15" fill="rgb(216,210,38)" fg:x="101" fg:w="7"/><text x="8.2659%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="8.2540%" y="565" width="0.3175%" height="15" fill="rgb(241,227,7)" fg:x="104" fg:w="4"/><text x="8.5040%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="8.2540%" y="549" width="0.3175%" height="15" fill="rgb(241,222,11)" fg:x="104" fg:w="4"/><text x="8.5040%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="8.2540%" y="533" width="0.3175%" height="15" fill="rgb(246,86,18)" fg:x="104" fg:w="4"/><text x="8.5040%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="8.3333%" y="517" width="0.2381%" height="15" fill="rgb(224,151,49)" fg:x="105" fg:w="3"/><text x="8.5833%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="8.3333%" y="501" width="0.2381%" height="15" fill="rgb(235,4,41)" fg:x="105" fg:w="3"/><text x="8.5833%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="8.3333%" y="485" width="0.2381%" height="15" fill="rgb(218,30,52)" fg:x="105" fg:w="3"/><text x="8.5833%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="8.4921%" y="469" width="0.0794%" height="15" fill="rgb(205,124,51)" fg:x="107" fg:w="1"/><text x="8.7421%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.4921%" y="453" width="0.0794%" height="15" fill="rgb(237,126,51)" fg:x="107" fg:w="1"/><text x="8.7421%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.4921%" y="437" width="0.0794%" height="15" fill="rgb(225,32,46)" fg:x="107" fg:w="1"/><text x="8.7421%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.4921%" y="421" width="0.0794%" height="15" fill="rgb(251,60,49)" fg:x="107" fg:w="1"/><text x="8.7421%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.4921%" y="405" width="0.0794%" height="15" fill="rgb(234,18,23)" fg:x="107" fg:w="1"/><text x="8.7421%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.87%)</title><rect x="7.7778%" y="629" width="0.8730%" height="15" fill="rgb(234,25,23)" fg:x="98" fg:w="11"/><text x="8.0278%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.87%)</title><rect x="7.7778%" y="613" width="0.8730%" height="15" fill="rgb(210,43,52)" fg:x="98" fg:w="11"/><text x="8.0278%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.87%)</title><rect x="7.7778%" y="597" width="0.8730%" height="15" fill="rgb(237,198,21)" fg:x="98" fg:w="11"/><text x="8.0278%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="8.5714%" y="581" width="0.0794%" height="15" fill="rgb(211,20,34)" fg:x="108" fg:w="1"/><text x="8.8214%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="8.5714%" y="565" width="0.0794%" height="15" fill="rgb(221,155,50)" fg:x="108" fg:w="1"/><text x="8.8214%" y="575.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="8.5714%" y="549" width="0.0794%" height="15" fill="rgb(213,214,53)" fg:x="108" fg:w="1"/><text x="8.8214%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="8.6508%" y="629" width="0.0794%" height="15" fill="rgb(215,229,48)" fg:x="109" fg:w="1"/><text x="8.9008%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.6508%" y="613" width="0.0794%" height="15" fill="rgb(243,88,5)" fg:x="109" fg:w="1"/><text x="8.9008%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.7302%" y="597" width="0.0794%" height="15" fill="rgb(216,199,8)" fg:x="110" fg:w="1"/><text x="8.9802%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="8.7302%" y="581" width="0.0794%" height="15" fill="rgb(241,22,4)" fg:x="110" fg:w="1"/><text x="8.9802%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="8.8095%" y="581" width="0.0794%" height="15" fill="rgb(209,190,22)" fg:x="111" fg:w="1"/><text x="9.0595%" y="591.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="8.8095%" y="565" width="0.0794%" height="15" fill="rgb(251,138,45)" fg:x="111" fg:w="1"/><text x="9.0595%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.8095%" y="549" width="0.0794%" height="15" fill="rgb(219,111,22)" fg:x="111" fg:w="1"/><text x="9.0595%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="8.8095%" y="597" width="0.1587%" height="15" fill="rgb(253,29,49)" fg:x="111" fg:w="2"/><text x="9.0595%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="8.8889%" y="581" width="0.0794%" height="15" fill="rgb(238,129,49)" fg:x="112" fg:w="1"/><text x="9.1389%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.8889%" y="565" width="0.0794%" height="15" fill="rgb(240,26,41)" fg:x="112" fg:w="1"/><text x="9.1389%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.8889%" y="549" width="0.0794%" height="15" fill="rgb(221,47,33)" fg:x="112" fg:w="1"/><text x="9.1389%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.8889%" y="533" width="0.0794%" height="15" fill="rgb(216,200,17)" fg:x="112" fg:w="1"/><text x="9.1389%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.8889%" y="517" width="0.0794%" height="15" fill="rgb(230,151,26)" fg:x="112" fg:w="1"/><text x="9.1389%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.8889%" y="501" width="0.0794%" height="15" fill="rgb(242,182,16)" fg:x="112" fg:w="1"/><text x="9.1389%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8889%" y="485" width="0.0794%" height="15" fill="rgb(236,35,53)" fg:x="112" fg:w="1"/><text x="9.1389%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8889%" y="469" width="0.0794%" height="15" fill="rgb(214,180,28)" fg:x="112" fg:w="1"/><text x="9.1389%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.8889%" y="453" width="0.0794%" height="15" fill="rgb(208,173,36)" fg:x="112" fg:w="1"/><text x="9.1389%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.8889%" y="437" width="0.0794%" height="15" fill="rgb(218,39,15)" fg:x="112" fg:w="1"/><text x="9.1389%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.8889%" y="421" width="0.0794%" height="15" fill="rgb(213,145,15)" fg:x="112" fg:w="1"/><text x="9.1389%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.8889%" y="405" width="0.0794%" height="15" fill="rgb(242,110,37)" fg:x="112" fg:w="1"/><text x="9.1389%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="8.9683%" y="597" width="0.0794%" height="15" fill="rgb(247,146,22)" fg:x="113" fg:w="1"/><text x="9.2183%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9683%" y="581" width="0.0794%" height="15" fill="rgb(215,191,7)" fg:x="113" fg:w="1"/><text x="9.2183%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9683%" y="565" width="0.0794%" height="15" fill="rgb(240,158,1)" fg:x="113" fg:w="1"/><text x="9.2183%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.9683%" y="549" width="0.0794%" height="15" fill="rgb(241,78,32)" fg:x="113" fg:w="1"/><text x="9.2183%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.9683%" y="533" width="0.0794%" height="15" fill="rgb(248,83,10)" fg:x="113" fg:w="1"/><text x="9.2183%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.9683%" y="517" width="0.0794%" height="15" fill="rgb(241,52,0)" fg:x="113" fg:w="1"/><text x="9.2183%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.9683%" y="501" width="0.0794%" height="15" fill="rgb(238,37,13)" fg:x="113" fg:w="1"/><text x="9.2183%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.9683%" y="485" width="0.0794%" height="15" fill="rgb(242,194,17)" fg:x="113" fg:w="1"/><text x="9.2183%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.9683%" y="469" width="0.0794%" height="15" fill="rgb(236,96,3)" fg:x="113" fg:w="1"/><text x="9.2183%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.9683%" y="453" width="0.0794%" height="15" fill="rgb(235,148,34)" fg:x="113" fg:w="1"/><text x="9.2183%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.9683%" y="437" width="0.0794%" height="15" fill="rgb(254,12,11)" fg:x="113" fg:w="1"/><text x="9.2183%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.9683%" y="421" width="0.0794%" height="15" fill="rgb(207,31,54)" fg:x="113" fg:w="1"/><text x="9.2183%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9683%" y="405" width="0.0794%" height="15" fill="rgb(252,14,28)" fg:x="113" fg:w="1"/><text x="9.2183%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.0476%" y="597" width="0.0794%" height="15" fill="rgb(252,108,36)" fg:x="114" fg:w="1"/><text x="9.2976%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="9.0476%" y="581" width="0.0794%" height="15" fill="rgb(214,149,7)" fg:x="114" fg:w="1"/><text x="9.2976%" y="591.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="9.1270%" y="597" width="0.0794%" height="15" fill="rgb(243,94,12)" fg:x="115" fg:w="1"/><text x="9.3770%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="9.1270%" y="581" width="0.0794%" height="15" fill="rgb(208,36,10)" fg:x="115" fg:w="1"/><text x="9.3770%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="9.1270%" y="565" width="0.0794%" height="15" fill="rgb(233,185,52)" fg:x="115" fg:w="1"/><text x="9.3770%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.1270%" y="549" width="0.0794%" height="15" fill="rgb(234,50,45)" fg:x="115" fg:w="1"/><text x="9.3770%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.1270%" y="533" width="0.0794%" height="15" fill="rgb(228,92,54)" fg:x="115" fg:w="1"/><text x="9.3770%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.1270%" y="517" width="0.0794%" height="15" fill="rgb(224,85,25)" fg:x="115" fg:w="1"/><text x="9.3770%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.3651%" y="533" width="0.0794%" height="15" fill="rgb(246,1,45)" fg:x="118" fg:w="1"/><text x="9.6151%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.3651%" y="517" width="0.0794%" height="15" fill="rgb(240,66,23)" fg:x="118" fg:w="1"/><text x="9.6151%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="9.3651%" y="549" width="0.1587%" height="15" fill="rgb(222,96,27)" fg:x="118" fg:w="2"/><text x="9.6151%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.4444%" y="533" width="0.0794%" height="15" fill="rgb(212,136,10)" fg:x="119" fg:w="1"/><text x="9.6944%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.4444%" y="517" width="0.0794%" height="15" fill="rgb(226,192,50)" fg:x="119" fg:w="1"/><text x="9.6944%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.6032%" y="533" width="0.0794%" height="15" fill="rgb(241,182,31)" fg:x="121" fg:w="1"/><text x="9.8532%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="9.6825%" y="533" width="0.3968%" height="15" fill="rgb(219,205,47)" fg:x="122" fg:w="5"/><text x="9.9325%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.8413%" y="517" width="0.2381%" height="15" fill="rgb(207,96,14)" fg:x="124" fg:w="3"/><text x="10.0913%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="9.8413%" y="501" width="0.2381%" height="15" fill="rgb(216,119,9)" fg:x="124" fg:w="3"/><text x="10.0913%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.9206%" y="485" width="0.1587%" height="15" fill="rgb(235,62,36)" fg:x="125" fg:w="2"/><text x="10.1706%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.0000%" y="469" width="0.0794%" height="15" fill="rgb(214,41,27)" fg:x="126" fg:w="1"/><text x="10.2500%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.0000%" y="453" width="0.0794%" height="15" fill="rgb(214,174,37)" fg:x="126" fg:w="1"/><text x="10.2500%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.0000%" y="437" width="0.0794%" height="15" fill="rgb(212,11,25)" fg:x="126" fg:w="1"/><text x="10.2500%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="10.0794%" y="501" width="0.1587%" height="15" fill="rgb(217,71,35)" fg:x="127" fg:w="2"/><text x="10.3294%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="10.0794%" y="485" width="0.1587%" height="15" fill="rgb(234,152,9)" fg:x="127" fg:w="2"/><text x="10.3294%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.0794%" y="469" width="0.1587%" height="15" fill="rgb(228,32,51)" fg:x="127" fg:w="2"/><text x="10.3294%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.1587%" y="453" width="0.0794%" height="15" fill="rgb(209,14,47)" fg:x="128" fg:w="1"/><text x="10.4087%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.1587%" y="437" width="0.0794%" height="15" fill="rgb(218,201,17)" fg:x="128" fg:w="1"/><text x="10.4087%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1587%" y="421" width="0.0794%" height="15" fill="rgb(218,98,15)" fg:x="128" fg:w="1"/><text x="10.4087%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="10.0794%" y="517" width="0.2381%" height="15" fill="rgb(233,202,29)" fg:x="127" fg:w="3"/><text x="10.3294%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.2381%" y="501" width="0.0794%" height="15" fill="rgb(207,196,44)" fg:x="129" fg:w="1"/><text x="10.4881%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.2381%" y="485" width="0.0794%" height="15" fill="rgb(218,63,34)" fg:x="129" fg:w="1"/><text x="10.4881%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.3175%" y="517" width="0.1587%" height="15" fill="rgb(209,10,5)" fg:x="130" fg:w="2"/><text x="10.5675%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.3968%" y="501" width="0.0794%" height="15" fill="rgb(224,36,28)" fg:x="131" fg:w="1"/><text x="10.6468%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.3968%" y="485" width="0.0794%" height="15" fill="rgb(249,178,7)" fg:x="131" fg:w="1"/><text x="10.6468%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.5556%" y="485" width="0.0794%" height="15" fill="rgb(253,163,10)" fg:x="133" fg:w="1"/><text x="10.8056%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.5556%" y="469" width="0.0794%" height="15" fill="rgb(245,67,46)" fg:x="133" fg:w="1"/><text x="10.8056%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.5556%" y="453" width="0.0794%" height="15" fill="rgb(225,14,18)" fg:x="133" fg:w="1"/><text x="10.8056%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.5556%" y="437" width="0.0794%" height="15" fill="rgb(217,41,54)" fg:x="133" fg:w="1"/><text x="10.8056%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.6349%" y="469" width="0.0794%" height="15" fill="rgb(222,111,11)" fg:x="134" fg:w="1"/><text x="10.8849%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.7143%" y="469" width="0.0794%" height="15" fill="rgb(211,85,31)" fg:x="135" fg:w="1"/><text x="10.9643%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.7143%" y="453" width="0.0794%" height="15" fill="rgb(223,29,26)" fg:x="135" fg:w="1"/><text x="10.9643%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.7143%" y="437" width="0.0794%" height="15" fill="rgb(236,124,50)" fg:x="135" fg:w="1"/><text x="10.9643%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.51%)</title><rect x="9.3651%" y="565" width="1.5079%" height="15" fill="rgb(219,148,15)" fg:x="118" fg:w="19"/><text x="9.6151%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.35%)</title><rect x="9.5238%" y="549" width="1.3492%" height="15" fill="rgb(248,159,33)" fg:x="120" fg:w="17"/><text x="9.7738%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.79%)</title><rect x="10.0794%" y="533" width="0.7937%" height="15" fill="rgb(252,65,8)" fg:x="127" fg:w="10"/><text x="10.3294%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="10.4762%" y="517" width="0.3968%" height="15" fill="rgb(236,45,7)" fg:x="132" fg:w="5"/><text x="10.7262%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="10.5556%" y="501" width="0.3175%" height="15" fill="rgb(244,3,48)" fg:x="133" fg:w="4"/><text x="10.8056%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="10.6349%" y="485" width="0.2381%" height="15" fill="rgb(224,123,53)" fg:x="134" fg:w="3"/><text x="10.8849%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.7937%" y="469" width="0.0794%" height="15" fill="rgb(223,173,15)" fg:x="136" fg:w="1"/><text x="11.0437%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.7937%" y="453" width="0.0794%" height="15" fill="rgb(254,181,5)" fg:x="136" fg:w="1"/><text x="11.0437%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.8730%" y="533" width="0.0794%" height="15" fill="rgb(243,124,33)" fg:x="137" fg:w="1"/><text x="11.1230%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.0317%" y="501" width="0.0794%" height="15" fill="rgb(253,220,11)" fg:x="139" fg:w="1"/><text x="11.2817%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0317%" y="485" width="0.0794%" height="15" fill="rgb(217,14,4)" fg:x="139" fg:w="1"/><text x="11.2817%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="11.1111%" y="485" width="0.0794%" height="15" fill="rgb(209,196,12)" fg:x="140" fg:w="1"/><text x="11.3611%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.1111%" y="469" width="0.0794%" height="15" fill="rgb(237,108,29)" fg:x="140" fg:w="1"/><text x="11.3611%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.1111%" y="453" width="0.0794%" height="15" fill="rgb(216,173,20)" fg:x="140" fg:w="1"/><text x="11.3611%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.1905%" y="469" width="0.1587%" height="15" fill="rgb(245,27,6)" fg:x="141" fg:w="2"/><text x="11.4405%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="10.8730%" y="565" width="0.5556%" height="15" fill="rgb(210,181,20)" fg:x="137" fg:w="7"/><text x="11.1230%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="10.8730%" y="549" width="0.5556%" height="15" fill="rgb(235,213,1)" fg:x="137" fg:w="7"/><text x="11.1230%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="10.9524%" y="533" width="0.4762%" height="15" fill="rgb(239,68,43)" fg:x="138" fg:w="6"/><text x="11.2024%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="11.0317%" y="517" width="0.3968%" height="15" fill="rgb(254,137,43)" fg:x="139" fg:w="5"/><text x="11.2817%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="11.1111%" y="501" width="0.3175%" height="15" fill="rgb(252,170,38)" fg:x="140" fg:w="4"/><text x="11.3611%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="11.1905%" y="485" width="0.2381%" height="15" fill="rgb(234,21,42)" fg:x="141" fg:w="3"/><text x="11.4405%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.3492%" y="469" width="0.0794%" height="15" fill="rgb(216,145,40)" fg:x="143" fg:w="1"/><text x="11.5992%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.3492%" y="453" width="0.0794%" height="15" fill="rgb(251,73,9)" fg:x="143" fg:w="1"/><text x="11.5992%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.3492%" y="437" width="0.0794%" height="15" fill="rgb(242,54,6)" fg:x="143" fg:w="1"/><text x="11.5992%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="11.4286%" y="549" width="0.0794%" height="15" fill="rgb(239,70,7)" fg:x="144" fg:w="1"/><text x="11.6786%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="11.6667%" y="517" width="0.0794%" height="15" fill="rgb(216,159,35)" fg:x="147" fg:w="1"/><text x="11.9167%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="11.6667%" y="501" width="0.0794%" height="15" fill="rgb(224,50,39)" fg:x="147" fg:w="1"/><text x="11.9167%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7460%" y="485" width="0.0794%" height="15" fill="rgb(235,9,35)" fg:x="148" fg:w="1"/><text x="11.9960%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.7460%" y="517" width="0.1587%" height="15" fill="rgb(239,34,21)" fg:x="148" fg:w="2"/><text x="11.9960%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.7460%" y="501" width="0.1587%" height="15" fill="rgb(218,162,43)" fg:x="148" fg:w="2"/><text x="11.9960%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.8254%" y="485" width="0.0794%" height="15" fill="rgb(219,89,33)" fg:x="149" fg:w="1"/><text x="12.0754%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="11.9048%" y="517" width="0.0794%" height="15" fill="rgb(226,125,37)" fg:x="150" fg:w="1"/><text x="12.1548%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.9048%" y="501" width="0.0794%" height="15" fill="rgb(233,149,30)" fg:x="150" fg:w="1"/><text x="12.1548%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9048%" y="485" width="0.0794%" height="15" fill="rgb(236,8,18)" fg:x="150" fg:w="1"/><text x="12.1548%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.0635%" y="485" width="0.0794%" height="15" fill="rgb(205,176,9)" fg:x="152" fg:w="1"/><text x="12.3135%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.1429%" y="469" width="0.1587%" height="15" fill="rgb(252,103,44)" fg:x="153" fg:w="2"/><text x="12.3929%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.2222%" y="453" width="0.0794%" height="15" fill="rgb(207,68,53)" fg:x="154" fg:w="1"/><text x="12.4722%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2222%" y="437" width="0.0794%" height="15" fill="rgb(218,193,48)" fg:x="154" fg:w="1"/><text x="12.4722%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3810%" y="405" width="0.0794%" height="15" fill="rgb(234,121,52)" fg:x="156" fg:w="1"/><text x="12.6310%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3810%" y="389" width="0.0794%" height="15" fill="rgb(227,218,49)" fg:x="156" fg:w="1"/><text x="12.6310%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3810%" y="373" width="0.0794%" height="15" fill="rgb(221,8,7)" fg:x="156" fg:w="1"/><text x="12.6310%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.4603%" y="389" width="0.0794%" height="15" fill="rgb(217,151,36)" fg:x="157" fg:w="1"/><text x="12.7103%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="12.3810%" y="421" width="0.3175%" height="15" fill="rgb(213,71,5)" fg:x="156" fg:w="4"/><text x="12.6310%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="12.4603%" y="405" width="0.2381%" height="15" fill="rgb(225,145,43)" fg:x="157" fg:w="3"/><text x="12.7103%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="12.5397%" y="389" width="0.1587%" height="15" fill="rgb(235,118,19)" fg:x="158" fg:w="2"/><text x="12.7897%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.5397%" y="373" width="0.1587%" height="15" fill="rgb(214,102,36)" fg:x="158" fg:w="2"/><text x="12.7897%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="12.5397%" y="357" width="0.1587%" height="15" fill="rgb(220,56,43)" fg:x="158" fg:w="2"/><text x="12.7897%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.5397%" y="341" width="0.1587%" height="15" fill="rgb(246,136,46)" fg:x="158" fg:w="2"/><text x="12.7897%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.5397%" y="325" width="0.1587%" height="15" fill="rgb(249,99,12)" fg:x="158" fg:w="2"/><text x="12.7897%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.5397%" y="309" width="0.1587%" height="15" fill="rgb(224,31,42)" fg:x="158" fg:w="2"/><text x="12.7897%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="12.1429%" y="485" width="0.6349%" height="15" fill="rgb(208,96,21)" fg:x="153" fg:w="8"/><text x="12.3929%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="12.3016%" y="469" width="0.4762%" height="15" fill="rgb(237,229,7)" fg:x="155" fg:w="6"/><text x="12.5516%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="12.3810%" y="453" width="0.3968%" height="15" fill="rgb(210,12,6)" fg:x="156" fg:w="5"/><text x="12.6310%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="12.3810%" y="437" width="0.3968%" height="15" fill="rgb(240,9,34)" fg:x="156" fg:w="5"/><text x="12.6310%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="12.6984%" y="421" width="0.0794%" height="15" fill="rgb(211,68,37)" fg:x="160" fg:w="1"/><text x="12.9484%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="12.6984%" y="405" width="0.0794%" height="15" fill="rgb(249,138,50)" fg:x="160" fg:w="1"/><text x="12.9484%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.87%)</title><rect x="11.9841%" y="501" width="0.8730%" height="15" fill="rgb(243,185,40)" fg:x="151" fg:w="11"/><text x="12.2341%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.7778%" y="485" width="0.0794%" height="15" fill="rgb(242,92,35)" fg:x="161" fg:w="1"/><text x="13.0278%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7778%" y="469" width="0.0794%" height="15" fill="rgb(244,98,5)" fg:x="161" fg:w="1"/><text x="13.0278%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9365%" y="469" width="0.0794%" height="15" fill="rgb(228,186,29)" fg:x="163" fg:w="1"/><text x="13.1865%" y="479.50"></text></g><g><title>engine::session::Session::flush (55 samples, 4.37%)</title><rect x="8.7302%" y="629" width="4.3651%" height="15" fill="rgb(253,7,44)" fg:x="110" fg:w="55"/><text x="8.9802%" y="639.50">engin..</text></g><g><title>engine::session::Session::save_entity_changes (55 samples, 4.37%)</title><rect x="8.7302%" y="613" width="4.3651%" height="15" fill="rgb(216,11,45)" fg:x="110" fg:w="55"/><text x="8.9802%" y="623.50">engin..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (49 samples, 3.89%)</title><rect x="9.2063%" y="597" width="3.8889%" height="15" fill="rgb(205,67,3)" fg:x="116" fg:w="49"/><text x="9.4563%" y="607.50">engi..</text></g><g><title>engine::session::SavesEntities::check_for_changes (47 samples, 3.73%)</title><rect x="9.3651%" y="581" width="3.7302%" height="15" fill="rgb(250,18,3)" fg:x="118" fg:w="47"/><text x="9.6151%" y="591.50">engi..</text></g><g><title>kernel::model::any_entity_changes (21 samples, 1.67%)</title><rect x="11.4286%" y="565" width="1.6667%" height="15" fill="rgb(241,222,43)" fg:x="144" fg:w="21"/><text x="11.6786%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.59%)</title><rect x="11.5079%" y="549" width="1.5873%" height="15" fill="rgb(233,115,3)" fg:x="145" fg:w="20"/><text x="11.7579%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.59%)</title><rect x="11.5079%" y="533" width="1.5873%" height="15" fill="rgb(215,165,25)" fg:x="145" fg:w="20"/><text x="11.7579%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.11%)</title><rect x="11.9841%" y="517" width="1.1111%" height="15" fill="rgb(234,179,6)" fg:x="151" fg:w="14"/><text x="12.2341%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="12.8571%" y="501" width="0.2381%" height="15" fill="rgb(215,82,23)" fg:x="162" fg:w="3"/><text x="13.1071%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.9365%" y="485" width="0.1587%" height="15" fill="rgb(211,47,18)" fg:x="163" fg:w="2"/><text x="13.1865%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.0159%" y="469" width="0.0794%" height="15" fill="rgb(248,17,9)" fg:x="164" fg:w="1"/><text x="13.2659%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="13.0952%" y="421" width="0.0794%" height="15" fill="rgb(210,212,12)" fg:x="165" fg:w="1"/><text x="13.3452%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.0952%" y="405" width="0.0794%" height="15" fill="rgb(230,135,45)" fg:x="165" fg:w="1"/><text x="13.3452%" y="415.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="13.0952%" y="581" width="0.1587%" height="15" fill="rgb(214,121,41)" fg:x="165" fg:w="2"/><text x="13.3452%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.0952%" y="565" width="0.1587%" height="15" fill="rgb(239,165,45)" fg:x="165" fg:w="2"/><text x="13.3452%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.0952%" y="549" width="0.1587%" height="15" fill="rgb(214,85,51)" fg:x="165" fg:w="2"/><text x="13.3452%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.0952%" y="533" width="0.1587%" height="15" fill="rgb(223,90,27)" fg:x="165" fg:w="2"/><text x="13.3452%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.0952%" y="517" width="0.1587%" height="15" fill="rgb(244,84,11)" fg:x="165" fg:w="2"/><text x="13.3452%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.0952%" y="501" width="0.1587%" height="15" fill="rgb(253,41,47)" fg:x="165" fg:w="2"/><text x="13.3452%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.0952%" y="485" width="0.1587%" height="15" fill="rgb(232,39,5)" fg:x="165" fg:w="2"/><text x="13.3452%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.0952%" y="469" width="0.1587%" height="15" fill="rgb(211,93,4)" fg:x="165" fg:w="2"/><text x="13.3452%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="13.0952%" y="453" width="0.1587%" height="15" fill="rgb(219,50,49)" fg:x="165" fg:w="2"/><text x="13.3452%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.0952%" y="437" width="0.1587%" height="15" fill="rgb(232,80,19)" fg:x="165" fg:w="2"/><text x="13.3452%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1746%" y="421" width="0.0794%" height="15" fill="rgb(215,227,39)" fg:x="166" fg:w="1"/><text x="13.4246%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1746%" y="405" width="0.0794%" height="15" fill="rgb(211,99,12)" fg:x="166" fg:w="1"/><text x="13.4246%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1746%" y="389" width="0.0794%" height="15" fill="rgb(214,158,5)" fg:x="166" fg:w="1"/><text x="13.4246%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1746%" y="373" width="0.0794%" height="15" fill="rgb(242,19,53)" fg:x="166" fg:w="1"/><text x="13.4246%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="13.0952%" y="613" width="0.4762%" height="15" fill="rgb(208,18,20)" fg:x="165" fg:w="6"/><text x="13.3452%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="13.0952%" y="597" width="0.4762%" height="15" fill="rgb(250,44,11)" fg:x="165" fg:w="6"/><text x="13.3452%" y="607.50"></text></g><g><title>engine::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="13.2540%" y="581" width="0.3175%" height="15" fill="rgb(238,159,13)" fg:x="167" fg:w="4"/><text x="13.5040%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="13.2540%" y="565" width="0.3175%" height="15" fill="rgb(231,74,18)" fg:x="167" fg:w="4"/><text x="13.5040%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="13.2540%" y="549" width="0.3175%" height="15" fill="rgb(229,219,45)" fg:x="167" fg:w="4"/><text x="13.5040%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="13.2540%" y="533" width="0.3175%" height="15" fill="rgb(210,221,1)" fg:x="167" fg:w="4"/><text x="13.5040%" y="543.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="13.2540%" y="517" width="0.3175%" height="15" fill="rgb(209,60,51)" fg:x="167" fg:w="4"/><text x="13.5040%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5714%" y="517" width="0.1587%" height="15" fill="rgb(252,97,34)" fg:x="171" fg:w="2"/><text x="13.8214%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5714%" y="501" width="0.1587%" height="15" fill="rgb(243,211,37)" fg:x="171" fg:w="2"/><text x="13.8214%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5714%" y="485" width="0.1587%" height="15" fill="rgb(210,229,37)" fg:x="171" fg:w="2"/><text x="13.8214%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5714%" y="469" width="0.1587%" height="15" fill="rgb(220,208,43)" fg:x="171" fg:w="2"/><text x="13.8214%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="13.8095%" y="421" width="0.0794%" height="15" fill="rgb(218,118,50)" fg:x="174" fg:w="1"/><text x="14.0595%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="13.5714%" y="565" width="0.3968%" height="15" fill="rgb(254,169,52)" fg:x="171" fg:w="5"/><text x="13.8214%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="13.5714%" y="549" width="0.3968%" height="15" fill="rgb(221,214,37)" fg:x="171" fg:w="5"/><text x="13.8214%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="13.5714%" y="533" width="0.3968%" height="15" fill="rgb(254,186,32)" fg:x="171" fg:w="5"/><text x="13.8214%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="13.7302%" y="517" width="0.2381%" height="15" fill="rgb(215,144,43)" fg:x="173" fg:w="3"/><text x="13.9802%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="13.7302%" y="501" width="0.2381%" height="15" fill="rgb(252,21,46)" fg:x="173" fg:w="3"/><text x="13.9802%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.8095%" y="485" width="0.1587%" height="15" fill="rgb(207,166,46)" fg:x="174" fg:w="2"/><text x="14.0595%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.8095%" y="469" width="0.1587%" height="15" fill="rgb(253,37,49)" fg:x="174" fg:w="2"/><text x="14.0595%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="13.8095%" y="453" width="0.1587%" height="15" fill="rgb(222,97,20)" fg:x="174" fg:w="2"/><text x="14.0595%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.8095%" y="437" width="0.1587%" height="15" fill="rgb(244,181,26)" fg:x="174" fg:w="2"/><text x="14.0595%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.8889%" y="421" width="0.0794%" height="15" fill="rgb(241,22,29)" fg:x="175" fg:w="1"/><text x="14.1389%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.8889%" y="405" width="0.0794%" height="15" fill="rgb(206,200,43)" fg:x="175" fg:w="1"/><text x="14.1389%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.8889%" y="389" width="0.0794%" height="15" fill="rgb(226,224,43)" fg:x="175" fg:w="1"/><text x="14.1389%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0476%" y="501" width="0.0794%" height="15" fill="rgb(253,129,28)" fg:x="177" fg:w="1"/><text x="14.2976%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.0476%" y="517" width="0.1587%" height="15" fill="rgb(252,99,33)" fg:x="177" fg:w="2"/><text x="14.2976%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1270%" y="501" width="0.0794%" height="15" fill="rgb(208,123,45)" fg:x="178" fg:w="1"/><text x="14.3770%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.79%)</title><rect x="13.5714%" y="597" width="0.7937%" height="15" fill="rgb(251,106,12)" fg:x="171" fg:w="10"/><text x="13.8214%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.79%)</title><rect x="13.5714%" y="581" width="0.7937%" height="15" fill="rgb(240,209,35)" fg:x="171" fg:w="10"/><text x="13.8214%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="13.9683%" y="565" width="0.3968%" height="15" fill="rgb(214,52,50)" fg:x="176" fg:w="5"/><text x="14.2183%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="13.9683%" y="549" width="0.3968%" height="15" fill="rgb(234,119,4)" fg:x="176" fg:w="5"/><text x="14.2183%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="13.9683%" y="533" width="0.3968%" height="15" fill="rgb(228,181,36)" fg:x="176" fg:w="5"/><text x="14.2183%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.2063%" y="517" width="0.1587%" height="15" fill="rgb(213,171,42)" fg:x="179" fg:w="2"/><text x="14.4563%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.2063%" y="501" width="0.1587%" height="15" fill="rgb(239,14,41)" fg:x="179" fg:w="2"/><text x="14.4563%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.2063%" y="485" width="0.1587%" height="15" fill="rgb(239,111,46)" fg:x="179" fg:w="2"/><text x="14.4563%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.2063%" y="469" width="0.1587%" height="15" fill="rgb(214,72,7)" fg:x="179" fg:w="2"/><text x="14.4563%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.2063%" y="453" width="0.1587%" height="15" fill="rgb(221,114,1)" fg:x="179" fg:w="2"/><text x="14.4563%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.2063%" y="437" width="0.1587%" height="15" fill="rgb(213,143,14)" fg:x="179" fg:w="2"/><text x="14.4563%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.2063%" y="421" width="0.1587%" height="15" fill="rgb(220,221,53)" fg:x="179" fg:w="2"/><text x="14.4563%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.2063%" y="405" width="0.1587%" height="15" fill="rgb(236,189,27)" fg:x="179" fg:w="2"/><text x="14.4563%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="14.2063%" y="389" width="0.1587%" height="15" fill="rgb(252,139,49)" fg:x="179" fg:w="2"/><text x="14.4563%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.3651%" y="597" width="0.0794%" height="15" fill="rgb(231,158,33)" fg:x="181" fg:w="1"/><text x="14.6151%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="14.3651%" y="581" width="0.0794%" height="15" fill="rgb(207,201,15)" fg:x="181" fg:w="1"/><text x="14.6151%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.3651%" y="565" width="0.0794%" height="15" fill="rgb(218,43,48)" fg:x="181" fg:w="1"/><text x="14.6151%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3651%" y="549" width="0.0794%" height="15" fill="rgb(244,63,52)" fg:x="181" fg:w="1"/><text x="14.6151%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5238%" y="501" width="0.0794%" height="15" fill="rgb(236,60,17)" fg:x="183" fg:w="1"/><text x="14.7738%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5238%" y="485" width="0.0794%" height="15" fill="rgb(205,206,29)" fg:x="183" fg:w="1"/><text x="14.7738%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5238%" y="469" width="0.0794%" height="15" fill="rgb(205,209,35)" fg:x="183" fg:w="1"/><text x="14.7738%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5238%" y="453" width="0.0794%" height="15" fill="rgb(227,112,14)" fg:x="183" fg:w="1"/><text x="14.7738%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5238%" y="437" width="0.0794%" height="15" fill="rgb(248,151,9)" fg:x="183" fg:w="1"/><text x="14.7738%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="14.4444%" y="549" width="0.2381%" height="15" fill="rgb(247,45,40)" fg:x="182" fg:w="3"/><text x="14.6944%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.5238%" y="533" width="0.1587%" height="15" fill="rgb(232,185,16)" fg:x="183" fg:w="2"/><text x="14.7738%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.5238%" y="517" width="0.1587%" height="15" fill="rgb(215,45,44)" fg:x="183" fg:w="2"/><text x="14.7738%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.6032%" y="501" width="0.0794%" height="15" fill="rgb(206,69,32)" fg:x="184" fg:w="1"/><text x="14.8532%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7619%" y="421" width="0.0794%" height="15" fill="rgb(233,98,50)" fg:x="186" fg:w="1"/><text x="15.0119%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.7619%" y="437" width="0.1587%" height="15" fill="rgb(232,217,52)" fg:x="186" fg:w="2"/><text x="15.0119%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="14.8413%" y="421" width="0.0794%" height="15" fill="rgb(250,42,51)" fg:x="187" fg:w="1"/><text x="15.0913%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.8413%" y="405" width="0.0794%" height="15" fill="rgb(241,200,26)" fg:x="187" fg:w="1"/><text x="15.0913%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.7619%" y="501" width="0.2381%" height="15" fill="rgb(207,10,32)" fg:x="186" fg:w="3"/><text x="15.0119%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.7619%" y="485" width="0.2381%" height="15" fill="rgb(214,63,15)" fg:x="186" fg:w="3"/><text x="15.0119%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.7619%" y="469" width="0.2381%" height="15" fill="rgb(234,176,14)" fg:x="186" fg:w="3"/><text x="15.0119%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.7619%" y="453" width="0.2381%" height="15" fill="rgb(226,104,52)" fg:x="186" fg:w="3"/><text x="15.0119%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9206%" y="437" width="0.0794%" height="15" fill="rgb(211,222,1)" fg:x="188" fg:w="1"/><text x="15.1706%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.0000%" y="437" width="0.0794%" height="15" fill="rgb(237,7,3)" fg:x="189" fg:w="1"/><text x="15.2500%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="15.0000%" y="501" width="0.1587%" height="15" fill="rgb(218,143,7)" fg:x="189" fg:w="2"/><text x="15.2500%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="15.0000%" y="485" width="0.1587%" height="15" fill="rgb(208,25,22)" fg:x="189" fg:w="2"/><text x="15.2500%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.0000%" y="469" width="0.1587%" height="15" fill="rgb(228,127,16)" fg:x="189" fg:w="2"/><text x="15.2500%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.0000%" y="453" width="0.1587%" height="15" fill="rgb(237,86,27)" fg:x="189" fg:w="2"/><text x="15.2500%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.0794%" y="437" width="0.0794%" height="15" fill="rgb(207,125,19)" fg:x="190" fg:w="1"/><text x="15.3294%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.0794%" y="421" width="0.0794%" height="15" fill="rgb(243,195,0)" fg:x="190" fg:w="1"/><text x="15.3294%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.1587%" y="437" width="0.0794%" height="15" fill="rgb(230,95,18)" fg:x="191" fg:w="1"/><text x="15.4087%" y="447.50"></text></g><g><title>plugins_core::build::Build::holding (28 samples, 2.22%)</title><rect x="13.0952%" y="629" width="2.2222%" height="15" fill="rgb(232,157,21)" fg:x="165" fg:w="28"/><text x="13.3452%" y="639.50">p..</text></g><g><title>plugins_core::tools::set_container (22 samples, 1.75%)</title><rect x="13.5714%" y="613" width="1.7460%" height="15" fill="rgb(212,120,50)" fg:x="171" fg:w="22"/><text x="13.8214%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.87%)</title><rect x="14.4444%" y="597" width="0.8730%" height="15" fill="rgb(222,204,44)" fg:x="182" fg:w="11"/><text x="14.6944%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.87%)</title><rect x="14.4444%" y="581" width="0.8730%" height="15" fill="rgb(236,6,33)" fg:x="182" fg:w="11"/><text x="14.6944%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.87%)</title><rect x="14.4444%" y="565" width="0.8730%" height="15" fill="rgb(247,11,38)" fg:x="182" fg:w="11"/><text x="14.6944%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.63%)</title><rect x="14.6825%" y="549" width="0.6349%" height="15" fill="rgb(215,111,0)" fg:x="185" fg:w="8"/><text x="14.9325%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="14.7619%" y="533" width="0.5556%" height="15" fill="rgb(211,65,46)" fg:x="186" fg:w="7"/><text x="15.0119%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="14.7619%" y="517" width="0.5556%" height="15" fill="rgb(216,5,12)" fg:x="186" fg:w="7"/><text x="15.0119%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1587%" y="501" width="0.1587%" height="15" fill="rgb(226,7,2)" fg:x="191" fg:w="2"/><text x="15.4087%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1587%" y="485" width="0.1587%" height="15" fill="rgb(242,116,12)" fg:x="191" fg:w="2"/><text x="15.4087%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1587%" y="469" width="0.1587%" height="15" fill="rgb(249,209,7)" fg:x="191" fg:w="2"/><text x="15.4087%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1587%" y="453" width="0.1587%" height="15" fill="rgb(232,73,17)" fg:x="191" fg:w="2"/><text x="15.4087%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.2381%" y="437" width="0.0794%" height="15" fill="rgb(214,13,32)" fg:x="192" fg:w="1"/><text x="15.4881%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2381%" y="421" width="0.0794%" height="15" fill="rgb(221,125,10)" fg:x="192" fg:w="1"/><text x="15.4881%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2381%" y="405" width="0.0794%" height="15" fill="rgb(246,7,44)" fg:x="192" fg:w="1"/><text x="15.4881%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2381%" y="389" width="0.0794%" height="15" fill="rgb(239,18,35)" fg:x="192" fg:w="1"/><text x="15.4881%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.2381%" y="373" width="0.0794%" height="15" fill="rgb(250,222,16)" fg:x="192" fg:w="1"/><text x="15.4881%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3968%" y="469" width="0.1587%" height="15" fill="rgb(219,100,8)" fg:x="194" fg:w="2"/><text x="15.6468%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3968%" y="453" width="0.1587%" height="15" fill="rgb(240,62,13)" fg:x="194" fg:w="2"/><text x="15.6468%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.3968%" y="437" width="0.1587%" height="15" fill="rgb(253,194,2)" fg:x="194" fg:w="2"/><text x="15.6468%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="15.3968%" y="485" width="0.2381%" height="15" fill="rgb(235,58,31)" fg:x="194" fg:w="3"/><text x="15.6468%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5556%" y="469" width="0.0794%" height="15" fill="rgb(231,37,11)" fg:x="196" fg:w="1"/><text x="15.8056%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="15.3968%" y="517" width="0.3175%" height="15" fill="rgb(235,133,0)" fg:x="194" fg:w="4"/><text x="15.6468%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="15.3968%" y="501" width="0.3175%" height="15" fill="rgb(212,185,40)" fg:x="194" fg:w="4"/><text x="15.6468%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6349%" y="485" width="0.0794%" height="15" fill="rgb(216,68,42)" fg:x="197" fg:w="1"/><text x="15.8849%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="15.7143%" y="517" width="0.0794%" height="15" fill="rgb(239,81,4)" fg:x="198" fg:w="1"/><text x="15.9643%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7143%" y="501" width="0.0794%" height="15" fill="rgb(206,86,6)" fg:x="198" fg:w="1"/><text x="15.9643%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7143%" y="485" width="0.0794%" height="15" fill="rgb(249,95,27)" fg:x="198" fg:w="1"/><text x="15.9643%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7143%" y="469" width="0.0794%" height="15" fill="rgb(205,155,45)" fg:x="198" fg:w="1"/><text x="15.9643%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7143%" y="453" width="0.0794%" height="15" fill="rgb(213,55,42)" fg:x="198" fg:w="1"/><text x="15.9643%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7143%" y="437" width="0.0794%" height="15" fill="rgb(249,197,4)" fg:x="198" fg:w="1"/><text x="15.9643%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="15.3175%" y="629" width="0.5556%" height="15" fill="rgb(212,128,32)" fg:x="193" fg:w="7"/><text x="15.5675%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="15.3175%" y="613" width="0.5556%" height="15" fill="rgb(252,47,30)" fg:x="193" fg:w="7"/><text x="15.5675%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="15.3175%" y="597" width="0.5556%" height="15" fill="rgb(209,79,18)" fg:x="193" fg:w="7"/><text x="15.5675%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="15.3175%" y="581" width="0.5556%" height="15" fill="rgb(225,81,38)" fg:x="193" fg:w="7"/><text x="15.5675%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="15.3175%" y="565" width="0.5556%" height="15" fill="rgb(205,95,16)" fg:x="193" fg:w="7"/><text x="15.5675%" y="575.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="15.3175%" y="549" width="0.5556%" height="15" fill="rgb(214,30,4)" fg:x="193" fg:w="7"/><text x="15.5675%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="15.3175%" y="533" width="0.5556%" height="15" fill="rgb(232,137,22)" fg:x="193" fg:w="7"/><text x="15.5675%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.7937%" y="517" width="0.0794%" height="15" fill="rgb(232,156,19)" fg:x="199" fg:w="1"/><text x="16.0437%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7937%" y="501" width="0.0794%" height="15" fill="rgb(248,157,26)" fg:x="199" fg:w="1"/><text x="16.0437%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.7937%" y="485" width="0.0794%" height="15" fill="rgb(242,24,3)" fg:x="199" fg:w="1"/><text x="16.0437%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7937%" y="469" width="0.0794%" height="15" fill="rgb(218,195,48)" fg:x="199" fg:w="1"/><text x="16.0437%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.7937%" y="453" width="0.0794%" height="15" fill="rgb(214,193,36)" fg:x="199" fg:w="1"/><text x="16.0437%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7937%" y="437" width="0.0794%" height="15" fill="rgb(242,110,40)" fg:x="199" fg:w="1"/><text x="16.0437%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="15.7937%" y="421" width="0.0794%" height="15" fill="rgb(233,150,26)" fg:x="199" fg:w="1"/><text x="16.0437%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.7937%" y="405" width="0.0794%" height="15" fill="rgb(239,200,30)" fg:x="199" fg:w="1"/><text x="16.0437%" y="415.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="15.8730%" y="629" width="0.0794%" height="15" fill="rgb(226,28,11)" fg:x="200" fg:w="1"/><text x="16.1230%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="15.8730%" y="613" width="0.0794%" height="15" fill="rgb(220,26,48)" fg:x="200" fg:w="1"/><text x="16.1230%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="15.8730%" y="597" width="0.0794%" height="15" fill="rgb(232,10,11)" fg:x="200" fg:w="1"/><text x="16.1230%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.9524%" y="565" width="0.0794%" height="15" fill="rgb(252,143,50)" fg:x="201" fg:w="1"/><text x="16.2024%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.9524%" y="549" width="0.0794%" height="15" fill="rgb(206,58,22)" fg:x="201" fg:w="1"/><text x="16.2024%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.9524%" y="533" width="0.0794%" height="15" fill="rgb(250,9,45)" fg:x="201" fg:w="1"/><text x="16.2024%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.0317%" y="549" width="0.0794%" height="15" fill="rgb(225,148,14)" fg:x="202" fg:w="1"/><text x="16.2817%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.0317%" y="533" width="0.0794%" height="15" fill="rgb(205,178,40)" fg:x="202" fg:w="1"/><text x="16.2817%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0317%" y="517" width="0.0794%" height="15" fill="rgb(215,201,4)" fg:x="202" fg:w="1"/><text x="16.2817%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0317%" y="501" width="0.0794%" height="15" fill="rgb(219,223,24)" fg:x="202" fg:w="1"/><text x="16.2817%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0317%" y="485" width="0.0794%" height="15" fill="rgb(217,19,31)" fg:x="202" fg:w="1"/><text x="16.2817%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0317%" y="469" width="0.0794%" height="15" fill="rgb(235,33,3)" fg:x="202" fg:w="1"/><text x="16.2817%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0317%" y="453" width="0.0794%" height="15" fill="rgb(221,39,18)" fg:x="202" fg:w="1"/><text x="16.2817%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0317%" y="437" width="0.0794%" height="15" fill="rgb(242,162,33)" fg:x="202" fg:w="1"/><text x="16.2817%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.0317%" y="421" width="0.0794%" height="15" fill="rgb(233,215,28)" fg:x="202" fg:w="1"/><text x="16.2817%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.0317%" y="405" width="0.0794%" height="15" fill="rgb(212,117,9)" fg:x="202" fg:w="1"/><text x="16.2817%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.0317%" y="389" width="0.0794%" height="15" fill="rgb(237,70,47)" fg:x="202" fg:w="1"/><text x="16.2817%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0317%" y="373" width="0.0794%" height="15" fill="rgb(206,177,13)" fg:x="202" fg:w="1"/><text x="16.2817%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0317%" y="357" width="0.0794%" height="15" fill="rgb(209,174,33)" fg:x="202" fg:w="1"/><text x="16.2817%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.0317%" y="341" width="0.0794%" height="15" fill="rgb(226,6,11)" fg:x="202" fg:w="1"/><text x="16.2817%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.0317%" y="325" width="0.0794%" height="15" fill="rgb(240,214,6)" fg:x="202" fg:w="1"/><text x="16.2817%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.0317%" y="309" width="0.0794%" height="15" fill="rgb(254,214,40)" fg:x="202" fg:w="1"/><text x="16.2817%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.0317%" y="293" width="0.0794%" height="15" fill="rgb(230,187,15)" fg:x="202" fg:w="1"/><text x="16.2817%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1111%" y="517" width="0.0794%" height="15" fill="rgb(250,11,27)" fg:x="203" fg:w="1"/><text x="16.3611%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1111%" y="501" width="0.0794%" height="15" fill="rgb(243,107,19)" fg:x="203" fg:w="1"/><text x="16.3611%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1111%" y="485" width="0.0794%" height="15" fill="rgb(253,66,26)" fg:x="203" fg:w="1"/><text x="16.3611%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1111%" y="469" width="0.0794%" height="15" fill="rgb(228,43,8)" fg:x="203" fg:w="1"/><text x="16.3611%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="15.9524%" y="613" width="0.3175%" height="15" fill="rgb(232,197,36)" fg:x="201" fg:w="4"/><text x="16.2024%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="15.9524%" y="597" width="0.3175%" height="15" fill="rgb(221,182,31)" fg:x="201" fg:w="4"/><text x="16.2024%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="15.9524%" y="581" width="0.3175%" height="15" fill="rgb(244,25,36)" fg:x="201" fg:w="4"/><text x="16.2024%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="16.0317%" y="565" width="0.2381%" height="15" fill="rgb(247,101,19)" fg:x="202" fg:w="3"/><text x="16.2817%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="16.1111%" y="549" width="0.1587%" height="15" fill="rgb(223,117,19)" fg:x="203" fg:w="2"/><text x="16.3611%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.1111%" y="533" width="0.1587%" height="15" fill="rgb(249,63,38)" fg:x="203" fg:w="2"/><text x="16.3611%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.1905%" y="517" width="0.0794%" height="15" fill="rgb(220,143,23)" fg:x="204" fg:w="1"/><text x="16.4405%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.1905%" y="501" width="0.0794%" height="15" fill="rgb(252,183,22)" fg:x="204" fg:w="1"/><text x="16.4405%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="16.1905%" y="485" width="0.0794%" height="15" fill="rgb(243,176,15)" fg:x="204" fg:w="1"/><text x="16.4405%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.1905%" y="469" width="0.0794%" height="15" fill="rgb(244,204,46)" fg:x="204" fg:w="1"/><text x="16.4405%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.1905%" y="453" width="0.0794%" height="15" fill="rgb(227,28,54)" fg:x="204" fg:w="1"/><text x="16.4405%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1905%" y="437" width="0.0794%" height="15" fill="rgb(231,10,15)" fg:x="204" fg:w="1"/><text x="16.4405%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1905%" y="421" width="0.0794%" height="15" fill="rgb(210,200,17)" fg:x="204" fg:w="1"/><text x="16.4405%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="16.1905%" y="405" width="0.0794%" height="15" fill="rgb(251,106,46)" fg:x="204" fg:w="1"/><text x="16.4405%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2698%" y="501" width="0.0794%" height="15" fill="rgb(218,211,15)" fg:x="205" fg:w="1"/><text x="16.5198%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2698%" y="485" width="0.0794%" height="15" fill="rgb(239,62,10)" fg:x="205" fg:w="1"/><text x="16.5198%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3492%" y="501" width="0.0794%" height="15" fill="rgb(225,53,53)" fg:x="206" fg:w="1"/><text x="16.5992%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3492%" y="485" width="0.0794%" height="15" fill="rgb(207,16,24)" fg:x="206" fg:w="1"/><text x="16.5992%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.3492%" y="469" width="0.0794%" height="15" fill="rgb(217,52,28)" fg:x="206" fg:w="1"/><text x="16.5992%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.3492%" y="453" width="0.0794%" height="15" fill="rgb(246,1,5)" fg:x="206" fg:w="1"/><text x="16.5992%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.3492%" y="437" width="0.0794%" height="15" fill="rgb(221,29,26)" fg:x="206" fg:w="1"/><text x="16.5992%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3492%" y="421" width="0.0794%" height="15" fill="rgb(250,133,32)" fg:x="206" fg:w="1"/><text x="16.5992%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3492%" y="405" width="0.0794%" height="15" fill="rgb(236,63,16)" fg:x="206" fg:w="1"/><text x="16.5992%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.3492%" y="389" width="0.0794%" height="15" fill="rgb(231,159,14)" fg:x="206" fg:w="1"/><text x="16.5992%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.3492%" y="373" width="0.0794%" height="15" fill="rgb(207,102,36)" fg:x="206" fg:w="1"/><text x="16.5992%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.3492%" y="357" width="0.0794%" height="15" fill="rgb(230,224,31)" fg:x="206" fg:w="1"/><text x="16.5992%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.3492%" y="341" width="0.0794%" height="15" fill="rgb(215,182,16)" fg:x="206" fg:w="1"/><text x="16.5992%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="16.2698%" y="597" width="0.2381%" height="15" fill="rgb(226,113,2)" fg:x="205" fg:w="3"/><text x="16.5198%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="16.2698%" y="581" width="0.2381%" height="15" fill="rgb(241,18,35)" fg:x="205" fg:w="3"/><text x="16.5198%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="16.2698%" y="565" width="0.2381%" height="15" fill="rgb(240,165,44)" fg:x="205" fg:w="3"/><text x="16.5198%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="16.2698%" y="549" width="0.2381%" height="15" fill="rgb(229,130,47)" fg:x="205" fg:w="3"/><text x="16.5198%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.2698%" y="533" width="0.2381%" height="15" fill="rgb(223,93,7)" fg:x="205" fg:w="3"/><text x="16.5198%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.2698%" y="517" width="0.2381%" height="15" fill="rgb(205,180,36)" fg:x="205" fg:w="3"/><text x="16.5198%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4286%" y="501" width="0.0794%" height="15" fill="rgb(221,103,28)" fg:x="207" fg:w="1"/><text x="16.6786%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="16.5873%" y="549" width="0.0794%" height="15" fill="rgb(212,4,3)" fg:x="209" fg:w="1"/><text x="16.8373%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.5873%" y="533" width="0.0794%" height="15" fill="rgb(209,221,53)" fg:x="209" fg:w="1"/><text x="16.8373%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.5873%" y="517" width="0.0794%" height="15" fill="rgb(233,229,52)" fg:x="209" fg:w="1"/><text x="16.8373%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="16.5079%" y="581" width="0.2381%" height="15" fill="rgb(254,127,37)" fg:x="208" fg:w="3"/><text x="16.7579%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="16.5079%" y="565" width="0.2381%" height="15" fill="rgb(207,161,26)" fg:x="208" fg:w="3"/><text x="16.7579%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.6667%" y="549" width="0.0794%" height="15" fill="rgb(223,75,5)" fg:x="210" fg:w="1"/><text x="16.9167%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="16.6667%" y="533" width="0.0794%" height="15" fill="rgb(235,115,52)" fg:x="210" fg:w="1"/><text x="16.9167%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="16.5079%" y="597" width="0.3175%" height="15" fill="rgb(240,91,46)" fg:x="208" fg:w="4"/><text x="16.7579%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="16.7460%" y="581" width="0.0794%" height="15" fill="rgb(251,144,21)" fg:x="211" fg:w="1"/><text x="16.9960%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.7460%" y="565" width="0.0794%" height="15" fill="rgb(247,220,47)" fg:x="211" fg:w="1"/><text x="16.9960%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="16.7460%" y="549" width="0.0794%" height="15" fill="rgb(253,122,1)" fg:x="211" fg:w="1"/><text x="16.9960%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.7460%" y="533" width="0.0794%" height="15" fill="rgb(221,0,24)" fg:x="211" fg:w="1"/><text x="16.9960%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7460%" y="517" width="0.0794%" height="15" fill="rgb(220,204,54)" fg:x="211" fg:w="1"/><text x="16.9960%" y="527.50"></text></g><g><title>plugins_core::build::Build::occupying (12 samples, 0.95%)</title><rect x="15.9524%" y="629" width="0.9524%" height="15" fill="rgb(205,96,25)" fg:x="201" fg:w="12"/><text x="16.2024%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.63%)</title><rect x="16.2698%" y="613" width="0.6349%" height="15" fill="rgb(247,77,20)" fg:x="205" fg:w="8"/><text x="16.5198%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="16.8254%" y="597" width="0.0794%" height="15" fill="rgb(245,151,8)" fg:x="212" fg:w="1"/><text x="17.0754%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="16.8254%" y="581" width="0.0794%" height="15" fill="rgb(242,158,39)" fg:x="212" fg:w="1"/><text x="17.0754%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="16.8254%" y="565" width="0.0794%" height="15" fill="rgb(222,214,50)" fg:x="212" fg:w="1"/><text x="17.0754%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.8254%" y="549" width="0.0794%" height="15" fill="rgb(229,60,39)" fg:x="212" fg:w="1"/><text x="17.0754%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.8254%" y="533" width="0.0794%" height="15" fill="rgb(240,148,18)" fg:x="212" fg:w="1"/><text x="17.0754%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.8254%" y="517" width="0.0794%" height="15" fill="rgb(215,96,11)" fg:x="212" fg:w="1"/><text x="17.0754%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8254%" y="501" width="0.0794%" height="15" fill="rgb(238,162,53)" fg:x="212" fg:w="1"/><text x="17.0754%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8254%" y="485" width="0.0794%" height="15" fill="rgb(214,83,18)" fg:x="212" fg:w="1"/><text x="17.0754%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8254%" y="469" width="0.0794%" height="15" fill="rgb(248,117,24)" fg:x="212" fg:w="1"/><text x="17.0754%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8254%" y="453" width="0.0794%" height="15" fill="rgb(238,190,6)" fg:x="212" fg:w="1"/><text x="17.0754%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8254%" y="437" width="0.0794%" height="15" fill="rgb(213,51,6)" fg:x="212" fg:w="1"/><text x="17.0754%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="16.9048%" y="613" width="0.0794%" height="15" fill="rgb(212,136,1)" fg:x="213" fg:w="1"/><text x="17.1548%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="16.9048%" y="597" width="0.0794%" height="15" fill="rgb(221,192,14)" fg:x="213" fg:w="1"/><text x="17.1548%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (119 samples, 9.44%)</title><rect x="7.6190%" y="645" width="9.4444%" height="15" fill="rgb(244,38,54)" fg:x="96" fg:w="119"/><text x="7.8690%" y="655.50">plugins_core::..</text></g><g><title>plugins_core::build::Build::with_username (2 samples, 0.16%)</title><rect x="16.9048%" y="629" width="0.1587%" height="15" fill="rgb(240,45,28)" fg:x="213" fg:w="2"/><text x="17.1548%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="16.9841%" y="613" width="0.0794%" height="15" fill="rgb(240,123,12)" fg:x="214" fg:w="1"/><text x="17.2341%" y="623.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="16.9841%" y="597" width="0.0794%" height="15" fill="rgb(216,14,30)" fg:x="214" fg:w="1"/><text x="17.2341%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.9841%" y="581" width="0.0794%" height="15" fill="rgb(212,50,24)" fg:x="214" fg:w="1"/><text x="17.2341%" y="591.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="16.9841%" y="565" width="0.0794%" height="15" fill="rgb(253,229,47)" fg:x="214" fg:w="1"/><text x="17.2341%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.9841%" y="549" width="0.0794%" height="15" fill="rgb(214,26,17)" fg:x="214" fg:w="1"/><text x="17.2341%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.9841%" y="533" width="0.0794%" height="15" fill="rgb(252,60,11)" fg:x="214" fg:w="1"/><text x="17.2341%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9841%" y="517" width="0.0794%" height="15" fill="rgb(209,59,37)" fg:x="214" fg:w="1"/><text x="17.2341%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="17.0635%" y="421" width="0.0794%" height="15" fill="rgb(228,126,53)" fg:x="215" fg:w="1"/><text x="17.3135%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.0635%" y="405" width="0.0794%" height="15" fill="rgb(233,99,2)" fg:x="215" fg:w="1"/><text x="17.3135%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="17.0635%" y="565" width="0.1587%" height="15" fill="rgb(217,106,34)" fg:x="215" fg:w="2"/><text x="17.3135%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.0635%" y="549" width="0.1587%" height="15" fill="rgb(222,46,19)" fg:x="215" fg:w="2"/><text x="17.3135%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.0635%" y="533" width="0.1587%" height="15" fill="rgb(251,87,31)" fg:x="215" fg:w="2"/><text x="17.3135%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.0635%" y="517" width="0.1587%" height="15" fill="rgb(213,70,51)" fg:x="215" fg:w="2"/><text x="17.3135%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.0635%" y="501" width="0.1587%" height="15" fill="rgb(229,144,18)" fg:x="215" fg:w="2"/><text x="17.3135%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.0635%" y="485" width="0.1587%" height="15" fill="rgb(254,60,26)" fg:x="215" fg:w="2"/><text x="17.3135%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.0635%" y="469" width="0.1587%" height="15" fill="rgb(243,127,51)" fg:x="215" fg:w="2"/><text x="17.3135%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="17.0635%" y="453" width="0.1587%" height="15" fill="rgb(221,51,25)" fg:x="215" fg:w="2"/><text x="17.3135%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.0635%" y="437" width="0.1587%" height="15" fill="rgb(205,42,7)" fg:x="215" fg:w="2"/><text x="17.3135%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.1429%" y="421" width="0.0794%" height="15" fill="rgb(236,177,48)" fg:x="216" fg:w="1"/><text x="17.3929%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.1429%" y="405" width="0.0794%" height="15" fill="rgb(226,79,31)" fg:x="216" fg:w="1"/><text x="17.3929%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.1429%" y="389" width="0.0794%" height="15" fill="rgb(216,170,12)" fg:x="216" fg:w="1"/><text x="17.3929%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.1429%" y="373" width="0.0794%" height="15" fill="rgb(208,62,51)" fg:x="216" fg:w="1"/><text x="17.3929%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.1429%" y="357" width="0.0794%" height="15" fill="rgb(254,129,9)" fg:x="216" fg:w="1"/><text x="17.3929%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="17.0635%" y="645" width="0.2381%" height="15" fill="rgb(243,209,31)" fg:x="215" fg:w="3"/><text x="17.3135%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="17.0635%" y="629" width="0.2381%" height="15" fill="rgb(213,159,23)" fg:x="215" fg:w="3"/><text x="17.3135%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="17.0635%" y="613" width="0.2381%" height="15" fill="rgb(249,77,39)" fg:x="215" fg:w="3"/><text x="17.3135%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="17.0635%" y="597" width="0.2381%" height="15" fill="rgb(230,13,33)" fg:x="215" fg:w="3"/><text x="17.3135%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="17.0635%" y="581" width="0.2381%" height="15" fill="rgb(215,215,7)" fg:x="215" fg:w="3"/><text x="17.3135%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="17.2222%" y="565" width="0.0794%" height="15" fill="rgb(222,92,25)" fg:x="217" fg:w="1"/><text x="17.4722%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.2222%" y="549" width="0.0794%" height="15" fill="rgb(215,173,22)" fg:x="217" fg:w="1"/><text x="17.4722%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.2222%" y="533" width="0.0794%" height="15" fill="rgb(247,205,52)" fg:x="217" fg:w="1"/><text x="17.4722%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2222%" y="517" width="0.0794%" height="15" fill="rgb(240,210,37)" fg:x="217" fg:w="1"/><text x="17.4722%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2222%" y="501" width="0.0794%" height="15" fill="rgb(224,13,10)" fg:x="217" fg:w="1"/><text x="17.4722%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2222%" y="485" width="0.0794%" height="15" fill="rgb(209,48,33)" fg:x="217" fg:w="1"/><text x="17.4722%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2222%" y="469" width="0.0794%" height="15" fill="rgb(228,219,23)" fg:x="217" fg:w="1"/><text x="17.4722%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.2222%" y="453" width="0.0794%" height="15" fill="rgb(239,46,49)" fg:x="217" fg:w="1"/><text x="17.4722%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.2222%" y="437" width="0.0794%" height="15" fill="rgb(206,172,51)" fg:x="217" fg:w="1"/><text x="17.4722%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.2222%" y="421" width="0.0794%" height="15" fill="rgb(213,212,35)" fg:x="217" fg:w="1"/><text x="17.4722%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.2222%" y="405" width="0.0794%" height="15" fill="rgb(252,40,27)" fg:x="217" fg:w="1"/><text x="17.4722%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.2222%" y="389" width="0.0794%" height="15" fill="rgb(212,33,41)" fg:x="217" fg:w="1"/><text x="17.4722%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.2222%" y="373" width="0.0794%" height="15" fill="rgb(232,160,27)" fg:x="217" fg:w="1"/><text x="17.4722%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.2222%" y="357" width="0.0794%" height="15" fill="rgb(244,160,20)" fg:x="217" fg:w="1"/><text x="17.4722%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.2222%" y="341" width="0.0794%" height="15" fill="rgb(205,66,20)" fg:x="217" fg:w="1"/><text x="17.4722%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.2222%" y="325" width="0.0794%" height="15" fill="rgb(236,158,6)" fg:x="217" fg:w="1"/><text x="17.4722%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2222%" y="309" width="0.0794%" height="15" fill="rgb(232,25,36)" fg:x="217" fg:w="1"/><text x="17.4722%" y="319.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (173 samples, 13.73%)</title><rect x="3.6508%" y="661" width="13.7302%" height="15" fill="rgb(220,153,35)" fg:x="46" fg:w="173"/><text x="3.9008%" y="671.50">&lt;tests::HoldingKeyInV..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="17.3016%" y="645" width="0.0794%" height="15" fill="rgb(216,5,8)" fg:x="218" fg:w="1"/><text x="17.5516%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3016%" y="629" width="0.0794%" height="15" fill="rgb(240,97,3)" fg:x="218" fg:w="1"/><text x="17.5516%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="17.3810%" y="661" width="0.0794%" height="15" fill="rgb(220,99,26)" fg:x="219" fg:w="1"/><text x="17.6310%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="17.3810%" y="645" width="0.0794%" height="15" fill="rgb(237,96,2)" fg:x="219" fg:w="1"/><text x="17.6310%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="17.3810%" y="629" width="0.0794%" height="15" fill="rgb(217,197,47)" fg:x="219" fg:w="1"/><text x="17.6310%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.3810%" y="613" width="0.0794%" height="15" fill="rgb(252,133,54)" fg:x="219" fg:w="1"/><text x="17.6310%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3810%" y="597" width="0.0794%" height="15" fill="rgb(233,37,30)" fg:x="219" fg:w="1"/><text x="17.6310%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="17.5397%" y="629" width="0.0794%" height="15" fill="rgb(239,182,12)" fg:x="221" fg:w="1"/><text x="17.7897%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.5397%" y="613" width="0.0794%" height="15" fill="rgb(245,83,39)" fg:x="221" fg:w="1"/><text x="17.7897%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.5397%" y="597" width="0.0794%" height="15" fill="rgb(222,109,36)" fg:x="221" fg:w="1"/><text x="17.7897%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.5397%" y="581" width="0.0794%" height="15" fill="rgb(237,95,44)" fg:x="221" fg:w="1"/><text x="17.7897%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.5397%" y="565" width="0.0794%" height="15" fill="rgb(216,36,54)" fg:x="221" fg:w="1"/><text x="17.7897%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.5397%" y="549" width="0.0794%" height="15" fill="rgb(236,164,3)" fg:x="221" fg:w="1"/><text x="17.7897%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.5397%" y="533" width="0.0794%" height="15" fill="rgb(223,15,21)" fg:x="221" fg:w="1"/><text x="17.7897%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.5397%" y="517" width="0.0794%" height="15" fill="rgb(239,191,12)" fg:x="221" fg:w="1"/><text x="17.7897%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="17.6190%" y="613" width="0.0794%" height="15" fill="rgb(231,191,37)" fg:x="222" fg:w="1"/><text x="17.8690%" y="623.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6984%" y="581" width="0.0794%" height="15" fill="rgb(209,155,36)" fg:x="223" fg:w="1"/><text x="17.9484%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6984%" y="565" width="0.0794%" height="15" fill="rgb(216,222,49)" fg:x="223" fg:w="1"/><text x="17.9484%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8571%" y="549" width="0.0794%" height="15" fill="rgb(218,181,2)" fg:x="225" fg:w="1"/><text x="18.1071%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="17.9365%" y="549" width="0.2381%" height="15" fill="rgb(239,125,9)" fg:x="226" fg:w="3"/><text x="18.1865%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="17.9365%" y="533" width="0.2381%" height="15" fill="rgb(233,103,7)" fg:x="226" fg:w="3"/><text x="18.1865%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="17.9365%" y="517" width="0.2381%" height="15" fill="rgb(209,223,5)" fg:x="226" fg:w="3"/><text x="18.1865%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.9365%" y="501" width="0.2381%" height="15" fill="rgb(234,71,27)" fg:x="226" fg:w="3"/><text x="18.1865%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.9365%" y="485" width="0.2381%" height="15" fill="rgb(251,202,16)" fg:x="226" fg:w="3"/><text x="18.1865%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="18.0159%" y="469" width="0.1587%" height="15" fill="rgb(231,180,0)" fg:x="227" fg:w="2"/><text x="18.2659%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (10 samples, 0.79%)</title><rect x="17.4603%" y="645" width="0.7937%" height="15" fill="rgb(223,58,28)" fg:x="220" fg:w="10"/><text x="17.7103%" y="655.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (8 samples, 0.63%)</title><rect x="17.6190%" y="629" width="0.6349%" height="15" fill="rgb(250,34,24)" fg:x="222" fg:w="8"/><text x="17.8690%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="17.6984%" y="613" width="0.5556%" height="15" fill="rgb(235,24,16)" fg:x="223" fg:w="7"/><text x="17.9484%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="17.6984%" y="597" width="0.5556%" height="15" fill="rgb(219,28,33)" fg:x="223" fg:w="7"/><text x="17.9484%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="17.7778%" y="581" width="0.4762%" height="15" fill="rgb(228,150,43)" fg:x="224" fg:w="6"/><text x="18.0278%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="17.8571%" y="565" width="0.3968%" height="15" fill="rgb(221,228,36)" fg:x="225" fg:w="5"/><text x="18.1071%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u32 (1 samples, 0.08%)</title><rect x="18.1746%" y="549" width="0.0794%" height="15" fill="rgb(232,116,17)" fg:x="229" fg:w="1"/><text x="18.4246%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.2540%" y="629" width="0.0794%" height="15" fill="rgb(220,110,51)" fg:x="230" fg:w="1"/><text x="18.5040%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="18.3333%" y="629" width="0.0794%" height="15" fill="rgb(207,26,25)" fg:x="231" fg:w="1"/><text x="18.5833%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="18.3333%" y="613" width="0.0794%" height="15" fill="rgb(223,58,19)" fg:x="231" fg:w="1"/><text x="18.5833%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.3333%" y="597" width="0.0794%" height="15" fill="rgb(234,125,39)" fg:x="231" fg:w="1"/><text x="18.5833%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.3333%" y="581" width="0.0794%" height="15" fill="rgb(241,48,36)" fg:x="231" fg:w="1"/><text x="18.5833%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.3333%" y="565" width="0.0794%" height="15" fill="rgb(217,148,51)" fg:x="231" fg:w="1"/><text x="18.5833%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.3333%" y="549" width="0.0794%" height="15" fill="rgb(247,17,25)" fg:x="231" fg:w="1"/><text x="18.5833%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.3333%" y="533" width="0.0794%" height="15" fill="rgb(219,89,38)" fg:x="231" fg:w="1"/><text x="18.5833%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.3333%" y="517" width="0.0794%" height="15" fill="rgb(220,145,2)" fg:x="231" fg:w="1"/><text x="18.5833%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.3333%" y="501" width="0.0794%" height="15" fill="rgb(244,66,47)" fg:x="231" fg:w="1"/><text x="18.5833%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.4127%" y="629" width="0.0794%" height="15" fill="rgb(226,182,5)" fg:x="232" fg:w="1"/><text x="18.6627%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4127%" y="613" width="0.0794%" height="15" fill="rgb(211,98,20)" fg:x="232" fg:w="1"/><text x="18.6627%" y="623.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="18.4921%" y="629" width="0.1587%" height="15" fill="rgb(217,103,52)" fg:x="233" fg:w="2"/><text x="18.7421%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="18.4921%" y="613" width="0.1587%" height="15" fill="rgb(208,125,52)" fg:x="233" fg:w="2"/><text x="18.7421%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.4921%" y="597" width="0.1587%" height="15" fill="rgb(244,70,13)" fg:x="233" fg:w="2"/><text x="18.7421%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5714%" y="581" width="0.0794%" height="15" fill="rgb(253,124,3)" fg:x="234" fg:w="1"/><text x="18.8214%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5714%" y="565" width="0.0794%" height="15" fill="rgb(222,145,32)" fg:x="234" fg:w="1"/><text x="18.8214%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.5714%" y="549" width="0.0794%" height="15" fill="rgb(232,183,47)" fg:x="234" fg:w="1"/><text x="18.8214%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5714%" y="533" width="0.0794%" height="15" fill="rgb(246,226,4)" fg:x="234" fg:w="1"/><text x="18.8214%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="18.5714%" y="517" width="0.0794%" height="15" fill="rgb(228,185,46)" fg:x="234" fg:w="1"/><text x="18.8214%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6508%" y="597" width="0.0794%" height="15" fill="rgb(213,196,4)" fg:x="235" fg:w="1"/><text x="18.9008%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6508%" y="581" width="0.0794%" height="15" fill="rgb(212,2,45)" fg:x="235" fg:w="1"/><text x="18.9008%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.6508%" y="565" width="0.0794%" height="15" fill="rgb(217,145,50)" fg:x="235" fg:w="1"/><text x="18.9008%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.6508%" y="549" width="0.0794%" height="15" fill="rgb(242,10,46)" fg:x="235" fg:w="1"/><text x="18.9008%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.6508%" y="533" width="0.0794%" height="15" fill="rgb(252,91,48)" fg:x="235" fg:w="1"/><text x="18.9008%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.6508%" y="517" width="0.0794%" height="15" fill="rgb(216,72,13)" fg:x="235" fg:w="1"/><text x="18.9008%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.6508%" y="501" width="0.0794%" height="15" fill="rgb(219,6,37)" fg:x="235" fg:w="1"/><text x="18.9008%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.6508%" y="485" width="0.0794%" height="15" fill="rgb(236,185,40)" fg:x="235" fg:w="1"/><text x="18.9008%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.6508%" y="469" width="0.0794%" height="15" fill="rgb(208,81,48)" fg:x="235" fg:w="1"/><text x="18.9008%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.6508%" y="453" width="0.0794%" height="15" fill="rgb(211,42,33)" fg:x="235" fg:w="1"/><text x="18.9008%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.6508%" y="437" width="0.0794%" height="15" fill="rgb(211,90,39)" fg:x="235" fg:w="1"/><text x="18.9008%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6508%" y="421" width="0.0794%" height="15" fill="rgb(218,136,12)" fg:x="235" fg:w="1"/><text x="18.9008%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="18.8095%" y="581" width="0.1587%" height="15" fill="rgb(234,12,32)" fg:x="237" fg:w="2"/><text x="19.0595%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.8095%" y="565" width="0.1587%" height="15" fill="rgb(221,164,18)" fg:x="237" fg:w="2"/><text x="19.0595%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.8095%" y="549" width="0.1587%" height="15" fill="rgb(239,135,14)" fg:x="237" fg:w="2"/><text x="19.0595%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.8095%" y="533" width="0.1587%" height="15" fill="rgb(226,198,47)" fg:x="237" fg:w="2"/><text x="19.0595%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.8095%" y="517" width="0.1587%" height="15" fill="rgb(244,121,47)" fg:x="237" fg:w="2"/><text x="19.0595%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.8889%" y="501" width="0.0794%" height="15" fill="rgb(226,21,48)" fg:x="238" fg:w="1"/><text x="19.1389%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.8889%" y="485" width="0.0794%" height="15" fill="rgb(215,178,47)" fg:x="238" fg:w="1"/><text x="19.1389%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.8889%" y="469" width="0.0794%" height="15" fill="rgb(206,212,19)" fg:x="238" fg:w="1"/><text x="19.1389%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="18.9683%" y="565" width="0.1587%" height="15" fill="rgb(230,104,34)" fg:x="239" fg:w="2"/><text x="19.2183%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.1270%" y="565" width="0.0794%" height="15" fill="rgb(210,96,51)" fg:x="241" fg:w="1"/><text x="19.3770%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.1270%" y="549" width="0.0794%" height="15" fill="rgb(229,111,47)" fg:x="241" fg:w="1"/><text x="19.3770%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.1270%" y="533" width="0.0794%" height="15" fill="rgb(218,174,45)" fg:x="241" fg:w="1"/><text x="19.3770%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.1270%" y="517" width="0.0794%" height="15" fill="rgb(215,21,32)" fg:x="241" fg:w="1"/><text x="19.3770%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="19.2063%" y="565" width="0.2381%" height="15" fill="rgb(235,72,21)" fg:x="242" fg:w="3"/><text x="19.4563%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="19.2063%" y="549" width="0.2381%" height="15" fill="rgb(250,113,30)" fg:x="242" fg:w="3"/><text x="19.4563%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="19.2063%" y="533" width="0.2381%" height="15" fill="rgb(244,136,34)" fg:x="242" fg:w="3"/><text x="19.4563%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="19.2063%" y="517" width="0.2381%" height="15" fill="rgb(213,226,47)" fg:x="242" fg:w="3"/><text x="19.4563%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.3651%" y="501" width="0.0794%" height="15" fill="rgb(224,136,40)" fg:x="244" fg:w="1"/><text x="19.6151%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.3651%" y="485" width="0.0794%" height="15" fill="rgb(253,124,12)" fg:x="244" fg:w="1"/><text x="19.6151%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.3651%" y="469" width="0.0794%" height="15" fill="rgb(210,67,8)" fg:x="244" fg:w="1"/><text x="19.6151%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.4444%" y="549" width="0.0794%" height="15" fill="rgb(210,204,0)" fg:x="245" fg:w="1"/><text x="19.6944%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.4444%" y="533" width="0.0794%" height="15" fill="rgb(217,179,22)" fg:x="245" fg:w="1"/><text x="19.6944%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.4444%" y="517" width="0.0794%" height="15" fill="rgb(237,192,33)" fg:x="245" fg:w="1"/><text x="19.6944%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.4444%" y="501" width="0.0794%" height="15" fill="rgb(211,104,28)" fg:x="245" fg:w="1"/><text x="19.6944%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.4444%" y="485" width="0.0794%" height="15" fill="rgb(214,75,30)" fg:x="245" fg:w="1"/><text x="19.6944%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.5238%" y="549" width="0.1587%" height="15" fill="rgb(220,227,12)" fg:x="246" fg:w="2"/><text x="19.7738%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.5238%" y="533" width="0.1587%" height="15" fill="rgb(233,134,28)" fg:x="246" fg:w="2"/><text x="19.7738%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.5238%" y="517" width="0.1587%" height="15" fill="rgb(215,146,24)" fg:x="246" fg:w="2"/><text x="19.7738%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="19.5238%" y="501" width="0.1587%" height="15" fill="rgb(248,227,20)" fg:x="246" fg:w="2"/><text x="19.7738%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.7619%" y="501" width="0.0794%" height="15" fill="rgb(250,44,42)" fg:x="249" fg:w="1"/><text x="20.0119%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.7619%" y="485" width="0.0794%" height="15" fill="rgb(219,5,35)" fg:x="249" fg:w="1"/><text x="20.0119%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.7619%" y="469" width="0.0794%" height="15" fill="rgb(241,132,32)" fg:x="249" fg:w="1"/><text x="20.0119%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.8413%" y="485" width="0.0794%" height="15" fill="rgb(234,212,51)" fg:x="250" fg:w="1"/><text x="20.0913%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8413%" y="469" width="0.0794%" height="15" fill="rgb(242,173,29)" fg:x="250" fg:w="1"/><text x="20.0913%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.8413%" y="453" width="0.0794%" height="15" fill="rgb(212,159,2)" fg:x="250" fg:w="1"/><text x="20.0913%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.8413%" y="437" width="0.0794%" height="15" fill="rgb(238,165,31)" fg:x="250" fg:w="1"/><text x="20.0913%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="19.7619%" y="517" width="0.3175%" height="15" fill="rgb(241,57,36)" fg:x="249" fg:w="4"/><text x="20.0119%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="19.8413%" y="501" width="0.2381%" height="15" fill="rgb(249,7,4)" fg:x="250" fg:w="3"/><text x="20.0913%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.9206%" y="485" width="0.1587%" height="15" fill="rgb(250,137,44)" fg:x="251" fg:w="2"/><text x="20.1706%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.9206%" y="469" width="0.1587%" height="15" fill="rgb(244,185,1)" fg:x="251" fg:w="2"/><text x="20.1706%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="19.9206%" y="453" width="0.1587%" height="15" fill="rgb(216,5,53)" fg:x="251" fg:w="2"/><text x="20.1706%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.0000%" y="437" width="0.0794%" height="15" fill="rgb(234,89,21)" fg:x="252" fg:w="1"/><text x="20.2500%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.0000%" y="421" width="0.0794%" height="15" fill="rgb(250,81,43)" fg:x="252" fg:w="1"/><text x="20.2500%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.0000%" y="405" width="0.0794%" height="15" fill="rgb(243,132,11)" fg:x="252" fg:w="1"/><text x="20.2500%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="19.6825%" y="549" width="0.4762%" height="15" fill="rgb(253,159,28)" fg:x="248" fg:w="6"/><text x="19.9325%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="19.6825%" y="533" width="0.4762%" height="15" fill="rgb(237,167,34)" fg:x="248" fg:w="6"/><text x="19.9325%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.0794%" y="517" width="0.0794%" height="15" fill="rgb(237,16,50)" fg:x="253" fg:w="1"/><text x="20.3294%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.0794%" y="501" width="0.0794%" height="15" fill="rgb(247,125,2)" fg:x="253" fg:w="1"/><text x="20.3294%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.0794%" y="485" width="0.0794%" height="15" fill="rgb(254,35,3)" fg:x="253" fg:w="1"/><text x="20.3294%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.87%)</title><rect x="19.4444%" y="565" width="0.8730%" height="15" fill="rgb(237,209,21)" fg:x="245" fg:w="11"/><text x="19.6944%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.1587%" y="549" width="0.1587%" height="15" fill="rgb(224,122,20)" fg:x="254" fg:w="2"/><text x="20.4087%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.83%)</title><rect x="18.7302%" y="597" width="1.8254%" height="15" fill="rgb(224,11,46)" fg:x="236" fg:w="23"/><text x="18.9802%" y="607.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.59%)</title><rect x="18.9683%" y="581" width="1.5873%" height="15" fill="rgb(248,21,33)" fg:x="239" fg:w="20"/><text x="19.2183%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.3175%" y="565" width="0.2381%" height="15" fill="rgb(222,144,7)" fg:x="256" fg:w="3"/><text x="20.5675%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="20.3175%" y="549" width="0.2381%" height="15" fill="rgb(205,141,37)" fg:x="256" fg:w="3"/><text x="20.5675%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="20.3175%" y="533" width="0.2381%" height="15" fill="rgb(237,130,8)" fg:x="256" fg:w="3"/><text x="20.5675%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.4762%" y="517" width="0.0794%" height="15" fill="rgb(209,179,39)" fg:x="258" fg:w="1"/><text x="20.7262%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.4762%" y="501" width="0.0794%" height="15" fill="rgb(207,52,17)" fg:x="258" fg:w="1"/><text x="20.7262%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.4762%" y="485" width="0.0794%" height="15" fill="rgb(253,158,17)" fg:x="258" fg:w="1"/><text x="20.7262%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="20.5556%" y="549" width="0.2381%" height="15" fill="rgb(208,19,53)" fg:x="259" fg:w="3"/><text x="20.8056%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="20.6349%" y="533" width="0.1587%" height="15" fill="rgb(233,152,13)" fg:x="260" fg:w="2"/><text x="20.8849%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="20.7937%" y="517" width="0.1587%" height="15" fill="rgb(231,84,1)" fg:x="262" fg:w="2"/><text x="21.0437%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="20.7937%" y="501" width="0.1587%" height="15" fill="rgb(229,142,48)" fg:x="262" fg:w="2"/><text x="21.0437%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="20.7937%" y="485" width="0.1587%" height="15" fill="rgb(248,70,29)" fg:x="262" fg:w="2"/><text x="21.0437%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="20.9524%" y="501" width="0.1587%" height="15" fill="rgb(250,85,7)" fg:x="264" fg:w="2"/><text x="21.2024%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.1111%" y="485" width="0.1587%" height="15" fill="rgb(235,140,43)" fg:x="266" fg:w="2"/><text x="21.3611%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="20.5556%" y="597" width="0.8730%" height="15" fill="rgb(216,0,5)" fg:x="259" fg:w="11"/><text x="20.8056%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.87%)</title><rect x="20.5556%" y="581" width="0.8730%" height="15" fill="rgb(223,167,29)" fg:x="259" fg:w="11"/><text x="20.8056%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="20.5556%" y="565" width="0.8730%" height="15" fill="rgb(229,150,33)" fg:x="259" fg:w="11"/><text x="20.8056%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="20.7937%" y="549" width="0.6349%" height="15" fill="rgb(227,26,52)" fg:x="262" fg:w="8"/><text x="21.0437%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="20.7937%" y="533" width="0.6349%" height="15" fill="rgb(250,60,52)" fg:x="262" fg:w="8"/><text x="21.0437%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="20.9524%" y="517" width="0.4762%" height="15" fill="rgb(228,81,46)" fg:x="264" fg:w="6"/><text x="21.2024%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="21.1111%" y="501" width="0.3175%" height="15" fill="rgb(225,218,31)" fg:x="266" fg:w="4"/><text x="21.3611%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.2698%" y="485" width="0.1587%" height="15" fill="rgb(230,35,16)" fg:x="268" fg:w="2"/><text x="21.5198%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.3492%" y="469" width="0.0794%" height="15" fill="rgb(247,100,0)" fg:x="269" fg:w="1"/><text x="21.5992%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3492%" y="453" width="0.0794%" height="15" fill="rgb(223,135,11)" fg:x="269" fg:w="1"/><text x="21.5992%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6667%" y="533" width="0.0794%" height="15" fill="rgb(207,136,0)" fg:x="273" fg:w="1"/><text x="21.9167%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.9048%" y="517" width="0.1587%" height="15" fill="rgb(246,131,25)" fg:x="276" fg:w="2"/><text x="22.1548%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.0635%" y="517" width="0.1587%" height="15" fill="rgb(209,47,12)" fg:x="278" fg:w="2"/><text x="22.3135%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1429%" y="501" width="0.0794%" height="15" fill="rgb(221,25,16)" fg:x="279" fg:w="1"/><text x="22.3929%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.3016%" y="485" width="0.0794%" height="15" fill="rgb(223,164,33)" fg:x="281" fg:w="1"/><text x="22.5516%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.4603%" y="437" width="0.0794%" height="15" fill="rgb(220,26,23)" fg:x="283" fg:w="1"/><text x="22.7103%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="21.6667%" y="565" width="0.9524%" height="15" fill="rgb(231,224,1)" fg:x="273" fg:w="12"/><text x="21.9167%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.95%)</title><rect x="21.6667%" y="549" width="0.9524%" height="15" fill="rgb(229,221,24)" fg:x="273" fg:w="12"/><text x="21.9167%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="21.7460%" y="533" width="0.8730%" height="15" fill="rgb(213,34,10)" fg:x="274" fg:w="11"/><text x="21.9960%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="22.2222%" y="517" width="0.3968%" height="15" fill="rgb(215,33,11)" fg:x="280" fg:w="5"/><text x="22.4722%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="22.2222%" y="501" width="0.3968%" height="15" fill="rgb(216,20,41)" fg:x="280" fg:w="5"/><text x="22.4722%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="22.3810%" y="485" width="0.2381%" height="15" fill="rgb(228,43,31)" fg:x="282" fg:w="3"/><text x="22.6310%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="22.3810%" y="469" width="0.2381%" height="15" fill="rgb(227,83,26)" fg:x="282" fg:w="3"/><text x="22.6310%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.4603%" y="453" width="0.1587%" height="15" fill="rgb(217,168,19)" fg:x="283" fg:w="2"/><text x="22.7103%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5397%" y="437" width="0.0794%" height="15" fill="rgb(231,34,33)" fg:x="284" fg:w="1"/><text x="22.7897%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="22.5397%" y="421" width="0.0794%" height="15" fill="rgb(230,120,51)" fg:x="284" fg:w="1"/><text x="22.7897%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.6190%" y="565" width="0.0794%" height="15" fill="rgb(215,138,27)" fg:x="285" fg:w="1"/><text x="22.8690%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="22.6984%" y="549" width="0.3968%" height="15" fill="rgb(246,80,47)" fg:x="286" fg:w="5"/><text x="22.9484%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="22.7778%" y="533" width="0.3175%" height="15" fill="rgb(215,57,53)" fg:x="287" fg:w="4"/><text x="23.0278%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="22.8571%" y="517" width="0.2381%" height="15" fill="rgb(229,137,5)" fg:x="288" fg:w="3"/><text x="23.1071%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="22.9365%" y="501" width="0.1587%" height="15" fill="rgb(210,86,2)" fg:x="289" fg:w="2"/><text x="23.1865%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="22.9365%" y="485" width="0.1587%" height="15" fill="rgb(231,226,51)" fg:x="289" fg:w="2"/><text x="23.1865%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="22.9365%" y="469" width="0.1587%" height="15" fill="rgb(216,62,29)" fg:x="289" fg:w="2"/><text x="23.1865%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.0159%" y="453" width="0.0794%" height="15" fill="rgb(248,202,3)" fg:x="290" fg:w="1"/><text x="23.2659%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="23.0952%" y="549" width="0.0794%" height="15" fill="rgb(225,181,7)" fg:x="291" fg:w="1"/><text x="23.3452%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="23.0952%" y="533" width="0.0794%" height="15" fill="rgb(247,170,54)" fg:x="291" fg:w="1"/><text x="23.3452%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (1 samples, 0.08%)</title><rect x="23.1746%" y="549" width="0.0794%" height="15" fill="rgb(236,204,33)" fg:x="292" fg:w="1"/><text x="23.4246%" y="559.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::intersection (1 samples, 0.08%)</title><rect x="23.2540%" y="549" width="0.0794%" height="15" fill="rgb(216,45,30)" fg:x="293" fg:w="1"/><text x="23.5040%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.4921%" y="533" width="0.0794%" height="15" fill="rgb(213,203,16)" fg:x="296" fg:w="1"/><text x="23.7421%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.4921%" y="517" width="0.0794%" height="15" fill="rgb(215,46,16)" fg:x="296" fg:w="1"/><text x="23.7421%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (27 samples, 2.14%)</title><rect x="21.5079%" y="581" width="2.1429%" height="15" fill="rgb(217,162,46)" fg:x="271" fg:w="27"/><text x="21.7579%" y="591.50">&lt;..</text></g><g><title>treediff::diff::diff (12 samples, 0.95%)</title><rect x="22.6984%" y="565" width="0.9524%" height="15" fill="rgb(224,189,20)" fg:x="286" fg:w="12"/><text x="22.9484%" y="575.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="23.3333%" y="549" width="0.3175%" height="15" fill="rgb(232,35,51)" fg:x="294" fg:w="4"/><text x="23.5833%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="23.5714%" y="533" width="0.0794%" height="15" fill="rgb(243,221,46)" fg:x="297" fg:w="1"/><text x="23.8214%" y="543.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="23.5714%" y="517" width="0.0794%" height="15" fill="rgb(248,16,16)" fg:x="297" fg:w="1"/><text x="23.8214%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9683%" y="549" width="0.0794%" height="15" fill="rgb(220,168,13)" fg:x="302" fg:w="1"/><text x="24.2183%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.0476%" y="549" width="0.2381%" height="15" fill="rgb(243,102,39)" fg:x="303" fg:w="3"/><text x="24.2976%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2063%" y="533" width="0.0794%" height="15" fill="rgb(245,82,32)" fg:x="305" fg:w="1"/><text x="24.4563%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.2063%" y="517" width="0.0794%" height="15" fill="rgb(230,164,19)" fg:x="305" fg:w="1"/><text x="24.4563%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="24.2857%" y="549" width="0.0794%" height="15" fill="rgb(221,9,41)" fg:x="306" fg:w="1"/><text x="24.5357%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.2857%" y="533" width="0.0794%" height="15" fill="rgb(216,93,0)" fg:x="306" fg:w="1"/><text x="24.5357%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="24.3651%" y="549" width="0.0794%" height="15" fill="rgb(235,113,9)" fg:x="307" fg:w="1"/><text x="24.6151%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="24.4444%" y="533" width="0.0794%" height="15" fill="rgb(209,224,10)" fg:x="308" fg:w="1"/><text x="24.6944%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="24.4444%" y="549" width="0.2381%" height="15" fill="rgb(226,54,34)" fg:x="308" fg:w="3"/><text x="24.6944%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.5238%" y="533" width="0.1587%" height="15" fill="rgb(222,60,8)" fg:x="309" fg:w="2"/><text x="24.7738%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.5238%" y="517" width="0.1587%" height="15" fill="rgb(248,228,41)" fg:x="309" fg:w="2"/><text x="24.7738%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.8413%" y="453" width="0.1587%" height="15" fill="rgb(226,31,32)" fg:x="313" fg:w="2"/><text x="25.0913%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="24.8413%" y="469" width="0.3175%" height="15" fill="rgb(242,132,49)" fg:x="313" fg:w="4"/><text x="25.0913%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="25.0000%" y="453" width="0.1587%" height="15" fill="rgb(224,194,19)" fg:x="315" fg:w="2"/><text x="25.2500%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0794%" y="437" width="0.0794%" height="15" fill="rgb(232,200,51)" fg:x="316" fg:w="1"/><text x="25.3294%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="24.7619%" y="501" width="0.4762%" height="15" fill="rgb(235,60,46)" fg:x="312" fg:w="6"/><text x="25.0119%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="24.7619%" y="485" width="0.4762%" height="15" fill="rgb(240,109,52)" fg:x="312" fg:w="6"/><text x="25.0119%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1587%" y="469" width="0.0794%" height="15" fill="rgb(215,78,37)" fg:x="317" fg:w="1"/><text x="25.4087%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.2381%" y="485" width="0.0794%" height="15" fill="rgb(225,141,7)" fg:x="318" fg:w="1"/><text x="25.4881%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="25.3175%" y="485" width="0.0794%" height="15" fill="rgb(216,102,54)" fg:x="319" fg:w="1"/><text x="25.5675%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4762%" y="469" width="0.0794%" height="15" fill="rgb(238,143,13)" fg:x="321" fg:w="1"/><text x="25.7262%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4762%" y="453" width="0.0794%" height="15" fill="rgb(219,45,51)" fg:x="321" fg:w="1"/><text x="25.7262%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4762%" y="437" width="0.0794%" height="15" fill="rgb(242,105,46)" fg:x="321" fg:w="1"/><text x="25.7262%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.7937%" y="405" width="0.1587%" height="15" fill="rgb(206,154,49)" fg:x="325" fg:w="2"/><text x="26.0437%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.8730%" y="389" width="0.0794%" height="15" fill="rgb(239,215,4)" fg:x="326" fg:w="1"/><text x="26.1230%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="26.0317%" y="389" width="0.1587%" height="15" fill="rgb(238,82,17)" fg:x="328" fg:w="2"/><text x="26.2817%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="26.1905%" y="389" width="0.2381%" height="15" fill="rgb(242,49,30)" fg:x="330" fg:w="3"/><text x="26.4405%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="26.1905%" y="373" width="0.2381%" height="15" fill="rgb(248,5,16)" fg:x="330" fg:w="3"/><text x="26.4405%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.2698%" y="357" width="0.1587%" height="15" fill="rgb(237,138,32)" fg:x="331" fg:w="2"/><text x="26.5198%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.2698%" y="341" width="0.1587%" height="15" fill="rgb(235,79,45)" fg:x="331" fg:w="2"/><text x="26.5198%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.79%)</title><rect x="25.7143%" y="453" width="0.7937%" height="15" fill="rgb(213,105,25)" fg:x="324" fg:w="10"/><text x="25.9643%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.79%)</title><rect x="25.7143%" y="437" width="0.7937%" height="15" fill="rgb(251,131,7)" fg:x="324" fg:w="10"/><text x="25.9643%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.79%)</title><rect x="25.7143%" y="421" width="0.7937%" height="15" fill="rgb(211,155,7)" fg:x="324" fg:w="10"/><text x="25.9643%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="25.9524%" y="405" width="0.5556%" height="15" fill="rgb(243,70,15)" fg:x="327" fg:w="7"/><text x="26.2024%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4286%" y="389" width="0.0794%" height="15" fill="rgb(215,171,2)" fg:x="333" fg:w="1"/><text x="26.6786%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.19%)</title><rect x="25.3968%" y="485" width="1.1905%" height="15" fill="rgb(244,121,35)" fg:x="320" fg:w="15"/><text x="25.6468%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.03%)</title><rect x="25.5556%" y="469" width="1.0317%" height="15" fill="rgb(249,147,17)" fg:x="322" fg:w="13"/><text x="25.8056%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5079%" y="453" width="0.0794%" height="15" fill="rgb(241,193,52)" fg:x="334" fg:w="1"/><text x="26.7579%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 1.98%)</title><rect x="24.7619%" y="517" width="1.9841%" height="15" fill="rgb(217,159,39)" fg:x="312" fg:w="25"/><text x="25.0119%" y="527.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.51%)</title><rect x="25.2381%" y="501" width="1.5079%" height="15" fill="rgb(248,110,0)" fg:x="318" fg:w="19"/><text x="25.4881%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.5873%" y="485" width="0.1587%" height="15" fill="rgb(233,227,0)" fg:x="335" fg:w="2"/><text x="26.8373%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 2.06%)</title><rect x="24.7619%" y="533" width="2.0635%" height="15" fill="rgb(252,55,2)" fg:x="312" fg:w="26"/><text x="25.0119%" y="543.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="26.7460%" y="517" width="0.0794%" height="15" fill="rgb(224,194,24)" fg:x="337" fg:w="1"/><text x="26.9960%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.7460%" y="501" width="0.0794%" height="15" fill="rgb(247,5,33)" fg:x="337" fg:w="1"/><text x="26.9960%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.8254%" y="533" width="0.1587%" height="15" fill="rgb(242,66,47)" fg:x="338" fg:w="2"/><text x="27.0754%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0635%" y="501" width="0.0794%" height="15" fill="rgb(213,107,12)" fg:x="341" fg:w="1"/><text x="27.3135%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (45 samples, 3.57%)</title><rect x="23.6508%" y="581" width="3.5714%" height="15" fill="rgb(206,131,1)" fg:x="298" fg:w="45"/><text x="23.9008%" y="591.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (43 samples, 3.41%)</title><rect x="23.8095%" y="565" width="3.4127%" height="15" fill="rgb(214,9,36)" fg:x="300" fg:w="43"/><text x="24.0595%" y="575.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (32 samples, 2.54%)</title><rect x="24.6825%" y="549" width="2.5397%" height="15" fill="rgb(251,215,18)" fg:x="311" fg:w="32"/><text x="24.9325%" y="559.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="26.9841%" y="533" width="0.2381%" height="15" fill="rgb(251,64,9)" fg:x="340" fg:w="3"/><text x="27.2341%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.0635%" y="517" width="0.1587%" height="15" fill="rgb(235,68,21)" fg:x="341" fg:w="2"/><text x="27.3135%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="27.1429%" y="501" width="0.0794%" height="15" fill="rgb(240,69,38)" fg:x="342" fg:w="1"/><text x="27.3929%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="27.5397%" y="405" width="0.1587%" height="15" fill="rgb(231,18,27)" fg:x="347" fg:w="2"/><text x="27.7897%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="27.4603%" y="437" width="0.3175%" height="15" fill="rgb(215,154,25)" fg:x="346" fg:w="4"/><text x="27.7103%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="27.4603%" y="421" width="0.3175%" height="15" fill="rgb(224,33,46)" fg:x="346" fg:w="4"/><text x="27.7103%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="27.6984%" y="405" width="0.0794%" height="15" fill="rgb(248,191,53)" fg:x="349" fg:w="1"/><text x="27.9484%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6984%" y="389" width="0.0794%" height="15" fill="rgb(231,3,37)" fg:x="349" fg:w="1"/><text x="27.9484%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="27.9365%" y="341" width="0.0794%" height="15" fill="rgb(209,152,2)" fg:x="352" fg:w="1"/><text x="28.1865%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="27.9365%" y="357" width="0.1587%" height="15" fill="rgb(212,208,43)" fg:x="352" fg:w="2"/><text x="28.1865%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="28.0159%" y="341" width="0.0794%" height="15" fill="rgb(208,60,49)" fg:x="353" fg:w="1"/><text x="28.2659%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.0952%" y="357" width="0.0794%" height="15" fill="rgb(245,135,6)" fg:x="354" fg:w="1"/><text x="28.3452%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="28.0952%" y="341" width="0.0794%" height="15" fill="rgb(243,86,23)" fg:x="354" fg:w="1"/><text x="28.3452%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="27.9365%" y="389" width="0.4762%" height="15" fill="rgb(223,7,20)" fg:x="352" fg:w="6"/><text x="28.1865%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="27.9365%" y="373" width="0.4762%" height="15" fill="rgb(212,182,17)" fg:x="352" fg:w="6"/><text x="28.1865%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="28.1746%" y="357" width="0.2381%" height="15" fill="rgb(237,94,50)" fg:x="355" fg:w="3"/><text x="28.4246%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.2540%" y="341" width="0.1587%" height="15" fill="rgb(232,185,44)" fg:x="356" fg:w="2"/><text x="28.5040%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.2540%" y="325" width="0.1587%" height="15" fill="rgb(205,50,36)" fg:x="356" fg:w="2"/><text x="28.5040%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.63%)</title><rect x="27.9365%" y="421" width="0.6349%" height="15" fill="rgb(252,32,32)" fg:x="352" fg:w="8"/><text x="28.1865%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="27.9365%" y="405" width="0.6349%" height="15" fill="rgb(241,123,33)" fg:x="352" fg:w="8"/><text x="28.1865%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.4127%" y="389" width="0.1587%" height="15" fill="rgb(212,140,16)" fg:x="358" fg:w="2"/><text x="28.6627%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4921%" y="373" width="0.0794%" height="15" fill="rgb(247,132,5)" fg:x="359" fg:w="1"/><text x="28.7421%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4921%" y="357" width="0.0794%" height="15" fill="rgb(209,137,38)" fg:x="359" fg:w="1"/><text x="28.7421%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.27%)</title><rect x="27.3810%" y="453" width="1.2698%" height="15" fill="rgb(248,32,42)" fg:x="345" fg:w="16"/><text x="27.6310%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.87%)</title><rect x="27.7778%" y="437" width="0.8730%" height="15" fill="rgb(216,188,40)" fg:x="350" fg:w="11"/><text x="28.0278%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.5714%" y="421" width="0.0794%" height="15" fill="rgb(209,127,53)" fg:x="360" fg:w="1"/><text x="28.8214%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.43%)</title><rect x="27.3016%" y="485" width="1.4286%" height="15" fill="rgb(254,162,9)" fg:x="344" fg:w="18"/><text x="27.5516%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.35%)</title><rect x="27.3810%" y="469" width="1.3492%" height="15" fill="rgb(219,183,10)" fg:x="345" fg:w="17"/><text x="27.6310%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.6508%" y="453" width="0.0794%" height="15" fill="rgb(217,192,21)" fg:x="361" fg:w="1"/><text x="28.9008%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="28.7302%" y="485" width="0.2381%" height="15" fill="rgb(251,89,27)" fg:x="362" fg:w="3"/><text x="28.9802%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.8889%" y="469" width="0.0794%" height="15" fill="rgb(253,55,28)" fg:x="364" fg:w="1"/><text x="29.1389%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.83%)</title><rect x="27.2222%" y="517" width="1.8254%" height="15" fill="rgb(216,159,8)" fg:x="343" fg:w="23"/><text x="27.4722%" y="527.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.83%)</title><rect x="27.2222%" y="501" width="1.8254%" height="15" fill="rgb(231,228,44)" fg:x="343" fg:w="23"/><text x="27.4722%" y="511.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.9683%" y="485" width="0.0794%" height="15" fill="rgb(247,34,48)" fg:x="365" fg:w="1"/><text x="29.2183%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.9683%" y="469" width="0.0794%" height="15" fill="rgb(247,222,18)" fg:x="365" fg:w="1"/><text x="29.2183%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.9683%" y="453" width="0.0794%" height="15" fill="rgb(227,49,4)" fg:x="365" fg:w="1"/><text x="29.2183%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="29.0476%" y="517" width="0.1587%" height="15" fill="rgb(219,189,53)" fg:x="366" fg:w="2"/><text x="29.2976%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="29.0476%" y="501" width="0.1587%" height="15" fill="rgb(241,160,53)" fg:x="366" fg:w="2"/><text x="29.2976%" y="511.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (136 samples, 10.79%)</title><rect x="18.6508%" y="629" width="10.7937%" height="15" fill="rgb(227,115,4)" fg:x="235" fg:w="136"/><text x="18.9008%" y="639.50">engine::internal..</text></g><g><title>engine::session::SavesEntities::check_for_changes (136 samples, 10.79%)</title><rect x="18.6508%" y="613" width="10.7937%" height="15" fill="rgb(215,28,28)" fg:x="235" fg:w="136"/><text x="18.9008%" y="623.50">engine::session:..</text></g><g><title>kernel::model::any_entity_changes (101 samples, 8.02%)</title><rect x="21.4286%" y="597" width="8.0159%" height="15" fill="rgb(237,143,40)" fg:x="270" fg:w="101"/><text x="21.6786%" y="607.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (28 samples, 2.22%)</title><rect x="27.2222%" y="581" width="2.2222%" height="15" fill="rgb(205,107,24)" fg:x="343" fg:w="28"/><text x="27.4722%" y="591.50">s..</text></g><g><title>serde_json::de::from_trait (28 samples, 2.22%)</title><rect x="27.2222%" y="565" width="2.2222%" height="15" fill="rgb(209,112,35)" fg:x="343" fg:w="28"/><text x="27.4722%" y="575.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.22%)</title><rect x="27.2222%" y="549" width="2.2222%" height="15" fill="rgb(206,135,5)" fg:x="343" fg:w="28"/><text x="27.4722%" y="559.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.22%)</title><rect x="27.2222%" y="533" width="2.2222%" height="15" fill="rgb(227,217,38)" fg:x="343" fg:w="28"/><text x="27.4722%" y="543.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="29.2063%" y="517" width="0.2381%" height="15" fill="rgb(205,0,41)" fg:x="368" fg:w="3"/><text x="29.4563%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.2857%" y="501" width="0.1587%" height="15" fill="rgb(220,20,40)" fg:x="369" fg:w="2"/><text x="29.5357%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.3651%" y="485" width="0.0794%" height="15" fill="rgb(216,145,3)" fg:x="370" fg:w="1"/><text x="29.6151%" y="495.50"></text></g><g><title>engine::session::Session::close (152 samples, 12.06%)</title><rect x="17.4603%" y="661" width="12.0635%" height="15" fill="rgb(207,130,51)" fg:x="220" fg:w="152"/><text x="17.7103%" y="671.50">engine::session::S..</text></g><g><title>engine::session::Session::save_entity_changes (142 samples, 11.27%)</title><rect x="18.2540%" y="645" width="11.2698%" height="15" fill="rgb(252,93,13)" fg:x="230" fg:w="142"/><text x="18.5040%" y="655.50">engine::session::..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="29.4444%" y="629" width="0.0794%" height="15" fill="rgb(210,105,15)" fg:x="371" fg:w="1"/><text x="29.6944%" y="639.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="29.4444%" y="613" width="0.0794%" height="15" fill="rgb(212,126,31)" fg:x="371" fg:w="1"/><text x="29.6944%" y="623.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="29.4444%" y="597" width="0.0794%" height="15" fill="rgb(241,167,46)" fg:x="371" fg:w="1"/><text x="29.6944%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="29.4444%" y="581" width="0.0794%" height="15" fill="rgb(217,143,19)" fg:x="371" fg:w="1"/><text x="29.6944%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="29.4444%" y="565" width="0.0794%" height="15" fill="rgb(235,117,33)" fg:x="371" fg:w="1"/><text x="29.6944%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="29.4444%" y="549" width="0.0794%" height="15" fill="rgb(247,95,6)" fg:x="371" fg:w="1"/><text x="29.6944%" y="559.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="29.4444%" y="533" width="0.0794%" height="15" fill="rgb(243,206,43)" fg:x="371" fg:w="1"/><text x="29.6944%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="29.9206%" y="581" width="0.1587%" height="15" fill="rgb(229,65,54)" fg:x="377" fg:w="2"/><text x="30.1706%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.0000%" y="565" width="0.0794%" height="15" fill="rgb(247,137,34)" fg:x="378" fg:w="1"/><text x="30.2500%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="30.3175%" y="517" width="0.0794%" height="15" fill="rgb(245,174,44)" fg:x="382" fg:w="1"/><text x="30.5675%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3175%" y="501" width="0.0794%" height="15" fill="rgb(223,64,15)" fg:x="382" fg:w="1"/><text x="30.5675%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="30.3968%" y="501" width="0.0794%" height="15" fill="rgb(243,153,36)" fg:x="383" fg:w="1"/><text x="30.6468%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="30.3968%" y="485" width="0.0794%" height="15" fill="rgb(252,23,4)" fg:x="383" fg:w="1"/><text x="30.6468%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3968%" y="469" width="0.0794%" height="15" fill="rgb(209,132,13)" fg:x="383" fg:w="1"/><text x="30.6468%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3968%" y="453" width="0.0794%" height="15" fill="rgb(209,196,21)" fg:x="383" fg:w="1"/><text x="30.6468%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.3968%" y="437" width="0.0794%" height="15" fill="rgb(252,197,1)" fg:x="383" fg:w="1"/><text x="30.6468%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.3968%" y="421" width="0.0794%" height="15" fill="rgb(229,42,46)" fg:x="383" fg:w="1"/><text x="30.6468%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.3968%" y="405" width="0.0794%" height="15" fill="rgb(219,85,8)" fg:x="383" fg:w="1"/><text x="30.6468%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.3968%" y="389" width="0.0794%" height="15" fill="rgb(223,185,14)" fg:x="383" fg:w="1"/><text x="30.6468%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.3968%" y="373" width="0.0794%" height="15" fill="rgb(217,196,18)" fg:x="383" fg:w="1"/><text x="30.6468%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.3968%" y="357" width="0.0794%" height="15" fill="rgb(220,122,37)" fg:x="383" fg:w="1"/><text x="30.6468%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.3968%" y="341" width="0.0794%" height="15" fill="rgb(236,135,33)" fg:x="383" fg:w="1"/><text x="30.6468%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.3968%" y="325" width="0.0794%" height="15" fill="rgb(222,86,54)" fg:x="383" fg:w="1"/><text x="30.6468%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.3968%" y="309" width="0.0794%" height="15" fill="rgb(227,42,22)" fg:x="383" fg:w="1"/><text x="30.6468%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3968%" y="293" width="0.0794%" height="15" fill="rgb(243,101,27)" fg:x="383" fg:w="1"/><text x="30.6468%" y="303.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="30.4762%" y="485" width="0.0794%" height="15" fill="rgb(229,100,8)" fg:x="384" fg:w="1"/><text x="30.7262%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.4762%" y="469" width="0.0794%" height="15" fill="rgb(252,68,10)" fg:x="384" fg:w="1"/><text x="30.7262%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.4762%" y="501" width="0.1587%" height="15" fill="rgb(219,19,31)" fg:x="384" fg:w="2"/><text x="30.7262%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.5556%" y="485" width="0.0794%" height="15" fill="rgb(246,150,44)" fg:x="385" fg:w="1"/><text x="30.8056%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.5556%" y="469" width="0.0794%" height="15" fill="rgb(211,14,39)" fg:x="385" fg:w="1"/><text x="30.8056%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5556%" y="453" width="0.0794%" height="15" fill="rgb(221,98,29)" fg:x="385" fg:w="1"/><text x="30.8056%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5556%" y="437" width="0.0794%" height="15" fill="rgb(221,70,26)" fg:x="385" fg:w="1"/><text x="30.8056%" y="447.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="30.6349%" y="501" width="0.0794%" height="15" fill="rgb(236,146,30)" fg:x="386" fg:w="1"/><text x="30.8849%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6349%" y="485" width="0.0794%" height="15" fill="rgb(226,94,34)" fg:x="386" fg:w="1"/><text x="30.8849%" y="495.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="30.7143%" y="485" width="0.1587%" height="15" fill="rgb(248,132,21)" fg:x="387" fg:w="2"/><text x="30.9643%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="30.7143%" y="469" width="0.1587%" height="15" fill="rgb(245,43,50)" fg:x="387" fg:w="2"/><text x="30.9643%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="30.7937%" y="453" width="0.0794%" height="15" fill="rgb(245,132,31)" fg:x="388" fg:w="1"/><text x="31.0437%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7937%" y="437" width="0.0794%" height="15" fill="rgb(230,171,4)" fg:x="388" fg:w="1"/><text x="31.0437%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.8730%" y="453" width="0.0794%" height="15" fill="rgb(235,6,45)" fg:x="389" fg:w="1"/><text x="31.1230%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.71%)</title><rect x="30.3175%" y="549" width="0.7143%" height="15" fill="rgb(220,80,28)" fg:x="382" fg:w="9"/><text x="30.5675%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.71%)</title><rect x="30.3175%" y="533" width="0.7143%" height="15" fill="rgb(242,171,9)" fg:x="382" fg:w="9"/><text x="30.5675%" y="543.50"></text></g><g><title>engine::internal::Entities::add_persisted (8 samples, 0.63%)</title><rect x="30.3968%" y="517" width="0.6349%" height="15" fill="rgb(214,135,29)" fg:x="383" fg:w="8"/><text x="30.6468%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::from_str (4 samples, 0.32%)</title><rect x="30.7143%" y="501" width="0.3175%" height="15" fill="rgb(221,229,16)" fg:x="387" fg:w="4"/><text x="30.9643%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.8730%" y="485" width="0.1587%" height="15" fill="rgb(253,59,46)" fg:x="389" fg:w="2"/><text x="31.1230%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.8730%" y="469" width="0.1587%" height="15" fill="rgb(250,147,20)" fg:x="389" fg:w="2"/><text x="31.1230%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.9524%" y="453" width="0.0794%" height="15" fill="rgb(236,64,48)" fg:x="390" fg:w="1"/><text x="31.2024%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9524%" y="437" width="0.0794%" height="15" fill="rgb(240,37,42)" fg:x="390" fg:w="1"/><text x="31.2024%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="30.9524%" y="421" width="0.0794%" height="15" fill="rgb(220,41,50)" fg:x="390" fg:w="1"/><text x="31.2024%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="30.9524%" y="405" width="0.0794%" height="15" fill="rgb(216,51,14)" fg:x="390" fg:w="1"/><text x="31.2024%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="30.9524%" y="389" width="0.0794%" height="15" fill="rgb(215,83,10)" fg:x="390" fg:w="1"/><text x="31.2024%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="30.9524%" y="373" width="0.0794%" height="15" fill="rgb(206,144,17)" fg:x="390" fg:w="1"/><text x="31.2024%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="30.9524%" y="357" width="0.0794%" height="15" fill="rgb(219,196,37)" fg:x="390" fg:w="1"/><text x="31.2024%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="30.9524%" y="341" width="0.0794%" height="15" fill="rgb(226,135,26)" fg:x="390" fg:w="1"/><text x="31.2024%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="30.9524%" y="325" width="0.0794%" height="15" fill="rgb(237,195,40)" fg:x="390" fg:w="1"/><text x="31.2024%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.9524%" y="309" width="0.0794%" height="15" fill="rgb(228,182,42)" fg:x="390" fg:w="1"/><text x="31.2024%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0317%" y="421" width="0.0794%" height="15" fill="rgb(224,135,50)" fg:x="391" fg:w="1"/><text x="31.2817%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0317%" y="405" width="0.0794%" height="15" fill="rgb(236,215,34)" fg:x="391" fg:w="1"/><text x="31.2817%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.0317%" y="389" width="0.0794%" height="15" fill="rgb(244,213,27)" fg:x="391" fg:w="1"/><text x="31.2817%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.0317%" y="373" width="0.0794%" height="15" fill="rgb(233,37,53)" fg:x="391" fg:w="1"/><text x="31.2817%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.0317%" y="357" width="0.0794%" height="15" fill="rgb(222,132,14)" fg:x="391" fg:w="1"/><text x="31.2817%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.0317%" y="341" width="0.0794%" height="15" fill="rgb(219,202,29)" fg:x="391" fg:w="1"/><text x="31.2817%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.0317%" y="325" width="0.0794%" height="15" fill="rgb(226,157,39)" fg:x="391" fg:w="1"/><text x="31.2817%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.0317%" y="549" width="0.1587%" height="15" fill="rgb(235,213,2)" fg:x="391" fg:w="2"/><text x="31.2817%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.0317%" y="533" width="0.1587%" height="15" fill="rgb(250,121,2)" fg:x="391" fg:w="2"/><text x="31.2817%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.0317%" y="517" width="0.1587%" height="15" fill="rgb(206,192,33)" fg:x="391" fg:w="2"/><text x="31.2817%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.0317%" y="501" width="0.1587%" height="15" fill="rgb(240,161,6)" fg:x="391" fg:w="2"/><text x="31.2817%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.0317%" y="485" width="0.1587%" height="15" fill="rgb(246,53,30)" fg:x="391" fg:w="2"/><text x="31.2817%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="31.0317%" y="469" width="0.1587%" height="15" fill="rgb(219,123,43)" fg:x="391" fg:w="2"/><text x="31.2817%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="31.0317%" y="453" width="0.1587%" height="15" fill="rgb(236,53,49)" fg:x="391" fg:w="2"/><text x="31.2817%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="31.0317%" y="437" width="0.1587%" height="15" fill="rgb(241,156,1)" fg:x="391" fg:w="2"/><text x="31.2817%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.1111%" y="421" width="0.0794%" height="15" fill="rgb(209,73,26)" fg:x="392" fg:w="1"/><text x="31.3611%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.1111%" y="405" width="0.0794%" height="15" fill="rgb(206,114,3)" fg:x="392" fg:w="1"/><text x="31.3611%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="31.1905%" y="549" width="0.0794%" height="15" fill="rgb(230,214,9)" fg:x="393" fg:w="1"/><text x="31.4405%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1905%" y="533" width="0.0794%" height="15" fill="rgb(240,184,46)" fg:x="393" fg:w="1"/><text x="31.4405%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.2698%" y="517" width="0.0794%" height="15" fill="rgb(242,169,54)" fg:x="394" fg:w="1"/><text x="31.5198%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (19 samples, 1.51%)</title><rect x="29.9206%" y="597" width="1.5079%" height="15" fill="rgb(207,168,50)" fg:x="377" fg:w="19"/><text x="30.1706%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.35%)</title><rect x="30.0794%" y="581" width="1.3492%" height="15" fill="rgb(240,114,2)" fg:x="379" fg:w="17"/><text x="30.3294%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.27%)</title><rect x="30.1587%" y="565" width="1.2698%" height="15" fill="rgb(211,17,40)" fg:x="380" fg:w="16"/><text x="30.4087%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.2698%" y="549" width="0.1587%" height="15" fill="rgb(235,97,36)" fg:x="394" fg:w="2"/><text x="31.5198%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.2698%" y="533" width="0.1587%" height="15" fill="rgb(208,164,11)" fg:x="394" fg:w="2"/><text x="31.5198%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.3492%" y="517" width="0.0794%" height="15" fill="rgb(242,11,17)" fg:x="395" fg:w="1"/><text x="31.5992%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.3492%" y="501" width="0.0794%" height="15" fill="rgb(215,86,33)" fg:x="395" fg:w="1"/><text x="31.5992%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3492%" y="485" width="0.0794%" height="15" fill="rgb(245,185,28)" fg:x="395" fg:w="1"/><text x="31.5992%" y="495.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="31.4286%" y="597" width="0.0794%" height="15" fill="rgb(231,89,42)" fg:x="396" fg:w="1"/><text x="31.6786%" y="607.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="31.4286%" y="581" width="0.0794%" height="15" fill="rgb(210,18,47)" fg:x="396" fg:w="1"/><text x="31.6786%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="31.4286%" y="565" width="0.0794%" height="15" fill="rgb(214,84,8)" fg:x="396" fg:w="1"/><text x="31.6786%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="31.4286%" y="549" width="0.0794%" height="15" fill="rgb(214,222,23)" fg:x="396" fg:w="1"/><text x="31.6786%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.4286%" y="533" width="0.0794%" height="15" fill="rgb(213,104,21)" fg:x="396" fg:w="1"/><text x="31.6786%" y="543.50"></text></g><g><title>&lt;engine::perform::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (22 samples, 1.75%)</title><rect x="29.8413%" y="613" width="1.7460%" height="15" fill="rgb(238,138,6)" fg:x="376" fg:w="22"/><text x="30.0913%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="31.5079%" y="597" width="0.0794%" height="15" fill="rgb(205,167,50)" fg:x="397" fg:w="1"/><text x="31.7579%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5079%" y="581" width="0.0794%" height="15" fill="rgb(230,105,27)" fg:x="397" fg:w="1"/><text x="31.7579%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.6667%" y="581" width="0.0794%" height="15" fill="rgb(222,97,48)" fg:x="399" fg:w="1"/><text x="31.9167%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="32.2222%" y="469" width="0.1587%" height="15" fill="rgb(222,197,14)" fg:x="406" fg:w="2"/><text x="32.4722%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3016%" y="453" width="0.0794%" height="15" fill="rgb(210,105,47)" fg:x="407" fg:w="1"/><text x="32.5516%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="32.1429%" y="485" width="0.3968%" height="15" fill="rgb(238,158,19)" fg:x="405" fg:w="5"/><text x="32.3929%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.3810%" y="469" width="0.1587%" height="15" fill="rgb(226,176,23)" fg:x="408" fg:w="2"/><text x="32.6310%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="32.1429%" y="501" width="0.5556%" height="15" fill="rgb(208,79,31)" fg:x="405" fg:w="7"/><text x="32.3929%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.5397%" y="485" width="0.1587%" height="15" fill="rgb(221,154,21)" fg:x="410" fg:w="2"/><text x="32.7897%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.95%)</title><rect x="32.0635%" y="517" width="0.9524%" height="15" fill="rgb(213,61,41)" fg:x="404" fg:w="12"/><text x="32.3135%" y="527.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="32.6984%" y="501" width="0.3175%" height="15" fill="rgb(215,28,33)" fg:x="412" fg:w="4"/><text x="32.9484%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="33.0159%" y="517" width="0.2381%" height="15" fill="rgb(231,139,26)" fg:x="416" fg:w="3"/><text x="33.2659%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.43%)</title><rect x="31.9048%" y="533" width="1.4286%" height="15" fill="rgb(232,159,16)" fg:x="402" fg:w="18"/><text x="32.1548%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="33.2540%" y="517" width="0.0794%" height="15" fill="rgb(233,80,10)" fg:x="419" fg:w="1"/><text x="33.5040%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.2540%" y="501" width="0.0794%" height="15" fill="rgb(208,147,29)" fg:x="419" fg:w="1"/><text x="33.5040%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.75%)</title><rect x="31.7460%" y="549" width="1.7460%" height="15" fill="rgb(213,10,12)" fg:x="400" fg:w="22"/><text x="31.9960%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.3333%" y="533" width="0.1587%" height="15" fill="rgb(231,218,13)" fg:x="420" fg:w="2"/><text x="33.5833%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.90%)</title><rect x="31.7460%" y="565" width="1.9048%" height="15" fill="rgb(244,199,44)" fg:x="400" fg:w="24"/><text x="31.9960%" y="575.50">&lt;..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.4921%" y="549" width="0.1587%" height="15" fill="rgb(240,144,53)" fg:x="422" fg:w="2"/><text x="33.7421%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (26 samples, 2.06%)</title><rect x="31.7460%" y="581" width="2.0635%" height="15" fill="rgb(223,57,28)" fg:x="400" fg:w="26"/><text x="31.9960%" y="591.50">c..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.6508%" y="565" width="0.1587%" height="15" fill="rgb(213,134,38)" fg:x="424" fg:w="2"/><text x="33.9008%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.9683%" y="469" width="0.0794%" height="15" fill="rgb(251,182,42)" fg:x="428" fg:w="1"/><text x="34.2183%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.9683%" y="453" width="0.0794%" height="15" fill="rgb(229,93,13)" fg:x="428" fg:w="1"/><text x="34.2183%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.9683%" y="437" width="0.0794%" height="15" fill="rgb(234,171,3)" fg:x="428" fg:w="1"/><text x="34.2183%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.9683%" y="421" width="0.0794%" height="15" fill="rgb(241,105,32)" fg:x="428" fg:w="1"/><text x="34.2183%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.9683%" y="405" width="0.0794%" height="15" fill="rgb(221,66,3)" fg:x="428" fg:w="1"/><text x="34.2183%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.9683%" y="389" width="0.0794%" height="15" fill="rgb(248,155,29)" fg:x="428" fg:w="1"/><text x="34.2183%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="33.8889%" y="549" width="0.2381%" height="15" fill="rgb(231,31,5)" fg:x="427" fg:w="3"/><text x="34.1389%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.9683%" y="533" width="0.1587%" height="15" fill="rgb(213,188,31)" fg:x="428" fg:w="2"/><text x="34.2183%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="33.9683%" y="517" width="0.1587%" height="15" fill="rgb(212,104,33)" fg:x="428" fg:w="2"/><text x="34.2183%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="33.9683%" y="501" width="0.1587%" height="15" fill="rgb(254,77,51)" fg:x="428" fg:w="2"/><text x="34.2183%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="33.9683%" y="485" width="0.1587%" height="15" fill="rgb(234,39,26)" fg:x="428" fg:w="2"/><text x="34.2183%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.0476%" y="469" width="0.0794%" height="15" fill="rgb(208,88,36)" fg:x="429" fg:w="1"/><text x="34.2976%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.0476%" y="453" width="0.0794%" height="15" fill="rgb(243,222,10)" fg:x="429" fg:w="1"/><text x="34.2976%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="34.1270%" y="533" width="0.0794%" height="15" fill="rgb(218,133,52)" fg:x="430" fg:w="1"/><text x="34.3770%" y="543.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="34.2063%" y="533" width="0.5556%" height="15" fill="rgb(222,25,26)" fg:x="431" fg:w="7"/><text x="34.4563%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.16%)</title><rect x="34.7619%" y="533" width="0.1587%" height="15" fill="rgb(243,174,24)" fg:x="438" fg:w="2"/><text x="35.0119%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.87%)</title><rect x="34.1270%" y="549" width="0.8730%" height="15" fill="rgb(233,188,52)" fg:x="430" fg:w="11"/><text x="34.3770%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="34.9206%" y="533" width="0.0794%" height="15" fill="rgb(208,89,14)" fg:x="440" fg:w="1"/><text x="35.1706%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="34.9206%" y="517" width="0.0794%" height="15" fill="rgb(205,204,21)" fg:x="440" fg:w="1"/><text x="35.1706%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.9206%" y="501" width="0.0794%" height="15" fill="rgb(246,39,28)" fg:x="440" fg:w="1"/><text x="35.1706%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.9206%" y="485" width="0.0794%" height="15" fill="rgb(235,71,19)" fg:x="440" fg:w="1"/><text x="35.1706%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.9206%" y="469" width="0.0794%" height="15" fill="rgb(211,62,39)" fg:x="440" fg:w="1"/><text x="35.1706%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="34.9206%" y="453" width="0.0794%" height="15" fill="rgb(246,118,20)" fg:x="440" fg:w="1"/><text x="35.1706%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="35.0000%" y="549" width="0.0794%" height="15" fill="rgb(230,82,12)" fg:x="441" fg:w="1"/><text x="35.2500%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="35.0000%" y="533" width="0.0794%" height="15" fill="rgb(205,212,34)" fg:x="441" fg:w="1"/><text x="35.2500%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0794%" y="501" width="0.0794%" height="15" fill="rgb(239,90,1)" fg:x="442" fg:w="1"/><text x="35.3294%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="35.3175%" y="485" width="0.0794%" height="15" fill="rgb(225,198,50)" fg:x="445" fg:w="1"/><text x="35.5675%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="35.7937%" y="421" width="0.0794%" height="15" fill="rgb(227,208,48)" fg:x="451" fg:w="1"/><text x="36.0437%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.8730%" y="405" width="0.0794%" height="15" fill="rgb(238,134,41)" fg:x="452" fg:w="1"/><text x="36.1230%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.8730%" y="389" width="0.0794%" height="15" fill="rgb(241,58,39)" fg:x="452" fg:w="1"/><text x="36.1230%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.8730%" y="373" width="0.0794%" height="15" fill="rgb(214,126,4)" fg:x="452" fg:w="1"/><text x="36.1230%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.8730%" y="357" width="0.0794%" height="15" fill="rgb(235,149,4)" fg:x="452" fg:w="1"/><text x="36.1230%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.8730%" y="341" width="0.0794%" height="15" fill="rgb(236,59,29)" fg:x="452" fg:w="1"/><text x="36.1230%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.8730%" y="325" width="0.0794%" height="15" fill="rgb(246,11,33)" fg:x="452" fg:w="1"/><text x="36.1230%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.8730%" y="309" width="0.0794%" height="15" fill="rgb(232,180,35)" fg:x="452" fg:w="1"/><text x="36.1230%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.8730%" y="293" width="0.0794%" height="15" fill="rgb(220,35,37)" fg:x="452" fg:w="1"/><text x="36.1230%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.8730%" y="277" width="0.0794%" height="15" fill="rgb(238,107,48)" fg:x="452" fg:w="1"/><text x="36.1230%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.8730%" y="261" width="0.0794%" height="15" fill="rgb(205,65,21)" fg:x="452" fg:w="1"/><text x="36.1230%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.8730%" y="245" width="0.0794%" height="15" fill="rgb(246,138,48)" fg:x="452" fg:w="1"/><text x="36.1230%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.8730%" y="229" width="0.0794%" height="15" fill="rgb(209,220,47)" fg:x="452" fg:w="1"/><text x="36.1230%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.63%)</title><rect x="35.6349%" y="469" width="0.6349%" height="15" fill="rgb(222,162,49)" fg:x="449" fg:w="8"/><text x="35.8849%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (8 samples, 0.63%)</title><rect x="35.6349%" y="453" width="0.6349%" height="15" fill="rgb(243,123,11)" fg:x="449" fg:w="8"/><text x="35.8849%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (7 samples, 0.56%)</title><rect x="35.7143%" y="437" width="0.5556%" height="15" fill="rgb(221,229,41)" fg:x="450" fg:w="7"/><text x="35.9643%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="35.8730%" y="421" width="0.3968%" height="15" fill="rgb(216,68,4)" fg:x="452" fg:w="5"/><text x="36.1230%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="35.9524%" y="405" width="0.3175%" height="15" fill="rgb(207,88,35)" fg:x="453" fg:w="4"/><text x="36.2024%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="35.9524%" y="389" width="0.3175%" height="15" fill="rgb(252,2,5)" fg:x="453" fg:w="4"/><text x="36.2024%" y="399.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="35.9524%" y="373" width="0.3175%" height="15" fill="rgb(209,173,7)" fg:x="453" fg:w="4"/><text x="36.2024%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="35.9524%" y="357" width="0.3175%" height="15" fill="rgb(210,198,52)" fg:x="453" fg:w="4"/><text x="36.2024%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="35.9524%" y="341" width="0.3175%" height="15" fill="rgb(228,152,32)" fg:x="453" fg:w="4"/><text x="36.2024%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="35.9524%" y="325" width="0.3175%" height="15" fill="rgb(249,98,29)" fg:x="453" fg:w="4"/><text x="36.2024%" y="335.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="36.0317%" y="309" width="0.2381%" height="15" fill="rgb(205,148,48)" fg:x="454" fg:w="3"/><text x="36.2817%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="36.0317%" y="293" width="0.2381%" height="15" fill="rgb(236,69,34)" fg:x="454" fg:w="3"/><text x="36.2817%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="36.0317%" y="277" width="0.2381%" height="15" fill="rgb(220,151,41)" fg:x="454" fg:w="3"/><text x="36.2817%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="36.0317%" y="261" width="0.2381%" height="15" fill="rgb(254,106,24)" fg:x="454" fg:w="3"/><text x="36.2817%" y="271.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="36.1111%" y="245" width="0.1587%" height="15" fill="rgb(210,37,48)" fg:x="455" fg:w="2"/><text x="36.3611%" y="255.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="36.1111%" y="229" width="0.1587%" height="15" fill="rgb(254,131,5)" fg:x="455" fg:w="2"/><text x="36.3611%" y="239.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="36.1905%" y="213" width="0.0794%" height="15" fill="rgb(216,55,41)" fg:x="456" fg:w="1"/><text x="36.4405%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.4286%" y="325" width="0.0794%" height="15" fill="rgb(250,35,31)" fg:x="459" fg:w="1"/><text x="36.6786%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="36.4286%" y="309" width="0.0794%" height="15" fill="rgb(207,124,33)" fg:x="459" fg:w="1"/><text x="36.6786%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.4286%" y="293" width="0.0794%" height="15" fill="rgb(249,175,17)" fg:x="459" fg:w="1"/><text x="36.6786%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.4286%" y="277" width="0.0794%" height="15" fill="rgb(224,175,39)" fg:x="459" fg:w="1"/><text x="36.6786%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.4286%" y="261" width="0.0794%" height="15" fill="rgb(208,67,49)" fg:x="459" fg:w="1"/><text x="36.6786%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.4286%" y="245" width="0.0794%" height="15" fill="rgb(222,188,41)" fg:x="459" fg:w="1"/><text x="36.6786%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.4286%" y="229" width="0.0794%" height="15" fill="rgb(243,213,30)" fg:x="459" fg:w="1"/><text x="36.6786%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.4286%" y="213" width="0.0794%" height="15" fill="rgb(253,100,45)" fg:x="459" fg:w="1"/><text x="36.6786%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="36.4286%" y="357" width="0.1587%" height="15" fill="rgb(226,24,44)" fg:x="459" fg:w="2"/><text x="36.6786%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="36.4286%" y="341" width="0.1587%" height="15" fill="rgb(215,41,24)" fg:x="459" fg:w="2"/><text x="36.6786%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="36.5079%" y="325" width="0.0794%" height="15" fill="rgb(254,53,33)" fg:x="460" fg:w="1"/><text x="36.7579%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="36.5079%" y="309" width="0.0794%" height="15" fill="rgb(242,103,10)" fg:x="460" fg:w="1"/><text x="36.7579%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.5079%" y="293" width="0.0794%" height="15" fill="rgb(246,29,21)" fg:x="460" fg:w="1"/><text x="36.7579%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5079%" y="277" width="0.0794%" height="15" fill="rgb(251,154,1)" fg:x="460" fg:w="1"/><text x="36.7579%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5079%" y="261" width="0.0794%" height="15" fill="rgb(254,212,26)" fg:x="460" fg:w="1"/><text x="36.7579%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5079%" y="245" width="0.0794%" height="15" fill="rgb(251,187,46)" fg:x="460" fg:w="1"/><text x="36.7579%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5079%" y="229" width="0.0794%" height="15" fill="rgb(224,208,14)" fg:x="460" fg:w="1"/><text x="36.7579%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5079%" y="213" width="0.0794%" height="15" fill="rgb(222,176,26)" fg:x="460" fg:w="1"/><text x="36.7579%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.5079%" y="197" width="0.0794%" height="15" fill="rgb(241,219,52)" fg:x="460" fg:w="1"/><text x="36.7579%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.5079%" y="181" width="0.0794%" height="15" fill="rgb(252,198,21)" fg:x="460" fg:w="1"/><text x="36.7579%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.5079%" y="165" width="0.0794%" height="15" fill="rgb(244,196,23)" fg:x="460" fg:w="1"/><text x="36.7579%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5079%" y="149" width="0.0794%" height="15" fill="rgb(239,121,44)" fg:x="460" fg:w="1"/><text x="36.7579%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5079%" y="133" width="0.0794%" height="15" fill="rgb(249,203,23)" fg:x="460" fg:w="1"/><text x="36.7579%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.5079%" y="117" width="0.0794%" height="15" fill="rgb(238,219,10)" fg:x="460" fg:w="1"/><text x="36.7579%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.5079%" y="101" width="0.0794%" height="15" fill="rgb(241,35,46)" fg:x="460" fg:w="1"/><text x="36.7579%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.5079%" y="85" width="0.0794%" height="15" fill="rgb(218,28,6)" fg:x="460" fg:w="1"/><text x="36.7579%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.5079%" y="69" width="0.0794%" height="15" fill="rgb(233,151,50)" fg:x="460" fg:w="1"/><text x="36.7579%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5079%" y="53" width="0.0794%" height="15" fill="rgb(208,57,8)" fg:x="460" fg:w="1"/><text x="36.7579%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="36.5873%" y="341" width="0.0794%" height="15" fill="rgb(253,99,10)" fg:x="461" fg:w="1"/><text x="36.8373%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.5873%" y="325" width="0.0794%" height="15" fill="rgb(237,196,49)" fg:x="461" fg:w="1"/><text x="36.8373%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6667%" y="245" width="0.0794%" height="15" fill="rgb(209,51,3)" fg:x="462" fg:w="1"/><text x="36.9167%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.6667%" y="229" width="0.0794%" height="15" fill="rgb(238,129,10)" fg:x="462" fg:w="1"/><text x="36.9167%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="36.5873%" y="357" width="0.2381%" height="15" fill="rgb(246,201,16)" fg:x="461" fg:w="3"/><text x="36.8373%" y="367.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="36.6667%" y="341" width="0.1587%" height="15" fill="rgb(250,160,20)" fg:x="462" fg:w="2"/><text x="36.9167%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="36.6667%" y="325" width="0.1587%" height="15" fill="rgb(251,107,25)" fg:x="462" fg:w="2"/><text x="36.9167%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.6667%" y="309" width="0.1587%" height="15" fill="rgb(212,103,39)" fg:x="462" fg:w="2"/><text x="36.9167%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.6667%" y="293" width="0.1587%" height="15" fill="rgb(207,9,29)" fg:x="462" fg:w="2"/><text x="36.9167%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.6667%" y="277" width="0.1587%" height="15" fill="rgb(227,84,3)" fg:x="462" fg:w="2"/><text x="36.9167%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.6667%" y="261" width="0.1587%" height="15" fill="rgb(242,194,7)" fg:x="462" fg:w="2"/><text x="36.9167%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7460%" y="245" width="0.0794%" height="15" fill="rgb(230,40,4)" fg:x="463" fg:w="1"/><text x="36.9960%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7460%" y="229" width="0.0794%" height="15" fill="rgb(243,229,33)" fg:x="463" fg:w="1"/><text x="36.9960%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.7460%" y="213" width="0.0794%" height="15" fill="rgb(240,65,24)" fg:x="463" fg:w="1"/><text x="36.9960%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.7460%" y="197" width="0.0794%" height="15" fill="rgb(212,28,20)" fg:x="463" fg:w="1"/><text x="36.9960%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.7460%" y="181" width="0.0794%" height="15" fill="rgb(209,72,3)" fg:x="463" fg:w="1"/><text x="36.9960%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7460%" y="165" width="0.0794%" height="15" fill="rgb(238,170,36)" fg:x="463" fg:w="1"/><text x="36.9960%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7460%" y="149" width="0.0794%" height="15" fill="rgb(236,19,38)" fg:x="463" fg:w="1"/><text x="36.9960%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.7460%" y="133" width="0.0794%" height="15" fill="rgb(230,67,43)" fg:x="463" fg:w="1"/><text x="36.9960%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.7460%" y="117" width="0.0794%" height="15" fill="rgb(227,14,36)" fg:x="463" fg:w="1"/><text x="36.9960%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.7460%" y="101" width="0.0794%" height="15" fill="rgb(247,171,49)" fg:x="463" fg:w="1"/><text x="36.9960%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.7460%" y="85" width="0.0794%" height="15" fill="rgb(235,164,51)" fg:x="463" fg:w="1"/><text x="36.9960%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7460%" y="69" width="0.0794%" height="15" fill="rgb(246,107,20)" fg:x="463" fg:w="1"/><text x="36.9960%" y="79.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.9048%" y="309" width="0.0794%" height="15" fill="rgb(226,88,18)" fg:x="465" fg:w="1"/><text x="37.1548%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9048%" y="293" width="0.0794%" height="15" fill="rgb(235,136,9)" fg:x="465" fg:w="1"/><text x="37.1548%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.9048%" y="277" width="0.0794%" height="15" fill="rgb(209,3,34)" fg:x="465" fg:w="1"/><text x="37.1548%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.9048%" y="261" width="0.0794%" height="15" fill="rgb(213,38,19)" fg:x="465" fg:w="1"/><text x="37.1548%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.9048%" y="245" width="0.0794%" height="15" fill="rgb(254,24,24)" fg:x="465" fg:w="1"/><text x="37.1548%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.9048%" y="229" width="0.0794%" height="15" fill="rgb(219,122,42)" fg:x="465" fg:w="1"/><text x="37.1548%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.9048%" y="213" width="0.0794%" height="15" fill="rgb(205,128,31)" fg:x="465" fg:w="1"/><text x="37.1548%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.9048%" y="197" width="0.0794%" height="15" fill="rgb(212,142,0)" fg:x="465" fg:w="1"/><text x="37.1548%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.9048%" y="181" width="0.0794%" height="15" fill="rgb(211,25,35)" fg:x="465" fg:w="1"/><text x="37.1548%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="36.9048%" y="165" width="0.0794%" height="15" fill="rgb(220,150,53)" fg:x="465" fg:w="1"/><text x="37.1548%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.9048%" y="149" width="0.0794%" height="15" fill="rgb(220,30,24)" fg:x="465" fg:w="1"/><text x="37.1548%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.9048%" y="133" width="0.0794%" height="15" fill="rgb(218,86,23)" fg:x="465" fg:w="1"/><text x="37.1548%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="36.9048%" y="117" width="0.0794%" height="15" fill="rgb(206,62,27)" fg:x="465" fg:w="1"/><text x="37.1548%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.9048%" y="101" width="0.0794%" height="15" fill="rgb(249,174,0)" fg:x="465" fg:w="1"/><text x="37.1548%" y="111.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.63%)</title><rect x="36.4286%" y="405" width="0.6349%" height="15" fill="rgb(246,67,27)" fg:x="459" fg:w="8"/><text x="36.6786%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.63%)</title><rect x="36.4286%" y="389" width="0.6349%" height="15" fill="rgb(250,195,30)" fg:x="459" fg:w="8"/><text x="36.6786%" y="399.50"></text></g><g><title>engine::internal::Entities::add_persisted (8 samples, 0.63%)</title><rect x="36.4286%" y="373" width="0.6349%" height="15" fill="rgb(251,171,50)" fg:x="459" fg:w="8"/><text x="36.6786%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_str (3 samples, 0.24%)</title><rect x="36.8254%" y="357" width="0.2381%" height="15" fill="rgb(236,196,10)" fg:x="464" fg:w="3"/><text x="37.0754%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="36.8254%" y="341" width="0.2381%" height="15" fill="rgb(249,228,52)" fg:x="464" fg:w="3"/><text x="37.0754%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="36.8254%" y="325" width="0.2381%" height="15" fill="rgb(219,60,51)" fg:x="464" fg:w="3"/><text x="37.0754%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9841%" y="309" width="0.0794%" height="15" fill="rgb(240,198,24)" fg:x="466" fg:w="1"/><text x="37.2341%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9841%" y="293" width="0.0794%" height="15" fill="rgb(240,192,40)" fg:x="466" fg:w="1"/><text x="37.2341%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.0635%" y="405" width="0.0794%" height="15" fill="rgb(219,118,5)" fg:x="467" fg:w="1"/><text x="37.3135%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0635%" y="389" width="0.0794%" height="15" fill="rgb(205,202,34)" fg:x="467" fg:w="1"/><text x="37.3135%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0635%" y="373" width="0.0794%" height="15" fill="rgb(234,153,26)" fg:x="467" fg:w="1"/><text x="37.3135%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 1.83%)</title><rect x="35.3968%" y="485" width="1.8254%" height="15" fill="rgb(229,26,29)" fg:x="446" fg:w="23"/><text x="35.6468%" y="495.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (12 samples, 0.95%)</title><rect x="36.2698%" y="469" width="0.9524%" height="15" fill="rgb(237,115,21)" fg:x="457" fg:w="12"/><text x="36.5198%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (12 samples, 0.95%)</title><rect x="36.2698%" y="453" width="0.9524%" height="15" fill="rgb(252,144,15)" fg:x="457" fg:w="12"/><text x="36.5198%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (12 samples, 0.95%)</title><rect x="36.2698%" y="437" width="0.9524%" height="15" fill="rgb(232,26,13)" fg:x="457" fg:w="12"/><text x="36.5198%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.87%)</title><rect x="36.3492%" y="421" width="0.8730%" height="15" fill="rgb(206,44,19)" fg:x="458" fg:w="11"/><text x="36.5992%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.1429%" y="405" width="0.0794%" height="15" fill="rgb(249,159,2)" fg:x="468" fg:w="1"/><text x="37.3929%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.1429%" y="389" width="0.0794%" height="15" fill="rgb(231,5,32)" fg:x="468" fg:w="1"/><text x="37.3929%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.1429%" y="373" width="0.0794%" height="15" fill="rgb(249,210,18)" fg:x="468" fg:w="1"/><text x="37.3929%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.1429%" y="357" width="0.0794%" height="15" fill="rgb(215,223,36)" fg:x="468" fg:w="1"/><text x="37.3929%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1429%" y="341" width="0.0794%" height="15" fill="rgb(245,185,20)" fg:x="468" fg:w="1"/><text x="37.3929%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="37.2222%" y="485" width="0.0794%" height="15" fill="rgb(206,224,11)" fg:x="469" fg:w="1"/><text x="37.4722%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.3810%" y="421" width="0.1587%" height="15" fill="rgb(248,73,42)" fg:x="471" fg:w="2"/><text x="37.6310%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.3810%" y="405" width="0.1587%" height="15" fill="rgb(219,149,31)" fg:x="471" fg:w="2"/><text x="37.6310%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="37.3810%" y="389" width="0.1587%" height="15" fill="rgb(243,104,17)" fg:x="471" fg:w="2"/><text x="37.6310%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="37.3810%" y="373" width="0.1587%" height="15" fill="rgb(244,117,33)" fg:x="471" fg:w="2"/><text x="37.6310%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="37.3810%" y="357" width="0.1587%" height="15" fill="rgb(251,25,47)" fg:x="471" fg:w="2"/><text x="37.6310%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.3810%" y="341" width="0.1587%" height="15" fill="rgb(249,70,13)" fg:x="471" fg:w="2"/><text x="37.6310%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.3810%" y="325" width="0.1587%" height="15" fill="rgb(217,133,18)" fg:x="471" fg:w="2"/><text x="37.6310%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="37.3810%" y="309" width="0.1587%" height="15" fill="rgb(248,97,28)" fg:x="471" fg:w="2"/><text x="37.6310%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="37.3810%" y="293" width="0.1587%" height="15" fill="rgb(237,193,4)" fg:x="471" fg:w="2"/><text x="37.6310%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="37.3810%" y="277" width="0.1587%" height="15" fill="rgb(247,198,45)" fg:x="471" fg:w="2"/><text x="37.6310%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="37.3810%" y="261" width="0.1587%" height="15" fill="rgb(245,2,20)" fg:x="471" fg:w="2"/><text x="37.6310%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.3810%" y="245" width="0.1587%" height="15" fill="rgb(210,71,36)" fg:x="471" fg:w="2"/><text x="37.6310%" y="255.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="37.3016%" y="453" width="0.4762%" height="15" fill="rgb(238,114,30)" fg:x="470" fg:w="6"/><text x="37.5516%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="37.3016%" y="437" width="0.4762%" height="15" fill="rgb(241,200,2)" fg:x="470" fg:w="6"/><text x="37.5516%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="37.5397%" y="421" width="0.2381%" height="15" fill="rgb(232,106,18)" fg:x="473" fg:w="3"/><text x="37.7897%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.5397%" y="405" width="0.2381%" height="15" fill="rgb(211,141,18)" fg:x="473" fg:w="3"/><text x="37.7897%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.6190%" y="389" width="0.1587%" height="15" fill="rgb(224,9,9)" fg:x="474" fg:w="2"/><text x="37.8690%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6984%" y="373" width="0.0794%" height="15" fill="rgb(249,137,46)" fg:x="475" fg:w="1"/><text x="37.9484%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.6984%" y="357" width="0.0794%" height="15" fill="rgb(236,44,45)" fg:x="475" fg:w="1"/><text x="37.9484%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.6984%" y="341" width="0.0794%" height="15" fill="rgb(205,68,40)" fg:x="475" fg:w="1"/><text x="37.9484%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.6984%" y="325" width="0.0794%" height="15" fill="rgb(214,198,49)" fg:x="475" fg:w="1"/><text x="37.9484%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6984%" y="309" width="0.0794%" height="15" fill="rgb(226,140,45)" fg:x="475" fg:w="1"/><text x="37.9484%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6984%" y="293" width="0.0794%" height="15" fill="rgb(209,109,20)" fg:x="475" fg:w="1"/><text x="37.9484%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6984%" y="277" width="0.0794%" height="15" fill="rgb(217,33,46)" fg:x="475" fg:w="1"/><text x="37.9484%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.6984%" y="261" width="0.0794%" height="15" fill="rgb(232,150,33)" fg:x="475" fg:w="1"/><text x="37.9484%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.6984%" y="245" width="0.0794%" height="15" fill="rgb(233,76,25)" fg:x="475" fg:w="1"/><text x="37.9484%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.6984%" y="229" width="0.0794%" height="15" fill="rgb(254,219,23)" fg:x="475" fg:w="1"/><text x="37.9484%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6984%" y="213" width="0.0794%" height="15" fill="rgb(233,108,4)" fg:x="475" fg:w="1"/><text x="37.9484%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="37.7778%" y="453" width="0.0794%" height="15" fill="rgb(229,98,6)" fg:x="476" fg:w="1"/><text x="38.0278%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="37.7778%" y="437" width="0.0794%" height="15" fill="rgb(217,40,27)" fg:x="476" fg:w="1"/><text x="38.0278%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="37.7778%" y="421" width="0.0794%" height="15" fill="rgb(221,35,43)" fg:x="476" fg:w="1"/><text x="38.0278%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="37.7778%" y="405" width="0.0794%" height="15" fill="rgb(212,107,11)" fg:x="476" fg:w="1"/><text x="38.0278%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7778%" y="389" width="0.0794%" height="15" fill="rgb(245,42,44)" fg:x="476" fg:w="1"/><text x="38.0278%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8571%" y="453" width="0.0794%" height="15" fill="rgb(209,31,12)" fg:x="477" fg:w="1"/><text x="38.1071%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.9365%" y="453" width="0.0794%" height="15" fill="rgb(210,228,54)" fg:x="478" fg:w="1"/><text x="38.1865%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="38.0159%" y="453" width="0.0794%" height="15" fill="rgb(241,19,33)" fg:x="479" fg:w="1"/><text x="38.2659%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.0159%" y="437" width="0.0794%" height="15" fill="rgb(229,51,27)" fg:x="479" fg:w="1"/><text x="38.2659%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.0159%" y="421" width="0.0794%" height="15" fill="rgb(214,167,49)" fg:x="479" fg:w="1"/><text x="38.2659%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="38.0159%" y="405" width="0.0794%" height="15" fill="rgb(248,140,47)" fg:x="479" fg:w="1"/><text x="38.2659%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.0159%" y="389" width="0.0794%" height="15" fill="rgb(228,6,51)" fg:x="479" fg:w="1"/><text x="38.2659%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.0159%" y="373" width="0.0794%" height="15" fill="rgb(242,44,53)" fg:x="479" fg:w="1"/><text x="38.2659%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.1746%" y="389" width="0.0794%" height="15" fill="rgb(249,90,50)" fg:x="481" fg:w="1"/><text x="38.4246%" y="399.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (41 samples, 3.25%)</title><rect x="35.1587%" y="501" width="3.2540%" height="15" fill="rgb(222,84,19)" fg:x="443" fg:w="41"/><text x="35.4087%" y="511.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.11%)</title><rect x="37.3016%" y="485" width="1.1111%" height="15" fill="rgb(214,140,12)" fg:x="470" fg:w="14"/><text x="37.5516%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.11%)</title><rect x="37.3016%" y="469" width="1.1111%" height="15" fill="rgb(210,20,43)" fg:x="470" fg:w="14"/><text x="37.5516%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="38.0952%" y="453" width="0.3175%" height="15" fill="rgb(243,1,40)" fg:x="480" fg:w="4"/><text x="38.3452%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="38.0952%" y="437" width="0.3175%" height="15" fill="rgb(224,102,26)" fg:x="480" fg:w="4"/><text x="38.3452%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="38.0952%" y="421" width="0.3175%" height="15" fill="rgb(221,179,1)" fg:x="480" fg:w="4"/><text x="38.3452%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="38.0952%" y="405" width="0.3175%" height="15" fill="rgb(216,209,47)" fg:x="480" fg:w="4"/><text x="38.3452%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="38.2540%" y="389" width="0.1587%" height="15" fill="rgb(251,135,9)" fg:x="482" fg:w="2"/><text x="38.5040%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.2540%" y="373" width="0.1587%" height="15" fill="rgb(242,9,36)" fg:x="482" fg:w="2"/><text x="38.5040%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.2540%" y="357" width="0.1587%" height="15" fill="rgb(249,60,37)" fg:x="482" fg:w="2"/><text x="38.5040%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.3333%" y="341" width="0.0794%" height="15" fill="rgb(230,66,45)" fg:x="483" fg:w="1"/><text x="38.5833%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="38.4921%" y="421" width="0.2381%" height="15" fill="rgb(216,1,47)" fg:x="485" fg:w="3"/><text x="38.7421%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.5714%" y="405" width="0.1587%" height="15" fill="rgb(235,8,23)" fg:x="486" fg:w="2"/><text x="38.8214%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="38.5714%" y="389" width="0.1587%" height="15" fill="rgb(225,136,11)" fg:x="486" fg:w="2"/><text x="38.8214%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="38.5714%" y="373" width="0.1587%" height="15" fill="rgb(228,63,44)" fg:x="486" fg:w="2"/><text x="38.8214%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="38.5714%" y="357" width="0.1587%" height="15" fill="rgb(240,43,52)" fg:x="486" fg:w="2"/><text x="38.8214%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.5714%" y="341" width="0.1587%" height="15" fill="rgb(217,167,36)" fg:x="486" fg:w="2"/><text x="38.8214%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.5714%" y="325" width="0.1587%" height="15" fill="rgb(250,19,6)" fg:x="486" fg:w="2"/><text x="38.8214%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="38.5714%" y="309" width="0.1587%" height="15" fill="rgb(236,60,51)" fg:x="486" fg:w="2"/><text x="38.8214%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="38.5714%" y="293" width="0.1587%" height="15" fill="rgb(222,217,20)" fg:x="486" fg:w="2"/><text x="38.8214%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="38.5714%" y="277" width="0.1587%" height="15" fill="rgb(242,65,52)" fg:x="486" fg:w="2"/><text x="38.8214%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="38.5714%" y="261" width="0.1587%" height="15" fill="rgb(217,5,41)" fg:x="486" fg:w="2"/><text x="38.8214%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.5714%" y="245" width="0.1587%" height="15" fill="rgb(223,208,53)" fg:x="486" fg:w="2"/><text x="38.8214%" y="255.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="38.4127%" y="453" width="0.5556%" height="15" fill="rgb(221,104,30)" fg:x="484" fg:w="7"/><text x="38.6627%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="38.4127%" y="437" width="0.5556%" height="15" fill="rgb(230,210,42)" fg:x="484" fg:w="7"/><text x="38.6627%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="38.7302%" y="421" width="0.2381%" height="15" fill="rgb(206,205,27)" fg:x="488" fg:w="3"/><text x="38.9802%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="38.7302%" y="405" width="0.2381%" height="15" fill="rgb(233,114,38)" fg:x="488" fg:w="3"/><text x="38.9802%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="38.7302%" y="389" width="0.2381%" height="15" fill="rgb(216,174,36)" fg:x="488" fg:w="3"/><text x="38.9802%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.8095%" y="373" width="0.1587%" height="15" fill="rgb(211,30,9)" fg:x="489" fg:w="2"/><text x="39.0595%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="38.8095%" y="357" width="0.1587%" height="15" fill="rgb(216,8,21)" fg:x="489" fg:w="2"/><text x="39.0595%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="38.8095%" y="341" width="0.1587%" height="15" fill="rgb(237,209,39)" fg:x="489" fg:w="2"/><text x="39.0595%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="38.8095%" y="325" width="0.1587%" height="15" fill="rgb(235,111,47)" fg:x="489" fg:w="2"/><text x="39.0595%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.8095%" y="309" width="0.1587%" height="15" fill="rgb(216,139,9)" fg:x="489" fg:w="2"/><text x="39.0595%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.8095%" y="293" width="0.1587%" height="15" fill="rgb(248,185,4)" fg:x="489" fg:w="2"/><text x="39.0595%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="38.8095%" y="277" width="0.1587%" height="15" fill="rgb(239,185,25)" fg:x="489" fg:w="2"/><text x="39.0595%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="38.8095%" y="261" width="0.1587%" height="15" fill="rgb(233,207,8)" fg:x="489" fg:w="2"/><text x="39.0595%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="38.8095%" y="245" width="0.1587%" height="15" fill="rgb(249,220,24)" fg:x="489" fg:w="2"/><text x="39.0595%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="38.8095%" y="229" width="0.1587%" height="15" fill="rgb(221,50,14)" fg:x="489" fg:w="2"/><text x="39.0595%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.8095%" y="213" width="0.1587%" height="15" fill="rgb(227,79,42)" fg:x="489" fg:w="2"/><text x="39.0595%" y="223.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="39.0476%" y="389" width="0.0794%" height="15" fill="rgb(228,218,49)" fg:x="492" fg:w="1"/><text x="39.2976%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.0476%" y="373" width="0.0794%" height="15" fill="rgb(249,18,15)" fg:x="492" fg:w="1"/><text x="39.2976%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2063%" y="357" width="0.0794%" height="15" fill="rgb(212,84,27)" fg:x="494" fg:w="1"/><text x="39.4563%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2063%" y="341" width="0.0794%" height="15" fill="rgb(207,83,24)" fg:x="494" fg:w="1"/><text x="39.4563%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2063%" y="325" width="0.0794%" height="15" fill="rgb(219,61,7)" fg:x="494" fg:w="1"/><text x="39.4563%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.2063%" y="309" width="0.0794%" height="15" fill="rgb(211,43,29)" fg:x="494" fg:w="1"/><text x="39.4563%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.2063%" y="293" width="0.0794%" height="15" fill="rgb(243,15,23)" fg:x="494" fg:w="1"/><text x="39.4563%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.2063%" y="277" width="0.0794%" height="15" fill="rgb(217,52,28)" fg:x="494" fg:w="1"/><text x="39.4563%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.2063%" y="261" width="0.0794%" height="15" fill="rgb(210,35,6)" fg:x="494" fg:w="1"/><text x="39.4563%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.2063%" y="245" width="0.0794%" height="15" fill="rgb(237,187,28)" fg:x="494" fg:w="1"/><text x="39.4563%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2857%" y="229" width="0.0794%" height="15" fill="rgb(231,136,24)" fg:x="495" fg:w="1"/><text x="39.5357%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2857%" y="213" width="0.0794%" height="15" fill="rgb(205,176,52)" fg:x="495" fg:w="1"/><text x="39.5357%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.2857%" y="277" width="0.1587%" height="15" fill="rgb(218,65,12)" fg:x="495" fg:w="2"/><text x="39.5357%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.2857%" y="261" width="0.1587%" height="15" fill="rgb(234,101,21)" fg:x="495" fg:w="2"/><text x="39.5357%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.2857%" y="245" width="0.1587%" height="15" fill="rgb(206,13,20)" fg:x="495" fg:w="2"/><text x="39.5357%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3651%" y="229" width="0.0794%" height="15" fill="rgb(236,89,44)" fg:x="496" fg:w="1"/><text x="39.6151%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3651%" y="213" width="0.0794%" height="15" fill="rgb(225,52,17)" fg:x="496" fg:w="1"/><text x="39.6151%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.3651%" y="197" width="0.0794%" height="15" fill="rgb(214,27,25)" fg:x="496" fg:w="1"/><text x="39.6151%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.3651%" y="181" width="0.0794%" height="15" fill="rgb(240,141,35)" fg:x="496" fg:w="1"/><text x="39.6151%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.3651%" y="165" width="0.0794%" height="15" fill="rgb(216,126,3)" fg:x="496" fg:w="1"/><text x="39.6151%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.3651%" y="149" width="0.0794%" height="15" fill="rgb(249,196,23)" fg:x="496" fg:w="1"/><text x="39.6151%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.3651%" y="133" width="0.0794%" height="15" fill="rgb(215,185,43)" fg:x="496" fg:w="1"/><text x="39.6151%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.3651%" y="117" width="0.0794%" height="15" fill="rgb(208,194,36)" fg:x="496" fg:w="1"/><text x="39.6151%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.3651%" y="101" width="0.0794%" height="15" fill="rgb(245,182,12)" fg:x="496" fg:w="1"/><text x="39.6151%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.3651%" y="85" width="0.0794%" height="15" fill="rgb(244,222,52)" fg:x="496" fg:w="1"/><text x="39.6151%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.3651%" y="69" width="0.0794%" height="15" fill="rgb(236,222,51)" fg:x="496" fg:w="1"/><text x="39.6151%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3651%" y="53" width="0.0794%" height="15" fill="rgb(254,71,22)" fg:x="496" fg:w="1"/><text x="39.6151%" y="63.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="39.2857%" y="357" width="0.2381%" height="15" fill="rgb(250,104,15)" fg:x="495" fg:w="3"/><text x="39.5357%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="39.2857%" y="341" width="0.2381%" height="15" fill="rgb(229,223,46)" fg:x="495" fg:w="3"/><text x="39.5357%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="39.2857%" y="325" width="0.2381%" height="15" fill="rgb(209,129,18)" fg:x="495" fg:w="3"/><text x="39.5357%" y="335.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="39.2857%" y="309" width="0.2381%" height="15" fill="rgb(224,160,1)" fg:x="495" fg:w="3"/><text x="39.5357%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="39.2857%" y="293" width="0.2381%" height="15" fill="rgb(237,112,21)" fg:x="495" fg:w="3"/><text x="39.5357%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.4444%" y="277" width="0.0794%" height="15" fill="rgb(215,198,53)" fg:x="497" fg:w="1"/><text x="39.6944%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4444%" y="261" width="0.0794%" height="15" fill="rgb(218,227,35)" fg:x="497" fg:w="1"/><text x="39.6944%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.4444%" y="245" width="0.0794%" height="15" fill="rgb(232,121,22)" fg:x="497" fg:w="1"/><text x="39.6944%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4444%" y="229" width="0.0794%" height="15" fill="rgb(235,52,54)" fg:x="497" fg:w="1"/><text x="39.6944%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.4444%" y="213" width="0.0794%" height="15" fill="rgb(219,21,44)" fg:x="497" fg:w="1"/><text x="39.6944%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4444%" y="197" width="0.0794%" height="15" fill="rgb(221,51,43)" fg:x="497" fg:w="1"/><text x="39.6944%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.4444%" y="181" width="0.0794%" height="15" fill="rgb(225,77,42)" fg:x="497" fg:w="1"/><text x="39.6944%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4444%" y="165" width="0.0794%" height="15" fill="rgb(214,117,53)" fg:x="497" fg:w="1"/><text x="39.6944%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4444%" y="149" width="0.0794%" height="15" fill="rgb(218,227,27)" fg:x="497" fg:w="1"/><text x="39.6944%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.5238%" y="341" width="0.0794%" height="15" fill="rgb(223,214,36)" fg:x="498" fg:w="1"/><text x="39.7738%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6825%" y="309" width="0.0794%" height="15" fill="rgb(235,21,7)" fg:x="500" fg:w="1"/><text x="39.9325%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6825%" y="293" width="0.0794%" height="15" fill="rgb(244,216,4)" fg:x="500" fg:w="1"/><text x="39.9325%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6825%" y="277" width="0.0794%" height="15" fill="rgb(249,197,24)" fg:x="500" fg:w="1"/><text x="39.9325%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6825%" y="261" width="0.0794%" height="15" fill="rgb(222,169,49)" fg:x="500" fg:w="1"/><text x="39.9325%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6825%" y="245" width="0.0794%" height="15" fill="rgb(207,137,33)" fg:x="500" fg:w="1"/><text x="39.9325%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.7619%" y="213" width="0.0794%" height="15" fill="rgb(219,180,40)" fg:x="501" fg:w="1"/><text x="40.0119%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.7619%" y="197" width="0.0794%" height="15" fill="rgb(250,163,42)" fg:x="501" fg:w="1"/><text x="40.0119%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="39.5238%" y="357" width="0.3968%" height="15" fill="rgb(239,163,0)" fg:x="498" fg:w="5"/><text x="39.7738%" y="367.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="39.6032%" y="341" width="0.3175%" height="15" fill="rgb(252,38,28)" fg:x="499" fg:w="4"/><text x="39.8532%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="39.6032%" y="325" width="0.3175%" height="15" fill="rgb(254,203,26)" fg:x="499" fg:w="4"/><text x="39.8532%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.7619%" y="309" width="0.1587%" height="15" fill="rgb(209,129,32)" fg:x="501" fg:w="2"/><text x="40.0119%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.7619%" y="293" width="0.1587%" height="15" fill="rgb(207,177,52)" fg:x="501" fg:w="2"/><text x="40.0119%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.7619%" y="277" width="0.1587%" height="15" fill="rgb(230,209,36)" fg:x="501" fg:w="2"/><text x="40.0119%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.7619%" y="261" width="0.1587%" height="15" fill="rgb(238,131,0)" fg:x="501" fg:w="2"/><text x="40.0119%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.7619%" y="245" width="0.1587%" height="15" fill="rgb(218,61,31)" fg:x="501" fg:w="2"/><text x="40.0119%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.7619%" y="229" width="0.1587%" height="15" fill="rgb(232,6,53)" fg:x="501" fg:w="2"/><text x="40.0119%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8413%" y="213" width="0.0794%" height="15" fill="rgb(254,100,32)" fg:x="502" fg:w="1"/><text x="40.0913%" y="223.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="39.9206%" y="357" width="0.1587%" height="15" fill="rgb(229,194,49)" fg:x="503" fg:w="2"/><text x="40.1706%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.9206%" y="341" width="0.1587%" height="15" fill="rgb(206,208,39)" fg:x="503" fg:w="2"/><text x="40.1706%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.9206%" y="325" width="0.1587%" height="15" fill="rgb(246,226,14)" fg:x="503" fg:w="2"/><text x="40.1706%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="39.9206%" y="309" width="0.1587%" height="15" fill="rgb(226,48,32)" fg:x="503" fg:w="2"/><text x="40.1706%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.9206%" y="293" width="0.1587%" height="15" fill="rgb(252,43,54)" fg:x="503" fg:w="2"/><text x="40.1706%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="40.1587%" y="261" width="0.1587%" height="15" fill="rgb(207,124,0)" fg:x="506" fg:w="2"/><text x="40.4087%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.1587%" y="245" width="0.1587%" height="15" fill="rgb(248,188,30)" fg:x="506" fg:w="2"/><text x="40.4087%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.3968%" y="229" width="0.0794%" height="15" fill="rgb(232,14,43)" fg:x="509" fg:w="1"/><text x="40.6468%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3968%" y="213" width="0.0794%" height="15" fill="rgb(218,52,29)" fg:x="509" fg:w="1"/><text x="40.6468%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="40.5556%" y="181" width="0.0794%" height="15" fill="rgb(218,176,50)" fg:x="511" fg:w="1"/><text x="40.8056%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="40.5556%" y="197" width="0.1587%" height="15" fill="rgb(213,112,0)" fg:x="511" fg:w="2"/><text x="40.8056%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6349%" y="181" width="0.0794%" height="15" fill="rgb(244,216,8)" fg:x="512" fg:w="1"/><text x="40.8849%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.7143%" y="197" width="0.0794%" height="15" fill="rgb(224,148,53)" fg:x="513" fg:w="1"/><text x="40.9643%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.7937%" y="133" width="0.0794%" height="15" fill="rgb(241,133,40)" fg:x="514" fg:w="1"/><text x="41.0437%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="40.7937%" y="117" width="0.0794%" height="15" fill="rgb(232,17,44)" fg:x="514" fg:w="1"/><text x="41.0437%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.8730%" y="133" width="0.0794%" height="15" fill="rgb(213,32,25)" fg:x="515" fg:w="1"/><text x="41.1230%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="40.7937%" y="181" width="0.2381%" height="15" fill="rgb(249,115,27)" fg:x="514" fg:w="3"/><text x="41.0437%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.7937%" y="165" width="0.2381%" height="15" fill="rgb(241,50,1)" fg:x="514" fg:w="3"/><text x="41.0437%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="40.7937%" y="149" width="0.2381%" height="15" fill="rgb(244,175,40)" fg:x="514" fg:w="3"/><text x="41.0437%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.9524%" y="133" width="0.0794%" height="15" fill="rgb(230,94,34)" fg:x="516" fg:w="1"/><text x="41.2024%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.9524%" y="117" width="0.0794%" height="15" fill="rgb(223,185,29)" fg:x="516" fg:w="1"/><text x="41.2024%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9524%" y="101" width="0.0794%" height="15" fill="rgb(225,193,15)" fg:x="516" fg:w="1"/><text x="41.2024%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9524%" y="85" width="0.0794%" height="15" fill="rgb(252,121,38)" fg:x="516" fg:w="1"/><text x="41.2024%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="40.5556%" y="213" width="0.5556%" height="15" fill="rgb(232,44,12)" fg:x="511" fg:w="7"/><text x="40.8056%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="40.7937%" y="197" width="0.3175%" height="15" fill="rgb(226,45,54)" fg:x="514" fg:w="4"/><text x="41.0437%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0317%" y="181" width="0.0794%" height="15" fill="rgb(209,67,17)" fg:x="517" fg:w="1"/><text x="41.2817%" y="191.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.11%)</title><rect x="40.0794%" y="341" width="1.1111%" height="15" fill="rgb(219,108,52)" fg:x="505" fg:w="14"/><text x="40.3294%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.11%)</title><rect x="40.0794%" y="325" width="1.1111%" height="15" fill="rgb(216,118,19)" fg:x="505" fg:w="14"/><text x="40.3294%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.11%)</title><rect x="40.0794%" y="309" width="1.1111%" height="15" fill="rgb(228,120,40)" fg:x="505" fg:w="14"/><text x="40.3294%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.11%)</title><rect x="40.0794%" y="293" width="1.1111%" height="15" fill="rgb(221,218,34)" fg:x="505" fg:w="14"/><text x="40.3294%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.03%)</title><rect x="40.1587%" y="277" width="1.0317%" height="15" fill="rgb(235,89,14)" fg:x="506" fg:w="13"/><text x="40.4087%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.87%)</title><rect x="40.3175%" y="261" width="0.8730%" height="15" fill="rgb(248,89,7)" fg:x="508" fg:w="11"/><text x="40.5675%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.87%)</title><rect x="40.3175%" y="245" width="0.8730%" height="15" fill="rgb(212,114,34)" fg:x="508" fg:w="11"/><text x="40.5675%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.71%)</title><rect x="40.4762%" y="229" width="0.7143%" height="15" fill="rgb(246,88,32)" fg:x="510" fg:w="9"/><text x="40.7262%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.1111%" y="213" width="0.0794%" height="15" fill="rgb(237,135,0)" fg:x="518" fg:w="1"/><text x="41.3611%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.1111%" y="197" width="0.0794%" height="15" fill="rgb(220,201,54)" fg:x="518" fg:w="1"/><text x="41.3611%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.1111%" y="181" width="0.0794%" height="15" fill="rgb(210,142,36)" fg:x="518" fg:w="1"/><text x="41.3611%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="41.1111%" y="165" width="0.0794%" height="15" fill="rgb(247,189,26)" fg:x="518" fg:w="1"/><text x="41.3611%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.1905%" y="309" width="0.0794%" height="15" fill="rgb(223,89,24)" fg:x="519" fg:w="1"/><text x="41.4405%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.2698%" y="277" width="0.0794%" height="15" fill="rgb(205,90,19)" fg:x="520" fg:w="1"/><text x="41.5198%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.2698%" y="261" width="0.0794%" height="15" fill="rgb(234,57,40)" fg:x="520" fg:w="1"/><text x="41.5198%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="41.4286%" y="197" width="0.0794%" height="15" fill="rgb(213,109,10)" fg:x="522" fg:w="1"/><text x="41.6786%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.4286%" y="181" width="0.0794%" height="15" fill="rgb(214,189,23)" fg:x="522" fg:w="1"/><text x="41.6786%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="41.4286%" y="165" width="0.0794%" height="15" fill="rgb(234,200,10)" fg:x="522" fg:w="1"/><text x="41.6786%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="41.4286%" y="149" width="0.0794%" height="15" fill="rgb(221,148,16)" fg:x="522" fg:w="1"/><text x="41.6786%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.4286%" y="133" width="0.0794%" height="15" fill="rgb(230,115,10)" fg:x="522" fg:w="1"/><text x="41.6786%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="41.4286%" y="117" width="0.0794%" height="15" fill="rgb(220,106,42)" fg:x="522" fg:w="1"/><text x="41.6786%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.4286%" y="101" width="0.0794%" height="15" fill="rgb(225,105,39)" fg:x="522" fg:w="1"/><text x="41.6786%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="41.4286%" y="229" width="0.1587%" height="15" fill="rgb(211,161,38)" fg:x="522" fg:w="2"/><text x="41.6786%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="41.4286%" y="213" width="0.1587%" height="15" fill="rgb(213,23,19)" fg:x="522" fg:w="2"/><text x="41.6786%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5079%" y="197" width="0.0794%" height="15" fill="rgb(240,2,33)" fg:x="523" fg:w="1"/><text x="41.7579%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="41.4286%" y="261" width="0.3175%" height="15" fill="rgb(221,29,45)" fg:x="522" fg:w="4"/><text x="41.6786%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="41.4286%" y="245" width="0.3175%" height="15" fill="rgb(242,10,19)" fg:x="522" fg:w="4"/><text x="41.6786%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (2 samples, 0.16%)</title><rect x="41.5873%" y="229" width="0.1587%" height="15" fill="rgb(250,84,37)" fg:x="524" fg:w="2"/><text x="41.8373%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.6667%" y="213" width="0.0794%" height="15" fill="rgb(214,136,7)" fg:x="525" fg:w="1"/><text x="41.9167%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="41.7460%" y="261" width="0.0794%" height="15" fill="rgb(231,189,12)" fg:x="526" fg:w="1"/><text x="41.9960%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.7460%" y="245" width="0.0794%" height="15" fill="rgb(244,40,16)" fg:x="526" fg:w="1"/><text x="41.9960%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="41.7460%" y="229" width="0.0794%" height="15" fill="rgb(217,29,15)" fg:x="526" fg:w="1"/><text x="41.9960%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="41.7460%" y="213" width="0.0794%" height="15" fill="rgb(235,172,33)" fg:x="526" fg:w="1"/><text x="41.9960%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="41.7460%" y="197" width="0.0794%" height="15" fill="rgb(206,148,28)" fg:x="526" fg:w="1"/><text x="41.9960%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="41.7460%" y="181" width="0.0794%" height="15" fill="rgb(251,167,37)" fg:x="526" fg:w="1"/><text x="41.9960%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.8254%" y="229" width="0.0794%" height="15" fill="rgb(229,94,52)" fg:x="527" fg:w="1"/><text x="42.0754%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.8254%" y="213" width="0.0794%" height="15" fill="rgb(216,132,9)" fg:x="527" fg:w="1"/><text x="42.0754%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8254%" y="197" width="0.0794%" height="15" fill="rgb(208,110,29)" fg:x="527" fg:w="1"/><text x="42.0754%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="41.9048%" y="213" width="0.0794%" height="15" fill="rgb(241,23,8)" fg:x="528" fg:w="1"/><text x="42.1548%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="41.9048%" y="197" width="0.0794%" height="15" fill="rgb(208,26,35)" fg:x="528" fg:w="1"/><text x="42.1548%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9048%" y="181" width="0.0794%" height="15" fill="rgb(242,165,34)" fg:x="528" fg:w="1"/><text x="42.1548%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.9048%" y="165" width="0.0794%" height="15" fill="rgb(222,222,33)" fg:x="528" fg:w="1"/><text x="42.1548%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.9048%" y="149" width="0.0794%" height="15" fill="rgb(227,16,52)" fg:x="528" fg:w="1"/><text x="42.1548%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.9048%" y="133" width="0.0794%" height="15" fill="rgb(213,93,12)" fg:x="528" fg:w="1"/><text x="42.1548%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.87%)</title><rect x="41.2698%" y="309" width="0.8730%" height="15" fill="rgb(238,41,5)" fg:x="520" fg:w="11"/><text x="41.5198%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.87%)</title><rect x="41.2698%" y="293" width="0.8730%" height="15" fill="rgb(211,60,15)" fg:x="520" fg:w="11"/><text x="41.5198%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.79%)</title><rect x="41.3492%" y="277" width="0.7937%" height="15" fill="rgb(209,11,34)" fg:x="521" fg:w="10"/><text x="41.5992%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="41.8254%" y="261" width="0.3175%" height="15" fill="rgb(254,155,53)" fg:x="527" fg:w="4"/><text x="42.0754%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="41.8254%" y="245" width="0.3175%" height="15" fill="rgb(236,174,8)" fg:x="527" fg:w="4"/><text x="42.0754%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="41.9048%" y="229" width="0.2381%" height="15" fill="rgb(229,31,27)" fg:x="528" fg:w="3"/><text x="42.1548%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.9841%" y="213" width="0.1587%" height="15" fill="rgb(242,226,26)" fg:x="529" fg:w="2"/><text x="42.2341%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.0635%" y="197" width="0.0794%" height="15" fill="rgb(234,32,40)" fg:x="530" fg:w="1"/><text x="42.3135%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.0635%" y="181" width="0.0794%" height="15" fill="rgb(249,226,47)" fg:x="530" fg:w="1"/><text x="42.3135%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (41 samples, 3.25%)</title><rect x="38.9683%" y="453" width="3.2540%" height="15" fill="rgb(212,6,26)" fg:x="491" fg:w="41"/><text x="39.2183%" y="463.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (41 samples, 3.25%)</title><rect x="38.9683%" y="437" width="3.2540%" height="15" fill="rgb(249,202,29)" fg:x="491" fg:w="41"/><text x="39.2183%" y="447.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 3.25%)</title><rect x="38.9683%" y="421" width="3.2540%" height="15" fill="rgb(226,106,4)" fg:x="491" fg:w="41"/><text x="39.2183%" y="431.50">&lt;al..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (40 samples, 3.17%)</title><rect x="39.0476%" y="405" width="3.1746%" height="15" fill="rgb(251,2,27)" fg:x="492" fg:w="40"/><text x="39.2976%" y="415.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (39 samples, 3.10%)</title><rect x="39.1270%" y="389" width="3.0952%" height="15" fill="rgb(236,208,0)" fg:x="493" fg:w="39"/><text x="39.3770%" y="399.50">&lt;en..</text></g><g><title>engine::internal::Entities::add_persisted (39 samples, 3.10%)</title><rect x="39.1270%" y="373" width="3.0952%" height="15" fill="rgb(211,66,17)" fg:x="493" fg:w="39"/><text x="39.3770%" y="383.50">eng..</text></g><g><title>kernel::model::entity::Entity::from_str (27 samples, 2.14%)</title><rect x="40.0794%" y="357" width="2.1429%" height="15" fill="rgb(216,129,9)" fg:x="505" fg:w="27"/><text x="40.3294%" y="367.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.03%)</title><rect x="41.1905%" y="341" width="1.0317%" height="15" fill="rgb(215,130,23)" fg:x="519" fg:w="13"/><text x="41.4405%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.03%)</title><rect x="41.1905%" y="325" width="1.0317%" height="15" fill="rgb(253,157,11)" fg:x="519" fg:w="13"/><text x="41.4405%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="42.1429%" y="309" width="0.0794%" height="15" fill="rgb(224,25,14)" fg:x="531" fg:w="1"/><text x="42.3929%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="42.2222%" y="453" width="0.2381%" height="15" fill="rgb(238,16,7)" fg:x="532" fg:w="3"/><text x="42.4722%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="42.2222%" y="437" width="0.2381%" height="15" fill="rgb(228,74,11)" fg:x="532" fg:w="3"/><text x="42.4722%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.3810%" y="421" width="0.0794%" height="15" fill="rgb(239,221,27)" fg:x="534" fg:w="1"/><text x="42.6310%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="42.3810%" y="405" width="0.0794%" height="15" fill="rgb(229,166,18)" fg:x="534" fg:w="1"/><text x="42.6310%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.3810%" y="389" width="0.0794%" height="15" fill="rgb(254,94,46)" fg:x="534" fg:w="1"/><text x="42.6310%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3810%" y="373" width="0.0794%" height="15" fill="rgb(241,79,19)" fg:x="534" fg:w="1"/><text x="42.6310%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.4603%" y="389" width="0.0794%" height="15" fill="rgb(228,99,51)" fg:x="535" fg:w="1"/><text x="42.7103%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.5397%" y="373" width="0.0794%" height="15" fill="rgb(211,15,6)" fg:x="536" fg:w="1"/><text x="42.7897%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6984%" y="341" width="0.0794%" height="15" fill="rgb(245,107,54)" fg:x="538" fg:w="1"/><text x="42.9484%" y="351.50"></text></g><g><title>plugins_core::tools::get_contained_keys (56 samples, 4.44%)</title><rect x="38.4127%" y="501" width="4.4444%" height="15" fill="rgb(243,3,2)" fg:x="484" fg:w="56"/><text x="38.6627%" y="511.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (56 samples, 4.44%)</title><rect x="38.4127%" y="485" width="4.4444%" height="15" fill="rgb(206,122,10)" fg:x="484" fg:w="56"/><text x="38.6627%" y="495.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (56 samples, 4.44%)</title><rect x="38.4127%" y="469" width="4.4444%" height="15" fill="rgb(224,88,4)" fg:x="484" fg:w="56"/><text x="38.6627%" y="479.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="42.4603%" y="453" width="0.3968%" height="15" fill="rgb(230,1,41)" fg:x="535" fg:w="5"/><text x="42.7103%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="42.4603%" y="437" width="0.3968%" height="15" fill="rgb(230,1,31)" fg:x="535" fg:w="5"/><text x="42.7103%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.40%)</title><rect x="42.4603%" y="421" width="0.3968%" height="15" fill="rgb(232,67,19)" fg:x="535" fg:w="5"/><text x="42.7103%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.40%)</title><rect x="42.4603%" y="405" width="0.3968%" height="15" fill="rgb(222,206,20)" fg:x="535" fg:w="5"/><text x="42.7103%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="42.5397%" y="389" width="0.3175%" height="15" fill="rgb(217,225,19)" fg:x="536" fg:w="4"/><text x="42.7897%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="42.6190%" y="373" width="0.2381%" height="15" fill="rgb(234,13,33)" fg:x="537" fg:w="3"/><text x="42.8690%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="42.6190%" y="357" width="0.2381%" height="15" fill="rgb(254,5,1)" fg:x="537" fg:w="3"/><text x="42.8690%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.7778%" y="341" width="0.0794%" height="15" fill="rgb(211,121,41)" fg:x="539" fg:w="1"/><text x="43.0278%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="42.8571%" y="485" width="0.1587%" height="15" fill="rgb(213,199,35)" fg:x="540" fg:w="2"/><text x="43.1071%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.9365%" y="469" width="0.0794%" height="15" fill="rgb(240,118,22)" fg:x="541" fg:w="1"/><text x="43.1865%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.9365%" y="453" width="0.0794%" height="15" fill="rgb(238,184,25)" fg:x="541" fg:w="1"/><text x="43.1865%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.9365%" y="437" width="0.0794%" height="15" fill="rgb(210,165,6)" fg:x="541" fg:w="1"/><text x="43.1865%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.9365%" y="421" width="0.0794%" height="15" fill="rgb(235,149,5)" fg:x="541" fg:w="1"/><text x="43.1865%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.9365%" y="405" width="0.0794%" height="15" fill="rgb(221,63,5)" fg:x="541" fg:w="1"/><text x="43.1865%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.9365%" y="389" width="0.0794%" height="15" fill="rgb(250,44,41)" fg:x="541" fg:w="1"/><text x="43.1865%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.9365%" y="373" width="0.0794%" height="15" fill="rgb(235,112,47)" fg:x="541" fg:w="1"/><text x="43.1865%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.9365%" y="357" width="0.0794%" height="15" fill="rgb(252,176,34)" fg:x="541" fg:w="1"/><text x="43.1865%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.9365%" y="341" width="0.0794%" height="15" fill="rgb(234,50,19)" fg:x="541" fg:w="1"/><text x="43.1865%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.9365%" y="325" width="0.0794%" height="15" fill="rgb(241,195,31)" fg:x="541" fg:w="1"/><text x="43.1865%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.9365%" y="309" width="0.0794%" height="15" fill="rgb(212,93,11)" fg:x="541" fg:w="1"/><text x="43.1865%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9365%" y="293" width="0.0794%" height="15" fill="rgb(254,98,51)" fg:x="541" fg:w="1"/><text x="43.1865%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0159%" y="485" width="0.0794%" height="15" fill="rgb(246,18,45)" fg:x="542" fg:w="1"/><text x="43.2659%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.0952%" y="453" width="0.0794%" height="15" fill="rgb(215,148,23)" fg:x="543" fg:w="1"/><text x="43.3452%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.0952%" y="437" width="0.0794%" height="15" fill="rgb(227,22,7)" fg:x="543" fg:w="1"/><text x="43.3452%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.0952%" y="421" width="0.0794%" height="15" fill="rgb(207,210,37)" fg:x="543" fg:w="1"/><text x="43.3452%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="43.1746%" y="453" width="0.0794%" height="15" fill="rgb(247,147,42)" fg:x="544" fg:w="1"/><text x="43.4246%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="43.1746%" y="437" width="0.0794%" height="15" fill="rgb(226,213,14)" fg:x="544" fg:w="1"/><text x="43.4246%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="43.1746%" y="421" width="0.0794%" height="15" fill="rgb(223,18,10)" fg:x="544" fg:w="1"/><text x="43.4246%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="43.1746%" y="405" width="0.0794%" height="15" fill="rgb(253,34,22)" fg:x="544" fg:w="1"/><text x="43.4246%" y="415.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="43.1746%" y="389" width="0.0794%" height="15" fill="rgb(222,90,31)" fg:x="544" fg:w="1"/><text x="43.4246%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1746%" y="373" width="0.0794%" height="15" fill="rgb(220,182,30)" fg:x="544" fg:w="1"/><text x="43.4246%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1746%" y="357" width="0.0794%" height="15" fill="rgb(229,170,12)" fg:x="544" fg:w="1"/><text x="43.4246%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.1746%" y="341" width="0.0794%" height="15" fill="rgb(210,101,21)" fg:x="544" fg:w="1"/><text x="43.4246%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.1746%" y="325" width="0.0794%" height="15" fill="rgb(237,177,31)" fg:x="544" fg:w="1"/><text x="43.4246%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.1746%" y="309" width="0.0794%" height="15" fill="rgb(215,91,34)" fg:x="544" fg:w="1"/><text x="43.4246%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1746%" y="293" width="0.0794%" height="15" fill="rgb(229,206,16)" fg:x="544" fg:w="1"/><text x="43.4246%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.1746%" y="277" width="0.0794%" height="15" fill="rgb(235,207,10)" fg:x="544" fg:w="1"/><text x="43.4246%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.1746%" y="261" width="0.0794%" height="15" fill="rgb(247,18,10)" fg:x="544" fg:w="1"/><text x="43.4246%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.1746%" y="245" width="0.0794%" height="15" fill="rgb(232,4,6)" fg:x="544" fg:w="1"/><text x="43.4246%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.1746%" y="229" width="0.0794%" height="15" fill="rgb(247,93,45)" fg:x="544" fg:w="1"/><text x="43.4246%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.1746%" y="213" width="0.0794%" height="15" fill="rgb(240,181,18)" fg:x="544" fg:w="1"/><text x="43.4246%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1746%" y="197" width="0.0794%" height="15" fill="rgb(208,224,0)" fg:x="544" fg:w="1"/><text x="43.4246%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2540%" y="453" width="0.0794%" height="15" fill="rgb(224,207,54)" fg:x="545" fg:w="1"/><text x="43.5040%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (105 samples, 8.33%)</title><rect x="35.0794%" y="533" width="8.3333%" height="15" fill="rgb(217,152,29)" fg:x="442" fg:w="105"/><text x="35.3294%" y="543.50">&lt;alloc::vec:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (105 samples, 8.33%)</title><rect x="35.0794%" y="517" width="8.3333%" height="15" fill="rgb(243,78,27)" fg:x="442" fg:w="105"/><text x="35.3294%" y="527.50">&lt;core::iter:..</text></g><g><title>plugins_core::tools::get_occupant_keys (7 samples, 0.56%)</title><rect x="42.8571%" y="501" width="0.5556%" height="15" fill="rgb(228,111,9)" fg:x="540" fg:w="7"/><text x="43.1071%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="43.0952%" y="485" width="0.3175%" height="15" fill="rgb(230,213,21)" fg:x="543" fg:w="4"/><text x="43.3452%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="43.0952%" y="469" width="0.3175%" height="15" fill="rgb(248,50,36)" fg:x="543" fg:w="4"/><text x="43.3452%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.3333%" y="453" width="0.0794%" height="15" fill="rgb(226,19,31)" fg:x="546" fg:w="1"/><text x="43.5833%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3333%" y="437" width="0.0794%" height="15" fill="rgb(205,132,21)" fg:x="546" fg:w="1"/><text x="43.5833%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="43.5714%" y="485" width="0.3175%" height="15" fill="rgb(207,42,19)" fg:x="549" fg:w="4"/><text x="43.8214%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="43.6508%" y="469" width="0.2381%" height="15" fill="rgb(229,69,35)" fg:x="550" fg:w="3"/><text x="43.9008%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="43.6508%" y="453" width="0.2381%" height="15" fill="rgb(226,96,11)" fg:x="550" fg:w="3"/><text x="43.9008%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="43.6508%" y="437" width="0.2381%" height="15" fill="rgb(236,133,54)" fg:x="550" fg:w="3"/><text x="43.9008%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="43.6508%" y="421" width="0.2381%" height="15" fill="rgb(247,166,21)" fg:x="550" fg:w="3"/><text x="43.9008%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="43.6508%" y="405" width="0.2381%" height="15" fill="rgb(220,132,12)" fg:x="550" fg:w="3"/><text x="43.9008%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="43.6508%" y="389" width="0.2381%" height="15" fill="rgb(233,27,30)" fg:x="550" fg:w="3"/><text x="43.9008%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="43.6508%" y="373" width="0.2381%" height="15" fill="rgb(246,161,27)" fg:x="550" fg:w="3"/><text x="43.9008%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="43.6508%" y="357" width="0.2381%" height="15" fill="rgb(240,56,3)" fg:x="550" fg:w="3"/><text x="43.9008%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="43.6508%" y="341" width="0.2381%" height="15" fill="rgb(242,190,9)" fg:x="550" fg:w="3"/><text x="43.9008%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="43.6508%" y="325" width="0.2381%" height="15" fill="rgb(234,3,52)" fg:x="550" fg:w="3"/><text x="43.9008%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="43.6508%" y="309" width="0.2381%" height="15" fill="rgb(220,221,19)" fg:x="550" fg:w="3"/><text x="43.9008%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="43.8889%" y="469" width="0.1587%" height="15" fill="rgb(247,178,30)" fg:x="553" fg:w="2"/><text x="44.1389%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="43.8889%" y="453" width="0.1587%" height="15" fill="rgb(234,212,27)" fg:x="553" fg:w="2"/><text x="44.1389%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="44.0476%" y="469" width="0.1587%" height="15" fill="rgb(226,199,38)" fg:x="555" fg:w="2"/><text x="44.2976%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.0476%" y="453" width="0.1587%" height="15" fill="rgb(248,114,22)" fg:x="555" fg:w="2"/><text x="44.2976%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.0476%" y="437" width="0.1587%" height="15" fill="rgb(221,180,4)" fg:x="555" fg:w="2"/><text x="44.2976%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="44.0476%" y="421" width="0.1587%" height="15" fill="rgb(220,229,24)" fg:x="555" fg:w="2"/><text x="44.2976%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="44.0476%" y="405" width="0.1587%" height="15" fill="rgb(226,184,27)" fg:x="555" fg:w="2"/><text x="44.2976%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="44.0476%" y="389" width="0.1587%" height="15" fill="rgb(232,99,15)" fg:x="555" fg:w="2"/><text x="44.2976%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.0476%" y="373" width="0.1587%" height="15" fill="rgb(250,167,16)" fg:x="555" fg:w="2"/><text x="44.2976%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.0476%" y="357" width="0.1587%" height="15" fill="rgb(243,113,6)" fg:x="555" fg:w="2"/><text x="44.2976%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="44.0476%" y="341" width="0.1587%" height="15" fill="rgb(244,147,52)" fg:x="555" fg:w="2"/><text x="44.2976%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="44.0476%" y="325" width="0.1587%" height="15" fill="rgb(235,59,50)" fg:x="555" fg:w="2"/><text x="44.2976%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="44.0476%" y="309" width="0.1587%" height="15" fill="rgb(250,188,6)" fg:x="555" fg:w="2"/><text x="44.2976%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="44.0476%" y="293" width="0.1587%" height="15" fill="rgb(236,173,11)" fg:x="555" fg:w="2"/><text x="44.2976%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.0476%" y="277" width="0.1587%" height="15" fill="rgb(233,64,3)" fg:x="555" fg:w="2"/><text x="44.2976%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.2063%" y="373" width="0.0794%" height="15" fill="rgb(207,92,7)" fg:x="557" fg:w="1"/><text x="44.4563%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.2063%" y="357" width="0.0794%" height="15" fill="rgb(221,30,19)" fg:x="557" fg:w="1"/><text x="44.4563%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.2063%" y="341" width="0.0794%" height="15" fill="rgb(245,22,49)" fg:x="557" fg:w="1"/><text x="44.4563%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.2063%" y="325" width="0.0794%" height="15" fill="rgb(218,39,20)" fg:x="557" fg:w="1"/><text x="44.4563%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.2063%" y="309" width="0.0794%" height="15" fill="rgb(222,144,21)" fg:x="557" fg:w="1"/><text x="44.4563%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.2063%" y="293" width="0.0794%" height="15" fill="rgb(222,78,51)" fg:x="557" fg:w="1"/><text x="44.4563%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.2063%" y="277" width="0.0794%" height="15" fill="rgb(248,213,53)" fg:x="557" fg:w="1"/><text x="44.4563%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.2063%" y="261" width="0.0794%" height="15" fill="rgb(245,28,34)" fg:x="557" fg:w="1"/><text x="44.4563%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.2063%" y="245" width="0.0794%" height="15" fill="rgb(229,186,26)" fg:x="557" fg:w="1"/><text x="44.4563%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.2063%" y="229" width="0.0794%" height="15" fill="rgb(224,0,41)" fg:x="557" fg:w="1"/><text x="44.4563%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.2063%" y="213" width="0.0794%" height="15" fill="rgb(223,136,51)" fg:x="557" fg:w="1"/><text x="44.4563%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2063%" y="197" width="0.0794%" height="15" fill="rgb(234,50,9)" fg:x="557" fg:w="1"/><text x="44.4563%" y="207.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.2857%" y="373" width="0.1587%" height="15" fill="rgb(242,164,20)" fg:x="558" fg:w="2"/><text x="44.5357%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (10 samples, 0.79%)</title><rect x="43.8889%" y="485" width="0.7937%" height="15" fill="rgb(230,169,22)" fg:x="553" fg:w="10"/><text x="44.1389%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="44.2063%" y="469" width="0.4762%" height="15" fill="rgb(228,82,26)" fg:x="557" fg:w="6"/><text x="44.4563%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.48%)</title><rect x="44.2063%" y="453" width="0.4762%" height="15" fill="rgb(244,220,31)" fg:x="557" fg:w="6"/><text x="44.4563%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.48%)</title><rect x="44.2063%" y="437" width="0.4762%" height="15" fill="rgb(214,35,25)" fg:x="557" fg:w="6"/><text x="44.4563%" y="447.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="44.2063%" y="421" width="0.4762%" height="15" fill="rgb(245,162,54)" fg:x="557" fg:w="6"/><text x="44.4563%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.48%)</title><rect x="44.2063%" y="405" width="0.4762%" height="15" fill="rgb(210,43,24)" fg:x="557" fg:w="6"/><text x="44.4563%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.48%)</title><rect x="44.2063%" y="389" width="0.4762%" height="15" fill="rgb(226,145,51)" fg:x="557" fg:w="6"/><text x="44.4563%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="44.4444%" y="373" width="0.2381%" height="15" fill="rgb(237,52,53)" fg:x="560" fg:w="3"/><text x="44.6944%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.5238%" y="357" width="0.1587%" height="15" fill="rgb(216,226,7)" fg:x="561" fg:w="2"/><text x="44.7738%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.5238%" y="341" width="0.1587%" height="15" fill="rgb(206,223,18)" fg:x="561" fg:w="2"/><text x="44.7738%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="44.5238%" y="325" width="0.1587%" height="15" fill="rgb(221,1,10)" fg:x="561" fg:w="2"/><text x="44.7738%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="44.5238%" y="309" width="0.1587%" height="15" fill="rgb(221,151,42)" fg:x="561" fg:w="2"/><text x="44.7738%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.6032%" y="293" width="0.0794%" height="15" fill="rgb(205,183,46)" fg:x="562" fg:w="1"/><text x="44.8532%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.6032%" y="277" width="0.0794%" height="15" fill="rgb(239,229,1)" fg:x="562" fg:w="1"/><text x="44.8532%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.6032%" y="261" width="0.0794%" height="15" fill="rgb(236,192,23)" fg:x="562" fg:w="1"/><text x="44.8532%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.6032%" y="245" width="0.0794%" height="15" fill="rgb(215,146,3)" fg:x="562" fg:w="1"/><text x="44.8532%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="44.6032%" y="229" width="0.0794%" height="15" fill="rgb(235,52,27)" fg:x="562" fg:w="1"/><text x="44.8532%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="44.6032%" y="213" width="0.0794%" height="15" fill="rgb(236,45,20)" fg:x="562" fg:w="1"/><text x="44.8532%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="44.6032%" y="197" width="0.0794%" height="15" fill="rgb(235,86,41)" fg:x="562" fg:w="1"/><text x="44.8532%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="44.6032%" y="181" width="0.0794%" height="15" fill="rgb(235,27,27)" fg:x="562" fg:w="1"/><text x="44.8532%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.6032%" y="165" width="0.0794%" height="15" fill="rgb(232,4,34)" fg:x="562" fg:w="1"/><text x="44.8532%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.6032%" y="149" width="0.0794%" height="15" fill="rgb(215,22,10)" fg:x="562" fg:w="1"/><text x="44.8532%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.6032%" y="133" width="0.0794%" height="15" fill="rgb(230,228,27)" fg:x="562" fg:w="1"/><text x="44.8532%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="44.6032%" y="117" width="0.0794%" height="15" fill="rgb(216,26,51)" fg:x="562" fg:w="1"/><text x="44.8532%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.6032%" y="101" width="0.0794%" height="15" fill="rgb(225,180,50)" fg:x="562" fg:w="1"/><text x="44.8532%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="44.6032%" y="85" width="0.0794%" height="15" fill="rgb(236,211,2)" fg:x="562" fg:w="1"/><text x="44.8532%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="44.6032%" y="69" width="0.0794%" height="15" fill="rgb(250,51,20)" fg:x="562" fg:w="1"/><text x="44.8532%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="44.6032%" y="53" width="0.0794%" height="15" fill="rgb(232,70,37)" fg:x="562" fg:w="1"/><text x="44.8532%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.6032%" y="37" width="0.0794%" height="15" fill="rgb(226,183,39)" fg:x="562" fg:w="1"/><text x="44.8532%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.4286%" y="277" width="0.0794%" height="15" fill="rgb(232,228,21)" fg:x="585" fg:w="1"/><text x="46.6786%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="46.9048%" y="133" width="0.1587%" height="15" fill="rgb(251,118,32)" fg:x="591" fg:w="2"/><text x="47.1548%" y="143.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="46.9841%" y="117" width="0.0794%" height="15" fill="rgb(235,172,38)" fg:x="592" fg:w="1"/><text x="47.2341%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="46.9841%" y="101" width="0.0794%" height="15" fill="rgb(235,63,18)" fg:x="592" fg:w="1"/><text x="47.2341%" y="111.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.9841%" y="85" width="0.0794%" height="15" fill="rgb(225,4,7)" fg:x="592" fg:w="1"/><text x="47.2341%" y="95.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="47.0635%" y="133" width="0.2381%" height="15" fill="rgb(231,61,1)" fg:x="593" fg:w="3"/><text x="47.3135%" y="143.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="47.0635%" y="117" width="0.2381%" height="15" fill="rgb(241,155,22)" fg:x="593" fg:w="3"/><text x="47.3135%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="46.8254%" y="149" width="0.5556%" height="15" fill="rgb(209,100,26)" fg:x="590" fg:w="7"/><text x="47.0754%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3016%" y="133" width="0.0794%" height="15" fill="rgb(248,181,15)" fg:x="596" fg:w="1"/><text x="47.5516%" y="143.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.71%)</title><rect x="46.7460%" y="181" width="0.7143%" height="15" fill="rgb(214,94,31)" fg:x="589" fg:w="9"/><text x="46.9960%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.71%)</title><rect x="46.7460%" y="165" width="0.7143%" height="15" fill="rgb(207,16,42)" fg:x="589" fg:w="9"/><text x="46.9960%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="47.3810%" y="149" width="0.0794%" height="15" fill="rgb(208,127,13)" fg:x="597" fg:w="1"/><text x="47.6310%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.3810%" y="133" width="0.0794%" height="15" fill="rgb(220,211,18)" fg:x="597" fg:w="1"/><text x="47.6310%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="47.4603%" y="181" width="0.3968%" height="15" fill="rgb(221,55,38)" fg:x="598" fg:w="5"/><text x="47.7103%" y="191.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.6984%" y="165" width="0.1587%" height="15" fill="rgb(252,219,45)" fg:x="601" fg:w="2"/><text x="47.9484%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 1.67%)</title><rect x="46.5079%" y="197" width="1.6667%" height="15" fill="rgb(248,53,35)" fg:x="586" fg:w="21"/><text x="46.7579%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="47.8571%" y="181" width="0.3175%" height="15" fill="rgb(210,87,2)" fg:x="603" fg:w="4"/><text x="48.1071%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="47.9365%" y="165" width="0.2381%" height="15" fill="rgb(239,133,9)" fg:x="604" fg:w="3"/><text x="48.1865%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.0952%" y="149" width="0.0794%" height="15" fill="rgb(214,114,5)" fg:x="606" fg:w="1"/><text x="48.3452%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (26 samples, 2.06%)</title><rect x="46.5079%" y="229" width="2.0635%" height="15" fill="rgb(206,124,24)" fg:x="586" fg:w="26"/><text x="46.7579%" y="239.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 2.06%)</title><rect x="46.5079%" y="213" width="2.0635%" height="15" fill="rgb(212,57,33)" fg:x="586" fg:w="26"/><text x="46.7579%" y="223.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="48.1746%" y="197" width="0.3968%" height="15" fill="rgb(246,21,20)" fg:x="607" fg:w="5"/><text x="48.4246%" y="207.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="48.2540%" y="181" width="0.3175%" height="15" fill="rgb(253,210,39)" fg:x="608" fg:w="4"/><text x="48.5040%" y="191.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.22%)</title><rect x="46.5079%" y="277" width="2.2222%" height="15" fill="rgb(209,187,24)" fg:x="586" fg:w="28"/><text x="46.7579%" y="287.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (28 samples, 2.22%)</title><rect x="46.5079%" y="261" width="2.2222%" height="15" fill="rgb(246,136,17)" fg:x="586" fg:w="28"/><text x="46.7579%" y="271.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 2.22%)</title><rect x="46.5079%" y="245" width="2.2222%" height="15" fill="rgb(211,0,30)" fg:x="586" fg:w="28"/><text x="46.7579%" y="255.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.5714%" y="229" width="0.1587%" height="15" fill="rgb(216,199,7)" fg:x="612" fg:w="2"/><text x="48.8214%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 2.78%)</title><rect x="46.1111%" y="293" width="2.7778%" height="15" fill="rgb(207,210,19)" fg:x="581" fg:w="35"/><text x="46.3611%" y="303.50">&lt;c..</text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="48.7302%" y="277" width="0.1587%" height="15" fill="rgb(237,187,39)" fg:x="614" fg:w="2"/><text x="48.9802%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.8095%" y="261" width="0.0794%" height="15" fill="rgb(243,194,42)" fg:x="615" fg:w="1"/><text x="49.0595%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (38 samples, 3.02%)</title><rect x="46.0317%" y="309" width="3.0159%" height="15" fill="rgb(225,194,19)" fg:x="580" fg:w="38"/><text x="46.2817%" y="319.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="48.8889%" y="293" width="0.1587%" height="15" fill="rgb(224,192,14)" fg:x="616" fg:w="2"/><text x="49.1389%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.8889%" y="277" width="0.1587%" height="15" fill="rgb(252,21,18)" fg:x="616" fg:w="2"/><text x="49.1389%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="49.1270%" y="229" width="0.0794%" height="15" fill="rgb(229,69,19)" fg:x="619" fg:w="1"/><text x="49.3770%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.2857%" y="213" width="0.0794%" height="15" fill="rgb(251,31,53)" fg:x="621" fg:w="1"/><text x="49.5357%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (44 samples, 3.49%)</title><rect x="46.0317%" y="325" width="3.4921%" height="15" fill="rgb(218,39,50)" fg:x="580" fg:w="44"/><text x="46.2817%" y="335.50">&lt;rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="49.0476%" y="309" width="0.4762%" height="15" fill="rgb(231,50,17)" fg:x="618" fg:w="6"/><text x="49.2976%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.48%)</title><rect x="49.0476%" y="293" width="0.4762%" height="15" fill="rgb(223,217,31)" fg:x="618" fg:w="6"/><text x="49.2976%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.48%)</title><rect x="49.0476%" y="277" width="0.4762%" height="15" fill="rgb(225,91,12)" fg:x="618" fg:w="6"/><text x="49.2976%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="49.0476%" y="261" width="0.4762%" height="15" fill="rgb(242,58,43)" fg:x="618" fg:w="6"/><text x="49.2976%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.48%)</title><rect x="49.0476%" y="245" width="0.4762%" height="15" fill="rgb(242,32,21)" fg:x="618" fg:w="6"/><text x="49.2976%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="49.2063%" y="229" width="0.3175%" height="15" fill="rgb(211,127,1)" fg:x="620" fg:w="4"/><text x="49.4563%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.3651%" y="213" width="0.1587%" height="15" fill="rgb(231,93,13)" fg:x="622" fg:w="2"/><text x="49.6151%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="49.5238%" y="325" width="0.1587%" height="15" fill="rgb(218,83,4)" fg:x="624" fg:w="2"/><text x="49.7738%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.6032%" y="309" width="0.0794%" height="15" fill="rgb(230,218,10)" fg:x="625" fg:w="1"/><text x="49.8532%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.7619%" y="309" width="0.0794%" height="15" fill="rgb(235,127,18)" fg:x="627" fg:w="1"/><text x="50.0119%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 3.97%)</title><rect x="45.9524%" y="341" width="3.9683%" height="15" fill="rgb(213,137,46)" fg:x="579" fg:w="50"/><text x="46.2024%" y="351.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="49.6825%" y="325" width="0.2381%" height="15" fill="rgb(235,179,24)" fg:x="626" fg:w="3"/><text x="49.9325%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.8413%" y="309" width="0.0794%" height="15" fill="rgb(247,58,49)" fg:x="628" fg:w="1"/><text x="50.0913%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (57 samples, 4.52%)</title><rect x="45.6349%" y="373" width="4.5238%" height="15" fill="rgb(242,222,5)" fg:x="575" fg:w="57"/><text x="45.8849%" y="383.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (55 samples, 4.37%)</title><rect x="45.7937%" y="357" width="4.3651%" height="15" fill="rgb(230,16,48)" fg:x="577" fg:w="55"/><text x="46.0437%" y="367.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="49.9206%" y="341" width="0.2381%" height="15" fill="rgb(241,192,16)" fg:x="629" fg:w="3"/><text x="50.1706%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.0000%" y="325" width="0.1587%" height="15" fill="rgb(209,25,37)" fg:x="630" fg:w="2"/><text x="50.2500%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="50.1587%" y="373" width="0.1587%" height="15" fill="rgb(229,215,13)" fg:x="632" fg:w="2"/><text x="50.4087%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="50.3175%" y="357" width="0.2381%" height="15" fill="rgb(213,199,8)" fg:x="634" fg:w="3"/><text x="50.5675%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 5.32%)</title><rect x="45.3968%" y="389" width="5.3175%" height="15" fill="rgb(226,151,19)" fg:x="572" fg:w="67"/><text x="45.6468%" y="399.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="50.3175%" y="373" width="0.3968%" height="15" fill="rgb(254,183,12)" fg:x="634" fg:w="5"/><text x="50.5675%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.5556%" y="357" width="0.1587%" height="15" fill="rgb(245,8,3)" fg:x="637" fg:w="2"/><text x="50.8056%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (72 samples, 5.71%)</title><rect x="45.1587%" y="421" width="5.7143%" height="15" fill="rgb(229,159,35)" fg:x="569" fg:w="72"/><text x="45.4087%" y="431.50">&lt;rpc_pr..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (70 samples, 5.56%)</title><rect x="45.3175%" y="405" width="5.5556%" height="15" fill="rgb(209,145,1)" fg:x="571" fg:w="70"/><text x="45.5675%" y="415.50">&lt;std::c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="50.7143%" y="389" width="0.1587%" height="15" fill="rgb(228,183,16)" fg:x="639" fg:w="2"/><text x="50.9643%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.7143%" y="373" width="0.1587%" height="15" fill="rgb(222,68,0)" fg:x="639" fg:w="2"/><text x="50.9643%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="50.8730%" y="421" width="0.2381%" height="15" fill="rgb(209,130,50)" fg:x="641" fg:w="3"/><text x="51.1230%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="51.3492%" y="405" width="0.3175%" height="15" fill="rgb(228,176,44)" fg:x="647" fg:w="4"/><text x="51.5992%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="51.5079%" y="389" width="0.1587%" height="15" fill="rgb(221,164,2)" fg:x="649" fg:w="2"/><text x="51.7579%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (90 samples, 7.14%)</title><rect x="44.6825%" y="469" width="7.1429%" height="15" fill="rgb(249,199,49)" fg:x="563" fg:w="90"/><text x="44.9325%" y="479.50">&lt;rpc_proto..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (88 samples, 6.98%)</title><rect x="44.8413%" y="453" width="6.9841%" height="15" fill="rgb(228,205,53)" fg:x="565" fg:w="88"/><text x="45.0913%" y="463.50">&lt;std::col..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (88 samples, 6.98%)</title><rect x="44.8413%" y="437" width="6.9841%" height="15" fill="rgb(235,77,20)" fg:x="565" fg:w="88"/><text x="45.0913%" y="447.50">&lt;core::it..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.71%)</title><rect x="51.1111%" y="421" width="0.7143%" height="15" fill="rgb(227,147,34)" fg:x="644" fg:w="9"/><text x="51.3611%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.6667%" y="405" width="0.1587%" height="15" fill="rgb(226,203,52)" fg:x="651" fg:w="2"/><text x="51.9167%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="52.0635%" y="421" width="0.2381%" height="15" fill="rgb(226,186,23)" fg:x="656" fg:w="3"/><text x="52.3135%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="52.3016%" y="421" width="0.5556%" height="15" fill="rgb(236,13,30)" fg:x="659" fg:w="7"/><text x="52.5516%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.6190%" y="405" width="0.2381%" height="15" fill="rgb(228,121,22)" fg:x="663" fg:w="3"/><text x="52.8690%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="52.6190%" y="389" width="0.2381%" height="15" fill="rgb(248,222,26)" fg:x="663" fg:w="3"/><text x="52.8690%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="52.8571%" y="421" width="0.0794%" height="15" fill="rgb(251,72,25)" fg:x="666" fg:w="1"/><text x="53.1071%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="52.8571%" y="405" width="0.0794%" height="15" fill="rgb(223,114,24)" fg:x="666" fg:w="1"/><text x="53.1071%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="52.8571%" y="389" width="0.0794%" height="15" fill="rgb(232,190,43)" fg:x="666" fg:w="1"/><text x="53.1071%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="52.8571%" y="373" width="0.0794%" height="15" fill="rgb(208,90,0)" fg:x="666" fg:w="1"/><text x="53.1071%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.1746%" y="389" width="0.0794%" height="15" fill="rgb(234,149,31)" fg:x="670" fg:w="1"/><text x="53.4246%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (7 samples, 0.56%)</title><rect x="52.9365%" y="421" width="0.5556%" height="15" fill="rgb(235,188,36)" fg:x="667" fg:w="7"/><text x="53.1865%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="52.9365%" y="405" width="0.5556%" height="15" fill="rgb(219,59,51)" fg:x="667" fg:w="7"/><text x="53.1865%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.2540%" y="389" width="0.2381%" height="15" fill="rgb(236,101,40)" fg:x="671" fg:w="3"/><text x="53.5040%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.3333%" y="373" width="0.1587%" height="15" fill="rgb(235,33,7)" fg:x="672" fg:w="2"/><text x="53.5833%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="53.7302%" y="389" width="0.1587%" height="15" fill="rgb(213,169,26)" fg:x="677" fg:w="2"/><text x="53.9802%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="53.8889%" y="389" width="0.0794%" height="15" fill="rgb(218,99,34)" fg:x="679" fg:w="1"/><text x="54.1389%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.1270%" y="373" width="0.1587%" height="15" fill="rgb(210,57,24)" fg:x="682" fg:w="2"/><text x="54.3770%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.1270%" y="357" width="0.1587%" height="15" fill="rgb(231,181,54)" fg:x="682" fg:w="2"/><text x="54.3770%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2063%" y="341" width="0.0794%" height="15" fill="rgb(251,188,48)" fg:x="683" fg:w="1"/><text x="54.4563%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="54.3651%" y="341" width="0.1587%" height="15" fill="rgb(243,12,45)" fg:x="685" fg:w="2"/><text x="54.6151%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="54.5238%" y="341" width="0.0794%" height="15" fill="rgb(250,197,9)" fg:x="687" fg:w="1"/><text x="54.7738%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="54.2857%" y="373" width="0.4762%" height="15" fill="rgb(235,149,35)" fg:x="684" fg:w="6"/><text x="54.5357%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="54.2857%" y="357" width="0.4762%" height="15" fill="rgb(219,27,19)" fg:x="684" fg:w="6"/><text x="54.5357%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="54.6032%" y="341" width="0.1587%" height="15" fill="rgb(244,78,31)" fg:x="688" fg:w="2"/><text x="54.8532%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.6032%" y="325" width="0.1587%" height="15" fill="rgb(241,13,4)" fg:x="688" fg:w="2"/><text x="54.8532%" y="335.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="54.9206%" y="309" width="0.3175%" height="15" fill="rgb(212,194,26)" fg:x="692" fg:w="4"/><text x="55.1706%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.63%)</title><rect x="54.8413%" y="341" width="0.6349%" height="15" fill="rgb(236,80,11)" fg:x="691" fg:w="8"/><text x="55.0913%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="54.9206%" y="325" width="0.5556%" height="15" fill="rgb(206,1,24)" fg:x="692" fg:w="7"/><text x="55.1706%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="55.2381%" y="309" width="0.2381%" height="15" fill="rgb(238,215,50)" fg:x="696" fg:w="3"/><text x="55.4881%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="55.6349%" y="325" width="0.0794%" height="15" fill="rgb(254,126,32)" fg:x="701" fg:w="1"/><text x="55.8849%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7143%" y="309" width="0.0794%" height="15" fill="rgb(206,111,53)" fg:x="702" fg:w="1"/><text x="55.9643%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7143%" y="293" width="0.0794%" height="15" fill="rgb(218,72,44)" fg:x="702" fg:w="1"/><text x="55.9643%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7143%" y="277" width="0.0794%" height="15" fill="rgb(238,25,3)" fg:x="702" fg:w="1"/><text x="55.9643%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.1111%" y="277" width="0.2381%" height="15" fill="rgb(250,191,7)" fg:x="707" fg:w="3"/><text x="56.3611%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.1905%" y="261" width="0.1587%" height="15" fill="rgb(238,56,30)" fg:x="708" fg:w="2"/><text x="56.4405%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.1905%" y="245" width="0.1587%" height="15" fill="rgb(210,27,45)" fg:x="708" fg:w="2"/><text x="56.4405%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="56.5079%" y="261" width="0.0794%" height="15" fill="rgb(207,10,50)" fg:x="712" fg:w="1"/><text x="56.7579%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.5873%" y="245" width="0.2381%" height="15" fill="rgb(249,30,23)" fg:x="713" fg:w="3"/><text x="56.8373%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="56.5873%" y="229" width="0.2381%" height="15" fill="rgb(250,80,12)" fg:x="713" fg:w="3"/><text x="56.8373%" y="239.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="56.5873%" y="213" width="0.2381%" height="15" fill="rgb(210,221,37)" fg:x="713" fg:w="3"/><text x="56.8373%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.95%)</title><rect x="55.9524%" y="293" width="0.9524%" height="15" fill="rgb(205,96,24)" fg:x="705" fg:w="12"/><text x="56.2024%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="56.3492%" y="277" width="0.5556%" height="15" fill="rgb(247,104,22)" fg:x="710" fg:w="7"/><text x="56.5992%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="56.5873%" y="261" width="0.3175%" height="15" fill="rgb(222,61,53)" fg:x="713" fg:w="4"/><text x="56.8373%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="56.8254%" y="245" width="0.0794%" height="15" fill="rgb(241,11,53)" fg:x="716" fg:w="1"/><text x="57.0754%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.14%)</title><rect x="54.8413%" y="357" width="2.1429%" height="15" fill="rgb(230,111,47)" fg:x="691" fg:w="27"/><text x="55.0913%" y="367.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.51%)</title><rect x="55.4762%" y="341" width="1.5079%" height="15" fill="rgb(218,187,29)" fg:x="699" fg:w="19"/><text x="55.7262%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.27%)</title><rect x="55.7143%" y="325" width="1.2698%" height="15" fill="rgb(210,121,46)" fg:x="702" fg:w="16"/><text x="55.9643%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.19%)</title><rect x="55.7937%" y="309" width="1.1905%" height="15" fill="rgb(250,43,19)" fg:x="703" fg:w="15"/><text x="56.0437%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9048%" y="293" width="0.0794%" height="15" fill="rgb(238,61,12)" fg:x="717" fg:w="1"/><text x="57.1548%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (39 samples, 3.10%)</title><rect x="53.9683%" y="389" width="3.0952%" height="15" fill="rgb(251,198,9)" fg:x="680" fg:w="39"/><text x="54.2183%" y="399.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (29 samples, 2.30%)</title><rect x="54.7619%" y="373" width="2.3016%" height="15" fill="rgb(214,192,38)" fg:x="690" fg:w="29"/><text x="55.0119%" y="383.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9841%" y="357" width="0.0794%" height="15" fill="rgb(214,73,19)" fg:x="718" fg:w="1"/><text x="57.2341%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (44 samples, 3.49%)</title><rect x="53.6508%" y="405" width="3.4921%" height="15" fill="rgb(249,222,49)" fg:x="676" fg:w="44"/><text x="53.9008%" y="415.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="57.0635%" y="389" width="0.0794%" height="15" fill="rgb(231,181,54)" fg:x="719" fg:w="1"/><text x="57.3135%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.0635%" y="373" width="0.0794%" height="15" fill="rgb(240,1,13)" fg:x="719" fg:w="1"/><text x="57.3135%" y="383.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="57.1429%" y="405" width="0.3175%" height="15" fill="rgb(225,21,16)" fg:x="720" fg:w="4"/><text x="57.3929%" y="415.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (163 samples, 12.94%)</title><rect x="44.6825%" y="485" width="12.9365%" height="15" fill="rgb(246,176,50)" fg:x="563" fg:w="163"/><text x="44.9325%" y="495.50">&lt;rpc_proto::Json as..</text></g><g><title>kernel::model::EntityPtr::to_json_value (73 samples, 5.79%)</title><rect x="51.8254%" y="469" width="5.7937%" height="15" fill="rgb(208,96,50)" fg:x="653" fg:w="73"/><text x="52.0754%" y="479.50">kernel:..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (73 samples, 5.79%)</title><rect x="51.8254%" y="453" width="5.7937%" height="15" fill="rgb(240,219,19)" fg:x="653" fg:w="73"/><text x="52.0754%" y="463.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (73 samples, 5.79%)</title><rect x="51.8254%" y="437" width="5.7937%" height="15" fill="rgb(234,73,5)" fg:x="653" fg:w="73"/><text x="52.0754%" y="447.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (52 samples, 4.13%)</title><rect x="53.4921%" y="421" width="4.1270%" height="15" fill="rgb(225,52,53)" fg:x="674" fg:w="52"/><text x="53.7421%" y="431.50">serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.4603%" y="405" width="0.1587%" height="15" fill="rgb(250,12,14)" fg:x="724" fg:w="2"/><text x="57.7103%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.5397%" y="389" width="0.0794%" height="15" fill="rgb(242,185,54)" fg:x="725" fg:w="1"/><text x="57.7897%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.5397%" y="373" width="0.0794%" height="15" fill="rgb(211,206,31)" fg:x="725" fg:w="1"/><text x="57.7897%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6190%" y="485" width="0.0794%" height="15" fill="rgb(252,10,33)" fg:x="726" fg:w="1"/><text x="57.8690%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.6984%" y="469" width="0.0794%" height="15" fill="rgb(216,26,7)" fg:x="727" fg:w="1"/><text x="57.9484%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="57.6984%" y="485" width="0.1587%" height="15" fill="rgb(228,112,40)" fg:x="727" fg:w="2"/><text x="57.9484%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.7778%" y="469" width="0.0794%" height="15" fill="rgb(212,21,16)" fg:x="728" fg:w="1"/><text x="58.0278%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (182 samples, 14.44%)</title><rect x="43.4921%" y="517" width="14.4444%" height="15" fill="rgb(249,3,29)" fg:x="548" fg:w="182"/><text x="43.7421%" y="527.50">&lt;core::iter::adapters:..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (182 samples, 14.44%)</title><rect x="43.4921%" y="501" width="14.4444%" height="15" fill="rgb(221,42,51)" fg:x="548" fg:w="182"/><text x="43.7421%" y="511.50">plugins_rpc::sessions:..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="57.8571%" y="485" width="0.0794%" height="15" fill="rgb(225,90,21)" fg:x="729" fg:w="1"/><text x="58.1071%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="57.8571%" y="469" width="0.0794%" height="15" fill="rgb(242,131,5)" fg:x="729" fg:w="1"/><text x="58.1071%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (289 samples, 22.94%)</title><rect x="35.0794%" y="549" width="22.9365%" height="15" fill="rgb(220,187,28)" fg:x="442" fg:w="289"/><text x="35.3294%" y="559.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (184 samples, 14.60%)</title><rect x="43.4127%" y="533" width="14.6032%" height="15" fill="rgb(210,75,48)" fg:x="547" fg:w="184"/><text x="43.6627%" y="543.50">alloc::vec::in_place_c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.9365%" y="517" width="0.0794%" height="15" fill="rgb(211,91,40)" fg:x="730" fg:w="1"/><text x="58.1865%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (335 samples, 26.59%)</title><rect x="31.5873%" y="613" width="26.5873%" height="15" fill="rgb(205,43,18)" fg:x="398" fg:w="335"/><text x="31.8373%" y="623.50">kernel::plugins::SessionPlugins::have_surro..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (334 samples, 26.51%)</title><rect x="31.6667%" y="597" width="26.5079%" height="15" fill="rgb(207,123,11)" fg:x="399" fg:w="334"/><text x="31.9167%" y="607.50">&lt;plugins_dynlib::DynamicPlugin as kernel::..</text></g><g><title>plugins_rpc::querying::have_surroundings (307 samples, 24.37%)</title><rect x="33.8095%" y="581" width="24.3651%" height="15" fill="rgb(235,89,39)" fg:x="426" fg:w="307"/><text x="34.0595%" y="591.50">plugins_rpc::querying::have_surroundings</text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (306 samples, 24.29%)</title><rect x="33.8889%" y="565" width="24.2857%" height="15" fill="rgb(245,217,27)" fg:x="427" fg:w="306"/><text x="34.1389%" y="575.50">&lt;plugins_rpc::sessions::SessionServices..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.0159%" y="549" width="0.1587%" height="15" fill="rgb(216,55,17)" fg:x="731" fg:w="2"/><text x="58.2659%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2540%" y="533" width="0.0794%" height="15" fill="rgb(252,116,44)" fg:x="734" fg:w="1"/><text x="58.5040%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.4921%" y="437" width="0.0794%" height="15" fill="rgb(229,153,4)" fg:x="737" fg:w="1"/><text x="58.7421%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="58.5714%" y="437" width="0.0794%" height="15" fill="rgb(222,24,35)" fg:x="738" fg:w="1"/><text x="58.8214%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.5714%" y="421" width="0.0794%" height="15" fill="rgb(214,26,20)" fg:x="738" fg:w="1"/><text x="58.8214%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.6508%" y="421" width="0.0794%" height="15" fill="rgb(215,14,45)" fg:x="739" fg:w="1"/><text x="58.9008%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.63%)</title><rect x="58.7302%" y="421" width="0.6349%" height="15" fill="rgb(217,212,50)" fg:x="740" fg:w="8"/><text x="58.9802%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.63%)</title><rect x="58.7302%" y="405" width="0.6349%" height="15" fill="rgb(230,172,52)" fg:x="740" fg:w="8"/><text x="58.9802%" y="415.50"></text></g><g><title>realloc (8 samples, 0.63%)</title><rect x="58.7302%" y="389" width="0.6349%" height="15" fill="rgb(210,48,36)" fg:x="740" fg:w="8"/><text x="58.9802%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="59.3651%" y="421" width="0.0794%" height="15" fill="rgb(216,213,32)" fg:x="748" fg:w="1"/><text x="59.6151%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3651%" y="405" width="0.0794%" height="15" fill="rgb(237,202,41)" fg:x="748" fg:w="1"/><text x="59.6151%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="59.4444%" y="405" width="0.0794%" height="15" fill="rgb(209,14,29)" fg:x="749" fg:w="1"/><text x="59.6944%" y="415.50"></text></g><g><title>&lt;plugins_core::looking::model::LookError as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="59.4444%" y="389" width="0.0794%" height="15" fill="rgb(219,29,3)" fg:x="749" fg:w="1"/><text x="59.6944%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5238%" y="341" width="0.0794%" height="15" fill="rgb(229,13,49)" fg:x="750" fg:w="1"/><text x="59.7738%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5238%" y="325" width="0.0794%" height="15" fill="rgb(210,206,2)" fg:x="750" fg:w="1"/><text x="59.7738%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5238%" y="309" width="0.0794%" height="15" fill="rgb(216,154,46)" fg:x="750" fg:w="1"/><text x="59.7738%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5238%" y="293" width="0.0794%" height="15" fill="rgb(211,170,52)" fg:x="750" fg:w="1"/><text x="59.7738%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.5238%" y="277" width="0.0794%" height="15" fill="rgb(233,109,47)" fg:x="750" fg:w="1"/><text x="59.7738%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.5238%" y="261" width="0.0794%" height="15" fill="rgb(208,212,30)" fg:x="750" fg:w="1"/><text x="59.7738%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.5238%" y="245" width="0.0794%" height="15" fill="rgb(215,190,19)" fg:x="750" fg:w="1"/><text x="59.7738%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5238%" y="229" width="0.0794%" height="15" fill="rgb(207,164,53)" fg:x="750" fg:w="1"/><text x="59.7738%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5238%" y="213" width="0.0794%" height="15" fill="rgb(213,87,49)" fg:x="750" fg:w="1"/><text x="59.7738%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.5238%" y="197" width="0.0794%" height="15" fill="rgb(241,216,24)" fg:x="750" fg:w="1"/><text x="59.7738%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.5238%" y="181" width="0.0794%" height="15" fill="rgb(241,123,45)" fg:x="750" fg:w="1"/><text x="59.7738%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.5238%" y="165" width="0.0794%" height="15" fill="rgb(220,36,15)" fg:x="750" fg:w="1"/><text x="59.7738%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.5238%" y="149" width="0.0794%" height="15" fill="rgb(215,202,9)" fg:x="750" fg:w="1"/><text x="59.7738%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5238%" y="133" width="0.0794%" height="15" fill="rgb(252,71,26)" fg:x="750" fg:w="1"/><text x="59.7738%" y="143.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.5238%" y="373" width="0.1587%" height="15" fill="rgb(243,195,19)" fg:x="750" fg:w="2"/><text x="59.7738%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.5238%" y="357" width="0.1587%" height="15" fill="rgb(207,167,27)" fg:x="750" fg:w="2"/><text x="59.7738%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6032%" y="341" width="0.0794%" height="15" fill="rgb(250,146,54)" fg:x="751" fg:w="1"/><text x="59.8532%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (14 samples, 1.11%)</title><rect x="58.6508%" y="437" width="1.1111%" height="15" fill="rgb(245,79,9)" fg:x="739" fg:w="14"/><text x="58.9008%" y="447.50"></text></g><g><title>plugins_core::tools::contained_by (4 samples, 0.32%)</title><rect x="59.4444%" y="421" width="0.3175%" height="15" fill="rgb(234,197,22)" fg:x="749" fg:w="4"/><text x="59.6944%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="59.5238%" y="405" width="0.2381%" height="15" fill="rgb(221,52,48)" fg:x="750" fg:w="3"/><text x="59.7738%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="59.5238%" y="389" width="0.2381%" height="15" fill="rgb(235,80,0)" fg:x="750" fg:w="3"/><text x="59.7738%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="59.6825%" y="373" width="0.0794%" height="15" fill="rgb(221,117,53)" fg:x="752" fg:w="1"/><text x="59.9325%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="59.6825%" y="357" width="0.0794%" height="15" fill="rgb(239,48,47)" fg:x="752" fg:w="1"/><text x="59.9325%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="59.6825%" y="341" width="0.0794%" height="15" fill="rgb(227,191,52)" fg:x="752" fg:w="1"/><text x="59.9325%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="59.6825%" y="325" width="0.0794%" height="15" fill="rgb(241,118,1)" fg:x="752" fg:w="1"/><text x="59.9325%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="59.6825%" y="309" width="0.0794%" height="15" fill="rgb(240,85,3)" fg:x="752" fg:w="1"/><text x="59.9325%" y="319.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="59.6825%" y="293" width="0.0794%" height="15" fill="rgb(237,68,37)" fg:x="752" fg:w="1"/><text x="59.9325%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.8413%" y="421" width="0.1587%" height="15" fill="rgb(212,9,20)" fg:x="754" fg:w="2"/><text x="60.0913%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.8413%" y="405" width="0.1587%" height="15" fill="rgb(218,84,17)" fg:x="754" fg:w="2"/><text x="60.0913%" y="415.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="60.0000%" y="421" width="0.0794%" height="15" fill="rgb(235,147,20)" fg:x="756" fg:w="1"/><text x="60.2500%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0794%" y="325" width="0.0794%" height="15" fill="rgb(208,224,1)" fg:x="757" fg:w="1"/><text x="60.3294%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0794%" y="309" width="0.0794%" height="15" fill="rgb(232,97,50)" fg:x="757" fg:w="1"/><text x="60.3294%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0794%" y="293" width="0.0794%" height="15" fill="rgb(238,15,45)" fg:x="757" fg:w="1"/><text x="60.3294%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0794%" y="277" width="0.0794%" height="15" fill="rgb(231,46,18)" fg:x="757" fg:w="1"/><text x="60.3294%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.1587%" y="229" width="0.0794%" height="15" fill="rgb(254,169,10)" fg:x="758" fg:w="1"/><text x="60.4087%" y="239.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (7 samples, 0.56%)</title><rect x="59.7619%" y="437" width="0.5556%" height="15" fill="rgb(243,169,30)" fg:x="753" fg:w="7"/><text x="60.0119%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="60.0794%" y="421" width="0.2381%" height="15" fill="rgb(236,90,49)" fg:x="757" fg:w="3"/><text x="60.3294%" y="431.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="60.0794%" y="405" width="0.2381%" height="15" fill="rgb(218,80,15)" fg:x="757" fg:w="3"/><text x="60.3294%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="60.0794%" y="389" width="0.2381%" height="15" fill="rgb(222,115,37)" fg:x="757" fg:w="3"/><text x="60.3294%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="60.0794%" y="373" width="0.2381%" height="15" fill="rgb(227,0,6)" fg:x="757" fg:w="3"/><text x="60.3294%" y="383.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="60.0794%" y="357" width="0.2381%" height="15" fill="rgb(217,189,13)" fg:x="757" fg:w="3"/><text x="60.3294%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="60.0794%" y="341" width="0.2381%" height="15" fill="rgb(220,74,19)" fg:x="757" fg:w="3"/><text x="60.3294%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1587%" y="325" width="0.1587%" height="15" fill="rgb(224,81,18)" fg:x="758" fg:w="2"/><text x="60.4087%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1587%" y="309" width="0.1587%" height="15" fill="rgb(245,178,48)" fg:x="758" fg:w="2"/><text x="60.4087%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1587%" y="293" width="0.1587%" height="15" fill="rgb(207,78,24)" fg:x="758" fg:w="2"/><text x="60.4087%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1587%" y="277" width="0.1587%" height="15" fill="rgb(223,222,30)" fg:x="758" fg:w="2"/><text x="60.4087%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="60.1587%" y="261" width="0.1587%" height="15" fill="rgb(234,101,12)" fg:x="758" fg:w="2"/><text x="60.4087%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1587%" y="245" width="0.1587%" height="15" fill="rgb(209,80,46)" fg:x="758" fg:w="2"/><text x="60.4087%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2381%" y="229" width="0.0794%" height="15" fill="rgb(228,79,14)" fg:x="759" fg:w="1"/><text x="60.4881%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2381%" y="213" width="0.0794%" height="15" fill="rgb(220,219,34)" fg:x="759" fg:w="1"/><text x="60.4881%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (26 samples, 2.06%)</title><rect x="58.4127%" y="469" width="2.0635%" height="15" fill="rgb(207,80,21)" fg:x="736" fg:w="26"/><text x="58.6627%" y="479.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (26 samples, 2.06%)</title><rect x="58.4127%" y="453" width="2.0635%" height="15" fill="rgb(210,154,44)" fg:x="736" fg:w="26"/><text x="58.6627%" y="463.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="60.3175%" y="437" width="0.1587%" height="15" fill="rgb(246,44,39)" fg:x="760" fg:w="2"/><text x="60.5675%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.3175%" y="421" width="0.1587%" height="15" fill="rgb(252,175,13)" fg:x="760" fg:w="2"/><text x="60.5675%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.3175%" y="405" width="0.1587%" height="15" fill="rgb(211,50,39)" fg:x="760" fg:w="2"/><text x="60.5675%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3968%" y="389" width="0.0794%" height="15" fill="rgb(231,204,27)" fg:x="761" fg:w="1"/><text x="60.6468%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.3968%" y="373" width="0.0794%" height="15" fill="rgb(253,26,34)" fg:x="761" fg:w="1"/><text x="60.6468%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.3968%" y="357" width="0.0794%" height="15" fill="rgb(207,139,38)" fg:x="761" fg:w="1"/><text x="60.6468%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.3968%" y="341" width="0.0794%" height="15" fill="rgb(248,54,27)" fg:x="761" fg:w="1"/><text x="60.6468%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3968%" y="325" width="0.0794%" height="15" fill="rgb(234,25,33)" fg:x="761" fg:w="1"/><text x="60.6468%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3968%" y="309" width="0.0794%" height="15" fill="rgb(249,107,47)" fg:x="761" fg:w="1"/><text x="60.6468%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.3968%" y="293" width="0.0794%" height="15" fill="rgb(230,190,31)" fg:x="761" fg:w="1"/><text x="60.6468%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.3968%" y="277" width="0.0794%" height="15" fill="rgb(238,173,45)" fg:x="761" fg:w="1"/><text x="60.6468%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.3968%" y="261" width="0.0794%" height="15" fill="rgb(222,16,50)" fg:x="761" fg:w="1"/><text x="60.6468%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.3968%" y="245" width="0.0794%" height="15" fill="rgb(251,204,47)" fg:x="761" fg:w="1"/><text x="60.6468%" y="255.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="60.4762%" y="469" width="0.0794%" height="15" fill="rgb(225,12,3)" fg:x="762" fg:w="1"/><text x="60.7262%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.5556%" y="437" width="0.0794%" height="15" fill="rgb(214,208,22)" fg:x="763" fg:w="1"/><text x="60.8056%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7143%" y="341" width="0.0794%" height="15" fill="rgb(240,57,32)" fg:x="765" fg:w="1"/><text x="60.9643%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7143%" y="325" width="0.0794%" height="15" fill="rgb(243,113,48)" fg:x="765" fg:w="1"/><text x="60.9643%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7143%" y="405" width="0.1587%" height="15" fill="rgb(225,135,30)" fg:x="765" fg:w="2"/><text x="60.9643%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7143%" y="389" width="0.1587%" height="15" fill="rgb(222,3,53)" fg:x="765" fg:w="2"/><text x="60.9643%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7143%" y="373" width="0.1587%" height="15" fill="rgb(243,142,2)" fg:x="765" fg:w="2"/><text x="60.9643%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7143%" y="357" width="0.1587%" height="15" fill="rgb(233,67,14)" fg:x="765" fg:w="2"/><text x="60.9643%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="60.7937%" y="341" width="0.0794%" height="15" fill="rgb(245,125,36)" fg:x="766" fg:w="1"/><text x="61.0437%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="60.7937%" y="325" width="0.0794%" height="15" fill="rgb(225,199,6)" fg:x="766" fg:w="1"/><text x="61.0437%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="60.8730%" y="405" width="0.0794%" height="15" fill="rgb(244,71,6)" fg:x="767" fg:w="1"/><text x="61.1230%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="60.8730%" y="389" width="0.0794%" height="15" fill="rgb(225,62,9)" fg:x="767" fg:w="1"/><text x="61.1230%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.8730%" y="373" width="0.0794%" height="15" fill="rgb(246,139,53)" fg:x="767" fg:w="1"/><text x="61.1230%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.8730%" y="357" width="0.0794%" height="15" fill="rgb(243,161,46)" fg:x="767" fg:w="1"/><text x="61.1230%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.8730%" y="341" width="0.0794%" height="15" fill="rgb(236,153,7)" fg:x="767" fg:w="1"/><text x="61.1230%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.8730%" y="325" width="0.0794%" height="15" fill="rgb(248,42,35)" fg:x="767" fg:w="1"/><text x="61.1230%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.8730%" y="309" width="0.0794%" height="15" fill="rgb(250,17,31)" fg:x="767" fg:w="1"/><text x="61.1230%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9524%" y="309" width="0.0794%" height="15" fill="rgb(248,138,14)" fg:x="768" fg:w="1"/><text x="61.2024%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="60.5556%" y="453" width="0.5556%" height="15" fill="rgb(228,161,3)" fg:x="763" fg:w="7"/><text x="60.8056%" y="463.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="60.6349%" y="437" width="0.4762%" height="15" fill="rgb(248,116,17)" fg:x="764" fg:w="6"/><text x="60.8849%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="60.6349%" y="421" width="0.4762%" height="15" fill="rgb(207,78,24)" fg:x="764" fg:w="6"/><text x="60.8849%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.9524%" y="405" width="0.1587%" height="15" fill="rgb(234,99,48)" fg:x="768" fg:w="2"/><text x="61.2024%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.9524%" y="389" width="0.1587%" height="15" fill="rgb(242,22,26)" fg:x="768" fg:w="2"/><text x="61.2024%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.9524%" y="373" width="0.1587%" height="15" fill="rgb(227,78,32)" fg:x="768" fg:w="2"/><text x="61.2024%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.9524%" y="357" width="0.1587%" height="15" fill="rgb(226,189,43)" fg:x="768" fg:w="2"/><text x="61.2024%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="60.9524%" y="341" width="0.1587%" height="15" fill="rgb(227,218,35)" fg:x="768" fg:w="2"/><text x="61.2024%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.9524%" y="325" width="0.1587%" height="15" fill="rgb(206,111,40)" fg:x="768" fg:w="2"/><text x="61.2024%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.0317%" y="309" width="0.0794%" height="15" fill="rgb(208,217,22)" fg:x="769" fg:w="1"/><text x="61.2817%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.0317%" y="293" width="0.0794%" height="15" fill="rgb(248,20,20)" fg:x="769" fg:w="1"/><text x="61.2817%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.0317%" y="277" width="0.0794%" height="15" fill="rgb(239,155,16)" fg:x="769" fg:w="1"/><text x="61.2817%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.0317%" y="261" width="0.0794%" height="15" fill="rgb(238,171,46)" fg:x="769" fg:w="1"/><text x="61.2817%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.0317%" y="245" width="0.0794%" height="15" fill="rgb(248,11,36)" fg:x="769" fg:w="1"/><text x="61.2817%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.0317%" y="229" width="0.0794%" height="15" fill="rgb(220,148,37)" fg:x="769" fg:w="1"/><text x="61.2817%" y="239.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.1111%" y="437" width="0.0794%" height="15" fill="rgb(218,144,42)" fg:x="770" fg:w="1"/><text x="61.3611%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4286%" y="325" width="0.0794%" height="15" fill="rgb(245,20,20)" fg:x="774" fg:w="1"/><text x="61.6786%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4286%" y="309" width="0.0794%" height="15" fill="rgb(240,111,48)" fg:x="774" fg:w="1"/><text x="61.6786%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.4286%" y="293" width="0.0794%" height="15" fill="rgb(237,225,32)" fg:x="774" fg:w="1"/><text x="61.6786%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.4286%" y="277" width="0.0794%" height="15" fill="rgb(228,161,46)" fg:x="774" fg:w="1"/><text x="61.6786%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4286%" y="261" width="0.0794%" height="15" fill="rgb(235,196,21)" fg:x="774" fg:w="1"/><text x="61.6786%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4286%" y="245" width="0.0794%" height="15" fill="rgb(250,133,21)" fg:x="774" fg:w="1"/><text x="61.6786%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4286%" y="229" width="0.0794%" height="15" fill="rgb(236,94,32)" fg:x="774" fg:w="1"/><text x="61.6786%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.4286%" y="213" width="0.0794%" height="15" fill="rgb(219,176,25)" fg:x="774" fg:w="1"/><text x="61.6786%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.4286%" y="197" width="0.0794%" height="15" fill="rgb(211,17,43)" fg:x="774" fg:w="1"/><text x="61.6786%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.4286%" y="181" width="0.0794%" height="15" fill="rgb(220,75,23)" fg:x="774" fg:w="1"/><text x="61.6786%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.4286%" y="165" width="0.0794%" height="15" fill="rgb(215,122,32)" fg:x="774" fg:w="1"/><text x="61.6786%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4286%" y="149" width="0.0794%" height="15" fill="rgb(218,57,38)" fg:x="774" fg:w="1"/><text x="61.6786%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.4286%" y="341" width="0.1587%" height="15" fill="rgb(233,208,46)" fg:x="774" fg:w="2"/><text x="61.6786%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5079%" y="325" width="0.0794%" height="15" fill="rgb(221,35,50)" fg:x="775" fg:w="1"/><text x="61.7579%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="61.2698%" y="405" width="0.3968%" height="15" fill="rgb(229,213,29)" fg:x="772" fg:w="5"/><text x="61.5198%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="61.2698%" y="389" width="0.3968%" height="15" fill="rgb(229,110,40)" fg:x="772" fg:w="5"/><text x="61.5198%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="61.3492%" y="373" width="0.3175%" height="15" fill="rgb(247,206,19)" fg:x="773" fg:w="4"/><text x="61.5992%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.4286%" y="357" width="0.2381%" height="15" fill="rgb(216,229,45)" fg:x="774" fg:w="3"/><text x="61.6786%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5873%" y="341" width="0.0794%" height="15" fill="rgb(205,184,31)" fg:x="776" fg:w="1"/><text x="61.8373%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (15 samples, 1.19%)</title><rect x="60.5556%" y="469" width="1.1905%" height="15" fill="rgb(213,91,10)" fg:x="763" fg:w="15"/><text x="60.8056%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.63%)</title><rect x="61.1111%" y="453" width="0.6349%" height="15" fill="rgb(250,49,8)" fg:x="770" fg:w="8"/><text x="61.3611%" y="463.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="61.1905%" y="437" width="0.5556%" height="15" fill="rgb(207,26,8)" fg:x="771" fg:w="7"/><text x="61.4405%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="61.1905%" y="421" width="0.5556%" height="15" fill="rgb(224,2,13)" fg:x="771" fg:w="7"/><text x="61.4405%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.6667%" y="405" width="0.0794%" height="15" fill="rgb(219,108,27)" fg:x="777" fg:w="1"/><text x="61.9167%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.6667%" y="389" width="0.0794%" height="15" fill="rgb(240,89,32)" fg:x="777" fg:w="1"/><text x="61.9167%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.6667%" y="373" width="0.0794%" height="15" fill="rgb(248,205,3)" fg:x="777" fg:w="1"/><text x="61.9167%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.6667%" y="357" width="0.0794%" height="15" fill="rgb(236,197,47)" fg:x="777" fg:w="1"/><text x="61.9167%" y="367.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="61.7460%" y="469" width="0.0794%" height="15" fill="rgb(244,185,52)" fg:x="778" fg:w="1"/><text x="61.9960%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="61.7460%" y="453" width="0.0794%" height="15" fill="rgb(210,206,23)" fg:x="778" fg:w="1"/><text x="61.9960%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="61.7460%" y="437" width="0.0794%" height="15" fill="rgb(251,177,30)" fg:x="778" fg:w="1"/><text x="61.9960%" y="447.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="61.7460%" y="421" width="0.0794%" height="15" fill="rgb(243,27,45)" fg:x="778" fg:w="1"/><text x="61.9960%" y="431.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="61.7460%" y="405" width="0.0794%" height="15" fill="rgb(248,141,51)" fg:x="778" fg:w="1"/><text x="61.9960%" y="415.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.9048%" y="405" width="0.0794%" height="15" fill="rgb(235,102,15)" fg:x="780" fg:w="1"/><text x="62.1548%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.9048%" y="389" width="0.0794%" height="15" fill="rgb(214,164,53)" fg:x="780" fg:w="1"/><text x="62.1548%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.9048%" y="373" width="0.0794%" height="15" fill="rgb(228,18,51)" fg:x="780" fg:w="1"/><text x="62.1548%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="61.9048%" y="421" width="0.1587%" height="15" fill="rgb(205,211,11)" fg:x="780" fg:w="2"/><text x="62.1548%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="61.9841%" y="405" width="0.0794%" height="15" fill="rgb(208,63,6)" fg:x="781" fg:w="1"/><text x="62.2341%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="61.9841%" y="389" width="0.0794%" height="15" fill="rgb(245,76,14)" fg:x="781" fg:w="1"/><text x="62.2341%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.9841%" y="373" width="0.0794%" height="15" fill="rgb(234,176,34)" fg:x="781" fg:w="1"/><text x="62.2341%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9841%" y="357" width="0.0794%" height="15" fill="rgb(243,156,42)" fg:x="781" fg:w="1"/><text x="62.2341%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.9841%" y="341" width="0.0794%" height="15" fill="rgb(237,182,10)" fg:x="781" fg:w="1"/><text x="62.2341%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9841%" y="325" width="0.0794%" height="15" fill="rgb(244,117,0)" fg:x="781" fg:w="1"/><text x="62.2341%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.9841%" y="309" width="0.0794%" height="15" fill="rgb(239,91,50)" fg:x="781" fg:w="1"/><text x="62.2341%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9841%" y="293" width="0.0794%" height="15" fill="rgb(206,38,9)" fg:x="781" fg:w="1"/><text x="62.2341%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9841%" y="277" width="0.0794%" height="15" fill="rgb(205,25,10)" fg:x="781" fg:w="1"/><text x="62.2341%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9841%" y="261" width="0.0794%" height="15" fill="rgb(206,224,7)" fg:x="781" fg:w="1"/><text x="62.2341%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1429%" y="277" width="0.0794%" height="15" fill="rgb(227,157,10)" fg:x="783" fg:w="1"/><text x="62.3929%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="61.9048%" y="453" width="0.4762%" height="15" fill="rgb(214,157,37)" fg:x="780" fg:w="6"/><text x="62.1548%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="61.9048%" y="437" width="0.4762%" height="15" fill="rgb(209,180,35)" fg:x="780" fg:w="6"/><text x="62.1548%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="62.0635%" y="421" width="0.3175%" height="15" fill="rgb(216,174,49)" fg:x="782" fg:w="4"/><text x="62.3135%" y="431.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="62.0635%" y="405" width="0.3175%" height="15" fill="rgb(205,96,20)" fg:x="782" fg:w="4"/><text x="62.3135%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="62.0635%" y="389" width="0.3175%" height="15" fill="rgb(214,220,39)" fg:x="782" fg:w="4"/><text x="62.3135%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.0635%" y="373" width="0.3175%" height="15" fill="rgb(245,126,30)" fg:x="782" fg:w="4"/><text x="62.3135%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.0635%" y="357" width="0.3175%" height="15" fill="rgb(215,88,33)" fg:x="782" fg:w="4"/><text x="62.3135%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.0635%" y="341" width="0.3175%" height="15" fill="rgb(210,1,49)" fg:x="782" fg:w="4"/><text x="62.3135%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.1429%" y="325" width="0.2381%" height="15" fill="rgb(207,133,3)" fg:x="783" fg:w="3"/><text x="62.3929%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="62.1429%" y="309" width="0.2381%" height="15" fill="rgb(231,47,43)" fg:x="783" fg:w="3"/><text x="62.3929%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.1429%" y="293" width="0.2381%" height="15" fill="rgb(245,64,1)" fg:x="783" fg:w="3"/><text x="62.3929%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.2222%" y="277" width="0.1587%" height="15" fill="rgb(253,145,20)" fg:x="784" fg:w="2"/><text x="62.4722%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.2222%" y="261" width="0.1587%" height="15" fill="rgb(211,39,18)" fg:x="784" fg:w="2"/><text x="62.4722%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.3016%" y="245" width="0.0794%" height="15" fill="rgb(223,225,18)" fg:x="785" fg:w="1"/><text x="62.5516%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3016%" y="229" width="0.0794%" height="15" fill="rgb(210,202,44)" fg:x="785" fg:w="1"/><text x="62.5516%" y="239.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="62.3810%" y="453" width="0.0794%" height="15" fill="rgb(231,138,36)" fg:x="786" fg:w="1"/><text x="62.6310%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.3810%" y="437" width="0.0794%" height="15" fill="rgb(237,115,25)" fg:x="786" fg:w="1"/><text x="62.6310%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3810%" y="421" width="0.0794%" height="15" fill="rgb(215,53,48)" fg:x="786" fg:w="1"/><text x="62.6310%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3810%" y="405" width="0.0794%" height="15" fill="rgb(243,193,24)" fg:x="786" fg:w="1"/><text x="62.6310%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3810%" y="389" width="0.0794%" height="15" fill="rgb(210,106,28)" fg:x="786" fg:w="1"/><text x="62.6310%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3810%" y="373" width="0.0794%" height="15" fill="rgb(249,192,0)" fg:x="786" fg:w="1"/><text x="62.6310%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3810%" y="357" width="0.0794%" height="15" fill="rgb(224,96,21)" fg:x="786" fg:w="1"/><text x="62.6310%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3810%" y="341" width="0.0794%" height="15" fill="rgb(243,160,19)" fg:x="786" fg:w="1"/><text x="62.6310%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3810%" y="325" width="0.0794%" height="15" fill="rgb(219,205,50)" fg:x="786" fg:w="1"/><text x="62.6310%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3810%" y="309" width="0.0794%" height="15" fill="rgb(218,175,44)" fg:x="786" fg:w="1"/><text x="62.6310%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3810%" y="293" width="0.0794%" height="15" fill="rgb(251,84,47)" fg:x="786" fg:w="1"/><text x="62.6310%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3810%" y="277" width="0.0794%" height="15" fill="rgb(241,14,16)" fg:x="786" fg:w="1"/><text x="62.6310%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3810%" y="261" width="0.0794%" height="15" fill="rgb(207,142,28)" fg:x="786" fg:w="1"/><text x="62.6310%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.3810%" y="245" width="0.0794%" height="15" fill="rgb(208,116,22)" fg:x="786" fg:w="1"/><text x="62.6310%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.3810%" y="229" width="0.0794%" height="15" fill="rgb(210,0,43)" fg:x="786" fg:w="1"/><text x="62.6310%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.3810%" y="213" width="0.0794%" height="15" fill="rgb(246,33,21)" fg:x="786" fg:w="1"/><text x="62.6310%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.3810%" y="197" width="0.0794%" height="15" fill="rgb(208,158,54)" fg:x="786" fg:w="1"/><text x="62.6310%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3810%" y="181" width="0.0794%" height="15" fill="rgb(218,99,29)" fg:x="786" fg:w="1"/><text x="62.6310%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.5397%" y="421" width="0.0794%" height="15" fill="rgb(226,29,7)" fg:x="788" fg:w="1"/><text x="62.7897%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5397%" y="405" width="0.0794%" height="15" fill="rgb(206,178,46)" fg:x="788" fg:w="1"/><text x="62.7897%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.5397%" y="389" width="0.0794%" height="15" fill="rgb(205,169,32)" fg:x="788" fg:w="1"/><text x="62.7897%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5397%" y="373" width="0.0794%" height="15" fill="rgb(217,4,13)" fg:x="788" fg:w="1"/><text x="62.7897%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.6190%" y="389" width="0.1587%" height="15" fill="rgb(210,140,37)" fg:x="789" fg:w="2"/><text x="62.8690%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.7778%" y="389" width="0.0794%" height="15" fill="rgb(229,80,10)" fg:x="791" fg:w="1"/><text x="63.0278%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (6 samples, 0.48%)</title><rect x="62.6190%" y="421" width="0.4762%" height="15" fill="rgb(212,175,34)" fg:x="789" fg:w="6"/><text x="62.8690%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="62.6190%" y="405" width="0.4762%" height="15" fill="rgb(216,207,24)" fg:x="789" fg:w="6"/><text x="62.8690%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="62.8571%" y="389" width="0.2381%" height="15" fill="rgb(234,163,3)" fg:x="792" fg:w="3"/><text x="63.1071%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="62.9365%" y="373" width="0.1587%" height="15" fill="rgb(248,101,16)" fg:x="793" fg:w="2"/><text x="63.1865%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="62.9365%" y="357" width="0.1587%" height="15" fill="rgb(209,152,54)" fg:x="793" fg:w="2"/><text x="63.1865%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.0159%" y="341" width="0.0794%" height="15" fill="rgb(229,124,51)" fg:x="794" fg:w="1"/><text x="63.2659%" y="351.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (9 samples, 0.71%)</title><rect x="62.4603%" y="453" width="0.7143%" height="15" fill="rgb(219,83,18)" fg:x="787" fg:w="9"/><text x="62.7103%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (9 samples, 0.71%)</title><rect x="62.4603%" y="437" width="0.7143%" height="15" fill="rgb(206,29,38)" fg:x="787" fg:w="9"/><text x="62.7103%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="63.0952%" y="421" width="0.0794%" height="15" fill="rgb(245,123,23)" fg:x="795" fg:w="1"/><text x="63.3452%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="63.0952%" y="405" width="0.0794%" height="15" fill="rgb(238,50,33)" fg:x="795" fg:w="1"/><text x="63.3452%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="63.0952%" y="389" width="0.0794%" height="15" fill="rgb(234,165,23)" fg:x="795" fg:w="1"/><text x="63.3452%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="63.0952%" y="373" width="0.0794%" height="15" fill="rgb(211,82,31)" fg:x="795" fg:w="1"/><text x="63.3452%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.0952%" y="357" width="0.0794%" height="15" fill="rgb(224,166,46)" fg:x="795" fg:w="1"/><text x="63.3452%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="63.1746%" y="437" width="0.1587%" height="15" fill="rgb(211,13,8)" fg:x="796" fg:w="2"/><text x="63.4246%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="63.1746%" y="421" width="0.1587%" height="15" fill="rgb(212,7,42)" fg:x="796" fg:w="2"/><text x="63.4246%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (2 samples, 0.16%)</title><rect x="63.1746%" y="405" width="0.1587%" height="15" fill="rgb(249,102,19)" fg:x="796" fg:w="2"/><text x="63.4246%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="63.2540%" y="389" width="0.0794%" height="15" fill="rgb(225,41,13)" fg:x="797" fg:w="1"/><text x="63.5040%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="63.2540%" y="373" width="0.0794%" height="15" fill="rgb(220,65,27)" fg:x="797" fg:w="1"/><text x="63.5040%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="63.2540%" y="357" width="0.0794%" height="15" fill="rgb(206,4,41)" fg:x="797" fg:w="1"/><text x="63.5040%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.2540%" y="341" width="0.0794%" height="15" fill="rgb(219,60,39)" fg:x="797" fg:w="1"/><text x="63.5040%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.2540%" y="325" width="0.0794%" height="15" fill="rgb(226,4,38)" fg:x="797" fg:w="1"/><text x="63.5040%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.2540%" y="309" width="0.0794%" height="15" fill="rgb(250,52,3)" fg:x="797" fg:w="1"/><text x="63.5040%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="63.2540%" y="293" width="0.0794%" height="15" fill="rgb(234,93,0)" fg:x="797" fg:w="1"/><text x="63.5040%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.2540%" y="277" width="0.0794%" height="15" fill="rgb(251,47,47)" fg:x="797" fg:w="1"/><text x="63.5040%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="63.3333%" y="389" width="0.0794%" height="15" fill="rgb(205,166,47)" fg:x="798" fg:w="1"/><text x="63.5833%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.4127%" y="309" width="0.0794%" height="15" fill="rgb(231,148,8)" fg:x="799" fg:w="1"/><text x="63.6627%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.4127%" y="293" width="0.0794%" height="15" fill="rgb(244,185,19)" fg:x="799" fg:w="1"/><text x="63.6627%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4127%" y="277" width="0.0794%" height="15" fill="rgb(224,201,45)" fg:x="799" fg:w="1"/><text x="63.6627%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4921%" y="309" width="0.0794%" height="15" fill="rgb(240,77,39)" fg:x="800" fg:w="1"/><text x="63.7421%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4921%" y="293" width="0.0794%" height="15" fill="rgb(248,211,29)" fg:x="800" fg:w="1"/><text x="63.7421%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.4921%" y="277" width="0.0794%" height="15" fill="rgb(232,214,46)" fg:x="800" fg:w="1"/><text x="63.7421%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.4921%" y="261" width="0.0794%" height="15" fill="rgb(213,99,54)" fg:x="800" fg:w="1"/><text x="63.7421%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.4921%" y="245" width="0.0794%" height="15" fill="rgb(240,19,46)" fg:x="800" fg:w="1"/><text x="63.7421%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="63.4921%" y="229" width="0.0794%" height="15" fill="rgb(243,89,10)" fg:x="800" fg:w="1"/><text x="63.7421%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.4921%" y="213" width="0.0794%" height="15" fill="rgb(249,28,32)" fg:x="800" fg:w="1"/><text x="63.7421%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.4127%" y="357" width="0.2381%" height="15" fill="rgb(253,30,9)" fg:x="799" fg:w="3"/><text x="63.6627%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.4127%" y="341" width="0.2381%" height="15" fill="rgb(217,2,26)" fg:x="799" fg:w="3"/><text x="63.6627%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.4127%" y="325" width="0.2381%" height="15" fill="rgb(220,28,10)" fg:x="799" fg:w="3"/><text x="63.6627%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5714%" y="309" width="0.0794%" height="15" fill="rgb(228,167,49)" fg:x="801" fg:w="1"/><text x="63.8214%" y="319.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="63.1746%" y="453" width="0.5556%" height="15" fill="rgb(238,212,3)" fg:x="796" fg:w="7"/><text x="63.4246%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="63.3333%" y="437" width="0.3968%" height="15" fill="rgb(229,134,44)" fg:x="798" fg:w="5"/><text x="63.5833%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="63.3333%" y="421" width="0.3968%" height="15" fill="rgb(208,71,4)" fg:x="798" fg:w="5"/><text x="63.5833%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="63.3333%" y="405" width="0.3968%" height="15" fill="rgb(221,205,45)" fg:x="798" fg:w="5"/><text x="63.5833%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="63.4127%" y="389" width="0.3175%" height="15" fill="rgb(215,132,38)" fg:x="799" fg:w="4"/><text x="63.6627%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="63.4127%" y="373" width="0.3175%" height="15" fill="rgb(227,158,6)" fg:x="799" fg:w="4"/><text x="63.6627%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.6508%" y="357" width="0.0794%" height="15" fill="rgb(250,10,38)" fg:x="802" fg:w="1"/><text x="63.9008%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6508%" y="341" width="0.0794%" height="15" fill="rgb(225,171,40)" fg:x="802" fg:w="1"/><text x="63.9008%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.6508%" y="325" width="0.0794%" height="15" fill="rgb(238,17,43)" fg:x="802" fg:w="1"/><text x="63.9008%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6508%" y="309" width="0.0794%" height="15" fill="rgb(208,145,4)" fg:x="802" fg:w="1"/><text x="63.9008%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.6508%" y="293" width="0.0794%" height="15" fill="rgb(232,82,7)" fg:x="802" fg:w="1"/><text x="63.9008%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6508%" y="277" width="0.0794%" height="15" fill="rgb(205,166,38)" fg:x="802" fg:w="1"/><text x="63.9008%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.6508%" y="261" width="0.0794%" height="15" fill="rgb(240,228,4)" fg:x="802" fg:w="1"/><text x="63.9008%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6508%" y="245" width="0.0794%" height="15" fill="rgb(233,121,40)" fg:x="802" fg:w="1"/><text x="63.9008%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (70 samples, 5.56%)</title><rect x="58.3333%" y="485" width="5.5556%" height="15" fill="rgb(243,84,30)" fg:x="735" fg:w="70"/><text x="58.5833%" y="495.50">&lt;plugin..</text></g><g><title>plugins_core::tools::move_between (26 samples, 2.06%)</title><rect x="61.8254%" y="469" width="2.0635%" height="15" fill="rgb(235,81,48)" fg:x="779" fg:w="26"/><text x="62.0754%" y="479.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="63.7302%" y="453" width="0.1587%" height="15" fill="rgb(218,137,0)" fg:x="803" fg:w="2"/><text x="63.9802%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.7302%" y="437" width="0.1587%" height="15" fill="rgb(223,151,48)" fg:x="803" fg:w="2"/><text x="63.9802%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.7302%" y="421" width="0.1587%" height="15" fill="rgb(247,30,19)" fg:x="803" fg:w="2"/><text x="63.9802%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="63.7302%" y="405" width="0.1587%" height="15" fill="rgb(205,129,29)" fg:x="803" fg:w="2"/><text x="63.9802%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="63.7302%" y="389" width="0.1587%" height="15" fill="rgb(222,29,2)" fg:x="803" fg:w="2"/><text x="63.9802%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="63.7302%" y="373" width="0.1587%" height="15" fill="rgb(232,145,33)" fg:x="803" fg:w="2"/><text x="63.9802%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.7302%" y="357" width="0.1587%" height="15" fill="rgb(217,30,31)" fg:x="803" fg:w="2"/><text x="63.9802%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.7302%" y="341" width="0.1587%" height="15" fill="rgb(243,22,52)" fg:x="803" fg:w="2"/><text x="63.9802%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="63.7302%" y="325" width="0.1587%" height="15" fill="rgb(254,228,14)" fg:x="803" fg:w="2"/><text x="63.9802%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="63.7302%" y="309" width="0.1587%" height="15" fill="rgb(231,45,50)" fg:x="803" fg:w="2"/><text x="63.9802%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="63.7302%" y="293" width="0.1587%" height="15" fill="rgb(248,125,3)" fg:x="803" fg:w="2"/><text x="63.9802%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="63.7302%" y="277" width="0.1587%" height="15" fill="rgb(213,76,9)" fg:x="803" fg:w="2"/><text x="63.9802%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.8095%" y="261" width="0.0794%" height="15" fill="rgb(238,108,21)" fg:x="804" fg:w="1"/><text x="64.0595%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.9683%" y="421" width="0.1587%" height="15" fill="rgb(229,214,19)" fg:x="806" fg:w="2"/><text x="64.2183%" y="431.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.9683%" y="405" width="0.1587%" height="15" fill="rgb(252,201,5)" fg:x="806" fg:w="2"/><text x="64.2183%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.9683%" y="389" width="0.1587%" height="15" fill="rgb(233,165,49)" fg:x="806" fg:w="2"/><text x="64.2183%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.9683%" y="373" width="0.1587%" height="15" fill="rgb(208,165,19)" fg:x="806" fg:w="2"/><text x="64.2183%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="63.9683%" y="357" width="0.1587%" height="15" fill="rgb(216,220,31)" fg:x="806" fg:w="2"/><text x="64.2183%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="63.9683%" y="341" width="0.1587%" height="15" fill="rgb(214,8,31)" fg:x="806" fg:w="2"/><text x="64.2183%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="63.9683%" y="325" width="0.1587%" height="15" fill="rgb(220,32,32)" fg:x="806" fg:w="2"/><text x="64.2183%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.9683%" y="309" width="0.1587%" height="15" fill="rgb(237,172,34)" fg:x="806" fg:w="2"/><text x="64.2183%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.9683%" y="293" width="0.1587%" height="15" fill="rgb(240,209,5)" fg:x="806" fg:w="2"/><text x="64.2183%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="63.9683%" y="277" width="0.1587%" height="15" fill="rgb(221,219,1)" fg:x="806" fg:w="2"/><text x="64.2183%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="63.9683%" y="261" width="0.1587%" height="15" fill="rgb(237,90,36)" fg:x="806" fg:w="2"/><text x="64.2183%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="63.9683%" y="245" width="0.1587%" height="15" fill="rgb(245,14,51)" fg:x="806" fg:w="2"/><text x="64.2183%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="63.9683%" y="229" width="0.1587%" height="15" fill="rgb(211,71,49)" fg:x="806" fg:w="2"/><text x="64.2183%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.9683%" y="213" width="0.1587%" height="15" fill="rgb(230,223,9)" fg:x="806" fg:w="2"/><text x="64.2183%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="64.1270%" y="421" width="0.3968%" height="15" fill="rgb(212,33,31)" fg:x="808" fg:w="5"/><text x="64.3770%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="64.1270%" y="405" width="0.3968%" height="15" fill="rgb(218,141,5)" fg:x="808" fg:w="5"/><text x="64.3770%" y="415.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="64.1270%" y="389" width="0.3968%" height="15" fill="rgb(239,194,8)" fg:x="808" fg:w="5"/><text x="64.3770%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.7619%" y="341" width="0.0794%" height="15" fill="rgb(225,119,29)" fg:x="816" fg:w="1"/><text x="65.0119%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.7619%" y="325" width="0.0794%" height="15" fill="rgb(233,32,3)" fg:x="816" fg:w="1"/><text x="65.0119%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.7619%" y="309" width="0.0794%" height="15" fill="rgb(248,126,40)" fg:x="816" fg:w="1"/><text x="65.0119%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.7619%" y="293" width="0.0794%" height="15" fill="rgb(213,102,53)" fg:x="816" fg:w="1"/><text x="65.0119%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.7619%" y="277" width="0.0794%" height="15" fill="rgb(212,69,15)" fg:x="816" fg:w="1"/><text x="65.0119%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7619%" y="261" width="0.0794%" height="15" fill="rgb(253,39,34)" fg:x="816" fg:w="1"/><text x="65.0119%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7619%" y="245" width="0.0794%" height="15" fill="rgb(205,189,54)" fg:x="816" fg:w="1"/><text x="65.0119%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.7619%" y="229" width="0.0794%" height="15" fill="rgb(234,229,45)" fg:x="816" fg:w="1"/><text x="65.0119%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.7619%" y="213" width="0.0794%" height="15" fill="rgb(243,79,48)" fg:x="816" fg:w="1"/><text x="65.0119%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.7619%" y="197" width="0.0794%" height="15" fill="rgb(206,71,50)" fg:x="816" fg:w="1"/><text x="65.0119%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.7619%" y="181" width="0.0794%" height="15" fill="rgb(209,32,17)" fg:x="816" fg:w="1"/><text x="65.0119%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7619%" y="165" width="0.0794%" height="15" fill="rgb(219,229,6)" fg:x="816" fg:w="1"/><text x="65.0119%" y="175.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="64.6825%" y="373" width="0.3968%" height="15" fill="rgb(226,25,27)" fg:x="815" fg:w="5"/><text x="64.9325%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="64.6825%" y="357" width="0.3968%" height="15" fill="rgb(218,185,23)" fg:x="815" fg:w="5"/><text x="64.9325%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="64.8413%" y="341" width="0.2381%" height="15" fill="rgb(242,123,5)" fg:x="817" fg:w="3"/><text x="65.0913%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.8413%" y="325" width="0.2381%" height="15" fill="rgb(215,53,19)" fg:x="817" fg:w="3"/><text x="65.0913%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0000%" y="309" width="0.0794%" height="15" fill="rgb(233,20,30)" fg:x="819" fg:w="1"/><text x="65.2500%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0000%" y="293" width="0.0794%" height="15" fill="rgb(209,67,20)" fg:x="819" fg:w="1"/><text x="65.2500%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.0000%" y="277" width="0.0794%" height="15" fill="rgb(227,181,50)" fg:x="819" fg:w="1"/><text x="65.2500%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.0000%" y="261" width="0.0794%" height="15" fill="rgb(252,75,38)" fg:x="819" fg:w="1"/><text x="65.2500%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.0000%" y="245" width="0.0794%" height="15" fill="rgb(235,9,33)" fg:x="819" fg:w="1"/><text x="65.2500%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0000%" y="229" width="0.0794%" height="15" fill="rgb(208,87,30)" fg:x="819" fg:w="1"/><text x="65.2500%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0000%" y="213" width="0.0794%" height="15" fill="rgb(215,199,39)" fg:x="819" fg:w="1"/><text x="65.2500%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.0000%" y="197" width="0.0794%" height="15" fill="rgb(246,208,12)" fg:x="819" fg:w="1"/><text x="65.2500%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.0000%" y="181" width="0.0794%" height="15" fill="rgb(206,195,10)" fg:x="819" fg:w="1"/><text x="65.2500%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.0000%" y="165" width="0.0794%" height="15" fill="rgb(244,1,30)" fg:x="819" fg:w="1"/><text x="65.2500%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.0000%" y="149" width="0.0794%" height="15" fill="rgb(230,83,5)" fg:x="819" fg:w="1"/><text x="65.2500%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0000%" y="133" width="0.0794%" height="15" fill="rgb(239,62,17)" fg:x="819" fg:w="1"/><text x="65.2500%" y="143.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="65.0794%" y="309" width="0.0794%" height="15" fill="rgb(252,193,41)" fg:x="820" fg:w="1"/><text x="65.3294%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0794%" y="293" width="0.0794%" height="15" fill="rgb(216,142,19)" fg:x="820" fg:w="1"/><text x="65.3294%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0794%" y="277" width="0.0794%" height="15" fill="rgb(240,81,38)" fg:x="820" fg:w="1"/><text x="65.3294%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.0794%" y="261" width="0.0794%" height="15" fill="rgb(240,109,40)" fg:x="820" fg:w="1"/><text x="65.3294%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.0794%" y="245" width="0.0794%" height="15" fill="rgb(230,123,10)" fg:x="820" fg:w="1"/><text x="65.3294%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.0794%" y="229" width="0.0794%" height="15" fill="rgb(253,42,32)" fg:x="820" fg:w="1"/><text x="65.3294%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0794%" y="213" width="0.0794%" height="15" fill="rgb(218,154,8)" fg:x="820" fg:w="1"/><text x="65.3294%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0794%" y="197" width="0.0794%" height="15" fill="rgb(216,197,10)" fg:x="820" fg:w="1"/><text x="65.3294%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.0794%" y="181" width="0.0794%" height="15" fill="rgb(223,107,12)" fg:x="820" fg:w="1"/><text x="65.3294%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.0794%" y="165" width="0.0794%" height="15" fill="rgb(241,174,42)" fg:x="820" fg:w="1"/><text x="65.3294%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.0794%" y="149" width="0.0794%" height="15" fill="rgb(231,78,20)" fg:x="820" fg:w="1"/><text x="65.3294%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.0794%" y="133" width="0.0794%" height="15" fill="rgb(230,208,49)" fg:x="820" fg:w="1"/><text x="65.3294%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0794%" y="117" width="0.0794%" height="15" fill="rgb(238,11,34)" fg:x="820" fg:w="1"/><text x="65.3294%" y="127.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="65.0794%" y="325" width="0.1587%" height="15" fill="rgb(210,130,26)" fg:x="820" fg:w="2"/><text x="65.3294%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="65.1587%" y="309" width="0.0794%" height="15" fill="rgb(242,131,11)" fg:x="821" fg:w="1"/><text x="65.4087%" y="319.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="65.1587%" y="293" width="0.0794%" height="15" fill="rgb(237,38,28)" fg:x="821" fg:w="1"/><text x="65.4087%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1587%" y="277" width="0.0794%" height="15" fill="rgb(244,180,43)" fg:x="821" fg:w="1"/><text x="65.4087%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1587%" y="261" width="0.0794%" height="15" fill="rgb(214,171,19)" fg:x="821" fg:w="1"/><text x="65.4087%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1587%" y="245" width="0.0794%" height="15" fill="rgb(252,101,45)" fg:x="821" fg:w="1"/><text x="65.4087%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.1587%" y="229" width="0.0794%" height="15" fill="rgb(211,96,33)" fg:x="821" fg:w="1"/><text x="65.4087%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.1587%" y="213" width="0.0794%" height="15" fill="rgb(207,80,25)" fg:x="821" fg:w="1"/><text x="65.4087%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.1587%" y="197" width="0.0794%" height="15" fill="rgb(225,15,35)" fg:x="821" fg:w="1"/><text x="65.4087%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.1587%" y="181" width="0.0794%" height="15" fill="rgb(214,93,43)" fg:x="821" fg:w="1"/><text x="65.4087%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.1587%" y="165" width="0.0794%" height="15" fill="rgb(248,42,37)" fg:x="821" fg:w="1"/><text x="65.4087%" y="175.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (18 samples, 1.43%)</title><rect x="63.8889%" y="437" width="1.4286%" height="15" fill="rgb(217,135,32)" fg:x="805" fg:w="18"/><text x="64.1389%" y="447.50"></text></g><g><title>plugins_core::tools::contained_by (10 samples, 0.79%)</title><rect x="64.5238%" y="421" width="0.7937%" height="15" fill="rgb(216,74,28)" fg:x="813" fg:w="10"/><text x="64.7738%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.71%)</title><rect x="64.6032%" y="405" width="0.7143%" height="15" fill="rgb(247,108,16)" fg:x="814" fg:w="9"/><text x="64.8532%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.63%)</title><rect x="64.6825%" y="389" width="0.6349%" height="15" fill="rgb(205,219,30)" fg:x="815" fg:w="8"/><text x="64.9325%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="65.0794%" y="373" width="0.2381%" height="15" fill="rgb(241,122,9)" fg:x="820" fg:w="3"/><text x="65.3294%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="65.0794%" y="357" width="0.2381%" height="15" fill="rgb(216,148,50)" fg:x="820" fg:w="3"/><text x="65.3294%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="65.0794%" y="341" width="0.2381%" height="15" fill="rgb(226,154,2)" fg:x="820" fg:w="3"/><text x="65.3294%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.2381%" y="325" width="0.0794%" height="15" fill="rgb(220,128,1)" fg:x="822" fg:w="1"/><text x="65.4881%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (2 samples, 0.16%)</title><rect x="65.3175%" y="373" width="0.1587%" height="15" fill="rgb(245,185,29)" fg:x="823" fg:w="2"/><text x="65.5675%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.4762%" y="325" width="0.1587%" height="15" fill="rgb(243,161,2)" fg:x="825" fg:w="2"/><text x="65.7262%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.4762%" y="309" width="0.1587%" height="15" fill="rgb(249,215,17)" fg:x="825" fg:w="2"/><text x="65.7262%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.4762%" y="293" width="0.1587%" height="15" fill="rgb(237,67,11)" fg:x="825" fg:w="2"/><text x="65.7262%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5556%" y="277" width="0.0794%" height="15" fill="rgb(239,17,24)" fg:x="826" fg:w="1"/><text x="65.8056%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5556%" y="261" width="0.0794%" height="15" fill="rgb(215,97,29)" fg:x="826" fg:w="1"/><text x="65.8056%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5556%" y="245" width="0.0794%" height="15" fill="rgb(253,228,42)" fg:x="826" fg:w="1"/><text x="65.8056%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.5556%" y="229" width="0.0794%" height="15" fill="rgb(240,85,2)" fg:x="826" fg:w="1"/><text x="65.8056%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.5556%" y="213" width="0.0794%" height="15" fill="rgb(214,155,4)" fg:x="826" fg:w="1"/><text x="65.8056%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.5556%" y="197" width="0.0794%" height="15" fill="rgb(247,120,22)" fg:x="826" fg:w="1"/><text x="65.8056%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.5556%" y="181" width="0.0794%" height="15" fill="rgb(211,208,6)" fg:x="826" fg:w="1"/><text x="65.8056%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.5556%" y="165" width="0.0794%" height="15" fill="rgb(235,99,41)" fg:x="826" fg:w="1"/><text x="65.8056%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.4762%" y="341" width="0.2381%" height="15" fill="rgb(223,28,8)" fg:x="825" fg:w="3"/><text x="65.7262%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.6349%" y="325" width="0.0794%" height="15" fill="rgb(212,71,20)" fg:x="827" fg:w="1"/><text x="65.8849%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.6349%" y="309" width="0.0794%" height="15" fill="rgb(206,85,3)" fg:x="827" fg:w="1"/><text x="65.8849%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.6349%" y="293" width="0.0794%" height="15" fill="rgb(244,180,11)" fg:x="827" fg:w="1"/><text x="65.8849%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.6349%" y="277" width="0.0794%" height="15" fill="rgb(223,16,21)" fg:x="827" fg:w="1"/><text x="65.8849%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.6349%" y="261" width="0.0794%" height="15" fill="rgb(238,85,42)" fg:x="827" fg:w="1"/><text x="65.8849%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.6349%" y="245" width="0.0794%" height="15" fill="rgb(205,85,8)" fg:x="827" fg:w="1"/><text x="65.8849%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.6349%" y="229" width="0.0794%" height="15" fill="rgb(217,190,15)" fg:x="827" fg:w="1"/><text x="65.8849%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (25 samples, 1.98%)</title><rect x="63.8889%" y="469" width="1.9841%" height="15" fill="rgb(243,192,23)" fg:x="805" fg:w="25"/><text x="64.1389%" y="479.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (25 samples, 1.98%)</title><rect x="63.8889%" y="453" width="1.9841%" height="15" fill="rgb(223,220,37)" fg:x="805" fg:w="25"/><text x="64.1389%" y="463.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (7 samples, 0.56%)</title><rect x="65.3175%" y="437" width="0.5556%" height="15" fill="rgb(208,41,17)" fg:x="823" fg:w="7"/><text x="65.5675%" y="447.50"></text></g><g><title>plugins_core::finding::matches_description (7 samples, 0.56%)</title><rect x="65.3175%" y="421" width="0.5556%" height="15" fill="rgb(224,188,7)" fg:x="823" fg:w="7"/><text x="65.5675%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::name (7 samples, 0.56%)</title><rect x="65.3175%" y="405" width="0.5556%" height="15" fill="rgb(236,16,50)" fg:x="823" fg:w="7"/><text x="65.5675%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="65.3175%" y="389" width="0.5556%" height="15" fill="rgb(238,6,24)" fg:x="823" fg:w="7"/><text x="65.5675%" y="399.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="65.4762%" y="373" width="0.3968%" height="15" fill="rgb(253,67,45)" fg:x="825" fg:w="5"/><text x="65.7262%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="65.4762%" y="357" width="0.3968%" height="15" fill="rgb(210,89,32)" fg:x="825" fg:w="5"/><text x="65.7262%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.7143%" y="341" width="0.1587%" height="15" fill="rgb(208,89,9)" fg:x="828" fg:w="2"/><text x="65.9643%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.7143%" y="325" width="0.1587%" height="15" fill="rgb(222,180,44)" fg:x="828" fg:w="2"/><text x="65.9643%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.7143%" y="309" width="0.1587%" height="15" fill="rgb(250,181,46)" fg:x="828" fg:w="2"/><text x="65.9643%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.7143%" y="293" width="0.1587%" height="15" fill="rgb(210,190,26)" fg:x="828" fg:w="2"/><text x="65.9643%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="65.7143%" y="277" width="0.1587%" height="15" fill="rgb(253,49,13)" fg:x="828" fg:w="2"/><text x="65.9643%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.7143%" y="261" width="0.1587%" height="15" fill="rgb(240,184,42)" fg:x="828" fg:w="2"/><text x="65.9643%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.7143%" y="245" width="0.1587%" height="15" fill="rgb(246,59,37)" fg:x="828" fg:w="2"/><text x="65.9643%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7937%" y="229" width="0.0794%" height="15" fill="rgb(207,134,54)" fg:x="829" fg:w="1"/><text x="66.0437%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.7937%" y="213" width="0.0794%" height="15" fill="rgb(250,122,24)" fg:x="829" fg:w="1"/><text x="66.0437%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.7937%" y="197" width="0.0794%" height="15" fill="rgb(239,206,3)" fg:x="829" fg:w="1"/><text x="66.0437%" y="207.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="65.8730%" y="437" width="0.0794%" height="15" fill="rgb(253,220,32)" fg:x="830" fg:w="1"/><text x="66.1230%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.0317%" y="389" width="0.0794%" height="15" fill="rgb(209,217,48)" fg:x="832" fg:w="1"/><text x="66.2817%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.0317%" y="373" width="0.0794%" height="15" fill="rgb(242,91,39)" fg:x="832" fg:w="1"/><text x="66.2817%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.0317%" y="357" width="0.0794%" height="15" fill="rgb(228,4,13)" fg:x="832" fg:w="1"/><text x="66.2817%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.0317%" y="341" width="0.0794%" height="15" fill="rgb(223,133,4)" fg:x="832" fg:w="1"/><text x="66.2817%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.9524%" y="405" width="0.2381%" height="15" fill="rgb(215,105,30)" fg:x="831" fg:w="3"/><text x="66.2024%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1111%" y="389" width="0.0794%" height="15" fill="rgb(230,9,4)" fg:x="833" fg:w="1"/><text x="66.3611%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.1905%" y="309" width="0.0794%" height="15" fill="rgb(248,15,2)" fg:x="834" fg:w="1"/><text x="66.4405%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.1905%" y="373" width="0.1587%" height="15" fill="rgb(208,210,22)" fg:x="834" fg:w="2"/><text x="66.4405%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.1905%" y="357" width="0.1587%" height="15" fill="rgb(208,112,41)" fg:x="834" fg:w="2"/><text x="66.4405%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="66.1905%" y="341" width="0.1587%" height="15" fill="rgb(232,83,14)" fg:x="834" fg:w="2"/><text x="66.4405%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.1905%" y="325" width="0.1587%" height="15" fill="rgb(229,65,11)" fg:x="834" fg:w="2"/><text x="66.4405%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.2698%" y="309" width="0.0794%" height="15" fill="rgb(228,126,24)" fg:x="835" fg:w="1"/><text x="66.5198%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.2698%" y="293" width="0.0794%" height="15" fill="rgb(218,66,33)" fg:x="835" fg:w="1"/><text x="66.5198%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="65.8730%" y="453" width="0.5556%" height="15" fill="rgb(251,49,52)" fg:x="830" fg:w="7"/><text x="66.1230%" y="463.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="65.9524%" y="437" width="0.4762%" height="15" fill="rgb(219,46,37)" fg:x="831" fg:w="6"/><text x="66.2024%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="65.9524%" y="421" width="0.4762%" height="15" fill="rgb(213,53,49)" fg:x="831" fg:w="6"/><text x="66.2024%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.1905%" y="405" width="0.2381%" height="15" fill="rgb(214,134,1)" fg:x="834" fg:w="3"/><text x="66.4405%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.1905%" y="389" width="0.2381%" height="15" fill="rgb(208,139,43)" fg:x="834" fg:w="3"/><text x="66.4405%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="66.3492%" y="373" width="0.0794%" height="15" fill="rgb(231,105,35)" fg:x="836" fg:w="1"/><text x="66.5992%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="66.4286%" y="437" width="0.0794%" height="15" fill="rgb(247,189,9)" fg:x="837" fg:w="1"/><text x="66.6786%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="66.5079%" y="405" width="0.3175%" height="15" fill="rgb(252,48,51)" fg:x="838" fg:w="4"/><text x="66.7579%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.5873%" y="389" width="0.2381%" height="15" fill="rgb(209,121,1)" fg:x="839" fg:w="3"/><text x="66.8373%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.5873%" y="373" width="0.2381%" height="15" fill="rgb(231,40,26)" fg:x="839" fg:w="3"/><text x="66.8373%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.5873%" y="357" width="0.2381%" height="15" fill="rgb(251,8,13)" fg:x="839" fg:w="3"/><text x="66.8373%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.6667%" y="341" width="0.1587%" height="15" fill="rgb(231,110,2)" fg:x="840" fg:w="2"/><text x="66.9167%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.7460%" y="325" width="0.0794%" height="15" fill="rgb(216,153,22)" fg:x="841" fg:w="1"/><text x="66.9960%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (13 samples, 1.03%)</title><rect x="65.8730%" y="469" width="1.0317%" height="15" fill="rgb(249,116,49)" fg:x="830" fg:w="13"/><text x="66.1230%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="66.4286%" y="453" width="0.4762%" height="15" fill="rgb(230,89,2)" fg:x="837" fg:w="6"/><text x="66.6786%" y="463.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="66.5079%" y="437" width="0.3968%" height="15" fill="rgb(231,125,23)" fg:x="838" fg:w="5"/><text x="66.7579%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="66.5079%" y="421" width="0.3968%" height="15" fill="rgb(212,217,18)" fg:x="838" fg:w="5"/><text x="66.7579%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.8254%" y="405" width="0.0794%" height="15" fill="rgb(210,21,33)" fg:x="842" fg:w="1"/><text x="67.0754%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.8254%" y="389" width="0.0794%" height="15" fill="rgb(241,97,9)" fg:x="842" fg:w="1"/><text x="67.0754%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.8254%" y="373" width="0.0794%" height="15" fill="rgb(221,35,31)" fg:x="842" fg:w="1"/><text x="67.0754%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.8254%" y="357" width="0.0794%" height="15" fill="rgb(251,23,23)" fg:x="842" fg:w="1"/><text x="67.0754%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="66.9048%" y="453" width="0.0794%" height="15" fill="rgb(227,165,2)" fg:x="843" fg:w="1"/><text x="67.1548%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="66.9841%" y="453" width="0.0794%" height="15" fill="rgb(242,24,2)" fg:x="844" fg:w="1"/><text x="67.2341%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="66.9841%" y="437" width="0.0794%" height="15" fill="rgb(242,138,51)" fg:x="844" fg:w="1"/><text x="67.2341%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="66.9841%" y="421" width="0.0794%" height="15" fill="rgb(220,219,5)" fg:x="844" fg:w="1"/><text x="67.2341%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="66.9841%" y="405" width="0.0794%" height="15" fill="rgb(247,53,29)" fg:x="844" fg:w="1"/><text x="67.2341%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.9841%" y="389" width="0.0794%" height="15" fill="rgb(233,43,39)" fg:x="844" fg:w="1"/><text x="67.2341%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9841%" y="373" width="0.0794%" height="15" fill="rgb(230,128,54)" fg:x="844" fg:w="1"/><text x="67.2341%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9841%" y="357" width="0.0794%" height="15" fill="rgb(218,20,12)" fg:x="844" fg:w="1"/><text x="67.2341%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9841%" y="341" width="0.0794%" height="15" fill="rgb(206,51,14)" fg:x="844" fg:w="1"/><text x="67.2341%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9841%" y="325" width="0.0794%" height="15" fill="rgb(223,16,35)" fg:x="844" fg:w="1"/><text x="67.2341%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9841%" y="309" width="0.0794%" height="15" fill="rgb(226,165,37)" fg:x="844" fg:w="1"/><text x="67.2341%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9841%" y="293" width="0.0794%" height="15" fill="rgb(240,26,21)" fg:x="844" fg:w="1"/><text x="67.2341%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.9841%" y="277" width="0.0794%" height="15" fill="rgb(240,72,46)" fg:x="844" fg:w="1"/><text x="67.2341%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.9841%" y="261" width="0.0794%" height="15" fill="rgb(211,33,41)" fg:x="844" fg:w="1"/><text x="67.2341%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.9841%" y="245" width="0.0794%" height="15" fill="rgb(224,157,46)" fg:x="844" fg:w="1"/><text x="67.2341%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="66.9841%" y="229" width="0.0794%" height="15" fill="rgb(223,59,19)" fg:x="844" fg:w="1"/><text x="67.2341%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.9841%" y="213" width="0.0794%" height="15" fill="rgb(239,187,1)" fg:x="844" fg:w="1"/><text x="67.2341%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="67.0635%" y="421" width="0.0794%" height="15" fill="rgb(226,95,9)" fg:x="845" fg:w="1"/><text x="67.3135%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="67.0635%" y="405" width="0.0794%" height="15" fill="rgb(234,61,54)" fg:x="845" fg:w="1"/><text x="67.3135%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.0635%" y="389" width="0.0794%" height="15" fill="rgb(205,209,47)" fg:x="845" fg:w="1"/><text x="67.3135%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="67.0635%" y="373" width="0.0794%" height="15" fill="rgb(228,7,43)" fg:x="845" fg:w="1"/><text x="67.3135%" y="383.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="67.0635%" y="357" width="0.0794%" height="15" fill="rgb(240,217,52)" fg:x="845" fg:w="1"/><text x="67.3135%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="67.0635%" y="453" width="0.1587%" height="15" fill="rgb(211,178,21)" fg:x="845" fg:w="2"/><text x="67.3135%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="67.0635%" y="437" width="0.1587%" height="15" fill="rgb(205,25,34)" fg:x="845" fg:w="2"/><text x="67.3135%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.1429%" y="421" width="0.0794%" height="15" fill="rgb(209,57,11)" fg:x="846" fg:w="1"/><text x="67.3929%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.1429%" y="405" width="0.0794%" height="15" fill="rgb(221,99,2)" fg:x="846" fg:w="1"/><text x="67.3929%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3016%" y="405" width="0.0794%" height="15" fill="rgb(232,79,22)" fg:x="848" fg:w="1"/><text x="67.5516%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3016%" y="389" width="0.0794%" height="15" fill="rgb(221,145,32)" fg:x="848" fg:w="1"/><text x="67.5516%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.3016%" y="373" width="0.0794%" height="15" fill="rgb(236,133,36)" fg:x="848" fg:w="1"/><text x="67.5516%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.3016%" y="357" width="0.0794%" height="15" fill="rgb(208,224,44)" fg:x="848" fg:w="1"/><text x="67.5516%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.3016%" y="341" width="0.0794%" height="15" fill="rgb(235,143,15)" fg:x="848" fg:w="1"/><text x="67.5516%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3016%" y="325" width="0.0794%" height="15" fill="rgb(249,83,27)" fg:x="848" fg:w="1"/><text x="67.5516%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3016%" y="309" width="0.0794%" height="15" fill="rgb(238,226,19)" fg:x="848" fg:w="1"/><text x="67.5516%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.3016%" y="293" width="0.0794%" height="15" fill="rgb(226,206,27)" fg:x="848" fg:w="1"/><text x="67.5516%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.3016%" y="277" width="0.0794%" height="15" fill="rgb(251,182,9)" fg:x="848" fg:w="1"/><text x="67.5516%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.3016%" y="261" width="0.0794%" height="15" fill="rgb(212,140,41)" fg:x="848" fg:w="1"/><text x="67.5516%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.3016%" y="245" width="0.0794%" height="15" fill="rgb(220,106,18)" fg:x="848" fg:w="1"/><text x="67.5516%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3016%" y="229" width="0.0794%" height="15" fill="rgb(252,46,41)" fg:x="848" fg:w="1"/><text x="67.5516%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3810%" y="293" width="0.0794%" height="15" fill="rgb(209,222,15)" fg:x="849" fg:w="1"/><text x="67.6310%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.3810%" y="277" width="0.0794%" height="15" fill="rgb(233,83,50)" fg:x="849" fg:w="1"/><text x="67.6310%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.3810%" y="261" width="0.0794%" height="15" fill="rgb(205,212,0)" fg:x="849" fg:w="1"/><text x="67.6310%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.3810%" y="245" width="0.0794%" height="15" fill="rgb(235,117,51)" fg:x="849" fg:w="1"/><text x="67.6310%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.3810%" y="229" width="0.0794%" height="15" fill="rgb(233,133,48)" fg:x="849" fg:w="1"/><text x="67.6310%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.3810%" y="213" width="0.0794%" height="15" fill="rgb(219,3,2)" fg:x="849" fg:w="1"/><text x="67.6310%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3810%" y="197" width="0.0794%" height="15" fill="rgb(225,80,52)" fg:x="849" fg:w="1"/><text x="67.6310%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="67.2222%" y="421" width="0.3175%" height="15" fill="rgb(235,195,42)" fg:x="847" fg:w="4"/><text x="67.4722%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.3810%" y="405" width="0.1587%" height="15" fill="rgb(240,207,46)" fg:x="849" fg:w="2"/><text x="67.6310%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.3810%" y="389" width="0.1587%" height="15" fill="rgb(236,112,50)" fg:x="849" fg:w="2"/><text x="67.6310%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.3810%" y="373" width="0.1587%" height="15" fill="rgb(249,151,27)" fg:x="849" fg:w="2"/><text x="67.6310%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.3810%" y="357" width="0.1587%" height="15" fill="rgb(253,223,52)" fg:x="849" fg:w="2"/><text x="67.6310%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="67.3810%" y="341" width="0.1587%" height="15" fill="rgb(215,55,33)" fg:x="849" fg:w="2"/><text x="67.6310%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="67.3810%" y="325" width="0.1587%" height="15" fill="rgb(207,24,17)" fg:x="849" fg:w="2"/><text x="67.6310%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="67.3810%" y="309" width="0.1587%" height="15" fill="rgb(218,169,32)" fg:x="849" fg:w="2"/><text x="67.6310%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.4603%" y="293" width="0.0794%" height="15" fill="rgb(209,210,6)" fg:x="850" fg:w="1"/><text x="67.7103%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.4603%" y="277" width="0.0794%" height="15" fill="rgb(225,208,8)" fg:x="850" fg:w="1"/><text x="67.7103%" y="287.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="67.6190%" y="389" width="0.2381%" height="15" fill="rgb(238,14,32)" fg:x="852" fg:w="3"/><text x="67.8690%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.8571%" y="373" width="0.0794%" height="15" fill="rgb(211,137,3)" fg:x="855" fg:w="1"/><text x="68.1071%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.8571%" y="357" width="0.0794%" height="15" fill="rgb(207,171,19)" fg:x="855" fg:w="1"/><text x="68.1071%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (6 samples, 0.48%)</title><rect x="67.5397%" y="421" width="0.4762%" height="15" fill="rgb(250,80,8)" fg:x="851" fg:w="6"/><text x="67.7897%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="67.5397%" y="405" width="0.4762%" height="15" fill="rgb(209,103,53)" fg:x="851" fg:w="6"/><text x="67.7897%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.8571%" y="389" width="0.1587%" height="15" fill="rgb(233,198,10)" fg:x="855" fg:w="2"/><text x="68.1071%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="67.9365%" y="373" width="0.0794%" height="15" fill="rgb(236,125,25)" fg:x="856" fg:w="1"/><text x="68.1865%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="67.9365%" y="357" width="0.0794%" height="15" fill="rgb(254,182,48)" fg:x="856" fg:w="1"/><text x="68.1865%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.9365%" y="341" width="0.0794%" height="15" fill="rgb(216,108,44)" fg:x="856" fg:w="1"/><text x="68.1865%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.0159%" y="389" width="0.0794%" height="15" fill="rgb(222,72,39)" fg:x="857" fg:w="1"/><text x="68.2659%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="68.0952%" y="389" width="0.1587%" height="15" fill="rgb(252,70,39)" fg:x="858" fg:w="2"/><text x="68.3452%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="68.1746%" y="373" width="0.0794%" height="15" fill="rgb(243,99,34)" fg:x="859" fg:w="1"/><text x="68.4246%" y="383.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="68.0159%" y="421" width="0.3175%" height="15" fill="rgb(252,109,12)" fg:x="857" fg:w="4"/><text x="68.2659%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="68.0159%" y="405" width="0.3175%" height="15" fill="rgb(211,186,10)" fg:x="857" fg:w="4"/><text x="68.2659%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="68.2540%" y="389" width="0.0794%" height="15" fill="rgb(246,90,8)" fg:x="860" fg:w="1"/><text x="68.5040%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="68.2540%" y="373" width="0.0794%" height="15" fill="rgb(226,91,24)" fg:x="860" fg:w="1"/><text x="68.5040%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.2540%" y="357" width="0.0794%" height="15" fill="rgb(216,28,44)" fg:x="860" fg:w="1"/><text x="68.5040%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.2540%" y="341" width="0.0794%" height="15" fill="rgb(229,36,0)" fg:x="860" fg:w="1"/><text x="68.5040%" y="351.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (15 samples, 1.19%)</title><rect x="67.2222%" y="453" width="1.1905%" height="15" fill="rgb(245,97,18)" fg:x="847" fg:w="15"/><text x="67.4722%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (15 samples, 1.19%)</title><rect x="67.2222%" y="437" width="1.1905%" height="15" fill="rgb(241,97,54)" fg:x="847" fg:w="15"/><text x="67.4722%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="68.3333%" y="421" width="0.0794%" height="15" fill="rgb(234,125,17)" fg:x="861" fg:w="1"/><text x="68.5833%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.3333%" y="405" width="0.0794%" height="15" fill="rgb(228,172,39)" fg:x="861" fg:w="1"/><text x="68.5833%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="68.3333%" y="389" width="0.0794%" height="15" fill="rgb(227,169,1)" fg:x="861" fg:w="1"/><text x="68.5833%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="68.3333%" y="373" width="0.0794%" height="15" fill="rgb(206,13,35)" fg:x="861" fg:w="1"/><text x="68.5833%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3333%" y="357" width="0.0794%" height="15" fill="rgb(211,117,30)" fg:x="861" fg:w="1"/><text x="68.5833%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="68.4127%" y="357" width="0.0794%" height="15" fill="rgb(230,198,4)" fg:x="862" fg:w="1"/><text x="68.6627%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.4127%" y="341" width="0.0794%" height="15" fill="rgb(213,87,54)" fg:x="862" fg:w="1"/><text x="68.6627%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.4127%" y="325" width="0.0794%" height="15" fill="rgb(248,43,22)" fg:x="862" fg:w="1"/><text x="68.6627%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4127%" y="309" width="0.0794%" height="15" fill="rgb(213,175,48)" fg:x="862" fg:w="1"/><text x="68.6627%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.4921%" y="261" width="0.0794%" height="15" fill="rgb(252,55,9)" fg:x="863" fg:w="1"/><text x="68.7421%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="68.4127%" y="405" width="0.2381%" height="15" fill="rgb(231,72,33)" fg:x="862" fg:w="3"/><text x="68.6627%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="68.4127%" y="389" width="0.2381%" height="15" fill="rgb(213,2,54)" fg:x="862" fg:w="3"/><text x="68.6627%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="68.4127%" y="373" width="0.2381%" height="15" fill="rgb(208,88,25)" fg:x="862" fg:w="3"/><text x="68.6627%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.4921%" y="357" width="0.1587%" height="15" fill="rgb(215,117,13)" fg:x="863" fg:w="2"/><text x="68.7421%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4921%" y="341" width="0.1587%" height="15" fill="rgb(243,147,21)" fg:x="863" fg:w="2"/><text x="68.7421%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.4921%" y="325" width="0.1587%" height="15" fill="rgb(208,215,36)" fg:x="863" fg:w="2"/><text x="68.7421%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4921%" y="309" width="0.1587%" height="15" fill="rgb(238,187,24)" fg:x="863" fg:w="2"/><text x="68.7421%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.4921%" y="293" width="0.1587%" height="15" fill="rgb(214,173,11)" fg:x="863" fg:w="2"/><text x="68.7421%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.4921%" y="277" width="0.1587%" height="15" fill="rgb(222,71,20)" fg:x="863" fg:w="2"/><text x="68.7421%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.5714%" y="261" width="0.0794%" height="15" fill="rgb(242,125,4)" fg:x="864" fg:w="1"/><text x="68.8214%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.5714%" y="245" width="0.0794%" height="15" fill="rgb(217,101,52)" fg:x="864" fg:w="1"/><text x="68.8214%" y="255.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="68.5714%" y="229" width="0.0794%" height="15" fill="rgb(223,2,50)" fg:x="864" fg:w="1"/><text x="68.8214%" y="239.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="68.4127%" y="437" width="0.3175%" height="15" fill="rgb(225,197,9)" fg:x="862" fg:w="4"/><text x="68.6627%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="68.4127%" y="421" width="0.3175%" height="15" fill="rgb(234,76,27)" fg:x="862" fg:w="4"/><text x="68.6627%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="68.6508%" y="405" width="0.0794%" height="15" fill="rgb(213,161,26)" fg:x="865" fg:w="1"/><text x="68.9008%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.6508%" y="389" width="0.0794%" height="15" fill="rgb(210,228,2)" fg:x="865" fg:w="1"/><text x="68.9008%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.6508%" y="373" width="0.0794%" height="15" fill="rgb(235,4,16)" fg:x="865" fg:w="1"/><text x="68.9008%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6508%" y="357" width="0.0794%" height="15" fill="rgb(235,83,42)" fg:x="865" fg:w="1"/><text x="68.9008%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6508%" y="341" width="0.0794%" height="15" fill="rgb(207,116,39)" fg:x="865" fg:w="1"/><text x="68.9008%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6508%" y="325" width="0.0794%" height="15" fill="rgb(253,206,9)" fg:x="865" fg:w="1"/><text x="68.9008%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6508%" y="309" width="0.0794%" height="15" fill="rgb(234,32,47)" fg:x="865" fg:w="1"/><text x="68.9008%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.6508%" y="293" width="0.0794%" height="15" fill="rgb(247,40,39)" fg:x="865" fg:w="1"/><text x="68.9008%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6508%" y="277" width="0.0794%" height="15" fill="rgb(236,199,13)" fg:x="865" fg:w="1"/><text x="68.9008%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6508%" y="261" width="0.0794%" height="15" fill="rgb(240,127,44)" fg:x="865" fg:w="1"/><text x="68.9008%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6508%" y="245" width="0.0794%" height="15" fill="rgb(248,220,47)" fg:x="865" fg:w="1"/><text x="68.9008%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6508%" y="229" width="0.0794%" height="15" fill="rgb(240,78,9)" fg:x="865" fg:w="1"/><text x="68.9008%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6508%" y="213" width="0.0794%" height="15" fill="rgb(245,119,5)" fg:x="865" fg:w="1"/><text x="68.9008%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="68.6508%" y="197" width="0.0794%" height="15" fill="rgb(238,175,31)" fg:x="865" fg:w="1"/><text x="68.9008%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="68.6508%" y="181" width="0.0794%" height="15" fill="rgb(232,140,42)" fg:x="865" fg:w="1"/><text x="68.9008%" y="191.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="68.4127%" y="453" width="0.3968%" height="15" fill="rgb(218,179,7)" fg:x="862" fg:w="5"/><text x="68.6627%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="68.7302%" y="437" width="0.0794%" height="15" fill="rgb(232,79,27)" fg:x="866" fg:w="1"/><text x="68.9802%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.7302%" y="421" width="0.0794%" height="15" fill="rgb(247,11,19)" fg:x="866" fg:w="1"/><text x="68.9802%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.7302%" y="405" width="0.0794%" height="15" fill="rgb(216,171,54)" fg:x="866" fg:w="1"/><text x="68.9802%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.8095%" y="437" width="0.0794%" height="15" fill="rgb(233,158,36)" fg:x="867" fg:w="1"/><text x="69.0595%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="68.8095%" y="421" width="0.0794%" height="15" fill="rgb(215,48,47)" fg:x="867" fg:w="1"/><text x="69.0595%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="68.8095%" y="405" width="0.0794%" height="15" fill="rgb(230,223,15)" fg:x="867" fg:w="1"/><text x="69.0595%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (64 samples, 5.08%)</title><rect x="63.8889%" y="485" width="5.0794%" height="15" fill="rgb(234,49,19)" fg:x="805" fg:w="64"/><text x="64.1389%" y="495.50">&lt;plugi..</text></g><g><title>plugins_core::tools::move_between (26 samples, 2.06%)</title><rect x="66.9048%" y="469" width="2.0635%" height="15" fill="rgb(232,89,25)" fg:x="843" fg:w="26"/><text x="67.1548%" y="479.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="68.8095%" y="453" width="0.1587%" height="15" fill="rgb(237,206,28)" fg:x="867" fg:w="2"/><text x="69.0595%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.8889%" y="437" width="0.0794%" height="15" fill="rgb(249,68,37)" fg:x="868" fg:w="1"/><text x="69.1389%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (496 samples, 39.37%)</title><rect x="29.6825%" y="645" width="39.3651%" height="15" fill="rgb(226,99,43)" fg:x="374" fg:w="496"/><text x="29.9325%" y="655.50">&lt;engine::session::Session as kernel::actions::Performer&gt;::perform</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (494 samples, 39.21%)</title><rect x="29.8413%" y="629" width="39.2063%" height="15" fill="rgb(216,46,28)" fg:x="376" fg:w="494"/><text x="30.0913%" y="639.50">&lt;engine::perform::StandardPerformer as kernel::actions::Performe..</text></g><g><title>kernel::plugins::mw::apply_middleware (137 samples, 10.87%)</title><rect x="58.1746%" y="613" width="10.8730%" height="15" fill="rgb(216,33,9)" fg:x="733" fg:w="137"/><text x="58.4246%" y="623.50">kernel::plugins:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (137 samples, 10.87%)</title><rect x="58.1746%" y="597" width="10.8730%" height="15" fill="rgb(216,129,4)" fg:x="733" fg:w="137"/><text x="58.4246%" y="607.50">kernel::plugins:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (137 samples, 10.87%)</title><rect x="58.1746%" y="581" width="10.8730%" height="15" fill="rgb(216,106,3)" fg:x="733" fg:w="137"/><text x="58.4246%" y="591.50">&lt;plugins_dynlib:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (136 samples, 10.79%)</title><rect x="58.2540%" y="565" width="10.7937%" height="15" fill="rgb(217,79,45)" fg:x="734" fg:w="136"/><text x="58.5040%" y="575.50">kernel::plugins:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (136 samples, 10.79%)</title><rect x="58.2540%" y="549" width="10.7937%" height="15" fill="rgb(239,98,13)" fg:x="734" fg:w="136"/><text x="58.5040%" y="559.50">core::ops::funct..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (135 samples, 10.71%)</title><rect x="58.3333%" y="533" width="10.7143%" height="15" fill="rgb(221,115,4)" fg:x="735" fg:w="135"/><text x="58.5833%" y="543.50">kernel::plugins:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (135 samples, 10.71%)</title><rect x="58.3333%" y="517" width="10.7143%" height="15" fill="rgb(215,85,0)" fg:x="735" fg:w="135"/><text x="58.5833%" y="527.50">core::ops::funct..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (135 samples, 10.71%)</title><rect x="58.3333%" y="501" width="10.7143%" height="15" fill="rgb(230,62,15)" fg:x="735" fg:w="135"/><text x="58.5833%" y="511.50">&lt;alloc::boxed::B..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="68.9683%" y="485" width="0.0794%" height="15" fill="rgb(247,162,2)" fg:x="869" fg:w="1"/><text x="69.2183%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="69.1270%" y="565" width="0.0794%" height="15" fill="rgb(212,112,32)" fg:x="871" fg:w="1"/><text x="69.3770%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.1270%" y="549" width="0.0794%" height="15" fill="rgb(216,137,9)" fg:x="871" fg:w="1"/><text x="69.3770%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.1270%" y="533" width="0.0794%" height="15" fill="rgb(250,149,33)" fg:x="871" fg:w="1"/><text x="69.3770%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.1270%" y="517" width="0.0794%" height="15" fill="rgb(246,124,31)" fg:x="871" fg:w="1"/><text x="69.3770%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1270%" y="501" width="0.0794%" height="15" fill="rgb(216,210,22)" fg:x="871" fg:w="1"/><text x="69.3770%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.1270%" y="485" width="0.0794%" height="15" fill="rgb(228,128,36)" fg:x="871" fg:w="1"/><text x="69.3770%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1270%" y="469" width="0.0794%" height="15" fill="rgb(231,41,0)" fg:x="871" fg:w="1"/><text x="69.3770%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.1270%" y="453" width="0.0794%" height="15" fill="rgb(232,61,26)" fg:x="871" fg:w="1"/><text x="69.3770%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1270%" y="437" width="0.0794%" height="15" fill="rgb(217,60,9)" fg:x="871" fg:w="1"/><text x="69.3770%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.1270%" y="421" width="0.0794%" height="15" fill="rgb(233,41,35)" fg:x="871" fg:w="1"/><text x="69.3770%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1270%" y="405" width="0.0794%" height="15" fill="rgb(253,139,43)" fg:x="871" fg:w="1"/><text x="69.3770%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.2063%" y="389" width="0.0794%" height="15" fill="rgb(245,100,51)" fg:x="872" fg:w="1"/><text x="69.4563%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2063%" y="373" width="0.0794%" height="15" fill="rgb(250,208,18)" fg:x="872" fg:w="1"/><text x="69.4563%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="69.1270%" y="597" width="0.2381%" height="15" fill="rgb(245,33,2)" fg:x="871" fg:w="3"/><text x="69.3770%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="69.1270%" y="581" width="0.2381%" height="15" fill="rgb(244,171,31)" fg:x="871" fg:w="3"/><text x="69.3770%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="69.2063%" y="565" width="0.1587%" height="15" fill="rgb(229,1,43)" fg:x="872" fg:w="2"/><text x="69.4563%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="69.2063%" y="549" width="0.1587%" height="15" fill="rgb(223,153,28)" fg:x="872" fg:w="2"/><text x="69.4563%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.2063%" y="533" width="0.1587%" height="15" fill="rgb(241,4,46)" fg:x="872" fg:w="2"/><text x="69.4563%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.2063%" y="517" width="0.1587%" height="15" fill="rgb(230,81,11)" fg:x="872" fg:w="2"/><text x="69.4563%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.2063%" y="501" width="0.1587%" height="15" fill="rgb(253,204,39)" fg:x="872" fg:w="2"/><text x="69.4563%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.2063%" y="485" width="0.1587%" height="15" fill="rgb(250,96,8)" fg:x="872" fg:w="2"/><text x="69.4563%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.2063%" y="469" width="0.1587%" height="15" fill="rgb(219,89,54)" fg:x="872" fg:w="2"/><text x="69.4563%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.2063%" y="453" width="0.1587%" height="15" fill="rgb(235,136,39)" fg:x="872" fg:w="2"/><text x="69.4563%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.2063%" y="437" width="0.1587%" height="15" fill="rgb(230,155,37)" fg:x="872" fg:w="2"/><text x="69.4563%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.2063%" y="421" width="0.1587%" height="15" fill="rgb(235,199,50)" fg:x="872" fg:w="2"/><text x="69.4563%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.2063%" y="405" width="0.1587%" height="15" fill="rgb(227,81,32)" fg:x="872" fg:w="2"/><text x="69.4563%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.2857%" y="389" width="0.0794%" height="15" fill="rgb(225,6,28)" fg:x="873" fg:w="1"/><text x="69.5357%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.2857%" y="373" width="0.0794%" height="15" fill="rgb(207,211,17)" fg:x="873" fg:w="1"/><text x="69.5357%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="69.2857%" y="357" width="0.0794%" height="15" fill="rgb(228,31,49)" fg:x="873" fg:w="1"/><text x="69.5357%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="69.2857%" y="341" width="0.0794%" height="15" fill="rgb(230,185,3)" fg:x="873" fg:w="1"/><text x="69.5357%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.2857%" y="325" width="0.0794%" height="15" fill="rgb(206,167,15)" fg:x="873" fg:w="1"/><text x="69.5357%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.3651%" y="533" width="0.0794%" height="15" fill="rgb(234,2,36)" fg:x="874" fg:w="1"/><text x="69.6151%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3651%" y="517" width="0.0794%" height="15" fill="rgb(239,160,29)" fg:x="874" fg:w="1"/><text x="69.6151%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.5238%" y="453" width="0.1587%" height="15" fill="rgb(236,117,2)" fg:x="876" fg:w="2"/><text x="69.7738%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.5238%" y="437" width="0.1587%" height="15" fill="rgb(215,117,37)" fg:x="876" fg:w="2"/><text x="69.7738%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.5238%" y="421" width="0.1587%" height="15" fill="rgb(244,48,36)" fg:x="876" fg:w="2"/><text x="69.7738%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.5238%" y="405" width="0.1587%" height="15" fill="rgb(223,101,37)" fg:x="876" fg:w="2"/><text x="69.7738%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.5238%" y="389" width="0.1587%" height="15" fill="rgb(205,200,1)" fg:x="876" fg:w="2"/><text x="69.7738%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="69.5238%" y="373" width="0.1587%" height="15" fill="rgb(209,193,20)" fg:x="876" fg:w="2"/><text x="69.7738%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.5238%" y="357" width="0.1587%" height="15" fill="rgb(214,63,13)" fg:x="876" fg:w="2"/><text x="69.7738%" y="367.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="69.3651%" y="581" width="0.3968%" height="15" fill="rgb(253,113,46)" fg:x="874" fg:w="5"/><text x="69.6151%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="69.3651%" y="565" width="0.3968%" height="15" fill="rgb(237,103,34)" fg:x="874" fg:w="5"/><text x="69.6151%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="69.3651%" y="549" width="0.3968%" height="15" fill="rgb(223,38,25)" fg:x="874" fg:w="5"/><text x="69.6151%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="69.4444%" y="533" width="0.3175%" height="15" fill="rgb(251,32,32)" fg:x="875" fg:w="4"/><text x="69.6944%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.5238%" y="517" width="0.2381%" height="15" fill="rgb(228,65,22)" fg:x="876" fg:w="3"/><text x="69.7738%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.5238%" y="501" width="0.2381%" height="15" fill="rgb(205,11,46)" fg:x="876" fg:w="3"/><text x="69.7738%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.5238%" y="485" width="0.2381%" height="15" fill="rgb(220,35,2)" fg:x="876" fg:w="3"/><text x="69.7738%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.5238%" y="469" width="0.2381%" height="15" fill="rgb(217,151,17)" fg:x="876" fg:w="3"/><text x="69.7738%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.6825%" y="453" width="0.0794%" height="15" fill="rgb(243,227,35)" fg:x="878" fg:w="1"/><text x="69.9325%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.6825%" y="437" width="0.0794%" height="15" fill="rgb(214,0,34)" fg:x="878" fg:w="1"/><text x="69.9325%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.6825%" y="421" width="0.0794%" height="15" fill="rgb(209,42,37)" fg:x="878" fg:w="1"/><text x="69.9325%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="69.6825%" y="405" width="0.0794%" height="15" fill="rgb(251,176,30)" fg:x="878" fg:w="1"/><text x="69.9325%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="69.7619%" y="469" width="0.0794%" height="15" fill="rgb(223,64,40)" fg:x="879" fg:w="1"/><text x="70.0119%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.7619%" y="501" width="0.2381%" height="15" fill="rgb(227,180,23)" fg:x="879" fg:w="3"/><text x="70.0119%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.7619%" y="485" width="0.2381%" height="15" fill="rgb(220,137,31)" fg:x="879" fg:w="3"/><text x="70.0119%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="69.8413%" y="469" width="0.1587%" height="15" fill="rgb(245,124,25)" fg:x="880" fg:w="2"/><text x="70.0913%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0000%" y="501" width="0.0794%" height="15" fill="rgb(217,157,5)" fg:x="882" fg:w="1"/><text x="70.2500%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.0000%" y="485" width="0.0794%" height="15" fill="rgb(225,59,2)" fg:x="882" fg:w="1"/><text x="70.2500%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0000%" y="469" width="0.0794%" height="15" fill="rgb(220,182,9)" fg:x="882" fg:w="1"/><text x="70.2500%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0000%" y="453" width="0.0794%" height="15" fill="rgb(249,54,24)" fg:x="882" fg:w="1"/><text x="70.2500%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0000%" y="437" width="0.0794%" height="15" fill="rgb(216,89,17)" fg:x="882" fg:w="1"/><text x="70.2500%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.0794%" y="437" width="0.0794%" height="15" fill="rgb(245,20,45)" fg:x="883" fg:w="1"/><text x="70.3294%" y="447.50"></text></g><g><title>engine::internal::Entities::add_persisted (14 samples, 1.11%)</title><rect x="69.1270%" y="613" width="1.1111%" height="15" fill="rgb(230,83,14)" fg:x="871" fg:w="14"/><text x="69.3770%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::from_str (11 samples, 0.87%)</title><rect x="69.3651%" y="597" width="0.8730%" height="15" fill="rgb(246,109,11)" fg:x="874" fg:w="11"/><text x="69.6151%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="69.7619%" y="581" width="0.4762%" height="15" fill="rgb(235,85,23)" fg:x="879" fg:w="6"/><text x="70.0119%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="69.7619%" y="565" width="0.4762%" height="15" fill="rgb(215,101,36)" fg:x="879" fg:w="6"/><text x="70.0119%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="69.7619%" y="549" width="0.4762%" height="15" fill="rgb(228,140,31)" fg:x="879" fg:w="6"/><text x="70.0119%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="69.7619%" y="533" width="0.4762%" height="15" fill="rgb(234,162,37)" fg:x="879" fg:w="6"/><text x="70.0119%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="69.7619%" y="517" width="0.4762%" height="15" fill="rgb(221,0,24)" fg:x="879" fg:w="6"/><text x="70.0119%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.0794%" y="501" width="0.1587%" height="15" fill="rgb(230,161,41)" fg:x="883" fg:w="2"/><text x="70.3294%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.0794%" y="485" width="0.1587%" height="15" fill="rgb(224,46,24)" fg:x="883" fg:w="2"/><text x="70.3294%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="70.0794%" y="469" width="0.1587%" height="15" fill="rgb(205,59,32)" fg:x="883" fg:w="2"/><text x="70.3294%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.0794%" y="453" width="0.1587%" height="15" fill="rgb(239,31,20)" fg:x="883" fg:w="2"/><text x="70.3294%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1587%" y="437" width="0.0794%" height="15" fill="rgb(233,149,44)" fg:x="884" fg:w="1"/><text x="70.4087%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="70.1587%" y="421" width="0.0794%" height="15" fill="rgb(243,47,26)" fg:x="884" fg:w="1"/><text x="70.4087%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1587%" y="405" width="0.0794%" height="15" fill="rgb(233,107,5)" fg:x="884" fg:w="1"/><text x="70.4087%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1587%" y="389" width="0.0794%" height="15" fill="rgb(248,140,33)" fg:x="884" fg:w="1"/><text x="70.4087%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="70.1587%" y="373" width="0.0794%" height="15" fill="rgb(228,178,19)" fg:x="884" fg:w="1"/><text x="70.4087%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1587%" y="357" width="0.0794%" height="15" fill="rgb(224,39,49)" fg:x="884" fg:w="1"/><text x="70.4087%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1587%" y="341" width="0.0794%" height="15" fill="rgb(246,56,47)" fg:x="884" fg:w="1"/><text x="70.4087%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="70.1587%" y="325" width="0.0794%" height="15" fill="rgb(220,73,27)" fg:x="884" fg:w="1"/><text x="70.4087%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1587%" y="309" width="0.0794%" height="15" fill="rgb(239,112,21)" fg:x="884" fg:w="1"/><text x="70.4087%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1587%" y="293" width="0.0794%" height="15" fill="rgb(253,14,51)" fg:x="884" fg:w="1"/><text x="70.4087%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.1587%" y="277" width="0.0794%" height="15" fill="rgb(215,58,12)" fg:x="884" fg:w="1"/><text x="70.4087%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.1587%" y="261" width="0.0794%" height="15" fill="rgb(207,181,19)" fg:x="884" fg:w="1"/><text x="70.4087%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1587%" y="245" width="0.0794%" height="15" fill="rgb(211,214,34)" fg:x="884" fg:w="1"/><text x="70.4087%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.27%)</title><rect x="69.0476%" y="629" width="1.2698%" height="15" fill="rgb(243,124,39)" fg:x="870" fg:w="16"/><text x="69.2976%" y="639.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="70.2381%" y="613" width="0.0794%" height="15" fill="rgb(248,135,21)" fg:x="885" fg:w="1"/><text x="70.4881%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.2381%" y="597" width="0.0794%" height="15" fill="rgb(245,218,3)" fg:x="885" fg:w="1"/><text x="70.4881%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.2381%" y="581" width="0.0794%" height="15" fill="rgb(225,144,22)" fg:x="885" fg:w="1"/><text x="70.4881%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.3175%" y="501" width="0.0794%" height="15" fill="rgb(250,90,15)" fg:x="886" fg:w="1"/><text x="70.5675%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.3175%" y="485" width="0.0794%" height="15" fill="rgb(224,64,29)" fg:x="886" fg:w="1"/><text x="70.5675%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="70.3175%" y="469" width="0.0794%" height="15" fill="rgb(217,50,47)" fg:x="886" fg:w="1"/><text x="70.5675%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="70.3175%" y="453" width="0.0794%" height="15" fill="rgb(231,159,47)" fg:x="886" fg:w="1"/><text x="70.5675%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="70.3175%" y="437" width="0.0794%" height="15" fill="rgb(213,89,29)" fg:x="886" fg:w="1"/><text x="70.5675%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="70.3175%" y="421" width="0.0794%" height="15" fill="rgb(243,90,23)" fg:x="886" fg:w="1"/><text x="70.5675%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.3175%" y="405" width="0.0794%" height="15" fill="rgb(213,21,6)" fg:x="886" fg:w="1"/><text x="70.5675%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.3175%" y="389" width="0.0794%" height="15" fill="rgb(237,139,17)" fg:x="886" fg:w="1"/><text x="70.5675%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.3175%" y="373" width="0.0794%" height="15" fill="rgb(250,147,17)" fg:x="886" fg:w="1"/><text x="70.5675%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="70.3175%" y="357" width="0.0794%" height="15" fill="rgb(212,208,42)" fg:x="886" fg:w="1"/><text x="70.5675%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.3175%" y="341" width="0.0794%" height="15" fill="rgb(215,229,40)" fg:x="886" fg:w="1"/><text x="70.5675%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3175%" y="325" width="0.0794%" height="15" fill="rgb(206,204,1)" fg:x="886" fg:w="1"/><text x="70.5675%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="70.3968%" y="485" width="0.1587%" height="15" fill="rgb(230,62,32)" fg:x="887" fg:w="2"/><text x="70.6468%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="70.3968%" y="469" width="0.1587%" height="15" fill="rgb(223,22,42)" fg:x="887" fg:w="2"/><text x="70.6468%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.4762%" y="453" width="0.0794%" height="15" fill="rgb(244,6,23)" fg:x="888" fg:w="1"/><text x="70.7262%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.4762%" y="437" width="0.0794%" height="15" fill="rgb(240,221,42)" fg:x="888" fg:w="1"/><text x="70.7262%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.4762%" y="421" width="0.0794%" height="15" fill="rgb(222,74,7)" fg:x="888" fg:w="1"/><text x="70.7262%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.4762%" y="405" width="0.0794%" height="15" fill="rgb(227,191,38)" fg:x="888" fg:w="1"/><text x="70.7262%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="70.4762%" y="389" width="0.0794%" height="15" fill="rgb(227,89,34)" fg:x="888" fg:w="1"/><text x="70.7262%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="70.4762%" y="373" width="0.0794%" height="15" fill="rgb(215,153,25)" fg:x="888" fg:w="1"/><text x="70.7262%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="70.4762%" y="357" width="0.0794%" height="15" fill="rgb(215,153,46)" fg:x="888" fg:w="1"/><text x="70.7262%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="70.4762%" y="341" width="0.0794%" height="15" fill="rgb(242,38,52)" fg:x="888" fg:w="1"/><text x="70.7262%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.4762%" y="325" width="0.0794%" height="15" fill="rgb(218,112,4)" fg:x="888" fg:w="1"/><text x="70.7262%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.4762%" y="309" width="0.0794%" height="15" fill="rgb(231,210,31)" fg:x="888" fg:w="1"/><text x="70.7262%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.4762%" y="293" width="0.0794%" height="15" fill="rgb(245,223,36)" fg:x="888" fg:w="1"/><text x="70.7262%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="70.4762%" y="277" width="0.0794%" height="15" fill="rgb(246,41,2)" fg:x="888" fg:w="1"/><text x="70.7262%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.08%)</title><rect x="70.4762%" y="261" width="0.0794%" height="15" fill="rgb(227,51,31)" fg:x="888" fg:w="1"/><text x="70.7262%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (20 samples, 1.59%)</title><rect x="69.0476%" y="645" width="1.5873%" height="15" fill="rgb(222,95,26)" fg:x="870" fg:w="20"/><text x="69.2976%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="70.3175%" y="629" width="0.3175%" height="15" fill="rgb(224,190,1)" fg:x="886" fg:w="4"/><text x="70.5675%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="70.3175%" y="613" width="0.3175%" height="15" fill="rgb(209,90,42)" fg:x="886" fg:w="4"/><text x="70.5675%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="70.3175%" y="597" width="0.3175%" height="15" fill="rgb(232,225,50)" fg:x="886" fg:w="4"/><text x="70.5675%" y="607.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="70.3175%" y="581" width="0.3175%" height="15" fill="rgb(239,89,47)" fg:x="886" fg:w="4"/><text x="70.5675%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="70.3175%" y="565" width="0.3175%" height="15" fill="rgb(230,212,50)" fg:x="886" fg:w="4"/><text x="70.5675%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="70.3175%" y="549" width="0.3175%" height="15" fill="rgb(252,1,27)" fg:x="886" fg:w="4"/><text x="70.5675%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="70.3175%" y="533" width="0.3175%" height="15" fill="rgb(237,179,41)" fg:x="886" fg:w="4"/><text x="70.5675%" y="543.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="70.3175%" y="517" width="0.3175%" height="15" fill="rgb(214,151,37)" fg:x="886" fg:w="4"/><text x="70.5675%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="70.3968%" y="501" width="0.2381%" height="15" fill="rgb(211,74,11)" fg:x="887" fg:w="3"/><text x="70.6468%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.5556%" y="485" width="0.0794%" height="15" fill="rgb(242,21,21)" fg:x="889" fg:w="1"/><text x="70.8056%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.5556%" y="469" width="0.0794%" height="15" fill="rgb(226,106,43)" fg:x="889" fg:w="1"/><text x="70.8056%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="70.5556%" y="453" width="0.0794%" height="15" fill="rgb(229,162,39)" fg:x="889" fg:w="1"/><text x="70.8056%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="70.5556%" y="437" width="0.0794%" height="15" fill="rgb(228,159,25)" fg:x="889" fg:w="1"/><text x="70.8056%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="70.5556%" y="421" width="0.0794%" height="15" fill="rgb(237,32,23)" fg:x="889" fg:w="1"/><text x="70.8056%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="70.5556%" y="405" width="0.0794%" height="15" fill="rgb(212,35,32)" fg:x="889" fg:w="1"/><text x="70.8056%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.5556%" y="389" width="0.0794%" height="15" fill="rgb(215,199,1)" fg:x="889" fg:w="1"/><text x="70.8056%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.5556%" y="373" width="0.0794%" height="15" fill="rgb(215,67,13)" fg:x="889" fg:w="1"/><text x="70.8056%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.5556%" y="357" width="0.0794%" height="15" fill="rgb(216,20,47)" fg:x="889" fg:w="1"/><text x="70.8056%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="70.5556%" y="341" width="0.0794%" height="15" fill="rgb(249,183,48)" fg:x="889" fg:w="1"/><text x="70.8056%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.5556%" y="325" width="0.0794%" height="15" fill="rgb(208,86,37)" fg:x="889" fg:w="1"/><text x="70.8056%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="70.5556%" y="309" width="0.0794%" height="15" fill="rgb(251,192,7)" fg:x="889" fg:w="1"/><text x="70.8056%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="70.5556%" y="293" width="0.0794%" height="15" fill="rgb(234,196,3)" fg:x="889" fg:w="1"/><text x="70.8056%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="70.5556%" y="277" width="0.0794%" height="15" fill="rgb(229,150,39)" fg:x="889" fg:w="1"/><text x="70.8056%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.5556%" y="261" width="0.0794%" height="15" fill="rgb(226,19,29)" fg:x="889" fg:w="1"/><text x="70.8056%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6349%" y="613" width="0.0794%" height="15" fill="rgb(226,222,2)" fg:x="890" fg:w="1"/><text x="70.8849%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.7143%" y="613" width="0.0794%" height="15" fill="rgb(235,85,29)" fg:x="891" fg:w="1"/><text x="70.9643%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.7143%" y="597" width="0.0794%" height="15" fill="rgb(237,194,43)" fg:x="891" fg:w="1"/><text x="70.9643%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7937%" y="581" width="0.0794%" height="15" fill="rgb(211,4,42)" fg:x="892" fg:w="1"/><text x="71.0437%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7937%" y="565" width="0.0794%" height="15" fill="rgb(221,80,37)" fg:x="892" fg:w="1"/><text x="71.0437%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7937%" y="549" width="0.0794%" height="15" fill="rgb(222,47,31)" fg:x="892" fg:w="1"/><text x="71.0437%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8730%" y="581" width="0.0794%" height="15" fill="rgb(249,82,52)" fg:x="893" fg:w="1"/><text x="71.1230%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.9524%" y="549" width="0.1587%" height="15" fill="rgb(218,203,2)" fg:x="894" fg:w="2"/><text x="71.2024%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.1111%" y="549" width="0.0794%" height="15" fill="rgb(210,175,14)" fg:x="896" fg:w="1"/><text x="71.3611%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.1111%" y="533" width="0.0794%" height="15" fill="rgb(216,210,12)" fg:x="896" fg:w="1"/><text x="71.3611%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="71.1111%" y="517" width="0.0794%" height="15" fill="rgb(229,120,18)" fg:x="896" fg:w="1"/><text x="71.3611%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (8 samples, 0.63%)</title><rect x="70.6349%" y="645" width="0.6349%" height="15" fill="rgb(231,174,12)" fg:x="890" fg:w="8"/><text x="70.8849%" y="655.50"></text></g><g><title>engine::users::model::username_to_key (8 samples, 0.63%)</title><rect x="70.6349%" y="629" width="0.6349%" height="15" fill="rgb(214,101,53)" fg:x="890" fg:w="8"/><text x="70.8849%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="70.7937%" y="613" width="0.4762%" height="15" fill="rgb(246,89,43)" fg:x="892" fg:w="6"/><text x="71.0437%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="70.7937%" y="597" width="0.4762%" height="15" fill="rgb(222,9,51)" fg:x="892" fg:w="6"/><text x="71.0437%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="70.9524%" y="581" width="0.3175%" height="15" fill="rgb(252,221,9)" fg:x="894" fg:w="4"/><text x="71.2024%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="70.9524%" y="565" width="0.3175%" height="15" fill="rgb(248,28,15)" fg:x="894" fg:w="4"/><text x="71.2024%" y="575.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="71.1905%" y="549" width="0.0794%" height="15" fill="rgb(213,54,52)" fg:x="897" fg:w="1"/><text x="71.4405%" y="559.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="71.2698%" y="645" width="0.2381%" height="15" fill="rgb(240,3,45)" fg:x="898" fg:w="3"/><text x="71.5198%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="71.2698%" y="629" width="0.2381%" height="15" fill="rgb(239,138,24)" fg:x="898" fg:w="3"/><text x="71.5198%" y="639.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="71.4286%" y="613" width="0.0794%" height="15" fill="rgb(233,45,54)" fg:x="900" fg:w="1"/><text x="71.6786%" y="623.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="71.4286%" y="597" width="0.0794%" height="15" fill="rgb(220,131,2)" fg:x="900" fg:w="1"/><text x="71.6786%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (902 samples, 71.59%)</title><rect x="0.0000%" y="709" width="71.5873%" height="15" fill="rgb(240,154,36)" fg:x="0" fg:w="902"/><text x="0.2500%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (902 samples, 71.59%)</title><rect x="0.0000%" y="693" width="71.5873%" height="15" fill="rgb(251,221,1)" fg:x="0" fg:w="902"/><text x="0.2500%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (902 samples, 71.59%)</title><rect x="0.0000%" y="677" width="71.5873%" height="15" fill="rgb(225,217,1)" fg:x="0" fg:w="902"/><text x="0.2500%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (530 samples, 42.06%)</title><rect x="29.5238%" y="661" width="42.0635%" height="15" fill="rgb(241,105,49)" fg:x="372" fg:w="530"/><text x="29.7738%" y="671.50">engine::session::Session::evaluate_and_perform</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.5079%" y="645" width="0.0794%" height="15" fill="rgb(215,44,32)" fg:x="901" fg:w="1"/><text x="71.7579%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="71.5079%" y="629" width="0.0794%" height="15" fill="rgb(213,222,14)" fg:x="901" fg:w="1"/><text x="71.7579%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5079%" y="613" width="0.0794%" height="15" fill="rgb(207,99,52)" fg:x="901" fg:w="1"/><text x="71.7579%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.6667%" y="549" width="0.1587%" height="15" fill="rgb(214,208,52)" fg:x="903" fg:w="2"/><text x="71.9167%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="71.5873%" y="661" width="0.4762%" height="15" fill="rgb(244,169,0)" fg:x="902" fg:w="6"/><text x="71.8373%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::state::State&gt;&gt; (6 samples, 0.48%)</title><rect x="71.5873%" y="645" width="0.4762%" height="15" fill="rgb(216,193,37)" fg:x="902" fg:w="6"/><text x="71.8373%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="71.5873%" y="629" width="0.4762%" height="15" fill="rgb(212,158,10)" fg:x="902" fg:w="6"/><text x="71.8373%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (5 samples, 0.40%)</title><rect x="71.6667%" y="613" width="0.3968%" height="15" fill="rgb(213,110,20)" fg:x="903" fg:w="5"/><text x="71.9167%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="71.6667%" y="597" width="0.3968%" height="15" fill="rgb(226,5,42)" fg:x="903" fg:w="5"/><text x="71.9167%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="71.6667%" y="581" width="0.3968%" height="15" fill="rgb(211,93,8)" fg:x="903" fg:w="5"/><text x="71.9167%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="71.6667%" y="565" width="0.3968%" height="15" fill="rgb(240,208,12)" fg:x="903" fg:w="5"/><text x="71.9167%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.8254%" y="549" width="0.2381%" height="15" fill="rgb(233,127,50)" fg:x="905" fg:w="3"/><text x="72.0754%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.9048%" y="533" width="0.1587%" height="15" fill="rgb(227,199,53)" fg:x="906" fg:w="2"/><text x="72.1548%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.9048%" y="517" width="0.1587%" height="15" fill="rgb(235,199,10)" fg:x="906" fg:w="2"/><text x="72.1548%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.9048%" y="501" width="0.1587%" height="15" fill="rgb(228,148,35)" fg:x="906" fg:w="2"/><text x="72.1548%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorageFactory as engine::storage::EntityStorageFactory&gt;::create_storage (2 samples, 0.16%)</title><rect x="72.0635%" y="645" width="0.1587%" height="15" fill="rgb(217,87,19)" fg:x="908" fg:w="2"/><text x="72.3135%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.2222%" y="533" width="0.0794%" height="15" fill="rgb(239,9,32)" fg:x="910" fg:w="1"/><text x="72.4722%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="72.2222%" y="629" width="0.1587%" height="15" fill="rgb(229,101,29)" fg:x="910" fg:w="2"/><text x="72.4722%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="72.2222%" y="613" width="0.1587%" height="15" fill="rgb(208,143,26)" fg:x="910" fg:w="2"/><text x="72.4722%" y="623.50"></text></g><g><title>engine::internal::Entities::add_persisted (2 samples, 0.16%)</title><rect x="72.2222%" y="597" width="0.1587%" height="15" fill="rgb(214,10,2)" fg:x="910" fg:w="2"/><text x="72.4722%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::from_str (2 samples, 0.16%)</title><rect x="72.2222%" y="581" width="0.1587%" height="15" fill="rgb(254,203,30)" fg:x="910" fg:w="2"/><text x="72.4722%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.2222%" y="565" width="0.1587%" height="15" fill="rgb(242,45,3)" fg:x="910" fg:w="2"/><text x="72.4722%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.2222%" y="549" width="0.1587%" height="15" fill="rgb(209,146,51)" fg:x="910" fg:w="2"/><text x="72.4722%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.3016%" y="533" width="0.0794%" height="15" fill="rgb(222,80,5)" fg:x="911" fg:w="1"/><text x="72.5516%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3016%" y="517" width="0.0794%" height="15" fill="rgb(252,80,35)" fg:x="911" fg:w="1"/><text x="72.5516%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.3016%" y="501" width="0.0794%" height="15" fill="rgb(246,125,28)" fg:x="911" fg:w="1"/><text x="72.5516%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3016%" y="485" width="0.0794%" height="15" fill="rgb(224,143,51)" fg:x="911" fg:w="1"/><text x="72.5516%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.3016%" y="469" width="0.0794%" height="15" fill="rgb(205,24,17)" fg:x="911" fg:w="1"/><text x="72.5516%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="72.3016%" y="453" width="0.0794%" height="15" fill="rgb(253,128,30)" fg:x="911" fg:w="1"/><text x="72.5516%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3016%" y="437" width="0.0794%" height="15" fill="rgb(214,153,25)" fg:x="911" fg:w="1"/><text x="72.5516%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.3016%" y="421" width="0.0794%" height="15" fill="rgb(214,4,28)" fg:x="911" fg:w="1"/><text x="72.5516%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="72.3016%" y="405" width="0.0794%" height="15" fill="rgb(235,179,52)" fg:x="911" fg:w="1"/><text x="72.5516%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3016%" y="389" width="0.0794%" height="15" fill="rgb(233,27,42)" fg:x="911" fg:w="1"/><text x="72.5516%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.3016%" y="373" width="0.0794%" height="15" fill="rgb(238,35,25)" fg:x="911" fg:w="1"/><text x="72.5516%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="72.3016%" y="357" width="0.0794%" height="15" fill="rgb(227,44,31)" fg:x="911" fg:w="1"/><text x="72.5516%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3016%" y="341" width="0.0794%" height="15" fill="rgb(232,201,13)" fg:x="911" fg:w="1"/><text x="72.5516%" y="351.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (10 samples, 0.79%)</title><rect x="72.0635%" y="661" width="0.7937%" height="15" fill="rgb(224,172,52)" fg:x="908" fg:w="10"/><text x="72.3135%" y="671.50"></text></g><g><title>engine::session::Session::new (8 samples, 0.63%)</title><rect x="72.2222%" y="645" width="0.6349%" height="15" fill="rgb(214,27,26)" fg:x="910" fg:w="8"/><text x="72.4722%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.48%)</title><rect x="72.3810%" y="629" width="0.4762%" height="15" fill="rgb(210,185,52)" fg:x="912" fg:w="6"/><text x="72.6310%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="72.3810%" y="613" width="0.4762%" height="15" fill="rgb(249,59,32)" fg:x="912" fg:w="6"/><text x="72.6310%" y="623.50"></text></g><g><title>libloading::os::unix::Library::open (6 samples, 0.48%)</title><rect x="72.3810%" y="597" width="0.4762%" height="15" fill="rgb(242,209,18)" fg:x="912" fg:w="6"/><text x="72.6310%" y="607.50"></text></g><g><title>dlopen (6 samples, 0.48%)</title><rect x="72.3810%" y="581" width="0.4762%" height="15" fill="rgb(229,0,18)" fg:x="912" fg:w="6"/><text x="72.6310%" y="591.50"></text></g><g><title>_dl_catch_error (6 samples, 0.48%)</title><rect x="72.3810%" y="565" width="0.4762%" height="15" fill="rgb(217,138,29)" fg:x="912" fg:w="6"/><text x="72.6310%" y="575.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="72.3810%" y="549" width="0.4762%" height="15" fill="rgb(215,72,42)" fg:x="912" fg:w="6"/><text x="72.6310%" y="559.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="72.3810%" y="533" width="0.4762%" height="15" fill="rgb(254,115,11)" fg:x="912" fg:w="6"/><text x="72.6310%" y="543.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="72.3810%" y="517" width="0.4762%" height="15" fill="rgb(205,133,39)" fg:x="912" fg:w="6"/><text x="72.6310%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9365%" y="645" width="0.0794%" height="15" fill="rgb(211,36,27)" fg:x="919" fg:w="1"/><text x="73.1865%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.0952%" y="581" width="0.0794%" height="15" fill="rgb(221,48,10)" fg:x="921" fg:w="1"/><text x="73.3452%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.0952%" y="565" width="0.0794%" height="15" fill="rgb(230,172,50)" fg:x="921" fg:w="1"/><text x="73.3452%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.0952%" y="549" width="0.0794%" height="15" fill="rgb(249,72,18)" fg:x="921" fg:w="1"/><text x="73.3452%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.0952%" y="533" width="0.0794%" height="15" fill="rgb(237,58,48)" fg:x="921" fg:w="1"/><text x="73.3452%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.0952%" y="517" width="0.0794%" height="15" fill="rgb(242,123,3)" fg:x="921" fg:w="1"/><text x="73.3452%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.0952%" y="501" width="0.0794%" height="15" fill="rgb(232,111,32)" fg:x="921" fg:w="1"/><text x="73.3452%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.0952%" y="485" width="0.0794%" height="15" fill="rgb(229,108,3)" fg:x="921" fg:w="1"/><text x="73.3452%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.0952%" y="469" width="0.0794%" height="15" fill="rgb(222,158,10)" fg:x="921" fg:w="1"/><text x="73.3452%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.0952%" y="453" width="0.0794%" height="15" fill="rgb(205,34,49)" fg:x="921" fg:w="1"/><text x="73.3452%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.0952%" y="437" width="0.0794%" height="15" fill="rgb(232,21,14)" fg:x="921" fg:w="1"/><text x="73.3452%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.0952%" y="421" width="0.0794%" height="15" fill="rgb(229,127,44)" fg:x="921" fg:w="1"/><text x="73.3452%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0952%" y="405" width="0.0794%" height="15" fill="rgb(232,171,4)" fg:x="921" fg:w="1"/><text x="73.3452%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.2540%" y="549" width="0.0794%" height="15" fill="rgb(250,92,16)" fg:x="923" fg:w="1"/><text x="73.5040%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.3333%" y="533" width="0.0794%" height="15" fill="rgb(230,103,38)" fg:x="924" fg:w="1"/><text x="73.5833%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.3333%" y="517" width="0.0794%" height="15" fill="rgb(253,167,9)" fg:x="924" fg:w="1"/><text x="73.5833%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.3333%" y="501" width="0.0794%" height="15" fill="rgb(222,118,11)" fg:x="924" fg:w="1"/><text x="73.5833%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.3333%" y="485" width="0.0794%" height="15" fill="rgb(240,202,0)" fg:x="924" fg:w="1"/><text x="73.5833%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.3333%" y="469" width="0.0794%" height="15" fill="rgb(236,124,4)" fg:x="924" fg:w="1"/><text x="73.5833%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.3333%" y="453" width="0.0794%" height="15" fill="rgb(244,128,18)" fg:x="924" fg:w="1"/><text x="73.5833%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.4127%" y="533" width="0.0794%" height="15" fill="rgb(231,206,5)" fg:x="925" fg:w="1"/><text x="73.6627%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.4921%" y="517" width="0.1587%" height="15" fill="rgb(237,111,8)" fg:x="926" fg:w="2"/><text x="73.7421%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.4921%" y="501" width="0.1587%" height="15" fill="rgb(225,127,3)" fg:x="926" fg:w="2"/><text x="73.7421%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="73.4921%" y="485" width="0.1587%" height="15" fill="rgb(222,85,48)" fg:x="926" fg:w="2"/><text x="73.7421%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5714%" y="469" width="0.0794%" height="15" fill="rgb(221,108,37)" fg:x="927" fg:w="1"/><text x="73.8214%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.6508%" y="469" width="0.0794%" height="15" fill="rgb(226,169,36)" fg:x="928" fg:w="1"/><text x="73.9008%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6508%" y="453" width="0.0794%" height="15" fill="rgb(237,76,12)" fg:x="928" fg:w="1"/><text x="73.9008%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6508%" y="437" width="0.0794%" height="15" fill="rgb(210,227,32)" fg:x="928" fg:w="1"/><text x="73.9008%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.6508%" y="421" width="0.0794%" height="15" fill="rgb(214,117,20)" fg:x="928" fg:w="1"/><text x="73.9008%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.6508%" y="517" width="0.1587%" height="15" fill="rgb(234,119,41)" fg:x="928" fg:w="2"/><text x="73.9008%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.6508%" y="501" width="0.1587%" height="15" fill="rgb(230,130,47)" fg:x="928" fg:w="2"/><text x="73.9008%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.6508%" y="485" width="0.1587%" height="15" fill="rgb(215,21,41)" fg:x="928" fg:w="2"/><text x="73.9008%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.7302%" y="469" width="0.0794%" height="15" fill="rgb(226,26,53)" fg:x="929" fg:w="1"/><text x="73.9802%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.71%)</title><rect x="73.1746%" y="581" width="0.7143%" height="15" fill="rgb(221,92,23)" fg:x="922" fg:w="9"/><text x="73.4246%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.71%)</title><rect x="73.1746%" y="565" width="0.7143%" height="15" fill="rgb(213,156,21)" fg:x="922" fg:w="9"/><text x="73.4246%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="73.3333%" y="549" width="0.5556%" height="15" fill="rgb(254,166,29)" fg:x="924" fg:w="7"/><text x="73.5833%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="73.4921%" y="533" width="0.3968%" height="15" fill="rgb(213,71,1)" fg:x="926" fg:w="5"/><text x="73.7421%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.8095%" y="517" width="0.0794%" height="15" fill="rgb(245,8,13)" fg:x="930" fg:w="1"/><text x="74.0595%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.9683%" y="485" width="0.0794%" height="15" fill="rgb(213,32,32)" fg:x="932" fg:w="1"/><text x="74.2183%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0476%" y="453" width="0.0794%" height="15" fill="rgb(251,86,50)" fg:x="933" fg:w="1"/><text x="74.2976%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0476%" y="437" width="0.0794%" height="15" fill="rgb(252,92,41)" fg:x="933" fg:w="1"/><text x="74.2976%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0476%" y="421" width="0.0794%" height="15" fill="rgb(234,70,35)" fg:x="933" fg:w="1"/><text x="74.2976%" y="431.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (15 samples, 1.19%)</title><rect x="73.0159%" y="613" width="1.1905%" height="15" fill="rgb(210,157,19)" fg:x="920" fg:w="15"/><text x="73.2659%" y="623.50"></text></g><g><title>engine::session::SavesEntities::check_for_changes (14 samples, 1.11%)</title><rect x="73.0952%" y="597" width="1.1111%" height="15" fill="rgb(206,20,45)" fg:x="921" fg:w="14"/><text x="73.3452%" y="607.50"></text></g><g><title>kernel::model::any_entity_changes (4 samples, 0.32%)</title><rect x="73.8889%" y="581" width="0.3175%" height="15" fill="rgb(207,34,7)" fg:x="931" fg:w="4"/><text x="74.1389%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="73.8889%" y="565" width="0.3175%" height="15" fill="rgb(253,151,14)" fg:x="931" fg:w="4"/><text x="74.1389%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="73.9683%" y="549" width="0.2381%" height="15" fill="rgb(252,1,18)" fg:x="932" fg:w="3"/><text x="74.2183%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="73.9683%" y="533" width="0.2381%" height="15" fill="rgb(214,77,52)" fg:x="932" fg:w="3"/><text x="74.2183%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="73.9683%" y="517" width="0.2381%" height="15" fill="rgb(254,106,35)" fg:x="932" fg:w="3"/><text x="74.2183%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="73.9683%" y="501" width="0.2381%" height="15" fill="rgb(212,67,40)" fg:x="932" fg:w="3"/><text x="74.2183%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.0476%" y="485" width="0.1587%" height="15" fill="rgb(228,76,23)" fg:x="933" fg:w="2"/><text x="74.2976%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="74.0476%" y="469" width="0.1587%" height="15" fill="rgb(250,198,5)" fg:x="933" fg:w="2"/><text x="74.2976%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1270%" y="453" width="0.0794%" height="15" fill="rgb(209,20,25)" fg:x="934" fg:w="1"/><text x="74.3770%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.1270%" y="437" width="0.0794%" height="15" fill="rgb(236,32,4)" fg:x="934" fg:w="1"/><text x="74.3770%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1270%" y="421" width="0.0794%" height="15" fill="rgb(215,31,6)" fg:x="934" fg:w="1"/><text x="74.3770%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.1270%" y="405" width="0.0794%" height="15" fill="rgb(207,186,49)" fg:x="934" fg:w="1"/><text x="74.3770%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1270%" y="389" width="0.0794%" height="15" fill="rgb(211,212,49)" fg:x="934" fg:w="1"/><text x="74.3770%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.1270%" y="373" width="0.0794%" height="15" fill="rgb(229,51,41)" fg:x="934" fg:w="1"/><text x="74.3770%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.1270%" y="357" width="0.0794%" height="15" fill="rgb(205,225,36)" fg:x="934" fg:w="1"/><text x="74.3770%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.1270%" y="341" width="0.0794%" height="15" fill="rgb(209,213,45)" fg:x="934" fg:w="1"/><text x="74.3770%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1270%" y="325" width="0.0794%" height="15" fill="rgb(219,35,49)" fg:x="934" fg:w="1"/><text x="74.3770%" y="335.50"></text></g><g><title>engine::session::Session::flush (16 samples, 1.27%)</title><rect x="73.0159%" y="645" width="1.2698%" height="15" fill="rgb(215,205,22)" fg:x="920" fg:w="16"/><text x="73.2659%" y="655.50"></text></g><g><title>engine::session::Session::save_entity_changes (16 samples, 1.27%)</title><rect x="73.0159%" y="629" width="1.2698%" height="15" fill="rgb(248,204,34)" fg:x="920" fg:w="16"/><text x="73.2659%" y="639.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="74.2063%" y="613" width="0.0794%" height="15" fill="rgb(219,223,31)" fg:x="935" fg:w="1"/><text x="74.4563%" y="623.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="74.2063%" y="597" width="0.0794%" height="15" fill="rgb(236,14,8)" fg:x="935" fg:w="1"/><text x="74.4563%" y="607.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="74.2063%" y="581" width="0.0794%" height="15" fill="rgb(243,129,23)" fg:x="935" fg:w="1"/><text x="74.4563%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="74.2063%" y="565" width="0.0794%" height="15" fill="rgb(205,204,5)" fg:x="935" fg:w="1"/><text x="74.4563%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="74.2063%" y="549" width="0.0794%" height="15" fill="rgb(244,115,32)" fg:x="935" fg:w="1"/><text x="74.4563%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="74.2063%" y="533" width="0.0794%" height="15" fill="rgb(229,123,14)" fg:x="935" fg:w="1"/><text x="74.4563%" y="543.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="74.2063%" y="517" width="0.0794%" height="15" fill="rgb(250,85,1)" fg:x="935" fg:w="1"/><text x="74.4563%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="74.2857%" y="613" width="0.0794%" height="15" fill="rgb(209,141,54)" fg:x="936" fg:w="1"/><text x="74.5357%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="74.2857%" y="597" width="0.0794%" height="15" fill="rgb(244,107,39)" fg:x="936" fg:w="1"/><text x="74.5357%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.2857%" y="581" width="0.0794%" height="15" fill="rgb(230,68,26)" fg:x="936" fg:w="1"/><text x="74.5357%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="74.2857%" y="629" width="0.1587%" height="15" fill="rgb(220,178,33)" fg:x="936" fg:w="2"/><text x="74.5357%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="74.3651%" y="613" width="0.0794%" height="15" fill="rgb(220,77,53)" fg:x="937" fg:w="1"/><text x="74.6151%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="74.3651%" y="597" width="0.0794%" height="15" fill="rgb(224,108,19)" fg:x="937" fg:w="1"/><text x="74.6151%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.3651%" y="581" width="0.0794%" height="15" fill="rgb(223,203,27)" fg:x="937" fg:w="1"/><text x="74.6151%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.3651%" y="565" width="0.0794%" height="15" fill="rgb(211,32,46)" fg:x="937" fg:w="1"/><text x="74.6151%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.3651%" y="549" width="0.0794%" height="15" fill="rgb(240,101,27)" fg:x="937" fg:w="1"/><text x="74.6151%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3651%" y="533" width="0.0794%" height="15" fill="rgb(217,210,11)" fg:x="937" fg:w="1"/><text x="74.6151%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3651%" y="517" width="0.0794%" height="15" fill="rgb(236,130,21)" fg:x="937" fg:w="1"/><text x="74.6151%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3651%" y="501" width="0.0794%" height="15" fill="rgb(250,136,8)" fg:x="937" fg:w="1"/><text x="74.6151%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3651%" y="485" width="0.0794%" height="15" fill="rgb(243,223,36)" fg:x="937" fg:w="1"/><text x="74.6151%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.3651%" y="469" width="0.0794%" height="15" fill="rgb(246,184,8)" fg:x="937" fg:w="1"/><text x="74.6151%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.3651%" y="453" width="0.0794%" height="15" fill="rgb(222,158,36)" fg:x="937" fg:w="1"/><text x="74.6151%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.3651%" y="437" width="0.0794%" height="15" fill="rgb(210,220,19)" fg:x="937" fg:w="1"/><text x="74.6151%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="74.3651%" y="421" width="0.0794%" height="15" fill="rgb(246,44,38)" fg:x="937" fg:w="1"/><text x="74.6151%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.3651%" y="405" width="0.0794%" height="15" fill="rgb(246,186,14)" fg:x="937" fg:w="1"/><text x="74.6151%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4444%" y="469" width="0.0794%" height="15" fill="rgb(233,193,20)" fg:x="938" fg:w="1"/><text x="74.6944%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4444%" y="453" width="0.0794%" height="15" fill="rgb(215,60,5)" fg:x="938" fg:w="1"/><text x="74.6944%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4444%" y="437" width="0.0794%" height="15" fill="rgb(207,128,10)" fg:x="938" fg:w="1"/><text x="74.6944%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.4444%" y="421" width="0.0794%" height="15" fill="rgb(238,84,54)" fg:x="938" fg:w="1"/><text x="74.6944%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.4444%" y="405" width="0.0794%" height="15" fill="rgb(213,130,11)" fg:x="938" fg:w="1"/><text x="74.6944%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.4444%" y="389" width="0.0794%" height="15" fill="rgb(235,62,9)" fg:x="938" fg:w="1"/><text x="74.6944%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4444%" y="373" width="0.0794%" height="15" fill="rgb(222,64,24)" fg:x="938" fg:w="1"/><text x="74.6944%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4444%" y="357" width="0.0794%" height="15" fill="rgb(238,193,42)" fg:x="938" fg:w="1"/><text x="74.6944%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.4444%" y="341" width="0.0794%" height="15" fill="rgb(243,204,46)" fg:x="938" fg:w="1"/><text x="74.6944%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.4444%" y="325" width="0.0794%" height="15" fill="rgb(243,196,11)" fg:x="938" fg:w="1"/><text x="74.6944%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.4444%" y="309" width="0.0794%" height="15" fill="rgb(232,77,22)" fg:x="938" fg:w="1"/><text x="74.6944%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.4444%" y="293" width="0.0794%" height="15" fill="rgb(215,80,25)" fg:x="938" fg:w="1"/><text x="74.6944%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4444%" y="277" width="0.0794%" height="15" fill="rgb(210,173,7)" fg:x="938" fg:w="1"/><text x="74.6944%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.4444%" y="581" width="0.1587%" height="15" fill="rgb(207,101,10)" fg:x="938" fg:w="2"/><text x="74.6944%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.4444%" y="565" width="0.1587%" height="15" fill="rgb(246,57,48)" fg:x="938" fg:w="2"/><text x="74.6944%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.4444%" y="549" width="0.1587%" height="15" fill="rgb(236,184,40)" fg:x="938" fg:w="2"/><text x="74.6944%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.4444%" y="533" width="0.1587%" height="15" fill="rgb(210,205,13)" fg:x="938" fg:w="2"/><text x="74.6944%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.4444%" y="517" width="0.1587%" height="15" fill="rgb(231,129,42)" fg:x="938" fg:w="2"/><text x="74.6944%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.4444%" y="501" width="0.1587%" height="15" fill="rgb(220,229,54)" fg:x="938" fg:w="2"/><text x="74.6944%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.4444%" y="485" width="0.1587%" height="15" fill="rgb(230,192,26)" fg:x="938" fg:w="2"/><text x="74.6944%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.5238%" y="469" width="0.0794%" height="15" fill="rgb(253,18,30)" fg:x="939" fg:w="1"/><text x="74.7738%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="74.4444%" y="613" width="0.2381%" height="15" fill="rgb(216,62,53)" fg:x="938" fg:w="3"/><text x="74.6944%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="74.4444%" y="597" width="0.2381%" height="15" fill="rgb(230,79,29)" fg:x="938" fg:w="3"/><text x="74.6944%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.6032%" y="581" width="0.0794%" height="15" fill="rgb(242,26,26)" fg:x="940" fg:w="1"/><text x="74.8532%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.6032%" y="565" width="0.0794%" height="15" fill="rgb(227,125,21)" fg:x="940" fg:w="1"/><text x="74.8532%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.6032%" y="549" width="0.0794%" height="15" fill="rgb(229,93,26)" fg:x="940" fg:w="1"/><text x="74.8532%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6032%" y="533" width="0.0794%" height="15" fill="rgb(227,228,8)" fg:x="940" fg:w="1"/><text x="74.8532%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6032%" y="517" width="0.0794%" height="15" fill="rgb(233,56,0)" fg:x="940" fg:w="1"/><text x="74.8532%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6032%" y="501" width="0.0794%" height="15" fill="rgb(225,185,17)" fg:x="940" fg:w="1"/><text x="74.8532%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6032%" y="485" width="0.0794%" height="15" fill="rgb(238,202,30)" fg:x="940" fg:w="1"/><text x="74.8532%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.6032%" y="469" width="0.0794%" height="15" fill="rgb(236,60,13)" fg:x="940" fg:w="1"/><text x="74.8532%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6032%" y="453" width="0.0794%" height="15" fill="rgb(244,92,0)" fg:x="940" fg:w="1"/><text x="74.8532%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6032%" y="437" width="0.0794%" height="15" fill="rgb(225,57,15)" fg:x="940" fg:w="1"/><text x="74.8532%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6032%" y="421" width="0.0794%" height="15" fill="rgb(228,5,28)" fg:x="940" fg:w="1"/><text x="74.8532%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.6032%" y="405" width="0.0794%" height="15" fill="rgb(252,34,51)" fg:x="940" fg:w="1"/><text x="74.8532%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6032%" y="389" width="0.0794%" height="15" fill="rgb(235,58,7)" fg:x="940" fg:w="1"/><text x="74.8532%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="74.6825%" y="613" width="0.0794%" height="15" fill="rgb(250,132,20)" fg:x="941" fg:w="1"/><text x="74.9325%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.6825%" y="597" width="0.0794%" height="15" fill="rgb(217,164,0)" fg:x="941" fg:w="1"/><text x="74.9325%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6825%" y="581" width="0.0794%" height="15" fill="rgb(208,220,35)" fg:x="941" fg:w="1"/><text x="74.9325%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="74.2857%" y="645" width="0.5556%" height="15" fill="rgb(227,42,51)" fg:x="936" fg:w="7"/><text x="74.5357%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="74.4444%" y="629" width="0.3968%" height="15" fill="rgb(225,146,38)" fg:x="938" fg:w="5"/><text x="74.6944%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="74.7619%" y="613" width="0.0794%" height="15" fill="rgb(252,108,37)" fg:x="942" fg:w="1"/><text x="75.0119%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7619%" y="597" width="0.0794%" height="15" fill="rgb(244,101,24)" fg:x="942" fg:w="1"/><text x="75.0119%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="74.8413%" y="645" width="0.1587%" height="15" fill="rgb(213,161,50)" fg:x="943" fg:w="2"/><text x="75.0913%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="74.8413%" y="629" width="0.1587%" height="15" fill="rgb(248,159,19)" fg:x="943" fg:w="2"/><text x="75.0913%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="74.9206%" y="613" width="0.0794%" height="15" fill="rgb(233,179,15)" fg:x="944" fg:w="1"/><text x="75.1706%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="74.9206%" y="597" width="0.0794%" height="15" fill="rgb(248,178,3)" fg:x="944" fg:w="1"/><text x="75.1706%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.9206%" y="581" width="0.0794%" height="15" fill="rgb(245,190,41)" fg:x="944" fg:w="1"/><text x="75.1706%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.9206%" y="565" width="0.0794%" height="15" fill="rgb(218,151,19)" fg:x="944" fg:w="1"/><text x="75.1706%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.9206%" y="549" width="0.0794%" height="15" fill="rgb(245,25,44)" fg:x="944" fg:w="1"/><text x="75.1706%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.9206%" y="533" width="0.0794%" height="15" fill="rgb(235,172,47)" fg:x="944" fg:w="1"/><text x="75.1706%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.9206%" y="517" width="0.0794%" height="15" fill="rgb(246,33,12)" fg:x="944" fg:w="1"/><text x="75.1706%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9206%" y="501" width="0.0794%" height="15" fill="rgb(214,124,7)" fg:x="944" fg:w="1"/><text x="75.1706%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="75.0794%" y="629" width="0.0794%" height="15" fill="rgb(246,186,18)" fg:x="946" fg:w="1"/><text x="75.3294%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="75.0794%" y="613" width="0.0794%" height="15" fill="rgb(231,94,1)" fg:x="946" fg:w="1"/><text x="75.3294%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="75.0794%" y="597" width="0.0794%" height="15" fill="rgb(208,33,48)" fg:x="946" fg:w="1"/><text x="75.3294%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.0794%" y="581" width="0.0794%" height="15" fill="rgb(208,195,44)" fg:x="946" fg:w="1"/><text x="75.3294%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.0794%" y="565" width="0.0794%" height="15" fill="rgb(226,13,52)" fg:x="946" fg:w="1"/><text x="75.3294%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.0794%" y="549" width="0.0794%" height="15" fill="rgb(217,219,45)" fg:x="946" fg:w="1"/><text x="75.3294%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.0794%" y="533" width="0.0794%" height="15" fill="rgb(223,45,25)" fg:x="946" fg:w="1"/><text x="75.3294%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.0794%" y="517" width="0.0794%" height="15" fill="rgb(241,163,0)" fg:x="946" fg:w="1"/><text x="75.3294%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.0794%" y="501" width="0.0794%" height="15" fill="rgb(216,68,47)" fg:x="946" fg:w="1"/><text x="75.3294%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.0794%" y="485" width="0.0794%" height="15" fill="rgb(236,119,45)" fg:x="946" fg:w="1"/><text x="75.3294%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0794%" y="469" width="0.0794%" height="15" fill="rgb(209,188,24)" fg:x="946" fg:w="1"/><text x="75.3294%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.0794%" y="453" width="0.0794%" height="15" fill="rgb(221,118,7)" fg:x="946" fg:w="1"/><text x="75.3294%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.0794%" y="437" width="0.0794%" height="15" fill="rgb(213,148,43)" fg:x="946" fg:w="1"/><text x="75.3294%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.0794%" y="421" width="0.0794%" height="15" fill="rgb(231,21,43)" fg:x="946" fg:w="1"/><text x="75.3294%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.0794%" y="405" width="0.0794%" height="15" fill="rgb(232,213,43)" fg:x="946" fg:w="1"/><text x="75.3294%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0794%" y="389" width="0.0794%" height="15" fill="rgb(239,145,50)" fg:x="946" fg:w="1"/><text x="75.3294%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0794%" y="373" width="0.0794%" height="15" fill="rgb(222,131,18)" fg:x="946" fg:w="1"/><text x="75.3294%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.0794%" y="357" width="0.0794%" height="15" fill="rgb(243,181,13)" fg:x="946" fg:w="1"/><text x="75.3294%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.0794%" y="341" width="0.0794%" height="15" fill="rgb(212,74,41)" fg:x="946" fg:w="1"/><text x="75.3294%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.0794%" y="325" width="0.0794%" height="15" fill="rgb(237,143,34)" fg:x="946" fg:w="1"/><text x="75.3294%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.0794%" y="309" width="0.0794%" height="15" fill="rgb(228,139,0)" fg:x="946" fg:w="1"/><text x="75.3294%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0794%" y="293" width="0.0794%" height="15" fill="rgb(227,214,11)" fg:x="946" fg:w="1"/><text x="75.3294%" y="303.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="75.1587%" y="581" width="0.1587%" height="15" fill="rgb(228,118,39)" fg:x="947" fg:w="2"/><text x="75.4087%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="75.1587%" y="565" width="0.1587%" height="15" fill="rgb(207,117,22)" fg:x="947" fg:w="2"/><text x="75.4087%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="75.2381%" y="549" width="0.0794%" height="15" fill="rgb(225,91,8)" fg:x="948" fg:w="1"/><text x="75.4881%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="75.2381%" y="533" width="0.0794%" height="15" fill="rgb(230,219,48)" fg:x="948" fg:w="1"/><text x="75.4881%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.2381%" y="517" width="0.0794%" height="15" fill="rgb(244,0,23)" fg:x="948" fg:w="1"/><text x="75.4881%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.2381%" y="501" width="0.0794%" height="15" fill="rgb(206,212,23)" fg:x="948" fg:w="1"/><text x="75.4881%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.2381%" y="485" width="0.0794%" height="15" fill="rgb(254,62,10)" fg:x="948" fg:w="1"/><text x="75.4881%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2381%" y="469" width="0.0794%" height="15" fill="rgb(236,58,8)" fg:x="948" fg:w="1"/><text x="75.4881%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2381%" y="453" width="0.0794%" height="15" fill="rgb(232,212,17)" fg:x="948" fg:w="1"/><text x="75.4881%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2381%" y="437" width="0.0794%" height="15" fill="rgb(206,132,9)" fg:x="948" fg:w="1"/><text x="75.4881%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2381%" y="421" width="0.0794%" height="15" fill="rgb(234,97,28)" fg:x="948" fg:w="1"/><text x="75.4881%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2381%" y="405" width="0.0794%" height="15" fill="rgb(254,144,9)" fg:x="948" fg:w="1"/><text x="75.4881%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="75.3175%" y="565" width="0.0794%" height="15" fill="rgb(244,204,43)" fg:x="949" fg:w="1"/><text x="75.5675%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="75.3175%" y="549" width="0.0794%" height="15" fill="rgb(248,177,16)" fg:x="949" fg:w="1"/><text x="75.5675%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="75.3175%" y="533" width="0.0794%" height="15" fill="rgb(219,110,15)" fg:x="949" fg:w="1"/><text x="75.5675%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.3175%" y="517" width="0.0794%" height="15" fill="rgb(212,203,25)" fg:x="949" fg:w="1"/><text x="75.5675%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.3175%" y="501" width="0.0794%" height="15" fill="rgb(205,50,1)" fg:x="949" fg:w="1"/><text x="75.5675%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="75.3968%" y="549" width="0.0794%" height="15" fill="rgb(222,152,41)" fg:x="950" fg:w="1"/><text x="75.6468%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="75.3968%" y="533" width="0.0794%" height="15" fill="rgb(236,83,3)" fg:x="950" fg:w="1"/><text x="75.6468%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.3968%" y="517" width="0.0794%" height="15" fill="rgb(214,30,54)" fg:x="950" fg:w="1"/><text x="75.6468%" y="527.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="75.3968%" y="501" width="0.0794%" height="15" fill="rgb(250,117,31)" fg:x="950" fg:w="1"/><text x="75.6468%" y="511.50"></text></g><g><title>plugins_core::build::Build::leads_to (3 samples, 0.24%)</title><rect x="75.3175%" y="581" width="0.2381%" height="15" fill="rgb(228,77,14)" fg:x="949" fg:w="3"/><text x="75.5675%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="75.3968%" y="565" width="0.1587%" height="15" fill="rgb(241,3,28)" fg:x="950" fg:w="2"/><text x="75.6468%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.4762%" y="549" width="0.0794%" height="15" fill="rgb(221,175,52)" fg:x="951" fg:w="1"/><text x="75.7262%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="75.4762%" y="533" width="0.0794%" height="15" fill="rgb(237,91,6)" fg:x="951" fg:w="1"/><text x="75.7262%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.4762%" y="517" width="0.0794%" height="15" fill="rgb(246,46,42)" fg:x="951" fg:w="1"/><text x="75.7262%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="75.1587%" y="629" width="0.4762%" height="15" fill="rgb(235,199,0)" fg:x="947" fg:w="6"/><text x="75.4087%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="75.1587%" y="613" width="0.4762%" height="15" fill="rgb(224,44,40)" fg:x="947" fg:w="6"/><text x="75.4087%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="75.1587%" y="597" width="0.4762%" height="15" fill="rgb(209,24,35)" fg:x="947" fg:w="6"/><text x="75.4087%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="75.5556%" y="581" width="0.0794%" height="15" fill="rgb(244,46,22)" fg:x="952" fg:w="1"/><text x="75.8056%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="75.5556%" y="565" width="0.0794%" height="15" fill="rgb(235,99,8)" fg:x="952" fg:w="1"/><text x="75.8056%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="75.5556%" y="549" width="0.0794%" height="15" fill="rgb(218,127,36)" fg:x="952" fg:w="1"/><text x="75.8056%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.5556%" y="533" width="0.0794%" height="15" fill="rgb(238,47,46)" fg:x="952" fg:w="1"/><text x="75.8056%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5556%" y="517" width="0.0794%" height="15" fill="rgb(233,65,17)" fg:x="952" fg:w="1"/><text x="75.8056%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5556%" y="501" width="0.0794%" height="15" fill="rgb(239,22,33)" fg:x="952" fg:w="1"/><text x="75.8056%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="75.5556%" y="485" width="0.0794%" height="15" fill="rgb(243,66,43)" fg:x="952" fg:w="1"/><text x="75.8056%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.5556%" y="469" width="0.0794%" height="15" fill="rgb(235,210,28)" fg:x="952" fg:w="1"/><text x="75.8056%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.5556%" y="453" width="0.0794%" height="15" fill="rgb(205,191,50)" fg:x="952" fg:w="1"/><text x="75.8056%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5556%" y="437" width="0.0794%" height="15" fill="rgb(251,217,19)" fg:x="952" fg:w="1"/><text x="75.8056%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5556%" y="421" width="0.0794%" height="15" fill="rgb(205,174,37)" fg:x="952" fg:w="1"/><text x="75.8056%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5556%" y="405" width="0.0794%" height="15" fill="rgb(212,158,42)" fg:x="952" fg:w="1"/><text x="75.8056%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.6349%" y="597" width="0.0794%" height="15" fill="rgb(212,208,51)" fg:x="953" fg:w="1"/><text x="75.8849%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6349%" y="581" width="0.0794%" height="15" fill="rgb(225,198,20)" fg:x="953" fg:w="1"/><text x="75.8849%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="75.7143%" y="549" width="0.0794%" height="15" fill="rgb(247,41,44)" fg:x="954" fg:w="1"/><text x="75.9643%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.7143%" y="533" width="0.0794%" height="15" fill="rgb(228,33,41)" fg:x="954" fg:w="1"/><text x="75.9643%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.7143%" y="517" width="0.0794%" height="15" fill="rgb(215,47,52)" fg:x="954" fg:w="1"/><text x="75.9643%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.7937%" y="533" width="0.0794%" height="15" fill="rgb(248,106,37)" fg:x="955" fg:w="1"/><text x="76.0437%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.7937%" y="517" width="0.0794%" height="15" fill="rgb(238,91,29)" fg:x="955" fg:w="1"/><text x="76.0437%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.7937%" y="501" width="0.0794%" height="15" fill="rgb(226,111,40)" fg:x="955" fg:w="1"/><text x="76.0437%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.7937%" y="485" width="0.0794%" height="15" fill="rgb(229,159,36)" fg:x="955" fg:w="1"/><text x="76.0437%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.8730%" y="485" width="0.1587%" height="15" fill="rgb(221,109,4)" fg:x="956" fg:w="2"/><text x="76.1230%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.8730%" y="469" width="0.1587%" height="15" fill="rgb(236,56,25)" fg:x="956" fg:w="2"/><text x="76.1230%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.9524%" y="453" width="0.0794%" height="15" fill="rgb(244,113,23)" fg:x="957" fg:w="1"/><text x="76.2024%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.9524%" y="437" width="0.0794%" height="15" fill="rgb(249,132,2)" fg:x="957" fg:w="1"/><text x="76.2024%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="75.8730%" y="517" width="0.2381%" height="15" fill="rgb(205,185,21)" fg:x="956" fg:w="3"/><text x="76.1230%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="75.8730%" y="501" width="0.2381%" height="15" fill="rgb(245,130,2)" fg:x="956" fg:w="3"/><text x="76.1230%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.0317%" y="485" width="0.0794%" height="15" fill="rgb(246,71,26)" fg:x="958" fg:w="1"/><text x="76.2817%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.0317%" y="469" width="0.0794%" height="15" fill="rgb(234,194,6)" fg:x="958" fg:w="1"/><text x="76.2817%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="75.8730%" y="533" width="0.3175%" height="15" fill="rgb(206,24,32)" fg:x="956" fg:w="4"/><text x="76.1230%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.1111%" y="517" width="0.0794%" height="15" fill="rgb(233,7,54)" fg:x="959" fg:w="1"/><text x="76.3611%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.1111%" y="501" width="0.0794%" height="15" fill="rgb(252,46,1)" fg:x="959" fg:w="1"/><text x="76.3611%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="75.7937%" y="549" width="0.4762%" height="15" fill="rgb(216,113,53)" fg:x="955" fg:w="6"/><text x="76.0437%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.1905%" y="533" width="0.0794%" height="15" fill="rgb(215,40,24)" fg:x="960" fg:w="1"/><text x="76.4405%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.1905%" y="517" width="0.0794%" height="15" fill="rgb(233,222,8)" fg:x="960" fg:w="1"/><text x="76.4405%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1905%" y="501" width="0.0794%" height="15" fill="rgb(248,73,28)" fg:x="960" fg:w="1"/><text x="76.4405%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.1905%" y="485" width="0.0794%" height="15" fill="rgb(247,126,28)" fg:x="960" fg:w="1"/><text x="76.4405%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.1905%" y="469" width="0.0794%" height="15" fill="rgb(242,173,54)" fg:x="960" fg:w="1"/><text x="76.4405%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.1905%" y="453" width="0.0794%" height="15" fill="rgb(244,186,22)" fg:x="960" fg:w="1"/><text x="76.4405%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.71%)</title><rect x="75.7143%" y="565" width="0.7143%" height="15" fill="rgb(231,187,4)" fg:x="954" fg:w="9"/><text x="75.9643%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.2698%" y="549" width="0.1587%" height="15" fill="rgb(252,66,47)" fg:x="961" fg:w="2"/><text x="76.5198%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="76.2698%" y="533" width="0.1587%" height="15" fill="rgb(240,228,28)" fg:x="961" fg:w="2"/><text x="76.5198%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.2698%" y="517" width="0.1587%" height="15" fill="rgb(237,63,43)" fg:x="961" fg:w="2"/><text x="76.5198%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.3492%" y="501" width="0.0794%" height="15" fill="rgb(214,1,44)" fg:x="962" fg:w="1"/><text x="76.5992%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4286%" y="517" width="0.0794%" height="15" fill="rgb(212,2,46)" fg:x="963" fg:w="1"/><text x="76.6786%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5079%" y="485" width="0.0794%" height="15" fill="rgb(213,142,5)" fg:x="964" fg:w="1"/><text x="76.7579%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5079%" y="469" width="0.0794%" height="15" fill="rgb(229,135,1)" fg:x="964" fg:w="1"/><text x="76.7579%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="76.4286%" y="565" width="0.2381%" height="15" fill="rgb(252,98,38)" fg:x="963" fg:w="3"/><text x="76.6786%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="76.4286%" y="549" width="0.2381%" height="15" fill="rgb(206,89,40)" fg:x="963" fg:w="3"/><text x="76.6786%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="76.4286%" y="533" width="0.2381%" height="15" fill="rgb(219,73,36)" fg:x="963" fg:w="3"/><text x="76.6786%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.5079%" y="517" width="0.1587%" height="15" fill="rgb(207,168,32)" fg:x="964" fg:w="2"/><text x="76.7579%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.5079%" y="501" width="0.1587%" height="15" fill="rgb(215,113,21)" fg:x="964" fg:w="2"/><text x="76.7579%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5873%" y="485" width="0.0794%" height="15" fill="rgb(217,144,43)" fg:x="965" fg:w="1"/><text x="76.8373%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5873%" y="469" width="0.0794%" height="15" fill="rgb(249,48,50)" fg:x="965" fg:w="1"/><text x="76.8373%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5873%" y="453" width="0.0794%" height="15" fill="rgb(242,1,26)" fg:x="965" fg:w="1"/><text x="76.8373%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.6667%" y="517" width="0.1587%" height="15" fill="rgb(231,167,42)" fg:x="966" fg:w="2"/><text x="76.9167%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7460%" y="501" width="0.0794%" height="15" fill="rgb(242,177,45)" fg:x="967" fg:w="1"/><text x="76.9960%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="76.8254%" y="517" width="0.0794%" height="15" fill="rgb(232,121,42)" fg:x="968" fg:w="1"/><text x="77.0754%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="76.9048%" y="517" width="0.0794%" height="15" fill="rgb(205,8,42)" fg:x="969" fg:w="1"/><text x="77.1548%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="76.9841%" y="485" width="0.1587%" height="15" fill="rgb(238,199,24)" fg:x="970" fg:w="2"/><text x="77.2341%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.0635%" y="469" width="0.0794%" height="15" fill="rgb(228,112,2)" fg:x="971" fg:w="1"/><text x="77.3135%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.0635%" y="453" width="0.0794%" height="15" fill="rgb(215,115,33)" fg:x="971" fg:w="1"/><text x="77.3135%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0635%" y="437" width="0.0794%" height="15" fill="rgb(230,209,34)" fg:x="971" fg:w="1"/><text x="77.3135%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0635%" y="421" width="0.0794%" height="15" fill="rgb(246,76,12)" fg:x="971" fg:w="1"/><text x="77.3135%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.0635%" y="405" width="0.0794%" height="15" fill="rgb(240,110,9)" fg:x="971" fg:w="1"/><text x="77.3135%" y="415.50"></text></g><g><title>engine::session::Session::flush (20 samples, 1.59%)</title><rect x="75.6349%" y="629" width="1.5873%" height="15" fill="rgb(224,94,46)" fg:x="953" fg:w="20"/><text x="75.8849%" y="639.50"></text></g><g><title>engine::session::Session::save_entity_changes (20 samples, 1.59%)</title><rect x="75.6349%" y="613" width="1.5873%" height="15" fill="rgb(247,150,22)" fg:x="953" fg:w="20"/><text x="75.8849%" y="623.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (19 samples, 1.51%)</title><rect x="75.7143%" y="597" width="1.5079%" height="15" fill="rgb(249,85,13)" fg:x="954" fg:w="19"/><text x="75.9643%" y="607.50"></text></g><g><title>engine::session::SavesEntities::check_for_changes (19 samples, 1.51%)</title><rect x="75.7143%" y="581" width="1.5079%" height="15" fill="rgb(208,77,41)" fg:x="954" fg:w="19"/><text x="75.9643%" y="591.50"></text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="76.6667%" y="565" width="0.5556%" height="15" fill="rgb(240,42,44)" fg:x="966" fg:w="7"/><text x="76.9167%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="76.6667%" y="549" width="0.5556%" height="15" fill="rgb(222,10,51)" fg:x="966" fg:w="7"/><text x="76.9167%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="76.6667%" y="533" width="0.5556%" height="15" fill="rgb(208,146,53)" fg:x="966" fg:w="7"/><text x="76.9167%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="76.9841%" y="517" width="0.2381%" height="15" fill="rgb(236,162,23)" fg:x="970" fg:w="3"/><text x="77.2341%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="76.9841%" y="501" width="0.2381%" height="15" fill="rgb(218,66,21)" fg:x="970" fg:w="3"/><text x="77.2341%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.1429%" y="485" width="0.0794%" height="15" fill="rgb(233,6,47)" fg:x="972" fg:w="1"/><text x="77.3929%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1429%" y="469" width="0.0794%" height="15" fill="rgb(236,59,51)" fg:x="972" fg:w="1"/><text x="77.3929%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="77.3016%" y="597" width="0.0794%" height="15" fill="rgb(242,12,46)" fg:x="974" fg:w="1"/><text x="77.5516%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.3016%" y="581" width="0.0794%" height="15" fill="rgb(243,142,19)" fg:x="974" fg:w="1"/><text x="77.5516%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.3016%" y="565" width="0.0794%" height="15" fill="rgb(217,28,17)" fg:x="974" fg:w="1"/><text x="77.5516%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.3016%" y="549" width="0.0794%" height="15" fill="rgb(228,2,27)" fg:x="974" fg:w="1"/><text x="77.5516%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.3016%" y="533" width="0.0794%" height="15" fill="rgb(214,221,4)" fg:x="974" fg:w="1"/><text x="77.5516%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.3016%" y="517" width="0.0794%" height="15" fill="rgb(224,69,26)" fg:x="974" fg:w="1"/><text x="77.5516%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="77.3016%" y="501" width="0.0794%" height="15" fill="rgb(219,70,4)" fg:x="974" fg:w="1"/><text x="77.5516%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.3016%" y="485" width="0.0794%" height="15" fill="rgb(218,157,39)" fg:x="974" fg:w="1"/><text x="77.5516%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.3016%" y="469" width="0.0794%" height="15" fill="rgb(238,36,28)" fg:x="974" fg:w="1"/><text x="77.5516%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3016%" y="453" width="0.0794%" height="15" fill="rgb(232,29,0)" fg:x="974" fg:w="1"/><text x="77.5516%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3016%" y="437" width="0.0794%" height="15" fill="rgb(243,138,46)" fg:x="974" fg:w="1"/><text x="77.5516%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.3016%" y="421" width="0.0794%" height="15" fill="rgb(232,186,41)" fg:x="974" fg:w="1"/><text x="77.5516%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.3016%" y="405" width="0.0794%" height="15" fill="rgb(252,166,17)" fg:x="974" fg:w="1"/><text x="77.5516%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.3016%" y="389" width="0.0794%" height="15" fill="rgb(228,179,12)" fg:x="974" fg:w="1"/><text x="77.5516%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.3016%" y="373" width="0.0794%" height="15" fill="rgb(254,205,53)" fg:x="974" fg:w="1"/><text x="77.5516%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.3016%" y="357" width="0.0794%" height="15" fill="rgb(224,163,47)" fg:x="974" fg:w="1"/><text x="77.5516%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.3016%" y="341" width="0.0794%" height="15" fill="rgb(208,43,47)" fg:x="974" fg:w="1"/><text x="77.5516%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.3016%" y="325" width="0.0794%" height="15" fill="rgb(224,198,38)" fg:x="974" fg:w="1"/><text x="77.5516%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.3016%" y="309" width="0.0794%" height="15" fill="rgb(234,12,40)" fg:x="974" fg:w="1"/><text x="77.5516%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.3016%" y="293" width="0.0794%" height="15" fill="rgb(237,212,39)" fg:x="974" fg:w="1"/><text x="77.5516%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3016%" y="277" width="0.0794%" height="15" fill="rgb(253,2,33)" fg:x="974" fg:w="1"/><text x="77.5516%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="77.3016%" y="613" width="0.3175%" height="15" fill="rgb(251,29,16)" fg:x="974" fg:w="4"/><text x="77.5516%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="77.3810%" y="597" width="0.2381%" height="15" fill="rgb(214,38,29)" fg:x="975" fg:w="3"/><text x="77.6310%" y="607.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="77.3810%" y="581" width="0.2381%" height="15" fill="rgb(226,226,29)" fg:x="975" fg:w="3"/><text x="77.6310%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="77.3810%" y="565" width="0.2381%" height="15" fill="rgb(236,79,42)" fg:x="975" fg:w="3"/><text x="77.6310%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="77.3810%" y="549" width="0.2381%" height="15" fill="rgb(222,12,36)" fg:x="975" fg:w="3"/><text x="77.6310%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="77.3810%" y="533" width="0.2381%" height="15" fill="rgb(232,123,44)" fg:x="975" fg:w="3"/><text x="77.6310%" y="543.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="77.3810%" y="517" width="0.2381%" height="15" fill="rgb(234,93,50)" fg:x="975" fg:w="3"/><text x="77.6310%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.6190%" y="597" width="0.0794%" height="15" fill="rgb(210,86,49)" fg:x="978" fg:w="1"/><text x="77.8690%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="77.6190%" y="581" width="0.0794%" height="15" fill="rgb(224,91,54)" fg:x="978" fg:w="1"/><text x="77.8690%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.6190%" y="565" width="0.0794%" height="15" fill="rgb(239,169,9)" fg:x="978" fg:w="1"/><text x="77.8690%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="77.6190%" y="549" width="0.0794%" height="15" fill="rgb(238,29,17)" fg:x="978" fg:w="1"/><text x="77.8690%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.6984%" y="597" width="0.0794%" height="15" fill="rgb(227,160,22)" fg:x="979" fg:w="1"/><text x="77.9484%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.6984%" y="581" width="0.0794%" height="15" fill="rgb(231,129,52)" fg:x="979" fg:w="1"/><text x="77.9484%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.6984%" y="565" width="0.0794%" height="15" fill="rgb(241,184,9)" fg:x="979" fg:w="1"/><text x="77.9484%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7778%" y="501" width="0.0794%" height="15" fill="rgb(217,43,48)" fg:x="980" fg:w="1"/><text x="78.0278%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7778%" y="485" width="0.0794%" height="15" fill="rgb(213,49,1)" fg:x="980" fg:w="1"/><text x="78.0278%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7778%" y="469" width="0.0794%" height="15" fill="rgb(223,79,39)" fg:x="980" fg:w="1"/><text x="78.0278%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7778%" y="453" width="0.0794%" height="15" fill="rgb(228,227,46)" fg:x="980" fg:w="1"/><text x="78.0278%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.7778%" y="437" width="0.0794%" height="15" fill="rgb(245,89,41)" fg:x="980" fg:w="1"/><text x="78.0278%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.7778%" y="421" width="0.0794%" height="15" fill="rgb(253,83,21)" fg:x="980" fg:w="1"/><text x="78.0278%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.7778%" y="405" width="0.0794%" height="15" fill="rgb(229,116,51)" fg:x="980" fg:w="1"/><text x="78.0278%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.7778%" y="389" width="0.0794%" height="15" fill="rgb(246,67,26)" fg:x="980" fg:w="1"/><text x="78.0278%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.7778%" y="373" width="0.0794%" height="15" fill="rgb(250,117,20)" fg:x="980" fg:w="1"/><text x="78.0278%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.7778%" y="357" width="0.0794%" height="15" fill="rgb(207,88,17)" fg:x="980" fg:w="1"/><text x="78.0278%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.7778%" y="341" width="0.0794%" height="15" fill="rgb(212,98,36)" fg:x="980" fg:w="1"/><text x="78.0278%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.7778%" y="325" width="0.0794%" height="15" fill="rgb(221,72,6)" fg:x="980" fg:w="1"/><text x="78.0278%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.7778%" y="309" width="0.0794%" height="15" fill="rgb(235,129,19)" fg:x="980" fg:w="1"/><text x="78.0278%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.7778%" y="293" width="0.0794%" height="15" fill="rgb(237,200,6)" fg:x="980" fg:w="1"/><text x="78.0278%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.7778%" y="277" width="0.0794%" height="15" fill="rgb(239,69,54)" fg:x="980" fg:w="1"/><text x="78.0278%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7778%" y="261" width="0.0794%" height="15" fill="rgb(214,68,45)" fg:x="980" fg:w="1"/><text x="78.0278%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.7778%" y="549" width="0.1587%" height="15" fill="rgb(254,160,8)" fg:x="980" fg:w="2"/><text x="78.0278%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="77.7778%" y="533" width="0.1587%" height="15" fill="rgb(215,226,31)" fg:x="980" fg:w="2"/><text x="78.0278%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.7778%" y="517" width="0.1587%" height="15" fill="rgb(253,6,35)" fg:x="980" fg:w="2"/><text x="78.0278%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8571%" y="501" width="0.0794%" height="15" fill="rgb(219,96,42)" fg:x="981" fg:w="1"/><text x="78.1071%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8571%" y="485" width="0.0794%" height="15" fill="rgb(207,170,13)" fg:x="981" fg:w="1"/><text x="78.1071%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8571%" y="469" width="0.0794%" height="15" fill="rgb(239,101,5)" fg:x="981" fg:w="1"/><text x="78.1071%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8571%" y="453" width="0.0794%" height="15" fill="rgb(228,183,34)" fg:x="981" fg:w="1"/><text x="78.1071%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.8571%" y="437" width="0.0794%" height="15" fill="rgb(205,28,31)" fg:x="981" fg:w="1"/><text x="78.1071%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8571%" y="421" width="0.0794%" height="15" fill="rgb(214,118,50)" fg:x="981" fg:w="1"/><text x="78.1071%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8571%" y="405" width="0.0794%" height="15" fill="rgb(213,108,51)" fg:x="981" fg:w="1"/><text x="78.1071%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8571%" y="389" width="0.0794%" height="15" fill="rgb(238,56,37)" fg:x="981" fg:w="1"/><text x="78.1071%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8571%" y="373" width="0.0794%" height="15" fill="rgb(214,136,28)" fg:x="981" fg:w="1"/><text x="78.1071%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8571%" y="357" width="0.0794%" height="15" fill="rgb(221,201,54)" fg:x="981" fg:w="1"/><text x="78.1071%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.9365%" y="501" width="0.0794%" height="15" fill="rgb(228,216,39)" fg:x="982" fg:w="1"/><text x="78.1865%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.9365%" y="485" width="0.0794%" height="15" fill="rgb(207,229,49)" fg:x="982" fg:w="1"/><text x="78.1865%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.9365%" y="469" width="0.0794%" height="15" fill="rgb(224,23,43)" fg:x="982" fg:w="1"/><text x="78.1865%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.9365%" y="453" width="0.0794%" height="15" fill="rgb(247,97,18)" fg:x="982" fg:w="1"/><text x="78.1865%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.9365%" y="437" width="0.0794%" height="15" fill="rgb(232,53,32)" fg:x="982" fg:w="1"/><text x="78.1865%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.9365%" y="421" width="0.0794%" height="15" fill="rgb(247,38,23)" fg:x="982" fg:w="1"/><text x="78.1865%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.9365%" y="405" width="0.0794%" height="15" fill="rgb(228,101,52)" fg:x="982" fg:w="1"/><text x="78.1865%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.9365%" y="389" width="0.0794%" height="15" fill="rgb(231,45,36)" fg:x="982" fg:w="1"/><text x="78.1865%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.9365%" y="373" width="0.0794%" height="15" fill="rgb(221,183,50)" fg:x="982" fg:w="1"/><text x="78.1865%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.9365%" y="357" width="0.0794%" height="15" fill="rgb(251,132,12)" fg:x="982" fg:w="1"/><text x="78.1865%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.9365%" y="341" width="0.0794%" height="15" fill="rgb(252,50,16)" fg:x="982" fg:w="1"/><text x="78.1865%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.9365%" y="325" width="0.0794%" height="15" fill="rgb(224,60,15)" fg:x="982" fg:w="1"/><text x="78.1865%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.9365%" y="309" width="0.0794%" height="15" fill="rgb(254,2,34)" fg:x="982" fg:w="1"/><text x="78.1865%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.9365%" y="293" width="0.0794%" height="15" fill="rgb(232,154,8)" fg:x="982" fg:w="1"/><text x="78.1865%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.9365%" y="277" width="0.0794%" height="15" fill="rgb(235,190,52)" fg:x="982" fg:w="1"/><text x="78.1865%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.9365%" y="261" width="0.0794%" height="15" fill="rgb(213,218,38)" fg:x="982" fg:w="1"/><text x="78.1865%" y="271.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.87%)</title><rect x="77.2222%" y="629" width="0.8730%" height="15" fill="rgb(237,50,37)" fg:x="973" fg:w="11"/><text x="77.4722%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="77.6190%" y="613" width="0.4762%" height="15" fill="rgb(235,51,35)" fg:x="978" fg:w="6"/><text x="77.8690%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="77.7778%" y="597" width="0.3175%" height="15" fill="rgb(244,40,52)" fg:x="980" fg:w="4"/><text x="78.0278%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="77.7778%" y="581" width="0.3175%" height="15" fill="rgb(217,225,45)" fg:x="980" fg:w="4"/><text x="78.0278%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="77.7778%" y="565" width="0.3175%" height="15" fill="rgb(247,191,36)" fg:x="980" fg:w="4"/><text x="78.0278%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="77.9365%" y="549" width="0.1587%" height="15" fill="rgb(251,144,31)" fg:x="982" fg:w="2"/><text x="78.1865%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="77.9365%" y="533" width="0.1587%" height="15" fill="rgb(227,155,41)" fg:x="982" fg:w="2"/><text x="78.1865%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.9365%" y="517" width="0.1587%" height="15" fill="rgb(236,121,36)" fg:x="982" fg:w="2"/><text x="78.1865%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.0159%" y="501" width="0.0794%" height="15" fill="rgb(221,128,28)" fg:x="983" fg:w="1"/><text x="78.2659%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0159%" y="485" width="0.0794%" height="15" fill="rgb(249,67,50)" fg:x="983" fg:w="1"/><text x="78.2659%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.0159%" y="469" width="0.0794%" height="15" fill="rgb(241,126,38)" fg:x="983" fg:w="1"/><text x="78.2659%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0159%" y="453" width="0.0794%" height="15" fill="rgb(239,33,14)" fg:x="983" fg:w="1"/><text x="78.2659%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.0159%" y="437" width="0.0794%" height="15" fill="rgb(207,221,54)" fg:x="983" fg:w="1"/><text x="78.2659%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0159%" y="421" width="0.0794%" height="15" fill="rgb(242,138,43)" fg:x="983" fg:w="1"/><text x="78.2659%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.0159%" y="405" width="0.0794%" height="15" fill="rgb(231,118,19)" fg:x="983" fg:w="1"/><text x="78.2659%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0159%" y="389" width="0.0794%" height="15" fill="rgb(214,128,54)" fg:x="983" fg:w="1"/><text x="78.2659%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.0159%" y="373" width="0.0794%" height="15" fill="rgb(236,136,6)" fg:x="983" fg:w="1"/><text x="78.2659%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0952%" y="517" width="0.0794%" height="15" fill="rgb(247,30,38)" fg:x="984" fg:w="1"/><text x="78.3452%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0952%" y="501" width="0.0794%" height="15" fill="rgb(249,189,40)" fg:x="984" fg:w="1"/><text x="78.3452%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0952%" y="485" width="0.0794%" height="15" fill="rgb(247,179,7)" fg:x="984" fg:w="1"/><text x="78.3452%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="78.0952%" y="629" width="0.1587%" height="15" fill="rgb(239,46,52)" fg:x="984" fg:w="2"/><text x="78.3452%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="78.0952%" y="613" width="0.1587%" height="15" fill="rgb(225,28,52)" fg:x="984" fg:w="2"/><text x="78.3452%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="78.0952%" y="597" width="0.1587%" height="15" fill="rgb(217,208,44)" fg:x="984" fg:w="2"/><text x="78.3452%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="78.0952%" y="581" width="0.1587%" height="15" fill="rgb(224,11,34)" fg:x="984" fg:w="2"/><text x="78.3452%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="78.0952%" y="565" width="0.1587%" height="15" fill="rgb(205,134,17)" fg:x="984" fg:w="2"/><text x="78.3452%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="78.0952%" y="549" width="0.1587%" height="15" fill="rgb(237,125,9)" fg:x="984" fg:w="2"/><text x="78.3452%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.0952%" y="533" width="0.1587%" height="15" fill="rgb(208,139,47)" fg:x="984" fg:w="2"/><text x="78.3452%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="78.1746%" y="517" width="0.0794%" height="15" fill="rgb(242,5,5)" fg:x="985" fg:w="1"/><text x="78.4246%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.1746%" y="501" width="0.0794%" height="15" fill="rgb(218,78,2)" fg:x="985" fg:w="1"/><text x="78.4246%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1746%" y="485" width="0.0794%" height="15" fill="rgb(217,75,16)" fg:x="985" fg:w="1"/><text x="78.4246%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1746%" y="469" width="0.0794%" height="15" fill="rgb(212,56,17)" fg:x="985" fg:w="1"/><text x="78.4246%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1746%" y="453" width="0.0794%" height="15" fill="rgb(228,61,29)" fg:x="985" fg:w="1"/><text x="78.4246%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1746%" y="437" width="0.0794%" height="15" fill="rgb(247,202,38)" fg:x="985" fg:w="1"/><text x="78.4246%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1746%" y="421" width="0.0794%" height="15" fill="rgb(211,216,43)" fg:x="985" fg:w="1"/><text x="78.4246%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1746%" y="405" width="0.0794%" height="15" fill="rgb(220,7,49)" fg:x="985" fg:w="1"/><text x="78.4246%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.2540%" y="549" width="0.0794%" height="15" fill="rgb(219,158,7)" fg:x="986" fg:w="1"/><text x="78.5040%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2540%" y="533" width="0.0794%" height="15" fill="rgb(206,127,9)" fg:x="986" fg:w="1"/><text x="78.5040%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2540%" y="517" width="0.0794%" height="15" fill="rgb(206,103,43)" fg:x="986" fg:w="1"/><text x="78.5040%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2540%" y="501" width="0.0794%" height="15" fill="rgb(240,108,41)" fg:x="986" fg:w="1"/><text x="78.5040%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2540%" y="485" width="0.0794%" height="15" fill="rgb(252,212,6)" fg:x="986" fg:w="1"/><text x="78.5040%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2540%" y="469" width="0.0794%" height="15" fill="rgb(248,105,31)" fg:x="986" fg:w="1"/><text x="78.5040%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.2540%" y="453" width="0.0794%" height="15" fill="rgb(241,123,4)" fg:x="986" fg:w="1"/><text x="78.5040%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2540%" y="437" width="0.0794%" height="15" fill="rgb(223,74,37)" fg:x="986" fg:w="1"/><text x="78.5040%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2540%" y="421" width="0.0794%" height="15" fill="rgb(251,219,28)" fg:x="986" fg:w="1"/><text x="78.5040%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2540%" y="405" width="0.0794%" height="15" fill="rgb(218,36,31)" fg:x="986" fg:w="1"/><text x="78.5040%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2540%" y="389" width="0.0794%" height="15" fill="rgb(229,40,15)" fg:x="986" fg:w="1"/><text x="78.5040%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2540%" y="373" width="0.0794%" height="15" fill="rgb(208,138,37)" fg:x="986" fg:w="1"/><text x="78.5040%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.2540%" y="357" width="0.0794%" height="15" fill="rgb(208,40,52)" fg:x="986" fg:w="1"/><text x="78.5040%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2540%" y="341" width="0.0794%" height="15" fill="rgb(246,181,48)" fg:x="986" fg:w="1"/><text x="78.5040%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="78.2540%" y="613" width="0.1587%" height="15" fill="rgb(253,178,36)" fg:x="986" fg:w="2"/><text x="78.5040%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="78.2540%" y="597" width="0.1587%" height="15" fill="rgb(210,170,6)" fg:x="986" fg:w="2"/><text x="78.5040%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="78.2540%" y="581" width="0.1587%" height="15" fill="rgb(243,62,22)" fg:x="986" fg:w="2"/><text x="78.5040%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="78.2540%" y="565" width="0.1587%" height="15" fill="rgb(213,145,26)" fg:x="986" fg:w="2"/><text x="78.5040%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.3333%" y="549" width="0.0794%" height="15" fill="rgb(237,177,23)" fg:x="987" fg:w="1"/><text x="78.5833%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="78.3333%" y="533" width="0.0794%" height="15" fill="rgb(252,5,24)" fg:x="987" fg:w="1"/><text x="78.5833%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.3333%" y="517" width="0.0794%" height="15" fill="rgb(230,108,54)" fg:x="987" fg:w="1"/><text x="78.5833%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4127%" y="517" width="0.0794%" height="15" fill="rgb(252,192,41)" fg:x="988" fg:w="1"/><text x="78.6627%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4127%" y="501" width="0.0794%" height="15" fill="rgb(218,125,20)" fg:x="988" fg:w="1"/><text x="78.6627%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4127%" y="485" width="0.0794%" height="15" fill="rgb(230,223,15)" fg:x="988" fg:w="1"/><text x="78.6627%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4127%" y="469" width="0.0794%" height="15" fill="rgb(239,99,47)" fg:x="988" fg:w="1"/><text x="78.6627%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4127%" y="453" width="0.0794%" height="15" fill="rgb(222,214,23)" fg:x="988" fg:w="1"/><text x="78.6627%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4127%" y="437" width="0.0794%" height="15" fill="rgb(250,98,43)" fg:x="988" fg:w="1"/><text x="78.6627%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.4127%" y="421" width="0.0794%" height="15" fill="rgb(226,140,11)" fg:x="988" fg:w="1"/><text x="78.6627%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.4127%" y="405" width="0.0794%" height="15" fill="rgb(239,2,22)" fg:x="988" fg:w="1"/><text x="78.6627%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.4127%" y="389" width="0.0794%" height="15" fill="rgb(209,106,26)" fg:x="988" fg:w="1"/><text x="78.6627%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4127%" y="373" width="0.0794%" height="15" fill="rgb(209,135,11)" fg:x="988" fg:w="1"/><text x="78.6627%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4127%" y="357" width="0.0794%" height="15" fill="rgb(241,58,6)" fg:x="988" fg:w="1"/><text x="78.6627%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.4127%" y="341" width="0.0794%" height="15" fill="rgb(214,78,1)" fg:x="988" fg:w="1"/><text x="78.6627%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.4127%" y="325" width="0.0794%" height="15" fill="rgb(229,135,33)" fg:x="988" fg:w="1"/><text x="78.6627%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.4127%" y="309" width="0.0794%" height="15" fill="rgb(245,87,50)" fg:x="988" fg:w="1"/><text x="78.6627%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.4127%" y="293" width="0.0794%" height="15" fill="rgb(222,222,8)" fg:x="988" fg:w="1"/><text x="78.6627%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4127%" y="277" width="0.0794%" height="15" fill="rgb(214,97,50)" fg:x="988" fg:w="1"/><text x="78.6627%" y="287.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (45 samples, 3.57%)</title><rect x="75.0000%" y="645" width="3.5714%" height="15" fill="rgb(244,161,51)" fg:x="945" fg:w="45"/><text x="75.2500%" y="655.50">plug..</text></g><g><title>plugins_core::build::Build::occupying (4 samples, 0.32%)</title><rect x="78.2540%" y="629" width="0.3175%" height="15" fill="rgb(225,17,4)" fg:x="986" fg:w="4"/><text x="78.5040%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (2 samples, 0.16%)</title><rect x="78.4127%" y="613" width="0.1587%" height="15" fill="rgb(238,10,13)" fg:x="988" fg:w="2"/><text x="78.6627%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="78.4127%" y="597" width="0.1587%" height="15" fill="rgb(239,169,14)" fg:x="988" fg:w="2"/><text x="78.6627%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="78.4127%" y="581" width="0.1587%" height="15" fill="rgb(213,105,25)" fg:x="988" fg:w="2"/><text x="78.6627%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.4127%" y="565" width="0.1587%" height="15" fill="rgb(233,4,17)" fg:x="988" fg:w="2"/><text x="78.6627%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="78.4127%" y="549" width="0.1587%" height="15" fill="rgb(212,5,35)" fg:x="988" fg:w="2"/><text x="78.6627%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.4127%" y="533" width="0.1587%" height="15" fill="rgb(216,3,14)" fg:x="988" fg:w="2"/><text x="78.6627%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="78.4921%" y="517" width="0.0794%" height="15" fill="rgb(240,105,33)" fg:x="989" fg:w="1"/><text x="78.7421%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.4921%" y="501" width="0.0794%" height="15" fill="rgb(216,73,0)" fg:x="989" fg:w="1"/><text x="78.7421%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.4921%" y="485" width="0.0794%" height="15" fill="rgb(217,153,48)" fg:x="989" fg:w="1"/><text x="78.7421%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.4921%" y="469" width="0.0794%" height="15" fill="rgb(218,180,8)" fg:x="989" fg:w="1"/><text x="78.7421%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.4921%" y="453" width="0.0794%" height="15" fill="rgb(252,168,2)" fg:x="989" fg:w="1"/><text x="78.7421%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="78.5714%" y="597" width="0.0794%" height="15" fill="rgb(224,116,33)" fg:x="990" fg:w="1"/><text x="78.8214%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.5714%" y="581" width="0.0794%" height="15" fill="rgb(229,205,17)" fg:x="990" fg:w="1"/><text x="78.8214%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.5714%" y="565" width="0.0794%" height="15" fill="rgb(234,1,41)" fg:x="990" fg:w="1"/><text x="78.8214%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.5714%" y="549" width="0.0794%" height="15" fill="rgb(244,185,8)" fg:x="990" fg:w="1"/><text x="78.8214%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5714%" y="533" width="0.0794%" height="15" fill="rgb(248,51,21)" fg:x="990" fg:w="1"/><text x="78.8214%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5714%" y="517" width="0.0794%" height="15" fill="rgb(248,157,31)" fg:x="990" fg:w="1"/><text x="78.8214%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5714%" y="501" width="0.0794%" height="15" fill="rgb(210,34,47)" fg:x="990" fg:w="1"/><text x="78.8214%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.5714%" y="485" width="0.0794%" height="15" fill="rgb(227,139,53)" fg:x="990" fg:w="1"/><text x="78.8214%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5714%" y="469" width="0.0794%" height="15" fill="rgb(232,211,37)" fg:x="990" fg:w="1"/><text x="78.8214%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5714%" y="453" width="0.0794%" height="15" fill="rgb(236,133,10)" fg:x="990" fg:w="1"/><text x="78.8214%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5714%" y="437" width="0.0794%" height="15" fill="rgb(243,202,25)" fg:x="990" fg:w="1"/><text x="78.8214%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.6508%" y="549" width="0.0794%" height="15" fill="rgb(224,59,9)" fg:x="991" fg:w="1"/><text x="78.9008%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.6508%" y="533" width="0.0794%" height="15" fill="rgb(206,146,16)" fg:x="991" fg:w="1"/><text x="78.9008%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6508%" y="517" width="0.0794%" height="15" fill="rgb(220,47,2)" fg:x="991" fg:w="1"/><text x="78.9008%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6508%" y="501" width="0.0794%" height="15" fill="rgb(225,124,51)" fg:x="991" fg:w="1"/><text x="78.9008%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6508%" y="485" width="0.0794%" height="15" fill="rgb(241,220,50)" fg:x="991" fg:w="1"/><text x="78.9008%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6508%" y="469" width="0.0794%" height="15" fill="rgb(232,168,5)" fg:x="991" fg:w="1"/><text x="78.9008%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.6508%" y="453" width="0.0794%" height="15" fill="rgb(243,90,22)" fg:x="991" fg:w="1"/><text x="78.9008%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6508%" y="437" width="0.0794%" height="15" fill="rgb(223,153,32)" fg:x="991" fg:w="1"/><text x="78.9008%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6508%" y="421" width="0.0794%" height="15" fill="rgb(243,124,20)" fg:x="991" fg:w="1"/><text x="78.9008%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6508%" y="405" width="0.0794%" height="15" fill="rgb(246,168,39)" fg:x="991" fg:w="1"/><text x="78.9008%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6508%" y="389" width="0.0794%" height="15" fill="rgb(222,165,54)" fg:x="991" fg:w="1"/><text x="78.9008%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6508%" y="373" width="0.0794%" height="15" fill="rgb(251,142,27)" fg:x="991" fg:w="1"/><text x="78.9008%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.6508%" y="357" width="0.0794%" height="15" fill="rgb(207,168,50)" fg:x="991" fg:w="1"/><text x="78.9008%" y="367.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (75 samples, 5.95%)</title><rect x="72.8571%" y="661" width="5.9524%" height="15" fill="rgb(250,139,25)" fg:x="918" fg:w="75"/><text x="73.1071%" y="671.50">&lt;tests::..</text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="78.5714%" y="645" width="0.2381%" height="15" fill="rgb(214,194,48)" fg:x="990" fg:w="3"/><text x="78.8214%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="78.5714%" y="629" width="0.2381%" height="15" fill="rgb(227,138,47)" fg:x="990" fg:w="3"/><text x="78.8214%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="78.5714%" y="613" width="0.2381%" height="15" fill="rgb(250,162,5)" fg:x="990" fg:w="3"/><text x="78.8214%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="78.6508%" y="597" width="0.1587%" height="15" fill="rgb(229,74,25)" fg:x="991" fg:w="2"/><text x="78.9008%" y="607.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="78.6508%" y="581" width="0.1587%" height="15" fill="rgb(221,124,34)" fg:x="991" fg:w="2"/><text x="78.9008%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="78.6508%" y="565" width="0.1587%" height="15" fill="rgb(225,94,25)" fg:x="991" fg:w="2"/><text x="78.9008%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.7302%" y="549" width="0.0794%" height="15" fill="rgb(210,100,12)" fg:x="992" fg:w="1"/><text x="78.9802%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.7302%" y="533" width="0.0794%" height="15" fill="rgb(206,62,48)" fg:x="992" fg:w="1"/><text x="78.9802%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.7302%" y="517" width="0.0794%" height="15" fill="rgb(222,181,9)" fg:x="992" fg:w="1"/><text x="78.9802%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="78.8889%" y="581" width="0.0794%" height="15" fill="rgb(248,42,38)" fg:x="994" fg:w="1"/><text x="79.1389%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.8889%" y="565" width="0.0794%" height="15" fill="rgb(213,40,6)" fg:x="994" fg:w="1"/><text x="79.1389%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="78.8889%" y="549" width="0.0794%" height="15" fill="rgb(211,108,15)" fg:x="994" fg:w="1"/><text x="79.1389%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="78.8889%" y="533" width="0.0794%" height="15" fill="rgb(249,62,9)" fg:x="994" fg:w="1"/><text x="79.1389%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="78.8889%" y="517" width="0.0794%" height="15" fill="rgb(233,26,54)" fg:x="994" fg:w="1"/><text x="79.1389%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (2 samples, 0.16%)</title><rect x="78.8889%" y="645" width="0.1587%" height="15" fill="rgb(210,175,26)" fg:x="994" fg:w="2"/><text x="79.1389%" y="655.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="78.8889%" y="629" width="0.1587%" height="15" fill="rgb(210,43,33)" fg:x="994" fg:w="2"/><text x="79.1389%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="78.8889%" y="613" width="0.1587%" height="15" fill="rgb(224,46,17)" fg:x="994" fg:w="2"/><text x="79.1389%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.8889%" y="597" width="0.1587%" height="15" fill="rgb(254,24,38)" fg:x="994" fg:w="2"/><text x="79.1389%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.9683%" y="581" width="0.0794%" height="15" fill="rgb(248,32,0)" fg:x="995" fg:w="1"/><text x="79.2183%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9683%" y="565" width="0.0794%" height="15" fill="rgb(224,37,41)" fg:x="995" fg:w="1"/><text x="79.2183%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="78.9683%" y="549" width="0.0794%" height="15" fill="rgb(252,70,22)" fg:x="995" fg:w="1"/><text x="79.2183%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="78.9683%" y="533" width="0.0794%" height="15" fill="rgb(241,123,50)" fg:x="995" fg:w="1"/><text x="79.2183%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="78.9683%" y="517" width="0.0794%" height="15" fill="rgb(246,138,33)" fg:x="995" fg:w="1"/><text x="79.2183%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.9683%" y="501" width="0.0794%" height="15" fill="rgb(218,39,32)" fg:x="995" fg:w="1"/><text x="79.2183%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9683%" y="485" width="0.0794%" height="15" fill="rgb(241,229,10)" fg:x="995" fg:w="1"/><text x="79.2183%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9683%" y="469" width="0.0794%" height="15" fill="rgb(212,160,10)" fg:x="995" fg:w="1"/><text x="79.2183%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.0476%" y="629" width="0.0794%" height="15" fill="rgb(227,48,51)" fg:x="996" fg:w="1"/><text x="79.2976%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.0476%" y="613" width="0.0794%" height="15" fill="rgb(238,159,21)" fg:x="996" fg:w="1"/><text x="79.2976%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.0476%" y="597" width="0.0794%" height="15" fill="rgb(216,1,10)" fg:x="996" fg:w="1"/><text x="79.2976%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.0476%" y="581" width="0.0794%" height="15" fill="rgb(209,228,25)" fg:x="996" fg:w="1"/><text x="79.2976%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.2063%" y="597" width="0.0794%" height="15" fill="rgb(234,160,10)" fg:x="998" fg:w="1"/><text x="79.4563%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.2063%" y="581" width="0.0794%" height="15" fill="rgb(212,66,25)" fg:x="998" fg:w="1"/><text x="79.4563%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.2063%" y="565" width="0.0794%" height="15" fill="rgb(254,121,18)" fg:x="998" fg:w="1"/><text x="79.4563%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.2063%" y="549" width="0.0794%" height="15" fill="rgb(219,127,1)" fg:x="998" fg:w="1"/><text x="79.4563%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.2063%" y="533" width="0.0794%" height="15" fill="rgb(219,224,42)" fg:x="998" fg:w="1"/><text x="79.4563%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.2063%" y="517" width="0.0794%" height="15" fill="rgb(253,130,22)" fg:x="998" fg:w="1"/><text x="79.4563%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.2063%" y="501" width="0.0794%" height="15" fill="rgb(253,39,28)" fg:x="998" fg:w="1"/><text x="79.4563%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.2063%" y="485" width="0.0794%" height="15" fill="rgb(231,126,37)" fg:x="998" fg:w="1"/><text x="79.4563%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.2063%" y="469" width="0.0794%" height="15" fill="rgb(251,145,14)" fg:x="998" fg:w="1"/><text x="79.4563%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.2063%" y="453" width="0.0794%" height="15" fill="rgb(229,164,30)" fg:x="998" fg:w="1"/><text x="79.4563%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.2063%" y="437" width="0.0794%" height="15" fill="rgb(233,227,54)" fg:x="998" fg:w="1"/><text x="79.4563%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="79.2063%" y="421" width="0.0794%" height="15" fill="rgb(240,94,22)" fg:x="998" fg:w="1"/><text x="79.4563%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.2063%" y="405" width="0.0794%" height="15" fill="rgb(217,56,16)" fg:x="998" fg:w="1"/><text x="79.4563%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.2857%" y="581" width="0.0794%" height="15" fill="rgb(229,133,38)" fg:x="999" fg:w="1"/><text x="79.5357%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.2857%" y="565" width="0.0794%" height="15" fill="rgb(225,139,35)" fg:x="999" fg:w="1"/><text x="79.5357%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2857%" y="549" width="0.0794%" height="15" fill="rgb(223,100,16)" fg:x="999" fg:w="1"/><text x="79.5357%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.4444%" y="549" width="0.0794%" height="15" fill="rgb(207,43,50)" fg:x="1001" fg:w="1"/><text x="79.6944%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.4444%" y="533" width="0.0794%" height="15" fill="rgb(237,221,9)" fg:x="1001" fg:w="1"/><text x="79.6944%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.5238%" y="533" width="0.0794%" height="15" fill="rgb(236,134,24)" fg:x="1002" fg:w="1"/><text x="79.7738%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6032%" y="533" width="0.0794%" height="15" fill="rgb(222,173,4)" fg:x="1003" fg:w="1"/><text x="79.8532%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6032%" y="517" width="0.0794%" height="15" fill="rgb(234,144,52)" fg:x="1003" fg:w="1"/><text x="79.8532%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6032%" y="501" width="0.0794%" height="15" fill="rgb(223,41,7)" fg:x="1003" fg:w="1"/><text x="79.8532%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.6032%" y="485" width="0.0794%" height="15" fill="rgb(226,143,9)" fg:x="1003" fg:w="1"/><text x="79.8532%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.5238%" y="549" width="0.2381%" height="15" fill="rgb(234,43,37)" fg:x="1002" fg:w="3"/><text x="79.7738%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.6825%" y="533" width="0.0794%" height="15" fill="rgb(224,188,11)" fg:x="1004" fg:w="1"/><text x="79.9325%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="79.4444%" y="565" width="0.3968%" height="15" fill="rgb(233,113,28)" fg:x="1001" fg:w="5"/><text x="79.6944%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.7619%" y="549" width="0.0794%" height="15" fill="rgb(215,16,1)" fg:x="1005" fg:w="1"/><text x="80.0119%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.79%)</title><rect x="79.2857%" y="597" width="0.7937%" height="15" fill="rgb(238,74,38)" fg:x="999" fg:w="10"/><text x="79.5357%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.71%)</title><rect x="79.3651%" y="581" width="0.7143%" height="15" fill="rgb(221,66,35)" fg:x="1000" fg:w="9"/><text x="79.6151%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.8413%" y="565" width="0.2381%" height="15" fill="rgb(251,225,2)" fg:x="1006" fg:w="3"/><text x="80.0913%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.9206%" y="549" width="0.1587%" height="15" fill="rgb(240,169,18)" fg:x="1007" fg:w="2"/><text x="80.1706%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.0000%" y="533" width="0.0794%" height="15" fill="rgb(243,130,50)" fg:x="1008" fg:w="1"/><text x="80.2500%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0794%" y="565" width="0.0794%" height="15" fill="rgb(228,75,13)" fg:x="1009" fg:w="1"/><text x="80.3294%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.1587%" y="549" width="0.0794%" height="15" fill="rgb(252,95,35)" fg:x="1010" fg:w="1"/><text x="80.4087%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1587%" y="533" width="0.0794%" height="15" fill="rgb(222,180,54)" fg:x="1010" fg:w="1"/><text x="80.4087%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.2381%" y="517" width="0.0794%" height="15" fill="rgb(250,110,34)" fg:x="1011" fg:w="1"/><text x="80.4881%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="80.0794%" y="597" width="0.3175%" height="15" fill="rgb(208,100,21)" fg:x="1009" fg:w="4"/><text x="80.3294%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="80.0794%" y="581" width="0.3175%" height="15" fill="rgb(209,123,47)" fg:x="1009" fg:w="4"/><text x="80.3294%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.1587%" y="565" width="0.2381%" height="15" fill="rgb(237,147,9)" fg:x="1010" fg:w="3"/><text x="80.4087%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.2381%" y="549" width="0.1587%" height="15" fill="rgb(228,206,23)" fg:x="1011" fg:w="2"/><text x="80.4881%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.2381%" y="533" width="0.1587%" height="15" fill="rgb(217,174,46)" fg:x="1011" fg:w="2"/><text x="80.4881%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.3175%" y="517" width="0.0794%" height="15" fill="rgb(231,126,21)" fg:x="1012" fg:w="1"/><text x="80.5675%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.3175%" y="501" width="0.0794%" height="15" fill="rgb(245,26,1)" fg:x="1012" fg:w="1"/><text x="80.5675%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3968%" y="501" width="0.0794%" height="15" fill="rgb(224,138,39)" fg:x="1013" fg:w="1"/><text x="80.6468%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.4762%" y="501" width="0.0794%" height="15" fill="rgb(208,97,3)" fg:x="1014" fg:w="1"/><text x="80.7262%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5556%" y="485" width="0.0794%" height="15" fill="rgb(222,77,29)" fg:x="1015" fg:w="1"/><text x="80.8056%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="80.3968%" y="565" width="0.3175%" height="15" fill="rgb(243,188,36)" fg:x="1013" fg:w="4"/><text x="80.6468%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="80.3968%" y="549" width="0.3175%" height="15" fill="rgb(218,214,3)" fg:x="1013" fg:w="4"/><text x="80.6468%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="80.3968%" y="533" width="0.3175%" height="15" fill="rgb(211,183,45)" fg:x="1013" fg:w="4"/><text x="80.6468%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="80.3968%" y="517" width="0.3175%" height="15" fill="rgb(230,218,25)" fg:x="1013" fg:w="4"/><text x="80.6468%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.5556%" y="501" width="0.1587%" height="15" fill="rgb(233,86,6)" fg:x="1015" fg:w="2"/><text x="80.8056%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.6349%" y="485" width="0.0794%" height="15" fill="rgb(220,59,24)" fg:x="1016" fg:w="1"/><text x="80.8849%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.6349%" y="469" width="0.0794%" height="15" fill="rgb(227,60,1)" fg:x="1016" fg:w="1"/><text x="80.8849%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7143%" y="549" width="0.0794%" height="15" fill="rgb(216,212,54)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7143%" y="533" width="0.0794%" height="15" fill="rgb(227,81,54)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7143%" y="517" width="0.0794%" height="15" fill="rgb(206,204,43)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7143%" y="501" width="0.0794%" height="15" fill="rgb(219,29,26)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7143%" y="485" width="0.0794%" height="15" fill="rgb(252,40,36)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7143%" y="469" width="0.0794%" height="15" fill="rgb(224,205,39)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.7143%" y="453" width="0.0794%" height="15" fill="rgb(222,13,21)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7937%" y="517" width="0.0794%" height="15" fill="rgb(243,139,6)" fg:x="1018" fg:w="1"/><text x="81.0437%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7937%" y="501" width="0.0794%" height="15" fill="rgb(237,101,11)" fg:x="1018" fg:w="1"/><text x="81.0437%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7937%" y="485" width="0.0794%" height="15" fill="rgb(254,49,28)" fg:x="1018" fg:w="1"/><text x="81.0437%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7937%" y="469" width="0.0794%" height="15" fill="rgb(223,41,21)" fg:x="1018" fg:w="1"/><text x="81.0437%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="80.7937%" y="453" width="0.0794%" height="15" fill="rgb(225,103,29)" fg:x="1018" fg:w="1"/><text x="81.0437%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.7937%" y="437" width="0.0794%" height="15" fill="rgb(244,82,43)" fg:x="1018" fg:w="1"/><text x="81.0437%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (7 samples, 0.56%)</title><rect x="80.3968%" y="581" width="0.5556%" height="15" fill="rgb(217,39,3)" fg:x="1013" fg:w="7"/><text x="80.6468%" y="591.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="80.7143%" y="565" width="0.2381%" height="15" fill="rgb(239,128,25)" fg:x="1017" fg:w="3"/><text x="80.9643%" y="575.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="80.7937%" y="549" width="0.1587%" height="15" fill="rgb(210,192,37)" fg:x="1018" fg:w="2"/><text x="81.0437%" y="559.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="80.7937%" y="533" width="0.1587%" height="15" fill="rgb(219,98,18)" fg:x="1018" fg:w="2"/><text x="81.0437%" y="543.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="80.8730%" y="517" width="0.0794%" height="15" fill="rgb(224,228,38)" fg:x="1019" fg:w="1"/><text x="81.1230%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="80.8730%" y="501" width="0.0794%" height="15" fill="rgb(241,129,43)" fg:x="1019" fg:w="1"/><text x="81.1230%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.8730%" y="485" width="0.0794%" height="15" fill="rgb(223,8,51)" fg:x="1019" fg:w="1"/><text x="81.1230%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8730%" y="469" width="0.0794%" height="15" fill="rgb(233,76,24)" fg:x="1019" fg:w="1"/><text x="81.1230%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="80.9524%" y="565" width="0.0794%" height="15" fill="rgb(219,115,10)" fg:x="1020" fg:w="1"/><text x="81.2024%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.1111%" y="501" width="0.0794%" height="15" fill="rgb(222,137,12)" fg:x="1022" fg:w="1"/><text x="81.3611%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.1111%" y="485" width="0.0794%" height="15" fill="rgb(216,192,16)" fg:x="1022" fg:w="1"/><text x="81.3611%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.1111%" y="469" width="0.0794%" height="15" fill="rgb(247,6,27)" fg:x="1022" fg:w="1"/><text x="81.3611%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1905%" y="469" width="0.0794%" height="15" fill="rgb(254,39,44)" fg:x="1023" fg:w="1"/><text x="81.4405%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1905%" y="453" width="0.0794%" height="15" fill="rgb(251,116,35)" fg:x="1023" fg:w="1"/><text x="81.4405%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="81.1905%" y="437" width="0.0794%" height="15" fill="rgb(208,61,44)" fg:x="1023" fg:w="1"/><text x="81.4405%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="81.1905%" y="421" width="0.0794%" height="15" fill="rgb(250,34,5)" fg:x="1023" fg:w="1"/><text x="81.4405%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.2698%" y="421" width="0.1587%" height="15" fill="rgb(241,40,15)" fg:x="1024" fg:w="2"/><text x="81.5198%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.2698%" y="405" width="0.1587%" height="15" fill="rgb(229,182,2)" fg:x="1024" fg:w="2"/><text x="81.5198%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.2698%" y="389" width="0.1587%" height="15" fill="rgb(244,148,52)" fg:x="1024" fg:w="2"/><text x="81.5198%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.2698%" y="373" width="0.1587%" height="15" fill="rgb(225,211,4)" fg:x="1024" fg:w="2"/><text x="81.5198%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.2698%" y="357" width="0.1587%" height="15" fill="rgb(208,222,47)" fg:x="1024" fg:w="2"/><text x="81.5198%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="81.2698%" y="341" width="0.1587%" height="15" fill="rgb(233,162,0)" fg:x="1024" fg:w="2"/><text x="81.5198%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="81.1111%" y="533" width="0.3968%" height="15" fill="rgb(241,54,13)" fg:x="1022" fg:w="5"/><text x="81.3611%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="81.1111%" y="517" width="0.3968%" height="15" fill="rgb(213,89,18)" fg:x="1022" fg:w="5"/><text x="81.3611%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="81.1905%" y="501" width="0.3175%" height="15" fill="rgb(215,170,37)" fg:x="1023" fg:w="4"/><text x="81.4405%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="81.1905%" y="485" width="0.3175%" height="15" fill="rgb(216,133,15)" fg:x="1023" fg:w="4"/><text x="81.4405%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="81.2698%" y="469" width="0.2381%" height="15" fill="rgb(230,42,19)" fg:x="1024" fg:w="3"/><text x="81.5198%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="81.2698%" y="453" width="0.2381%" height="15" fill="rgb(221,103,41)" fg:x="1024" fg:w="3"/><text x="81.5198%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="81.2698%" y="437" width="0.2381%" height="15" fill="rgb(220,142,31)" fg:x="1024" fg:w="3"/><text x="81.5198%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4286%" y="421" width="0.0794%" height="15" fill="rgb(239,218,4)" fg:x="1026" fg:w="1"/><text x="81.6786%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.63%)</title><rect x="80.9524%" y="581" width="0.6349%" height="15" fill="rgb(232,16,4)" fg:x="1020" fg:w="8"/><text x="81.2024%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="81.0317%" y="565" width="0.5556%" height="15" fill="rgb(226,213,25)" fg:x="1021" fg:w="7"/><text x="81.2817%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="81.1111%" y="549" width="0.4762%" height="15" fill="rgb(235,135,19)" fg:x="1022" fg:w="6"/><text x="81.3611%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5079%" y="533" width="0.0794%" height="15" fill="rgb(240,107,29)" fg:x="1027" fg:w="1"/><text x="81.7579%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.7460%" y="405" width="0.0794%" height="15" fill="rgb(206,164,44)" fg:x="1030" fg:w="1"/><text x="81.9960%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="81.7460%" y="389" width="0.0794%" height="15" fill="rgb(210,23,48)" fg:x="1030" fg:w="1"/><text x="81.9960%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="81.7460%" y="437" width="0.1587%" height="15" fill="rgb(212,138,25)" fg:x="1030" fg:w="2"/><text x="81.9960%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="81.7460%" y="421" width="0.1587%" height="15" fill="rgb(224,152,3)" fg:x="1030" fg:w="2"/><text x="81.9960%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8254%" y="405" width="0.0794%" height="15" fill="rgb(214,38,23)" fg:x="1031" fg:w="1"/><text x="82.0754%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8254%" y="389" width="0.0794%" height="15" fill="rgb(215,161,10)" fg:x="1031" fg:w="1"/><text x="82.0754%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8254%" y="373" width="0.0794%" height="15" fill="rgb(240,185,7)" fg:x="1031" fg:w="1"/><text x="82.0754%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="81.9841%" y="389" width="0.1587%" height="15" fill="rgb(244,104,25)" fg:x="1033" fg:w="2"/><text x="82.2341%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="82.0635%" y="373" width="0.0794%" height="15" fill="rgb(242,140,44)" fg:x="1034" fg:w="1"/><text x="82.3135%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="82.0635%" y="357" width="0.0794%" height="15" fill="rgb(245,30,19)" fg:x="1034" fg:w="1"/><text x="82.3135%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="82.0635%" y="341" width="0.0794%" height="15" fill="rgb(219,208,35)" fg:x="1034" fg:w="1"/><text x="82.3135%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.0635%" y="325" width="0.0794%" height="15" fill="rgb(235,200,7)" fg:x="1034" fg:w="1"/><text x="82.3135%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="81.9841%" y="421" width="0.2381%" height="15" fill="rgb(220,193,10)" fg:x="1033" fg:w="3"/><text x="82.2341%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="81.9841%" y="405" width="0.2381%" height="15" fill="rgb(212,216,39)" fg:x="1033" fg:w="3"/><text x="82.2341%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1429%" y="389" width="0.0794%" height="15" fill="rgb(212,134,19)" fg:x="1035" fg:w="1"/><text x="82.3929%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1429%" y="373" width="0.0794%" height="15" fill="rgb(230,57,24)" fg:x="1035" fg:w="1"/><text x="82.3929%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1429%" y="357" width="0.0794%" height="15" fill="rgb(238,209,37)" fg:x="1035" fg:w="1"/><text x="82.3929%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.63%)</title><rect x="81.7460%" y="453" width="0.6349%" height="15" fill="rgb(247,11,45)" fg:x="1030" fg:w="8"/><text x="81.9960%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="81.9048%" y="437" width="0.4762%" height="15" fill="rgb(222,126,6)" fg:x="1032" fg:w="6"/><text x="82.1548%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.2222%" y="421" width="0.1587%" height="15" fill="rgb(245,77,24)" fg:x="1036" fg:w="2"/><text x="82.4722%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.2222%" y="405" width="0.1587%" height="15" fill="rgb(227,14,24)" fg:x="1036" fg:w="2"/><text x="82.4722%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3016%" y="389" width="0.0794%" height="15" fill="rgb(211,112,42)" fg:x="1037" fg:w="1"/><text x="82.5516%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.79%)</title><rect x="81.6667%" y="485" width="0.7937%" height="15" fill="rgb(230,103,42)" fg:x="1029" fg:w="10"/><text x="81.9167%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="81.7460%" y="469" width="0.7143%" height="15" fill="rgb(228,125,42)" fg:x="1030" fg:w="9"/><text x="81.9960%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.3810%" y="453" width="0.0794%" height="15" fill="rgb(243,33,6)" fg:x="1038" fg:w="1"/><text x="82.6310%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="82.3810%" y="437" width="0.0794%" height="15" fill="rgb(231,2,40)" fg:x="1038" fg:w="1"/><text x="82.6310%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="82.4603%" y="469" width="0.1587%" height="15" fill="rgb(224,200,53)" fg:x="1039" fg:w="2"/><text x="82.7103%" y="479.50"></text></g><g><title>engine::session::Session::close (49 samples, 3.89%)</title><rect x="78.8095%" y="661" width="3.8889%" height="15" fill="rgb(215,116,36)" fg:x="993" fg:w="49"/><text x="79.0595%" y="671.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (46 samples, 3.65%)</title><rect x="79.0476%" y="645" width="3.6508%" height="15" fill="rgb(240,23,51)" fg:x="996" fg:w="46"/><text x="79.2976%" y="655.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (45 samples, 3.57%)</title><rect x="79.1270%" y="629" width="3.5714%" height="15" fill="rgb(221,72,5)" fg:x="997" fg:w="45"/><text x="79.3770%" y="639.50">engi..</text></g><g><title>engine::session::SavesEntities::check_for_changes (44 samples, 3.49%)</title><rect x="79.2063%" y="613" width="3.4921%" height="15" fill="rgb(245,142,9)" fg:x="998" fg:w="44"/><text x="79.4563%" y="623.50">eng..</text></g><g><title>kernel::model::any_entity_changes (29 samples, 2.30%)</title><rect x="80.3968%" y="597" width="2.3016%" height="15" fill="rgb(207,34,16)" fg:x="1013" fg:w="29"/><text x="80.6468%" y="607.50">k..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.11%)</title><rect x="81.5873%" y="581" width="1.1111%" height="15" fill="rgb(252,101,12)" fg:x="1028" fg:w="14"/><text x="81.8373%" y="591.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.11%)</title><rect x="81.5873%" y="565" width="1.1111%" height="15" fill="rgb(239,89,37)" fg:x="1028" fg:w="14"/><text x="81.8373%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.11%)</title><rect x="81.5873%" y="549" width="1.1111%" height="15" fill="rgb(252,227,37)" fg:x="1028" fg:w="14"/><text x="81.8373%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.11%)</title><rect x="81.5873%" y="533" width="1.1111%" height="15" fill="rgb(212,164,17)" fg:x="1028" fg:w="14"/><text x="81.8373%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.11%)</title><rect x="81.5873%" y="517" width="1.1111%" height="15" fill="rgb(240,86,13)" fg:x="1028" fg:w="14"/><text x="81.8373%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.11%)</title><rect x="81.5873%" y="501" width="1.1111%" height="15" fill="rgb(233,183,32)" fg:x="1028" fg:w="14"/><text x="81.8373%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="82.4603%" y="485" width="0.2381%" height="15" fill="rgb(205,201,38)" fg:x="1039" fg:w="3"/><text x="82.7103%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="82.6190%" y="469" width="0.0794%" height="15" fill="rgb(210,122,38)" fg:x="1041" fg:w="1"/><text x="82.8690%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="82.6190%" y="453" width="0.0794%" height="15" fill="rgb(241,174,26)" fg:x="1041" fg:w="1"/><text x="82.8690%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8571%" y="501" width="0.0794%" height="15" fill="rgb(219,89,7)" fg:x="1044" fg:w="1"/><text x="83.1071%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="82.9365%" y="501" width="0.0794%" height="15" fill="rgb(246,9,24)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="82.9365%" y="485" width="0.0794%" height="15" fill="rgb(205,132,21)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.9365%" y="469" width="0.0794%" height="15" fill="rgb(210,11,17)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.9365%" y="453" width="0.0794%" height="15" fill="rgb(226,138,14)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.9365%" y="437" width="0.0794%" height="15" fill="rgb(224,108,44)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.9365%" y="421" width="0.0794%" height="15" fill="rgb(247,114,36)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9365%" y="405" width="0.0794%" height="15" fill="rgb(231,183,14)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.9365%" y="389" width="0.0794%" height="15" fill="rgb(218,168,4)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9365%" y="373" width="0.0794%" height="15" fill="rgb(210,8,3)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.9365%" y="357" width="0.0794%" height="15" fill="rgb(216,165,0)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9365%" y="341" width="0.0794%" height="15" fill="rgb(245,120,5)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.9365%" y="325" width="0.0794%" height="15" fill="rgb(249,121,32)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="82.8571%" y="549" width="0.2381%" height="15" fill="rgb(211,55,33)" fg:x="1044" fg:w="3"/><text x="83.1071%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="82.8571%" y="533" width="0.2381%" height="15" fill="rgb(254,46,35)" fg:x="1044" fg:w="3"/><text x="83.1071%" y="543.50"></text></g><g><title>engine::internal::Entities::add_persisted (3 samples, 0.24%)</title><rect x="82.8571%" y="517" width="0.2381%" height="15" fill="rgb(213,213,19)" fg:x="1044" fg:w="3"/><text x="83.1071%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::from_str (1 samples, 0.08%)</title><rect x="83.0159%" y="501" width="0.0794%" height="15" fill="rgb(207,152,44)" fg:x="1046" fg:w="1"/><text x="83.2659%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0159%" y="485" width="0.0794%" height="15" fill="rgb(227,195,36)" fg:x="1046" fg:w="1"/><text x="83.2659%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0159%" y="469" width="0.0794%" height="15" fill="rgb(210,137,36)" fg:x="1046" fg:w="1"/><text x="83.2659%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.0159%" y="453" width="0.0794%" height="15" fill="rgb(253,47,47)" fg:x="1046" fg:w="1"/><text x="83.2659%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0159%" y="437" width="0.0794%" height="15" fill="rgb(230,147,18)" fg:x="1046" fg:w="1"/><text x="83.2659%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.0159%" y="421" width="0.0794%" height="15" fill="rgb(247,33,49)" fg:x="1046" fg:w="1"/><text x="83.2659%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0159%" y="405" width="0.0794%" height="15" fill="rgb(239,26,29)" fg:x="1046" fg:w="1"/><text x="83.2659%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (5 samples, 0.40%)</title><rect x="82.8571%" y="597" width="0.3968%" height="15" fill="rgb(245,145,52)" fg:x="1044" fg:w="5"/><text x="83.1071%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="82.8571%" y="581" width="0.3968%" height="15" fill="rgb(224,139,32)" fg:x="1044" fg:w="5"/><text x="83.1071%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="82.8571%" y="565" width="0.3968%" height="15" fill="rgb(238,202,19)" fg:x="1044" fg:w="5"/><text x="83.1071%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.0952%" y="549" width="0.1587%" height="15" fill="rgb(249,211,53)" fg:x="1047" fg:w="2"/><text x="83.3452%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.0952%" y="533" width="0.1587%" height="15" fill="rgb(237,229,33)" fg:x="1047" fg:w="2"/><text x="83.3452%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.0952%" y="517" width="0.1587%" height="15" fill="rgb(208,97,40)" fg:x="1047" fg:w="2"/><text x="83.3452%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.0952%" y="501" width="0.1587%" height="15" fill="rgb(254,36,16)" fg:x="1047" fg:w="2"/><text x="83.3452%" y="511.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="83.1746%" y="485" width="0.0794%" height="15" fill="rgb(221,7,12)" fg:x="1048" fg:w="1"/><text x="83.4246%" y="495.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="83.2540%" y="597" width="0.0794%" height="15" fill="rgb(205,11,12)" fg:x="1049" fg:w="1"/><text x="83.5040%" y="607.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="83.2540%" y="581" width="0.0794%" height="15" fill="rgb(227,72,28)" fg:x="1049" fg:w="1"/><text x="83.5040%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="83.2540%" y="565" width="0.0794%" height="15" fill="rgb(228,7,34)" fg:x="1049" fg:w="1"/><text x="83.5040%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="83.2540%" y="549" width="0.0794%" height="15" fill="rgb(230,52,42)" fg:x="1049" fg:w="1"/><text x="83.5040%" y="559.50"></text></g><g><title>&lt;engine::perform::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (7 samples, 0.56%)</title><rect x="82.8571%" y="613" width="0.5556%" height="15" fill="rgb(219,177,53)" fg:x="1044" fg:w="7"/><text x="83.1071%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="83.3333%" y="597" width="0.0794%" height="15" fill="rgb(243,196,34)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3333%" y="581" width="0.0794%" height="15" fill="rgb(213,66,49)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.8095%" y="501" width="0.0794%" height="15" fill="rgb(233,11,50)" fg:x="1056" fg:w="1"/><text x="84.0595%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.8095%" y="485" width="0.0794%" height="15" fill="rgb(235,190,6)" fg:x="1056" fg:w="1"/><text x="84.0595%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8095%" y="469" width="0.0794%" height="15" fill="rgb(212,64,44)" fg:x="1056" fg:w="1"/><text x="84.0595%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="83.7302%" y="517" width="0.2381%" height="15" fill="rgb(206,95,44)" fg:x="1055" fg:w="3"/><text x="83.9802%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8889%" y="501" width="0.0794%" height="15" fill="rgb(227,136,25)" fg:x="1057" fg:w="1"/><text x="84.1389%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="83.6508%" y="533" width="0.3968%" height="15" fill="rgb(206,178,17)" fg:x="1054" fg:w="5"/><text x="83.9008%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.9683%" y="517" width="0.0794%" height="15" fill="rgb(208,168,35)" fg:x="1058" fg:w="1"/><text x="84.2183%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.0476%" y="533" width="0.0794%" height="15" fill="rgb(213,210,40)" fg:x="1059" fg:w="1"/><text x="84.2976%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="83.6508%" y="549" width="0.5556%" height="15" fill="rgb(236,60,6)" fg:x="1054" fg:w="7"/><text x="83.9008%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="84.1270%" y="533" width="0.0794%" height="15" fill="rgb(220,186,36)" fg:x="1060" fg:w="1"/><text x="84.3770%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.63%)</title><rect x="83.6508%" y="565" width="0.6349%" height="15" fill="rgb(225,120,49)" fg:x="1054" fg:w="8"/><text x="83.9008%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="84.2063%" y="549" width="0.0794%" height="15" fill="rgb(250,115,20)" fg:x="1061" fg:w="1"/><text x="84.4563%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (12 samples, 0.95%)</title><rect x="83.4921%" y="581" width="0.9524%" height="15" fill="rgb(207,214,23)" fg:x="1052" fg:w="12"/><text x="83.7421%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="84.2857%" y="565" width="0.1587%" height="15" fill="rgb(240,9,18)" fg:x="1062" fg:w="2"/><text x="84.5357%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="84.5238%" y="533" width="0.0794%" height="15" fill="rgb(232,170,48)" fg:x="1065" fg:w="1"/><text x="84.7738%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6032%" y="533" width="0.0794%" height="15" fill="rgb(236,149,23)" fg:x="1066" fg:w="1"/><text x="84.8532%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="84.4444%" y="549" width="0.4762%" height="15" fill="rgb(210,125,42)" fg:x="1064" fg:w="6"/><text x="84.6944%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="84.6825%" y="533" width="0.2381%" height="15" fill="rgb(207,201,52)" fg:x="1067" fg:w="3"/><text x="84.9325%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="84.9206%" y="549" width="0.1587%" height="15" fill="rgb(250,187,37)" fg:x="1070" fg:w="2"/><text x="85.1706%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="84.9206%" y="533" width="0.1587%" height="15" fill="rgb(214,186,2)" fg:x="1070" fg:w="2"/><text x="85.1706%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0000%" y="517" width="0.0794%" height="15" fill="rgb(207,189,15)" fg:x="1071" fg:w="1"/><text x="85.2500%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.0794%" y="549" width="0.0794%" height="15" fill="rgb(221,99,21)" fg:x="1072" fg:w="1"/><text x="85.3294%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="85.0794%" y="533" width="0.0794%" height="15" fill="rgb(212,67,18)" fg:x="1072" fg:w="1"/><text x="85.3294%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.1587%" y="501" width="0.0794%" height="15" fill="rgb(226,24,24)" fg:x="1073" fg:w="1"/><text x="85.4087%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.1587%" y="485" width="0.0794%" height="15" fill="rgb(252,123,31)" fg:x="1073" fg:w="1"/><text x="85.4087%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="85.1587%" y="469" width="0.0794%" height="15" fill="rgb(251,227,47)" fg:x="1073" fg:w="1"/><text x="85.4087%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="85.1587%" y="453" width="0.0794%" height="15" fill="rgb(233,84,53)" fg:x="1073" fg:w="1"/><text x="85.4087%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.2381%" y="485" width="0.0794%" height="15" fill="rgb(228,57,19)" fg:x="1074" fg:w="1"/><text x="85.4881%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.2381%" y="469" width="0.0794%" height="15" fill="rgb(251,81,5)" fg:x="1074" fg:w="1"/><text x="85.4881%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="85.3968%" y="469" width="0.1587%" height="15" fill="rgb(236,211,27)" fg:x="1076" fg:w="2"/><text x="85.6468%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (2 samples, 0.16%)</title><rect x="85.3968%" y="453" width="0.1587%" height="15" fill="rgb(218,21,6)" fg:x="1076" fg:w="2"/><text x="85.6468%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.4762%" y="437" width="0.0794%" height="15" fill="rgb(239,104,19)" fg:x="1077" fg:w="1"/><text x="85.7262%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="85.4762%" y="421" width="0.0794%" height="15" fill="rgb(234,179,27)" fg:x="1077" fg:w="1"/><text x="85.7262%" y="431.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="85.4762%" y="405" width="0.0794%" height="15" fill="rgb(221,154,39)" fg:x="1077" fg:w="1"/><text x="85.7262%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4762%" y="389" width="0.0794%" height="15" fill="rgb(228,190,1)" fg:x="1077" fg:w="1"/><text x="85.7262%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="85.5556%" y="357" width="0.0794%" height="15" fill="rgb(244,122,33)" fg:x="1078" fg:w="1"/><text x="85.8056%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="85.5556%" y="341" width="0.0794%" height="15" fill="rgb(227,56,37)" fg:x="1078" fg:w="1"/><text x="85.8056%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.5556%" y="325" width="0.0794%" height="15" fill="rgb(207,158,16)" fg:x="1078" fg:w="1"/><text x="85.8056%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="85.5556%" y="309" width="0.0794%" height="15" fill="rgb(251,222,30)" fg:x="1078" fg:w="1"/><text x="85.8056%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.5556%" y="293" width="0.0794%" height="15" fill="rgb(240,22,49)" fg:x="1078" fg:w="1"/><text x="85.8056%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.5556%" y="277" width="0.0794%" height="15" fill="rgb(224,207,37)" fg:x="1078" fg:w="1"/><text x="85.8056%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.6349%" y="357" width="0.0794%" height="15" fill="rgb(249,188,40)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.6349%" y="341" width="0.0794%" height="15" fill="rgb(254,141,11)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.6349%" y="325" width="0.0794%" height="15" fill="rgb(231,177,6)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6349%" y="309" width="0.0794%" height="15" fill="rgb(241,6,16)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6349%" y="293" width="0.0794%" height="15" fill="rgb(230,50,14)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6349%" y="277" width="0.0794%" height="15" fill="rgb(254,36,3)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6349%" y="261" width="0.0794%" height="15" fill="rgb(226,149,37)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.6349%" y="245" width="0.0794%" height="15" fill="rgb(253,49,27)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6349%" y="229" width="0.0794%" height="15" fill="rgb(249,182,52)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6349%" y="213" width="0.0794%" height="15" fill="rgb(223,42,15)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="223.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="85.7143%" y="341" width="0.1587%" height="15" fill="rgb(232,31,42)" fg:x="1080" fg:w="2"/><text x="85.9643%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="85.7143%" y="325" width="0.1587%" height="15" fill="rgb(233,56,46)" fg:x="1080" fg:w="2"/><text x="85.9643%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.7143%" y="309" width="0.1587%" height="15" fill="rgb(241,143,21)" fg:x="1080" fg:w="2"/><text x="85.9643%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.7937%" y="293" width="0.0794%" height="15" fill="rgb(251,222,15)" fg:x="1081" fg:w="1"/><text x="86.0437%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.7937%" y="277" width="0.0794%" height="15" fill="rgb(242,101,40)" fg:x="1081" fg:w="1"/><text x="86.0437%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7937%" y="261" width="0.0794%" height="15" fill="rgb(247,60,44)" fg:x="1081" fg:w="1"/><text x="86.0437%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="85.5556%" y="405" width="0.3968%" height="15" fill="rgb(254,48,47)" fg:x="1078" fg:w="5"/><text x="85.8056%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="85.5556%" y="389" width="0.3968%" height="15" fill="rgb(253,30,33)" fg:x="1078" fg:w="5"/><text x="85.8056%" y="399.50"></text></g><g><title>engine::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="85.5556%" y="373" width="0.3968%" height="15" fill="rgb(253,214,47)" fg:x="1078" fg:w="5"/><text x="85.8056%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_str (3 samples, 0.24%)</title><rect x="85.7143%" y="357" width="0.2381%" height="15" fill="rgb(241,108,29)" fg:x="1080" fg:w="3"/><text x="85.9643%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8730%" y="341" width="0.0794%" height="15" fill="rgb(240,36,2)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8730%" y="325" width="0.0794%" height="15" fill="rgb(243,198,24)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.8730%" y="309" width="0.0794%" height="15" fill="rgb(225,98,27)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8730%" y="293" width="0.0794%" height="15" fill="rgb(208,86,30)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.8730%" y="277" width="0.0794%" height="15" fill="rgb(242,157,11)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.8730%" y="261" width="0.0794%" height="15" fill="rgb(244,84,16)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8730%" y="245" width="0.0794%" height="15" fill="rgb(247,20,46)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.8730%" y="229" width="0.0794%" height="15" fill="rgb(240,157,20)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8730%" y="213" width="0.0794%" height="15" fill="rgb(212,151,38)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.8730%" y="197" width="0.0794%" height="15" fill="rgb(233,197,14)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8730%" y="181" width="0.0794%" height="15" fill="rgb(226,148,28)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.8730%" y="165" width="0.0794%" height="15" fill="rgb(244,141,30)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8730%" y="149" width="0.0794%" height="15" fill="rgb(215,73,38)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.8730%" y="133" width="0.0794%" height="15" fill="rgb(230,148,29)" fg:x="1082" fg:w="1"/><text x="86.1230%" y="143.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.71%)</title><rect x="85.3175%" y="485" width="0.7143%" height="15" fill="rgb(250,41,52)" fg:x="1075" fg:w="9"/><text x="85.5675%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="85.5556%" y="469" width="0.4762%" height="15" fill="rgb(215,48,1)" fg:x="1078" fg:w="6"/><text x="85.8056%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (6 samples, 0.48%)</title><rect x="85.5556%" y="453" width="0.4762%" height="15" fill="rgb(205,223,38)" fg:x="1078" fg:w="6"/><text x="85.8056%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (6 samples, 0.48%)</title><rect x="85.5556%" y="437" width="0.4762%" height="15" fill="rgb(213,51,8)" fg:x="1078" fg:w="6"/><text x="85.8056%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="85.5556%" y="421" width="0.4762%" height="15" fill="rgb(248,53,11)" fg:x="1078" fg:w="6"/><text x="85.8056%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.9524%" y="405" width="0.0794%" height="15" fill="rgb(218,140,4)" fg:x="1083" fg:w="1"/><text x="86.2024%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="86.0317%" y="453" width="0.3175%" height="15" fill="rgb(248,161,31)" fg:x="1084" fg:w="4"/><text x="86.2817%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="86.0317%" y="437" width="0.3175%" height="15" fill="rgb(239,88,32)" fg:x="1084" fg:w="4"/><text x="86.2817%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="86.1905%" y="421" width="0.1587%" height="15" fill="rgb(234,14,28)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="86.1905%" y="405" width="0.1587%" height="15" fill="rgb(235,173,11)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="86.1905%" y="389" width="0.1587%" height="15" fill="rgb(222,70,2)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="86.1905%" y="373" width="0.1587%" height="15" fill="rgb(228,196,41)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="86.1905%" y="357" width="0.1587%" height="15" fill="rgb(249,19,9)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="86.1905%" y="341" width="0.1587%" height="15" fill="rgb(221,16,43)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="86.1905%" y="325" width="0.1587%" height="15" fill="rgb(225,207,6)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="86.1905%" y="309" width="0.1587%" height="15" fill="rgb(249,32,32)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="86.1905%" y="293" width="0.1587%" height="15" fill="rgb(232,163,43)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="86.1905%" y="277" width="0.1587%" height="15" fill="rgb(236,158,54)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="86.1905%" y="261" width="0.1587%" height="15" fill="rgb(205,126,44)" fg:x="1086" fg:w="2"/><text x="86.4405%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2698%" y="245" width="0.0794%" height="15" fill="rgb(210,162,12)" fg:x="1087" fg:w="1"/><text x="86.5198%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="86.3492%" y="453" width="0.0794%" height="15" fill="rgb(218,156,48)" fg:x="1088" fg:w="1"/><text x="86.5992%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="86.3492%" y="437" width="0.0794%" height="15" fill="rgb(248,210,3)" fg:x="1088" fg:w="1"/><text x="86.5992%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.3492%" y="421" width="0.0794%" height="15" fill="rgb(212,43,27)" fg:x="1088" fg:w="1"/><text x="86.5992%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="86.3492%" y="405" width="0.0794%" height="15" fill="rgb(241,52,6)" fg:x="1088" fg:w="1"/><text x="86.5992%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="86.3492%" y="389" width="0.0794%" height="15" fill="rgb(222,178,35)" fg:x="1088" fg:w="1"/><text x="86.5992%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4286%" y="421" width="0.0794%" height="15" fill="rgb(205,121,46)" fg:x="1089" fg:w="1"/><text x="86.6786%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (20 samples, 1.59%)</title><rect x="85.2381%" y="501" width="1.5873%" height="15" fill="rgb(249,67,1)" fg:x="1074" fg:w="20"/><text x="85.4881%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.79%)</title><rect x="86.0317%" y="485" width="0.7937%" height="15" fill="rgb(238,168,42)" fg:x="1084" fg:w="10"/><text x="86.2817%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.79%)</title><rect x="86.0317%" y="469" width="0.7937%" height="15" fill="rgb(205,36,48)" fg:x="1084" fg:w="10"/><text x="86.2817%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="86.4286%" y="453" width="0.3968%" height="15" fill="rgb(240,85,12)" fg:x="1089" fg:w="5"/><text x="86.6786%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="86.4286%" y="437" width="0.3968%" height="15" fill="rgb(245,27,39)" fg:x="1089" fg:w="5"/><text x="86.6786%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="86.5079%" y="421" width="0.3175%" height="15" fill="rgb(218,129,34)" fg:x="1090" fg:w="4"/><text x="86.7579%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="86.5873%" y="405" width="0.2381%" height="15" fill="rgb(221,157,12)" fg:x="1091" fg:w="3"/><text x="86.8373%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="86.6667%" y="389" width="0.1587%" height="15" fill="rgb(213,206,20)" fg:x="1092" fg:w="2"/><text x="86.9167%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.6667%" y="373" width="0.1587%" height="15" fill="rgb(227,115,30)" fg:x="1092" fg:w="2"/><text x="86.9167%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.6667%" y="357" width="0.1587%" height="15" fill="rgb(221,40,47)" fg:x="1092" fg:w="2"/><text x="86.9167%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9048%" y="421" width="0.0794%" height="15" fill="rgb(239,96,49)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9048%" y="405" width="0.0794%" height="15" fill="rgb(223,24,38)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.9048%" y="389" width="0.0794%" height="15" fill="rgb(242,35,45)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.9048%" y="373" width="0.0794%" height="15" fill="rgb(236,20,9)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.9048%" y="357" width="0.0794%" height="15" fill="rgb(239,124,8)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9048%" y="341" width="0.0794%" height="15" fill="rgb(228,92,29)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9048%" y="325" width="0.0794%" height="15" fill="rgb(251,53,39)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.9048%" y="309" width="0.0794%" height="15" fill="rgb(224,44,10)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.9048%" y="293" width="0.0794%" height="15" fill="rgb(254,10,15)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.9048%" y="277" width="0.0794%" height="15" fill="rgb(245,173,6)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.9048%" y="261" width="0.0794%" height="15" fill="rgb(228,74,0)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9048%" y="245" width="0.0794%" height="15" fill="rgb(206,138,29)" fg:x="1095" fg:w="1"/><text x="87.1548%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9841%" y="421" width="0.0794%" height="15" fill="rgb(253,27,43)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9841%" y="405" width="0.0794%" height="15" fill="rgb(231,73,0)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9841%" y="389" width="0.0794%" height="15" fill="rgb(218,9,23)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9841%" y="373" width="0.0794%" height="15" fill="rgb(251,55,29)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.9841%" y="357" width="0.0794%" height="15" fill="rgb(223,180,22)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.9841%" y="341" width="0.0794%" height="15" fill="rgb(223,29,21)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.9841%" y="325" width="0.0794%" height="15" fill="rgb(251,103,37)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9841%" y="309" width="0.0794%" height="15" fill="rgb(214,11,21)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9841%" y="293" width="0.0794%" height="15" fill="rgb(205,137,13)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.9841%" y="277" width="0.0794%" height="15" fill="rgb(225,58,47)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.9841%" y="261" width="0.0794%" height="15" fill="rgb(222,197,14)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.9841%" y="245" width="0.0794%" height="15" fill="rgb(215,210,33)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.9841%" y="229" width="0.0794%" height="15" fill="rgb(242,13,9)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9841%" y="213" width="0.0794%" height="15" fill="rgb(218,31,39)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="223.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="86.9048%" y="453" width="0.2381%" height="15" fill="rgb(211,214,23)" fg:x="1095" fg:w="3"/><text x="87.1548%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="86.9048%" y="437" width="0.2381%" height="15" fill="rgb(237,92,14)" fg:x="1095" fg:w="3"/><text x="87.1548%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0635%" y="421" width="0.0794%" height="15" fill="rgb(220,78,5)" fg:x="1097" fg:w="1"/><text x="87.3135%" y="431.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="87.2222%" y="389" width="0.0794%" height="15" fill="rgb(237,23,21)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2222%" y="373" width="0.0794%" height="15" fill="rgb(251,207,51)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2222%" y="357" width="0.0794%" height="15" fill="rgb(249,206,18)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.2222%" y="341" width="0.0794%" height="15" fill="rgb(236,20,19)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.2222%" y="325" width="0.0794%" height="15" fill="rgb(214,227,29)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.2222%" y="309" width="0.0794%" height="15" fill="rgb(209,183,4)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.2222%" y="293" width="0.0794%" height="15" fill="rgb(233,111,23)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.2222%" y="277" width="0.0794%" height="15" fill="rgb(238,121,27)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.2222%" y="261" width="0.0794%" height="15" fill="rgb(236,120,41)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.2222%" y="245" width="0.0794%" height="15" fill="rgb(241,143,10)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.2222%" y="229" width="0.0794%" height="15" fill="rgb(224,86,31)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.2222%" y="213" width="0.0794%" height="15" fill="rgb(236,212,27)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2222%" y="197" width="0.0794%" height="15" fill="rgb(219,43,51)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.3810%" y="325" width="0.0794%" height="15" fill="rgb(232,216,8)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.3810%" y="309" width="0.0794%" height="15" fill="rgb(206,222,39)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.3810%" y="293" width="0.0794%" height="15" fill="rgb(209,149,48)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3810%" y="277" width="0.0794%" height="15" fill="rgb(229,155,21)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3810%" y="261" width="0.0794%" height="15" fill="rgb(246,152,26)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3810%" y="245" width="0.0794%" height="15" fill="rgb(206,70,42)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3810%" y="229" width="0.0794%" height="15" fill="rgb(236,9,11)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.3810%" y="213" width="0.0794%" height="15" fill="rgb(238,145,47)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3810%" y="197" width="0.0794%" height="15" fill="rgb(252,189,7)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.3810%" y="181" width="0.0794%" height="15" fill="rgb(254,168,51)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.3810%" y="165" width="0.0794%" height="15" fill="rgb(227,105,46)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.3810%" y="149" width="0.0794%" height="15" fill="rgb(227,74,30)" fg:x="1101" fg:w="1"/><text x="87.6310%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.4603%" y="245" width="0.0794%" height="15" fill="rgb(206,212,44)" fg:x="1102" fg:w="1"/><text x="87.7103%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4603%" y="229" width="0.0794%" height="15" fill="rgb(252,69,11)" fg:x="1102" fg:w="1"/><text x="87.7103%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="87.3810%" y="357" width="0.2381%" height="15" fill="rgb(239,116,0)" fg:x="1101" fg:w="3"/><text x="87.6310%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="87.3810%" y="341" width="0.2381%" height="15" fill="rgb(246,189,23)" fg:x="1101" fg:w="3"/><text x="87.6310%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.4603%" y="325" width="0.1587%" height="15" fill="rgb(229,50,41)" fg:x="1102" fg:w="2"/><text x="87.7103%" y="335.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.4603%" y="309" width="0.1587%" height="15" fill="rgb(214,66,37)" fg:x="1102" fg:w="2"/><text x="87.7103%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.4603%" y="293" width="0.1587%" height="15" fill="rgb(226,28,6)" fg:x="1102" fg:w="2"/><text x="87.7103%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.4603%" y="277" width="0.1587%" height="15" fill="rgb(239,154,0)" fg:x="1102" fg:w="2"/><text x="87.7103%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.4603%" y="261" width="0.1587%" height="15" fill="rgb(233,97,11)" fg:x="1102" fg:w="2"/><text x="87.7103%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5397%" y="245" width="0.0794%" height="15" fill="rgb(236,215,16)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5397%" y="229" width="0.0794%" height="15" fill="rgb(246,188,29)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.5397%" y="213" width="0.0794%" height="15" fill="rgb(207,7,29)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5397%" y="197" width="0.0794%" height="15" fill="rgb(238,112,43)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5397%" y="181" width="0.0794%" height="15" fill="rgb(230,110,32)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5397%" y="165" width="0.0794%" height="15" fill="rgb(218,197,32)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5397%" y="149" width="0.0794%" height="15" fill="rgb(252,61,9)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5397%" y="133" width="0.0794%" height="15" fill="rgb(244,140,14)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="87.5397%" y="117" width="0.0794%" height="15" fill="rgb(216,14,47)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="127.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="87.5397%" y="101" width="0.0794%" height="15" fill="rgb(224,130,52)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.6984%" y="261" width="0.1587%" height="15" fill="rgb(210,229,51)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.6984%" y="245" width="0.1587%" height="15" fill="rgb(242,13,9)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.6984%" y="229" width="0.1587%" height="15" fill="rgb(252,71,50)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.6984%" y="213" width="0.1587%" height="15" fill="rgb(218,225,6)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="87.6984%" y="197" width="0.1587%" height="15" fill="rgb(219,27,35)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="87.6984%" y="181" width="0.1587%" height="15" fill="rgb(226,30,1)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="87.6984%" y="165" width="0.1587%" height="15" fill="rgb(227,164,34)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="87.6984%" y="149" width="0.1587%" height="15" fill="rgb(206,103,4)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="87.6984%" y="133" width="0.1587%" height="15" fill="rgb(214,166,19)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="87.6984%" y="117" width="0.1587%" height="15" fill="rgb(240,56,20)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="87.6984%" y="101" width="0.1587%" height="15" fill="rgb(224,25,3)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="87.6984%" y="85" width="0.1587%" height="15" fill="rgb(216,206,54)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="95.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="87.6984%" y="69" width="0.1587%" height="15" fill="rgb(225,142,10)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="79.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="87.6984%" y="53" width="0.1587%" height="15" fill="rgb(246,9,18)" fg:x="1105" fg:w="2"/><text x="87.9484%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="87.6984%" y="309" width="0.2381%" height="15" fill="rgb(247,140,18)" fg:x="1105" fg:w="3"/><text x="87.9484%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="87.6984%" y="293" width="0.2381%" height="15" fill="rgb(239,184,22)" fg:x="1105" fg:w="3"/><text x="87.9484%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="87.6984%" y="277" width="0.2381%" height="15" fill="rgb(227,94,44)" fg:x="1105" fg:w="3"/><text x="87.9484%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8571%" y="261" width="0.0794%" height="15" fill="rgb(219,43,3)" fg:x="1107" fg:w="1"/><text x="88.1071%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="87.6190%" y="357" width="0.3968%" height="15" fill="rgb(210,76,31)" fg:x="1104" fg:w="5"/><text x="87.8690%" y="367.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="87.6190%" y="341" width="0.3968%" height="15" fill="rgb(225,85,12)" fg:x="1104" fg:w="5"/><text x="87.8690%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="87.6190%" y="325" width="0.3968%" height="15" fill="rgb(214,191,28)" fg:x="1104" fg:w="5"/><text x="87.8690%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.9365%" y="309" width="0.0794%" height="15" fill="rgb(214,43,14)" fg:x="1108" fg:w="1"/><text x="88.1865%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9365%" y="293" width="0.0794%" height="15" fill="rgb(253,117,5)" fg:x="1108" fg:w="1"/><text x="88.1865%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.9365%" y="277" width="0.0794%" height="15" fill="rgb(208,124,26)" fg:x="1108" fg:w="1"/><text x="88.1865%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9365%" y="261" width="0.0794%" height="15" fill="rgb(228,208,39)" fg:x="1108" fg:w="1"/><text x="88.1865%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.9365%" y="245" width="0.0794%" height="15" fill="rgb(206,180,39)" fg:x="1108" fg:w="1"/><text x="88.1865%" y="255.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="88.0159%" y="357" width="0.1587%" height="15" fill="rgb(205,111,37)" fg:x="1109" fg:w="2"/><text x="88.2659%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.0159%" y="341" width="0.1587%" height="15" fill="rgb(208,121,24)" fg:x="1109" fg:w="2"/><text x="88.2659%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.0159%" y="325" width="0.1587%" height="15" fill="rgb(218,215,32)" fg:x="1109" fg:w="2"/><text x="88.2659%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="88.0159%" y="309" width="0.1587%" height="15" fill="rgb(244,168,53)" fg:x="1109" fg:w="2"/><text x="88.2659%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.0159%" y="293" width="0.1587%" height="15" fill="rgb(214,9,36)" fg:x="1109" fg:w="2"/><text x="88.2659%" y="303.50"></text></g><g><title>kernel::model::base::EntityGid::new (1 samples, 0.08%)</title><rect x="88.1746%" y="357" width="0.0794%" height="15" fill="rgb(231,4,34)" fg:x="1111" fg:w="1"/><text x="88.4246%" y="367.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="88.2540%" y="341" width="0.0794%" height="15" fill="rgb(210,83,51)" fg:x="1112" fg:w="1"/><text x="88.5040%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2540%" y="325" width="0.0794%" height="15" fill="rgb(224,112,1)" fg:x="1112" fg:w="1"/><text x="88.5040%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.2540%" y="309" width="0.0794%" height="15" fill="rgb(216,33,41)" fg:x="1112" fg:w="1"/><text x="88.5040%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2540%" y="293" width="0.0794%" height="15" fill="rgb(215,179,42)" fg:x="1112" fg:w="1"/><text x="88.5040%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.2540%" y="277" width="0.0794%" height="15" fill="rgb(205,81,48)" fg:x="1112" fg:w="1"/><text x="88.5040%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2540%" y="261" width="0.0794%" height="15" fill="rgb(246,17,30)" fg:x="1112" fg:w="1"/><text x="88.5040%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.2540%" y="245" width="0.0794%" height="15" fill="rgb(226,19,16)" fg:x="1112" fg:w="1"/><text x="88.5040%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2540%" y="229" width="0.0794%" height="15" fill="rgb(207,3,14)" fg:x="1112" fg:w="1"/><text x="88.5040%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2540%" y="213" width="0.0794%" height="15" fill="rgb(226,77,12)" fg:x="1112" fg:w="1"/><text x="88.5040%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="88.3333%" y="309" width="0.1587%" height="15" fill="rgb(226,76,25)" fg:x="1113" fg:w="2"/><text x="88.5833%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.3333%" y="293" width="0.1587%" height="15" fill="rgb(217,216,25)" fg:x="1113" fg:w="2"/><text x="88.5833%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.3333%" y="277" width="0.1587%" height="15" fill="rgb(247,127,42)" fg:x="1113" fg:w="2"/><text x="88.5833%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="88.3333%" y="261" width="0.1587%" height="15" fill="rgb(226,10,34)" fg:x="1113" fg:w="2"/><text x="88.5833%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.3333%" y="245" width="0.1587%" height="15" fill="rgb(249,78,0)" fg:x="1113" fg:w="2"/><text x="88.5833%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="88.3333%" y="229" width="0.1587%" height="15" fill="rgb(226,218,38)" fg:x="1113" fg:w="2"/><text x="88.5833%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.3333%" y="213" width="0.1587%" height="15" fill="rgb(240,92,1)" fg:x="1113" fg:w="2"/><text x="88.5833%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="88.3333%" y="197" width="0.1587%" height="15" fill="rgb(237,224,33)" fg:x="1113" fg:w="2"/><text x="88.5833%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="88.4127%" y="181" width="0.0794%" height="15" fill="rgb(211,46,1)" fg:x="1114" fg:w="1"/><text x="88.6627%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4127%" y="165" width="0.0794%" height="15" fill="rgb(239,190,4)" fg:x="1114" fg:w="1"/><text x="88.6627%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.27%)</title><rect x="87.3016%" y="389" width="1.2698%" height="15" fill="rgb(221,50,22)" fg:x="1100" fg:w="16"/><text x="87.5516%" y="399.50"></text></g><g><title>engine::internal::Entities::add_persisted (15 samples, 1.19%)</title><rect x="87.3810%" y="373" width="1.1905%" height="15" fill="rgb(207,176,8)" fg:x="1101" fg:w="15"/><text x="87.6310%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_str (4 samples, 0.32%)</title><rect x="88.2540%" y="357" width="0.3175%" height="15" fill="rgb(244,114,50)" fg:x="1112" fg:w="4"/><text x="88.5040%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="88.3333%" y="341" width="0.2381%" height="15" fill="rgb(226,206,19)" fg:x="1113" fg:w="3"/><text x="88.5833%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="88.3333%" y="325" width="0.2381%" height="15" fill="rgb(208,199,16)" fg:x="1113" fg:w="3"/><text x="88.5833%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.4921%" y="309" width="0.0794%" height="15" fill="rgb(208,38,14)" fg:x="1115" fg:w="1"/><text x="88.7421%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.4921%" y="293" width="0.0794%" height="15" fill="rgb(221,211,49)" fg:x="1115" fg:w="1"/><text x="88.7421%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (19 samples, 1.51%)</title><rect x="87.1429%" y="453" width="1.5079%" height="15" fill="rgb(227,214,34)" fg:x="1098" fg:w="19"/><text x="87.3929%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 1.51%)</title><rect x="87.1429%" y="437" width="1.5079%" height="15" fill="rgb(234,5,54)" fg:x="1098" fg:w="19"/><text x="87.3929%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 1.51%)</title><rect x="87.1429%" y="421" width="1.5079%" height="15" fill="rgb(236,215,22)" fg:x="1098" fg:w="19"/><text x="87.3929%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (18 samples, 1.43%)</title><rect x="87.2222%" y="405" width="1.4286%" height="15" fill="rgb(244,0,11)" fg:x="1099" fg:w="18"/><text x="87.4722%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5714%" y="389" width="0.0794%" height="15" fill="rgb(212,140,16)" fg:x="1116" fg:w="1"/><text x="88.8214%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.6508%" y="453" width="0.0794%" height="15" fill="rgb(238,101,37)" fg:x="1117" fg:w="1"/><text x="88.9008%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="88.7302%" y="453" width="0.0794%" height="15" fill="rgb(247,46,3)" fg:x="1118" fg:w="1"/><text x="88.9802%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.7302%" y="437" width="0.0794%" height="15" fill="rgb(208,106,19)" fg:x="1118" fg:w="1"/><text x="88.9802%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.7302%" y="421" width="0.0794%" height="15" fill="rgb(240,227,15)" fg:x="1118" fg:w="1"/><text x="88.9802%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="88.7302%" y="405" width="0.0794%" height="15" fill="rgb(226,173,6)" fg:x="1118" fg:w="1"/><text x="88.9802%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.7302%" y="389" width="0.0794%" height="15" fill="rgb(213,191,1)" fg:x="1118" fg:w="1"/><text x="88.9802%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.7302%" y="373" width="0.0794%" height="15" fill="rgb(246,51,36)" fg:x="1118" fg:w="1"/><text x="88.9802%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.8095%" y="421" width="0.0794%" height="15" fill="rgb(238,40,32)" fg:x="1119" fg:w="1"/><text x="89.0595%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.8889%" y="421" width="0.0794%" height="15" fill="rgb(208,126,27)" fg:x="1120" fg:w="1"/><text x="89.1389%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8889%" y="405" width="0.0794%" height="15" fill="rgb(227,117,38)" fg:x="1120" fg:w="1"/><text x="89.1389%" y="415.50"></text></g><g><title>plugins_core::tools::get_contained_keys (28 samples, 2.22%)</title><rect x="86.8254%" y="501" width="2.2222%" height="15" fill="rgb(232,16,1)" fg:x="1094" fg:w="28"/><text x="87.0754%" y="511.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (28 samples, 2.22%)</title><rect x="86.8254%" y="485" width="2.2222%" height="15" fill="rgb(212,111,31)" fg:x="1094" fg:w="28"/><text x="87.0754%" y="495.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (28 samples, 2.22%)</title><rect x="86.8254%" y="469" width="2.2222%" height="15" fill="rgb(253,227,2)" fg:x="1094" fg:w="28"/><text x="87.0754%" y="479.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="88.8095%" y="453" width="0.2381%" height="15" fill="rgb(216,122,17)" fg:x="1119" fg:w="3"/><text x="89.0595%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="88.8095%" y="437" width="0.2381%" height="15" fill="rgb(227,37,2)" fg:x="1119" fg:w="3"/><text x="89.0595%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="88.9683%" y="421" width="0.0794%" height="15" fill="rgb(244,113,40)" fg:x="1121" fg:w="1"/><text x="89.2183%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="88.9683%" y="405" width="0.0794%" height="15" fill="rgb(217,193,34)" fg:x="1121" fg:w="1"/><text x="89.2183%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="88.9683%" y="389" width="0.0794%" height="15" fill="rgb(212,223,15)" fg:x="1121" fg:w="1"/><text x="89.2183%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9683%" y="373" width="0.0794%" height="15" fill="rgb(238,143,18)" fg:x="1121" fg:w="1"/><text x="89.2183%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9683%" y="357" width="0.0794%" height="15" fill="rgb(231,18,49)" fg:x="1121" fg:w="1"/><text x="89.2183%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 4.21%)</title><rect x="85.1587%" y="533" width="4.2063%" height="15" fill="rgb(249,122,4)" fg:x="1073" fg:w="53"/><text x="85.4087%" y="543.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 4.21%)</title><rect x="85.1587%" y="517" width="4.2063%" height="15" fill="rgb(245,138,54)" fg:x="1073" fg:w="53"/><text x="85.4087%" y="527.50">&lt;core..</text></g><g><title>plugins_core::tools::get_occupant_keys (4 samples, 0.32%)</title><rect x="89.0476%" y="501" width="0.3175%" height="15" fill="rgb(218,130,18)" fg:x="1122" fg:w="4"/><text x="89.2976%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="89.0476%" y="485" width="0.3175%" height="15" fill="rgb(235,94,13)" fg:x="1122" fg:w="4"/><text x="89.2976%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="89.0476%" y="469" width="0.3175%" height="15" fill="rgb(247,143,5)" fg:x="1122" fg:w="4"/><text x="89.2976%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="89.1270%" y="453" width="0.2381%" height="15" fill="rgb(212,59,54)" fg:x="1123" fg:w="3"/><text x="89.3770%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="89.1270%" y="437" width="0.2381%" height="15" fill="rgb(206,121,24)" fg:x="1123" fg:w="3"/><text x="89.3770%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2857%" y="421" width="0.0794%" height="15" fill="rgb(235,38,8)" fg:x="1125" fg:w="1"/><text x="89.5357%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="89.5238%" y="485" width="0.1587%" height="15" fill="rgb(227,102,26)" fg:x="1128" fg:w="2"/><text x="89.7738%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.6032%" y="469" width="0.0794%" height="15" fill="rgb(240,183,46)" fg:x="1129" fg:w="1"/><text x="89.8532%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.6032%" y="453" width="0.0794%" height="15" fill="rgb(208,177,23)" fg:x="1129" fg:w="1"/><text x="89.8532%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.6032%" y="437" width="0.0794%" height="15" fill="rgb(216,152,5)" fg:x="1129" fg:w="1"/><text x="89.8532%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.6032%" y="421" width="0.0794%" height="15" fill="rgb(238,199,2)" fg:x="1129" fg:w="1"/><text x="89.8532%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.6032%" y="405" width="0.0794%" height="15" fill="rgb(235,142,28)" fg:x="1129" fg:w="1"/><text x="89.8532%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.6032%" y="389" width="0.0794%" height="15" fill="rgb(225,97,25)" fg:x="1129" fg:w="1"/><text x="89.8532%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.6032%" y="373" width="0.0794%" height="15" fill="rgb(208,75,46)" fg:x="1129" fg:w="1"/><text x="89.8532%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.24%)</title><rect x="90.5556%" y="181" width="0.2381%" height="15" fill="rgb(240,136,15)" fg:x="1141" fg:w="3"/><text x="90.8056%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="90.5556%" y="165" width="0.2381%" height="15" fill="rgb(235,36,27)" fg:x="1141" fg:w="3"/><text x="90.8056%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="90.5556%" y="149" width="0.2381%" height="15" fill="rgb(231,132,23)" fg:x="1141" fg:w="3"/><text x="90.8056%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="90.7143%" y="133" width="0.0794%" height="15" fill="rgb(205,208,20)" fg:x="1143" fg:w="1"/><text x="90.9643%" y="143.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (7 samples, 0.56%)</title><rect x="90.3175%" y="277" width="0.5556%" height="15" fill="rgb(215,26,40)" fg:x="1138" fg:w="7"/><text x="90.5675%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="90.3175%" y="261" width="0.5556%" height="15" fill="rgb(238,183,34)" fg:x="1138" fg:w="7"/><text x="90.5675%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="90.3175%" y="245" width="0.5556%" height="15" fill="rgb(207,96,10)" fg:x="1138" fg:w="7"/><text x="90.5675%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.48%)</title><rect x="90.3968%" y="229" width="0.4762%" height="15" fill="rgb(218,88,6)" fg:x="1139" fg:w="6"/><text x="90.6468%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="90.5556%" y="213" width="0.3175%" height="15" fill="rgb(217,22,49)" fg:x="1141" fg:w="4"/><text x="90.8056%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="90.5556%" y="197" width="0.3175%" height="15" fill="rgb(240,195,14)" fg:x="1141" fg:w="4"/><text x="90.8056%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7937%" y="181" width="0.0794%" height="15" fill="rgb(229,48,27)" fg:x="1144" fg:w="1"/><text x="91.0437%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.7937%" y="165" width="0.0794%" height="15" fill="rgb(220,194,45)" fg:x="1144" fg:w="1"/><text x="91.0437%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="90.7937%" y="149" width="0.0794%" height="15" fill="rgb(252,60,20)" fg:x="1144" fg:w="1"/><text x="91.0437%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.71%)</title><rect x="90.2381%" y="293" width="0.7143%" height="15" fill="rgb(244,169,33)" fg:x="1137" fg:w="9"/><text x="90.4881%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.8730%" y="277" width="0.0794%" height="15" fill="rgb(234,141,34)" fg:x="1145" fg:w="1"/><text x="91.1230%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8730%" y="261" width="0.0794%" height="15" fill="rgb(241,141,9)" fg:x="1145" fg:w="1"/><text x="91.1230%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.87%)</title><rect x="90.2381%" y="309" width="0.8730%" height="15" fill="rgb(246,27,36)" fg:x="1137" fg:w="11"/><text x="90.4881%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="90.9524%" y="293" width="0.1587%" height="15" fill="rgb(216,188,42)" fg:x="1146" fg:w="2"/><text x="91.2024%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.9524%" y="277" width="0.1587%" height="15" fill="rgb(234,205,22)" fg:x="1146" fg:w="2"/><text x="91.2024%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.95%)</title><rect x="90.2381%" y="325" width="0.9524%" height="15" fill="rgb(210,202,32)" fg:x="1137" fg:w="12"/><text x="90.4881%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.1111%" y="309" width="0.0794%" height="15" fill="rgb(217,0,48)" fg:x="1148" fg:w="1"/><text x="91.3611%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="91.1111%" y="293" width="0.0794%" height="15" fill="rgb(207,115,37)" fg:x="1148" fg:w="1"/><text x="91.3611%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="91.1111%" y="277" width="0.0794%" height="15" fill="rgb(237,221,44)" fg:x="1148" fg:w="1"/><text x="91.3611%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.1111%" y="261" width="0.0794%" height="15" fill="rgb(249,78,2)" fg:x="1148" fg:w="1"/><text x="91.3611%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="91.1111%" y="245" width="0.0794%" height="15" fill="rgb(211,169,23)" fg:x="1148" fg:w="1"/><text x="91.3611%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.1111%" y="229" width="0.0794%" height="15" fill="rgb(207,116,29)" fg:x="1148" fg:w="1"/><text x="91.3611%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1111%" y="213" width="0.0794%" height="15" fill="rgb(240,84,33)" fg:x="1148" fg:w="1"/><text x="91.3611%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.1905%" y="325" width="0.0794%" height="15" fill="rgb(229,224,31)" fg:x="1149" fg:w="1"/><text x="91.4405%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1905%" y="309" width="0.0794%" height="15" fill="rgb(227,90,31)" fg:x="1149" fg:w="1"/><text x="91.4405%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (14 samples, 1.11%)</title><rect x="90.2381%" y="373" width="1.1111%" height="15" fill="rgb(249,22,41)" fg:x="1137" fg:w="14"/><text x="90.4881%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 1.11%)</title><rect x="90.2381%" y="357" width="1.1111%" height="15" fill="rgb(239,65,11)" fg:x="1137" fg:w="14"/><text x="90.4881%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.11%)</title><rect x="90.2381%" y="341" width="1.1111%" height="15" fill="rgb(205,5,23)" fg:x="1137" fg:w="14"/><text x="90.4881%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2698%" y="325" width="0.0794%" height="15" fill="rgb(254,78,52)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.2698%" y="309" width="0.0794%" height="15" fill="rgb(214,156,33)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="91.2698%" y="293" width="0.0794%" height="15" fill="rgb(208,20,30)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (22 samples, 1.75%)</title><rect x="89.6825%" y="469" width="1.7460%" height="15" fill="rgb(223,133,18)" fg:x="1130" fg:w="22"/><text x="89.9325%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (22 samples, 1.75%)</title><rect x="89.6825%" y="453" width="1.7460%" height="15" fill="rgb(222,91,41)" fg:x="1130" fg:w="22"/><text x="89.9325%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 1.75%)</title><rect x="89.6825%" y="437" width="1.7460%" height="15" fill="rgb(247,137,48)" fg:x="1130" fg:w="22"/><text x="89.9325%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (19 samples, 1.51%)</title><rect x="89.9206%" y="421" width="1.5079%" height="15" fill="rgb(239,156,11)" fg:x="1133" fg:w="19"/><text x="90.1706%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.35%)</title><rect x="90.0794%" y="405" width="1.3492%" height="15" fill="rgb(244,56,26)" fg:x="1135" fg:w="17"/><text x="90.3294%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.27%)</title><rect x="90.1587%" y="389" width="1.2698%" height="15" fill="rgb(205,131,49)" fg:x="1136" fg:w="16"/><text x="90.4087%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3492%" y="373" width="0.0794%" height="15" fill="rgb(224,0,2)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3492%" y="357" width="0.0794%" height="15" fill="rgb(247,59,36)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5079%" y="421" width="0.0794%" height="15" fill="rgb(215,4,47)" fg:x="1153" fg:w="1"/><text x="91.7579%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="91.5873%" y="421" width="0.3175%" height="15" fill="rgb(242,72,42)" fg:x="1154" fg:w="4"/><text x="91.8373%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.7460%" y="405" width="0.1587%" height="15" fill="rgb(232,145,44)" fg:x="1156" fg:w="2"/><text x="91.9960%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.8254%" y="389" width="0.0794%" height="15" fill="rgb(205,108,43)" fg:x="1157" fg:w="1"/><text x="92.0754%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.9048%" y="389" width="0.0794%" height="15" fill="rgb(215,190,17)" fg:x="1158" fg:w="1"/><text x="92.1548%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="91.9048%" y="421" width="0.1587%" height="15" fill="rgb(223,90,34)" fg:x="1158" fg:w="2"/><text x="92.1548%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.9048%" y="405" width="0.1587%" height="15" fill="rgb(216,25,0)" fg:x="1158" fg:w="2"/><text x="92.1548%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.9841%" y="389" width="0.0794%" height="15" fill="rgb(223,51,28)" fg:x="1159" fg:w="1"/><text x="92.2341%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="91.9841%" y="373" width="0.0794%" height="15" fill="rgb(227,131,7)" fg:x="1159" fg:w="1"/><text x="92.2341%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="92.0635%" y="421" width="0.0794%" height="15" fill="rgb(216,72,36)" fg:x="1160" fg:w="1"/><text x="92.3135%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="92.0635%" y="405" width="0.0794%" height="15" fill="rgb(243,158,40)" fg:x="1160" fg:w="1"/><text x="92.3135%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0635%" y="389" width="0.0794%" height="15" fill="rgb(218,60,54)" fg:x="1160" fg:w="1"/><text x="92.3135%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0635%" y="373" width="0.0794%" height="15" fill="rgb(230,15,46)" fg:x="1160" fg:w="1"/><text x="92.3135%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="92.1429%" y="421" width="0.1587%" height="15" fill="rgb(250,22,26)" fg:x="1161" fg:w="2"/><text x="92.3929%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="92.1429%" y="405" width="0.1587%" height="15" fill="rgb(239,194,40)" fg:x="1161" fg:w="2"/><text x="92.3929%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.1429%" y="389" width="0.1587%" height="15" fill="rgb(219,62,9)" fg:x="1161" fg:w="2"/><text x="92.3929%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.1429%" y="373" width="0.1587%" height="15" fill="rgb(228,45,21)" fg:x="1161" fg:w="2"/><text x="92.3929%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.1429%" y="357" width="0.1587%" height="15" fill="rgb(242,56,44)" fg:x="1161" fg:w="2"/><text x="92.3929%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3016%" y="373" width="0.0794%" height="15" fill="rgb(239,170,14)" fg:x="1163" fg:w="1"/><text x="92.5516%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3016%" y="357" width="0.0794%" height="15" fill="rgb(236,150,13)" fg:x="1163" fg:w="1"/><text x="92.5516%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="92.3016%" y="341" width="0.0794%" height="15" fill="rgb(228,15,30)" fg:x="1163" fg:w="1"/><text x="92.5516%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3810%" y="325" width="0.0794%" height="15" fill="rgb(217,43,28)" fg:x="1164" fg:w="1"/><text x="92.6310%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3810%" y="309" width="0.0794%" height="15" fill="rgb(246,223,1)" fg:x="1164" fg:w="1"/><text x="92.6310%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3810%" y="293" width="0.0794%" height="15" fill="rgb(247,103,7)" fg:x="1164" fg:w="1"/><text x="92.6310%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="92.3810%" y="373" width="0.1587%" height="15" fill="rgb(205,105,39)" fg:x="1164" fg:w="2"/><text x="92.6310%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="92.3810%" y="357" width="0.1587%" height="15" fill="rgb(216,134,18)" fg:x="1164" fg:w="2"/><text x="92.6310%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="92.3810%" y="341" width="0.1587%" height="15" fill="rgb(226,139,50)" fg:x="1164" fg:w="2"/><text x="92.6310%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.4603%" y="325" width="0.0794%" height="15" fill="rgb(251,152,38)" fg:x="1165" fg:w="1"/><text x="92.7103%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7778%" y="341" width="0.0794%" height="15" fill="rgb(222,63,15)" fg:x="1169" fg:w="1"/><text x="93.0278%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7778%" y="325" width="0.0794%" height="15" fill="rgb(212,198,28)" fg:x="1169" fg:w="1"/><text x="93.0278%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8571%" y="277" width="0.0794%" height="15" fill="rgb(216,93,38)" fg:x="1170" fg:w="1"/><text x="93.1071%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.8571%" y="309" width="0.1587%" height="15" fill="rgb(247,202,44)" fg:x="1170" fg:w="2"/><text x="93.1071%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.8571%" y="293" width="0.1587%" height="15" fill="rgb(237,204,46)" fg:x="1170" fg:w="2"/><text x="93.1071%" y="303.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="92.9365%" y="277" width="0.0794%" height="15" fill="rgb(224,98,48)" fg:x="1171" fg:w="1"/><text x="93.1865%" y="287.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.9365%" y="261" width="0.0794%" height="15" fill="rgb(247,105,21)" fg:x="1171" fg:w="1"/><text x="93.1865%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0159%" y="277" width="0.0794%" height="15" fill="rgb(212,137,52)" fg:x="1172" fg:w="1"/><text x="93.2659%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0159%" y="261" width="0.0794%" height="15" fill="rgb(223,76,33)" fg:x="1172" fg:w="1"/><text x="93.2659%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0159%" y="245" width="0.0794%" height="15" fill="rgb(209,156,27)" fg:x="1172" fg:w="1"/><text x="93.2659%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="93.0952%" y="261" width="0.0794%" height="15" fill="rgb(249,81,54)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="93.1746%" y="261" width="0.0794%" height="15" fill="rgb(241,46,29)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1746%" y="245" width="0.0794%" height="15" fill="rgb(213,193,39)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1746%" y="229" width="0.0794%" height="15" fill="rgb(214,85,16)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1746%" y="213" width="0.0794%" height="15" fill="rgb(216,184,17)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="93.0159%" y="293" width="0.3968%" height="15" fill="rgb(254,219,29)" fg:x="1172" fg:w="5"/><text x="93.2659%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="93.0952%" y="277" width="0.3175%" height="15" fill="rgb(209,148,34)" fg:x="1173" fg:w="4"/><text x="93.3452%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.2540%" y="261" width="0.1587%" height="15" fill="rgb(253,215,11)" fg:x="1175" fg:w="2"/><text x="93.5040%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="92.8571%" y="325" width="0.6349%" height="15" fill="rgb(232,126,20)" fg:x="1170" fg:w="8"/><text x="93.1071%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="93.0159%" y="309" width="0.4762%" height="15" fill="rgb(248,118,51)" fg:x="1172" fg:w="6"/><text x="93.2659%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4127%" y="293" width="0.0794%" height="15" fill="rgb(226,121,21)" fg:x="1177" fg:w="1"/><text x="93.6627%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.95%)</title><rect x="92.7778%" y="357" width="0.9524%" height="15" fill="rgb(216,128,16)" fg:x="1169" fg:w="12"/><text x="93.0278%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.87%)</title><rect x="92.8571%" y="341" width="0.8730%" height="15" fill="rgb(205,17,9)" fg:x="1170" fg:w="11"/><text x="93.1071%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="93.4921%" y="325" width="0.2381%" height="15" fill="rgb(206,197,21)" fg:x="1178" fg:w="3"/><text x="93.7421%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.51%)</title><rect x="92.3016%" y="389" width="1.5079%" height="15" fill="rgb(212,202,9)" fg:x="1163" fg:w="19"/><text x="92.5516%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.27%)</title><rect x="92.5397%" y="373" width="1.2698%" height="15" fill="rgb(241,131,50)" fg:x="1166" fg:w="16"/><text x="92.7897%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7302%" y="357" width="0.0794%" height="15" fill="rgb(228,115,51)" fg:x="1181" fg:w="1"/><text x="93.9802%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 1.83%)</title><rect x="92.3016%" y="405" width="1.8254%" height="15" fill="rgb(237,209,8)" fg:x="1163" fg:w="23"/><text x="92.5516%" y="415.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="93.8095%" y="389" width="0.3175%" height="15" fill="rgb(241,121,28)" fg:x="1182" fg:w="4"/><text x="94.0595%" y="399.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="93.8095%" y="373" width="0.3175%" height="15" fill="rgb(238,194,51)" fg:x="1182" fg:w="4"/><text x="94.0595%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (114 samples, 9.05%)</title><rect x="85.1587%" y="549" width="9.0476%" height="15" fill="rgb(208,41,39)" fg:x="1073" fg:w="114"/><text x="85.4087%" y="559.50">core::iter::a..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (61 samples, 4.84%)</title><rect x="89.3651%" y="533" width="4.8413%" height="15" fill="rgb(223,95,44)" fg:x="1126" fg:w="61"/><text x="89.6151%" y="543.50">alloc:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (61 samples, 4.84%)</title><rect x="89.3651%" y="517" width="4.8413%" height="15" fill="rgb(253,98,40)" fg:x="1126" fg:w="61"/><text x="89.6151%" y="527.50">&lt;core:..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (61 samples, 4.84%)</title><rect x="89.3651%" y="501" width="4.8413%" height="15" fill="rgb(210,5,12)" fg:x="1126" fg:w="61"/><text x="89.6151%" y="511.50">plugin..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (57 samples, 4.52%)</title><rect x="89.6825%" y="485" width="4.5238%" height="15" fill="rgb(233,201,23)" fg:x="1130" fg:w="57"/><text x="89.9325%" y="495.50">&lt;rpc_..</text></g><g><title>kernel::model::EntityPtr::to_json_value (35 samples, 2.78%)</title><rect x="91.4286%" y="469" width="2.7778%" height="15" fill="rgb(251,68,15)" fg:x="1152" fg:w="35"/><text x="91.6786%" y="479.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (35 samples, 2.78%)</title><rect x="91.4286%" y="453" width="2.7778%" height="15" fill="rgb(243,10,46)" fg:x="1152" fg:w="35"/><text x="91.6786%" y="463.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (34 samples, 2.70%)</title><rect x="91.5079%" y="437" width="2.6984%" height="15" fill="rgb(253,130,44)" fg:x="1153" fg:w="34"/><text x="91.7579%" y="447.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.90%)</title><rect x="92.3016%" y="421" width="1.9048%" height="15" fill="rgb(244,5,26)" fg:x="1163" fg:w="24"/><text x="92.5516%" y="431.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1270%" y="405" width="0.0794%" height="15" fill="rgb(220,126,20)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="415.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (124 samples, 9.84%)</title><rect x="84.4444%" y="565" width="9.8413%" height="15" fill="rgb(212,188,29)" fg:x="1064" fg:w="124"/><text x="84.6944%" y="575.50">&lt;plugins_rpc::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2063%" y="549" width="0.0794%" height="15" fill="rgb(227,194,48)" fg:x="1187" fg:w="1"/><text x="94.4563%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2063%" y="533" width="0.0794%" height="15" fill="rgb(245,64,28)" fg:x="1187" fg:w="1"/><text x="94.4563%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="94.2063%" y="517" width="0.0794%" height="15" fill="rgb(205,44,7)" fg:x="1187" fg:w="1"/><text x="94.4563%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (138 samples, 10.95%)</title><rect x="83.4127%" y="613" width="10.9524%" height="15" fill="rgb(213,193,11)" fg:x="1051" fg:w="138"/><text x="83.6627%" y="623.50">kernel::plugins:..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (138 samples, 10.95%)</title><rect x="83.4127%" y="597" width="10.9524%" height="15" fill="rgb(238,157,6)" fg:x="1051" fg:w="138"/><text x="83.6627%" y="607.50">&lt;plugins_dynlib:..</text></g><g><title>plugins_rpc::querying::have_surroundings (125 samples, 9.92%)</title><rect x="84.4444%" y="581" width="9.9206%" height="15" fill="rgb(222,73,7)" fg:x="1064" fg:w="125"/><text x="84.6944%" y="591.50">plugins_rpc::q..</text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="94.2857%" y="565" width="0.0794%" height="15" fill="rgb(224,78,15)" fg:x="1188" fg:w="1"/><text x="94.5357%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="94.2857%" y="549" width="0.0794%" height="15" fill="rgb(218,149,46)" fg:x="1188" fg:w="1"/><text x="94.5357%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="94.2857%" y="533" width="0.0794%" height="15" fill="rgb(218,175,44)" fg:x="1188" fg:w="1"/><text x="94.5357%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.2857%" y="517" width="0.0794%" height="15" fill="rgb(215,183,45)" fg:x="1188" fg:w="1"/><text x="94.5357%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.2857%" y="501" width="0.0794%" height="15" fill="rgb(226,116,37)" fg:x="1188" fg:w="1"/><text x="94.5357%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.2857%" y="485" width="0.0794%" height="15" fill="rgb(252,224,12)" fg:x="1188" fg:w="1"/><text x="94.5357%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4444%" y="421" width="0.0794%" height="15" fill="rgb(232,212,21)" fg:x="1190" fg:w="1"/><text x="94.6944%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="94.5238%" y="421" width="0.2381%" height="15" fill="rgb(226,191,16)" fg:x="1191" fg:w="3"/><text x="94.7738%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="94.5238%" y="405" width="0.2381%" height="15" fill="rgb(231,156,11)" fg:x="1191" fg:w="3"/><text x="94.7738%" y="415.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="94.5238%" y="389" width="0.2381%" height="15" fill="rgb(225,134,49)" fg:x="1191" fg:w="3"/><text x="94.7738%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="94.7619%" y="405" width="0.0794%" height="15" fill="rgb(254,55,32)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="94.7619%" y="389" width="0.0794%" height="15" fill="rgb(242,195,29)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="94.7619%" y="373" width="0.0794%" height="15" fill="rgb(210,155,20)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="383.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="94.7619%" y="357" width="0.0794%" height="15" fill="rgb(243,170,23)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7619%" y="341" width="0.0794%" height="15" fill="rgb(242,197,51)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7619%" y="325" width="0.0794%" height="15" fill="rgb(248,48,13)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7619%" y="309" width="0.0794%" height="15" fill="rgb(221,185,15)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.7619%" y="293" width="0.0794%" height="15" fill="rgb(244,49,7)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.7619%" y="277" width="0.0794%" height="15" fill="rgb(213,182,52)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.7619%" y="261" width="0.0794%" height="15" fill="rgb(209,15,45)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.7619%" y="245" width="0.0794%" height="15" fill="rgb(233,23,44)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.7619%" y="229" width="0.0794%" height="15" fill="rgb(220,182,30)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.7619%" y="213" width="0.0794%" height="15" fill="rgb(219,116,33)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.7619%" y="197" width="0.0794%" height="15" fill="rgb(231,15,21)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.7619%" y="181" width="0.0794%" height="15" fill="rgb(238,119,25)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.7619%" y="165" width="0.0794%" height="15" fill="rgb(232,30,39)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7619%" y="149" width="0.0794%" height="15" fill="rgb(241,26,30)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.8413%" y="341" width="0.0794%" height="15" fill="rgb(234,154,4)" fg:x="1195" fg:w="1"/><text x="95.0913%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (8 samples, 0.63%)</title><rect x="94.4444%" y="437" width="0.6349%" height="15" fill="rgb(229,199,39)" fg:x="1190" fg:w="8"/><text x="94.6944%" y="447.50"></text></g><g><title>plugins_core::tools::contained_by (4 samples, 0.32%)</title><rect x="94.7619%" y="421" width="0.3175%" height="15" fill="rgb(236,213,10)" fg:x="1194" fg:w="4"/><text x="95.0119%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="94.8413%" y="405" width="0.2381%" height="15" fill="rgb(247,28,19)" fg:x="1195" fg:w="3"/><text x="95.0913%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="94.8413%" y="389" width="0.2381%" height="15" fill="rgb(239,199,24)" fg:x="1195" fg:w="3"/><text x="95.0913%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.8413%" y="373" width="0.2381%" height="15" fill="rgb(246,122,13)" fg:x="1195" fg:w="3"/><text x="95.0913%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.8413%" y="357" width="0.2381%" height="15" fill="rgb(210,203,29)" fg:x="1195" fg:w="3"/><text x="95.0913%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="94.9206%" y="341" width="0.1587%" height="15" fill="rgb(218,4,50)" fg:x="1196" fg:w="2"/><text x="95.1706%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="94.9206%" y="325" width="0.1587%" height="15" fill="rgb(236,142,48)" fg:x="1196" fg:w="2"/><text x="95.1706%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0000%" y="309" width="0.0794%" height="15" fill="rgb(245,173,2)" fg:x="1197" fg:w="1"/><text x="95.2500%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (10 samples, 0.79%)</title><rect x="94.4444%" y="469" width="0.7937%" height="15" fill="rgb(244,196,18)" fg:x="1190" fg:w="10"/><text x="94.6944%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (10 samples, 0.79%)</title><rect x="94.4444%" y="453" width="0.7937%" height="15" fill="rgb(221,27,33)" fg:x="1190" fg:w="10"/><text x="94.6944%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="95.0794%" y="437" width="0.1587%" height="15" fill="rgb(210,206,16)" fg:x="1198" fg:w="2"/><text x="95.3294%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="95.0794%" y="421" width="0.1587%" height="15" fill="rgb(238,161,34)" fg:x="1198" fg:w="2"/><text x="95.3294%" y="431.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="95.1587%" y="405" width="0.0794%" height="15" fill="rgb(243,118,39)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="95.1587%" y="389" width="0.0794%" height="15" fill="rgb(234,126,9)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.1587%" y="373" width="0.0794%" height="15" fill="rgb(234,167,42)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.1587%" y="357" width="0.0794%" height="15" fill="rgb(238,54,48)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.1587%" y="341" width="0.0794%" height="15" fill="rgb(226,105,2)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1587%" y="325" width="0.0794%" height="15" fill="rgb(223,95,23)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1587%" y="309" width="0.0794%" height="15" fill="rgb(249,212,19)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1587%" y="293" width="0.0794%" height="15" fill="rgb(234,158,54)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1587%" y="277" width="0.0794%" height="15" fill="rgb(247,114,32)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.1587%" y="261" width="0.0794%" height="15" fill="rgb(250,68,44)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1587%" y="245" width="0.0794%" height="15" fill="rgb(242,3,15)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1587%" y="229" width="0.0794%" height="15" fill="rgb(223,110,32)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1587%" y="213" width="0.0794%" height="15" fill="rgb(216,26,54)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="223.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="95.1587%" y="197" width="0.0794%" height="15" fill="rgb(209,145,42)" fg:x="1199" fg:w="1"/><text x="95.4087%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="95.2381%" y="437" width="0.0794%" height="15" fill="rgb(240,111,53)" fg:x="1200" fg:w="1"/><text x="95.4881%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2381%" y="421" width="0.0794%" height="15" fill="rgb(209,101,4)" fg:x="1200" fg:w="1"/><text x="95.4881%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="95.2381%" y="453" width="0.2381%" height="15" fill="rgb(231,74,29)" fg:x="1200" fg:w="3"/><text x="95.4881%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.3175%" y="437" width="0.1587%" height="15" fill="rgb(223,12,12)" fg:x="1201" fg:w="2"/><text x="95.5675%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.3175%" y="421" width="0.1587%" height="15" fill="rgb(207,162,2)" fg:x="1201" fg:w="2"/><text x="95.5675%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.3175%" y="405" width="0.1587%" height="15" fill="rgb(230,152,0)" fg:x="1201" fg:w="2"/><text x="95.5675%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.3175%" y="389" width="0.1587%" height="15" fill="rgb(254,156,19)" fg:x="1201" fg:w="2"/><text x="95.5675%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.3175%" y="373" width="0.1587%" height="15" fill="rgb(250,28,0)" fg:x="1201" fg:w="2"/><text x="95.5675%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.3175%" y="357" width="0.1587%" height="15" fill="rgb(253,27,5)" fg:x="1201" fg:w="2"/><text x="95.5675%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="95.3175%" y="341" width="0.1587%" height="15" fill="rgb(244,154,7)" fg:x="1201" fg:w="2"/><text x="95.5675%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.3175%" y="325" width="0.1587%" height="15" fill="rgb(242,108,21)" fg:x="1201" fg:w="2"/><text x="95.5675%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3968%" y="309" width="0.0794%" height="15" fill="rgb(254,200,38)" fg:x="1202" fg:w="1"/><text x="95.6468%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3968%" y="293" width="0.0794%" height="15" fill="rgb(250,145,41)" fg:x="1202" fg:w="1"/><text x="95.6468%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3968%" y="277" width="0.0794%" height="15" fill="rgb(235,136,31)" fg:x="1202" fg:w="1"/><text x="95.6468%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3968%" y="261" width="0.0794%" height="15" fill="rgb(215,13,18)" fg:x="1202" fg:w="1"/><text x="95.6468%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.3968%" y="245" width="0.0794%" height="15" fill="rgb(238,199,12)" fg:x="1202" fg:w="1"/><text x="95.6468%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.3968%" y="229" width="0.0794%" height="15" fill="rgb(242,179,49)" fg:x="1202" fg:w="1"/><text x="95.6468%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="95.4762%" y="405" width="0.0794%" height="15" fill="rgb(214,10,44)" fg:x="1203" fg:w="1"/><text x="95.7262%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.4762%" y="389" width="0.0794%" height="15" fill="rgb(229,181,11)" fg:x="1203" fg:w="1"/><text x="95.7262%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.4762%" y="373" width="0.0794%" height="15" fill="rgb(244,155,10)" fg:x="1203" fg:w="1"/><text x="95.7262%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (5 samples, 0.40%)</title><rect x="95.2381%" y="469" width="0.3968%" height="15" fill="rgb(254,13,48)" fg:x="1200" fg:w="5"/><text x="95.4881%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="95.4762%" y="453" width="0.1587%" height="15" fill="rgb(210,164,6)" fg:x="1203" fg:w="2"/><text x="95.7262%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.4762%" y="437" width="0.1587%" height="15" fill="rgb(216,187,40)" fg:x="1203" fg:w="2"/><text x="95.7262%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.4762%" y="421" width="0.1587%" height="15" fill="rgb(208,143,21)" fg:x="1203" fg:w="2"/><text x="95.7262%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.5556%" y="405" width="0.0794%" height="15" fill="rgb(211,73,41)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.5556%" y="389" width="0.0794%" height="15" fill="rgb(244,69,21)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.5556%" y="373" width="0.0794%" height="15" fill="rgb(230,152,32)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.5556%" y="357" width="0.0794%" height="15" fill="rgb(208,110,18)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.5556%" y="341" width="0.0794%" height="15" fill="rgb(214,201,49)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.5556%" y="325" width="0.0794%" height="15" fill="rgb(253,153,27)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5556%" y="309" width="0.0794%" height="15" fill="rgb(238,61,11)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.5556%" y="293" width="0.0794%" height="15" fill="rgb(227,84,2)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.5556%" y="277" width="0.0794%" height="15" fill="rgb(233,52,8)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="287.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="95.6349%" y="469" width="0.0794%" height="15" fill="rgb(209,136,13)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6349%" y="453" width="0.0794%" height="15" fill="rgb(229,86,25)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6349%" y="437" width="0.0794%" height="15" fill="rgb(235,47,16)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6349%" y="421" width="0.0794%" height="15" fill="rgb(231,186,4)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.6349%" y="405" width="0.0794%" height="15" fill="rgb(209,213,23)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.6349%" y="389" width="0.0794%" height="15" fill="rgb(212,142,47)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.6349%" y="373" width="0.0794%" height="15" fill="rgb(251,86,24)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6349%" y="357" width="0.0794%" height="15" fill="rgb(206,217,17)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6349%" y="341" width="0.0794%" height="15" fill="rgb(248,92,38)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.6349%" y="325" width="0.0794%" height="15" fill="rgb(214,25,29)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.6349%" y="309" width="0.0794%" height="15" fill="rgb(245,117,13)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.6349%" y="293" width="0.0794%" height="15" fill="rgb(205,169,9)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.6349%" y="277" width="0.0794%" height="15" fill="rgb(223,134,38)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6349%" y="261" width="0.0794%" height="15" fill="rgb(249,129,49)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="271.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7143%" y="437" width="0.0794%" height="15" fill="rgb(229,157,45)" fg:x="1206" fg:w="1"/><text x="95.9643%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="95.7143%" y="453" width="0.1587%" height="15" fill="rgb(232,159,11)" fg:x="1206" fg:w="2"/><text x="95.9643%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.7937%" y="437" width="0.0794%" height="15" fill="rgb(230,134,26)" fg:x="1207" fg:w="1"/><text x="96.0437%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="95.7937%" y="421" width="0.0794%" height="15" fill="rgb(234,149,40)" fg:x="1207" fg:w="1"/><text x="96.0437%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="95.7937%" y="405" width="0.0794%" height="15" fill="rgb(221,122,15)" fg:x="1207" fg:w="1"/><text x="96.0437%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.7937%" y="389" width="0.0794%" height="15" fill="rgb(228,127,0)" fg:x="1207" fg:w="1"/><text x="96.0437%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7937%" y="373" width="0.0794%" height="15" fill="rgb(248,37,7)" fg:x="1207" fg:w="1"/><text x="96.0437%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9524%" y="421" width="0.0794%" height="15" fill="rgb(215,140,49)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9524%" y="405" width="0.0794%" height="15" fill="rgb(236,65,39)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9524%" y="389" width="0.0794%" height="15" fill="rgb(253,102,38)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9524%" y="373" width="0.0794%" height="15" fill="rgb(244,100,34)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9524%" y="357" width="0.0794%" height="15" fill="rgb(210,179,47)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.9524%" y="341" width="0.0794%" height="15" fill="rgb(231,41,37)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.9524%" y="325" width="0.0794%" height="15" fill="rgb(226,209,17)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.9524%" y="309" width="0.0794%" height="15" fill="rgb(231,154,20)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.9524%" y="293" width="0.0794%" height="15" fill="rgb(216,134,24)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.9524%" y="277" width="0.0794%" height="15" fill="rgb(224,71,42)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="287.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="96.0317%" y="421" width="0.0794%" height="15" fill="rgb(250,65,23)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.0317%" y="405" width="0.0794%" height="15" fill="rgb(209,160,35)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="96.0317%" y="389" width="0.0794%" height="15" fill="rgb(215,8,11)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="399.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="96.0317%" y="373" width="0.0794%" height="15" fill="rgb(227,27,12)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.0317%" y="357" width="0.0794%" height="15" fill="rgb(226,111,41)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0317%" y="341" width="0.0794%" height="15" fill="rgb(212,195,15)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="351.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="95.8730%" y="453" width="0.3175%" height="15" fill="rgb(216,191,17)" fg:x="1208" fg:w="4"/><text x="96.1230%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="95.8730%" y="437" width="0.3175%" height="15" fill="rgb(215,57,44)" fg:x="1208" fg:w="4"/><text x="96.1230%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="96.1111%" y="421" width="0.0794%" height="15" fill="rgb(209,38,4)" fg:x="1211" fg:w="1"/><text x="96.3611%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.1111%" y="405" width="0.0794%" height="15" fill="rgb(238,49,31)" fg:x="1211" fg:w="1"/><text x="96.3611%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="96.1111%" y="389" width="0.0794%" height="15" fill="rgb(219,48,39)" fg:x="1211" fg:w="1"/><text x="96.3611%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.1111%" y="373" width="0.0794%" height="15" fill="rgb(252,223,43)" fg:x="1211" fg:w="1"/><text x="96.3611%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.1905%" y="405" width="0.0794%" height="15" fill="rgb(247,205,46)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.1905%" y="389" width="0.0794%" height="15" fill="rgb(231,16,40)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.1905%" y="373" width="0.0794%" height="15" fill="rgb(231,115,5)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1905%" y="357" width="0.0794%" height="15" fill="rgb(206,127,43)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1905%" y="341" width="0.0794%" height="15" fill="rgb(218,101,9)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1905%" y="325" width="0.0794%" height="15" fill="rgb(235,138,50)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1905%" y="309" width="0.0794%" height="15" fill="rgb(214,197,52)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.1905%" y="293" width="0.0794%" height="15" fill="rgb(230,80,19)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1905%" y="277" width="0.0794%" height="15" fill="rgb(224,77,16)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.1905%" y="261" width="0.0794%" height="15" fill="rgb(246,4,13)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="271.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="96.1905%" y="453" width="0.1587%" height="15" fill="rgb(220,177,26)" fg:x="1212" fg:w="2"/><text x="96.4405%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="96.1905%" y="437" width="0.1587%" height="15" fill="rgb(215,114,45)" fg:x="1212" fg:w="2"/><text x="96.4405%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="96.1905%" y="421" width="0.1587%" height="15" fill="rgb(215,71,54)" fg:x="1212" fg:w="2"/><text x="96.4405%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="96.2698%" y="405" width="0.0794%" height="15" fill="rgb(211,155,22)" fg:x="1213" fg:w="1"/><text x="96.5198%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.2698%" y="389" width="0.0794%" height="15" fill="rgb(245,206,18)" fg:x="1213" fg:w="1"/><text x="96.5198%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.2698%" y="373" width="0.0794%" height="15" fill="rgb(248,216,48)" fg:x="1213" fg:w="1"/><text x="96.5198%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="96.2698%" y="357" width="0.0794%" height="15" fill="rgb(244,84,45)" fg:x="1213" fg:w="1"/><text x="96.5198%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2698%" y="341" width="0.0794%" height="15" fill="rgb(245,13,45)" fg:x="1213" fg:w="1"/><text x="96.5198%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2698%" y="325" width="0.0794%" height="15" fill="rgb(247,163,2)" fg:x="1213" fg:w="1"/><text x="96.5198%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2698%" y="309" width="0.0794%" height="15" fill="rgb(211,175,10)" fg:x="1213" fg:w="1"/><text x="96.5198%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2698%" y="293" width="0.0794%" height="15" fill="rgb(215,186,31)" fg:x="1213" fg:w="1"/><text x="96.5198%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2698%" y="277" width="0.0794%" height="15" fill="rgb(207,42,11)" fg:x="1213" fg:w="1"/><text x="96.5198%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (25 samples, 1.98%)</title><rect x="94.4444%" y="485" width="1.9841%" height="15" fill="rgb(224,197,20)" fg:x="1190" fg:w="25"/><text x="94.6944%" y="495.50">&lt;..</text></g><g><title>plugins_core::tools::move_between (9 samples, 0.71%)</title><rect x="95.7143%" y="469" width="0.7143%" height="15" fill="rgb(244,119,36)" fg:x="1206" fg:w="9"/><text x="95.9643%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="96.3492%" y="453" width="0.0794%" height="15" fill="rgb(250,60,27)" fg:x="1214" fg:w="1"/><text x="96.5992%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4286%" y="437" width="0.0794%" height="15" fill="rgb(252,202,1)" fg:x="1215" fg:w="1"/><text x="96.6786%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="96.5079%" y="421" width="0.2381%" height="15" fill="rgb(206,53,25)" fg:x="1216" fg:w="3"/><text x="96.7579%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="96.5079%" y="405" width="0.2381%" height="15" fill="rgb(210,88,4)" fg:x="1216" fg:w="3"/><text x="96.7579%" y="415.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="96.5079%" y="389" width="0.2381%" height="15" fill="rgb(211,144,28)" fg:x="1216" fg:w="3"/><text x="96.7579%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="96.7460%" y="405" width="0.0794%" height="15" fill="rgb(247,81,32)" fg:x="1219" fg:w="1"/><text x="96.9960%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="96.7460%" y="389" width="0.0794%" height="15" fill="rgb(225,192,11)" fg:x="1219" fg:w="1"/><text x="96.9960%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (5 samples, 0.40%)</title><rect x="96.5079%" y="437" width="0.3968%" height="15" fill="rgb(232,212,27)" fg:x="1216" fg:w="5"/><text x="96.7579%" y="447.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.16%)</title><rect x="96.7460%" y="421" width="0.1587%" height="15" fill="rgb(239,3,29)" fg:x="1219" fg:w="2"/><text x="96.9960%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="96.8254%" y="405" width="0.0794%" height="15" fill="rgb(252,225,29)" fg:x="1220" fg:w="1"/><text x="97.0754%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.8254%" y="389" width="0.0794%" height="15" fill="rgb(205,151,9)" fg:x="1220" fg:w="1"/><text x="97.0754%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="96.8254%" y="373" width="0.0794%" height="15" fill="rgb(216,171,47)" fg:x="1220" fg:w="1"/><text x="97.0754%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.8254%" y="357" width="0.0794%" height="15" fill="rgb(206,181,1)" fg:x="1220" fg:w="1"/><text x="97.0754%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.8254%" y="341" width="0.0794%" height="15" fill="rgb(232,218,10)" fg:x="1220" fg:w="1"/><text x="97.0754%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9048%" y="341" width="0.0794%" height="15" fill="rgb(244,222,51)" fg:x="1221" fg:w="1"/><text x="97.1548%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9048%" y="325" width="0.0794%" height="15" fill="rgb(252,215,16)" fg:x="1221" fg:w="1"/><text x="97.1548%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="96.9841%" y="341" width="0.0794%" height="15" fill="rgb(212,130,13)" fg:x="1222" fg:w="1"/><text x="97.2341%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.9841%" y="325" width="0.0794%" height="15" fill="rgb(227,103,37)" fg:x="1222" fg:w="1"/><text x="97.2341%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.9841%" y="309" width="0.0794%" height="15" fill="rgb(249,48,15)" fg:x="1222" fg:w="1"/><text x="97.2341%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.9841%" y="293" width="0.0794%" height="15" fill="rgb(225,96,9)" fg:x="1222" fg:w="1"/><text x="97.2341%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9841%" y="277" width="0.0794%" height="15" fill="rgb(213,81,41)" fg:x="1222" fg:w="1"/><text x="97.2341%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="96.9048%" y="405" width="0.2381%" height="15" fill="rgb(230,15,12)" fg:x="1221" fg:w="3"/><text x="97.1548%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="96.9048%" y="389" width="0.2381%" height="15" fill="rgb(218,106,37)" fg:x="1221" fg:w="3"/><text x="97.1548%" y="399.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="96.9048%" y="373" width="0.2381%" height="15" fill="rgb(223,172,47)" fg:x="1221" fg:w="3"/><text x="97.1548%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="96.9048%" y="357" width="0.2381%" height="15" fill="rgb(246,180,49)" fg:x="1221" fg:w="3"/><text x="97.1548%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.0635%" y="341" width="0.0794%" height="15" fill="rgb(231,63,37)" fg:x="1223" fg:w="1"/><text x="97.3135%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0635%" y="325" width="0.0794%" height="15" fill="rgb(235,70,40)" fg:x="1223" fg:w="1"/><text x="97.3135%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (11 samples, 0.87%)</title><rect x="96.4286%" y="469" width="0.8730%" height="15" fill="rgb(250,54,26)" fg:x="1215" fg:w="11"/><text x="96.6786%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (11 samples, 0.87%)</title><rect x="96.4286%" y="453" width="0.8730%" height="15" fill="rgb(214,190,1)" fg:x="1215" fg:w="11"/><text x="96.6786%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.40%)</title><rect x="96.9048%" y="437" width="0.3968%" height="15" fill="rgb(212,40,35)" fg:x="1221" fg:w="5"/><text x="97.1548%" y="447.50"></text></g><g><title>plugins_core::finding::matches_description (5 samples, 0.40%)</title><rect x="96.9048%" y="421" width="0.3968%" height="15" fill="rgb(239,183,47)" fg:x="1221" fg:w="5"/><text x="97.1548%" y="431.50"></text></g><g><title>plugins_core::finding::matches_string (2 samples, 0.16%)</title><rect x="97.1429%" y="405" width="0.1587%" height="15" fill="rgb(211,171,49)" fg:x="1224" fg:w="2"/><text x="97.3929%" y="415.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.16%)</title><rect x="97.1429%" y="389" width="0.1587%" height="15" fill="rgb(249,186,27)" fg:x="1224" fg:w="2"/><text x="97.3929%" y="399.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.08%)</title><rect x="97.2222%" y="373" width="0.0794%" height="15" fill="rgb(223,23,48)" fg:x="1225" fg:w="1"/><text x="97.4722%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="97.2222%" y="357" width="0.0794%" height="15" fill="rgb(209,203,21)" fg:x="1225" fg:w="1"/><text x="97.4722%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2222%" y="341" width="0.0794%" height="15" fill="rgb(229,33,27)" fg:x="1225" fg:w="1"/><text x="97.4722%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2222%" y="325" width="0.0794%" height="15" fill="rgb(207,8,53)" fg:x="1225" fg:w="1"/><text x="97.4722%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.2222%" y="309" width="0.0794%" height="15" fill="rgb(221,42,0)" fg:x="1225" fg:w="1"/><text x="97.4722%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.2222%" y="293" width="0.0794%" height="15" fill="rgb(223,115,3)" fg:x="1225" fg:w="1"/><text x="97.4722%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.2222%" y="277" width="0.0794%" height="15" fill="rgb(239,35,26)" fg:x="1225" fg:w="1"/><text x="97.4722%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.2222%" y="261" width="0.0794%" height="15" fill="rgb(233,22,9)" fg:x="1225" fg:w="1"/><text x="97.4722%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.3016%" y="437" width="0.0794%" height="15" fill="rgb(236,221,48)" fg:x="1226" fg:w="1"/><text x="97.5516%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="97.3810%" y="437" width="0.0794%" height="15" fill="rgb(235,52,30)" fg:x="1227" fg:w="1"/><text x="97.6310%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="97.3016%" y="453" width="0.3175%" height="15" fill="rgb(238,133,51)" fg:x="1226" fg:w="4"/><text x="97.5516%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.4603%" y="437" width="0.1587%" height="15" fill="rgb(213,122,23)" fg:x="1228" fg:w="2"/><text x="97.7103%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.4603%" y="421" width="0.1587%" height="15" fill="rgb(225,8,15)" fg:x="1228" fg:w="2"/><text x="97.7103%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.4603%" y="405" width="0.1587%" height="15" fill="rgb(219,126,35)" fg:x="1228" fg:w="2"/><text x="97.7103%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.4603%" y="389" width="0.1587%" height="15" fill="rgb(246,113,21)" fg:x="1228" fg:w="2"/><text x="97.7103%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5397%" y="373" width="0.0794%" height="15" fill="rgb(241,193,32)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5397%" y="357" width="0.0794%" height="15" fill="rgb(218,99,18)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.5397%" y="341" width="0.0794%" height="15" fill="rgb(225,114,4)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.5397%" y="325" width="0.0794%" height="15" fill="rgb(235,0,15)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.5397%" y="309" width="0.0794%" height="15" fill="rgb(247,45,27)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5397%" y="293" width="0.0794%" height="15" fill="rgb(249,88,53)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5397%" y="277" width="0.0794%" height="15" fill="rgb(207,58,45)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.5397%" y="261" width="0.0794%" height="15" fill="rgb(216,7,11)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.5397%" y="245" width="0.0794%" height="15" fill="rgb(230,40,33)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.5397%" y="229" width="0.0794%" height="15" fill="rgb(232,24,46)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.5397%" y="213" width="0.0794%" height="15" fill="rgb(219,222,45)" fg:x="1229" fg:w="1"/><text x="97.7897%" y="223.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (5 samples, 0.40%)</title><rect x="97.3016%" y="469" width="0.3968%" height="15" fill="rgb(229,85,44)" fg:x="1226" fg:w="5"/><text x="97.5516%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.6190%" y="453" width="0.0794%" height="15" fill="rgb(243,71,36)" fg:x="1230" fg:w="1"/><text x="97.8690%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.6190%" y="437" width="0.0794%" height="15" fill="rgb(230,203,45)" fg:x="1230" fg:w="1"/><text x="97.8690%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.6190%" y="421" width="0.0794%" height="15" fill="rgb(224,77,49)" fg:x="1230" fg:w="1"/><text x="97.8690%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6190%" y="405" width="0.0794%" height="15" fill="rgb(210,186,47)" fg:x="1230" fg:w="1"/><text x="97.8690%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6190%" y="389" width="0.0794%" height="15" fill="rgb(232,146,10)" fg:x="1230" fg:w="1"/><text x="97.8690%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6190%" y="373" width="0.0794%" height="15" fill="rgb(236,185,51)" fg:x="1230" fg:w="1"/><text x="97.8690%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6190%" y="357" width="0.0794%" height="15" fill="rgb(223,206,43)" fg:x="1230" fg:w="1"/><text x="97.8690%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6190%" y="341" width="0.0794%" height="15" fill="rgb(227,212,9)" fg:x="1230" fg:w="1"/><text x="97.8690%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6984%" y="357" width="0.0794%" height="15" fill="rgb(205,82,3)" fg:x="1231" fg:w="1"/><text x="97.9484%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6984%" y="341" width="0.0794%" height="15" fill="rgb(214,2,27)" fg:x="1231" fg:w="1"/><text x="97.9484%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6984%" y="325" width="0.0794%" height="15" fill="rgb(241,37,22)" fg:x="1231" fg:w="1"/><text x="97.9484%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6984%" y="309" width="0.0794%" height="15" fill="rgb(219,182,1)" fg:x="1231" fg:w="1"/><text x="97.9484%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.6984%" y="373" width="0.1587%" height="15" fill="rgb(208,224,23)" fg:x="1231" fg:w="2"/><text x="97.9484%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7778%" y="357" width="0.0794%" height="15" fill="rgb(219,121,32)" fg:x="1232" fg:w="1"/><text x="98.0278%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7778%" y="341" width="0.0794%" height="15" fill="rgb(253,13,40)" fg:x="1232" fg:w="1"/><text x="98.0278%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.7778%" y="325" width="0.0794%" height="15" fill="rgb(233,6,28)" fg:x="1232" fg:w="1"/><text x="98.0278%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.7778%" y="309" width="0.0794%" height="15" fill="rgb(233,73,8)" fg:x="1232" fg:w="1"/><text x="98.0278%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.7778%" y="293" width="0.0794%" height="15" fill="rgb(223,48,27)" fg:x="1232" fg:w="1"/><text x="98.0278%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.7778%" y="277" width="0.0794%" height="15" fill="rgb(231,98,37)" fg:x="1232" fg:w="1"/><text x="98.0278%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.7778%" y="261" width="0.0794%" height="15" fill="rgb(249,43,32)" fg:x="1232" fg:w="1"/><text x="98.0278%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="97.6984%" y="453" width="0.2381%" height="15" fill="rgb(246,184,20)" fg:x="1231" fg:w="3"/><text x="97.9484%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="97.6984%" y="437" width="0.2381%" height="15" fill="rgb(251,216,0)" fg:x="1231" fg:w="3"/><text x="97.9484%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="97.6984%" y="421" width="0.2381%" height="15" fill="rgb(238,41,42)" fg:x="1231" fg:w="3"/><text x="97.9484%" y="431.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="97.6984%" y="405" width="0.2381%" height="15" fill="rgb(227,224,50)" fg:x="1231" fg:w="3"/><text x="97.9484%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.6984%" y="389" width="0.2381%" height="15" fill="rgb(237,189,18)" fg:x="1231" fg:w="3"/><text x="97.9484%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.8571%" y="373" width="0.0794%" height="15" fill="rgb(238,108,6)" fg:x="1233" fg:w="1"/><text x="98.1071%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.8571%" y="357" width="0.0794%" height="15" fill="rgb(214,197,53)" fg:x="1233" fg:w="1"/><text x="98.1071%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.8571%" y="341" width="0.0794%" height="15" fill="rgb(206,183,15)" fg:x="1233" fg:w="1"/><text x="98.1071%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.8571%" y="325" width="0.0794%" height="15" fill="rgb(208,130,32)" fg:x="1233" fg:w="1"/><text x="98.1071%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.8571%" y="309" width="0.0794%" height="15" fill="rgb(226,128,52)" fg:x="1233" fg:w="1"/><text x="98.1071%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.9365%" y="421" width="0.1587%" height="15" fill="rgb(231,183,21)" fg:x="1234" fg:w="2"/><text x="98.1865%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.9365%" y="405" width="0.1587%" height="15" fill="rgb(216,8,35)" fg:x="1234" fg:w="2"/><text x="98.1865%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0159%" y="389" width="0.0794%" height="15" fill="rgb(224,221,8)" fg:x="1235" fg:w="1"/><text x="98.2659%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="98.0952%" y="421" width="0.0794%" height="15" fill="rgb(210,111,33)" fg:x="1236" fg:w="1"/><text x="98.3452%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0952%" y="405" width="0.0794%" height="15" fill="rgb(232,211,38)" fg:x="1236" fg:w="1"/><text x="98.3452%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0952%" y="389" width="0.0794%" height="15" fill="rgb(216,190,27)" fg:x="1236" fg:w="1"/><text x="98.3452%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0952%" y="373" width="0.0794%" height="15" fill="rgb(237,215,27)" fg:x="1236" fg:w="1"/><text x="98.3452%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="97.9365%" y="453" width="0.3175%" height="15" fill="rgb(251,121,39)" fg:x="1234" fg:w="4"/><text x="98.1865%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="97.9365%" y="437" width="0.3175%" height="15" fill="rgb(244,21,14)" fg:x="1234" fg:w="4"/><text x="98.1865%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1746%" y="421" width="0.0794%" height="15" fill="rgb(221,192,22)" fg:x="1237" fg:w="1"/><text x="98.4246%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1746%" y="405" width="0.0794%" height="15" fill="rgb(251,190,28)" fg:x="1237" fg:w="1"/><text x="98.4246%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1746%" y="389" width="0.0794%" height="15" fill="rgb(217,4,51)" fg:x="1237" fg:w="1"/><text x="98.4246%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1746%" y="373" width="0.0794%" height="15" fill="rgb(215,183,49)" fg:x="1237" fg:w="1"/><text x="98.4246%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.1746%" y="357" width="0.0794%" height="15" fill="rgb(249,28,49)" fg:x="1237" fg:w="1"/><text x="98.4246%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2540%" y="389" width="0.0794%" height="15" fill="rgb(214,42,20)" fg:x="1238" fg:w="1"/><text x="98.5040%" y="399.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="98.2540%" y="453" width="0.1587%" height="15" fill="rgb(222,77,27)" fg:x="1238" fg:w="2"/><text x="98.5040%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="98.2540%" y="437" width="0.1587%" height="15" fill="rgb(252,198,32)" fg:x="1238" fg:w="2"/><text x="98.5040%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="98.2540%" y="421" width="0.1587%" height="15" fill="rgb(207,140,50)" fg:x="1238" fg:w="2"/><text x="98.5040%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="98.2540%" y="405" width="0.1587%" height="15" fill="rgb(251,170,16)" fg:x="1238" fg:w="2"/><text x="98.5040%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.3333%" y="389" width="0.0794%" height="15" fill="rgb(249,111,45)" fg:x="1239" fg:w="1"/><text x="98.5833%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3333%" y="373" width="0.0794%" height="15" fill="rgb(241,99,35)" fg:x="1239" fg:w="1"/><text x="98.5833%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="98.4127%" y="453" width="0.0794%" height="15" fill="rgb(216,188,17)" fg:x="1240" fg:w="1"/><text x="98.6627%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="98.4127%" y="437" width="0.0794%" height="15" fill="rgb(254,209,53)" fg:x="1240" fg:w="1"/><text x="98.6627%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="98.4127%" y="421" width="0.0794%" height="15" fill="rgb(231,105,41)" fg:x="1240" fg:w="1"/><text x="98.6627%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.4127%" y="405" width="0.0794%" height="15" fill="rgb(242,93,23)" fg:x="1240" fg:w="1"/><text x="98.6627%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.4127%" y="389" width="0.0794%" height="15" fill="rgb(218,159,11)" fg:x="1240" fg:w="1"/><text x="98.6627%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.4127%" y="373" width="0.0794%" height="15" fill="rgb(209,90,32)" fg:x="1240" fg:w="1"/><text x="98.6627%" y="383.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="98.4127%" y="357" width="0.0794%" height="15" fill="rgb(253,118,46)" fg:x="1240" fg:w="1"/><text x="98.6627%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="98.4921%" y="437" width="0.0794%" height="15" fill="rgb(219,121,2)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.4921%" y="421" width="0.0794%" height="15" fill="rgb(207,57,47)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="98.4921%" y="405" width="0.0794%" height="15" fill="rgb(235,113,43)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4921%" y="389" width="0.0794%" height="15" fill="rgb(238,30,50)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4921%" y="373" width="0.0794%" height="15" fill="rgb(237,47,29)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.4921%" y="357" width="0.0794%" height="15" fill="rgb(245,102,24)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.4921%" y="341" width="0.0794%" height="15" fill="rgb(245,152,9)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.4921%" y="325" width="0.0794%" height="15" fill="rgb(223,213,17)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.4921%" y="309" width="0.0794%" height="15" fill="rgb(241,164,4)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.4921%" y="293" width="0.0794%" height="15" fill="rgb(205,209,31)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.4921%" y="277" width="0.0794%" height="15" fill="rgb(248,173,2)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.4921%" y="261" width="0.0794%" height="15" fill="rgb(207,67,32)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.4921%" y="245" width="0.0794%" height="15" fill="rgb(239,109,13)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.4921%" y="229" width="0.0794%" height="15" fill="rgb(233,123,24)" fg:x="1241" fg:w="1"/><text x="98.7421%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (201 samples, 15.95%)</title><rect x="82.6984%" y="645" width="15.9524%" height="15" fill="rgb(232,120,19)" fg:x="1042" fg:w="201"/><text x="82.9484%" y="655.50">&lt;engine::session::Session..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (201 samples, 15.95%)</title><rect x="82.6984%" y="629" width="15.9524%" height="15" fill="rgb(225,17,50)" fg:x="1042" fg:w="201"/><text x="82.9484%" y="639.50">&lt;engine::perform::Standar..</text></g><g><title>kernel::plugins::mw::apply_middleware (54 samples, 4.29%)</title><rect x="94.3651%" y="613" width="4.2857%" height="15" fill="rgb(239,216,13)" fg:x="1189" fg:w="54"/><text x="94.6151%" y="623.50">kerne..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (54 samples, 4.29%)</title><rect x="94.3651%" y="597" width="4.2857%" height="15" fill="rgb(232,213,26)" fg:x="1189" fg:w="54"/><text x="94.6151%" y="607.50">kerne..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (54 samples, 4.29%)</title><rect x="94.3651%" y="581" width="4.2857%" height="15" fill="rgb(244,59,39)" fg:x="1189" fg:w="54"/><text x="94.6151%" y="591.50">&lt;plug..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (54 samples, 4.29%)</title><rect x="94.3651%" y="565" width="4.2857%" height="15" fill="rgb(234,61,35)" fg:x="1189" fg:w="54"/><text x="94.6151%" y="575.50">kerne..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (54 samples, 4.29%)</title><rect x="94.3651%" y="549" width="4.2857%" height="15" fill="rgb(245,94,24)" fg:x="1189" fg:w="54"/><text x="94.6151%" y="559.50">core:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (54 samples, 4.29%)</title><rect x="94.3651%" y="533" width="4.2857%" height="15" fill="rgb(238,190,44)" fg:x="1189" fg:w="54"/><text x="94.6151%" y="543.50">kerne..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (54 samples, 4.29%)</title><rect x="94.3651%" y="517" width="4.2857%" height="15" fill="rgb(205,145,25)" fg:x="1189" fg:w="54"/><text x="94.6151%" y="527.50">core:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 4.29%)</title><rect x="94.3651%" y="501" width="4.2857%" height="15" fill="rgb(229,158,41)" fg:x="1189" fg:w="54"/><text x="94.6151%" y="511.50">&lt;allo..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (28 samples, 2.22%)</title><rect x="96.4286%" y="485" width="2.2222%" height="15" fill="rgb(224,121,5)" fg:x="1215" fg:w="28"/><text x="96.6786%" y="495.50">&lt;..</text></g><g><title>plugins_core::tools::move_between (12 samples, 0.95%)</title><rect x="97.6984%" y="469" width="0.9524%" height="15" fill="rgb(238,168,35)" fg:x="1231" fg:w="12"/><text x="97.9484%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="98.4921%" y="453" width="0.1587%" height="15" fill="rgb(231,11,42)" fg:x="1241" fg:w="2"/><text x="98.7421%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="98.5714%" y="437" width="0.0794%" height="15" fill="rgb(241,105,19)" fg:x="1242" fg:w="1"/><text x="98.8214%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.5714%" y="421" width="0.0794%" height="15" fill="rgb(253,210,20)" fg:x="1242" fg:w="1"/><text x="98.8214%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.6508%" y="565" width="0.0794%" height="15" fill="rgb(215,72,52)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.6508%" y="549" width="0.0794%" height="15" fill="rgb(223,225,30)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.6508%" y="533" width="0.0794%" height="15" fill="rgb(220,138,44)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6508%" y="517" width="0.0794%" height="15" fill="rgb(206,128,12)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6508%" y="501" width="0.0794%" height="15" fill="rgb(245,194,0)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6508%" y="485" width="0.0794%" height="15" fill="rgb(235,175,41)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6508%" y="469" width="0.0794%" height="15" fill="rgb(216,15,48)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.6508%" y="453" width="0.0794%" height="15" fill="rgb(223,179,5)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6508%" y="437" width="0.0794%" height="15" fill="rgb(220,80,15)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6508%" y="421" width="0.0794%" height="15" fill="rgb(228,20,30)" fg:x="1243" fg:w="1"/><text x="98.9008%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="98.6508%" y="597" width="0.1587%" height="15" fill="rgb(229,194,27)" fg:x="1243" fg:w="2"/><text x="98.9008%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="98.6508%" y="581" width="0.1587%" height="15" fill="rgb(238,202,32)" fg:x="1243" fg:w="2"/><text x="98.9008%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.7302%" y="565" width="0.0794%" height="15" fill="rgb(207,82,27)" fg:x="1244" fg:w="1"/><text x="98.9802%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.7302%" y="549" width="0.0794%" height="15" fill="rgb(246,122,46)" fg:x="1244" fg:w="1"/><text x="98.9802%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.7302%" y="533" width="0.0794%" height="15" fill="rgb(220,101,26)" fg:x="1244" fg:w="1"/><text x="98.9802%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7302%" y="517" width="0.0794%" height="15" fill="rgb(251,63,9)" fg:x="1244" fg:w="1"/><text x="98.9802%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7302%" y="501" width="0.0794%" height="15" fill="rgb(235,186,5)" fg:x="1244" fg:w="1"/><text x="98.9802%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7302%" y="485" width="0.0794%" height="15" fill="rgb(241,139,37)" fg:x="1244" fg:w="1"/><text x="98.9802%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="98.7302%" y="469" width="0.0794%" height="15" fill="rgb(252,177,51)" fg:x="1244" fg:w="1"/><text x="98.9802%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="98.7302%" y="453" width="0.0794%" height="15" fill="rgb(214,131,22)" fg:x="1244" fg:w="1"/><text x="98.9802%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8889%" y="469" width="0.0794%" height="15" fill="rgb(246,53,19)" fg:x="1246" fg:w="1"/><text x="99.1389%" y="479.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="98.8095%" y="581" width="0.2381%" height="15" fill="rgb(231,158,27)" fg:x="1245" fg:w="3"/><text x="99.0595%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.8095%" y="565" width="0.2381%" height="15" fill="rgb(226,166,46)" fg:x="1245" fg:w="3"/><text x="99.0595%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.8095%" y="549" width="0.2381%" height="15" fill="rgb(218,178,26)" fg:x="1245" fg:w="3"/><text x="99.0595%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.8095%" y="533" width="0.2381%" height="15" fill="rgb(206,25,39)" fg:x="1245" fg:w="3"/><text x="99.0595%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8889%" y="517" width="0.1587%" height="15" fill="rgb(232,218,41)" fg:x="1246" fg:w="2"/><text x="99.1389%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.8889%" y="501" width="0.1587%" height="15" fill="rgb(212,151,15)" fg:x="1246" fg:w="2"/><text x="99.1389%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8889%" y="485" width="0.1587%" height="15" fill="rgb(213,49,22)" fg:x="1246" fg:w="2"/><text x="99.1389%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9683%" y="469" width="0.0794%" height="15" fill="rgb(247,116,21)" fg:x="1247" fg:w="1"/><text x="99.2183%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9683%" y="453" width="0.0794%" height="15" fill="rgb(248,98,14)" fg:x="1247" fg:w="1"/><text x="99.2183%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9683%" y="437" width="0.0794%" height="15" fill="rgb(247,72,6)" fg:x="1247" fg:w="1"/><text x="99.2183%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9683%" y="421" width="0.0794%" height="15" fill="rgb(213,9,22)" fg:x="1247" fg:w="1"/><text x="99.2183%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0476%" y="469" width="0.0794%" height="15" fill="rgb(213,122,30)" fg:x="1248" fg:w="1"/><text x="99.2976%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0476%" y="453" width="0.0794%" height="15" fill="rgb(244,11,30)" fg:x="1248" fg:w="1"/><text x="99.2976%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0476%" y="437" width="0.0794%" height="15" fill="rgb(236,102,26)" fg:x="1248" fg:w="1"/><text x="99.2976%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="99.1270%" y="405" width="0.0794%" height="15" fill="rgb(231,166,37)" fg:x="1249" fg:w="1"/><text x="99.3770%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.2063%" y="405" width="0.0794%" height="15" fill="rgb(220,224,29)" fg:x="1250" fg:w="1"/><text x="99.4563%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2063%" y="389" width="0.0794%" height="15" fill="rgb(227,30,40)" fg:x="1250" fg:w="1"/><text x="99.4563%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.0476%" y="501" width="0.3175%" height="15" fill="rgb(235,8,36)" fg:x="1248" fg:w="4"/><text x="99.2976%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.0476%" y="485" width="0.3175%" height="15" fill="rgb(232,175,19)" fg:x="1248" fg:w="4"/><text x="99.2976%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="99.1270%" y="469" width="0.2381%" height="15" fill="rgb(217,114,10)" fg:x="1249" fg:w="3"/><text x="99.3770%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.1270%" y="453" width="0.2381%" height="15" fill="rgb(214,112,41)" fg:x="1249" fg:w="3"/><text x="99.3770%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.1270%" y="437" width="0.2381%" height="15" fill="rgb(226,69,34)" fg:x="1249" fg:w="3"/><text x="99.3770%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.1270%" y="421" width="0.2381%" height="15" fill="rgb(219,23,46)" fg:x="1249" fg:w="3"/><text x="99.3770%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2857%" y="405" width="0.0794%" height="15" fill="rgb(233,3,8)" fg:x="1251" fg:w="1"/><text x="99.5357%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.79%)</title><rect x="98.6508%" y="629" width="0.7937%" height="15" fill="rgb(251,34,42)" fg:x="1243" fg:w="10"/><text x="98.9008%" y="639.50"></text></g><g><title>engine::internal::Entities::add_persisted (10 samples, 0.79%)</title><rect x="98.6508%" y="613" width="0.7937%" height="15" fill="rgb(215,84,9)" fg:x="1243" fg:w="10"/><text x="98.9008%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::from_str (8 samples, 0.63%)</title><rect x="98.8095%" y="597" width="0.6349%" height="15" fill="rgb(231,75,52)" fg:x="1245" fg:w="8"/><text x="99.0595%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="99.0476%" y="581" width="0.3968%" height="15" fill="rgb(247,201,31)" fg:x="1248" fg:w="5"/><text x="99.2976%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.0476%" y="565" width="0.3968%" height="15" fill="rgb(215,171,37)" fg:x="1248" fg:w="5"/><text x="99.2976%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="99.0476%" y="549" width="0.3968%" height="15" fill="rgb(208,208,44)" fg:x="1248" fg:w="5"/><text x="99.2976%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.0476%" y="533" width="0.3968%" height="15" fill="rgb(247,146,54)" fg:x="1248" fg:w="5"/><text x="99.2976%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="99.0476%" y="517" width="0.3968%" height="15" fill="rgb(209,0,40)" fg:x="1248" fg:w="5"/><text x="99.2976%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3651%" y="501" width="0.0794%" height="15" fill="rgb(221,59,4)" fg:x="1252" fg:w="1"/><text x="99.6151%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.3651%" y="485" width="0.0794%" height="15" fill="rgb(227,153,47)" fg:x="1252" fg:w="1"/><text x="99.6151%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3651%" y="469" width="0.0794%" height="15" fill="rgb(253,225,10)" fg:x="1252" fg:w="1"/><text x="99.6151%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (11 samples, 0.87%)</title><rect x="98.6508%" y="645" width="0.8730%" height="15" fill="rgb(237,201,24)" fg:x="1243" fg:w="11"/><text x="98.9008%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.4444%" y="629" width="0.0794%" height="15" fill="rgb(238,23,27)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.4444%" y="613" width="0.0794%" height="15" fill="rgb(236,54,50)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.4444%" y="597" width="0.0794%" height="15" fill="rgb(216,106,0)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.4444%" y="581" width="0.0794%" height="15" fill="rgb(234,179,35)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.4444%" y="565" width="0.0794%" height="15" fill="rgb(210,35,8)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.4444%" y="549" width="0.0794%" height="15" fill="rgb(238,144,16)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.4444%" y="533" width="0.0794%" height="15" fill="rgb(244,54,7)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.4444%" y="517" width="0.0794%" height="15" fill="rgb(233,225,40)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.4444%" y="501" width="0.0794%" height="15" fill="rgb(249,227,23)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5238%" y="613" width="0.0794%" height="15" fill="rgb(215,42,44)" fg:x="1254" fg:w="1"/><text x="99.7738%" y="623.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="99.6032%" y="581" width="0.1587%" height="15" fill="rgb(220,145,40)" fg:x="1255" fg:w="2"/><text x="99.8532%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6032%" y="565" width="0.1587%" height="15" fill="rgb(228,218,40)" fg:x="1255" fg:w="2"/><text x="99.8532%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6032%" y="549" width="0.1587%" height="15" fill="rgb(217,52,54)" fg:x="1255" fg:w="2"/><text x="99.8532%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (5 samples, 0.40%)</title><rect x="99.5238%" y="645" width="0.3968%" height="15" fill="rgb(223,90,22)" fg:x="1254" fg:w="5"/><text x="99.7738%" y="655.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="99.5238%" y="629" width="0.3968%" height="15" fill="rgb(232,114,35)" fg:x="1254" fg:w="5"/><text x="99.7738%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="99.6032%" y="613" width="0.3175%" height="15" fill="rgb(227,223,50)" fg:x="1255" fg:w="4"/><text x="99.8532%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="99.6032%" y="597" width="0.3175%" height="15" fill="rgb(249,175,7)" fg:x="1255" fg:w="4"/><text x="99.8532%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.7619%" y="581" width="0.1587%" height="15" fill="rgb(249,173,15)" fg:x="1257" fg:w="2"/><text x="100.0119%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.7619%" y="565" width="0.1587%" height="15" fill="rgb(240,131,6)" fg:x="1257" fg:w="2"/><text x="100.0119%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.7619%" y="549" width="0.1587%" height="15" fill="rgb(246,117,16)" fg:x="1257" fg:w="2"/><text x="100.0119%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8413%" y="533" width="0.0794%" height="15" fill="rgb(209,32,16)" fg:x="1258" fg:w="1"/><text x="100.0913%" y="543.50"></text></g><g><title>all (1,260 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(207,45,44)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="1023.50"></text></g><g><title>simple-484c7248 (1,260 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(210,66,3)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="1007.50">simple-484c7248</text></g><g><title>_start (1,260 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(246,133,30)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="991.50">_start</text></g><g><title>__libc_start_main (1,260 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(224,37,17)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="975.50">__libc_start_main</text></g><g><title>main (1,260 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(237,218,18)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="959.50">main</text></g><g><title>std::rt::lang_start_internal (1,260 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(240,57,8)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,260 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(231,51,38)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,260 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(230,89,50)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,260 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(234,103,34)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,260 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(220,45,48)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,260 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(250,210,3)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,260 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(210,118,12)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,260 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(238,154,21)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,260 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(227,220,4)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,260 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(207,179,27)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="799.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,260 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(240,111,30)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,260 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(251,29,1)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="767.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,260 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(224,141,39)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="751.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,260 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(207,98,26)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="735.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (358 samples, 28.41%)</title><rect x="71.5873%" y="709" width="28.4127%" height="15" fill="rgb(221,37,6)" fg:x="902" fg:w="358"/><text x="71.8373%" y="719.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criter..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (358 samples, 28.41%)</title><rect x="71.5873%" y="693" width="28.4127%" height="15" fill="rgb(217,32,44)" fg:x="902" fg:w="358"/><text x="71.8373%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (358 samples, 28.41%)</title><rect x="71.5873%" y="677" width="28.4127%" height="15" fill="rgb(253,149,2)" fg:x="902" fg:w="358"/><text x="71.8373%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (218 samples, 17.30%)</title><rect x="82.6984%" y="661" width="17.3016%" height="15" fill="rgb(220,165,39)" fg:x="1042" fg:w="218"/><text x="82.9484%" y="671.50">engine::session::Session::e..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9206%" y="645" width="0.0794%" height="15" fill="rgb(235,33,48)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.9206%" y="629" width="0.0794%" height="15" fill="rgb(221,89,6)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9206%" y="613" width="0.0794%" height="15" fill="rgb(215,214,6)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9206%" y="597" width="0.0794%" height="15" fill="rgb(241,1,30)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.9206%" y="581" width="0.0794%" height="15" fill="rgb(211,140,32)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="591.50"></text></g></svg></svg>